/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:10:55 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl doit_97
.hidden doit_97
doit_97:
L_348403:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_348520
L_348404:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521600
L_348405:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_348407
L_348408:
	decl %ecx
	jo L_348409
L_348410:
	movq $0x1,0x10(%rbp)
loop_3641:
	cmpl $0x0,%ecx
	jl L_521569
L_348411:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x38(%rbp)
	movslq %ecx,%r15
	salq $0x4,%r15
	movq 0x28(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_348412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_5
.p2align 0x4
L_521569:
L_348446:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_521597
L_348447:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_348448:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521596
.p2align 0x4,,0x7
L_348449:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_521570
L_348450:
	movq %r15,0x40(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movl %r15d,0x38(%rbp)
	jmp L_348448
.p2align 0x4
L_521570:
L_348451:
	movq %r15,0x28(%rbp)
L_348452:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_348482
L_348453:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
.p2align 0x4,,0x7
L_348454:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_348407
L_348456:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3642:
	cmpl %ecx,%ebx
	je L_521592
L_348457:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_521591
L_348459:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x40(%rbp),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r11)
	je L_521572
L_348460:
	incl %ebx
	jo L_521571
L_348461:
	jmp loop_3642
.p2align 0x4
L_521571:
L_348409:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521572:
L_348462:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521590
.p2align 0x4,,0x7
L_348463:
	movl $0x1,%ecx
L_348464:
	movq $0x1409,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movl %ecx,0x0(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x10(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x40(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_521589
L_348466:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_521588
L_348467:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_348469:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_348470
L_348502:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCBD,%r13
	jne L_348470
L_348503:
	movq 0x0(%r14),%r13
	cmpq %r13,0x18(%rbp)
	je L_521583
L_348470:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_348409
L_348471:
	cmpq $0x1,%r15
	je L_521573
L_348472:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_348469
.p2align 0x4
L_521573:
L_348473:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521581
.p2align 0x4,,0x7
L_348474:
	movl 0x40(%rbp),%ecx
L_348475:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_521580
L_348477:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_348479
L_348499:
	movl %ecx,0x0(%r15)
L_348479:
	movq $0x197B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_521574
L_348480:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_348454
.p2align 0x4
L_521574:
L_348482:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x8(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_348407
L_348484:
	cmpl $0x0,%r13d
	jl L_521577
L_348485:
	movl $0x0,0xC(%rbp)
loop_3643:
	movl 0x8(%rbp),%r15d
	cmpl %r15d,0xC(%rbp)
	jl L_521575
L_348486:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521575:
L_348487:
	movslq 0xC(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_521576
L_348489:
	movl %r14d,0x48(%rbp)
	movq $0x3FB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_348490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_521576:
L_348407:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521577:
L_348498:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521580:
L_348476:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521581:
L_348500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_348501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348501
.p2align 0x4
.long 0x1342
L_348501:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_348474
.p2align 0x4
L_521583:
L_348505:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_348476
L_348506:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_521584
L_348508:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521584:
L_348507:
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521588:
L_348509:
	xorl %ecx,%ecx
	jmp L_348475
.p2align 0x4
L_521589:
L_348465:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521590:
L_348510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_348511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348511
.p2align 0x4
.long 0x63B
L_348511:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_348463
.p2align 0x4
L_521591:
L_348458:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521592:
L_348512:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521593
.p2align 0x4,,0x7
L_348513:
	xorl %ecx,%ecx
	jmp L_348464
.p2align 0x4
L_521593:
L_348514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_348515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348515
.p2align 0x4
.long 0x63B
L_348515:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_348513
.p2align 0x4
L_521596:
L_348517:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_348518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348518
.p2align 0x4
.long 0x19D7
L_348518:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_348449
.p2align 0x4
L_521597:
L_348519:
	movq $0x1,0x28(%rbp)
	jmp L_348452
.p2align 0x4
L_521600:
L_348520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_348521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348521
.p2align 0x4
.long 0x63C
L_348521:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_348405
.p2align 0x4
.long 0x4A3F
L_348412:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348413
L_348444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_348445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348445
.p2align 0x4
.long 0x19D7
L_348445:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_348413:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_521602
L_348414:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x10(%rbp)
	movl 0x38(%rbp),%ecx
	jmp loop_3641
.p2align 0x4
L_521602:
L_348415:
	movq (globalObjptr+0xDFE0)(%rip),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_348416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A40
L_348490:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348491
L_348496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_348497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348497
.p2align 0x4
.long 0x658
L_348497:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_348491:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0xC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x40,%rbp
	leaq (L_348492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doit_97
.p2align 0x4
.long 0x1
L_348416:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_348417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x716
L_348492:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348493
L_348494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_348495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348495
.p2align 0x4
.long 0x717
L_348495:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_348493:
	incl 0xC(%rbp)
	jmp loop_3643
.p2align 0x4
.long 0x4AF
L_348417:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF80)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_348418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_348418:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_348419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_348419:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348420
L_348442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_348443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348443
.p2align 0x4
.long 0x4AE
L_348443:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_348420:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_348421:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_348409
L_348422:
	cmpq $0x1,%r14
	je L_521606
L_348423:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_348421
.p2align 0x4
L_521606:
L_348424:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348425
L_348440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_348441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348441
.p2align 0x4
.long 0x4E6
L_348441:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_348425:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_521607
L_348426:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_475:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_521607:
L_348439:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_475
.p2align 0x4
.long 0x1
rev_478:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_521613
L_348427:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_348428:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521612
.p2align 0x4,,0x7
L_348429:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_521611
L_348430:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_348428
.p2align 0x4
L_521611:
L_348432:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_521612:
L_348436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_348437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348437
.p2align 0x4
.long 0x45B
L_348437:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_348429
.p2align 0x4
L_521613:
L_348438:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_348432
.p2align 0x4
.long 0x1
bug_677:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348433
L_348434:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_348435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348435
.p2align 0x4
.long 0x451
L_348435:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_348433:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl computeLiveTransfers_1
.hidden computeLiveTransfers_1
computeLiveTransfers_1:
L_348522:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_349194
L_348523:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521632
L_348524:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq (globalObjptr+0x830)(%rip),%r15
	cmpl $0x0,0x0(%r15)
	jg L_521615
L_348525:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x441B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	movq $0x4417,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521615:
L_348526:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r15
	movq (globalObjptr+0x830)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl $0x1,%r13d
	je L_521631
	cmpl $0x2,%r13d
	je L_521630
	cmpl $0x3,%r13d
	je L_521629
	cmpl $0x4,%r13d
	je L_521628
	cmpl $0x5,%r13d
	je L_521627
	cmpl $0x6,%r13d
	je L_521626
	cmpl $0x7,%r13d
	je L_521625
L_348527:
	movl $0x1,0x4(%rbp)
	movl $0x1,0x20(%rbp)
	movl $0x1,0x24(%rbp)
L_348528:
	movq (globalObjptr+0x7F8)(%rip),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x68(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xD85,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x78(%rbp)
	addq $0x20,%r12
	movq 0x60(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x10(%r11)
	cmpq $0x1,%r15
	je L_521620
L_348529:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x1,0x90(%rbp)
	movq $0x1,0x98(%rbp)
L_348530:
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x18(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1130,%r14
	je L_521619
	cmpq $0x1131,%r14
	je L_521618
	cmpq $0x1132,%r14
	je L_521617
	cmpq $0x1133,%r14
	je L_521616
L_348531:
	movq 0x18(%r13),%r14
	movq %r14,0xA8(%rbp)
L_348532:
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_348533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nearTargets_1
.p2align 0x4
L_521616:
L_349185:
	movq 0x0(%r13),%r14
	movq %r14,0xA8(%rbp)
	jmp L_348532
.p2align 0x4
L_521617:
L_349184:
	movq 0x0(%r13),%r14
	movq %r14,0xA8(%rbp)
	jmp L_348532
.p2align 0x4
L_521618:
L_349183:
	movq 0x8(%r13),%r14
	movq %r14,0xA8(%rbp)
	jmp L_348532
.p2align 0x4
L_521619:
L_349182:
	movq 0x8(%r13),%r14
	movq %r14,0xA8(%rbp)
	jmp L_348532
.p2align 0x4
L_521620:
L_349186:
	movq $0x1,0x80(%rbp)
	movq $0x1,%r15
L_348587:
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x88(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	cmpq $0x1,%r15
	je L_521624
L_348588:
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_348589:
	incl %ecx
	movl %ecx,0x2C(%rbp)
	jo L_521623
L_348590:
	cmpq $0x1,%r15
	je L_521621
L_348591:
	movq 0x8(%r15),%r15
	jmp L_348589
.p2align 0x4
L_521621:
L_348592:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348593
L_349140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_349141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349141
.p2align 0x4
.long 0x5178
L_349141:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_348593:
	movl 0x2C(%rbp),%ecx
L_348594:
	movl %ecx,0x98(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_348595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_521623:
L_348558:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521624:
L_349142:
	xorl %ecx,%ecx
	jmp L_348594
.p2align 0x4
L_521625:
L_349193:
	movl $0x0,0x4(%rbp)
	movl $0x1,0x20(%rbp)
	movl $0x1,0x24(%rbp)
	jmp L_348528
.p2align 0x4
L_521626:
L_349192:
	movl $0x1,0x4(%rbp)
	movl $0x0,0x20(%rbp)
	movl $0x1,0x24(%rbp)
	jmp L_348528
.p2align 0x4
L_521627:
L_349191:
	movl $0x0,0x4(%rbp)
	movl $0x0,0x20(%rbp)
	movl $0x1,0x24(%rbp)
	jmp L_348528
.p2align 0x4
L_521628:
L_349190:
	movl $0x1,0x4(%rbp)
	movl $0x1,0x20(%rbp)
	movl $0x0,0x24(%rbp)
	jmp L_348528
.p2align 0x4
L_521629:
L_349189:
	movl $0x0,0x4(%rbp)
	movl $0x1,0x20(%rbp)
	movl $0x0,0x24(%rbp)
	jmp L_348528
.p2align 0x4
L_521630:
L_349188:
	movl $0x1,0x4(%rbp)
	movl $0x0,0x20(%rbp)
	movl $0x0,0x24(%rbp)
	jmp L_348528
.p2align 0x4
L_521631:
L_349187:
	movl $0x0,0x4(%rbp)
	movl $0x0,0x20(%rbp)
	movl $0x0,0x24(%rbp)
	jmp L_348528
.p2align 0x4
L_521632:
L_349194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_349195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349195
.p2align 0x4
.long 0x637
L_349195:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_348524
.p2align 0x4
.long 0x3470
L_348533:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_348534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
.long 0x4A44
L_348595:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348596
L_349138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_349139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349139
.p2align 0x4
.long 0x5178
L_349139:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_348596:
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	addq $0x10,%r12
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_521637
L_348597:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_348598:
	incl %ecx
	movl %ecx,0x2C(%rbp)
	jo L_348558
L_348599:
	cmpq $0x1,%r15
	je L_521634
L_348600:
	movq 0x8(%r15),%r15
	jmp L_348598
.p2align 0x4
L_521634:
L_348601:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348602
L_349135:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_349136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349136
.p2align 0x4
.long 0x517A
L_349136:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_348602:
	movl 0x2C(%rbp),%ecx
L_348603:
	movl %ecx,0xA0(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_348604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_521637:
L_349137:
	xorl %ecx,%ecx
	jmp L_348603
.p2align 0x4
.long 0x3471
L_348534:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348535
L_349180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_349181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349181
.p2align 0x4
.long 0x517E
L_349181:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_348535:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_521639
L_348536:
	movq 0xB8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x0(%r14),%r15
L_348537:
	movq %r15,0xD0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_348538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
L_521639:
L_348555:
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC8(%rbp)
	addq $0x10,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_521662
L_348556:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_348557:
	incl %ecx
	jo L_348558
L_348559:
	cmpq $0x1,%r15
	je L_521640
L_348560:
	movq 0x8(%r15),%r15
	jmp L_348557
.p2align 0x4
L_521640:
L_348561:
L_348562:
	movslq %ecx,%rdx
	movq %rdx,0xB0(%rbp)
	testq %rdx,%rdx
	jz L_521660
L_348563:
	cmpq $0x7FFFFFFF,%rdx
	ja L_521659
L_348564:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x160B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_348565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348565
.p2align 0x4
.long 0x5165
L_348565:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq %rax,0xD0(%rbp)
L_348566:
	movq $0x0,0xD8(%rbp)
.p2align 0x4,,0x7
loop_3644:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521658
.p2align 0x4,,0x7
L_348567:
	movq 0xD8(%rbp),%r15
	cmpq 0xB0(%rbp),%r15
	jnl L_521642
L_349157:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_521641
L_349158:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	movq $0x176F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x18F3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x176F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x18F3,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq $0x1,0x0(%r9)
	movq 0xD0(%rbp),%r8
	movq %r8,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	movq %r15,%rsp
	imulq $0x28,%rsp
	movq %rsp,%rax
	movq %r13,0x0(%r8,%rax,1)
	movq %r8,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	movq %r15,%r13
	imulq $0x28,%r13
	movq %r14,0x8(%r8,%r13,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	movq %r15,%r14
	imulq $0x28,%r14
	movq %r11,0x10(%r8,%r14,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	movq %r15,%r14
	imulq $0x28,%r14
	movq %r10,0x18(%r8,%r14,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	movq %r15,%r14
	imulq $0x28,%r14
	movq %r9,0x20(%r8,%r14,1)
	incq %r15
	movq %r15,0xD8(%rbp)
	jmp loop_3644
.p2align 0x4
L_521641:
L_349159:
	movq (globalObjptr+0x4B0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521642:
L_348568:
	movq 0xD0(%rbp),%r13
	movq $0x1331,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1333,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x132F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x1335,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0xB0(%rbp)
	movq %r14,0x10(%r10)
	movq %r11,0x20(%r10)
	addq $0x38,%r12
	movq 0xC8(%rbp),%r11
	movq %r11,0x0(%r10)
	movq 0xC0(%rbp),%r11
	movq %r11,0x8(%r10)
	movq %r13,0x18(%r10)
	movq 0x88(%rbp),%r13
	movq %r13,0x28(%r10)
	movq 0xA8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0xB8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_521657
L_348570:
	movq %r14,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_521656
L_348571:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	xchgq %r13,%r15
.p2align 0x4,,0x7
L_348573:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_348574
L_349149:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD79,%r13
	jne L_348574
L_349150:
	movq 0x70(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_521651
L_348574:
	incl %ecx
	movl %ecx,0x2C(%rbp)
	jo L_348558
L_348575:
	cmpq $0x1,%r15
	je L_521643
L_348576:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_348573
.p2align 0x4
L_521643:
L_348577:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348578
L_349147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_349148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349148
.p2align 0x4
.long 0x517B
L_349148:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_348578:
	movl 0x2C(%rbp),%ecx
L_348579:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_521648
L_348581:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_348583
L_349146:
	movl %ecx,0x0(%r15)
L_348583:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x1AF3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0xB0(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1132,%r13
	je L_521645
L_348584:
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_521644
L_348585:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_348530
.p2align 0x4
L_521644:
L_348586:
	movq 0x90(%rbp),%r14
	movq %r14,0x80(%rbp)
	jmp L_348587
.p2align 0x4
L_521645:
L_349143:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xA8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x90(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x80(%rbp),%r13
	cmpq $0x1,%r13
	je L_521646
L_349144:
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_348530
.p2align 0x4
L_521646:
L_349145:
	movq %r14,0x80(%rbp)
	jmp L_348587
.p2align 0x4
L_521648:
L_348580:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521651:
L_349152:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_348580
L_349153:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_521652
L_349155:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521652:
L_349154:
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521656:
L_349156:
	xorl %ecx,%ecx
	jmp L_348579
.p2align 0x4
L_521657:
L_348569:
	movq (globalObjptr+0x1088)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521658:
L_349160:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_349161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349161
.p2align 0x4
.long 0x517C
L_349161:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_348567
.p2align 0x4
L_521659:
L_349162:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521660:
L_349163:
	movq (globalObjptr+0x5B38)(%rip),%r15
	movq %r15,0xD0(%rbp)
	jmp L_348566
.p2align 0x4
L_521662:
L_349164:
	xorl %ecx,%ecx
	jmp L_348562
.p2align 0x4
.long 0x5166
L_348604:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348605
L_349133:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_349134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349134
.p2align 0x4
.long 0x5178
L_349134:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_348605:
	movq $0x33CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_348606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x5164
L_348538:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348539
L_349177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_349178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349178
.p2align 0x4
.long 0x4A51
L_349178:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_348539:
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_521674
L_348540:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xC0(%rbp)
	movq %r14,0xD0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xD8(%rbp)
.p2align 0x4,,0x7
L_348541:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521673
.p2align 0x4,,0x7
L_348542:
	movq 0xC8(%rbp),%r13
	cmpq $0x1,%r13
	je L_348549
L_348543:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_348544:
	movq 0xD0(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_521669
L_348545:
	cmpq $0x1,%r14
	je L_521665
L_348546:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_348544
.p2align 0x4
L_521665:
L_348547:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521668
.p2align 0x4,,0x7
L_348549:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r14
	cmpq $0x1,%r14
	je L_521666
L_348550:
	movq %r15,0xD8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xD0(%rbp)
	jmp L_348541
.p2align 0x4
L_521666:
L_348552:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_521667
L_348553:
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	jmp L_348537
.p2align 0x4
L_521667:
L_348554:
	movq %r15,0xB8(%rbp)
	jmp L_348555
.p2align 0x4
L_521668:
L_349165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_349166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349166
.p2align 0x4
.long 0x4A4E
L_349166:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_348549
.p2align 0x4
L_521669:
L_349167:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521671
.p2align 0x4,,0x7
L_349168:
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_521670
L_349169:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xC0(%rbp)
	movq %r14,0xD0(%rbp)
	jmp L_348541
.p2align 0x4
L_521670:
L_349170:
	movq 0xD8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_348552
.p2align 0x4
L_521671:
L_349171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_349172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349172
.p2align 0x4
.long 0x517D
L_349172:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_349168
.p2align 0x4
L_521673:
L_349174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_349175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349175
.p2align 0x4
.long 0x4A4E
L_349175:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_348542
.p2align 0x4
L_521674:
L_349176:
	movq 0xC8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_348552
.p2align 0x4
.long 0x4A4A
L_348606:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348607
L_349131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_349132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349132
.p2align 0x4
.long 0x5178
L_349132:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_348607:
	movq $0x3389,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_348608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x5167
L_348608:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348609
L_349129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_349130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349130
.p2align 0x4
.long 0x5179
L_349130:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_348609:
	movq $0xD87,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x33CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x98(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (loop_3645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x4A4A
loop_3645:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb loop_3646
L_349127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_349128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349128
.p2align 0x4
.long 0x5178
L_349128:
	addq $0xFFFFFFFFFFFFFF68,%rbp
loop_3646:
	movq 0x48(%rbp),%r11
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r10
	cmpq $0x1,%r10
	je L_521678
L_348611:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	movq %r10,%r15
L_348612:
	movq 0x48(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11)
	movq %r11,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	movq %r14,0x8(%r11)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x98(%rbp)
	movq %r14,0xA8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_348613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_51
.p2align 0x4
L_521678:
L_349100:
	cmpq $0x1,%r13
	je L_521681
L_349101:
	movq 0x8(%r13),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x98(%rbp)
	movq $0x1,0xA0(%rbp)
.p2align 0x4,,0x7
L_349102:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521680
.p2align 0x4,,0x7
L_349103:
	movq $0x28DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_521679
L_349104:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_349102
.p2align 0x4
L_521679:
L_349105:
	movq 0xA0(%rbp),%r11
	movq 0x98(%rbp),%r15
	movq $0x1,%r13
	xchgq %r11,%r14
	jmp L_348612
.p2align 0x4
L_521680:
L_349106:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_349107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349107
.p2align 0x4
.long 0x4A4B
L_349107:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_349103
.p2align 0x4
L_521681:
L_349108:
	movq $0x3387,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x98(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_349109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x5168
L_348613:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348614
L_349098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_349099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349099
.p2align 0x4
.long 0x4A4B
L_349099:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_348614:
	movq 0xA0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0xB0(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0xB8(%rbp)
	cmpq $0x1,0x0(%r14)
	jne loop_3646
L_348616:
	movq 0x90(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_348617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_133
.p2align 0x4
.long 0x5173
L_349109:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349110
L_349125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_349126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349126
.p2align 0x4
.long 0x5177
L_349126:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_349110:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x33CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_349111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x5169
L_348617:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x98(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (x_1124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
.long 0x5174
L_349111:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349112
L_349123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_349124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349124
.p2align 0x4
.long 0x5176
L_349124:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_349112:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_521684
L_349113:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
L_349114:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x3DF9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_349115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_521684:
L_349119:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x441D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x4419,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x516A
x_1124:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348618
L_349096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_349097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349097
.p2align 0x4
.long 0x5172
L_349097:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_348618:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_521774
L_348619:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_521686
L_348620:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	movq $0x1,0xB0(%rbp)
L_348621:
	movq 0xA0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xF0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xE0,%rbp
	leaq (L_348622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_distanceF_1
.p2align 0x4
L_521686:
L_348951:
	movq $0x1,%r15
	movq $0x1,0x90(%rbp)
L_348661:
	cmpq $0x1,%r15
	je L_521773
L_348662:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq $0x1,0xB0(%rbp)
.p2align 0x4,,0x7
L_348663:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521772
.p2align 0x4,,0x7
L_348664:
	movq 0xA0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_348671
L_348665:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0xA0(%rbp)
.p2align 0x4,,0x7
L_348666:
	movq 0xC0(%rbp),%r14
	movq 0xA0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	je L_521769
L_348667:
	cmpq $0x1,%r15
	je L_521687
L_348668:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0xA0(%rbp)
	jmp L_348666
.p2align 0x4
L_521687:
L_348669:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521768
.p2align 0x4,,0x7
L_348671:
	xorl %ecx,%ecx
L_348672:
	movq $0x116B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ecx,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x25D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xB0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_521688
L_348673:
	movq %r14,0xB0(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_348663
.p2align 0x4
L_521688:
L_348674:
	movq %r15,0xA0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq $0x1,0xB0(%rbp)
.p2align 0x4,,0x7
L_348675:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521767
.p2align 0x4,,0x7
L_348676:
	movq $0x25D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_521689
L_348677:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_348675
.p2align 0x4
L_521689:
L_348679:
	movb 0x0(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_521762
	cmpb $0x2,%r14b
	je L_521757
L_348680:
	movq 0xB8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x112F,%r13
	je L_521755
	cmpq $0x1133,%r13
	je L_521710
L_348681:
	movq $0x1,%r15
L_348682:
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_521709
L_348683:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	movq $0x1,0xB0(%rbp)
	movl $0x0,0x2C(%rbp)
.p2align 0x4,,0x7
L_348684:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521708
.p2align 0x4,,0x7
L_348685:
	movl 0x2C(%rbp),%r15d
	testl %r15d,%r15d
	jz L_521706
L_348686:
	decl %r15d
	jo L_348558
L_348687:
	movq $0x25D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xB0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_521690
L_348688:
	movq %r14,0xB0(%rbp)
	movl %r15d,0x2C(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_348684
.p2align 0x4
L_521690:
L_348689:
	movq 0xA0(%rbp),%r15
L_348690:
	cmpq $0x1,%r14
	je L_521704
L_348691:
	movq %r15,0xA0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x98(%rbp)
	movq $0x1,0xB0(%rbp)
.p2align 0x4,,0x7
L_348692:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521703
.p2align 0x4,,0x7
L_348693:
	movq $0x25D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_521691
L_348694:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_348692
.p2align 0x4
L_521691:
L_348695:
	movq 0xA0(%rbp),%r14
	movq %r14,0x90(%rbp)
L_348696:
	cmpq $0x1,%r15
	je L_521702
L_348697:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq $0x1,0xB0(%rbp)
.p2align 0x4,,0x7
L_348698:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521701
.p2align 0x4,,0x7
L_348699:
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x116F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x25CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_521692
L_348700:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_348698
.p2align 0x4
L_521692:
L_348701:
	movq %r13,0xA0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq $0x1,0xB0(%rbp)
.p2align 0x4,,0x7
L_348702:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521700
.p2align 0x4,,0x7
L_348703:
	movq $0x25CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_521693
L_348704:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_348702
.p2align 0x4
L_521693:
L_348706:
	movq $0x25CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0xA8(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
	movq 0xC8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1135,%r13
	je loop_3646
	cmpq $0x1136,%r13
	je loop_3646
	cmpq $0x1137,%r13
	je L_521699
	cmpq $0x1138,%r13
	je loop_3646
	cmpq $0x1139,%r13
	je L_521697
	cmpq $0x113A,%r13
	je L_521696
	cmpq $0x113B,%r13
	je L_521695
L_348707:
	movq 0x18(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x10(%r14),%r15
	movl 0x14(%r15),%r14d
	testl %r14d,%r14d
	jnz L_521694
L_348708:
	cmpq $0x1,%r13
	je loop_3646
L_348709:
	movq 0x30(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_348710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_1
.p2align 0x4
L_521694:
L_348721:
	cmpq $0x1,%r13
	je loop_3646
L_348722:
	movq $0xFC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq (globalObjptr+0xE38)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq $0x28DB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x8(%r14)
	jmp loop_3646
.p2align 0x4
L_521695:
L_348740:
	movq 0x0(%r14),%r13
	movq $0xFC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0xFC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq $0x28DB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x8(%r14)
	jmp loop_3646
.p2align 0x4
L_521696:
L_348739:
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq $0xFC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0xFC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r10
	movq 0x8(%r13),%r9
	movq $0x28DB,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r8,0x0(%r13)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x8(%r13)
	movq $0xFC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r11
	movq $0x28DB,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r14,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x0(%r13)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x8(%r13)
	jmp loop_3646
.p2align 0x4
L_521697:
L_348730:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0xFC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x98(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0xFC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r10
	movq $0x28DB,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r9,0x0(%r14)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x8(%r14)
	cmpq $0x1,%r11
	je loop_3646
L_348731:
	movq 0x8(%r11),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0xA0(%rbp)
.p2align 0x4,,0x7
L_348732:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521698
.p2align 0x4,,0x7
L_348733:
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0xFC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq $0x28DB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x8(%r14)
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je loop_3646
L_348734:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_348732
.p2align 0x4
L_521698:
L_348736:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_348737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348737
.p2align 0x4
.long 0x4A4B
L_348737:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_348733
.p2align 0x4
L_521699:
L_348726:
	movq 0x18(%r14),%r15
	movq 0x8(%r14),%r13
	movq $0xFC5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE38)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq $0x28DB,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r8,0x0(%r11)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x8(%r11)
	cmpq $0x1,%r13
	je loop_3646
L_348727:
	movq $0xFC5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r13
	movq $0x28DB,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r15,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x0(%r11)
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x8(%r11)
	jmp loop_3646
.p2align 0x4
L_521700:
L_348741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_348742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348742
.p2align 0x4
.long 0x516C
L_348742:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_348703
.p2align 0x4
L_521701:
L_348743:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_348744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348744
.p2align 0x4
.long 0x516C
L_348744:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_348699
.p2align 0x4
L_521702:
L_348745:
	movq $0x1,%r15
	jmp L_348706
.p2align 0x4
L_521703:
L_348746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_348747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348747
.p2align 0x4
.long 0x516C
L_348747:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_348693
.p2align 0x4
L_521704:
L_348748:
	movq %r15,0x90(%rbp)
	movq $0x1,%r15
	jmp L_348696
.p2align 0x4
L_521706:
L_348749:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_521707
L_348750:
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq $0x1,0xB0(%rbp)
	jmp L_348692
.p2align 0x4
L_521707:
L_348751:
	movq 0xA0(%rbp),%r13
	movq %r13,0x90(%rbp)
	movq $0x1,%r13
	movq %r13,%r15
	jmp L_348696
.p2align 0x4
L_521708:
L_348752:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_348753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348753
.p2align 0x4
.long 0x516C
L_348753:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_348685
.p2align 0x4
L_521709:
L_348754:
	movq $0x1,%r13
	xchgq %r13,%r14
	jmp L_348690
.p2align 0x4
L_521710:
L_348905:
	cmpq $0x1,%r15
	je L_521754
L_348906:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0xA0(%rbp)
	movq (globalObjptr+0x5B88)(%rip),%r14
	movq %r14,0xB0(%rbp)
.p2align 0x4,,0x7
L_348757:
	movl 0x0(%r15),%r11d
	movq 0x8(%r15),%r10
	movq %r10,0xC0(%rbp)
	movl %r11d,%r10d
	andl $0x1,%r10d
	jz default_20
L_348888:
	shrl $0x1,%r11d
	movw %r11w,%r13w
L_348889:
	movq 0xB0(%rbp),%r11
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_521753
L_348891:
	movq 0x8(%r11),%r15
	movw 0x0(%r11),%r14w
.p2align 0x4,,0x7
L_348892:
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r14w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r9b,%r10b
	jne L_521752
L_348896:
	movb %r13b,%r11b
	movb %r14b,%r10b
	cmpb %r10b,%r11b
	je L_521750
L_348897:
	cmpq $0x1,%r15
	je default_119
L_348898:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	jmp L_348892
.p2align 0x4
default_119:
default_20:
	movq 0xC0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	movb %r15b,0x1(%rbp)
L_348759:
	movq 0xB0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_521749
L_348761:
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0x2(%rbp)
	movq $0x1,0xD8(%rbp)
L_348762:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521748
.p2align 0x4,,0x7
L_348763:
	movw 0x2(%rbp),%r15w
	shrw $0x8,%r15w
	movb %r15b,%dl
	cmpb $0x2,%dl
	je L_521747
	cmpb $0x3,%dl
	je L_521746
L_348765:
	movb $0x7,%cl
L_348766:
	cmpb 0x1(%rbp),%cl
	jne L_521743
L_348859:
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_348868
L_348860:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl $0x0,0x2C(%rbp)
.p2align 0x4,,0x7
L_348861:
	movl 0x0(%r15),%r13d
	movl %r13d,%r15d
	andl $0x1,%r15d
	jz L_521741
L_348874:
	shrl $0x1,%r13d
	movw %r13w,%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	cmpb %dl,%r11b
	jne L_521740
L_348876:
	movw 0x2(%rbp),%r13w
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r11b,%r13b
	je L_521738
	movb %dl,(localWord8+0x0)(%rip)
L_348863:
	movl 0x2C(%rbp),%r13d
	incl %r13d
	jo L_348558
L_348864:
	cmpq $0x1,%r14
	je L_521711
L_348865:
	movl %r13d,0x2C(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movb (localWord8+0x0)(%rip),%dl
	jmp L_348861
.p2align 0x4
L_521711:
L_348866:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521736
.p2align 0x4,,0x7
L_348868:
	xorq %r15,%r15
L_348869:
	movq $0x1169,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movzwl 0x2(%rbp),%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq $0x25D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0xD0(%rbp),%r13
	cmpq $0x1,%r13
	je L_521712
L_348870:
	movq %r15,0xD8(%rbp)
	movw 0x0(%r13),%r15w
	movq 0x8(%r13),%r13
	movq %r13,0xD0(%rbp)
	movw %r15w,0x2(%rbp)
	jmp L_348762
.p2align 0x4
L_521712:
L_348871:
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq %r14,0xD8(%rbp)
	movq $0x1,0xE0(%rbp)
L_348771:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521735
.p2align 0x4,,0x7
L_348772:
	movq $0x25D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_521713
L_348773:
	movq %r15,0xE0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xD0(%rbp)
	movq %r15,0xD8(%rbp)
	jmp L_348771
.p2align 0x4
L_521713:
L_348774:
	movq 0xE0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq $0x1,0xE0(%rbp)
L_348775:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521734
.p2align 0x4,,0x7
L_348776:
	movq 0xE0(%rbp),%r15
	cmpq $0x1,%r15
	je L_521733
L_348777:
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq $0x1,0xF0(%rbp)
	movq %r15,0xF8(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0xE0(%rbp)
L_348778:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521732
.p2align 0x4,,0x7
L_348779:
	movq 0xD8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_348781
L_348840:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,%r14
	andq $0x1,%r14
	jz L_348842
L_348848:
	shrq $0x1,%r13
	movl %r13d,%r14d
	cmpl %r15d,%r14d
	jl L_521728
L_348842:
	movq $0x25D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xE0(%rbp),%r14
	cmpq $0x1,%r14
	je L_521714
L_348843:
	movq %r15,0xF0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xE8(%rbp)
	movq %r14,0xF8(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0xE0(%rbp)
	jmp L_348778
.p2align 0x4
L_521714:
L_348845:
	movq $0x25D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xD8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	cmpq $0x1,%r15
	je L_521727
L_348846:
	movq %r14,0xE8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
L_348783:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521726
.p2align 0x4,,0x7
L_348784:
	movq $0x25D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD8(%rbp),%r14
	cmpq $0x1,%r14
	je L_521715
L_348785:
	movq %r15,0xE8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0xE0(%rbp)
	jmp L_348783
.p2align 0x4
L_521715:
L_348787:
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_521716
L_348788:
	movq %r15,0xE0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xD0(%rbp)
	movq %r15,0xD8(%rbp)
	jmp L_348775
.p2align 0x4
L_521716:
L_348789:
	cmpq $0x1,%r15
	jne L_521724
L_348829:
	movq 0xB0(%rbp),%r15
	andq $0x3,%r15
	jnz L_521723
L_348831:
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_521717
L_348832:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	jmp L_348757
.p2align 0x4
L_521717:
L_348833:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348834
L_348835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_348836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348836
.p2align 0x4
.long 0x516D
L_348836:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_348834:
	movq 0xA0(%rbp),%r15
L_348809:
	movq 0xB8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x112F,%r13
	je L_521720
	cmpq $0x1133,%r13
	je L_521718
	jmp L_348682
.p2align 0x4
L_521718:
L_348814:
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_521719
L_348815:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	movq $0x1,0xB0(%rbp)
	movl $0x6,0x2C(%rbp)
	jmp L_348684
.p2align 0x4
L_521719:
L_348816:
	movq $0x1,%r13
	xchgq %r13,%r14
	jmp L_348690
.p2align 0x4
L_521720:
L_348811:
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_521721
L_348812:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	movq $0x1,0xB0(%rbp)
	movl $0x6,0x2C(%rbp)
	jmp L_348684
.p2align 0x4
L_521721:
L_348813:
	movq $0x1,%r13
	xchgq %r13,%r14
	jmp L_348690
.p2align 0x4
L_521723:
L_348830:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_521724:
L_348790:
	movq 0x0(%r15),%r13
	movw 0x8(%r13),%r11w
L_348791:
	movq 0xB0(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_521725
L_348793:
	movw %r11w,0x2C(%rbp)
	movw 0x0(%r15),%r13w
	movq 0x8(%r15),%r15
	movq %r15,0xB0(%rbp)
	movw %r13w,0x2(%rbp)
	movq $0x1,0xD0(%rbp)
L_348794:
	movw 0x2(%rbp),%r15w
	movw %r15w,0xE0(%rbp)
	movw 0x2C(%rbp),%r15w
	movw %r15w,0xE2(%rbp)
	addq $0xE0,%rbp
	leaq (L_348795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coincide_1
.p2align 0x4
L_521725:
L_348792:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_521726:
L_348837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_348838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348838
.p2align 0x4
.long 0x4A4F
L_348838:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_348784
.p2align 0x4
L_521727:
L_348847:
	movq %r14,%r15
	jmp L_348787
.p2align 0x4
L_521728:
L_348781:
	movq $0x25D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF0(%rbp),%r14
	cmpq $0x1,%r14
	je L_348787
L_348782:
	movq %r15,0xE8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xD8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xE0(%rbp)
	jmp L_348783
.p2align 0x4
L_521732:
L_348851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_348852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348852
.p2align 0x4
.long 0x4A58
L_348852:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	jmp L_348779
.p2align 0x4
L_521733:
L_348853:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_348845
.p2align 0x4
L_521734:
L_348854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_348855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348855
.p2align 0x4
.long 0x4A59
L_348855:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	jmp L_348776
.p2align 0x4
L_521735:
L_348856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_348857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348857
.p2align 0x4
.long 0x4A59
L_348857:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	jmp L_348772
.p2align 0x4
L_521736:
L_348872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_348873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348873
.p2align 0x4
.long 0x4A4E
L_348873:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_348868
.p2align 0x4
L_521738:
L_348878:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521739
.p2align 0x4,,0x7
L_348879:
	movl 0x2C(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp L_348869
.p2align 0x4
L_521739:
L_348880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_348881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348881
.p2align 0x4
.long 0x4A4E
L_348881:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_348879
.p2align 0x4
L_521740:
	movb %dl,(localWord8+0x0)(%rip)
	jmp L_348863
.p2align 0x4
L_521741:
	movb %dl,(localWord8+0x0)(%rip)
	jmp L_348863
.p2align 0x4
L_521743:
L_348767:
	movq 0xD0(%rbp),%r15
	cmpq $0x1,%r15
	je L_521744
L_348768:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0xD0(%rbp)
	movw %r14w,0x2(%rbp)
	jmp L_348762
.p2align 0x4
L_521744:
L_348769:
	movq 0xD8(%rbp),%r14
	cmpq $0x1,%r14
	je L_348829
L_348770:
	movq 0x8(%r14),%r15
	movq %r15,0xD0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0xD8(%rbp)
	movq $0x1,0xE0(%rbp)
	jmp L_348771
.p2align 0x4
L_521746:
L_348885:
	movb $0x5,%cl
	jmp L_348766
.p2align 0x4
L_521747:
L_348884:
	movb $0x6,%cl
	jmp L_348766
.p2align 0x4
L_521748:
L_348886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_348887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348887
.p2align 0x4
.long 0x4A4E
L_348887:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_348763
.p2align 0x4
L_521749:
L_348760:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_521750:
L_348901:
	movq 0xB0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_521751
L_348903:
	movw %r13w,0x2C(%rbp)
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0xB0(%rbp)
	movw %r14w,0x2(%rbp)
	movq $0x1,0xD0(%rbp)
	jmp L_348794
.p2align 0x4
L_521751:
L_348902:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_521752:
L_348893:
	cmpq $0x1,%r15
	je default_20
L_348894:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	jmp L_348892
.p2align 0x4
L_521753:
L_348890:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	movq %r11,%rbx
	call MLton_bug
.p2align 0x4
L_521754:
L_348907:
	movq $0x1,%r15
	jmp L_348809
.p2align 0x4
L_521755:
L_348755:
	cmpq $0x1,%r15
	je L_521756
L_348756:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0xA0(%rbp)
	movq (globalObjptr+0x5B98)(%rip),%r14
	movq %r14,0xB0(%rbp)
	jmp L_348757
.p2align 0x4
L_521756:
L_348904:
	movq $0x1,%r15
	jmp L_348809
.p2align 0x4
L_521757:
L_348916:
	movq 0xB8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x112F,%r13
	je L_521760
	cmpq $0x1133,%r13
	je L_521758
L_348917:
	movq $0x1,%r15
	jmp L_348682
.p2align 0x4
L_521758:
L_348921:
	cmpq $0x1,%r15
	je L_521759
L_348922:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0xA0(%rbp)
	movq (globalObjptr+0x5BD8)(%rip),%r14
	movq %r14,0xB0(%rbp)
	jmp L_348757
.p2align 0x4
L_521759:
L_348923:
	movq $0x1,%r15
	jmp L_348809
.p2align 0x4
L_521760:
L_348918:
	cmpq $0x1,%r15
	je L_521761
L_348919:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0xA0(%rbp)
	movq (globalObjptr+0x5BE8)(%rip),%r14
	movq %r14,0xB0(%rbp)
	jmp L_348757
.p2align 0x4
L_521761:
L_348920:
	movq $0x1,%r15
	jmp L_348809
.p2align 0x4
L_521762:
L_348908:
	movq 0xB8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x112F,%r11
	je L_521765
	cmpq $0x1133,%r11
	je L_521763
L_348909:
	movq $0x1,%r15
	jmp L_348682
.p2align 0x4
L_521763:
L_348913:
	cmpq $0x1,%r15
	je L_521764
L_348914:
	movq 0x8(%r15),%r13
	movq %r13,0x98(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0xA0(%rbp)
	movq (globalObjptr+0x5B78)(%rip),%r13
	movq %r13,0xB0(%rbp)
	jmp L_348757
.p2align 0x4
L_521764:
L_348915:
	movq $0x1,%r15
	jmp L_348809
.p2align 0x4
L_521765:
L_348910:
	cmpq $0x1,%r15
	je L_521766
L_348911:
	movq 0x8(%r15),%r13
	movq %r13,0x98(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0xA0(%rbp)
	movq (globalObjptr+0x5BA8)(%rip),%r13
	movq %r13,0xB0(%rbp)
	jmp L_348757
.p2align 0x4
L_521766:
L_348912:
	movq $0x1,%r15
	jmp L_348809
.p2align 0x4
L_521767:
L_348924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_348925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348925
.p2align 0x4
.long 0x516E
L_348925:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_348676
.p2align 0x4
L_521768:
L_348926:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_348927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348927
.p2align 0x4
.long 0x516F
L_348927:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_348671
.p2align 0x4
L_521769:
L_348928:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521770
.p2align 0x4,,0x7
L_348929:
	movq 0xA0(%rbp),%r15
	movzwl 0x0(%r15),%ecx
	shll $0x1,%ecx
	orl $0x1,%ecx
	jmp L_348672
.p2align 0x4
L_521770:
L_348930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_348931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348931
.p2align 0x4
.long 0x4A50
L_348931:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_348929
.p2align 0x4
L_521772:
L_348933:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_348934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348934
.p2align 0x4
.long 0x5170
L_348934:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_348664
.p2align 0x4
L_521773:
L_348935:
	movq $0x1,%r15
	jmp L_348679
.p2align 0x4
L_521774:
L_349005:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_521775
L_349006:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	movq $0x1,0xB0(%rbp)
L_349007:
	movq 0xA0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xF0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xE0,%rbp
	leaq (L_349008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_distanceB_1
.p2align 0x4
L_521775:
L_349095:
	movq $0x1,%r14
	movq $0x1,0x90(%rbp)
	xchgq %r14,%r15
	jmp L_348661
.p2align 0x4
.long 0x5175
L_349115:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349116
L_349120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_349121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349121
.p2align 0x4
.long 0x286E
L_349121:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_349116:
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_349119
L_349117:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_349114
.p2align 0x4
.long 0x4A49
L_348622:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348623
L_349002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_349003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349003
.p2align 0x4
.long 0x4A5A
L_349003:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_348623:
	movq 0xE0(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_521818
	cmpq $0x2,%r15
	je L_521779
L_348624:
	movq (globalObjptr+0x5B40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521779:
L_348975:
	movq 0xE0(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%r14d
	movl %r14d,0x2C(%rbp)
L_348976:
	movq 0xD8(%rbp),%r15
	andq $0x3,%r15
	jnz L_348624
L_348977:
	cmpl 0x28(%rbp),%r14d
	jl L_521808
L_348978:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_521780
L_348979:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_348621
.p2align 0x4
L_521780:
L_348980:
	movq 0xB0(%rbp),%r14
	xchgq %r14,%r15
L_348628:
	cmpq $0x1,%r15
	je L_348951
L_348629:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq $0x1,0xA0(%rbp)
.p2align 0x4,,0x7
L_348630:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521806
.p2align 0x4,,0x7
L_348631:
	movq $0x25D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_521781
L_348632:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_348630
.p2align 0x4
L_521781:
L_348633:
	movq 0xA0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq $0x1,0xA0(%rbp)
.p2align 0x4,,0x7
L_348634:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521805
.p2align 0x4,,0x7
L_348635:
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_521804
L_348636:
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq $0x1,0xC0(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0xA0(%rbp)
L_348637:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521803
.p2align 0x4,,0x7
L_348638:
	movq 0xB0(%rbp),%r15
	movq 0x98(%rbp),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jl L_521798
L_348639:
	movq $0x25D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xC0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_521782
L_348640:
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0xA0(%rbp)
	jmp L_348637
.p2align 0x4
L_521782:
	xchgq %r14,%r15
L_348642:
	movq $0x25D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	cmpq $0x1,%r15
	je L_521797
L_348643:
	movq %r14,0xB0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
L_348644:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521796
.p2align 0x4,,0x7
L_348645:
	movq $0x25D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_521783
L_348646:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_348644
.p2align 0x4
L_521783:
L_348648:
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_521784
L_348649:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_348634
.p2align 0x4
L_521784:
L_348651:
	cmpq $0x1,%r15
	je L_348951
L_348652:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq $0x1,0xA0(%rbp)
	movq $0x1,0xB0(%rbp)
.p2align 0x4,,0x7
L_348653:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521794
.p2align 0x4,,0x7
L_348654:
	movq 0x98(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x18(%r13),%r11
	movb 0x0(%r11),%r15b
	cmpb $0x2,%r15b
	je L_348941
	cmpb $0x3,%r15b
	je L_348941
	cmpb $0x4,%r15b
	je L_521791
	cmpb $0x5,%r15b
	je L_348945
	cmpb $0x6,%r15b
	je L_348945
	cmpb $0x7,%r15b
	je L_521788
L_348656:
	xorb %dl,%dl
L_348657:
	cmpb $0x2,%dl
	je L_521786
L_348658:
	movq $0x25D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_521785
L_348659:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_348653
.p2align 0x4
L_521785:
L_348660:
	movq %r15,0x90(%rbp)
	movq 0xA0(%rbp),%r15
	jmp L_348661
.p2align 0x4
L_521786:
L_348936:
	movq $0x25D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_521787
L_348937:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_348653
.p2align 0x4
L_521787:
L_348938:
	movq 0xB0(%rbp),%r14
	movq %r14,0x90(%rbp)
	jmp L_348661
.p2align 0x4
L_521788:
L_348945:
	movb $0x2,%dl
	jmp L_348657
.p2align 0x4
L_521791:
L_348941:
	movb $0x1,%dl
	jmp L_348657
.p2align 0x4
L_521794:
L_348948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_348949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348949
.p2align 0x4
.long 0x5170
L_348949:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_348654
.p2align 0x4
L_521796:
L_348952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_348953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348953
.p2align 0x4
.long 0x5170
L_348953:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_348645
.p2align 0x4
L_521797:
L_348954:
	movq %r14,%r15
	jmp L_348648
.p2align 0x4
L_521798:
L_348955:
	movq $0x25D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xD8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xC0(%rbp),%r13
	cmpq $0x1,%r13
	je L_521802
L_348956:
	movq %r14,0xB0(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x98(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0xA0(%rbp)
L_348957:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521801
.p2align 0x4,,0x7
L_348958:
	movq $0x25D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_521799
L_348959:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_348957
.p2align 0x4
L_521799:
L_348961:
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_348651
L_348962:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_348634
.p2align 0x4
L_521801:
L_348964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_348965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348965
.p2align 0x4
.long 0x5170
L_348965:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_348958
.p2align 0x4
L_521802:
	xchgq %r14,%r15
	jmp L_348961
.p2align 0x4
L_521803:
L_348967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_348968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348968
.p2align 0x4
.long 0x4A4E
L_348968:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_348638
.p2align 0x4
L_521804:
L_348969:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_348642
.p2align 0x4
L_521805:
L_348970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_348971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348971
.p2align 0x4
.long 0x5171
L_348971:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_348635
.p2align 0x4
L_521806:
L_348972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_348973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348973
.p2align 0x4
.long 0x5171
L_348973:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_348631
.p2align 0x4
L_521808:
L_348981:
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_521810
L_348982:
	movl 0x2C(%rbp),%ecx
L_348983:
	movq $0x116D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ecx,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x25D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xB0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_521809
L_348984:
	movq %r14,0xB0(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_348621
.p2align 0x4
L_521809:
L_348985:
	movq %r15,0x98(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq $0x1,0xA0(%rbp)
	jmp L_348630
.p2align 0x4
L_521810:
L_348986:
	movq 0xC0(%rbp),%r13
	cmpq $0x1,%r13
	je L_348993
L_348987:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_348988:
	movq 0xD8(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_521814
L_348989:
	cmpq $0x1,%r14
	je L_521811
L_348990:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_348988
.p2align 0x4
L_521811:
L_348991:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348993
L_348995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_348996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348996
.p2align 0x4
.long 0x4A50
L_348996:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_348993:
	movl 0x2C(%rbp),%ecx
	imull $0x5,%ecx
	jo L_348558
	jmp L_348983
.p2align 0x4
L_521814:
L_348997:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348998
L_348999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_349000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349000
.p2align 0x4
.long 0x4A50
L_349000:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_348998:
	movl 0x2C(%rbp),%ecx
	jmp L_348983
.p2align 0x4
L_521818:
L_348625:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_521819
L_348626:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_348621
.p2align 0x4
L_521819:
L_348627:
	movq 0xB0(%rbp),%r14
	xchgq %r14,%r15
	jmp L_348628
.p2align 0x4
.long 0x4A46
L_348710:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq $0x1,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
loop_3647:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521824
.p2align 0x4,,0x7
L_348711:
	movq $0xFC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_521823
L_348712:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq %r11,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_521822
	cmpq $0x2,%r14
	je L_521821
L_348713:
	movq %r15,0xA8(%rbp)
L_348714:
	jmp loop_3647
.p2align 0x4
L_521821:
L_348716:
	movq %r15,0xA8(%rbp)
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x116F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r10,0x8(%r14)
	addq $0x18,%r12
	movq $0x25CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	jmp loop_3647
.p2align 0x4
L_521822:
L_348715:
	movq %r15,0xA8(%rbp)
	shrq $0x2,%r11
	movw %r11w,%r15w
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1171,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r10,0x10(%r13)
	addq $0x20,%r12
	movzwl %r15w,%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x25CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA0(%rbp)
	jmp loop_3647
.p2align 0x4
L_521823:
L_348717:
	movq $0xFC5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r11
	movq 0x8(%r15),%r10
	movq $0x28DB,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r9,0x0(%r15)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x8(%r15)
	jmp loop_3646
.p2align 0x4
L_521824:
L_348718:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_348719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348719
.p2align 0x4
.long 0x516B
L_348719:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_348711
.p2align 0x4
.long 0x4A49
L_348795:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_348796
L_348825:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_348826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348826
.p2align 0x4
.long 0x4A56
L_348826:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_348796:
	movl 0xD8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_521830
L_348797:
	movq $0x21C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x2(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_521825
L_348798:
	movq %r15,0xD0(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movw %r15w,0x2(%rbp)
	jmp L_348794
.p2align 0x4
L_521825:
L_348799:
	movq 0xD0(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq $0x1,0xD0(%rbp)
.p2align 0x4,,0x7
L_348800:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521829
.p2align 0x4,,0x7
L_348801:
	movq $0x21C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x2(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_521826
L_348802:
	movq %r15,0xD0(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movw %r15w,0x2(%rbp)
	jmp L_348800
.p2align 0x4
L_521826:
L_348804:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1171,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movzwl 0x2C(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r13)
	movq $0x25CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r13
	movq %r13,0x8(%r14)
	cmpq $0x1,%r15
	je L_521828
L_348805:
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_521827
L_348806:
	movq %r14,0xA0(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x98(%rbp)
	jmp L_348757
.p2align 0x4
L_521827:
	movq %r14,%r15
L_348808:
	jmp L_348809
.p2align 0x4
L_521828:
	movq %r14,%r15
	jmp L_348808
.p2align 0x4
L_521829:
L_348818:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_348819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_348819
.p2align 0x4
.long 0x4A50
L_348819:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_348801
.p2align 0x4
L_521830:
L_348820:
	movq 0xB0(%rbp),%r15
	cmpq $0x1,%r15
	je L_521831
L_348821:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0xB0(%rbp)
	movw %r14w,0x2(%rbp)
	jmp L_348794
.p2align 0x4
L_521831:
L_348822:
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_521832
L_348823:
	movq 0x8(%r14),%r15
	movq %r15,0xB0(%rbp)
	movw 0x0(%r14),%r15w
	movw %r15w,0x2(%rbp)
	movq $0x1,0xD0(%rbp)
	jmp L_348800
.p2align 0x4
L_521832:
L_348824:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_348804
.p2align 0x4
.long 0x4A49
L_349008:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xF0,%rbp
	leaq (L_349009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_distanceF_1
.p2align 0x4
.long 0x4A5E
L_349009:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349010
L_349093:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_349094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349094
.p2align 0x4
.long 0x4A61
L_349094:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_349010:
	movq 0xE0(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_521872
	cmpq $0x2,%r15
	je L_521839
L_349011:
	movq 0xF0(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	jne L_521838
L_349013:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_521834
L_349014:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_349007
.p2align 0x4
L_521834:
L_349015:
	movq 0xB0(%rbp),%r14
	xchgq %r14,%r15
L_349016:
	cmpq $0x1,%r15
	je L_521837
L_349017:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq $0x1,0xA0(%rbp)
.p2align 0x4,,0x7
L_349018:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521836
.p2align 0x4,,0x7
L_349019:
	movq $0x25D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_521835
L_349020:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_349018
.p2align 0x4
L_521835:
L_349021:
	movq 0xA0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq $0x1,0xA0(%rbp)
	jmp L_348634
.p2align 0x4
L_521836:
L_349022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_349023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349023
.p2align 0x4
.long 0x5171
L_349023:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_349019
.p2align 0x4
L_521837:
L_349024:
	movq $0x1,%r15
	movq $0x1,0x90(%rbp)
	jmp L_348661
.p2align 0x4
L_521838:
L_349012:
	movq (globalObjptr+0x5B48)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521839:
L_349028:
	movq 0xE0(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,0x2C(%rbp)
L_349029:
	movq 0xD8(%rbp),%r15
	andq $0x3,%r15
	jz L_521842
L_349030:
	movq 0xF0(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	jne L_349012
L_349031:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_521840
L_349032:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_349007
.p2align 0x4
L_521840:
L_349033:
	movq 0xB0(%rbp),%r14
	xchgq %r14,%r15
	jmp L_349016
.p2align 0x4
L_521842:
L_349034:
	movq 0xF0(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_521870
	cmpq $0x2,%r15
	je L_521843
	jmp L_349012
.p2align 0x4
L_521843:
L_349038:
	movq 0xF0(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%r14d
	movl %r14d,0xE0(%rbp)
L_349039:
	movq 0xE8(%rbp),%r15
	andq $0x3,%r15
	jnz L_349012
L_349040:
	movl 0x2C(%rbp),%r15d
	addl %r14d,%r15d
	movl %r15d,0xE4(%rbp)
	jo L_348558
L_349041:
	cmpl 0x28(%rbp),%r15d
	jl L_521845
L_349042:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_521844
L_349043:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_349007
.p2align 0x4
L_521844:
L_349044:
	movq 0xB0(%rbp),%r14
	xchgq %r14,%r15
	jmp L_349016
.p2align 0x4
L_521845:
L_349045:
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_521847
L_349046:
	movl 0xE4(%rbp),%ecx
L_349047:
	movq $0x116D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ecx,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x25D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xB0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_521846
L_349048:
	movq %r14,0xB0(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_349007
.p2align 0x4
L_521846:
L_349049:
	movq %r15,0x98(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq $0x1,0xA0(%rbp)
	jmp L_349018
.p2align 0x4
L_521847:
L_349050:
	movq 0xC0(%rbp),%r13
	cmpq $0x1,%r13
	je L_349057
L_349051:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_349052:
	movq 0xD8(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_521864
L_349053:
	cmpq $0x1,%r14
	je L_521848
L_349054:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_349052
.p2align 0x4
L_521848:
L_349055:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349057
L_349084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_349085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349085
.p2align 0x4
.long 0x4A60
L_349085:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_349057:
	movq 0xC0(%rbp),%r13
	cmpq $0x1,%r13
	je L_349065
L_349058:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl $0x0,0xD8(%rbp)
.p2align 0x4,,0x7
L_349059:
	movq 0xE8(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_521857
L_349060:
	cmpq $0x1,%r14
	je L_521849
L_349061:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_349059
.p2align 0x4
L_521849:
L_349062:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349063
L_349073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_349074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349074
.p2align 0x4
.long 0x4A5F
L_349074:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_349063:
	movl 0xD8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_521853
L_349065:
	movl 0x2C(%rbp),%r15d
	imull $0x5,%r15d
	jo L_348558
L_349066:
	movl 0xE0(%rbp),%ecx
	imull $0x5,%ecx
	jo L_348558
L_349067:
	addl %r15d,%ecx
	jo L_348558
L_349068:
	jmp L_349047
.p2align 0x4
L_521853:
L_349070:
	movl 0xE0(%rbp),%ecx
	imull $0x5,%ecx
	jo L_348558
L_349071:
	addl 0x2C(%rbp),%ecx
	jo L_348558
L_349072:
	jmp L_349047
.p2align 0x4
L_521857:
L_349075:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349076
L_349081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_349082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349082
.p2align 0x4
.long 0x4A5F
L_349082:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_349076:
	movl 0xD8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_521860
L_349077:
	movl 0x2C(%rbp),%ecx
	imull $0x5,%ecx
	jo L_348558
L_349078:
	addl 0xE0(%rbp),%ecx
	jo L_348558
L_349079:
	jmp L_349047
.p2align 0x4
L_521860:
L_349080:
	movl 0xE4(%rbp),%ecx
	jmp L_349047
.p2align 0x4
L_521864:
L_349086:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349087
L_349090:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_349091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349091
.p2align 0x4
.long 0x4A60
L_349091:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_349087:
	movq 0xC0(%rbp),%r13
	cmpq $0x1,%r13
	je L_349070
L_349088:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl $0x1,0xD8(%rbp)
	jmp L_349059
.p2align 0x4
L_521870:
L_349035:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_521871
L_349036:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_349007
.p2align 0x4
L_521871:
L_349037:
	movq 0xB0(%rbp),%r14
	xchgq %r14,%r15
	jmp L_349016
.p2align 0x4
L_521872:
L_349025:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_521873
L_349026:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_349007
.p2align 0x4
L_521873:
L_349027:
	movq 0xB0(%rbp),%r14
	xchgq %r14,%r15
	jmp L_349016
.text
.p2align 0x4
.globl get_133
.hidden get_133
get_133:
L_349196:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_349197
L_349257:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_349258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349258
.p2align 0x4
.long 0x45F
L_349258:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_349197:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_521885
L_349199:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_521884
L_349200:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_349202:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_521883
L_349249:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xCBD,%r10
	jne L_521882
L_349250:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_521879
L_349203:
	incl %ecx
	jo L_521878
L_349205:
	cmpq $0x1,%r14
	je L_521875
L_349206:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_349202
.p2align 0x4
L_521875:
L_349207:
L_349208:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_521877
L_349210:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_1125
L_349248:
	movl %ecx,0x0(%r15)
x_1125:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movl 0x0(%r14),%r11d
	testl %r11d,%r11d
	jnz L_521876
L_349212:
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_349213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_521876:
L_349243:
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_349244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_521877:
L_349209:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521878:
L_349204:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521879:
L_349252:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_349209
L_349253:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_521880
L_349255:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521880:
L_349254:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521882:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_349203
.p2align 0x4
L_521883:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_349203
.p2align 0x4
L_521884:
L_349256:
	xorl %ecx,%ecx
	jmp L_349208
.p2align 0x4
L_521885:
L_349198:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_349213:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_349214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_349244:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349245
L_349246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_349247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349247
.p2align 0x4
.long 0x451
L_349247:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_349245:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_349213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_349214:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_349215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_349215:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x11538)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_349216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_349216:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_349217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_349217:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349218
L_349241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_349242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349242
.p2align 0x4
.long 0x4AE
L_349242:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_349218:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_349219:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_349204
L_349220:
	cmpq $0x1,%r14
	je L_521888
L_349221:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_349219
.p2align 0x4
L_521888:
L_349222:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349223
L_349239:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_349240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349240
.p2align 0x4
.long 0x4E6
L_349240:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_349223:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_521889
L_349224:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_476:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_521889:
L_349238:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_476
.p2align 0x4
.long 0x1
rev_479:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_521895
L_349225:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_349226:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_521894
.p2align 0x4,,0x7
L_349227:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_521893
L_349228:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_349226
.p2align 0x4
L_521893:
L_349230:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_349231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_521894:
L_349235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_349236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349236
.p2align 0x4
.long 0x45B
L_349236:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_349227
.p2align 0x4
L_521895:
L_349237:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_349230
.p2align 0x4
.long 0x1
L_349231:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349232
L_349233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_349234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349234
.p2align 0x4
.long 0x451
L_349234:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_349232:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_distanceF_1
.hidden get_distanceF_1
get_distanceF_1:
L_349259:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_349260
L_349384:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_349385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349385
.p2align 0x4
.long 0x561
L_349385:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_349260:
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_349261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_51
.p2align 0x4
.long 0x556
L_349261:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r13),%r14
	movq 0x28(%r13),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_521906
L_349263:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3648:
	cmpl %ecx,%ebx
	je L_521905
L_349264:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_521904
L_349266:
	movq %r13,%r11
	movq %r13,%r10
	imulq $0x28,%r11
	imulq $0x28,%r10
	movq 0x8(%r14,%r10,1),%r9
	movq %r9,0x28(%rbp)
	imulq $0x28,%r13
	movq 0x10(%r14,%r13,1),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x0(%r14,%r11,1),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r13)
	je L_521899
L_349267:
	incl %ebx
	jo L_521898
L_349269:
	jmp loop_3648
.p2align 0x4
L_521898:
L_349268:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521899:
L_349270:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349271
L_349381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_349382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349382
.p2align 0x4
.long 0x530
L_349382:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_349271:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
L_349272:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_521900
L_349380:
	movq 0x8(%r14),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521900:
L_349273:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_521902
L_349274:
	movq 0x0(%r14),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_521901
L_349275:
	movq 0x0(%r15),%r14
	movq $0x25C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r15,0x0(%r11)
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521901:
L_349276:
	shrq $0x1,%r15
	movl %r15d,0x14(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_349277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_133
.p2align 0x4
L_521902:
L_349379:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521904:
L_349265:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521905:
L_349383:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521906:
L_349262:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A6F
L_349277:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349278
L_349377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_349378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349378
.p2align 0x4
.long 0x58F
L_349378:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_349278:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq (globalObjptr+0x5B28)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1134,%r14
	je L_521912
	cmpq $0x1135,%r14
	je L_521911
	cmpq $0x1136,%r14
	je L_521910
	cmpq $0x1137,%r14
	je L_521909
	cmpq $0x1138,%r14
	je L_521908
default_21:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_521907
L_349279:
	movq 0x8(%r13),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movq %r13,%r15
L_349280:
	movq %r15,0x58(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_349281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_distanceF_1
.p2align 0x4
L_521907:
L_349355:
	movq $0x1,%r14
	movq $0x1,%r15
L_349296:
	movq $0x25C5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521908:
L_349376:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_349296
.p2align 0x4
L_521909:
L_349375:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_349296
.p2align 0x4
L_521910:
L_349374:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_349296
.p2align 0x4
L_521911:
L_349373:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_349296
.p2align 0x4
L_521912:
L_349356:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movl 0x14(%r14),%r13d
	testl %r13d,%r13d
	jnz L_521919
L_349357:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_349365
	cmpb $0x3,%r15b
	je L_349365
	cmpb $0x4,%r15b
	je L_521916
	cmpb $0x5,%r15b
	je L_349369
	cmpb $0x6,%r15b
	je L_349369
	cmpb $0x7,%r15b
	je L_521913
L_349359:
	xorb %dl,%dl
L_349360:
	cmpb $0x2,%dl
	je default_21
L_349361:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_349296
.p2align 0x4
L_521913:
L_349369:
	movb $0x2,%dl
	jmp L_349360
.p2align 0x4
L_521916:
L_349365:
	movb $0x1,%dl
	jmp L_349360
.p2align 0x4
L_521919:
L_349372:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_349296
.p2align 0x4
.long 0x5A4
L_349281:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349282
L_349353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_349354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349354
.p2align 0x4
.long 0x2480
L_349354:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_349282:
	movq 0x50(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_349343
	cmpq $0x2,%r15
	je L_521944
L_349284:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_521943
L_349285:
	movq $0x0,0x50(%rbp)
L_349286:
	movl 0x10(%rbp),%r11d
	testl %r11d,%r11d
	jz L_349288
L_349316:
	movq 0x28(%rbp),%r11
	cmpq $0x1,%r11
	je L_349323
L_349317:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
.p2align 0x4,,0x7
L_349318:
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	je L_521937
L_349319:
	cmpq $0x1,%r13
	je L_521921
L_349320:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_349318
.p2align 0x4
L_521921:
L_349321:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349323
L_349334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_349335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349335
.p2align 0x4
.long 0x2480
L_349335:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_349323:
	movq 0x50(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_349301
	cmpq $0x2,%r15
	je L_521925
L_349325:
	movq 0x50(%rbp),%r15
L_349291:
	movq 0x38(%rbp),%r14
	andq $0x3,%r14
	jnz L_521923
L_349297:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_521922
L_349298:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	xchgq %r13,%r15
	jmp L_349280
.p2align 0x4
L_521922:
L_349299:
	movq 0x30(%rbp),%r13
	movq 0x38(%rbp),%r15
	xchgq %r13,%r14
	jmp L_349296
.p2align 0x4
L_521923:
L_349293:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_521924
L_349294:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x30(%rbp)
	jmp L_349280
.p2align 0x4
L_521924:
L_349295:
	movq 0x48(%rbp),%r13
	xchgq %r13,%r14
	jmp L_349296
.p2align 0x4
L_521925:
L_349327:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x2,%r14
	movl %r14d,%ecx
	movl %ecx,%r14d
	imull $0x5,%r14d
	jo L_521931
L_349333:
	movl %r14d,%ecx
L_349305:
	movq 0x38(%rbp),%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_349293
	cmpq $0x2,%r14
	je L_521927
L_349306:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_521926
L_349307:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	xchgq %r13,%r15
	jmp L_349280
.p2align 0x4
L_521926:
L_349308:
	movq 0x30(%rbp),%r13
	movq 0x38(%rbp),%r15
	xchgq %r13,%r14
	jmp L_349296
.p2align 0x4
L_521927:
L_349311:
	movq 0x38(%rbp),%r14
	shrq $0x2,%r14
	movl %r14d,%r13d
	cmpl %r13d,%ecx
	jl L_349293
L_349312:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_521928
L_349313:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	xchgq %r13,%r15
	jmp L_349280
.p2align 0x4
L_521928:
L_349314:
	movq 0x30(%rbp),%r13
	movq 0x38(%rbp),%r15
	xchgq %r13,%r14
	jmp L_349296
.p2align 0x4
L_521931:
L_349328:
	testl %ecx,%ecx
	jz L_349301
L_349329:
	cmpl $0x0,%ecx
	jng L_349325
L_349301:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_521932
L_349302:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_349280
.p2align 0x4
L_521932:
L_349303:
	movq 0x30(%rbp),%r13
	movq 0x38(%rbp),%r15
	xchgq %r13,%r14
	jmp L_349296
.p2align 0x4
L_521937:
L_349336:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349288
L_349338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_349339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349339
.p2align 0x4
.long 0x2480
L_349339:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_349288:
	movq 0x50(%rbp),%r15
L_349289:
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_349301
	cmpq $0x2,%r14
	je L_521938
	jmp L_349291
.p2align 0x4
L_521938:
L_349304:
	movq %r15,%r14
	shrq $0x2,%r14
	movl %r14d,%ecx
	jmp L_349305
.p2align 0x4
L_521943:
L_349341:
	xorq %r14,%r14
	xchgq %r14,%r15
	jmp L_349289
.p2align 0x4
L_521944:
L_349346:
	movq 0x50(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%r14d
	addl 0x14(%rbp),%r14d
	jo L_521946
L_349350:
	movl %r14d,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_349289
L_349351:
	movq %r15,0x50(%rbp)
	movq %r14,%r15
	jmp L_349286
.p2align 0x4
L_521946:
L_349347:
	cmpl $0x0,0x14(%rbp)
	jng L_349284
L_349343:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_521947
L_349344:
	movq $0x1,0x50(%rbp)
	jmp L_349286
.p2align 0x4
L_521947:
L_349345:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_349289
.text
.p2align 0x4
.globl coincide_1
.hidden coincide_1
coincide_1:
L_349386:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_349387
L_349410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_349411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349411
.p2align 0x4
.long 0x453
L_349411:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_349387:
	movw 0x2(%rbp),%r15w
	movb %r15b,%r14b
	shrw $0x8,%r15w
	movb %r15b,%r13b
	movw 0x0(%rbp),%r15w
	movb %r15b,%r11b
	shrw $0x8,%r15w
	movb %r15b,%r10b
	cmpb %r14b,%r11b
	jne L_349389
L_349390:
	cmpb $0x1,%r13b
	je L_521959
	cmpb $0x2,%r13b
	je L_349393
	cmpb $0x3,%r13b
	je L_349393
L_349391:
	cmpb $0x1,%r10b
	je L_521955
	cmpb $0x2,%r10b
	je L_521951
L_349393:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521951:
	movb %r13b,%cl
L_349397:
	cmpb $0x0,%cl
	je L_349393
	cmpb $0x1,%cl
	je L_349393
	cmpb $0x2,%cl
	je L_349393
L_349389:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521955:
L_349394:
	cmpb $0x1,%r13b
	je L_349393
	jmp L_349389
.p2align 0x4
L_521959:
L_349402:
	cmpb $0x1,%r10b
	je L_349393
	cmpb $0x2,%r10b
	je L_521962
	cmpb $0x3,%r10b
	je L_349393
L_349403:
	testb %r13b,%r13b
	jz L_349393
	jmp L_349389
.p2align 0x4
L_521962:
	movb %r13b,%cl
	jmp L_349397
.text
.p2align 0x4
.globl get_distanceB_1
.hidden get_distanceB_1
get_distanceB_1:
L_349412:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_349413
L_349573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_349574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349574
.p2align 0x4
.long 0x561
L_349574:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_349413:
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_349414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_51
.p2align 0x4
.long 0x556
L_349414:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r13),%r14
	movq 0x28(%r13),%r11
	movq 0x18(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_521972
L_349417:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3649:
	cmpl %ebx,%ecx
	je L_521971
L_349418:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_521970
L_349421:
	movq %r13,%r11
	imulq $0x28,%r11
	imulq $0x28,%r13
	movq 0x20(%r14,%r13,1),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r14,%r11,1),%r13
	cmpq %r10,0x10(%r13)
	je L_521968
L_349422:
	incl %ebx
	jo L_521967
L_349424:
	jmp loop_3649
.p2align 0x4
L_521967:
L_349423:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521968:
L_349425:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
L_349426:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_521969
L_349571:
	movq 0x8(%r14),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521969:
L_349427:
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_349428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_133
.p2align 0x4
L_521970:
L_349420:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521971:
L_349572:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521972:
L_349416:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A70
L_349428:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349429
L_349569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_349570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349570
.p2align 0x4
.long 0x530
L_349570:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_349429:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq (globalObjptr+0x5B28)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112F,%r14
	je L_521977
	cmpq $0x1130,%r14
	je L_521976
	cmpq $0x1131,%r14
	je L_521975
	cmpq $0x1132,%r14
	je L_521974
default_22:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_521973
L_349430:
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movq $0x1,0x50(%rbp)
L_349431:
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_349432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_51
.p2align 0x4
L_521973:
L_349548:
	movq $0x1,%r14
	movq $0x1,%r15
L_349448:
	movq $0x25C5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_521974:
L_349568:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_349448
.p2align 0x4
L_521975:
L_349567:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_349448
.p2align 0x4
L_521976:
L_349566:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_349448
.p2align 0x4
L_521977:
L_349549:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movl 0x14(%r14),%r13d
	testl %r13d,%r13d
	jnz L_521984
L_349550:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_349558
	cmpb $0x3,%r15b
	je L_349558
	cmpb $0x4,%r15b
	je L_521981
	cmpb $0x5,%r15b
	je L_349562
	cmpb $0x6,%r15b
	je L_349562
	cmpb $0x7,%r15b
	je L_521978
L_349552:
	xorb %dl,%dl
L_349553:
	cmpb $0x2,%dl
	je default_22
L_349554:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_349448
.p2align 0x4
L_521978:
L_349562:
	movb $0x2,%dl
	jmp L_349553
.p2align 0x4
L_521981:
L_349558:
	movb $0x1,%dl
	jmp L_349553
.p2align 0x4
L_521984:
L_349565:
	movq $0x1,%r14
	movq $0x1,%r15
	jmp L_349448
.p2align 0x4
.long 0x1004
L_349432:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r13
	movq %r13,0x58(%rbp)
	movq 0x18(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_349416
L_349434:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3650:
	cmpl %ecx,%ebx
	je L_522003
L_349435:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_349420
L_349437:
	movq %r13,%r11
	imulq $0x28,%r11
	imulq $0x28,%r13
	movq 0x18(%r14,%r13,1),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r14,%r11,1),%r13
	movq 0x10(%r13),%r10
	cmpq %r10,0x40(%rbp)
	je L_521987
L_349438:
	incl %ebx
	jo L_349423
L_349439:
	jmp loop_3650
.p2align 0x4
L_521987:
L_349440:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349441
L_349540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_349541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349541
.p2align 0x4
.long 0x1DA9
L_349541:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_349441:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_522000
L_349442:
	movq 0x0(%r14),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_521999
L_349443:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_521997
	cmpq $0x2,%r15
	je L_521991
L_349444:
	movq 0x50(%rbp),%r15
	andq $0x3,%r15
	jnz L_521989
L_349449:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_521988
L_349450:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x30(%rbp)
	jmp L_349431
.p2align 0x4
L_521988:
L_349451:
	movq 0x38(%rbp),%r14
	movq 0x50(%rbp),%r13
	xchgq %r13,%r15
	jmp L_349448
.p2align 0x4
L_521989:
	movq %r14,%r15
L_349445:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_521990
L_349446:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_349431
.p2align 0x4
L_521990:
L_349447:
	movq 0x30(%rbp),%r13
	xchgq %r13,%r14
	jmp L_349448
.p2align 0x4
L_521991:
L_349455:
	movq %r14,%r15
	shrq $0x2,%r15
	movl %r15d,%r13d
	movq 0x50(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_521996
	cmpq $0x2,%r15
	je L_521993
L_349456:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_521992
L_349457:
	movq 0x0(%r15),%r11
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r11,0x30(%rbp)
	jmp L_349431
.p2align 0x4
L_521992:
L_349458:
	movq 0x38(%rbp),%r14
	movq 0x50(%rbp),%r13
	xchgq %r13,%r15
	jmp L_349448
.p2align 0x4
L_521993:
L_349460:
	movq 0x50(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%r11d
	cmpl %r11d,%r13d
	jl L_521995
L_349461:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_521994
L_349462:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x30(%rbp)
	jmp L_349431
.p2align 0x4
L_521994:
L_349463:
	movq 0x38(%rbp),%r14
	movq 0x50(%rbp),%r13
	xchgq %r13,%r15
	jmp L_349448
.p2align 0x4
L_521995:
	movq %r14,%r15
	jmp L_349445
.p2align 0x4
L_521996:
	movq %r14,%r15
	jmp L_349445
.p2align 0x4
L_521997:
L_349452:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_521998
L_349453:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_349431
.p2align 0x4
L_521998:
L_349454:
	movq 0x38(%rbp),%r14
	movq 0x50(%rbp),%r13
	xchgq %r13,%r15
	jmp L_349448
.p2align 0x4
L_521999:
L_349465:
	shrq $0x1,%r15
	movl %r15d,0x14(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_349466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_distanceB_1
.p2align 0x4
L_522000:
L_349539:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_522003:
L_349542:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349543
L_349546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_349547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349547
.p2align 0x4
.long 0x1010
L_349547:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_349543:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_522004
L_349544:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_349431
.p2align 0x4
L_522004:
L_349545:
	movq 0x38(%rbp),%r14
	movq 0x50(%rbp),%r13
	xchgq %r13,%r15
	jmp L_349448
.p2align 0x4
.long 0x4A71
L_349466:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349467
L_349537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_349538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349538
.p2align 0x4
.long 0x15CF
L_349538:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_349467:
	movq 0x58(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_349527
	cmpq $0x2,%r15
	je L_522030
L_349469:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_522029
L_349470:
	movq $0x0,0x58(%rbp)
L_349471:
	movl 0x10(%rbp),%r11d
	testl %r11d,%r11d
	jz L_349473
L_349500:
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je L_349507
L_349501:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
.p2align 0x4,,0x7
L_349502:
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	je L_522023
L_349503:
	cmpq $0x1,%r13
	je L_522007
L_349504:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_349502
.p2align 0x4
L_522007:
L_349505:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349507
L_349518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_349519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349519
.p2align 0x4
.long 0x15CF
L_349519:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_349507:
	movq 0x58(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_349485
	cmpq $0x2,%r15
	je L_522011
L_349509:
	movq 0x58(%rbp),%r15
L_349476:
	movq 0x50(%rbp),%r14
	andq $0x3,%r14
	jnz L_522009
L_349481:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_522008
L_349482:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r13,0x30(%rbp)
	jmp L_349431
.p2align 0x4
L_522008:
L_349483:
	movq 0x38(%rbp),%r13
	movq 0x50(%rbp),%r15
	xchgq %r13,%r14
	jmp L_349448
.p2align 0x4
L_522009:
L_349478:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_522010
L_349479:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_349431
.p2align 0x4
L_522010:
L_349480:
	movq 0x30(%rbp),%r13
	xchgq %r13,%r14
	jmp L_349448
.p2align 0x4
L_522011:
L_349511:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	shrq $0x2,%r14
	movl %r14d,%ecx
	movl %ecx,%r14d
	imull $0x5,%r14d
	jo L_522017
L_349517:
	movl %r14d,%ecx
L_349489:
	movq 0x50(%rbp),%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_349478
	cmpq $0x2,%r14
	je L_522013
L_349490:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_522012
L_349491:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r13,0x30(%rbp)
	jmp L_349431
.p2align 0x4
L_522012:
L_349492:
	movq 0x38(%rbp),%r13
	movq 0x50(%rbp),%r15
	xchgq %r13,%r14
	jmp L_349448
.p2align 0x4
L_522013:
L_349495:
	movq 0x50(%rbp),%r14
	shrq $0x2,%r14
	movl %r14d,%r13d
	cmpl %r13d,%ecx
	jl L_349478
L_349496:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_522014
L_349497:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r13,0x30(%rbp)
	jmp L_349431
.p2align 0x4
L_522014:
L_349498:
	movq 0x38(%rbp),%r13
	movq 0x50(%rbp),%r15
	xchgq %r13,%r14
	jmp L_349448
.p2align 0x4
L_522017:
L_349512:
	testl %ecx,%ecx
	jz L_349485
L_349513:
	cmpl $0x0,%ecx
	jng L_349509
L_349485:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_522018
L_349486:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_349431
.p2align 0x4
L_522018:
L_349487:
	movq 0x38(%rbp),%r14
	movq 0x50(%rbp),%r13
	xchgq %r13,%r15
	jmp L_349448
.p2align 0x4
L_522023:
L_349520:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349473
L_349522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_349523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349523
.p2align 0x4
.long 0x15CF
L_349523:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_349473:
	movq 0x58(%rbp),%r15
L_349474:
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_349485
	cmpq $0x2,%r14
	je L_522024
	jmp L_349476
.p2align 0x4
L_522024:
L_349488:
	movq %r15,%r14
	shrq $0x2,%r14
	movl %r14d,%ecx
	jmp L_349489
.p2align 0x4
L_522029:
L_349525:
	xorq %r14,%r14
	xchgq %r14,%r15
	jmp L_349474
.p2align 0x4
L_522030:
L_349530:
	movq 0x58(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%r14d
	addl 0x14(%rbp),%r14d
	jo L_522032
L_349534:
	movl %r14d,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_349474
L_349535:
	movq %r15,0x58(%rbp)
	movq %r14,%r15
	jmp L_349471
.p2align 0x4
L_522032:
L_349531:
	cmpl $0x0,0x14(%rbp)
	jng L_349469
L_349527:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_522033
L_349528:
	movq $0x1,0x58(%rbp)
	jmp L_349471
.p2align 0x4
L_522033:
L_349529:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_349474
.text
.p2align 0x4
.globl doit_96
.hidden doit_96
doit_96:
loop_3651:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_349575
L_349597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_349598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349598
.p2align 0x4
.long 0x45B
L_349598:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_349575:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_522037
L_349576:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r13
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r14)
	movq %r13,%r15
L_349577:
	movq %r15,0x28(%rbp)
	movl $0x0,0x20(%rbp)
	movl $0x0,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x20,%rbp
	leaq (toList_19+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2223
.p2align 0x4
L_522037:
L_349585:
	movq 0x8(%rbp),%r11
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r10
	cmpq $0x1,%r10
	je L_522038
L_349586:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
	xchgq %r11,%r14
L_349587:
	movq 0x8(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11)
	movq %r11,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	movq %r14,0x8(%r11)
	jmp L_349577
.p2align 0x4
L_522038:
L_349588:
	cmpq $0x1,%r13
	je L_522041
L_349589:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_349590:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522040
.p2align 0x4,,0x7
L_349591:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_522039
L_349592:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_349590
.p2align 0x4
L_522039:
L_349593:
	movq 0x28(%rbp),%r11
	movq 0x20(%rbp),%r15
	movq $0x1,%r13
	xchgq %r11,%r14
	jmp L_349587
.p2align 0x4
L_522040:
L_349594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_349595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349595
.p2align 0x4
.long 0x4DE
L_349595:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_349591
.p2align 0x4
L_522041:
L_349596:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51E
toList_19:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_349578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_4789
.p2align 0x4
.long 0x51E
L_349578:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je loop_3651
L_349579:
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_349580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doit_96
.p2align 0x4
.long 0x48F
L_349580:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349581
L_349582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_349583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349583
.p2align 0x4
.long 0x5E5
L_349583:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_349581:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2223
.hidden x_2223
x_2223:
L_349599:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_349600
L_352513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_352514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352514
.p2align 0x4
.long 0x522
L_352514:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_349600:
	movq 0x18(%rbp),%r15
	movq 0x90(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x50(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x4(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_349601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2225
.p2align 0x4
.long 0x22BE
L_349601:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349602
L_352511:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_352512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352512
.p2align 0x4
.long 0x4CB0
L_352512:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_349602:
	movq 0x18(%rbp),%r11
	cmpq $0x1,%r11
	je L_522066
L_349603:
	movq 0x0(%r11),%r10
	movq %r10,0xB0(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0xB8(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0xC0(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0xC8(%rbp)
	movq 0x98(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0xD0(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0xD8(%rbp)
	movq 0x0(%r11),%r14
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0xE0(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_522065
L_349605:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_522064
L_349606:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_349608:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_522063
L_352496:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCC4,%r11
	jne L_522062
L_352497:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_522055
L_349609:
	incl %ecx
	movl %ecx,0x14(%rbp)
	jo L_522054
L_349611:
	cmpq $0x1,%r15
	je L_522045
L_349612:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_349608
.p2align 0x4
L_522045:
L_349613:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349614
L_352494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_352495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352495
.p2align 0x4
.long 0x4CAF
L_352495:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_349614:
	movl 0x14(%rbp),%ecx
L_349615:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_522052
L_349617:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_349619
L_352493:
	movl %ecx,0x0(%r15)
L_349619:
	movq 0xD8(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x1339,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1989,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%r11),%r15
	movq $0x28DF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq 0xC8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1130,%r15
	je L_522050
	cmpq $0x1131,%r15
	je L_522049
	cmpq $0x1132,%r15
	je L_522048
	cmpq $0x1133,%r15
	je L_522047
L_349620:
	movq 0x18(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
L_349621:
	cmpq $0x1,%r15
	je L_522046
L_349622:
	movl 0x4(%r15),%r14d
	movl %r14d,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x14(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (memloc_188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
L_522046:
L_352181:
	movq 0x18(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x100(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x108(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x10C(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0xE0,%rbp
	leaq (L_352182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp near_1
.p2align 0x4
L_522047:
L_352487:
	movq 0x0(%r14),%r15
L_352488:
	movq %r15,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x104(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xD8,%rbp
	leaq (L_352489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp near_1
.p2align 0x4
L_522048:
L_352429:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
L_352430:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x58(%rbp)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_522049:
L_352341:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
L_352342:
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x1C(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x90(%rbp)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_522050:
L_352253:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
L_352254:
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x1C(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x90(%rbp)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_522052:
L_349616:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_522054:
L_349610:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_522055:
L_352499:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_349616
L_352500:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_522060
L_352508:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_352502:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1130,%r15
	je L_522059
	cmpq $0x1131,%r15
	je L_522058
	cmpq $0x1132,%r15
	je L_522057
	cmpq $0x1133,%r15
	je L_522056
L_352503:
	movq 0x18(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
	jmp L_349621
.p2align 0x4
L_522056:
L_352507:
	movq 0x0(%r14),%r15
	jmp L_352488
.p2align 0x4
L_522057:
L_352506:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp L_352430
.p2align 0x4
L_522058:
L_352505:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
	jmp L_352342
.p2align 0x4
L_522059:
L_352504:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
	jmp L_352254
.p2align 0x4
L_522060:
L_352501:
	movq %r11,%r15
	jmp L_352502
.p2align 0x4
L_522062:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_349609
.p2align 0x4
L_522063:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_349609
.p2align 0x4
L_522064:
L_352509:
	xorl %ecx,%ecx
	jmp L_349615
.p2align 0x4
L_522065:
L_349604:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_522066:
L_350031:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A72
memloc_188:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349623
L_352179:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_352180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352180
.p2align 0x4
.long 0x4C87
L_352180:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_349623:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x90(%rbp)
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x10(%rbp),%r15d
	negl %r15d
	jo L_349610
L_349624:
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0xD8(%rbp)
	movslq %r15d,%r10
	shlq $0x1,%r10
	orq $0x1,%r10
	movq %r10,0xE0(%rbp)
	movq 0x0(%r11),%r15
	movq 0x8(%r15),%r10
	movq %r10,0xE8(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0xF0(%rbp)
	movq %r13,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_349625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C8A
L_352182:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352183
L_352251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_352252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352252
.p2align 0x4
.long 0x4C8F
L_352252:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_352183:
	movq 0xD0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_522093
L_352185:
	testl %r13d,%r13d
	jz L_522070
L_352186:
	movq 0x98(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_352187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_1
.p2align 0x4
L_522070:
L_352221:
	cmpq $0x1,0x10(%rbp)
	je L_522092
L_352222:
L_349757:
	movq (globalObjptr+0x808)(%rip),%r15
	cmpl $0x1,0x0(%r15)
	jg L_522082
L_349758:
	movq $0x1,0x18(%rbp)
L_349759:
	movq (globalObjptr+0x808)(%rip),%r14
	cmpl $0x2,0x0(%r14)
	jg L_522081
L_349760:
	movq $0x1,%r15
L_349761:
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x259F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	cmpq $0x1,0x18(%rbp)
	je L_522080
L_349762:
	movq %r13,0x10(%rbp)
L_349763:
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_349764:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522079
.p2align 0x4,,0x7
L_349765:
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_522078
L_349766:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_349767:
	cmpq $0x1,%r15
	je L_522071
L_349768:
	movq %r13,0x10(%rbp)
	movq %r14,0x30(%rbp)
	movq %r15,0x18(%rbp)
L_349769:
	jmp L_349764
.p2align 0x4
L_522071:
L_349770:
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
.p2align 0x4,,0x7
L_349771:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522077
.p2align 0x4,,0x7
L_349772:
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_522072
L_349773:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x18(%rbp),%r14
	jmp L_349767
.p2align 0x4
L_522072:
L_349774:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_522076
L_349775:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_349776:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522075
.p2align 0x4,,0x7
L_349777:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_522073
L_349778:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_349776
.p2align 0x4
L_522073:
L_349780:
	cmpq $0x1,%r15
	je L_522074
L_349781:
	movq $0x22A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
L_349782:
	movq 0xB0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC8,%rbp
	leaq (L_349783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessTransfer_1
.p2align 0x4
L_522074:
L_351887:
	movq $0x1,0x10(%rbp)
	jmp L_349782
.p2align 0x4
L_522075:
L_351888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351889
.p2align 0x4
.long 0x4C52
L_351889:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_349777
.p2align 0x4
L_522076:
L_351890:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_349780
.p2align 0x4
L_522077:
L_351891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351892
.p2align 0x4
.long 0x4C53
L_351892:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_349772
.p2align 0x4
L_522078:
L_351893:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_349776
.p2align 0x4
L_522079:
L_351894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351895
.p2align 0x4
.long 0x4C52
L_351895:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_349765
.p2align 0x4
L_522080:
L_351896:
	movq %r13,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_349771
.p2align 0x4
L_522081:
L_351897:
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_351898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
L_522082:
L_351925:
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0xC8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1130,%r13
	je L_522090
	cmpq $0x1131,%r13
	je L_522088
	cmpq $0x1132,%r13
	je L_522086
	cmpq $0x1133,%r13
	je L_522084
L_351926:
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_522083
L_351927:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_351928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522083:
L_351968:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_351969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522084:
L_352067:
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_522085
L_352068:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_352069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522085:
L_352073:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_352074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522086:
L_352032:
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_522087
L_352033:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_352034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522087:
L_352062:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_352063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522088:
L_351991:
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_522089
L_351992:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_351993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522089:
L_352027:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_352028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522090:
L_351973:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_522091
L_351974:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_351975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522091:
L_351986:
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_351987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522092:
L_352224:
	movq $0x1,0x10(%rbp)
	jmp L_349757
.p2align 0x4
L_522093:
L_349634:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4CAE
L_352489:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349757
L_352491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352492
.p2align 0x4
.long 0x4C7A
L_352492:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_349757
.p2align 0x4
.long 0x4CA4
L_352431:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movl %r15d,0xD8(%rbp)
	movq $0x3,0xE0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C90
L_352343:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movl %r15d,0xD8(%rbp)
	movq $0x3,0xE0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C90
L_352255:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movl %r15d,0xD8(%rbp)
	movq $0x3,0xE0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4A73
L_349625:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x100(%rbp)
	movq $0x3,0x108(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x100,%rbp
	leaq (L_349626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C8B
L_352187:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_522120
L_352188:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_352189:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522119
.p2align 0x4,,0x7
L_352190:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_522096
L_352191:
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_352189
.p2align 0x4
L_522096:
L_352192:
	movq %r14,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_352193:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522118
.p2align 0x4,,0x7
L_352194:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_522097
L_352195:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_352193
.p2align 0x4
L_522097:
L_352196:
	movq %r15,0x48(%rbp)
L_352197:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_522117
L_352198:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_352199:
	incl %ecx
	jo L_349610
L_352200:
	cmpq $0x1,%r15
	je L_522098
L_352201:
	movq 0x8(%r15),%r15
	jmp L_352199
.p2align 0x4
L_522098:
L_352202:
L_352203:
	movslq %ecx,%rdx
	movq %rdx,0x50(%rbp)
	testq %rdx,%rdx
	jz L_522115
L_352204:
	cmpq $0x7FFFFFFF,%rdx
	ja L_522114
L_352205:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x160D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_352206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352206
.p2align 0x4
.long 0x4C8C
L_352206:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq %rax,0x58(%rbp)
L_352207:
	movq 0x48(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3654:
	cmpq 0x50(%rbp),%r15
	jnl L_522100
L_352239:
	cmpq $0x1,%r14
	je L_522099
L_352240:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x58(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3654
.p2align 0x4
L_522099:
L_352163:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_522100:
L_352208:
	movq 0x58(%rbp),%r15
	movq $0x18FB,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_349634
L_352210:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,%r13d
	jne L_349662
L_352212:
	cmpl $0x0,%r15d
	jl L_522111
L_352213:
	movq $0x1,0x48(%rbp)
	movl $0x0,0x1C(%rbp)
.p2align 0x4,,0x7
loop_3655:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522110
.p2align 0x4,,0x7
L_352214:
	movl 0x1C(%rbp),%r15d
	cmpl 0x18(%rbp),%r15d
	jnl L_522107
L_352225:
	movl %r15d,%r14d
	incl %r14d
	movslq %r15d,%r13
	movq 0x58(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r11
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r10
	movb 0x0(%r10),%r9b
	movq 0x8(%r10),%r8
	cmpb $0x2,%r9b
	je L_522106
	cmpb $0x3,%r9b
	je L_522105
	cmpb $0x4,%r9b
	je L_522104
	cmpb $0x5,%r9b
	je L_522103
	cmpb $0x6,%r9b
	je L_522102
	cmpb $0x7,%r9b
	je L_522101
L_352147:
	movq (globalObjptr+0x5C18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_522101:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
L_352233:
	movl %ecx,0x1C(%rbp)
	movq $0x21D1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movzbl %dl,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	jmp loop_3655
.p2align 0x4
L_522102:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
	jmp L_352233
.p2align 0x4
L_522103:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
	jmp L_352233
.p2align 0x4
L_522104:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
L_352229:
	movl %ecx,0x1C(%rbp)
	movq $0x21D1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x2203,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movzbl %dl,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	jmp loop_3655
.p2align 0x4
L_522105:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
	jmp L_352229
.p2align 0x4
L_522106:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
	jmp L_352229
.p2align 0x4
L_522107:
L_352215:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_352221
L_352216:
	movq $0x229F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_522108
L_352217:
L_352218:
	movq $0x22A5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r11,0x10(%rbp)
	jmp L_349757
.p2align 0x4
L_522108:
L_352219:
	movq %r13,0x10(%rbp)
	jmp L_349757
.p2align 0x4
L_522110:
L_352236:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_352237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352237
.p2align 0x4
.long 0x4C8D
L_352237:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_352214
.p2align 0x4
L_522111:
L_349662:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_522114:
L_352165:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_522115:
L_352243:
	movq (globalObjptr+0x5C10)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_352207
.p2align 0x4
L_522117:
L_352244:
	xorl %ecx,%ecx
	jmp L_352203
.p2align 0x4
L_522118:
L_352245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_352246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352246
.p2align 0x4
.long 0x4C8E
L_352246:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_352194
.p2align 0x4
L_522119:
L_352247:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_352248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352248
.p2align 0x4
.long 0x4C8E
L_352248:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_352190
.p2align 0x4
L_522120:
L_352249:
	movq $0x1,0x48(%rbp)
	jmp L_352197
.p2align 0x4
.long 0x4A82
L_349783:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349784
L_351885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351886
.p2align 0x4
.long 0x4C51
L_351886:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_349784:
	movq 0xB8(%rbp),%r15
	cmpq $0x1,%r15
	je L_522123
L_349785:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_349786:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522122
.p2align 0x4,,0x7
L_349787:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_522121
L_349788:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_349786
.p2align 0x4
L_522121:
L_349789:
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
L_349790:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_349791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp uses_defs_kills_0
.p2align 0x4
L_522122:
L_351882:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_351883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351883
.p2align 0x4
.long 0x4C50
L_351883:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_349787
.p2align 0x4
L_522123:
L_351884:
	movq $0x1,%r14
	xchgq %r14,%r15
L_349798:
	cmpq $0x1,%r15
	je L_522181
L_349799:
	movq $0x229F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xA8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x21C2,%r15
	je L_522168
L_351873:
	movq %r14,0x198(%rbp)
	movq 0x170(%r13),%r15
	movq 0x168(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x160(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x158(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x150(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x148(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x140(%r13),%r14
	movq %r14,0x40(%rbp)
	movq 0x138(%r13),%r14
	movq %r14,0x48(%rbp)
	movq 0x130(%r13),%r14
	movq %r14,0x50(%rbp)
	movq 0x128(%r13),%r14
	movq %r14,0x58(%rbp)
	movq 0x120(%r13),%r14
	movq %r14,0x60(%rbp)
	movq 0x118(%r13),%r14
	movq %r14,0x68(%rbp)
	movq 0x110(%r13),%r14
	movq %r14,0x70(%rbp)
	movq 0x108(%r13),%r14
	movq %r14,0x78(%rbp)
	movq 0x100(%r13),%r14
	movq %r14,0x80(%rbp)
	movq 0xF8(%r13),%r14
	movq %r14,0x88(%rbp)
	movq 0xF0(%r13),%r14
	movq %r14,0x90(%rbp)
	movq 0xE8(%r13),%r14
	movq %r14,0x98(%rbp)
	movq 0xE0(%r13),%r14
	movq %r14,0xB8(%rbp)
	movq 0xD8(%r13),%r14
	movq %r14,0xC0(%rbp)
	movq 0xD0(%r13),%r14
	movq %r14,0xC8(%rbp)
	movq 0xC8(%r13),%r14
	movq %r14,0xD0(%rbp)
	movq 0xC0(%r13),%r14
	movq %r14,0xD8(%rbp)
	movq 0xB8(%r13),%r14
	movq %r14,0xE0(%rbp)
	movq 0xB0(%r13),%r14
	movq %r14,0xE8(%rbp)
	movq 0xA8(%r13),%r14
	movq %r14,0xF0(%rbp)
	movq 0xA0(%r13),%r14
	movq %r14,0xF8(%rbp)
	movb 0x4(%r13),%r14b
	movq 0x98(%r13),%r11
	movq %r11,0x100(%rbp)
	movq 0x90(%r13),%r11
	movq %r11,0x108(%rbp)
	movq 0x88(%r13),%r11
	movq %r11,0x110(%rbp)
	movq 0x80(%r13),%r11
	movq %r11,0x118(%rbp)
	movq 0x78(%r13),%r11
	movq %r11,0x120(%rbp)
	movq 0x70(%r13),%r11
	movq %r11,0x128(%rbp)
	movq 0x68(%r13),%r11
	movq %r11,0x130(%rbp)
	movq 0x60(%r13),%r11
	movq %r11,0x138(%rbp)
	movq 0x58(%r13),%r11
	movq %r11,0x140(%rbp)
	movq 0x50(%r13),%r11
	movq %r11,0x148(%rbp)
	movq 0x48(%r13),%r11
	movq %r11,0x150(%rbp)
	movq 0x40(%r13),%r11
	movq %r11,0x158(%rbp)
	movq 0x38(%r13),%r11
	movq %r11,0x160(%rbp)
	movq 0x30(%r13),%r11
	movq %r11,0x168(%rbp)
	movq 0x28(%r13),%r11
	movq %r11,0x170(%rbp)
	movq 0x20(%r13),%r11
	movq %r11,0x178(%rbp)
	movl 0x0(%r13),%r11d
	movq 0x18(%r13),%r10
	movq %r10,0x180(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0x188(%rbp)
	movq 0x8(%r13),%r10
	movb 0x5(%r13),%r9b
	movb %r9b,0xA8(%rbp)
	movb %r14b,0xA9(%rbp)
	movl %r11d,0xAC(%rbp)
	movq %r10,0x190(%rbp)
x_1126:
	movq 0xA0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x1A0(%rbp)
	movq (globalObjptr+0x808)(%rip),%r13
	cmpl $0x1,0x0(%r13)
	jng L_522143
L_351062:
	movq 0x20(%r15),%r13
	movq %r13,0x1A8(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x1B0(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x1B8(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x1C8(%rbp)
	movq 0xB0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1135,%r15
	je L_522141
	cmpq $0x1136,%r15
	je L_522139
	cmpq $0x1137,%r15
	je L_522137
	cmpq $0x1138,%r15
	je L_522135
	cmpq $0x1139,%r15
	je L_522134
	cmpq $0x113A,%r15
	je L_522133
	cmpq $0x113B,%r15
	je L_522131
L_351063:
	movq 0x18(%r13),%r11
	movq %r11,0x1A8(%rbp)
	movq 0x10(%r13),%r15
	movq 0x0(%r13),%r14
	movb 0x21(%r15),%r13b
	testb %r13b,%r13b
	jnz L_522130
L_351064:
	movq (globalObjptr+0xE8E0)(%rip),%r13
	movq %r13,0x1B0(%rbp)
L_351065:
	movq 0x28(%r15),%r13
	cmpq $0x1,%r13
	je L_522128
L_351066:
	cmpq $0x1,%r14
	je L_522124
L_351067:
	movq %r13,0x1D8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x1B8(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x1D0(%rbp)
L_351068:
	movq 0x8(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	addq $0x1E8,%rbp
	leaq (toString_477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_4
.p2align 0x4
L_522124:
L_351130:
	movq %r13,0x1B8(%rbp)
	movq $0x1,%r15
L_351079:
	cmpq $0x1,%r15
	je L_522127
L_351080:
	movq 0x8(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq $0x1,0x1D8(%rbp)
.p2align 0x4,,0x7
L_351081:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522126
.p2align 0x4,,0x7
L_351082:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1C0(%rbp),%r14
	cmpq $0x1,%r14
	je L_522125
L_351083:
	movq %r15,0x1D8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1C0(%rbp)
	movq %r15,0x1D0(%rbp)
	jmp L_351081
.p2align 0x4
L_522125:
L_351084:
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x1E8(%rbp)
	addq $0x1E0,%rbp
	leaq (L_351085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_522126:
L_351122:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_351123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351123
.p2align 0x4
.long 0x4BA8
L_351123:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	jmp L_351082
.p2align 0x4
L_522127:
L_351124:
	movq $0x1,%r15
L_351087:
	movq %r15,0x1D8(%rbp)
	addq $0x1D8,%rbp
	leaq (L_351088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522128:
L_351131:
	cmpq $0x1,%r14
	je L_522129
L_351132:
	movq 0x8(%r14),%r13
	movq %r13,0x1B8(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x1D0(%rbp)
	movq (globalObjptr+0xE368)(%rip),%r14
	movq %r14,0x1D8(%rbp)
	jmp L_351068
.p2align 0x4
L_522129:
L_351133:
	movq $0x1,%r15
	movq (globalObjptr+0xE368)(%rip),%r14
	movq %r14,0x1B8(%rbp)
	jmp L_351079
.p2align 0x4
L_522130:
L_351134:
	movq (globalObjptr+0xE950)(%rip),%r13
	movq %r13,0x1B0(%rbp)
	jmp L_351065
.p2align 0x4
L_522131:
L_351365:
	movq 0x0(%r13),%r15
	movq 0x1C8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_522132
L_351366:
	movq %r15,0x1B0(%rbp)
	movq %r13,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_351367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522132:
L_351371:
	movq %r15,0x1B0(%rbp)
	movq %r13,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_351372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522133:
L_351337:
	movq 0x10(%r13),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x1B0(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x1D8(%rbp)
	addq $0x1D8,%rbp
	leaq (toString_483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp condition_layout_1
.p2align 0x4
L_522134:
L_351282:
	movq 0x10(%r13),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D8,%rbp
	leaq (toString_482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_4
.p2align 0x4
L_522135:
L_351247:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x1C8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_522136
L_351248:
	movq %r15,0x1C0(%rbp)
	movq %r13,0x1C8(%rbp)
	addq $0x1C0,%rbp
	leaq (L_351249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522136:
L_351277:
	movq %r15,0x1C0(%rbp)
	movq %r13,0x1C8(%rbp)
	addq $0x1C0,%rbp
	leaq (L_351278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522137:
L_351191:
	movq 0x20(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x1B8(%rbp)
	movq 0x18(%r13),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x1C8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x1E0(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x1E8(%rbp)
	movl 0x0(%r13),%r14d
	testl %r14d,%r14d
	jnz L_522138
L_351192:
	movq %r15,0x1F8(%rbp)
	movq %r11,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_351193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522138:
L_351242:
	movq %r15,0x1F8(%rbp)
	movq %r11,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_351243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522139:
L_351163:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_522140
L_351164:
	movq 0x8(%r14),%r13
	movq %r13,0x1A8(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x1B8(%rbp)
	movq %r14,%r15
L_351165:
	movq %r15,0x1C8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C8,%rbp
	leaq (toString_479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_42
.p2align 0x4
L_522140:
L_351190:
	movq $0x1,%r15
L_351178:
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_351179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522141:
L_351135:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_522142
L_351136:
	movq 0x8(%r14),%r13
	movq %r13,0x1A8(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x1B8(%rbp)
	movq %r14,%r15
L_351137:
	movq %r15,0x1C8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C8,%rbp
	leaq (toString_478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_42
.p2align 0x4
L_522142:
L_351162:
	movq $0x1,%r15
L_351150:
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_351151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522143:
L_349803:
	movq 0xB0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1135,%r14
	je L_522167
	cmpq $0x1136,%r14
	je L_522166
	cmpq $0x1137,%r14
	je L_522165
	cmpq $0x1138,%r14
	je L_522164
	cmpq $0x1139,%r14
	je L_522163
	cmpq $0x113A,%r14
	je L_522146
	cmpq $0x113B,%r14
	je L_522144
L_349804:
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
L_349805:
	movq 0x30(%rbp),%r15
	movl 0x8(%r15),%r14d
	movl %r14d,0x180(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x188(%rbp)
	movb 0x20(%r15),%r14b
	movb %r14b,0xAA(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x190(%rbp)
	movl 0xC(%r15),%r14d
	movl %r14d,0x184(%rbp)
	movl 0x10(%r15),%r14d
	movl %r14d,0x1A8(%rbp)
	movl 0x14(%r15),%r14d
	movl %r14d,0x1AC(%rbp)
	movb 0x21(%r15),%r14b
	movb %r14b,0xAB(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x1B8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x1C0(%rbp)
	movb 0x1(%r15),%r13b
	movb %r13b,0x1C8(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x1C9(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x1D0(%rbp)
	movq %r14,0x1E0(%rbp)
	addq $0x1E0,%rbp
	leaq (L_349806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
L_522144:
L_351050:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
L_351051:
	movq 0x1A0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x21C0,%r14
	je L_522145
L_351061:
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movw 0x0(%r15),%r10w
	movq 0x18(%r15),%r9
	movq 0x10(%r15),%r8
	movq 0x8(%r15),%rsp
	movq $0x29FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x8(%r15)
	movq %r8,0x10(%r15)
	movq %r9,0x18(%r15)
	movq %r11,0x20(%r15)
	movq %r13,0x28(%r15)
	movq %r14,0x30(%r15)
	addq $0x40,%r12
	movzwl %r10w,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x30(%rbp)
L_351053:
	movq 0x20(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_351054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
L_522145:
L_351052:
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movw 0x0(%r15),%r10w
	movq 0x18(%r15),%r9
	movq 0x10(%r15),%r8
	movq 0x8(%r15),%rsp
	movq $0x29FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x8(%r15)
	movq %r8,0x10(%r15)
	movq %r9,0x18(%r15)
	movq %r11,0x20(%r15)
	movq %r13,0x28(%r15)
	movq %r14,0x30(%r15)
	addq $0x48,%r12
	movzwl %r10w,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x38(%r15)
	movq %r15,0x30(%rbp)
	jmp L_351053
.p2align 0x4
L_522146:
L_350794:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x50(%rbp)
	movq $0x1,0x58(%rbp)
L_350795:
	movzbq 0x50(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_522147
	leaq jumpTable_868(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_868:
.quad L_522162,L_522161,L_522160,L_522159,L_522158,L_522157,L_522156,L_522155,L_522154,L_522153,L_522152,L_522151,L_522150,L_522149,L_522148
.text
.p2align 0x4
L_522147:
L_350796:
	movb $0x1,0x51(%rbp)
L_350797:
	movq 0x20(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
L_522148:
L_351049:
	movb $0xE,0x51(%rbp)
	jmp L_350797
.p2align 0x4
L_522149:
L_351048:
	movb $0xF,0x51(%rbp)
	jmp L_350797
.p2align 0x4
L_522150:
L_351047:
	movb $0xC,0x51(%rbp)
	jmp L_350797
.p2align 0x4
L_522151:
L_351046:
	movb $0xD,0x51(%rbp)
	jmp L_350797
.p2align 0x4
L_522152:
L_351045:
	movb $0xA,0x51(%rbp)
	jmp L_350797
.p2align 0x4
L_522153:
L_351044:
	movb $0xB,0x51(%rbp)
	jmp L_350797
.p2align 0x4
L_522154:
L_351043:
	movb $0x8,0x51(%rbp)
	jmp L_350797
.p2align 0x4
L_522155:
L_351042:
	movb $0x9,0x51(%rbp)
	jmp L_350797
.p2align 0x4
L_522156:
L_351041:
	movb $0x6,0x51(%rbp)
	jmp L_350797
.p2align 0x4
L_522157:
L_351040:
	movb $0x7,0x51(%rbp)
	jmp L_350797
.p2align 0x4
L_522158:
L_351039:
	movb $0x4,0x51(%rbp)
	jmp L_350797
.p2align 0x4
L_522159:
L_351038:
	movb $0x5,0x51(%rbp)
	jmp L_350797
.p2align 0x4
L_522160:
L_351037:
	movb $0x2,0x51(%rbp)
	jmp L_350797
.p2align 0x4
L_522161:
L_351036:
	movb $0x3,0x51(%rbp)
	jmp L_350797
.p2align 0x4
L_522162:
L_351035:
	movb $0x0,0x51(%rbp)
	jmp L_350797
.p2align 0x4
L_522163:
L_350641:
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
L_350642:
	movq 0xB0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessTransfer_1
.p2align 0x4
L_522164:
L_350635:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1,0x18(%rbp)
	movq %r13,%r15
L_350636:
	movq %r15,0x1B8(%rbp)
	movq 0x90(%rbp),%r15
	movq 0x20(%r15),%r13
	movq %r13,0x1B0(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x1C8(%rbp)
	movw 0x0(%r15),%r13w
	movw %r13w,0x1D0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x1D8(%rbp)
	movq $0x21D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2217,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1A8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x1E0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2226
.p2align 0x4
L_522165:
L_350523:
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
L_350524:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je stackTopTempContentsOperand_1
L_350525:
	movq 0x0(%r15),%r11
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r14,0x0(%r9)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r15)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x8(%r15)
stackTopTempContentsOperand_1:
	movq 0x60(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x2C(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x2D(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x20(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0xD0(%rbp)
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0xD8(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0xE0(%rbp)
	movq %r13,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_522166:
L_350505:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
L_350506:
	movq 0x80(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x38(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x39(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
L_522167:
L_350468:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
L_350469:
	movq 0xC8(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (memloc_194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
L_522168:
L_349800:
	movq %r14,0x138(%rbp)
	movq 0x118(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x110(%r13),%r14
	movq 0x108(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x100(%r13),%r15
	movq 0xF8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0xF0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0xE8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0xE0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0xD8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0xD0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0xC8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0xC0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0xB8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0xB0(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0xA8(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0xA0(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x98(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x90(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x88(%r13),%r11
	movq %r11,0x98(%rbp)
	movq 0x78(%r13),%r11
	movq %r11,0xB8(%rbp)
	movq 0x70(%r13),%r11
	movq %r11,0xC0(%rbp)
	movq 0x68(%r13),%r11
	movq %r11,0xC8(%rbp)
	movq 0x60(%r13),%r11
	movq %r11,0xD0(%rbp)
	movq 0x58(%r13),%r11
	movq %r11,0xD8(%rbp)
	movq 0x50(%r13),%r11
	movq %r11,0xE0(%rbp)
	movq 0x48(%r13),%r11
	movq %r11,0xE8(%rbp)
	movq 0x40(%r13),%r11
	movq %r11,0xF0(%rbp)
	movq 0x38(%r13),%r11
	movq %r11,0xF8(%rbp)
	movq 0x30(%r13),%r11
	movq %r11,0x100(%rbp)
	movq 0x28(%r13),%r11
	movq %r11,0x108(%rbp)
	movq 0x20(%r13),%r11
	movq %r11,0x110(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x118(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x120(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x128(%rbp)
	movq 0x0(%r13),%r11
	movq 0x80(%r13),%r13
	movq %r13,0xA8(%rbp)
	movq %r11,0x130(%rbp)
L_349801:
	movq 0xB0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1139,%r11
	jne L_522180
L_351376:
	movq 0x10(%r13),%r11
	movq %r11,0x140(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x148(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x150(%rbp)
	movq %r11,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_522176
	cmpq $0x2,%r13
	je L_351379
L_351377:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0x10E9,%r13
	je L_351379
	cmpq $0x10EA,%r13
	je L_351379
	cmpq $0x10EB,%r13
	je L_351379
L_351378:
	movq 0x0(%r11),%r10
	movq 0x18(%r10),%r9
	movb 0x0(%r9),%r13b
	cmpb $0x5,%r13b
	je L_522171
	cmpb $0x6,%r13b
	je L_522170
	cmpb $0x7,%r13b
	je L_522169
L_351379:
	movq (globalObjptr+0x5C20)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_522169:
L_351863:
	movq %r14,0x158(%rbp)
L_351381:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_351382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_522170:
L_351862:
	movq %r15,0x158(%rbp)
	jmp L_351381
.p2align 0x4
L_522171:
L_351380:
	movq 0x20(%rbp),%r15
	movq %r15,0x158(%rbp)
	jmp L_351381
.p2align 0x4
L_522176:
L_351867:
	shrq $0x2,%r11
	movw %r11w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	cmpb $0x1,%r11b
	je L_522179
	cmpb $0x2,%r11b
	je L_522178
	cmpb $0x3,%r11b
	je L_522177
L_351868:
	movq %r14,0x158(%rbp)
	jmp L_351381
.p2align 0x4
L_522177:
L_351871:
	movq 0x20(%rbp),%r15
	movq %r15,0x158(%rbp)
	jmp L_351381
.p2align 0x4
L_522178:
L_351870:
	movq %r15,0x158(%rbp)
	jmp L_351381
.p2align 0x4
L_522179:
L_351869:
	movq %r14,0x158(%rbp)
	jmp L_351381
.p2align 0x4
L_522180:
L_349802:
	movq 0x18(%rbp),%r14
	movq 0x170(%r14),%r11
	movq %r11,0x190(%rbp)
	movq 0x168(%r14),%r11
	movq %r11,0x188(%rbp)
	movq 0x160(%r14),%r11
	movq %r11,0x180(%rbp)
	movl 0x0(%r14),%r11d
	movl %r11d,0xAC(%rbp)
	movq 0x158(%r14),%r11
	movq %r11,0x178(%rbp)
	movq 0x150(%r14),%r11
	movq %r11,0x170(%rbp)
	movq 0x148(%r14),%r11
	movq %r11,0x168(%rbp)
	movq 0x140(%r14),%r11
	movq %r11,0x160(%rbp)
	movq 0x138(%r14),%r11
	movq %r11,0x158(%rbp)
	movq 0x130(%r14),%r11
	movq %r11,0x150(%rbp)
	movq 0x128(%r14),%r11
	movq %r11,0x148(%rbp)
	movq 0x120(%r14),%r11
	movq %r11,0x140(%rbp)
	movq 0x118(%r14),%r15
	movq 0x110(%r14),%r11
	movq %r11,0x130(%rbp)
	movq 0x108(%r14),%r11
	movq %r11,0x128(%rbp)
	movq 0x100(%r14),%r11
	movq %r11,0x120(%rbp)
	movq 0xF8(%r14),%r11
	movq %r11,0x118(%rbp)
	movq 0xF0(%r14),%r11
	movq %r11,0x110(%rbp)
	movq 0xE8(%r14),%r11
	movq %r11,0x108(%rbp)
	movq 0xE0(%r14),%r11
	movq %r11,0x100(%rbp)
	movb 0x5(%r14),%r11b
	movb %r11b,0xA9(%rbp)
	movq 0xD8(%r14),%r11
	movq %r11,0xF8(%rbp)
	movq 0xD0(%r14),%r11
	movq %r11,0xF0(%rbp)
	movq 0xC8(%r14),%r11
	movq %r11,0xE8(%rbp)
	movq 0xC0(%r14),%r11
	movq %r11,0xE0(%rbp)
	movq 0xB8(%r14),%r11
	movq %r11,0xD8(%rbp)
	movq 0xB0(%r14),%r11
	movq %r11,0xD0(%rbp)
	movq 0xA8(%r14),%r11
	movq %r11,0xC8(%rbp)
	movq 0xA0(%r14),%r11
	movq %r11,0xC0(%rbp)
	movq 0x98(%r14),%r11
	movq %r11,0xB8(%rbp)
	movb 0x4(%r14),%r11b
	movb %r11b,0xA8(%rbp)
	movq 0x90(%r14),%r11
	movq %r11,0x98(%rbp)
	movq 0x88(%r14),%r11
	movq %r11,0x90(%rbp)
	movq 0x80(%r14),%r11
	movq %r11,0x88(%rbp)
	movq 0x78(%r14),%r11
	movq %r11,0x80(%rbp)
	movq 0x70(%r14),%r11
	movq %r11,0x78(%rbp)
	movq 0x68(%r14),%r11
	movq %r11,0x70(%rbp)
	movq 0x60(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x58(%r14),%r11
	movq %r11,0x60(%rbp)
	movq 0x50(%r14),%r11
	movq %r11,0x58(%rbp)
	movq 0x48(%r14),%r11
	movq %r11,0x50(%rbp)
	movq 0x40(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x38(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r14),%r11
	movq 0x10(%r14),%r14
	movq %r14,0x18(%rbp)
	movq 0x138(%rbp),%r14
	movq %r14,0x198(%rbp)
	movq %r15,0x138(%rbp)
	movq %r11,%r15
	jmp x_1126
.p2align 0x4
L_522181:
L_351874:
	movq 0xA8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x21C2,%r15
	je L_522182
L_351876:
	movq 0x170(%r14),%r15
	movq 0x168(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x160(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x158(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x150(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x148(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x140(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x138(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x130(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x128(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x120(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x118(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x110(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x108(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x100(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0xF8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0xF0(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0xE8(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0xE0(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0xD8(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0xD0(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0xC8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0xC0(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0xB8(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0xB0(%r14),%r13
	movq %r13,0xE8(%rbp)
	movq 0xA8(%r14),%r13
	movq %r13,0xF0(%rbp)
	movq 0xA0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movb 0x4(%r14),%r13b
	movq 0x98(%r14),%r11
	movq %r11,0x100(%rbp)
	movq 0x90(%r14),%r11
	movq %r11,0x108(%rbp)
	movq 0x88(%r14),%r11
	movq %r11,0x110(%rbp)
	movq 0x80(%r14),%r11
	movq %r11,0x118(%rbp)
	movq 0x78(%r14),%r11
	movq %r11,0x120(%rbp)
	movq 0x70(%r14),%r11
	movq %r11,0x128(%rbp)
	movq 0x68(%r14),%r11
	movq %r11,0x130(%rbp)
	movq 0x60(%r14),%r11
	movq %r11,0x138(%rbp)
	movq 0x58(%r14),%r11
	movq %r11,0x140(%rbp)
	movq 0x50(%r14),%r11
	movq %r11,0x148(%rbp)
	movq 0x48(%r14),%r11
	movq %r11,0x150(%rbp)
	movq 0x40(%r14),%r11
	movq %r11,0x158(%rbp)
	movq 0x38(%r14),%r11
	movq %r11,0x160(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x168(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x170(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x178(%rbp)
	movl 0x0(%r14),%r11d
	movq 0x18(%r14),%r10
	movq %r10,0x180(%rbp)
	movq 0x10(%r14),%r10
	movq %r10,0x188(%rbp)
	movq 0x8(%r14),%r10
	movb 0x5(%r14),%r9b
	movb %r9b,0xA8(%rbp)
	movb %r13b,0xA9(%rbp)
	movl %r11d,0xAC(%rbp)
	movq %r10,0x190(%rbp)
	movq $0x1,0x198(%rbp)
	jmp x_1126
.p2align 0x4
L_522182:
L_351875:
	movq 0x118(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x110(%r14),%r13
	movq 0x108(%r14),%r11
	movq %r11,0x20(%rbp)
	movq 0x100(%r14),%r15
	movq 0xF8(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0xF0(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0xE8(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0xE0(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0xD8(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0xD0(%r14),%r11
	movq %r11,0x50(%rbp)
	movq 0xC8(%r14),%r11
	movq %r11,0x58(%rbp)
	movq 0xC0(%r14),%r11
	movq %r11,0x60(%rbp)
	movq 0xB8(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0xB0(%r14),%r11
	movq %r11,0x70(%rbp)
	movq 0xA8(%r14),%r11
	movq %r11,0x78(%rbp)
	movq 0xA0(%r14),%r11
	movq %r11,0x80(%rbp)
	movq 0x98(%r14),%r11
	movq %r11,0x88(%rbp)
	movq 0x90(%r14),%r11
	movq %r11,0x90(%rbp)
	movq 0x88(%r14),%r11
	movq %r11,0x98(%rbp)
	movq 0x78(%r14),%r11
	movq %r11,0xB8(%rbp)
	movq 0x70(%r14),%r11
	movq %r11,0xC0(%rbp)
	movq 0x68(%r14),%r11
	movq %r11,0xC8(%rbp)
	movq 0x60(%r14),%r11
	movq %r11,0xD0(%rbp)
	movq 0x58(%r14),%r11
	movq %r11,0xD8(%rbp)
	movq 0x50(%r14),%r11
	movq %r11,0xE0(%rbp)
	movq 0x48(%r14),%r11
	movq %r11,0xE8(%rbp)
	movq 0x40(%r14),%r11
	movq %r11,0xF0(%rbp)
	movq 0x38(%r14),%r11
	movq %r11,0xF8(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x100(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x108(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x110(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x118(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x120(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x128(%rbp)
	movq 0x0(%r14),%r11
	movq 0x80(%r14),%r14
	movq %r14,0xA8(%rbp)
	movq %r11,0x130(%rbp)
	movq $0x1,0x138(%rbp)
	movq %r13,%r14
	jmp L_349801
.p2align 0x4
.long 0x4C54
L_351898:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351899
L_351923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351924
.p2align 0x4
.long 0x4C5A
L_351924:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_351899:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_522184
L_351900:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r14
	movq %r14,0x48(%rbp)
L_351901:
	movq %r15,0xC8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (toString_484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_42
.p2align 0x4
L_522184:
L_351922:
	movq (globalObjptr+0xA058)(%rip),%r15
L_351914:
	movq $0x225D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp L_349761
.p2align 0x4
.long 0x4C5B
L_351928:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351929
L_351966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351967
.p2align 0x4
.long 0x4C59
L_351967:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_351929:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_349634
L_351931:
	movl %r13d,0xD0(%rbp)
	movq $0x3CB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_351932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x4C5B
L_351969:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351970
L_351971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351972
.p2align 0x4
.long 0x4C59
L_351972:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_351970:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_351928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C60
L_352069:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352070
L_352071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_352072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352072
.p2align 0x4
.long 0x4C52
L_352072:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_352070:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11158)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (comment_53+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C60
L_352074:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352075
L_352076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_352077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352077
.p2align 0x4
.long 0x4C52
L_352077:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_352075:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_352069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C76
L_352034:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_522191
L_352035:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x48(%rbp)
L_352036:
	movq %r15,0xC8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (toString_487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_42
.p2align 0x4
L_522191:
L_352061:
	movq $0x1,%r15
L_352049:
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_352050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C76
L_352063:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352064
L_352065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_352066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352066
.p2align 0x4
.long 0x4C69
L_352066:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_352064:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_352034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C6A
L_351993:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_522193
L_351994:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x60(%rbp)
L_351995:
	movq %r15,0xC8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (toString_486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_42
.p2align 0x4
L_522193:
L_352026:
	movq $0x1,%r15
L_352008:
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_352009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C6A
L_352028:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352029
L_352030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_352031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352031
.p2align 0x4
.long 0x4C75
L_352031:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_352029:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_351993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C65
L_351975:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_351976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C65
L_351987:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351988
L_351989:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351990
.p2align 0x4
.long 0x4C57
L_351990:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_351988:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_351975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4CA5
L_352432:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0xD8(%rbp)
	movq $0x9,0xE0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C90
L_352344:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq %r15,0xD8(%rbp)
	movq $0x9,0xE0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C90
L_352256:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq %r15,0xD8(%rbp)
	movq $0x9,0xE0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4A74
L_349626:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_349627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x517F
L_349791:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0xC8(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_349792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp liveness_uses_defs_1
.p2align 0x4
.long 0x4BC3
toString_477:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movq 0x1E8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq $0x1,0x1E8(%rbp)
	movq %r15,0x1F0(%rbp)
	addq $0x1E8,%rbp
	leaq (rev_480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4BB5
L_351085:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351086
L_351120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_351121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351121
.p2align 0x4
.long 0x4BA7
L_351121:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_351086:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1C0(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_351087
.p2align 0x4
.long 0x526E
L_351088:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351089
L_351118:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D8,%rbp
	leaq (L_351119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351119
.p2align 0x4
.long 0x4BA6
L_351119:
	addq $0xFFFFFFFFFFFFFE28,%rbp
L_351089:
	movq 0x1A8(%rbp),%r15
	cmpq $0x1,%r15
	je L_522198
L_351090:
	movq 0x1C8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_522197
L_351091:
	movq %r13,0x1D8(%rbp)
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_351092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522197:
L_351112:
	movq %r13,0x1D8(%rbp)
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_351113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522198:
L_351117:
	movq (globalObjptr+0xDF58)(%rip),%r14
	xchgq %r14,%r15
L_351096:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x1590)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x11090)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x1C0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x1B8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x11098)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (comment_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5270
L_351367:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351368
L_351369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_351370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351370
.p2align 0x4
.long 0x5271
L_351370:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_351368:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x110F8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (comment_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5270
L_351372:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351373
L_351374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_351375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351375
.p2align 0x4
.long 0x5271
L_351375:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_351373:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_351367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x528A
toString_483:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq $0x1,0x1D8(%rbp)
	movq %r15,0x1E0(%rbp)
	addq $0x1D8,%rbp
	leaq (rev_486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x526E
toString_482:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq $0x1,0x1D8(%rbp)
	movq %r15,0x1E0(%rbp)
	addq $0x1D8,%rbp
	leaq (rev_485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x5281
L_351249:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x1A8(%rbp),%r14
	cmpq $0x1,%r14
	je L_522202
L_351250:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1A8(%rbp)
	movq $0x1,0x1C0(%rbp)
L_351251:
	movq %r15,0x1D0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1D0,%rbp
	leaq (toString_481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_42
.p2align 0x4
L_522202:
L_351276:
	movq $0x1,%r15
L_351264:
	movq %r15,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_351265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5281
L_351278:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351279
L_351280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_351281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351281
.p2align 0x4
.long 0x4BC7
L_351281:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_351279:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1C0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_351249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5275
L_351193:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x1D0(%rbp),%r14
	cmpq $0x1,%r14
	je L_522204
L_351194:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1D0(%rbp)
	movq $0x1,0x1F0(%rbp)
L_351195:
	movq %r15,0x200(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x208(%rbp)
	addq $0x200,%rbp
	leaq (toString_480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_42
.p2align 0x4
L_522204:
L_351241:
	movq $0x1,%r15
L_351208:
	movq %r15,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (L_351209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5275
L_351243:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351244
L_351245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F8,%rbp
	leaq (L_351246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351246
.p2align 0x4
.long 0x5280
L_351246:
	addq $0xFFFFFFFFFFFFFE08,%rbp
L_351244:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (L_351193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BBB
toString_479:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq $0x1,0x1C8(%rbp)
	movq %r15,0x1D0(%rbp)
	addq $0x1C8,%rbp
	leaq (rev_482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x5270
L_351179:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351180
L_351181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_351182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351182
.p2align 0x4
.long 0x5271
L_351182:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_351180:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x488)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA308)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x110A0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (comment_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BBB
toString_478:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq $0x1,0x1C8(%rbp)
	movq %r15,0x1D0(%rbp)
	addq $0x1C8,%rbp
	leaq (rev_481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x5270
L_351151:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351152
L_351153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_351154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351154
.p2align 0x4
.long 0x5271
L_351154:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_351152:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x488)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA308)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10B50)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (comment_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5180
L_349806:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x1B8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x1E0(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x1E8(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x1F0(%rbp)
	movq %r14,0x200(%rbp)
	addq $0x200,%rbp
	leaq (L_349807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x526B
L_351054:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x14FE,%r13
	je L_522208
L_351060:
	movq 0x30(%r14),%r13
	movq %r13,0x1B8(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x1C8(%rbp)
	movw 0x0(%r14),%r13w
	movw %r13w,0x1D0(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x1D8(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x1E0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x1E8(%rbp)
	movq %r15,0x1A8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_351056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2227
.p2align 0x4
L_522208:
L_351055:
	movq 0x38(%r14),%r13
	movq %r13,0x1B8(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x1C8(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x1D0(%rbp)
	movw 0x0(%r14),%r13w
	movw %r13w,0x1D8(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x1E0(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x1E8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x1F0(%rbp)
	movq %r15,0x1A8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_351056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2228
.p2align 0x4
.long 0x524C
L_350798:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r14
	movq %r14,0x60(%rbp)
	cmpq $0x1,%r14
	je L_522211
L_350799:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_350800:
	incl %ecx
	jo L_349610
L_350801:
	cmpq $0x1,%r15
	je L_522209
L_350802:
	movq 0x8(%r15),%r15
	jmp L_350800
.p2align 0x4
L_522209:
L_350803:
	movl %ecx,0x54(%rbp)
L_350804:
	movq 0x30(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
L_522211:
L_351034:
	movl $0x0,0x54(%rbp)
	jmp L_350804
.p2align 0x4
.long 0x5239
L_350643:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_522216
	cmpq $0x2,%r14
	je L_522215
L_350644:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E9,%r14
	je L_522214
	cmpq $0x10EA,%r14
	je L_522213
	cmpq $0x10EB,%r14
	je L_522212
L_350645:
	movq 0x0(%r15),%r13
	movq 0x18(%r13),%r11
	movb 0x0(%r11),%r14b
	movb %r14b,0x20(%rbp)
L_350646:
	movq 0x58(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
L_522212:
L_350786:
	movb $0x5,0x20(%rbp)
	jmp L_350646
.p2align 0x4
L_522213:
L_350785:
	movb $0x5,0x20(%rbp)
	jmp L_350646
.p2align 0x4
L_522214:
L_350784:
	movb $0x5,0x20(%rbp)
	jmp L_350646
.p2align 0x4
L_522215:
L_350793:
	movb $0x2,0x20(%rbp)
	jmp L_350646
.p2align 0x4
L_522216:
L_350787:
	shrq $0x2,%r15
	movw %r15w,%r14w
	shrw $0x8,%r14w
	movb %r14b,%r15b
	cmpb $0x2,%r15b
	je L_522218
	cmpb $0x3,%r15b
	je L_522217
L_350789:
	movb $0x7,0x20(%rbp)
	jmp L_350646
.p2align 0x4
L_522217:
L_350792:
	movb $0x5,0x20(%rbp)
	jmp L_350646
.p2align 0x4
L_522218:
L_350791:
	movb $0x6,0x20(%rbp)
	jmp L_350646
.p2align 0x4
.long 0x5238
L_350637:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350638
L_350639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350640
.p2align 0x4
.long 0x51F9
L_350640:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350638:
	movq 0x20(%rbp),%r14
	movq 0x18(%rbp),%r15
L_350485:
	cmpq $0x1,%r15
	je L_522230
L_350486:
L_350487:
	cmpq $0x1,%r14
	je L_522229
L_350488:
L_350489:
	xchgq %r14,%r15
L_350008:
	movq $0x22A5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x198(%rbp),%r15
	movq %r13,%r14
L_350009:
	movq $0x259F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_522228
L_350010:
	movq %r14,0x0(%rbp)
L_350011:
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_350012:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522227
.p2align 0x4,,0x7
L_350013:
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x10(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x0(%rbp),%r11
	cmpq $0x1,%r11
	je L_522226
L_350014:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_350015:
	cmpq $0x1,%r15
	je L_522219
L_350016:
	movq %r13,0x0(%rbp)
	movq %r14,0x10(%rbp)
	movq %r15,0x8(%rbp)
L_350017:
	jmp L_350012
.p2align 0x4
L_522219:
L_350018:
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
.p2align 0x4,,0x7
L_350019:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522225
.p2align 0x4,,0x7
L_350020:
	movq 0x0(%rbp),%r11
	cmpq $0x1,%r11
	je L_522220
L_350021:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x8(%rbp),%r14
	jmp L_350015
.p2align 0x4
L_522220:
L_350022:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_522224
L_350023:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_350024:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522223
.p2align 0x4,,0x7
L_350025:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_522221
L_350026:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_350024
.p2align 0x4
L_522221:
L_350028:
	cmpq $0x1,%r15
	je L_350031
L_350029:
	movq $0x22A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_522223:
L_350032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_350033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350033
.p2align 0x4
.long 0x45B
L_350033:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_350025
.p2align 0x4
L_522224:
L_350034:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_350028
.p2align 0x4
L_522225:
L_350035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_350036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350036
.p2align 0x4
.long 0x45F
L_350036:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_350020
.p2align 0x4
L_522226:
L_350037:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
	jmp L_350024
.p2align 0x4
L_522227:
L_350038:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_350039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350039
.p2align 0x4
.long 0x45B
L_350039:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_350013
.p2align 0x4
L_522228:
L_350040:
	movq %r14,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp L_350019
.p2align 0x4
L_522229:
L_350490:
	movq 0x198(%rbp),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_350009
.p2align 0x4
L_522230:
L_350491:
	movq 0x198(%rbp),%r15
	jmp L_350009
.p2align 0x4
.long 0x5208
L_350526:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movl 0x1A8(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movl %r15d,0x1A8(%rbp)
	movq $0x3,0x1B0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x51FF
L_350507:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x68(%rbp)
	movq %r14,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x51EE
memloc_194:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350470
L_350503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350504
.p2align 0x4
.long 0x51FE
L_350504:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350470:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (memloc_195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x4BCC
L_351382:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movl 0x178(%rbp),%r15d
	movl %r15d,0x170(%rbp)
	movl %r15d,0x178(%rbp)
	movq $0x3,0x180(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x178,%rbp
	leaq (L_351383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C55
toString_484:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (rev_487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4C5C
L_351932:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0xD0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xD8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (toString_485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4C60
comment_53:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351950
L_351951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351952
.p2align 0x4
.long 0x4C52
L_351952:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_351950:
	movq $0x225D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x229D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x18(%rbp)
	addq $0x10,%r12
	jmp L_349759
.p2align 0x4
.long 0x4C6A
toString_487:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (rev_490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4C78
L_352050:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352051
L_352052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_352053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352053
.p2align 0x4
.long 0x4C5A
L_352053:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_352051:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x488)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA308)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11150)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (comment_53+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C6B
toString_486:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (rev_489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4C6D
L_352009:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0xC8(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_352010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4C55
L_351976:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0xC8(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_351977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4CA6
L_352433:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352434
L_352485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352486
.p2align 0x4
.long 0x4CAD
L_352486:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352434:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_352435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4C90
L_352345:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352346
L_352427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352428
.p2align 0x4
.long 0x4CA3
L_352428:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352346:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_352347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4C90
L_352257:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352258
L_352339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352340
.p2align 0x4
.long 0x4CA3
L_352340:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352258:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_352259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4A75
L_349627:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349628
L_352177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_352178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352178
.p2align 0x4
.long 0x4C89
L_352178:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_349628:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xE0(%rbp)
	addq $0x10,%r12
	movq 0xD8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (immediate_99+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4A83
L_349792:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xC8(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq %r14,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_349793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp liveness_1
.p2align 0x4
.long 0x4BC3
rev_480:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movq 0x1E8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	cmpq $0x1,%r15
	je L_522241
L_351069:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x1E0(%rbp)
	movq %r14,0x1E8(%rbp)
	movq $0x1,0x1F0(%rbp)
.p2align 0x4,,0x7
L_351070:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522240
.p2align 0x4,,0x7
L_351071:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1F0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1E0(%rbp),%r14
	cmpq $0x1,%r14
	je L_522239
L_351072:
	movq %r15,0x1F0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1E0(%rbp)
	movq %r15,0x1E8(%rbp)
	jmp L_351070
.p2align 0x4
L_522239:
L_351074:
	movq %r15,0x1E8(%rbp)
	addq $0x1E8,%rbp
	leaq (L_351075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522240:
L_351127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_351128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351128
.p2align 0x4
.long 0x5272
L_351128:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	jmp L_351071
.p2align 0x4
L_522241:
L_351129:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_351074
.p2align 0x4
.long 0x526F
L_351092:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351093
L_351110:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_351111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351111
.p2align 0x4
.long 0x4BC1
L_351111:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_351093:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_351094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x526F
L_351113:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351114
L_351115:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_351116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351116
.p2align 0x4
.long 0x4BC1
L_351116:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_351114:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_351092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5270
comment_52:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351097
L_351106:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_351107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351107
.p2align 0x4
.long 0x5271
L_351107:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_351097:
	movq $0x225D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x229D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xB0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1135,%r13
	je L_522250
	cmpq $0x1136,%r13
	je L_522249
	cmpq $0x1137,%r13
	je L_522248
	cmpq $0x1138,%r13
	je L_522247
	cmpq $0x1139,%r13
	je L_522246
	cmpq $0x113A,%r13
	je L_522245
	cmpq $0x113B,%r13
	je L_522244
L_351098:
	movq %r14,0xD0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	jmp L_349805
.p2align 0x4
L_522244:
L_351105:
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp L_351051
.p2align 0x4
L_522245:
L_351104:
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x50(%rbp)
	jmp L_350795
.p2align 0x4
L_522246:
L_351103:
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	jmp L_350642
.p2align 0x4
L_522247:
L_351102:
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp L_350636
.p2align 0x4
L_522248:
L_351101:
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	jmp L_350524
.p2align 0x4
L_522249:
L_351100:
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	jmp L_350506
.p2align 0x4
L_522250:
L_351099:
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	jmp L_350469
.p2align 0x4
.long 0x528A
rev_486:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	cmpq $0x1,%r15
	je L_522254
L_351338:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x1B8(%rbp)
	movq %r14,0x1C0(%rbp)
	movq $0x1,0x1D0(%rbp)
.p2align 0x4,,0x7
L_351339:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522253
.p2align 0x4,,0x7
L_351340:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1B8(%rbp),%r14
	cmpq $0x1,%r14
	je L_522252
L_351341:
	movq %r15,0x1D0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1B8(%rbp)
	movq %r15,0x1C0(%rbp)
	jmp L_351339
.p2align 0x4
L_522252:
L_351343:
	movq %r15,0x1D8(%rbp)
	addq $0x1D8,%rbp
	leaq (L_351344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522253:
L_351362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_351363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351363
.p2align 0x4
.long 0x4BA7
L_351363:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	jmp L_351340
.p2align 0x4
L_522254:
L_351364:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_351343
.p2align 0x4
.long 0x526E
rev_485:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq $0x1,%r15
	je L_522257
L_351283:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x1C0(%rbp)
	movq %r14,0x1D0(%rbp)
	movq $0x1,0x1D8(%rbp)
.p2align 0x4,,0x7
L_351284:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522256
.p2align 0x4,,0x7
L_351285:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1C0(%rbp),%r14
	cmpq $0x1,%r14
	je L_522255
L_351286:
	movq %r15,0x1D8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1C0(%rbp)
	movq %r15,0x1D0(%rbp)
	jmp L_351284
.p2align 0x4
L_522255:
L_351288:
	movq %r15,0x1D8(%rbp)
	addq $0x1D8,%rbp
	leaq (L_351289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522256:
L_351334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_351335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351335
.p2align 0x4
.long 0x4BA8
L_351335:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	jmp L_351285
.p2align 0x4
L_522257:
L_351336:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_351288
.p2align 0x4
.long 0x4BAC
toString_481:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq $0x1,0x1D0(%rbp)
	movq %r15,0x1D8(%rbp)
	addq $0x1D0,%rbp
	leaq (rev_484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x5283
L_351265:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351266
L_351267:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_351268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351268
.p2align 0x4
.long 0x5284
L_351268:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_351266:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x488)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA308)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x1B8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x110C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (comment_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5276
toString_480:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movq 0x200(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq $0x1,0x200(%rbp)
	movq %r15,0x208(%rbp)
	addq $0x200,%rbp
	leaq (rev_483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x5278
L_351209:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x1E0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_522259
L_351210:
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_351211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522259:
L_351229:
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_351230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x4BBB
rev_482:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq $0x1,%r15
	je L_522262
L_351166:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x1C0(%rbp)
	movq %r14,0x1C8(%rbp)
	movq $0x1,0x1D0(%rbp)
.p2align 0x4,,0x7
L_351167:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522261
.p2align 0x4,,0x7
L_351168:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1C0(%rbp),%r14
	cmpq $0x1,%r14
	je L_522260
L_351169:
	movq %r15,0x1D0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1C0(%rbp)
	movq %r15,0x1C8(%rbp)
	jmp L_351167
.p2align 0x4
L_522260:
L_351171:
	movq %r15,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_351172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522261:
L_351187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_351188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351188
.p2align 0x4
.long 0x4BA7
L_351188:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	jmp L_351168
.p2align 0x4
L_522262:
L_351189:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_351171
.p2align 0x4
.long 0x4BBB
rev_481:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq $0x1,%r15
	je L_522265
L_351138:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x1C0(%rbp)
	movq %r14,0x1C8(%rbp)
	movq $0x1,0x1D0(%rbp)
.p2align 0x4,,0x7
L_351139:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522264
.p2align 0x4,,0x7
L_351140:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1C0(%rbp),%r14
	cmpq $0x1,%r14
	je L_522263
L_351141:
	movq %r15,0x1D0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1C0(%rbp)
	movq %r15,0x1C8(%rbp)
	jmp L_351139
.p2align 0x4
L_522263:
L_351143:
	movq %r15,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_351144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522264:
L_351159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_351160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351160
.p2align 0x4
.long 0x4BA7
L_351160:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	jmp L_351140
.p2align 0x4
L_522265:
L_351161:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_351143
.p2align 0x4
.long 0x5181
L_349807:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movl 0x200(%rbp),%r15d
	movl %r15d,0x1B8(%rbp)
	movl %r15d,0x200(%rbp)
	movq $0x3,0x208(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x210(%rbp)
	addq $0x200,%rbp
	leaq (L_349808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x526C
L_351056:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351057
L_351058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_351059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351059
.p2align 0x4
.long 0x526D
L_351059:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_351057:
	movq 0x18(%rbp),%r14
	movq 0x28(%rbp),%r15
	jmp L_350485
.p2align 0x4
.long 0x524D
L_350805:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r14
	movq %r14,0x18(%rbp)
	cmpq $0x1,%r14
	je L_522269
L_350806:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_350807:
	incl %ecx
	jo L_349610
L_350808:
	cmpq $0x1,%r15
	je L_522267
L_350809:
	movq 0x8(%r15),%r15
	jmp L_350807
.p2align 0x4
L_522267:
L_350810:
	movl %ecx,0x68(%rbp)
L_350811:
	movq 0x20(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x180(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2225
.p2align 0x4
L_522269:
L_351033:
	movl $0x0,0x68(%rbp)
	jmp L_350811
.p2align 0x4
.long 0x523A
L_350647:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350648
L_350782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350783
.p2align 0x4
.long 0x524B
L_350783:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350648:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_522270
L_350649:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq $0x1,0x80(%rbp)
L_350650:
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x90(%rbp)
	movq %r14,0x1B0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
L_522270:
L_350781:
	movq $0x1,%r15
L_350683:
	movq $0x2237,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq (globalObjptr+0x5540)(%rip),%r13
	movq %r13,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x225B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	cmpq $0x1,%r15
	je L_522283
L_350684:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_350685:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522282
.p2align 0x4,,0x7
L_350686:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_522279
L_350687:
L_350688:
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_522271
L_350689:
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_350685
.p2align 0x4
L_522271:
L_350690:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_350691:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522278
.p2align 0x4,,0x7
L_350692:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_522272
L_350693:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_350691
.p2align 0x4
L_522272:
L_350695:
	cmpq $0x1,%r15
	je L_522276
L_350696:
	movq $0x22A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	cmpq $0x1,0x78(%rbp)
	je L_522274
L_350697:
	movq %r14,%r15
L_350698:
	movq $0x2237,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq (globalObjptr+0x5540)(%rip),%rsp
	movq %rsp,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %rsp,0x10(%r14)
	movq 0x78(%rbp),%rsp
	movq %rsp,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x225B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq 0x1A0(%rbp),%rsp
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r13
	shrq $0x1,%r13
	cmpq $0x21C0,%r13
	je L_522273
L_350735:
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r9
	movq 0x20(%rsp),%r10
	movw 0x0(%rsp),%r15w
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
L_350736:
	movq %r8,0x1B8(%rbp)
	movq %r9,0x1C0(%rbp)
	movq %r10,0x1C8(%rbp)
	movw %r15w,0x1D0(%rbp)
	movq %r11,0x1D8(%rbp)
	movq %r13,0x1E0(%rbp)
	movq %r14,0x1E8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2227
.p2align 0x4
L_522273:
L_350699:
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r9
	movq 0x20(%rsp),%r10
	movw 0x0(%rsp),%r15w
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
L_350700:
	movq %r8,0x1C0(%rbp)
	movq %r9,0x1C8(%rbp)
	movq %r10,0x1D0(%rbp)
	movw %r15w,0x1D8(%rbp)
	movq %r11,0x1E0(%rbp)
	movq %r13,0x1E8(%rbp)
	movq %r14,0x1F0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2228
.p2align 0x4
L_522274:
L_350741:
	movq %r14,%r15
L_350742:
	movq 0x1A0(%rbp),%rsp
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r14
	shrq $0x1,%r14
	cmpq $0x21C0,%r14
	je L_522275
L_350744:
	movq %r15,0x20(%rbp)
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r9
	movq 0x20(%rsp),%r10
	movw 0x0(%rsp),%r15w
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq $0x1,0x28(%rbp)
	jmp L_350736
.p2align 0x4
L_522275:
L_350743:
	movq %r15,0x20(%rbp)
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r9
	movq 0x20(%rsp),%r10
	movw 0x0(%rsp),%r15w
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq $0x1,0x28(%rbp)
	jmp L_350700
.p2align 0x4
L_522276:
L_350745:
	cmpq $0x1,0x78(%rbp)
	je L_522277
L_350746:
	movq $0x1,%r15
	jmp L_350698
.p2align 0x4
L_522277:
L_350747:
	movq $0x1,%r15
	jmp L_350742
.p2align 0x4
L_522278:
L_350748:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350749
.p2align 0x4
.long 0x5244
L_350749:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	jmp L_350692
.p2align 0x4
L_522279:
L_350750:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_522280
L_350751:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r13,0x28(%rbp)
	jmp L_350685
.p2align 0x4
L_522280:
L_350752:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_522281
L_350753:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_350691
.p2align 0x4
L_522281:
L_350754:
	movq $0x1,%r11
	xchgq %r11,%r15
	jmp L_350695
.p2align 0x4
L_522282:
L_350755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350756
.p2align 0x4
.long 0x5244
L_350756:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	jmp L_350686
.p2align 0x4
L_522283:
L_350757:
	movq $0x1,%r15
	jmp L_350695
.p2align 0x4
.long 0x5209
L_350527:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x1A8(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x1B0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x5200
L_350508:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movl 0x1A8(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x1A8(%rbp)
	movq $0x3,0x1B0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x51EF
memloc_195:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350471
L_350501:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350502
.p2align 0x4
.long 0x51FD
L_350502:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350471:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (memloc_196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x4BCD
L_351383:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq $0x1,0x170(%rbp)
	movq 0x168(%rbp),%r14
	movq %r14,0x178(%rbp)
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_351384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C55
rev_487:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_522288
L_351902:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_351903:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522287
.p2align 0x4,,0x7
L_351904:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_522286
L_351905:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_351903
.p2align 0x4
L_522286:
L_351907:
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_351908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522287:
L_351919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351920
.p2align 0x4
.long 0x4C59
L_351920:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_351904
.p2align 0x4
L_522288:
L_351921:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_351907
.p2align 0x4
.long 0x4C5C
toString_485:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (rev_488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4C6A
rev_490:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_522291
L_352037:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_352038:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522290
.p2align 0x4,,0x7
L_352039:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_522289
L_352040:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_352038
.p2align 0x4
L_522289:
L_352042:
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_352043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522290:
L_352058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_352059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352059
.p2align 0x4
.long 0x4C64
L_352059:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_352039
.p2align 0x4
L_522291:
L_352060:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_352042
.p2align 0x4
.long 0x4C6B
rev_489:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r15
	je L_522294
L_351996:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_351997:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522293
.p2align 0x4,,0x7
L_351998:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_522292
L_351999:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_351997
.p2align 0x4
L_522292:
L_352001:
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_352002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522293:
L_352023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_352024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352024
.p2align 0x4
.long 0x4C74
L_352024:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_351998
.p2align 0x4
L_522294:
L_352025:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_352001
.p2align 0x4
.long 0x4C6E
L_352010:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_352011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4C66
L_351977:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_351978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4CA7
L_352435:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352436
L_352483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352484
.p2align 0x4
.long 0x4CAC
L_352484:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352436:
	movq $0x2251,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq $0x2259,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x224D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x2259,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x224B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x2259,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x10,%r12
	movq $0x2257,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x229F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_522295
L_352437:
	movq %r14,0xE0(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_522295:
L_352482:
	movq $0x1,%r14
	xchgq %r14,%r15
L_352443:
	movq 0x68(%rbp),%r14
	movq 0x20(%r14),%r13
	movq 0x18(%r14),%r11
	movl 0x4(%r14),%r10d
	movq 0x10(%r14),%r9
	movl 0x0(%r14),%r8d
	movq 0x8(%r14),%rsp
	movq $0x2241,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2241,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	testl %r10d,%r10d
	jz L_522306
L_352475:
	movq $0x2241,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	testl %r8d,%r8d
	jz L_352446
	movq %rsp,%r11
L_352474:
	movq $0x2241,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r14
L_352446:
	movq $0x223F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x225B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x259F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x10(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_352447:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522304
.p2align 0x4,,0x7
L_352448:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_522303
L_352449:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x10(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_352450:
	cmpq $0x1,%r14
	jne L_522302
L_352453:
	cmpq $0x1,%r15
	je L_522296
L_352454:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_352450
.p2align 0x4
L_522296:
L_352455:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352456
L_352468:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352469
.p2align 0x4
.long 0x4C7A
L_352469:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352456:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_522300
L_352457:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_352458:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522299
.p2align 0x4,,0x7
L_352459:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_522297
L_352460:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_352458
.p2align 0x4
L_522297:
L_352462:
	cmpq $0x1,%r15
	je L_522298
L_352463:
	movq $0x22A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	jmp L_349757
.p2align 0x4
L_522298:
L_352079:
	movq $0x1,0x10(%rbp)
	jmp L_349757
.p2align 0x4
L_522299:
L_352465:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352466
.p2align 0x4
.long 0x4C79
L_352466:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_352459
.p2align 0x4
L_522300:
L_352467:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_352462
.p2align 0x4
L_522302:
L_352451:
	movq %r14,0x18(%rbp)
L_352452:
	movq 0x10(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_352447
.p2align 0x4
L_522303:
L_352470:
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x48(%rbp)
	jmp L_352458
.p2align 0x4
L_522304:
L_352471:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352472
.p2align 0x4
.long 0x4C79
L_352472:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_352448
.p2align 0x4
L_522306:
L_352444:
	testl %r8d,%r8d
	jz L_522307
L_352473:
	movq %r13,%r14
	movq %rsp,%r11
	jmp L_352474
.p2align 0x4
L_522307:
L_352445:
	movq %r13,%r14
	jmp L_352446
.p2align 0x4
.long 0x4C90
L_352347:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352348
L_352425:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352426
.p2align 0x4
.long 0x4CA3
L_352426:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352348:
	movq $0x2251,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq $0x2259,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x98(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movslq 0x1C(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0xD0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_352349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C90
L_352259:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352260
L_352337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352338
.p2align 0x4
.long 0x4CA3
L_352338:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352260:
	movq $0x2251,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq $0x2259,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x98(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movslq 0x1C(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0xD0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_352261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4A76
immediate_99:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349629
L_352175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_352176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352176
.p2align 0x4
.long 0x4C88
L_352176:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_349629:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2229,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x6,%r15b
	movzbl %r15b,%r13d
	movzbl 0x4(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_522323
L_349630:
L_349631:
	movq $0x22A1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq %r13,0x50(%rbp)
L_349632:
	movq 0xD0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_349634
L_349635:
	testl %r13d,%r13d
	jz L_522311
L_349636:
	movq 0x98(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_349637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_1
.p2align 0x4
L_522311:
L_352144:
	movq $0x1,%r15
L_349668:
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	cmpq $0x1,0x50(%rbp)
	je L_522321
L_349669:
	movq %r14,0x48(%rbp)
L_349670:
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_349671:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522320
.p2align 0x4,,0x7
L_349672:
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x58(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je L_522319
L_349673:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_349674:
	cmpq $0x1,%r15
	je L_522312
L_349675:
	movq %r13,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
L_349676:
	jmp L_349671
.p2align 0x4
L_522312:
L_349677:
	movq %r13,0x48(%rbp)
	movq %r14,0x50(%rbp)
.p2align 0x4,,0x7
L_349678:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522318
.p2align 0x4,,0x7
L_349679:
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je L_522313
L_349680:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x50(%rbp),%r14
	jmp L_349674
.p2align 0x4
L_522313:
L_349681:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_522317
L_349682:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_349683:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522316
.p2align 0x4,,0x7
L_349684:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_522314
L_349685:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_349683
.p2align 0x4
L_522314:
L_349687:
	cmpq $0x1,%r15
	je L_522315
L_349688:
	movq $0x22A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
L_349689:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x90(%rbp)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_349690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_522315:
L_352133:
	movq $0x1,0x48(%rbp)
	jmp L_349689
.p2align 0x4
L_522316:
L_352134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352135
.p2align 0x4
.long 0x4C84
L_352135:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_349684
.p2align 0x4
L_522317:
L_352136:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_349687
.p2align 0x4
L_522318:
L_352137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352138
.p2align 0x4
.long 0x4C85
L_352138:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_349679
.p2align 0x4
L_522319:
L_352139:
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_349683
.p2align 0x4
L_522320:
L_352140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352141
.p2align 0x4
.long 0x4C84
L_352141:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_349672
.p2align 0x4
L_522321:
L_352142:
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	jmp L_349678
.p2align 0x4
L_522323:
L_352174:
	movq $0x229D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r13,0x50(%rbp)
	addq $0x10,%r12
	jmp L_349632
.p2align 0x4
.long 0x4A84
L_349793:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349794
L_351880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_351881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351881
.p2align 0x4
.long 0x4C4F
L_351881:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_349794:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_522326
L_349795:
	movq $0x2237,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq (globalObjptr+0x5540)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x225B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_349798
L_349796:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_349790
.p2align 0x4
L_522326:
L_351877:
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_522327
L_351878:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x28(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x30(%rbp)
	jmp L_349790
.p2align 0x4
L_522327:
	xchgq %r14,%r15
	jmp L_349798
.p2align 0x4
.long 0x4BC3
L_351075:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movq 0x1E8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351076
L_351125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F0,%rbp
	leaq (L_351126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351126
.p2align 0x4
.long 0x4BA9
L_351126:
	addq $0xFFFFFFFFFFFFFE10,%rbp
L_351076:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1E0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1B8(%rbp),%r14
	cmpq $0x1,%r14
	je L_522329
L_351077:
	movq %r15,0x1D0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1B8(%rbp)
	jmp L_351068
.p2align 0x4
L_522329:
L_351078:
	movq 0x1D8(%rbp),%r14
	movq %r14,0x1B8(%rbp)
	jmp L_351079
.p2align 0x4
.long 0x526F
L_351094:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351095
L_351108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_351109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351109
.p2align 0x4
.long 0x4BC1
L_351109:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_351095:
	movq 0x1A8(%rbp),%r15
	jmp L_351096
.p2align 0x4
.long 0x528A
L_351344:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x1D0(%rbp)
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_522332
L_351345:
	movq 0x1A8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq %r13,0x1E8(%rbp)
	addq $0x1E0,%rbp
	leaq (L_351346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522332:
L_351357:
	movq 0x1A8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq %r13,0x1E8(%rbp)
	addq $0x1E0,%rbp
	leaq (L_351358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x526E
L_351289:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351290
L_351332:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D8,%rbp
	leaq (L_351333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351333
.p2align 0x4
.long 0x4BA6
L_351333:
	addq $0xFFFFFFFFFFFFFE28,%rbp
L_351290:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x110C8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1D8(%rbp)
	addq $0x1D8,%rbp
	leaq (L_351291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BAC
rev_484:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	cmpq $0x1,%r15
	je L_522336
L_351252:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x1C8(%rbp)
	movq %r14,0x1D0(%rbp)
	movq $0x1,0x1D8(%rbp)
.p2align 0x4,,0x7
L_351253:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522335
.p2align 0x4,,0x7
L_351254:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1C8(%rbp),%r14
	cmpq $0x1,%r14
	je L_522334
L_351255:
	movq %r15,0x1D8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1C8(%rbp)
	movq %r15,0x1D0(%rbp)
	jmp L_351253
.p2align 0x4
L_522334:
L_351257:
	movq %r15,0x1D0(%rbp)
	addq $0x1D0,%rbp
	leaq (L_351258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522335:
L_351273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_351274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351274
.p2align 0x4
.long 0x4BA8
L_351274:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	jmp L_351254
.p2align 0x4
L_522336:
L_351275:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_351257
.p2align 0x4
.long 0x5276
rev_483:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movq 0x200(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	cmpq $0x1,%r15
	je L_522339
L_351196:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x1F8(%rbp)
	movq %r14,0x200(%rbp)
	movq $0x1,0x208(%rbp)
.p2align 0x4,,0x7
L_351197:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522338
.p2align 0x4,,0x7
L_351198:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x200(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x208(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1F8(%rbp),%r14
	cmpq $0x1,%r14
	je L_522337
L_351199:
	movq %r15,0x208(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1F8(%rbp)
	movq %r15,0x200(%rbp)
	jmp L_351197
.p2align 0x4
L_522337:
L_351201:
	movq %r15,0x200(%rbp)
	addq $0x200,%rbp
	leaq (L_351202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522338:
L_351238:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_351239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351239
.p2align 0x4
.long 0x527F
L_351239:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	jmp L_351198
.p2align 0x4
L_522339:
L_351240:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_351201
.p2align 0x4
.long 0x5279
L_351211:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movl 0x1B8(%rbp),%r15d
	movl %r15d,0x1F8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_351212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x5279
L_351230:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351231
L_351232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F8,%rbp
	leaq (L_351233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351233
.p2align 0x4
.long 0x527C
L_351233:
	addq $0xFFFFFFFFFFFFFE08,%rbp
L_351231:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (L_351211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BBB
L_351172:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351173
L_351185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_351186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351186
.p2align 0x4
.long 0x4BC1
L_351186:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_351173:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1B8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1A8(%rbp),%r14
	cmpq $0x1,%r14
	je L_522341
L_351174:
	movq %r15,0x1B8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1A8(%rbp)
	jmp L_351165
.p2align 0x4
L_522341:
L_351175:
	movq 0x1B8(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1D0,%rbp
	leaq (L_351176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x4BBB
L_351144:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351145
L_351157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_351158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351158
.p2align 0x4
.long 0x4BC1
L_351158:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_351145:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1B8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1A8(%rbp),%r14
	cmpq $0x1,%r14
	je L_522343
L_351146:
	movq %r15,0x1B8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1A8(%rbp)
	jmp L_351137
.p2align 0x4
L_522343:
L_351147:
	movq 0x1B8(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1D0,%rbp
	leaq (L_351148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x5181
L_349808:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movq 0x200(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq %r15,0x200(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x208(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x210(%rbp)
	addq $0x200,%rbp
	leaq (L_349809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x524E
L_350812:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x180(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2225
.p2align 0x4
.long 0x523B
L_350651:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350652
L_350779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350780
.p2align 0x4
.long 0x524A
L_350780:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350652:
	movq (globalObjptr+0x5C28)(%rip),%r15
	movl 0x0(%r15),%r14d
	movq $0x8C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA8(%rbp)
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x1,0x8(%r13)
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_349610
L_350653:
	movl %r14d,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq %r13,0x1B8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp pushCompensationBlock_1
.p2align 0x4
.long 0x5240
L_350737:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350738
L_350739:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350740
.p2align 0x4
.long 0x5243
L_350740:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350738:
	movq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r13
	movq 0x28(%rbp),%r14
L_350703:
	movq $0x259F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_350704:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522357
.p2align 0x4,,0x7
L_350705:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_522356
L_350706:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x18(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_350707:
	cmpq $0x1,%r14
	jne L_522355
L_350710:
	cmpq $0x1,%r15
	je L_522347
L_350711:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_350707
.p2align 0x4
L_522347:
L_350712:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350713
L_350728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350729
.p2align 0x4
.long 0x5242
L_350729:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350713:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_522353
L_350714:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_350715:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522352
.p2align 0x4,,0x7
L_350716:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_522348
L_350717:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_350715
.p2align 0x4
L_522348:
L_350719:
	cmpq $0x1,%r15
	je L_522350
L_350720:
	movq $0x22A3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_522349
L_350721:
L_350722:
	movq %r13,%r15
	jmp L_350008
.p2align 0x4
L_522349:
L_350723:
	movq 0x198(%rbp),%r15
	xchgq %r13,%r14
	jmp L_350009
.p2align 0x4
L_522350:
L_350724:
	movq 0x68(%rbp),%r15
L_350043:
	cmpq $0x1,%r15
	je L_522351
L_350044:
L_350045:
	movq 0x198(%rbp),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_350009
.p2align 0x4
L_522351:
L_350046:
	movq $0x1,%r14
	movq 0x198(%rbp),%r15
	jmp L_350009
.p2align 0x4
L_522352:
L_350725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350726
.p2align 0x4
.long 0x5241
L_350726:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	jmp L_350716
.p2align 0x4
L_522353:
L_350727:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_350719
.p2align 0x4
L_522355:
L_350708:
	movq %r14,0x20(%rbp)
L_350709:
	movq 0x18(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_350704
.p2align 0x4
L_522356:
L_350730:
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_350715
.p2align 0x4
L_522357:
L_350731:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350732
.p2align 0x4
.long 0x5241
L_350732:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	jmp L_350705
.p2align 0x4
.long 0x5240
L_350701:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350702
L_350733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350734
.p2align 0x4
.long 0x5243
L_350734:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350702:
	movq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r13
	movq 0x28(%rbp),%r14
	jmp L_350703
.p2align 0x4
.long 0x520A
L_350528:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350529
L_350632:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350633
.p2align 0x4
.long 0x5235
L_350633:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350529:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1A8(%rbp)
	addq $0x10,%r12
	movq 0xD0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x5201
L_350509:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x1A8(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x1B0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x51F0
memloc_196:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350472
L_350499:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350500
.p2align 0x4
.long 0x51FC
L_350500:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350472:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movw 0x0(%r14),%r13w
	movw %r13w,0x60(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x98(%rbp),%r14
	cmpb $0x7,0x0(%r14)
	je L_522361
L_350473:
	movq $0x2211,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb 0xA8(%rbp),%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x2229,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movb $0x6,%r10b
	movzbl %r10b,%r9d
	movzbl %r15b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r9d
	movl %r9d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r10
	movq %r10,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	addq $0x10,%r12
	movq $0x2211,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movzbl %r15b,%r9d
	movl %r9d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x229F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
L_350474:
	movq 0x80(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x58(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x59(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
L_522361:
L_350498:
	movq $0x2211,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb 0xA8(%rbp),%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x2229,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movb $0x6,%r10b
	movzbl %r10b,%r9d
	movzbl %r15b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r9d
	movl %r9d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x229F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	jmp L_350474
.p2align 0x4
.long 0x4BCE
L_351384:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_351385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C55
L_351908:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351909
L_351917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351918
.p2align 0x4
.long 0x4C58
L_351918:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_351909:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13C8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_351910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C5C
rev_488:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_522366
L_351933:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_351934:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522365
.p2align 0x4,,0x7
L_351935:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_522364
L_351936:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_351934
.p2align 0x4
L_522364:
L_351938:
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_351939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522365:
L_351963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351964
.p2align 0x4
.long 0x4C64
L_351964:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_351935
.p2align 0x4
L_522366:
L_351965:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_351938
.p2align 0x4
.long 0x4C6A
L_352043:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352044
L_352056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_352057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352057
.p2align 0x4
.long 0x4C75
L_352057:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_352044:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_522367
L_352045:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_352036
.p2align 0x4
L_522367:
L_352046:
	movq 0x48(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_352047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x4C6B
L_352002:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352003
L_352021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_352022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352022
.p2align 0x4
.long 0x4C64
L_352022:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_352003:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_522369
L_352004:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_351995
.p2align 0x4
L_522369:
L_352005:
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_352006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x4C6F
L_352011:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352012
L_352017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_352018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352018
.p2align 0x4
.long 0x4C72
L_352018:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_352012:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13D0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11118)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE1E8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x11120)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_352013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C67
L_351978:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351979
L_351984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351985
.p2align 0x4
.long 0x4C58
L_351985:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_351979:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13D0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11118)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE1E8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x11120)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_351980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4CA8
L_352438:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352439
L_352480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352481
.p2align 0x4
.long 0x4CAB
L_352481:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352439:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE020)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C91
L_352349:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	movl %r15d,0xE0(%rbp)
	movq $0x3,0xE8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_352350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C91
L_352261:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	movl %r15d,0xE0(%rbp)
	movq $0x3,0xE8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_352262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4A77
L_349637:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_522397
L_349638:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_349639:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522396
.p2align 0x4,,0x7
L_349640:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_522374
L_349641:
	movq %r15,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_349639
.p2align 0x4
L_522374:
L_349642:
	movq %r14,0x58(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_349643:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522395
.p2align 0x4,,0x7
L_349644:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_522375
L_349645:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_349643
.p2align 0x4
L_522375:
L_349646:
	movq %r15,0x48(%rbp)
L_349647:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_522394
L_349648:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_349649:
	incl %ecx
	jo L_349610
L_349650:
	cmpq $0x1,%r15
	je L_522376
L_349651:
	movq 0x8(%r15),%r15
	jmp L_349649
.p2align 0x4
L_522376:
L_349652:
L_349653:
	movslq %ecx,%rdx
	movq %rdx,0x58(%rbp)
	testq %rdx,%rdx
	jz L_522392
L_349654:
	cmpq $0x7FFFFFFF,%rdx
	ja L_352165
L_349655:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x160D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_349656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_349656
.p2align 0x4
.long 0x4A78
L_349656:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq %rax,0x60(%rbp)
L_349657:
	movq 0x48(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3652:
	cmpq 0x58(%rbp),%r15
	jnl L_522378
L_352160:
	cmpq $0x1,%r14
	je L_352163
L_352161:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x60(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3652
.p2align 0x4
L_522378:
L_349658:
	movq 0x60(%rbp),%r15
	movq $0x18FB,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_349634
L_349660:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,%r13d
	jne L_349662
L_349663:
	cmpl $0x0,%r15d
	jl L_349662
L_349664:
	movq $0x1,0x48(%rbp)
	movl $0x0,0x58(%rbp)
.p2align 0x4,,0x7
loop_3653:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522387
.p2align 0x4,,0x7
L_349665:
	movl 0x58(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_522385
L_352145:
	movl %r15d,%r14d
	incl %r14d
	movslq %r15d,%r13
	movq 0x60(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r11
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r10
	movb 0x0(%r10),%r9b
	movq 0x8(%r10),%r8
	cmpb $0x2,%r9b
	je L_522384
	cmpb $0x3,%r9b
	je L_522383
	cmpb $0x4,%r9b
	je L_522382
	cmpb $0x5,%r9b
	je L_522381
	cmpb $0x6,%r9b
	je L_522380
	cmpb $0x7,%r9b
	je L_522379
	jmp L_352147
.p2align 0x4
L_522379:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
L_352154:
	movl %ecx,0x58(%rbp)
	movq $0x21D1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movzbl %dl,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	jmp loop_3653
.p2align 0x4
L_522380:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
	jmp L_352154
.p2align 0x4
L_522381:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
	jmp L_352154
.p2align 0x4
L_522382:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
L_352150:
	movl %ecx,0x58(%rbp)
	movq $0x21D1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x2203,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movzbl %dl,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	jmp loop_3653
.p2align 0x4
L_522383:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
	jmp L_352150
.p2align 0x4
L_522384:
	movq %r11,%r15
	movl %r14d,%ecx
	movq %r8,%r14
	movb %r9b,%dl
	jmp L_352150
.p2align 0x4
L_522385:
L_349666:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_352144
L_349667:
	movq $0x229F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r13,%r15
	jmp L_349668
.p2align 0x4
L_522387:
L_352157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_352158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352158
.p2align 0x4
.long 0x4C86
L_352158:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_349665
.p2align 0x4
L_522392:
L_352166:
	movq (globalObjptr+0x5C10)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_349657
.p2align 0x4
L_522394:
L_352167:
	xorl %ecx,%ecx
	jmp L_349653
.p2align 0x4
L_522395:
L_352168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_352169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352169
.p2align 0x4
.long 0x4C87
L_352169:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_349644
.p2align 0x4
L_522396:
L_352170:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_352171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352171
.p2align 0x4
.long 0x4C87
L_352171:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_349640
.p2align 0x4
L_522397:
L_352172:
	movq $0x1,0x48(%rbp)
	jmp L_349647
.p2align 0x4
.long 0x4A79
L_349690:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0xD8(%rbp)
	movq $0x3,0xE0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_349691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x528B
L_351346:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x1C0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_522398
L_351347:
	movq 0x1B0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_351348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522398:
L_351352:
	movq 0x1B0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_351353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x528B
L_351358:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351359
L_351360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_351361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351361
.p2align 0x4
.long 0x528C
L_351361:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_351359:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1E0(%rbp)
	addq $0x1E0,%rbp
	leaq (L_351346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x526E
L_351291:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x1B0(%rbp),%r14
	cmpq $0x1,%r14
	je L_522400
L_351292:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1B0(%rbp)
	movq $0x1,0x1D0(%rbp)
L_351293:
	movq 0x0(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x1E8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x1F0(%rbp)
	addq $0x1E8,%rbp
	leaq (L_351294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_522400:
L_351331:
	movq $0x1,%r15
L_351306:
	movq %r15,0x1D8(%rbp)
	addq $0x1D8,%rbp
	leaq (L_351307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BAC
L_351258:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351259
L_351271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D8,%rbp
	leaq (L_351272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351272
.p2align 0x4
.long 0x4BA6
L_351272:
	addq $0xFFFFFFFFFFFFFE28,%rbp
L_351259:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1C0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1A8(%rbp),%r14
	cmpq $0x1,%r14
	je L_522401
L_351260:
	movq %r15,0x1C0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1A8(%rbp)
	jmp L_351251
.p2align 0x4
L_522401:
L_351261:
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D8,%rbp
	leaq (L_351262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x5276
L_351202:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movq 0x200(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351203
L_351236:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x208,%rbp
	leaq (L_351237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351237
.p2align 0x4
.long 0x527E
L_351237:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
L_351203:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1F8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1F0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1D0(%rbp),%r14
	cmpq $0x1,%r14
	je L_522403
L_351204:
	movq %r15,0x1F0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1D0(%rbp)
	jmp L_351195
.p2align 0x4
L_522403:
L_351205:
	movq 0x1F0(%rbp),%r15
	movq %r15,0x208(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x210(%rbp)
	addq $0x208,%rbp
	leaq (L_351206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x527A
L_351212:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351213
L_351227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F8,%rbp
	leaq (L_351228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351228
.p2align 0x4
.long 0x527C
L_351228:
	addq $0xFFFFFFFFFFFFFE08,%rbp
L_351213:
	cmpq $0x1,0x1D8(%rbp)
	je L_522406
L_351214:
	movq 0x1E0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_522405
L_351215:
	movq 0x1E8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D8,%rbp
	leaq (L_351216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522405:
L_351221:
	movq 0x1E8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D8,%rbp
	leaq (L_351222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522406:
L_351226:
	movq (globalObjptr+0xA058)(%rip),%r15
L_351218:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x13D0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x110A8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x1A8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x1C0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x110B0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA308)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x1C8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x110B8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (comment_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5273
L_351176:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351177
L_351183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_351184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351184
.p2align 0x4
.long 0x5274
L_351184:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_351177:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1A8(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_351178
.p2align 0x4
.long 0x5273
L_351148:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351149
L_351155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_351156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351156
.p2align 0x4
.long 0x5274
L_351156:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_351149:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1A8(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_351150
.p2align 0x4
.long 0x5181
L_349809:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movq 0x200(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349810
L_350466:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_350467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350467
.p2align 0x4
.long 0x51ED
L_350467:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_349810:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x200(%rbp)
	addq $0x10,%r12
	movq 0x1E0(%rbp),%r15
	movq %r15,0x208(%rbp)
	addq $0x200,%rbp
	leaq (L_349811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x524F
L_350813:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350814
L_351031:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_351032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351032
.p2align 0x4
.long 0x526A
L_351032:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350814:
	cmpq $0x1,0x70(%rbp)
	je L_522412
L_350815:
	cmpq $0x1,0x78(%rbp)
	je fall_truee_7
x_1127:
	movq 0x8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_133
.p2align 0x4
fall_truee_7:
fall_truee_1:
	movq (globalObjptr+0x5C28)(%rip),%r15
	movl 0x0(%r15),%r14d
	movq $0x8C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x1,0x8(%r13)
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_349610
L_350903:
	movl %r14d,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq %r13,0x1B8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp pushCompensationBlock_1
.p2align 0x4
L_522412:
L_351029:
	movq 0x78(%rbp),%r15
	andq $0x3,%r15
	jnz x_1127
fall_falsee_1:
	movq (globalObjptr+0x5C28)(%rip),%r15
	movl 0x0(%r15),%r14d
	movq $0x8C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x1,0x8(%r13)
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_349610
L_350847:
	movl %r14d,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq %r13,0x1B8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp pushCompensationBlock_1
.p2align 0x4
.long 0x523C
L_350654:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movl 0x1C8(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350655
L_350777:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350778
.p2align 0x4
.long 0x5249
L_350778:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350655:
	movq $0x17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x28,%r12
	movl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1B0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (immediate_110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x520B
L_350530:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xB0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1B8(%rbp)
	movb 0x2C(%rbp),%r14b
	movb %r14b,0x1A8(%rbp)
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0x5202
L_350510:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350511
L_350521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350522
.p2align 0x4
.long 0x5207
L_350522:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350511:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1A8(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x51F1
L_350475:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x90(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x98(%rbp)
	movq %r14,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4BCF
L_351385:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movl 0x180(%rbp),%r15d
	movl %r15d,0x178(%rbp)
	movl %r15d,0x180(%rbp)
	movq $0x3,0x188(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_351386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C56
L_351910:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351911
L_351915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351916
.p2align 0x4
.long 0x4C57
L_351916:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_351911:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_522417
L_351912:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_351901
.p2align 0x4
L_522417:
L_351913:
	movq 0x48(%rbp),%r15
	jmp L_351914
.p2align 0x4
.long 0x4C5C
L_351939:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351940
L_351961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351962
.p2align 0x4
.long 0x4C63
L_351962:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_351940:
	movq 0x40(%rbp),%r15
	movq 0x28(%r15),%r14
	cmpq $0x1,%r14
	je L_522420
L_351941:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_522419
L_351942:
	movl 0x4(%r15),%ecx
	movl 0x0(%r15),%r13d
	movl %r13d,0x40(%rbp)
	movq %r14,0x50(%rbp)
L_351943:
	movl %ecx,0xC8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_351944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_522419:
L_351957:
	movq (globalObjptr+0xA058)(%rip),%r13
	xchgq %r13,%r15
L_351949:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x11128)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (comment_53+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522420:
L_351958:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_522421
L_351959:
	movl 0x4(%r15),%ecx
	movl 0x0(%r15),%r14d
	movl %r14d,0x40(%rbp)
	movq (globalObjptr+0xE368)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_351943
.p2align 0x4
L_522421:
L_351960:
	movq (globalObjptr+0xA058)(%rip),%r13
	movq (globalObjptr+0xE368)(%rip),%r14
	xchgq %r13,%r15
	jmp L_351949
.p2align 0x4
.long 0x4C77
L_352047:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352048
L_352054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_352055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352055
.p2align 0x4
.long 0x4C71
L_352055:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_352048:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_352049
.p2align 0x4
.long 0x4C6C
L_352006:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352007
L_352019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_352020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352020
.p2align 0x4
.long 0x4C73
L_352020:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_352007:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_352008
.p2align 0x4
.long 0x4C70
L_352013:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352014
L_352015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_352016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352016
.p2align 0x4
.long 0x4C71
L_352016:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_352014:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11140)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA308)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11148)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (comment_53+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C68
L_351980:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351981
L_351982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351983
.p2align 0x4
.long 0x4C69
L_351983:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_351981:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11130)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA308)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11138)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (comment_53+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4CA8
L_352440:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4C92
L_352350:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C92
L_352262:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4A79
L_349691:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq %r15,0xD8(%rbp)
	movq $0x9,0xE0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_349692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4BC6
L_351348:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351349
L_351350:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_351351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351351
.p2align 0x4
.long 0x4BC7
L_351351:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_351349:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x110E0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x1A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x110E8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x1B8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x110F0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (comment_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BC6
L_351353:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351354
L_351355:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_351356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351356
.p2align 0x4
.long 0x4BC7
L_351356:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_351354:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_351348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BC3
L_351294:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movq 0x1E8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_522429
L_351295:
	movq %r14,0x1F8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	addq $0x1F0,%rbp
	leaq (L_351296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522429:
L_351326:
	movq %r14,0x1F8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	addq $0x1F0,%rbp
	leaq (L_351327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x5288
L_351307:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq %r15,0x1D8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D8,%rbp
	leaq (L_351308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x5282
L_351262:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351263
L_351269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D8,%rbp
	leaq (L_351270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351270
.p2align 0x4
.long 0x5285
L_351270:
	addq $0xFFFFFFFFFFFFFE28,%rbp
L_351263:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1C8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1A8(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_351264
.p2align 0x4
.long 0x5277
L_351206:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movq 0x208(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351207
L_351234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x208,%rbp
	leaq (L_351235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351235
.p2align 0x4
.long 0x527D
L_351235:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
L_351207:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1F8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1B0(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_351208
.p2align 0x4
.long 0x527B
L_351216:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351217
L_351219:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D8,%rbp
	leaq (L_351220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351220
.p2align 0x4
.long 0x4BA6
L_351220:
	addq $0xFFFFFFFFFFFFFE28,%rbp
L_351217:
	movq 0x1B8(%rbp),%r15
	jmp L_351218
.p2align 0x4
.long 0x527B
L_351222:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351223
L_351224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D8,%rbp
	leaq (L_351225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351225
.p2align 0x4
.long 0x4BA6
L_351225:
	addq $0xFFFFFFFFFFFFFE28,%rbp
L_351223:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1D8(%rbp)
	addq $0x1D8,%rbp
	leaq (L_351216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5181
L_349811:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movq 0x200(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x1D0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x1F8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x200(%rbp)
	movb 0x1C8(%rbp),%r14b
	movb %r14b,0x210(%rbp)
	movq %r15,0x218(%rbp)
	movq %r13,0x220(%rbp)
	addq $0x210,%rbp
	leaq (L_349812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0x5250
L_350816:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_133
.p2align 0x4
.long 0x525F
L_350904:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movl 0x1C8(%rbp),%r15d
	movl %r15d,0x54(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350905
L_350956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350957
.p2align 0x4
.long 0x525E
L_350957:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350905:
	movq $0x17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x54(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x2237,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq (globalObjptr+0x5540)(%rip),%r13
	movq %r13,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x225B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x21D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2215,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movzbl 0x51(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x5256
L_350848:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movl 0x1C8(%rbp),%r15d
	movl %r15d,0x54(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350849
L_350900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350901
.p2align 0x4
.long 0x525E
L_350901:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350849:
	movq $0x17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x54(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x2237,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq (globalObjptr+0x5540)(%rip),%r13
	movq %r13,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x225B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x21D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2215,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movzbl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x523D
immediate_110:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350656
L_350775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350776
.p2align 0x4
.long 0x5248
L_350776:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350656:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x221D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movzbl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x21D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2215,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movb $0x9,%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x520C
L_350531:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movb 0x2D(%rbp),%r14b
	movb %r14b,0x1A8(%rbp)
	movb 0x2C(%rbp),%r14b
	movb %r14b,0x1A9(%rbp)
	movq $0x1,0x1B0(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x1B8(%rbp)
	movq %r15,0x1C0(%rbp)
	movq $0x1,0x1C8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0x5203
L_350512:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1B8(%rbp)
	movb 0x38(%rbp),%r14b
	movb %r14b,0x1A8(%rbp)
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0x51F2
L_350476:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movl 0x1A8(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x1A8(%rbp)
	movq $0x3,0x1B0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4BD0
L_351386:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq $0x3,0x178(%rbp)
	movq 0x170(%rbp),%r14
	movq %r14,0x180(%rbp)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_351387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C5D
L_351944:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0x40(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_351945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4CA9
L_352441:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352442
L_352478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352479
.p2align 0x4
.long 0x4CAA
L_352479:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352442:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x18(%rbp),%r13d
	movl %r13d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x224D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x2259,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x224B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x2259,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x2257,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x229F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_352443
.p2align 0x4
.long 0x4C93
L_352351:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352352
L_352423:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352424
.p2align 0x4
.long 0x4CA2
L_352424:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352352:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_352353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4C93
L_352263:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352264
L_352335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352336
.p2align 0x4
.long 0x4CA2
L_352336:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352264:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_352265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4A79
L_349692:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349693
L_352131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352132
.p2align 0x4
.long 0x4C83
L_352132:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_349693:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_349694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x5286
L_351296:
	addq $0xFFFFFFFFFFFFFE10,%rbp
	movq 0x1F0(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351297
L_351324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F0,%rbp
	leaq (L_351325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351325
.p2align 0x4
.long 0x4BA9
L_351325:
	addq $0xFFFFFFFFFFFFFE10,%rbp
L_351297:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x110D0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x1E0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED68)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1E0(%rbp)
	addq $0x1E0,%rbp
	leaq (L_351298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5286
L_351327:
	addq $0xFFFFFFFFFFFFFE10,%rbp
	movq 0x1F0(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351328
L_351329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F0,%rbp
	leaq (L_351330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351330
.p2align 0x4
.long 0x4BA9
L_351330:
	addq $0xFFFFFFFFFFFFFE10,%rbp
L_351328:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1F0(%rbp)
	addq $0x1F0,%rbp
	leaq (L_351296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BAD
L_351308:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_522443
L_351309:
	movq %r14,0x1C8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_351310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_522443:
L_351315:
	movq %r14,0x1C8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_351316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x5182
L_349812:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movb 0x1C9(%rbp),%r14b
	movb %r14b,0x210(%rbp)
	movb 0x1C8(%rbp),%r14b
	movb %r14b,0x211(%rbp)
	movq $0x1,0x218(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x220(%rbp)
	movq %r15,0x228(%rbp)
	movq $0x1,0x230(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x238(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x240(%rbp)
	addq $0x210,%rbp
	leaq (memloc_189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0x5251
L_350817:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%r13),%r14
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_350826
L_350818:
	cmpq $0x1,%r14
	je L_350826
L_350820:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_522453
L_350822:
	movq 0x8(%r13),%r15
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
L_350823:
	cmpq $0x1,%r14
	je L_522449
L_350824:
	movq 0x8(%r14),%r13
	cmpl 0x0(%r14),%ecx
	jne L_522448
L_351009:
	cmpq $0x1,%r15
	je L_522444
L_351010:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_350823
.p2align 0x4
L_522444:
L_351011:
	cmpq $0x1,%r13
	je L_522447
L_351012:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_351013:
	incl %ecx
	jo L_349610
L_351014:
	cmpq $0x1,%r15
	je L_522445
L_351015:
	movq 0x8(%r15),%r15
	jmp L_351013
.p2align 0x4
L_522445:
L_351016:
L_351017:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x70(%rbp)
L_350827:
	movq 0x8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_133
.p2align 0x4
L_522447:
L_351018:
	xorl %ecx,%ecx
	jmp L_351017
.p2align 0x4
L_522448:
L_350826:
	movq $0x0,0x70(%rbp)
	jmp L_350827
.p2align 0x4
L_522449:
L_351019:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_351020:
	incl %ecx
	jo L_349610
L_351021:
	cmpq $0x1,%r15
	je L_522450
L_351022:
	movq 0x8(%r15),%r15
	jmp L_351020
.p2align 0x4
L_522450:
L_351023:
	negl %ecx
	jo L_349610
L_351024:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x70(%rbp)
	jmp L_350827
.p2align 0x4
L_522453:
L_350821:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
.long 0x5260
L_350906:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350907
L_350954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350955
.p2align 0x4
.long 0x5265
L_350955:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350907:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_350914
L_350908:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_350909:
	movq 0x28(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_350915
L_350910:
	cmpq $0x1,%r14
	je L_522456
L_350911:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_350909
.p2align 0x4
L_522456:
L_350912:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350914
L_350950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350951
.p2align 0x4
.long 0x5265
L_350951:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350914:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
L_350915:
	movq 0x40(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x5257
L_350850:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350851
L_350898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350899
.p2align 0x4
.long 0x525D
L_350899:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350851:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_350858
L_350852:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_350853:
	movq 0x20(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_522463
L_350854:
	cmpq $0x1,%r14
	je L_522461
L_350855:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_350853
.p2align 0x4
L_522461:
L_350856:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350858
L_350894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350895
.p2align 0x4
.long 0x525D
L_350895:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350858:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
L_350859:
	movq 0x40(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
L_522463:
L_350896:
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_350859
.p2align 0x4
.long 0x523E
L_350657:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350658
L_350773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350774
.p2align 0x4
.long 0x5246
L_350774:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350658:
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_350665
L_350659:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_350660:
	movq 0x88(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_522468
L_350661:
	cmpq $0x1,%r14
	je L_522466
L_350662:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_350660
.p2align 0x4
L_522466:
L_350663:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350665
L_350769:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350770
.p2align 0x4
.long 0x5246
L_350770:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350665:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x88(%rbp)
L_350666:
	movq 0x40(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
L_522468:
L_350771:
	movq 0x98(%rbp),%r15
	movq %r15,0x88(%rbp)
	jmp L_350666
.p2align 0x4
.long 0x520D
L_350532:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x2C(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x2D(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x20(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0xD0(%rbp)
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0xD8(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0xE0(%rbp)
	movq %r13,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x5204
L_350513:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb 0x39(%rbp),%r14b
	movb %r14b,0x1A8(%rbp)
	movb 0x38(%rbp),%r14b
	movb %r14b,0x1A9(%rbp)
	movq $0x1,0x1B0(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x1B8(%rbp)
	movq %r15,0x1C0(%rbp)
	movq $0x1,0x1C8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1A8,%rbp
	leaq (memloc_198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0x51F3
L_350477:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x1A8(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x1B0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4BD1
L_351387:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x168(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351388
L_351860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_351861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351861
.p2align 0x4
.long 0x4C4E
L_351861:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_351388:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x170(%rbp)
	addq $0x18,%r12
	movq 0x168(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x178(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x180(%rbp)
	movq %r14,0x190(%rbp)
	movq %r14,0x198(%rbp)
	addq $0x190,%rbp
	leaq (L_351389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x4C5E
L_351945:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351946
L_351955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351956
.p2align 0x4
.long 0x4C62
L_351956:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_351946:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13D0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11118)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE1E8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x11120)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_351947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C94
L_352353:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352354
L_352421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352422
.p2align 0x4
.long 0x4CA1
L_352422:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352354:
	movq $0x2253,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x224F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2259,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2257,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x229F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_522473
L_352355:
	movq %r14,0xE0(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_522473:
L_352420:
	movq $0x1,0x10(%rbp)
L_352361:
	movq 0x60(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (memloc_203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x4C94
L_352265:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352266
L_352333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352334
.p2align 0x4
.long 0x4CA1
L_352334:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352266:
	movq $0x2253,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x224F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2259,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2257,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x229F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_522475
L_352267:
	movq %r14,0xE0(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_522475:
L_352332:
	movq $0x1,0x10(%rbp)
L_352273:
	movq 0x60(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (memloc_202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x4A79
L_349694:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349695
L_352129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352130
.p2align 0x4
.long 0x4C83
L_352130:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_349695:
	movq $0x2251,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq $0x2259,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movslq 0x14(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0xD8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_349696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x5287
L_351298:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351299
L_351322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_351323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351323
.p2align 0x4
.long 0x4BA8
L_351323:
	addq $0xFFFFFFFFFFFFFE18,%rbp
L_351299:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1D8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1B0(%rbp),%r14
	cmpq $0x1,%r14
	je L_522478
L_351300:
	movq %r15,0x1D0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1B0(%rbp)
	jmp L_351293
.p2align 0x4
L_522478:
L_351301:
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq $0x1,0x1D0(%rbp)
.p2align 0x4,,0x7
L_351302:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522480
.p2align 0x4,,0x7
L_351303:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1B0(%rbp),%r14
	cmpq $0x1,%r14
	je L_351306
L_351304:
	movq %r15,0x1D0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x1B0(%rbp)
	movq %r15,0x1B8(%rbp)
	jmp L_351302
.p2align 0x4
L_522480:
L_351320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_351321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351321
.p2align 0x4
.long 0x4BA7
L_351321:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	jmp L_351303
.p2align 0x4
.long 0x5289
L_351310:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351311
L_351313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_351314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351314
.p2align 0x4
.long 0x4BA5
L_351314:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_351311:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x110D8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1C0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_351312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5289
L_351316:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351317
L_351318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_351319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351319
.p2align 0x4
.long 0x4BA5
L_351319:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_351317:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x1C0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_351310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5183
memloc_189:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349813
L_350464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x210,%rbp
	leaq (L_350465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350465
.p2align 0x4
.long 0x51EC
L_350465:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
L_349813:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x1B8(%rbp)
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r15
	movq %r15,0x210(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x218(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x220(%rbp)
	addq $0x210,%rbp
	leaq (L_349814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessTransfer_1
.p2align 0x4
.long 0x5252
L_350828:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_133
.p2align 0x4
.long 0x5261
L_350916:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350917
L_350948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350949
.p2align 0x4
.long 0x5263
L_350949:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350917:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_350924
L_350918:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_350919:
	movq 0x28(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_522488
L_350920:
	cmpq $0x1,%r14
	je L_522485
L_350921:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_350919
.p2align 0x4
L_522485:
L_350922:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350924
L_350941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350942
.p2align 0x4
.long 0x5263
L_350942:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350924:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
L_350925:
	movq $0x2231,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x225B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x229F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x1A0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x21C0,%r14
	je L_522486
L_350940:
	movq 0x30(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0x1D0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2227
.p2align 0x4
L_522486:
L_350926:
	movq 0x30(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0x1D8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1F0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2228
.p2align 0x4
L_522488:
L_350943:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350944
L_350945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350946
.p2align 0x4
.long 0x5264
L_350946:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350944:
	movq 0x18(%rbp),%r15
	jmp L_350925
.p2align 0x4
.long 0x5258
L_350860:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350861
L_350892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350893
.p2align 0x4
.long 0x525B
L_350893:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350861:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_350868
L_350862:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_350863:
	movq 0x28(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_522495
L_350864:
	cmpq $0x1,%r14
	je L_522492
L_350865:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_350863
.p2align 0x4
L_522492:
L_350866:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350868
L_350885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350886
.p2align 0x4
.long 0x525B
L_350886:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350868:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
L_350869:
	movq $0x2231,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x225B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x229F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x1A0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x21C0,%r14
	je L_522493
L_350884:
	movq 0x30(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0x1D0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2227
.p2align 0x4
L_522493:
L_350870:
	movq 0x30(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0x1D8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1F0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2228
.p2align 0x4
L_522495:
L_350887:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350888
L_350889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350890
.p2align 0x4
.long 0x525C
L_350890:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350888:
	movq 0x20(%rbp),%r15
	jmp L_350869
.p2align 0x4
.long 0x523F
L_350667:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350668
L_350767:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350768
.p2align 0x4
.long 0x5246
L_350768:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350668:
	movq 0x88(%rbp),%r13
	cmpq $0x1,%r13
	je L_350675
L_350669:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_350670:
	movq 0x98(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_522504
L_350671:
	cmpq $0x1,%r14
	je L_522499
L_350672:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_350670
.p2align 0x4
L_522499:
L_350673:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350675
L_350760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350761
.p2align 0x4
.long 0x5246
L_350761:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350675:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
L_350676:
	movq $0x2231,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x225B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x229F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_522500
L_350677:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_350650
.p2align 0x4
L_522500:
L_350678:
	movq %r13,0x20(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_350679:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522502
.p2align 0x4,,0x7
L_350680:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_350683
L_350681:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_350679
.p2align 0x4
L_522502:
L_350758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350759
.p2align 0x4
.long 0x5245
L_350759:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	jmp L_350680
.p2align 0x4
L_522504:
L_350762:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350763
L_350764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350765
.p2align 0x4
.long 0x5247
L_350765:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350763:
	movq 0x88(%rbp),%r15
	jmp L_350676
.p2align 0x4
.long 0x520E
L_350533:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movl 0x1A8(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x1A8(%rbp)
	movq $0x3,0x1B0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x5205
memloc_198:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350514
L_350519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350520
.p2align 0x4
.long 0x5206
L_350520:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350514:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x1B0(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x1C8(%rbp)
	movw 0x0(%r14),%r13w
	movw %r13w,0x1D0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x1D8(%rbp)
	movq $0x2217,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1A8(%rbp)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq $0x1,0x1E0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2226
.p2align 0x4
.long 0x51F4
L_350478:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350479
L_350496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350497
.p2align 0x4
.long 0x51FB
L_350497:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350479:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1A8(%rbp)
	addq $0x10,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4BD2
L_351389:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movl 0x190(%rbp),%r15d
	movl %r15d,0x188(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351390
L_351858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_351859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351859
.p2align 0x4
.long 0x4C4D
L_351859:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_351390:
	movl 0x188(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_522510
L_351391:
	movq (globalObjptr+0x18F8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522510:
L_351395:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x168(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x188(%rbp)
	movq 0x180(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x188,%rbp
	leaq (L_351396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4C5F
L_351947:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351948
L_351953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_351954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351954
.p2align 0x4
.long 0x4C61
L_351954:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_351948:
	movq 0x40(%rbp),%r15
	movq 0x50(%rbp),%r14
	jmp L_351949
.p2align 0x4
.long 0x4C95
L_352356:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352357
L_352418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352419
.p2align 0x4
.long 0x4CA0
L_352419:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352357:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE020)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C97
memloc_203:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352362
L_352414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352415
.p2align 0x4
.long 0x4C9E
L_352415:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352362:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x18(%rbp),%r15d
	negl %r15d
	jo L_349610
L_352363:
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x48(%rbp)
	movslq %r15d,%r10
	shlq $0x1,%r10
	orq $0x1,%r10
	movq %r10,0x70(%rbp)
	movq 0x0(%r11),%r15
	movq 0x8(%r15),%r10
	movq %r10,0x80(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x88(%rbp)
	movq %r13,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C95
L_352268:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352269
L_352330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352331
.p2align 0x4
.long 0x4CA0
L_352331:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352269:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE020)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C97
memloc_202:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352274
L_352326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352327
.p2align 0x4
.long 0x4C9E
L_352327:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352274:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x18(%rbp),%r15d
	negl %r15d
	jo L_349610
L_352275:
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x48(%rbp)
	movslq %r15d,%r10
	shlq $0x1,%r10
	orq $0x1,%r10
	movq %r10,0x70(%rbp)
	movq 0x0(%r11),%r15
	movq 0x8(%r15),%r10
	movq %r10,0x80(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x88(%rbp)
	movq %r13,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4A7A
L_349696:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0xE8(%rbp)
	movq $0x3,0xF0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xE8,%rbp
	leaq (L_349697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x5289
L_351312:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x1B0(%rbp),%r14
	movq %r14,0x1B8(%rbp)
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (comment_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x5184
L_349814:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349815
L_350462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x210,%rbp
	leaq (L_350463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350463
.p2align 0x4
.long 0x51EB
L_350463:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
L_349815:
	cmpq $0x1,0x188(%rbp)
	je L_522558
L_349816:
	movq 0xC8(%rbp),%r15
	cmpq $0x1,%r15
	je L_522557
L_349817:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x1D0(%rbp)
	movl $0x0,0x1CC(%rbp)
	movq $0x1,0x208(%rbp)
.p2align 0x4,,0x7
L_349818:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522556
.p2align 0x4,,0x7
L_349819:
	movq 0x80(%rbp),%r15
	movb 0x0(%r15),%r14b
	movb %r14b,0x1CA(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x210(%rbp)
	cmpb $0x3,%r14b
	je L_522555
L_349820:
	cmpb $0x4,%r14b
	je L_522554
L_349821:
	cmpb $0x7,%r14b
	je L_350335
L_349822:
	cmpb $0x6,%r14b
	je L_522537
L_349823:
	movq $0x220D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xE0(%rbp),%r11
	movq %r11,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	cmpb $0x1,%r14b
	je L_522535
	cmpb $0x2,%r14b
	je L_522533
	cmpb $0x3,%r14b
	je L_522531
	cmpb $0x4,%r14b
	je L_522529
	cmpb $0x5,%r14b
	je L_522527
	cmpb $0x6,%r14b
	je L_522525
	cmpb $0x7,%r14b
	je L_522523
L_349824:
	cmpq $0x1,0x208(%rbp)
	je L_522522
L_349825:
	movq %r15,0x210(%rbp)
L_349826:
	movl $0x4,0x80(%rbp)
.p2align 0x4,,0x7
L_349827:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522521
.p2align 0x4,,0x7
L_349828:
	movq $0x22A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x210(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x208(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x80(%rbp),%ecx
.p2align 0x4,,0x7
L_349829:
	addl 0x1CC(%rbp),%ecx
	jo L_349610
L_349830:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_522519
L_349831:
	movl %ecx,0x1CC(%rbp)
	movq %r15,0x208(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_349818
.p2align 0x4
L_522519:
L_349832:
	movl %ecx,0x80(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x20(%rbp)
L_349833:
	movl $0x10,0x210(%rbp)
	movl 0x80(%rbp),%r15d
	movl %r15d,0x214(%rbp)
	addq $0x210,%rbp
	leaq (L_349834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
L_522521:
L_350303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x220,%rbp
	leaq (L_350304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350304
.p2align 0x4
.long 0x51E3
L_350304:
	addq $0xFFFFFFFFFFFFFDE0,%rbp
	jmp L_349828
.p2align 0x4
L_522522:
L_350305:
	movl $0x4,%ecx
	jmp L_349829
.p2align 0x4
L_522523:
L_350330:
	cmpq $0x1,0x208(%rbp)
	je L_522524
L_350331:
	movq %r15,0x210(%rbp)
L_350332:
	movl $0x1,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522524:
L_350333:
	movl $0x1,%ecx
	jmp L_349829
.p2align 0x4
L_522525:
L_350326:
	cmpq $0x1,0x208(%rbp)
	je L_522526
L_350327:
	movq %r15,0x210(%rbp)
L_350328:
	movl $0x2,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522526:
L_350329:
	movl $0x2,%ecx
	jmp L_349829
.p2align 0x4
L_522527:
L_350322:
	cmpq $0x1,0x208(%rbp)
	je L_522528
L_350323:
	movq %r15,0x210(%rbp)
L_350324:
	movl $0x4,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522528:
L_350325:
	movl $0x4,%ecx
	jmp L_349829
.p2align 0x4
L_522529:
L_350318:
	cmpq $0x1,0x208(%rbp)
	je L_522530
L_350319:
	movq %r15,0x210(%rbp)
L_350320:
	movl $0x4,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522530:
L_350321:
	movl $0x4,%ecx
	jmp L_349829
.p2align 0x4
L_522531:
L_350314:
	cmpq $0x1,0x208(%rbp)
	je L_522532
L_350315:
	movq %r15,0x210(%rbp)
L_350316:
	movl $0x8,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522532:
L_350317:
	movl $0x8,%ecx
	jmp L_349829
.p2align 0x4
L_522533:
L_350310:
	cmpq $0x1,0x208(%rbp)
	je L_522534
L_350311:
	movq %r15,0x210(%rbp)
L_350312:
	movl $0xA,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522534:
L_350313:
	movl $0xA,%ecx
	jmp L_349829
.p2align 0x4
L_522535:
L_350306:
	cmpq $0x1,0x208(%rbp)
	je L_522536
L_350307:
	movq %r15,0x210(%rbp)
L_350308:
	movl $0x2,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522536:
L_350309:
	movl $0x2,%ecx
	jmp L_349829
.p2align 0x4
L_522537:
L_350335:
	movq $0x2209,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb 0xA9(%rbp),%r14b
	movzbl %r14b,%r13d
	movb $0x0,%r11b
	movzbl %r11b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r13d
	movzbl 0x1CA(%rbp),%r11d
	shll $0x10,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xF8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x210(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x220D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl %r14b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xE0(%rbp),%r10
	movq %r10,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x229F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	cmpb $0x1,%r14b
	je L_522551
	cmpb $0x2,%r14b
	je L_522549
	cmpb $0x3,%r14b
	je L_522547
	cmpb $0x4,%r14b
	je L_522545
	cmpb $0x5,%r14b
	je L_522543
	cmpb $0x6,%r14b
	je L_522541
	cmpb $0x7,%r14b
	je L_522539
L_350336:
	cmpq $0x1,0x208(%rbp)
	je L_522538
L_350337:
	movq %r15,0x210(%rbp)
L_350338:
	movl $0x4,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522538:
L_350339:
	movl $0x4,%ecx
	jmp L_349829
.p2align 0x4
L_522539:
L_350364:
	cmpq $0x1,0x208(%rbp)
	je L_522540
L_350365:
	movq %r15,0x210(%rbp)
L_350366:
	movl $0x1,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522540:
L_350367:
	movl $0x1,%ecx
	jmp L_349829
.p2align 0x4
L_522541:
L_350360:
	cmpq $0x1,0x208(%rbp)
	je L_522542
L_350361:
	movq %r15,0x210(%rbp)
L_350362:
	movl $0x2,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522542:
L_350363:
	movl $0x2,%ecx
	jmp L_349829
.p2align 0x4
L_522543:
L_350356:
	cmpq $0x1,0x208(%rbp)
	je L_522544
L_350357:
	movq %r15,0x210(%rbp)
L_350358:
	movl $0x4,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522544:
L_350359:
	movl $0x4,%ecx
	jmp L_349829
.p2align 0x4
L_522545:
L_350352:
	cmpq $0x1,0x208(%rbp)
	je L_522546
L_350353:
	movq %r15,0x210(%rbp)
L_350354:
	movl $0x4,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522546:
L_350355:
	movl $0x4,%ecx
	jmp L_349829
.p2align 0x4
L_522547:
L_350348:
	cmpq $0x1,0x208(%rbp)
	je L_522548
L_350349:
	movq %r15,0x210(%rbp)
L_350350:
	movl $0x8,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522548:
L_350351:
	movl $0x8,%ecx
	jmp L_349829
.p2align 0x4
L_522549:
L_350344:
	cmpq $0x1,0x208(%rbp)
	je L_522550
L_350345:
	movq %r15,0x210(%rbp)
L_350346:
	movl $0xA,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522550:
L_350347:
	movl $0xA,%ecx
	jmp L_349829
.p2align 0x4
L_522551:
L_350340:
	cmpq $0x1,0x208(%rbp)
	je L_522552
L_350341:
	movq %r15,0x210(%rbp)
L_350342:
	movl $0x2,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522552:
L_350343:
	movl $0x2,%ecx
	jmp L_349829
.p2align 0x4
L_522554:
L_350369:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%r15),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x218(%rbp)
	movq 0x0(%r10),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x220(%rbp)
	movq 0x0(%r9),%r8
	movq %r8,0x228(%rbp)
	movq %r11,0x238(%rbp)
	addq $0x238,%rbp
	leaq (L_350370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_522555:
L_350411:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%r15),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x218(%rbp)
	movq 0x0(%r10),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x220(%rbp)
	movq 0x0(%r9),%r8
	movq %r8,0x228(%rbp)
	movq %r11,0x238(%rbp)
	addq $0x238,%rbp
	leaq (L_350412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_522556:
L_350453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_350454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350454
.p2align 0x4
.long 0x51EA
L_350454:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	jmp L_349819
.p2align 0x4
L_522557:
L_350455:
	movq $0x1,0x20(%rbp)
	movl $0x0,0x80(%rbp)
	movq $0x1,0xE8(%rbp)
	jmp L_349833
.p2align 0x4
L_522558:
L_350457:
	movq 0xC8(%rbp),%r15
	andq $0x3,%r15
	jz L_522559
L_350458:
	movq (globalObjptr+0x5C40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_522559:
L_350459:
	movq 0xC8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movb 0x0(%r13),%r10b
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movzbl %r10b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xD8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,%r14
	je L_522560
L_350460:
	movq %r15,0x1D0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	movl $0x0,0x1CC(%rbp)
	movq $0x1,0x208(%rbp)
	jmp L_349818
.p2align 0x4
L_522560:
L_350461:
	movq %r15,0x20(%rbp)
	movl $0x0,0x80(%rbp)
	movq $0x1,0xE8(%rbp)
	jmp L_349833
.p2align 0x4
.long 0x5253
L_350829:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350830
L_351007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_351008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351008
.p2align 0x4
.long 0x5269
L_351008:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350830:
	movq 0x78(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x80(%rbp),%r13
	cmpq $0x1,%r13
	je L_350840
L_350831:
	cmpq $0x1,%r14
	je L_350840
L_350833:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_522575
L_350835:
	movq 0x8(%r13),%r15
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
L_350836:
	cmpq $0x1,%r14
	je L_522570
L_350837:
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	cmpl 0x0(%r14),%ecx
	jne L_522568
L_350976:
	cmpq $0x1,%r15
	je L_522562
L_350977:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_350836
.p2align 0x4
L_522562:
L_350978:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350979
L_350992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350993
.p2align 0x4
.long 0x5268
L_350993:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350979:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_522566
L_350980:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_350981:
	incl %ecx
	movl %ecx,0x6C(%rbp)
	jo L_349610
L_350982:
	cmpq $0x1,%r15
	je L_522563
L_350983:
	movq 0x8(%r15),%r15
	jmp L_350981
.p2align 0x4
L_522563:
L_350984:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350985
L_350989:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350990
.p2align 0x4
.long 0x5267
L_350990:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350985:
	movl 0x6C(%rbp),%ecx
L_350986:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz fall_falsee_1
L_350988:
	shrq $0x1,%r14
	movl %r14d,%ecx
L_350967:
	movq %r15,%r14
	andq $0x1,%r14
	jz fall_truee_1
L_350969:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl %r14d,%ecx
	jl fall_falsee_1
L_350970:
	cmpl %ecx,%r14d
	jl fall_truee_1
default_23:
	movq 0x20(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNear_0
.p2align 0x4
L_522566:
L_350991:
	xorl %ecx,%ecx
	jmp L_350986
.p2align 0x4
L_522568:
L_350838:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350840
L_350974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350975
.p2align 0x4
.long 0x5267
L_350975:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350840:
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz default_23
L_350966:
	shrq $0x1,%r15
	movl %r15d,%ecx
	xorq %r15,%r15
	jmp L_350967
.p2align 0x4
L_522570:
L_350994:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_350995:
	incl %ecx
	movl %ecx,0x6C(%rbp)
	jo L_349610
L_350996:
	cmpq $0x1,%r15
	je L_522571
L_350997:
	movq 0x8(%r15),%r15
	jmp L_350995
.p2align 0x4
L_522571:
L_350998:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350999
L_351003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_351004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351004
.p2align 0x4
.long 0x5267
L_351004:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350999:
	movl 0x6C(%rbp),%ecx
	negl %ecx
	jo L_349610
L_351000:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz fall_falsee_1
L_351002:
	shrq $0x1,%r14
	movl %r14d,%ecx
	jmp L_350967
.p2align 0x4
L_522575:
L_350834:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
.long 0x5262
L_350927:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350928
L_350938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350939
.p2align 0x4
.long 0x525A
L_350939:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350928:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_522580
L_350929:
L_350930:
	movq $0x22A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_522579
L_350931:
L_350932:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_350008
.p2align 0x4
L_522579:
L_350933:
	movq 0x198(%rbp),%r15
	jmp L_350009
.p2align 0x4
L_522580:
L_350934:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_522581
L_350935:
L_350936:
	movq 0x18(%rbp),%r13
	xchgq %r13,%r15
	jmp L_350008
.p2align 0x4
L_522581:
L_350937:
	movq 0x18(%rbp),%r13
	movq 0x198(%rbp),%r11
	xchgq %r11,%r15
	xchgq %r13,%r14
	jmp L_350009
.p2align 0x4
.long 0x5259
L_350871:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350872
L_350882:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350883
.p2align 0x4
.long 0x525A
L_350883:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350872:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_522584
L_350873:
L_350874:
	movq $0x22A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_522583
L_350875:
L_350876:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_350008
.p2align 0x4
L_522583:
L_350877:
	movq 0x198(%rbp),%r15
	jmp L_350009
.p2align 0x4
L_522584:
L_350878:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_522585
L_350879:
L_350880:
	movq 0x20(%rbp),%r13
	xchgq %r13,%r15
	jmp L_350008
.p2align 0x4
L_522585:
L_350881:
	movq 0x20(%rbp),%r13
	movq 0x198(%rbp),%r11
	xchgq %r11,%r15
	xchgq %r13,%r14
	jmp L_350009
.p2align 0x4
.long 0x520F
L_350534:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x1A8(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x1B0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x51F8
L_350515:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350516
L_350517:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350518
.p2align 0x4
.long 0x51F9
L_350518:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350516:
	movq 0x18(%rbp),%r14
	movq 0x20(%rbp),%r15
	jmp L_350485
.p2align 0x4
.long 0x51F5
L_350480:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x70(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1B8(%rbp)
	movb 0x58(%rbp),%r14b
	movb %r14b,0x1A8(%rbp)
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0x1
bug_678:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351392
L_351393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_351394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351394
.p2align 0x4
.long 0x451
L_351394:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_351392:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4BD3
L_351396:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x178(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x198,%rbp
	leaq (L_351397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C95
L_352358:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4C98
L_352364:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movl %r15d,0xD8(%rbp)
	movq $0x3,0xE0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C95
L_352270:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4C98
L_352276:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movl %r15d,0xD8(%rbp)
	movq $0x3,0xE0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4A7B
L_349697:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0xE0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_349698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x5185
L_349834:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movl 0x210(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349835
L_350301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x210,%rbp
	leaq (L_350302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350302
.p2align 0x4
.long 0x51E2
L_350302:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
L_349835:
	movl $0x10,%r15d
	subl 0x84(%rbp),%r15d
	movl %r15d,0xF0(%rbp)
	jo L_349610
L_349836:
	cmpl $0x10,%r15d
	je L_522589
L_349837:
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x1D0(%rbp)
	movslq %r15d,%r10
	shlq $0x1,%r10
	orq $0x1,%r10
	movq %r10,0x208(%rbp)
	movq 0x0(%r11),%r15
	movq 0x8(%r15),%r10
	movq %r10,0x210(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x218(%rbp)
	movq %r13,0x228(%rbp)
	addq $0x228,%rbp
	leaq (L_349838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_522589:
L_350298:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_522591
L_350299:
	movl 0x4(%r14),%r13d
	movl %r13d,0x84(%rbp)
	movl 0x80(%rbp),%r14d
	movl %r14d,0xB0(%rbp)
L_349848:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_522590
L_349849:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x8(%r14)
	movq 0x60(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xF8(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0xA9(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0xB4(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x20(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x208(%rbp)
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x210(%rbp)
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x218(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x220(%rbp)
	movq %r13,0x230(%rbp)
	addq $0x230,%rbp
	leaq (L_349850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_522590:
L_349982:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_522591:
L_350300:
	movl 0x80(%rbp),%r13d
	movl %r13d,0x30(%rbp)
	movq 0xE8(%rbp),%r13
	movq %r13,0x50(%rbp)
L_350260:
	movl 0x1A8(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_522600
L_350261:
	movl 0x184(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_522599
L_350262:
	movq $0x1,%r15
L_350263:
	movq $0x2237,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movq 0x120(%rbp),%r15
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x5540)(%rip),%r15
	movq %r15,0x10(%r14)
	movq 0xB0(%rbp),%r15
	movq %r15,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x225B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x188(%rbp),%r15
	cmpq $0x1,%r15
	je L_522595
L_350264:
	movq %r14,0x60(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movl 0x30(%rbp),%r14d
	movl %r14d,0x50(%rbp)
	movq %r15,0x30(%rbp)
L_349949:
	movb 0xAB(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_522592
L_349950:
	movl 0x80(%rbp),%r15d
	movl %r15d,0x1C8(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C8,%rbp
	leaq (L_349951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_522592:
L_349955:
	movq $0x18F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x158(%rbp),%r14
	movb 0x0(%r14),%r13b
	movq 0x168(%rbp),%r14
	movl 0x0(%r14),%r11d
	movb 0xAA(%rbp),%r14b
	cmpb $0x1,%r14b
	je fromString_22
	cmpb $0x2,%r14b
	je L_522593
L_349956:
	cmpb $0x3,%r13b
	je fromString_22
	cmpb $0x8,%r13b
	je fromString_22
	cmpb $0x9,%r13b
	je fromString_22
L_349957:
	testl %r11d,%r11d
	jz fromString_25
L_350123:
	movq %r15,0x1E0(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1C8,%rbp
	leaq (label_8+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp importLabel_4
.p2align 0x4
fromString_25:
fromString_22:
	movq 0x130(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_349959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_522593:
L_350133:
	cmpb $0x3,%r13b
	je indirect_3
	cmpb $0x8,%r13b
	je L_350123
	cmpb $0x9,%r13b
	je indirect_16
L_350134:
	testl %r11d,%r11d
	jz fromString_22
	jmp L_350123
.p2align 0x4
indirect_16:
indirect_3:
	movq %r15,0x1E0(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1C8,%rbp
	leaq (L_350138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp importLabel_4
.p2align 0x4
L_522595:
L_350265:
	movl 0x30(%rbp),%ecx
	movq 0x50(%rbp),%r13
	xchgq %r13,%r15
L_350157:
	movq $0x2213,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0xD8(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x227B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq (globalObjptr+0x5C48)(%rip),%r13
	movq %r13,0x0(%r11)
	movq $0x229F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	addq $0x10,%r12
	cmpq $0x1,0x48(%rbp)
	je L_522596
L_350158:
L_349962:
	movl %ecx,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq %r14,0x50(%rbp)
	movq %r13,0x58(%rbp)
	movq $0x2237,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq (globalObjptr+0x5540)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq $0x1,0x20(%r15)
	movq $0x225B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
L_349963:
	movq 0x190(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C8,%rbp
	leaq (L_349964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_1
.p2align 0x4
L_522596:
L_350159:
	movl %ecx,0x30(%rbp)
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	movq %r13,0x60(%rbp)
L_350089:
	movl 0x1A8(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_522598
L_350090:
	movl 0x180(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_522597
L_350091:
	movq $0x1,%r15
L_350092:
	movq $0x2237,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x18(%r14)
	addq $0x30,%r12
	movq (globalObjptr+0x5540)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq 0x120(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1,0x20(%r14)
	movq $0x225B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movl 0x30(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	jmp L_349963
.p2align 0x4
L_522597:
L_350093:
	movq $0x1,0x40(%rbp)
L_350094:
	movq 0x38(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_350095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
L_522598:
L_350113:
	movq 0x40(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_350114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
L_522599:
L_350266:
	movq $0x1,0x58(%rbp)
L_350267:
	movq 0x38(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_350268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
L_522600:
L_350286:
	movq 0x40(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_350287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x51E4
L_350370:
	addq $0xFFFFFFFFFFFFFDC8,%rbp
	movl 0x238(%rbp),%r15d
	movl %r15d,0x230(%rbp)
	movl %r15d,0x238(%rbp)
	movq $0x3,0x240(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x248(%rbp)
	addq $0x238,%rbp
	leaq (L_350371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x51E4
L_350412:
	addq $0xFFFFFFFFFFFFFDC8,%rbp
	movl 0x238(%rbp),%r15d
	movl %r15d,0x230(%rbp)
	movl %r15d,0x238(%rbp)
	movq $0x3,0x240(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x248(%rbp)
	addq $0x238,%rbp
	leaq (L_350413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x5254
L_350842:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B0,%rbp
	leaq (L_350843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNear_0
.p2align 0x4
.long 0x5210
L_350535:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350536
L_350630:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350631
.p2align 0x4
.long 0x5235
L_350631:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350536:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1A8(%rbp)
	addq $0x10,%r12
	movq 0xD0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x51F6
L_350481:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movb 0x59(%rbp),%r14b
	movb %r14b,0x1A8(%rbp)
	movb 0x58(%rbp),%r14b
	movb %r14b,0x1A9(%rbp)
	movq $0x1,0x1B0(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x1B8(%rbp)
	movq %r15,0x1C0(%rbp)
	movq $0x1,0x1C8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1A8,%rbp
	leaq (memloc_197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0x4BD4
L_351397:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movl 0x198(%rbp),%r15d
	movl %r15d,0x178(%rbp)
	movl %r15d,0x198(%rbp)
	movq $0x3,0x1A0(%rbp)
	movq 0x180(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_351398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C96
L_352359:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352360
L_352416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352417
.p2align 0x4
.long 0x4C9F
L_352417:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352360:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x224D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x2259,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x224B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x2259,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x2257,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x229F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	jmp L_352361
.p2align 0x4
.long 0x4C99
L_352365:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C96
L_352271:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352272
L_352328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352329
.p2align 0x4
.long 0x4C9F
L_352329:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352272:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x224D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x2259,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x224B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x2259,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x2257,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x229F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	jmp L_352273
.p2align 0x4
.long 0x4C99
L_352277:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_352278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4A7C
L_349698:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349699
L_352127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_352128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352128
.p2align 0x4
.long 0x4C82
L_352128:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_349699:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xE0(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_349700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x5186
L_349838:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movl 0x228(%rbp),%r15d
	movl %r15d,0x84(%rbp)
	movl %r15d,0x228(%rbp)
	movq $0x3,0x230(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x238(%rbp)
	addq $0x228,%rbp
	leaq (L_349839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x5189
L_349850:
	addq $0xFFFFFFFFFFFFFDD0,%rbp
	movl 0x230(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movl %r15d,0x230(%rbp)
	movq $0x3,0x238(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x240(%rbp)
	addq $0x230,%rbp
	leaq (L_349851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x51AB
L_349951:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349952
L_350153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350154
.p2align 0x4
.long 0x51C8
L_350154:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_349952:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11540)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_349953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x51C2
label_8:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350124
L_350127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350128
.p2align 0x4
.long 0x51C1
L_350128:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_350124:
	movq $0x21D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x2213,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x5C48)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x229F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	cmpq $0x1,0x48(%rbp)
	je L_522608
L_350125:
	movl 0x50(%rbp),%ecx
	movq 0x58(%rbp),%r15
	movq 0x60(%rbp),%r14
	jmp L_349962
.p2align 0x4
L_522608:
L_350126:
	movl 0x50(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r13,0x60(%rbp)
	jmp L_350089
.p2align 0x4
.long 0x51AD
L_349959:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movl 0x1C8(%rbp),%r15d
	movl %r15d,0x54(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349960
L_350120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350121
.p2align 0x4
.long 0x51C1
L_350121:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_349960:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r14,0x10(%r11)
	addq $0x28,%r12
	movl 0x54(%rbp),%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r13,0x18(%r11)
	movq $0x21D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x2213,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x5C48)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x229F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	cmpq $0x1,0x48(%rbp)
	je L_522610
L_349961:
	movl 0x50(%rbp),%ecx
	movq 0x58(%rbp),%r15
	movq 0x60(%rbp),%r14
	jmp L_349962
.p2align 0x4
L_522610:
L_350088:
	movl 0x50(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r13,0x60(%rbp)
	jmp L_350089
.p2align 0x4
.long 0x51C3
L_350138:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350139
L_350147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350148
.p2align 0x4
.long 0x51C6
L_350148:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_350139:
	movq 0x160(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x21C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_350140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x51AE
L_349964:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349965
L_350086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350087
.p2align 0x4
.long 0x51BC
L_350087:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_349965:
	movq $0x2235,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x225B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movl 0x38(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_349967
L_350072:
	cmpb $0x1,0xAB(%rbp)
	jne L_522613
L_350074:
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x70(%rbp)
	movslq %r15d,%r10
	shlq $0x1,%r10
	orq $0x1,%r10
	movq %r10,0x78(%rbp)
	movq 0x0(%r11),%r15
	movq 0x8(%r15),%r10
	movq %r10,0x80(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x98(%rbp)
	movq %r13,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_350075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_522613:
L_349967:
	movl 0x1AC(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_522631
L_349968:
	movq $0x1,0x38(%rbp)
L_349969:
	cmpq $0x1,0x28(%rbp)
	je L_522616
L_349970:
	cmpq $0x1,0x48(%rbp)
	je L_522614
L_349971:
	movq 0x178(%rbp),%rsp
	movw 0x0(%rsp),%r8w
	movq 0x18(%rsp),%r9
	movq 0x20(%rsp),%r10
	movq 0x28(%rsp),%r14
	movq 0x10(%rsp),%r11
	movq 0x8(%rsp),%r13
	movq 0x30(%rsp),%r15
L_349972:
	movq $0x29FF,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x8(%rsp)
	movq %r14,0x10(%rsp)
	movq %r10,0x18(%rsp)
	movq %r9,0x20(%rsp)
	movq %r11,0x28(%rsp)
	movq %r13,0x30(%rsp)
	addq $0x40,%r12
	movzwl %r8w,%r15d
	movl %r15d,0x0(%rsp)
	movl $0x0,0x4(%rsp)
	movq %rsp,0x48(%rbp)
L_349973:
	movq 0x28(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_349974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
L_522614:
L_350060:
	movq 0x1A0(%rbp),%rsp
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r15
	shrq $0x1,%r15
	cmpq $0x21C0,%r15
	je L_522615
L_350062:
	movw 0x0(%rsp),%r8w
	movq 0x20(%rsp),%r9
	movq 0x18(%rsp),%r10
	movq 0x10(%rsp),%r14
	movq 0x28(%rsp),%r11
	movq 0x30(%rsp),%r13
	movq 0x8(%rsp),%r15
	jmp L_349972
.p2align 0x4
L_522615:
L_350061:
	movq 0x30(%rsp),%r15
	movq 0x28(%rsp),%r14
	movq 0x20(%rsp),%r13
	movw 0x0(%rsp),%r11w
	movq 0x18(%rsp),%r10
	movq 0x10(%rsp),%r9
	movq 0x8(%rsp),%r8
	movq $0x29FD,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x8(%rsp)
	movq %r9,0x10(%rsp)
	movq %r10,0x18(%rsp)
	movq %r13,0x20(%rsp)
	movq %r14,0x28(%rsp)
	movq %r15,0x30(%rsp)
	addq $0x48,%r12
	movzwl %r11w,%r15d
	movl %r15d,0x0(%rsp)
	movl $0x0,0x4(%rsp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x38(%rsp)
	movq %rsp,0x48(%rbp)
	jmp L_349973
.p2align 0x4
L_522616:
L_350063:
	movl 0xAC(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_522630
L_350064:
	movq 0x38(%rbp),%r14
	movq $0x1,%r15
L_349980:
L_349981:
	movq 0xE0(%rbp),%r10
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_349982
L_349983:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0x10E8,%r13
	jne L_349982
L_349984:
	movq 0x0(%r10),%r13
	movq $0x1269,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movl $0x1,0x0(%r11)
	movzwl (globalWord16+0x6A)(%rip),%r10d
	movl %r10d,0x4(%r11)
	movq $0x2245,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x223B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x225B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq (globalObjptr+0x5C68)(%rip),%r10
	movq %r14,%r13
	movq %r10,%r14
L_349985:
	movq $0x259F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x18,%r12
	movq $0x1,0x8(%r10)
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	cmpq $0x1,%r11
	je L_522627
L_349986:
	movq %r14,0x18(%rbp)
	movq %r11,0x20(%rbp)
L_349987:
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_349988:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522626
.p2align 0x4,,0x7
L_349989:
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x18(%rbp),%r11
	cmpq $0x1,%r11
	je L_522625
L_349990:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_349991:
	cmpq $0x1,%r15
	je L_522617
L_349992:
	movq %r13,0x18(%rbp)
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
L_349993:
	jmp L_349988
.p2align 0x4
L_522617:
L_349994:
	movq %r13,0x18(%rbp)
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_349995:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522624
.p2align 0x4,,0x7
L_349996:
	movq 0x18(%rbp),%r11
	cmpq $0x1,%r11
	je L_522618
L_349997:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x20(%rbp),%r14
	jmp L_349991
.p2align 0x4
L_522618:
L_349998:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_522623
L_349999:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_350000:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522622
.p2align 0x4,,0x7
L_350001:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_522619
L_350002:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_350000
.p2align 0x4
L_522619:
L_350004:
	cmpq $0x1,%r15
	je L_522621
L_350005:
	movq $0x22A3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_522620
L_350006:
L_350007:
	movq %r13,%r15
	jmp L_350008
.p2align 0x4
L_522620:
L_350041:
	movq 0x198(%rbp),%r15
	xchgq %r13,%r14
	jmp L_350009
.p2align 0x4
L_522621:
L_350042:
	movq 0xD0(%rbp),%r15
	jmp L_350043
.p2align 0x4
L_522622:
L_350047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350048
.p2align 0x4
.long 0x51B1
L_350048:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	jmp L_350001
.p2align 0x4
L_522623:
L_350049:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_350004
.p2align 0x4
L_522624:
L_350050:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350051
.p2align 0x4
.long 0x51B2
L_350051:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	jmp L_349996
.p2align 0x4
L_522625:
L_350052:
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_350000
.p2align 0x4
L_522626:
L_350053:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350054
.p2align 0x4
.long 0x51B1
L_350054:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	jmp L_349989
.p2align 0x4
L_522627:
L_350055:
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_349995
.p2align 0x4
L_522630:
L_350065:
	movq $0x1,%r14
	movq 0x38(%rbp),%r13
	movq $0x1,%r15
	movq $0x1,%r11
	jmp L_349985
.p2align 0x4
L_522631:
L_350066:
	movq $0x1,0x18(%rbp)
L_350067:
	movq 0x90(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0x1D0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq $0x2217,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x1B8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x1A8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x1B8(%rbp)
	movq $0x1,0x1E0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2226
.p2align 0x4
.long 0x51BD
L_350095:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350096
L_350111:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350112
.p2align 0x4
.long 0x51BE
L_350112:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_350096:
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_350103
L_350097:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_350098:
	movq 0x38(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_522636
L_350099:
	cmpq $0x1,%r14
	je L_522634
L_350100:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_350098
.p2align 0x4
L_522634:
L_350101:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350103
L_350104:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350105
.p2align 0x4
.long 0x51BE
L_350105:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_350103:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_350092
.p2align 0x4
L_522636:
L_350106:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350107
L_350108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350109
.p2align 0x4
.long 0x51BF
L_350109:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_350107:
	movq 0x40(%rbp),%r15
	jmp L_350092
.p2align 0x4
.long 0x51C0
L_350114:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350115
L_350118:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350119
.p2align 0x4
.long 0x51BE
L_350119:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_350115:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movl 0x180(%rbp),%r14d
	testl %r14d,%r14d
	jz L_350092
L_350117:
	movq %r15,0x40(%rbp)
	jmp L_350094
.p2align 0x4
.long 0x51DC
L_350268:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350269
L_350284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350285
.p2align 0x4
.long 0x51DD
L_350285:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_350269:
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_350276
L_350270:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_350271:
	movq 0x60(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_522644
L_350272:
	cmpq $0x1,%r14
	je L_522642
L_350273:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_350271
.p2align 0x4
L_522642:
L_350274:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350276
L_350277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350278
.p2align 0x4
.long 0x51DD
L_350278:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_350276:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_350263
.p2align 0x4
L_522644:
L_350279:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350280
L_350281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350282
.p2align 0x4
.long 0x51DE
L_350282:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_350280:
	movq 0x58(%rbp),%r15
	jmp L_350263
.p2align 0x4
.long 0x51DF
L_350287:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350288
L_350291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350292
.p2align 0x4
.long 0x51DE
L_350292:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_350288:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movl 0x184(%rbp),%r14d
	testl %r14d,%r14d
	jz L_350263
L_350290:
	movq %r15,0x58(%rbp)
	jmp L_350267
.p2align 0x4
.long 0x51E5
L_350371:
	addq $0xFFFFFFFFFFFFFDC8,%rbp
	movq 0x238(%rbp),%r15
	movq %r15,0x220(%rbp)
	movq $0x9,0x230(%rbp)
	movq 0x228(%rbp),%r14
	movq %r14,0x238(%rbp)
	movq %r15,0x228(%rbp)
	addq $0x228,%rbp
	leaq (L_350372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x51E5
L_350413:
	addq $0xFFFFFFFFFFFFFDC8,%rbp
	movq 0x238(%rbp),%r15
	movq %r15,0x220(%rbp)
	movq $0x11,0x230(%rbp)
	movq 0x228(%rbp),%r14
	movq %r14,0x238(%rbp)
	movq %r15,0x228(%rbp)
	addq $0x228,%rbp
	leaq (L_350414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x5255
L_350843:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350844
L_350964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_350965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350965
.p2align 0x4
.long 0x5266
L_350965:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_350844:
	movq 0x70(%rbp),%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_522650
L_350845:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne defaultP_13
L_350958:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl $0x1,%r14d
	je fall_falsee_1
defaultP_13:
	movl 0x54(%rbp),%r15d
	cmpl %r15d,0x68(%rbp)
	jl fall_truee_1
	jmp fall_falsee_1
.p2align 0x4
L_522650:
L_350959:
	movq 0x70(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl $0x1,%r14d
	je L_522651
L_350960:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne defaultP_13
L_350961:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl $0x1,%r14d
	je fall_falsee_1
	jmp defaultP_13
.p2align 0x4
L_522651:
L_350962:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne fall_truee_1
L_350963:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl $0x1,%r14d
	je defaultP_13
	jmp fall_truee_1
.p2align 0x4
.long 0x5211
L_350537:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0xB0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1B8(%rbp)
	movb 0x2C(%rbp),%r14b
	movb %r14b,0x1A8(%rbp)
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0x51F7
memloc_197:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350482
L_350494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350495
.p2align 0x4
.long 0x51FA
L_350495:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350482:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2217,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1A8(%rbp)
	addq $0x10,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movw 0x60(%rbp),%r15w
	movw %r15w,0x1D0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2226
.p2align 0x4
.long 0x4BD5
L_351398:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq %r15,0x180(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_351399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C9A
L_352366:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352367
L_352412:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352413
.p2align 0x4
.long 0x4C9D
L_352413:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352367:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (immediate_117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4C9A
L_352278:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352279
L_352324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352325
.p2align 0x4
.long 0x4C9D
L_352325:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352279:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (immediate_116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4A7D
L_349700:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349701
L_352125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_352126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352126
.p2align 0x4
.long 0x4C81
L_352126:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_349701:
	movq $0x2253,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x224F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2259,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2257,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x229F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_522656
L_349702:
	movq %r14,0xE0(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_349703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_522656:
L_352124:
	movq $0x1,0x10(%rbp)
L_349708:
	movq 0x98(%rbp),%r15
	movl 0x14(%r15),%r14d
	testl %r14d,%r14d
	jnz L_522657
L_349709:
	movq 0x18(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_349710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2229
.p2align 0x4
L_522657:
L_352108:
	movq 0x68(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movl 0x4(%r15),%r11d
	movq 0x10(%r15),%r10
	movl 0x0(%r15),%r9d
	movq 0x8(%r15),%r8
	movq $0x2241,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x2241,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	testl %r11d,%r11d
	jz L_522669
L_352117:
	movq $0x2241,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	testl %r9d,%r9d
	jz L_352111
	movq %r8,%r13
L_352116:
	movq $0x2241,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
L_352111:
	movq $0x223F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x225B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_522667
L_352112:
L_352113:
	movq $0x22A1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq %r13,%r15
L_349739:
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_349740:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522666
.p2align 0x4,,0x7
L_349741:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_522665
L_349742:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x10(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_349743:
	cmpq $0x1,%r14
	jne L_522664
L_349746:
	cmpq $0x1,%r15
	je L_522658
L_349747:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_349743
.p2align 0x4
L_522658:
L_349748:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349749
L_352083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352084
.p2align 0x4
.long 0x4C7A
L_352084:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_349749:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_522662
L_349750:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_349751:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522661
.p2align 0x4,,0x7
L_349752:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_522659
L_349753:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_349751
.p2align 0x4
L_522659:
L_349755:
	cmpq $0x1,%r15
	je L_352079
L_349756:
	movq $0x22A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	jmp L_349757
.p2align 0x4
L_522661:
L_352080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352081
.p2align 0x4
.long 0x4C79
L_352081:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_349752
.p2align 0x4
L_522662:
L_352082:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_349755
.p2align 0x4
L_522664:
L_349744:
	movq %r14,0x18(%rbp)
L_349745:
	movq 0x10(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_349740
.p2align 0x4
L_522665:
L_352085:
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x48(%rbp)
	jmp L_349751
.p2align 0x4
L_522666:
L_352086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352087
.p2align 0x4
.long 0x4C79
L_352087:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_349741
.p2align 0x4
L_522667:
L_352114:
	movq $0x229D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r15
	jmp L_349739
.p2align 0x4
L_522669:
L_352109:
	testl %r9d,%r9d
	jz L_522670
L_352115:
	movq %r14,%r15
	movq %r8,%r13
	jmp L_352116
.p2align 0x4
L_522670:
L_352110:
	movq %r14,%r15
	jmp L_352111
.p2align 0x4
.long 0x5187
L_349839:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq 0x228(%rbp),%r15
	movq %r15,0x210(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x220(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x210,%rbp
	leaq (L_349840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x518A
L_349851:
	addq $0xFFFFFFFFFFFFFDD0,%rbp
	movq 0x230(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x228(%rbp)
	movq 0x220(%rbp),%r14
	movq %r14,0x230(%rbp)
	movq %r15,0x220(%rbp)
	addq $0x220,%rbp
	leaq (L_349852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x51AC
L_349953:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349955
L_350151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350152
.p2align 0x4
.long 0x51C7
L_350152:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	jmp L_349955
.p2align 0x4
.long 0x51C4
L_350140:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1D8(%rbp)
	movb $0x1,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_350141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0x51B6
L_350075:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movl 0x1C8(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x1C8(%rbp)
	movq $0x3,0x1D0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_350076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x51AF
L_349974:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x48(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x14FE,%r13
	je L_522673
L_350059:
	movq 0x30(%r14),%r13
	movq %r13,0x1B8(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x1C8(%rbp)
	movw 0x0(%r14),%r13w
	movw %r13w,0x1D0(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x1D8(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x1E0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x1E8(%rbp)
	movq %r15,0x1A8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_349976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2227
.p2align 0x4
L_522673:
L_349975:
	movq 0x38(%r14),%r13
	movq %r13,0x1B8(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x1C8(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x1D0(%rbp)
	movw 0x0(%r14),%r13w
	movw %r13w,0x1D8(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x1E0(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x1E8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x1F0(%rbp)
	movq %r15,0x1A8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_349976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2228
.p2align 0x4
.long 0x51B4
L_350068:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350069
L_350070:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350071
.p2align 0x4
.long 0x51B5
L_350071:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350069:
	movq 0x28(%rbp),%r14
	movq 0x18(%rbp),%r15
L_349978:
	movl 0xAC(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_522674
L_349979:
	xchgq %r14,%r15
	jmp L_349980
.p2align 0x4
L_522674:
L_350056:
	movq $0x1,%r11
	movq $0x1,%r10
	movq %r15,%r13
	movq %r14,%r15
	movq %r10,%r14
	jmp L_349985
.p2align 0x4
.long 0x51E6
L_350372:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq 0x228(%rbp),%r15
	movq %r15,0x220(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350373
L_350409:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x230,%rbp
	leaq (L_350410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350410
.p2align 0x4
.long 0x51E9
L_350410:
	addq $0xFFFFFFFFFFFFFDD0,%rbp
L_350373:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x220(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x220(%rbp)
	addq $0x10,%r12
	movq 0x218(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x220,%rbp
	leaq (immediate_105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x51E6
L_350414:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq 0x228(%rbp),%r15
	movq %r15,0x220(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350415
L_350451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x230,%rbp
	leaq (L_350452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350452
.p2align 0x4
.long 0x51E9
L_350452:
	addq $0xFFFFFFFFFFFFFDD0,%rbp
L_350415:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x220(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x220(%rbp)
	addq $0x10,%r12
	movq 0x218(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x220,%rbp
	leaq (immediate_106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x5212
L_350538:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movb 0x2D(%rbp),%r14b
	movb %r14b,0x1A8(%rbp)
	movb 0x2C(%rbp),%r14b
	movb %r14b,0x1A9(%rbp)
	movq $0x1,0x1B0(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x1B8(%rbp)
	movq %r15,0x1C0(%rbp)
	movq $0x1,0x1C8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1A8,%rbp
	leaq (memloc_199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0x51F8
L_350483:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350484
L_350492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350493
.p2align 0x4
.long 0x51F9
L_350493:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350484:
	movq 0x18(%rbp),%r14
	movq 0x20(%rbp),%r15
	jmp L_350485
.p2align 0x4
.long 0x4BD0
L_351399:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x168(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351400
L_351856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_351857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351857
.p2align 0x4
.long 0x4C4C
L_351857:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_351400:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x178(%rbp)
	addq $0x18,%r12
	movq 0x168(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x18F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x180(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x170(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0xF25,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x188(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x190(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x198(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x1A0(%rbp)
	movq %r14,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_351401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C9B
immediate_117:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352368
L_352410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352411
.p2align 0x4
.long 0x4C9C
L_352411:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352368:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2229,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x6,%r15b
	movzbl %r15b,%r13d
	movzbl 0x4(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_522693
L_352369:
L_352370:
	movq $0x22A1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq %r13,%r15
farEntry_3:
	movq 0x68(%rbp),%r14
	movq 0x20(%r14),%r13
	movq 0x18(%r14),%r11
	movl 0x4(%r14),%r10d
	movq 0x10(%r14),%r9
	movl 0x0(%r14),%r8d
	movq 0x8(%r14),%rsp
	movq $0x2241,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2241,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	testl %r10d,%r10d
	jz L_522691
L_352406:
	movq $0x2241,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	testl %r8d,%r8d
	jz L_352373
	movq %rsp,%r11
L_352405:
	movq $0x2241,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r14
L_352373:
	movq $0x223F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x225B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	cmpq $0x1,%r15
	je L_522689
L_352374:
L_352375:
	movq $0x22A1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_352376:
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_352377:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522688
.p2align 0x4,,0x7
L_352378:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_522687
L_352379:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x10(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_352380:
	cmpq $0x1,%r14
	jne L_522686
L_352383:
	cmpq $0x1,%r15
	je L_522680
L_352384:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_352380
.p2align 0x4
L_522680:
L_352385:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352386
L_352398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352399
.p2align 0x4
.long 0x4C7A
L_352399:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352386:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_522684
L_352387:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_352388:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522683
.p2align 0x4,,0x7
L_352389:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_522681
L_352390:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_352388
.p2align 0x4
L_522681:
L_352392:
	cmpq $0x1,%r15
	je L_352079
L_352393:
	movq $0x22A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	jmp L_349757
.p2align 0x4
L_522683:
L_352395:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352396
.p2align 0x4
.long 0x4C79
L_352396:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_352389
.p2align 0x4
L_522684:
L_352397:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_352392
.p2align 0x4
L_522686:
L_352381:
	movq %r14,0x18(%rbp)
L_352382:
	movq 0x10(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_352377
.p2align 0x4
L_522687:
L_352400:
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x48(%rbp)
	jmp L_352388
.p2align 0x4
L_522688:
L_352401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352402
.p2align 0x4
.long 0x4C79
L_352402:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_352378
.p2align 0x4
L_522689:
L_352403:
	movq $0x229D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp L_352376
.p2align 0x4
L_522691:
L_352371:
	testl %r8d,%r8d
	jz L_522692
L_352404:
	movq %r13,%r14
	movq %rsp,%r11
	jmp L_352405
.p2align 0x4
L_522692:
L_352372:
	movq %r13,%r14
	jmp L_352373
.p2align 0x4
L_522693:
L_352409:
	movq $0x229D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r15
	jmp farEntry_3
.p2align 0x4
.long 0x4C9B
immediate_116:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352280
L_352322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352323
.p2align 0x4
.long 0x4C9C
L_352323:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352280:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2229,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x6,%r15b
	movzbl %r15b,%r13d
	movzbl 0x4(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_522708
L_352281:
L_352282:
	movq $0x22A1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq %r13,%r15
farEntry_2:
	movq 0x68(%rbp),%r14
	movq 0x20(%r14),%r13
	movq 0x18(%r14),%r11
	movl 0x4(%r14),%r10d
	movq 0x10(%r14),%r9
	movl 0x0(%r14),%r8d
	movq 0x8(%r14),%rsp
	movq $0x2241,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2241,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	testl %r10d,%r10d
	jz L_522706
L_352318:
	movq $0x2241,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	testl %r8d,%r8d
	jz L_352285
	movq %rsp,%r11
L_352317:
	movq $0x2241,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r14
L_352285:
	movq $0x223F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x225B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	cmpq $0x1,%r15
	je L_522704
L_352286:
L_352287:
	movq $0x22A1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_352288:
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_352289:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522703
.p2align 0x4,,0x7
L_352290:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_522702
L_352291:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x10(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_352292:
	cmpq $0x1,%r14
	jne L_522701
L_352295:
	cmpq $0x1,%r15
	je L_522695
L_352296:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_352292
.p2align 0x4
L_522695:
L_352297:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_352298
L_352310:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352311
.p2align 0x4
.long 0x4C7A
L_352311:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_352298:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_522699
L_352299:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_352300:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522698
.p2align 0x4,,0x7
L_352301:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_522696
L_352302:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_352300
.p2align 0x4
L_522696:
L_352304:
	cmpq $0x1,%r15
	je L_352079
L_352305:
	movq $0x22A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	jmp L_349757
.p2align 0x4
L_522698:
L_352307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352308
.p2align 0x4
.long 0x4C79
L_352308:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_352301
.p2align 0x4
L_522699:
L_352309:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_352304
.p2align 0x4
L_522701:
L_352293:
	movq %r14,0x18(%rbp)
L_352294:
	movq 0x10(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_352289
.p2align 0x4
L_522702:
L_352312:
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x48(%rbp)
	jmp L_352300
.p2align 0x4
L_522703:
L_352313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352314
.p2align 0x4
.long 0x4C79
L_352314:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_352290
.p2align 0x4
L_522704:
L_352315:
	movq $0x229D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp L_352288
.p2align 0x4
L_522706:
L_352283:
	testl %r8d,%r8d
	jz L_522707
L_352316:
	movq %r13,%r14
	movq %rsp,%r11
	jmp L_352317
.p2align 0x4
L_522707:
L_352284:
	movq %r13,%r14
	jmp L_352285
.p2align 0x4
L_522708:
L_352321:
	movq $0x229D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r15
	jmp farEntry_2
.p2align 0x4
.long 0x4A7E
L_349703:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349704
L_352122:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352123
.p2align 0x4
.long 0x4C80
L_352123:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_349704:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE020)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_349705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4A80
L_349710:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349711
L_352106:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352107
.p2align 0x4
.long 0x4C7E
L_352107:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_349711:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_522718
L_349712:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_349713:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522717
.p2align 0x4,,0x7
L_349714:
	movq 0x60(%rbp),%r15
	movl 0x0(%r15),%r14d
	movw 0x4(%r15),%r13w
	movq 0x8(%r15),%r11
	movq $0xF1D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x4(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movl $0x400,0x0(%r15)
	movl $0x0,0x8(%r15)
	movzwl %r13w,%r14d
	movl %r14d,0xC(%r15)
	movq $0x2241,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_522711
L_349715:
	movq %r14,0x68(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_349713
.p2align 0x4
L_522711:
L_349716:
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_349717:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522716
.p2align 0x4,,0x7
L_349718:
	movq $0x2241,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_522712
L_349719:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_349717
.p2align 0x4
L_522712:
L_349721:
	movq 0x78(%rbp),%r14
	movq 0x20(%r14),%r13
	movq 0x18(%r14),%r11
	movl 0x4(%r14),%r10d
	movq 0x10(%r14),%r9
	movl 0x0(%r14),%r8d
	movq 0x8(%r14),%rsp
	movq $0x2241,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x2241,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	testl %r10d,%r10d
	jz L_522714
L_352098:
	movq $0x2241,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	testl %r8d,%r8d
	jz L_522713
	movq %r14,%r15
	movq %rsp,%r13
L_352097:
	movq $0x2241,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
L_349724:
	movq $0x223F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x225B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_349725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2230
.p2align 0x4
L_522713:
	movq %r14,%r15
	jmp L_349724
.p2align 0x4
L_522714:
L_349722:
	testl %r8d,%r8d
	jz L_349724
L_352096:
	movq %rsp,%r13
	jmp L_352097
.p2align 0x4
L_522716:
L_352101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352102
.p2align 0x4
.long 0x4C7D
L_352102:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_349718
.p2align 0x4
L_522717:
L_352103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352104
.p2align 0x4
.long 0x4C7D
L_352104:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_349714
.p2align 0x4
L_522718:
L_352105:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_349721
.p2align 0x4
.long 0x5188
L_349840:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x208(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349841
L_350296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_350297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350297
.p2align 0x4
.long 0x51E1
L_350297:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_349841:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x208(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x210(%rbp)
	addq $0x10,%r12
	movq 0x1D0(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x210,%rbp
	leaq (immediate_100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x518B
L_349852:
	addq $0xFFFFFFFFFFFFFDE0,%rbp
	movq 0x220(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349853
L_350256:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x220,%rbp
	leaq (L_350257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350257
.p2align 0x4
.long 0x51DB
L_350257:
	addq $0xFFFFFFFFFFFFFDE0,%rbp
L_349853:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x208(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x210(%rbp),%r15
	movq %r15,0x218(%rbp)
	movq %r14,0x210(%rbp)
	addq $0x210,%rbp
	leaq (L_349854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x51C5
L_350141:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movb $0x5,0x1C8(%rbp)
	movb $0x1,0x1C9(%rbp)
	movq $0x1,0x1D0(%rbp)
	movq $0x1,0x1D8(%rbp)
	movq %r15,0x1E0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	addq $0x1C8,%rbp
	leaq (memloc_193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0x51B7
L_350076:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x1C8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_350077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x51B0
L_349976:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349977
L_350057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350058
.p2align 0x4
.long 0x51B3
L_350058:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_349977:
	movq 0x18(%rbp),%r14
	movq 0x38(%rbp),%r15
	jmp L_349978
.p2align 0x4
.long 0x51E7
immediate_105:
	addq $0xFFFFFFFFFFFFFDE0,%rbp
	movq 0x220(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350374
L_350407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x220,%rbp
	leaq (L_350408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350408
.p2align 0x4
.long 0x51E8
L_350408:
	addq $0xFFFFFFFFFFFFFDE0,%rbp
L_350374:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2229,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x4,%r15b
	movzbl %r15b,%r13d
	movzbl 0xA8(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xE0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2203,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movb 0x1CA(%rbp),%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xF0(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x210(%rbp),%r11
	movq %r11,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq $0x229F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	cmpb $0x1,%r13b
	je L_522736
	cmpb $0x2,%r13b
	je L_522734
	cmpb $0x3,%r13b
	je L_522732
	cmpb $0x4,%r13b
	je L_522730
	cmpb $0x5,%r13b
	je L_522728
	cmpb $0x6,%r13b
	je L_522726
	cmpb $0x7,%r13b
	je L_522724
L_350375:
	cmpq $0x1,0x208(%rbp)
	je L_522723
L_350376:
	movq %r15,0x210(%rbp)
L_350377:
	movl $0x4,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522723:
L_350378:
	movl $0x4,%ecx
	jmp L_349829
.p2align 0x4
L_522724:
L_350403:
	cmpq $0x1,0x208(%rbp)
	je L_522725
L_350404:
	movq %r15,0x210(%rbp)
L_350405:
	movl $0x1,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522725:
L_350406:
	movl $0x1,%ecx
	jmp L_349829
.p2align 0x4
L_522726:
L_350399:
	cmpq $0x1,0x208(%rbp)
	je L_522727
L_350400:
	movq %r15,0x210(%rbp)
L_350401:
	movl $0x2,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522727:
L_350402:
	movl $0x2,%ecx
	jmp L_349829
.p2align 0x4
L_522728:
L_350395:
	cmpq $0x1,0x208(%rbp)
	je L_522729
L_350396:
	movq %r15,0x210(%rbp)
L_350397:
	movl $0x4,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522729:
L_350398:
	movl $0x4,%ecx
	jmp L_349829
.p2align 0x4
L_522730:
L_350391:
	cmpq $0x1,0x208(%rbp)
	je L_522731
L_350392:
	movq %r15,0x210(%rbp)
L_350393:
	movl $0x4,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522731:
L_350394:
	movl $0x4,%ecx
	jmp L_349829
.p2align 0x4
L_522732:
L_350387:
	cmpq $0x1,0x208(%rbp)
	je L_522733
L_350388:
	movq %r15,0x210(%rbp)
L_350389:
	movl $0x8,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522733:
L_350390:
	movl $0x8,%ecx
	jmp L_349829
.p2align 0x4
L_522734:
L_350383:
	cmpq $0x1,0x208(%rbp)
	je L_522735
L_350384:
	movq %r15,0x210(%rbp)
L_350385:
	movl $0xA,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522735:
L_350386:
	movl $0xA,%ecx
	jmp L_349829
.p2align 0x4
L_522736:
L_350379:
	cmpq $0x1,0x208(%rbp)
	je L_522737
L_350380:
	movq %r15,0x210(%rbp)
L_350381:
	movl $0x2,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522737:
L_350382:
	movl $0x2,%ecx
	jmp L_349829
.p2align 0x4
.long 0x51E7
immediate_106:
	addq $0xFFFFFFFFFFFFFDE0,%rbp
	movq 0x220(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350416
L_350449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x220,%rbp
	leaq (L_350450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350450
.p2align 0x4
.long 0x51E8
L_350450:
	addq $0xFFFFFFFFFFFFFDE0,%rbp
L_350416:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2229,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x4,%r15b
	movzbl %r15b,%r13d
	movzbl 0xA8(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xE0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2203,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movb 0x1CA(%rbp),%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xE8(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x210(%rbp),%r11
	movq %r11,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq $0x229F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	cmpb $0x1,%r13b
	je L_522752
	cmpb $0x2,%r13b
	je L_522750
	cmpb $0x3,%r13b
	je L_522748
	cmpb $0x4,%r13b
	je L_522746
	cmpb $0x5,%r13b
	je L_522744
	cmpb $0x6,%r13b
	je L_522742
	cmpb $0x7,%r13b
	je L_522740
L_350417:
	cmpq $0x1,0x208(%rbp)
	je L_522739
L_350418:
	movq %r15,0x210(%rbp)
L_350419:
	movl $0x4,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522739:
L_350420:
	movl $0x4,%ecx
	jmp L_349829
.p2align 0x4
L_522740:
L_350445:
	cmpq $0x1,0x208(%rbp)
	je L_522741
L_350446:
	movq %r15,0x210(%rbp)
L_350447:
	movl $0x1,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522741:
L_350448:
	movl $0x1,%ecx
	jmp L_349829
.p2align 0x4
L_522742:
L_350441:
	cmpq $0x1,0x208(%rbp)
	je L_522743
L_350442:
	movq %r15,0x210(%rbp)
L_350443:
	movl $0x2,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522743:
L_350444:
	movl $0x2,%ecx
	jmp L_349829
.p2align 0x4
L_522744:
L_350437:
	cmpq $0x1,0x208(%rbp)
	je L_522745
L_350438:
	movq %r15,0x210(%rbp)
L_350439:
	movl $0x4,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522745:
L_350440:
	movl $0x4,%ecx
	jmp L_349829
.p2align 0x4
L_522746:
L_350433:
	cmpq $0x1,0x208(%rbp)
	je L_522747
L_350434:
	movq %r15,0x210(%rbp)
L_350435:
	movl $0x4,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522747:
L_350436:
	movl $0x4,%ecx
	jmp L_349829
.p2align 0x4
L_522748:
L_350429:
	cmpq $0x1,0x208(%rbp)
	je L_522749
L_350430:
	movq %r15,0x210(%rbp)
L_350431:
	movl $0x8,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522749:
L_350432:
	movl $0x8,%ecx
	jmp L_349829
.p2align 0x4
L_522750:
L_350425:
	cmpq $0x1,0x208(%rbp)
	je L_522751
L_350426:
	movq %r15,0x210(%rbp)
L_350427:
	movl $0xA,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522751:
L_350428:
	movl $0xA,%ecx
	jmp L_349829
.p2align 0x4
L_522752:
L_350421:
	cmpq $0x1,0x208(%rbp)
	je L_522753
L_350422:
	movq %r15,0x210(%rbp)
L_350423:
	movl $0x2,0x80(%rbp)
	jmp L_349827
.p2align 0x4
L_522753:
L_350424:
	movl $0x2,%ecx
	jmp L_349829
.p2align 0x4
.long 0x5213
memloc_199:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350539
L_350628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350629
.p2align 0x4
.long 0x5237
L_350629:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350539:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (memloc_200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x4BD6
L_351401:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x1A8(%rbp)
	movq $0x3,0x1B0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_351402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4A7E
L_349705:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_349706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4A81
L_349725:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349726
L_352094:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352095
.p2align 0x4
.long 0x4C7C
L_352095:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_349726:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_522761
L_349727:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_349728:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522760
.p2align 0x4,,0x7
L_349729:
	movq 0x60(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x126B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x4(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x400,0x0(%r15)
	movq $0x2243,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_522756
L_349730:
	movq %r14,0x68(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_349728
.p2align 0x4
L_522756:
L_349731:
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_349732:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522759
.p2align 0x4,,0x7
L_349733:
	movq $0x2243,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_522757
L_349734:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_349732
.p2align 0x4
L_522757:
L_349736:
	movq $0x223D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x225B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x229F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_522758
L_349737:
L_349738:
	movq $0x22A5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq %r13,%r15
	jmp L_349739
.p2align 0x4
L_522758:
L_352088:
	xchgq %r14,%r15
	jmp L_349739
.p2align 0x4
L_522759:
L_352089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352090
.p2align 0x4
.long 0x4C7B
L_352090:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_349733
.p2align 0x4
L_522760:
L_352091:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352092
.p2align 0x4
.long 0x4C7B
L_352092:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_349729
.p2align 0x4
L_522761:
L_352093:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_349736
.p2align 0x4
.long 0x5185
immediate_100:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349842
L_350294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x210,%rbp
	leaq (L_350295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350295
.p2align 0x4
.long 0x51E0
L_350295:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
L_349842:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2229,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x4,%r15b
	movzbl %r15b,%r13d
	movzbl 0xA8(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xE0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xE8(%rbp),%r15
	cmpq $0x1,%r15
	je L_522765
L_349843:
L_349844:
	movq $0x22A5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq %r13,%r15
L_349845:
	movl 0x80(%rbp),%r14d
	addl 0xF0(%rbp),%r14d
	jo L_349610
L_349846:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_522763
L_349847:
	movl %r14d,0xB0(%rbp)
	movq %r15,0xE8(%rbp)
	movl 0x4(%r13),%r15d
	movl %r15d,0x84(%rbp)
	jmp L_349848
.p2align 0x4
L_522763:
L_350259:
	movl %r14d,0x30(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_350260
.p2align 0x4
L_522765:
L_350293:
	xchgq %r14,%r15
	jmp L_349845
.p2align 0x4
.long 0x518C
L_349854:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x1D0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x220(%rbp)
	movb 0xA9(%rbp),%r14b
	movb %r14b,0x210(%rbp)
	movq %r15,0x218(%rbp)
	addq $0x210,%rbp
	leaq (L_349855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0x51C2
memloc_193:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350142
L_350145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350146
.p2align 0x4
.long 0x51C1
L_350146:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_350142:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x2213,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x5C48)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x229F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	cmpq $0x1,0x48(%rbp)
	je L_522767
L_350143:
	movl 0x50(%rbp),%ecx
	movq 0x58(%rbp),%r15
	movq 0x60(%rbp),%r14
	jmp L_349962
.p2align 0x4
L_522767:
L_350144:
	movl 0x50(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r13,0x60(%rbp)
	jmp L_350089
.p2align 0x4
.long 0x51B8
L_350077:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350078
L_350084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350085
.p2align 0x4
.long 0x51BB
L_350085:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_350078:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1C8(%rbp)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C8,%rbp
	leaq (immediate_103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x5214
memloc_200:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350540
L_350626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350627
.p2align 0x4
.long 0x5236
L_350627:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350540:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x2C(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x2D(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x4BD7
L_351402:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x3,0x1A0(%rbp)
	movq %r15,0x1A8(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4A7F
L_349706:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349707
L_352120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_352121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_352121
.p2align 0x4
.long 0x4C7F
L_352121:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_349707:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x58(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x224D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x2259,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x224B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x2259,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x2257,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x229F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	jmp L_349708
.p2align 0x4
.long 0x518D
L_349855:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x50(%rbp)
	movb 0xB4(%rbp),%r14b
	movb %r14b,0x210(%rbp)
	movb 0xA9(%rbp),%r14b
	movb %r14b,0x211(%rbp)
	movq $0x1,0x218(%rbp)
	movq 0xF0(%rbp),%r14
	movq %r14,0x220(%rbp)
	movq %r15,0x228(%rbp)
	movq $0x1,0x230(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x238(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x240(%rbp)
	addq $0x210,%rbp
	leaq (L_349856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0x51B9
immediate_103:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350079
L_350082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350083
.p2align 0x4
.long 0x51BA
L_350083:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_350079:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2229,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x6,%r15b
	movzbl %r15b,%r13d
	movzbl 0xA8(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xE0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movl 0x1AC(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_522772
L_350080:
	movq %r14,0x38(%rbp)
	jmp L_349969
.p2align 0x4
L_522772:
L_350081:
	movq %r14,0x18(%rbp)
	jmp L_350067
.p2align 0x4
.long 0x5215
L_350541:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xD0(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0xD8(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0xE0(%rbp)
	movq %r14,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4BD8
L_351403:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x190(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_351404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x518E
L_349856:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xF0(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0xA9(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0xB4(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x20(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x1D0(%rbp)
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x208(%rbp)
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x210(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x218(%rbp)
	movq %r13,0x228(%rbp)
	addq $0x228,%rbp
	leaq (L_349857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x5216
L_350542:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movl 0x1A8(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movl %r15d,0x1A8(%rbp)
	movq $0x3,0x1B0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4BD9
L_351404:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movl 0x1A8(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x1A8(%rbp)
	movq $0x3,0x1B0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_351405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x518F
L_349857:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movl 0x228(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x228(%rbp)
	movq $0x3,0x230(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x238(%rbp)
	addq $0x228,%rbp
	leaq (L_349858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x5217
L_350543:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq %r15,0x1A8(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x1B0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4BDA
L_351405:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x1A0(%rbp)
	movq 0x198(%rbp),%r14
	movq %r14,0x1A8(%rbp)
	movq %r15,0x198(%rbp)
	addq $0x198,%rbp
	leaq (L_351406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x5190
L_349858:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq 0x228(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x220(%rbp)
	movq 0x218(%rbp),%r14
	movq %r14,0x228(%rbp)
	movq %r15,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_349859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x5218
L_350544:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350545
L_350624:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350625
.p2align 0x4
.long 0x5235
L_350625:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350545:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1A8(%rbp)
	addq $0x10,%r12
	movq 0xD0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4BDB
L_351406:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351407
L_351854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_351855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351855
.p2align 0x4
.long 0x4C4B
L_351855:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_351407:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x190(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x198(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x1A0(%rbp)
	movq %r14,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_351408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x5191
L_349859:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349860
L_350254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_350255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350255
.p2align 0x4
.long 0x51D8
L_350255:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_349860:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x210(%rbp)
	addq $0x10,%r12
	movq 0x208(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x210,%rbp
	leaq (L_349861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x5219
L_350546:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0xC8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1B8(%rbp)
	movb 0x2C(%rbp),%r14b
	movb %r14b,0x1A8(%rbp)
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0x4BDC
L_351408:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x1A8(%rbp)
	movq $0x3,0x1B0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_351409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x5192
L_349861:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0xF8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x1D0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x220(%rbp)
	movb 0xA9(%rbp),%r14b
	movb %r14b,0x210(%rbp)
	movq %r15,0x218(%rbp)
	addq $0x210,%rbp
	leaq (L_349862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0x521A
L_350547:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movb 0x2D(%rbp),%r14b
	movb %r14b,0x1A8(%rbp)
	movb 0x2C(%rbp),%r14b
	movb %r14b,0x1A9(%rbp)
	movq $0x1,0x1B0(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x1B8(%rbp)
	movq %r15,0x1C0(%rbp)
	movq $0x1,0x1C8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0x4BDD
L_351409:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x3,0x1A0(%rbp)
	movq %r15,0x1A8(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x5193
L_349862:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x68(%rbp)
	movb 0xB4(%rbp),%r14b
	movb %r14b,0x210(%rbp)
	movb 0xA9(%rbp),%r14b
	movb %r14b,0x211(%rbp)
	movq $0x1,0x218(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x220(%rbp)
	movq %r15,0x228(%rbp)
	movq $0x1,0x230(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x238(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x240(%rbp)
	addq $0x210,%rbp
	leaq (memloc_190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0x521B
L_350548:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x2C(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x2D(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x4BDE
L_351410:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x190(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_351411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x5194
memloc_190:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349863
L_350252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x210,%rbp
	leaq (L_350253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350253
.p2align 0x4
.long 0x51DA
L_350253:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
L_349863:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r15
	movq %r15,0x210(%rbp)
	addq $0x210,%rbp
	leaq (memloc_191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x521C
L_350549:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xD0(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0xD8(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0xE0(%rbp)
	movq %r14,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4BDF
L_351411:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movl 0x1A8(%rbp),%r15d
	movl %r15d,0x190(%rbp)
	movl %r15d,0x1A8(%rbp)
	movq $0x3,0x1B0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_351412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x5195
memloc_191:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349864
L_350250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x210,%rbp
	leaq (L_350251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350251
.p2align 0x4
.long 0x51D9
L_350251:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
L_349864:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x210(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xF8(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0xA9(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0xB4(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1D0(%rbp)
	addq $0x210,%rbp
	leaq (L_349865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x521D
L_350550:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movl 0x1A8(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movl %r15d,0x1A8(%rbp)
	movq $0x3,0x1B0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4BE0
L_351412:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x198(%rbp),%r14
	movq %r14,0x1A8(%rbp)
	movq %r15,0x198(%rbp)
	addq $0x198,%rbp
	leaq (L_351413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x5196
L_349865:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x208(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x210(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x218(%rbp)
	movq %r14,0x228(%rbp)
	addq $0x228,%rbp
	leaq (L_349866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x521E
L_350551:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x1A8(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x1B0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4BE1
L_351413:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351414
L_351852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_351853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351853
.p2align 0x4
.long 0x4C4A
L_351853:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_351414:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_351415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessTransfer_1
.p2align 0x4
.long 0x5197
L_349866:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movl 0x228(%rbp),%r15d
	movl %r15d,0xF0(%rbp)
	movl %r15d,0x228(%rbp)
	movq $0x3,0x230(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x238(%rbp)
	addq $0x228,%rbp
	leaq (L_349867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x521F
L_350552:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350553
L_350622:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350623
.p2align 0x4
.long 0x5235
L_350623:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350553:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1A8(%rbp)
	addq $0x10,%r12
	movq 0xD0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4BE2
L_351415:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x200(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x208(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp reduceP_1
.p2align 0x4
.long 0x5198
L_349867:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movq 0x228(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x220(%rbp)
	movq 0x218(%rbp),%r14
	movq %r14,0x228(%rbp)
	movq %r15,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_349868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x521A
L_350554:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0xB0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1B8(%rbp)
	movb 0x2C(%rbp),%r14b
	movb %r14b,0x1A8(%rbp)
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0x4BE3
L_351416:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x1A8(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl 0x1AC(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x1B8(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x1C0(%rbp),%r13
	movq %r13,0x50(%rbp)
	movq 0x78(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x150(%rbp)
	movq %r15,0x1A0(%rbp)
	movq %r13,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x5199
L_349868:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349869
L_350248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_350249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350249
.p2align 0x4
.long 0x51D8
L_350249:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_349869:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x210(%rbp)
	addq $0x10,%r12
	movq 0x208(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x210,%rbp
	leaq (L_349870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x5220
L_350555:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movb 0x2D(%rbp),%r14b
	movb %r14b,0x1A8(%rbp)
	movb 0x2C(%rbp),%r14b
	movb %r14b,0x1A9(%rbp)
	movq $0x1,0x1B0(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x1B8(%rbp)
	movq %r15,0x1C0(%rbp)
	movq $0x1,0x1C8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1A8,%rbp
	leaq (memloc_201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0x4BE4
L_351417:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	testl %r15d,%r15d
	jnz L_522782
L_351418:
	movq (globalObjptr+0x1908)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522782:
L_351422:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq %r14,0x1A0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x519A
L_349870:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x1D0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xF0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x220(%rbp)
	movb 0xA9(%rbp),%r14b
	movb %r14b,0x210(%rbp)
	movq %r15,0x218(%rbp)
	addq $0x210,%rbp
	leaq (L_349871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0x5221
memloc_201:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350556
L_350620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350621
.p2align 0x4
.long 0x5234
L_350621:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350556:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xB0(%rbp)
	movslq 0x28(%rbp),%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0xC8(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0xD0(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0xD8(%rbp)
	movq %r14,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1
bug_679:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351419
L_351420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_351421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351421
.p2align 0x4
.long 0x451
L_351421:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_351419:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4BE5
L_351423:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x519B
L_349871:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x78(%rbp)
	movb 0xB4(%rbp),%r14b
	movb %r14b,0x210(%rbp)
	movb 0xA9(%rbp),%r14b
	movb %r14b,0x211(%rbp)
	movq $0x1,0x218(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x220(%rbp)
	movq %r15,0x228(%rbp)
	movq $0x1,0x230(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x238(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x240(%rbp)
	addq $0x210,%rbp
	leaq (L_349872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0x5222
L_350557:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movl 0x1A8(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x1A8(%rbp)
	movq $0x3,0x1B0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4BE6
L_351424:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movl %r15d,0x1A0(%rbp)
	movq $0x3,0x1A8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x519C
L_349872:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x210(%rbp)
	addq $0x210,%rbp
	leaq (L_349873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x5223
L_350558:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x1A8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4BE7
L_351425:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x1A0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x519D
L_349873:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x210(%rbp)
	addq $0x210,%rbp
	leaq (L_349874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x5224
L_350559:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350560
L_350618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350619
.p2align 0x4
.long 0x5233
L_350619:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350560:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1A8(%rbp)
	addq $0x10,%r12
	movq 0xB0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (immediate_107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4BE8
L_351426:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351427
L_351850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_351851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351851
.p2align 0x4
.long 0x4C49
L_351851:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_351427:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	cmpl $0x8,0x34(%rbp)
	jl L_522786
L_351428:
	movq 0x40(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x170(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq %r14,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_522786:
L_351448:
	movq 0x18(%rbp),%r14
	movq 0x170(%r14),%r13
	movq %r13,0x190(%rbp)
	movq 0x168(%r14),%r13
	movq %r13,0x188(%rbp)
	movq 0x160(%r14),%r13
	movq %r13,0x180(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0xAC(%rbp)
	movq 0x158(%r14),%r13
	movq %r13,0x178(%rbp)
	movq 0x150(%r14),%r13
	movq %r13,0x170(%rbp)
	movq 0x148(%r14),%r13
	movq %r13,0x168(%rbp)
	movq 0x140(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x138(%r14),%r13
	movq %r13,0x158(%rbp)
	movq 0x130(%r14),%r13
	movq %r13,0x150(%rbp)
	movq 0x128(%r14),%r13
	movq %r13,0x148(%rbp)
	movq 0x120(%r14),%r13
	movq %r13,0x140(%rbp)
	movq 0x118(%r14),%r15
	movq 0x110(%r14),%r13
	movq %r13,0x130(%rbp)
	movq 0x108(%r14),%r13
	movq %r13,0x128(%rbp)
	movq 0x100(%r14),%r13
	movq %r13,0x120(%rbp)
	movq 0xF8(%r14),%r13
	movq %r13,0x118(%rbp)
	movq 0xF0(%r14),%r13
	movq %r13,0x110(%rbp)
	movq 0xE8(%r14),%r13
	movq %r13,0x108(%rbp)
	movq 0xE0(%r14),%r13
	movq %r13,0x100(%rbp)
	movb 0x5(%r14),%r13b
	movb %r13b,0xA9(%rbp)
	movq 0xD8(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0xD0(%r14),%r13
	movq %r13,0xF0(%rbp)
	movq 0xC8(%r14),%r13
	movq %r13,0xE8(%rbp)
	movq 0xC0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0xB8(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0xB0(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0xA8(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0xA0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0x98(%r14),%r13
	movq %r13,0xB8(%rbp)
	movb 0x4(%r14),%r13b
	movb %r13b,0xA8(%rbp)
	movq 0x90(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x88(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x80(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x78(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x70(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x68(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x60(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x58(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x48(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x40(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x38(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq 0x10(%r14),%r14
	movq %r14,0x18(%rbp)
	movq 0x138(%rbp),%r14
	movq %r14,0x198(%rbp)
	movq %r15,0x138(%rbp)
	movq %r13,%r15
	jmp x_1126
.p2align 0x4
.long 0x519E
L_349874:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movl 0x210(%rbp),%r15d
	movl %r15d,0xB4(%rbp)
	movl %r15d,0x210(%rbp)
	movq $0x3,0x218(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x220(%rbp)
	addq $0x210,%rbp
	leaq (L_349875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x5225
immediate_107:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350561
L_350616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350617
.p2align 0x4
.long 0x5232
L_350617:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350561:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
.long 0x4BE9
L_351429:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	testl %r15d,%r15d
	jnz L_522789
L_351430:
	movq (globalObjptr+0x1948)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_522789:
L_351434:
	movq 0x170(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x1B0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
.long 0x519F
L_349875:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq %r15,0x210(%rbp)
	movq $0xFFFFFFFFFFFFFFFF,0x218(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x220(%rbp)
	addq $0x210,%rbp
	leaq (L_349876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x5226
L_350562:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350564
L_350614:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350615
.p2align 0x4
.long 0x5231
L_350615:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350564:
	movq 0x40(%rbp),%r15
	andq $0x3,%r15
	jz L_522802
L_350565:
	movq $0x1,%r15
L_350566:
	movq $0x21CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x21CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_522801
L_350567:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_350568:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522800
.p2align 0x4,,0x7
L_350569:
	movq 0x88(%rbp),%r13
	cmpq $0x1,%r13
	je L_350576
L_350570:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_350571:
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_522797
L_350572:
	cmpq $0x1,%r14
	je L_522790
L_350573:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_350571
.p2align 0x4
L_522790:
L_350574:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522796
.p2align 0x4,,0x7
L_350576:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_522791
L_350577:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_350568
.p2align 0x4
L_522791:
L_350578:
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
L_350579:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522795
.p2align 0x4,,0x7
L_350580:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_522793
L_350581:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_522792
L_350582:
	movq %r14,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	jmp L_350568
.p2align 0x4
L_522792:
L_350583:
	movq %r14,0x18(%rbp)
	jmp L_350579
.p2align 0x4
L_522793:
L_350584:
	movq 0x90(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x98(%rbp),%r15
	cmpb $0x7,0x0(%r15)
	je L_522794
L_350585:
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb 0xA8(%rbp),%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x70(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x60(%rbp)
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x6,%r11b
	movzbl %r11b,%r10d
	movzbl %r14b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r13,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x21C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1A8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (immediate_108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
L_522794:
L_350594:
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x6,%r14b
	movzbl %r14b,%r13d
	movzbl 0xA8(%rbp),%r14d
	shll $0x8,%r14d
	orl %r14d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x21C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1A8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (immediate_109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
L_522795:
L_350598:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350599
.p2align 0x4
.long 0x522D
L_350599:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	jmp L_350580
.p2align 0x4
L_522796:
L_350600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350601
.p2align 0x4
.long 0x522E
L_350601:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	jmp L_350576
.p2align 0x4
L_522797:
L_350602:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_522798
L_350603:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_350568
.p2align 0x4
L_522798:
L_350604:
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_350579
.p2align 0x4
L_522800:
L_350606:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350607
.p2align 0x4
.long 0x522E
L_350607:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	jmp L_350569
.p2align 0x4
L_522801:
L_350608:
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_350579
.p2align 0x4
L_522802:
L_350609:
	movq 0x40(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
.long 0x1
bug_680:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351431
L_351432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_351433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351433
.p2align 0x4
.long 0x451
L_351433:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_351431:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4BEA
L_351435:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x51A0
L_349876:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349877
L_350246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x210,%rbp
	leaq (L_350247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350247
.p2align 0x4
.long 0x51D7
L_350247:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
L_349877:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x210(%rbp)
	addq $0x10,%r12
	movq 0x1E0(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x210,%rbp
	leaq (L_349878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x5227
immediate_108:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350586
L_350592:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350593
.p2align 0x4
.long 0x522A
L_350593:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350586:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2211,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb 0xA8(%rbp),%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x68(%rbp),%r11
	movq %r11,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x21CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2237,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x30,%r12
	movq (globalObjptr+0x5540)(%rip),%r14
	movq %r14,0x0(%r11)
	movq %r14,0x10(%r11)
	movq $0x1,0x18(%r11)
	movq $0x1,0x20(%r11)
	movq $0x225B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq $0x2211,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x20,%r12
	movzbl %r13b,%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r11)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r11)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq 0xC0(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x1,0x8(%r11)
	movq $0x227B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r10,0x8(%r13)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x229F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
L_350587:
	movq %r15,0x1E0(%rbp)
	movq $0x21D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2217,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1A8(%rbp)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movw 0x88(%rbp),%r15w
	movw %r15w,0x1D0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_350588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2226
.p2align 0x4
.long 0x522B
immediate_109:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350595
L_350596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350597
.p2align 0x4
.long 0x522C
L_350597:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350595:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2211,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movzbl 0xA8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x21CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2237,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movq (globalObjptr+0x5540)(%rip),%r14
	movq %r14,0x0(%r13)
	movq %r14,0x10(%r13)
	movq $0x1,0x18(%r13)
	movq $0x1,0x20(%r13)
	movq $0x225B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x229F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_350587
.p2align 0x4
.long 0x522F
L_350610:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350611
L_350612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350613
.p2align 0x4
.long 0x5230
L_350613:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350611:
	movq 0x18(%rbp),%r15
	jmp L_350566
.p2align 0x4
.long 0x4BEB
L_351436:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x51A1
L_349878:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	movq 0x210(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movb 0x1C8(%rbp),%r14b
	movb %r14b,0x208(%rbp)
	movq %r15,0x210(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x208,%rbp
	leaq (L_349879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0x5228
L_350588:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350589
L_350590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_350591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350591
.p2align 0x4
.long 0x5229
L_350591:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_350589:
	movq 0x18(%rbp),%r14
	movq 0x48(%rbp),%r15
	jmp L_350485
.p2align 0x4
.long 0x4BEC
L_351437:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x1A0(%rbp)
	movq $0x3,0x1A8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x51A2
L_349879:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movq 0x208(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq $0x1,0x1D0(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x1D8(%rbp)
	movq %r15,0x1E0(%rbp)
	movq $0x1,0x1E8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movb 0x1C8(%rbp),%r15b
	movb 0x1C9(%rbp),%r14b
	movb %r14b,0x1C8(%rbp)
	movb %r15b,0x1C9(%rbp)
	addq $0x1C8,%rbp
	leaq (memloc_192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0x4BED
L_351438:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x1A0(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x51A3
memloc_192:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349880
L_350244:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350245
.p2align 0x4
.long 0x51D6
L_350245:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_349880:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xF0(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x1B0(%rbp)
	movslq 0x84(%rbp),%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x1C0(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x1C8(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x1D0(%rbp)
	movq %r14,0x1E0(%rbp)
	addq $0x1E0,%rbp
	leaq (L_349881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4BEE
L_351439:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351440
L_351847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_351848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351848
.p2align 0x4
.long 0x4C48
L_351848:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_351440:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movslq 0x34(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x68(%rbp)
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x51A4
L_349881:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movl 0x1E0(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movl %r15d,0x1E0(%rbp)
	movq $0x3,0x1E8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	addq $0x1E0,%rbp
	leaq (L_349882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4BEF
L_351441:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	movl %r15d,0x1A0(%rbp)
	movq $0x3,0x1A8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x51A5
L_349882:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x1C8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C8,%rbp
	leaq (L_349883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4BEF
L_351442:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x1A0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x51A6
L_349883:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349884
L_350242:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350243
.p2align 0x4
.long 0x51D3
L_350243:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_349884:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1C8(%rbp)
	addq $0x10,%r12
	movq 0x1B0(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C8,%rbp
	leaq (immediate_101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4BEF
L_351443:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351444
L_351845:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_351846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351846
.p2align 0x4
.long 0x4C47
L_351846:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_351444:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x1A8(%rbp)
	movl $0x0,0x1A0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1479
.p2align 0x4
.long 0x51A7
immediate_101:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349885
L_350240:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350241
.p2align 0x4
.long 0x51D5
L_350241:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_349885:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xF8(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C8,%rbp
	leaq (L_349886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
.long 0x4BF0
L_351445:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351446
L_351843:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_351844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351844
.p2align 0x4
.long 0x4C46
L_351844:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_351446:
	movl 0x34(%rbp),%r14d
	testl %r14d,%r14d
	jz L_351448
L_351449:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_522821
L_351450:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq $0x1,%r15
.p2align 0x4,,0x7
L_351451:
	cmpq $0x1,%r15
	jne L_522820
L_351841:
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_351459:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522819
.p2align 0x4,,0x7
L_351460:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_351466
L_351461:
	movq %r15,0x50(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x40(%rbp)
L_351462:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522817
.p2align 0x4,,0x7
L_351463:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_522815
L_351464:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_351462
.p2align 0x4
L_522815:
L_351466:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_522816
L_351467:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r13,0x38(%rbp)
	jmp L_351451
.p2align 0x4
L_522816:
L_351468:
	movq %r15,0x18(%rbp)
L_351469:
	movq 0x98(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_522817:
L_351822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_351823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351823
.p2align 0x4
.long 0x4C43
L_351823:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	jmp L_351463
.p2align 0x4
L_522819:
L_351825:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_351826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351826
.p2align 0x4
.long 0x4C44
L_351826:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	jmp L_351460
.p2align 0x4
L_522820:
L_351452:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x88(%rbp)
	movq $0x1,0x68(%rbp)
L_351453:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movl $0x0,0x1A0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1479
.p2align 0x4
L_522821:
L_351842:
	movq $0x1,0x18(%rbp)
	jmp L_351469
.p2align 0x4
.long 0x51A8
L_349886:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C8,%rbp
	leaq (L_349887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_1
.p2align 0x4
.long 0x4BF2
L_351470:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351471
L_351820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_351821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351821
.p2align 0x4
.long 0x4C42
L_351821:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_351471:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x34(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0x11100)(%rip),%r15
	movq %r15,0x18(%r13)
	movq (globalObjptr+0x5C28)(%rip),%r15
	movl 0x0(%r15),%r14d
	movq $0x8C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x1,0x8(%r13)
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_349610
L_351472:
	movl %r14d,0x0(%r15)
	movq $0x40C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq 0x148(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0xB8(%rbp),%r11
	movq %r11,0x18(%r15)
	movq $0x2953,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x18F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x1B0(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x180(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq %r14,0x1C8(%rbp)
	movq %r13,0x1D0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp filler_1
.p2align 0x4
.long 0x4BF1
L_351454:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351455
L_351839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_351840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351840
.p2align 0x4
.long 0x4C45
L_351840:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_351455:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_522827
L_351456:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_522826
L_351457:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x88(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_351453
.p2align 0x4
L_522826:
L_351458:
	movq %r15,0x40(%rbp)
	jmp L_351459
.p2align 0x4
L_522827:
L_351827:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_351833
L_351828:
	movq %r15,0x50(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
L_351829:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522830
.p2align 0x4,,0x7
L_351830:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_522828
L_351831:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_351829
.p2align 0x4
L_522828:
L_351833:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_522829
L_351834:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r13,0x38(%rbp)
	jmp L_351451
.p2align 0x4
L_522829:
L_351835:
	movq %r15,0x18(%rbp)
	jmp L_351469
.p2align 0x4
L_522830:
L_351836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_351837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351837
.p2align 0x4
.long 0x4C43
L_351837:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	jmp L_351830
.p2align 0x4
.long 0x51A9
L_349887:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349888
L_350238:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350239
.p2align 0x4
.long 0x51D4
L_350239:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_349888:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_522859
L_349889:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x1B0(%rbp)
.p2align 0x4,,0x7
L_349890:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522858
.p2align 0x4,,0x7
L_349891:
	movq 0x100(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x1B0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_522833
L_349892:
	movq %r14,0x1B0(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_349890
.p2align 0x4
L_522833:
L_349893:
	movq %r15,0x100(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x1B0(%rbp)
.p2align 0x4,,0x7
L_349894:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522857
.p2align 0x4,,0x7
L_349895:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_522834
L_349896:
	movq %r15,0x1B0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_349894
.p2align 0x4
L_522834:
L_349897:
	movq %r15,0x30(%rbp)
L_349898:
	movq 0xC8(%rbp),%r15
	cmpq $0x1,%r15
	je L_349908
L_349899:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xC8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x1B0(%rbp)
.p2align 0x4,,0x7
L_349900:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522855
.p2align 0x4,,0x7
L_349901:
	movq 0x100(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC8(%rbp),%r14
	cmpq $0x1,%r14
	je L_522835
L_349902:
	movq %r15,0x1B0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xC8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_349900
.p2align 0x4
L_522835:
L_349903:
	movq 0x1B0(%rbp),%r15
.p2align 0x4,,0x7
L_349904:
	cmpq $0x1,%r15
	je L_522836
L_349905:
	movq 0x8(%r15),%r15
	jmp L_349904
.p2align 0x4
L_522836:
L_349906:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349908
L_350228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350229
.p2align 0x4
.long 0x51D2
L_350229:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_349908:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_522853
L_349909:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
.p2align 0x4,,0x7
L_349910:
L_349911:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_349912
L_350195:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E8,%r14
	jne L_522849
L_350196:
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_350203
L_350197:
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq $0x1,0x1C0(%rbp)
L_350198:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522847
.p2align 0x4,,0x7
L_350199:
	movq 0xC8(%rbp),%r15
	movq 0x1B0(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_522841
L_350200:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x1C0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x100(%rbp),%r14
	cmpq $0x1,%r14
	je L_522837
L_350201:
	movq %r15,0x1C0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x100(%rbp)
	movq %r15,0x1B0(%rbp)
	jmp L_350198
.p2align 0x4
L_522837:
L_350203:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_522838
L_350204:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_349910
.p2align 0x4
L_522838:
L_350205:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350206
L_350207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350208
.p2align 0x4
.long 0x51CF
L_350208:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_350206:
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
L_349916:
	movq 0x98(%rbp),%r15
	cmpb $0x7,0x0(%r15)
	je L_522839
L_349917:
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb 0xA8(%rbp),%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x70(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x60(%rbp)
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x6,%r11b
	movzbl %r11b,%r10d
	movzbl %r14b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r13,0x8(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x21C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C8,%rbp
	leaq (immediate_102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
L_522839:
L_350189:
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x6,%r14b
	movzbl %r14b,%r13d
	movzbl 0xA8(%rbp),%r14d
	shll $0x8,%r14d
	orl %r14d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x21C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C8,%rbp
	leaq (immediate_104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
L_522841:
L_350209:
	movq 0x1C0(%rbp),%r15
	cmpq $0x1,%r15
	je L_522846
L_350210:
	movq 0x8(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xC8(%rbp)
L_350211:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522845
.p2align 0x4,,0x7
L_350212:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_522842
L_350213:
	movq %r15,0x100(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0xC8(%rbp)
	jmp L_350211
.p2align 0x4
L_522842:
L_350214:
	movq %r15,0x78(%rbp)
L_350215:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_522843
L_350216:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_349910
.p2align 0x4
L_522843:
L_350217:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_350218
L_350219:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350220
.p2align 0x4
.long 0x51CF
L_350220:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_350218:
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_349916
.p2align 0x4
L_522845:
L_350221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350222
.p2align 0x4
.long 0x51D0
L_350222:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	jmp L_350212
.p2align 0x4
L_522846:
L_350223:
	movq 0x100(%rbp),%r13
	movq %r13,0x78(%rbp)
	jmp L_350215
.p2align 0x4
L_522847:
L_350224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_350225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350225
.p2align 0x4
.long 0x51D1
L_350225:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_350199
.p2align 0x4
L_522849:
L_349912:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_522850
L_349913:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_349910
.p2align 0x4
L_522850:
L_349914:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349915
L_350193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350194
.p2align 0x4
.long 0x51CF
L_350194:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_349915:
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_349916
.p2align 0x4
L_522853:
L_350227:
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_349916
.p2align 0x4
L_522855:
L_350230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350231
.p2align 0x4
.long 0x51D3
L_350231:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	jmp L_349901
.p2align 0x4
L_522857:
L_350233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350234
.p2align 0x4
.long 0x51D3
L_350234:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	jmp L_349895
.p2align 0x4
L_522858:
L_350235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350236
.p2align 0x4
.long 0x51D3
L_350236:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	jmp L_349891
.p2align 0x4
L_522859:
L_350237:
	movq $0x1,0x30(%rbp)
	jmp L_349898
.p2align 0x4
.long 0x4BF3
L_351473:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351474
L_351818:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_351819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351819
.p2align 0x4
.long 0x4C41
L_351819:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_351474:
	movq (globalObjptr+0x5C28)(%rip),%r15
	movl 0x0(%r15),%r14d
	movq $0x8C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x1,0x8(%r13)
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_349610
L_351475:
	movl %r14d,0x0(%r15)
	movq 0x148(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq %r13,0x1A8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp pushCompensationBlock_1
.p2align 0x4
.long 0x51AA
immediate_102:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x2D0,%r15
	jnb L_349918
L_350187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x2D0,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350188
.p2align 0x4
.long 0x51CC
L_350188:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_349918:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2211,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb 0xA8(%rbp),%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x21CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2237,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x30,%r12
	movq (globalObjptr+0x5540)(%rip),%r14
	movq %r14,0x0(%r11)
	movq %r14,0x10(%r11)
	movq $0x1,0x18(%r11)
	movq $0x1,0x20(%r11)
	movq $0x225B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq $0x2211,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x20,%r12
	movzbl %r15b,%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r11)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq 0xC0(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x1,0x8(%r11)
	movq $0x227B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x229F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
L_349919:
	movq $0x2237,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x5540)(%rip),%r13
	movq %r13,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq $0x1,0x20(%r15)
	movq $0x225B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,%r14
	je L_522883
L_349920:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_349921:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522882
.p2align 0x4,,0x7
L_349922:
	movq 0x60(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x110(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,%r10
	je L_350172
L_349923:
	movq 0x8(%r10),%r13
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_349924:
	movl 0x0(%r15),%r11d
	movl %r11d,0x70(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x74(%rbp)
	cmpl %r10d,%r11d
	jnl L_522877
L_350177:
	cmpq $0x1,%r13
	je L_522863
L_350178:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_349924
.p2align 0x4
L_522863:
L_350179:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522876
.p2align 0x4,,0x7
L_350172:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_522864
L_350173:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_349921
.p2align 0x4
L_522864:
L_349930:
	movq $0x2237,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movq (globalObjptr+0x5540)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r15,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq $0x225B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x2237,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x30,%r12
	movq 0x118(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq %r15,0x10(%r13)
	movq $0x1,0x18(%r13)
	movq $0x1,0x20(%r13)
	movq $0x225B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x5BF0)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x229F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x259F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x30(%rbp)
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_349931:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522875
.p2align 0x4,,0x7
L_349932:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_522874
L_349933:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x30(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_349934:
	cmpq $0x1,%r14
	jne L_522873
L_349937:
	cmpq $0x1,%r15
	je L_522865
L_349938:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_349934
.p2align 0x4
L_522865:
L_349939:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_349940
L_350166:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350167
.p2align 0x4
.long 0x51CA
L_350167:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_349940:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_522871
L_349941:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_349942:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522870
.p2align 0x4,,0x7
L_349943:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_522866
L_349944:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_349942
.p2align 0x4
L_522866:
L_349946:
	cmpq $0x1,%r15
	je L_522868
L_349947:
	movq $0x22A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x188(%rbp),%r15
	cmpq $0x1,%r15
	je L_522867
L_349948:
	movq %r14,0x60(%rbp)
	movq %r15,0x30(%rbp)
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x58(%rbp)
	jmp L_349949
.p2align 0x4
L_522867:
L_350156:
	movl 0xB0(%rbp),%ecx
	movq 0xE8(%rbp),%r13
	xchgq %r13,%r15
	jmp L_350157
.p2align 0x4
L_522868:
L_350160:
	movq 0x188(%rbp),%r15
	cmpq $0x1,%r15
	je L_522869
L_350161:
	movq %r15,0x30(%rbp)
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
	jmp L_349949
.p2align 0x4
L_522869:
L_350162:
	movl 0xB0(%rbp),%ecx
	movq 0xE8(%rbp),%r13
	movq $0x1,%r14
	xchgq %r13,%r15
	jmp L_350157
.p2align 0x4
L_522870:
L_350163:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350164
.p2align 0x4
.long 0x51C9
L_350164:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	jmp L_349943
.p2align 0x4
L_522871:
L_350165:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_349946
.p2align 0x4
L_522873:
L_349935:
	movq %r14,0x50(%rbp)
L_349936:
	movq 0x30(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_349931
.p2align 0x4
L_522874:
L_350168:
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_349942
.p2align 0x4
L_522875:
L_350169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350170
.p2align 0x4
.long 0x51C9
L_350170:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	jmp L_349932
.p2align 0x4
L_522876:
L_350181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350182
.p2align 0x4
.long 0x51CB
L_350182:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	jmp L_350172
.p2align 0x4
L_522877:
L_349925:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522880
.p2align 0x4,,0x7
L_349926:
	movl 0x70(%rbp),%r15d
	cmpl %r15d,0x74(%rbp)
	jl L_350172
L_349927:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_522878
L_349928:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_349921
.p2align 0x4
L_522878:
L_349929:
	movq 0x68(%rbp),%r14
	xchgq %r14,%r15
	jmp L_349930
.p2align 0x4
L_522880:
L_350175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350176
.p2align 0x4
.long 0x51CB
L_350176:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	jmp L_349926
.p2align 0x4
L_522882:
L_350184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350185
.p2align 0x4
.long 0x51CB
L_350185:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	jmp L_349922
.p2align 0x4
L_522883:
L_350186:
	movq $0x1,%r15
	jmp L_349930
.p2align 0x4
.long 0x51CD
immediate_104:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x258,%r15
	jnb L_350190
L_350191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x258,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_350192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_350192
.p2align 0x4
.long 0x51CE
L_350192:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_350190:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2211,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movzbl 0xA8(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xF0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x21CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2237,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movq (globalObjptr+0x5540)(%rip),%r14
	movq %r14,0x0(%r13)
	movq %r14,0x10(%r13)
	movq $0x1,0x18(%r13)
	movq $0x1,0x20(%r13)
	movq $0x225B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x229F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	jmp L_349919
.p2align 0x4
.long 0x4BF4
L_351476:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movl 0x1B8(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351477
L_351816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_351817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351817
.p2align 0x4
.long 0x4C40
L_351817:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_351477:
	movq $0x17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x28,%r12
	movl 0x34(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x148(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
.long 0x4BF5
L_351478:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_522887
L_351479:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x88(%rbp)
L_351480:
	movq 0x0(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
L_522887:
L_351815:
	movq %r14,0x18(%rbp)
L_351497:
	movq 0xC8(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4BF6
L_351481:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_351494
L_351482:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r13,0xA0(%rbp)
	movq %r15,0xB0(%rbp)
.p2align 0x4,,0x7
L_351483:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522895
.p2align 0x4,,0x7
L_351484:
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_351491
L_351485:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_351486:
	movq 0xA0(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_522892
L_351487:
	cmpq $0x1,%r14
	je L_522888
L_351488:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_351486
.p2align 0x4
L_522888:
L_351489:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522891
.p2align 0x4,,0x7
L_351491:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_522889
L_351492:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_351483
.p2align 0x4
L_522889:
L_351494:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_522890
L_351495:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_351480
.p2align 0x4
L_522890:
L_351496:
	movq %r15,0x18(%rbp)
	jmp L_351497
.p2align 0x4
L_522891:
L_351806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_351807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351807
.p2align 0x4
.long 0x4C3F
L_351807:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	jmp L_351491
.p2align 0x4
L_522892:
L_351808:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_522893
L_351809:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_351483
.p2align 0x4
L_522893:
L_351810:
	movq 0xB0(%rbp),%r14
	xchgq %r14,%r15
	jmp L_351494
.p2align 0x4
L_522895:
L_351812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_351813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351813
.p2align 0x4
.long 0x4C3F
L_351813:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	jmp L_351484
.p2align 0x4
.long 0x4BF7
L_351498:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351499
L_351804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_351805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351805
.p2align 0x4
.long 0x4C3E
L_351805:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_351499:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalObjptr+0x11108)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x34(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x21C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x1A0(%rbp)
	addq $0x10,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4BF7
L_351500:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0xE0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movb $0x1,0x1A0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq %r14,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0x4BF8
L_351501:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movb $0x5,0x1A0(%rbp)
	movb $0x1,0x1A1(%rbp)
	movq $0x1,0x1A8(%rbp)
	movq $0x1,0x1B0(%rbp)
	movq %r15,0x1B8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0x4BF9
L_351502:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4BFA
L_351503:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351504
L_351802:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_351803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351803
.p2align 0x4
.long 0x4C3D
L_351803:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_351504:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalObjptr+0x11110)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x34(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x21C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x1A0(%rbp)
	addq $0x10,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4BFA
L_351505:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movb $0x1,0x1A0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0x4BFB
L_351506:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movb $0x5,0x1A0(%rbp)
	movb $0x1,0x1A1(%rbp)
	movq $0x1,0x1A8(%rbp)
	movq $0x1,0x1B0(%rbp)
	movq %r15,0x1B8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0x4BFC
L_351507:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351508
L_351800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_351801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351801
.p2align 0x4
.long 0x4C3C
L_351801:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_351508:
	movq $0x21C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1A0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4BFD
L_351509:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movb $0x5,0x1A0(%rbp)
	movb $0x1,0x1A1(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x1A8(%rbp)
	movq $0x1,0x1B0(%rbp)
	movq $0x1,0x1B8(%rbp)
	movq %r15,0x1C0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_351510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0x4BFE
L_351510:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351511
L_351798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_351799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351799
.p2align 0x4
.long 0x4C3B
L_351799:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_351511:
	movq 0x140(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_522914
	cmpq $0x2,%r14
	je L_522913
L_351512:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E9,%r14
	je L_522912
	cmpq $0x10EA,%r14
	je L_522911
	cmpq $0x10EB,%r14
	je L_522910
L_351513:
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%dl
L_351514:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA0(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	cmpb $0x1,%dl
	je L_351781
	cmpb $0x2,%dl
	je L_522908
	cmpb $0x3,%dl
	je L_522907
	cmpb $0x6,%dl
	je L_522906
	cmpb $0x7,%dl
	je L_522905
L_351516:
	movl $0x4,%ecx
L_351517:
	cmpl $0x4,%ecx
	jnl L_522903
L_351777:
	movq $0x2209,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x5,%r14b
	movzbl %r14b,%r13d
	movb $0x0,%r14b
	movzbl %r14b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movzbl %dl,%r14d
	shll $0x10,%r14d
	orl %r14d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,0x190(%rbp)
	je L_522902
L_351778:
L_351520:
	movq %r15,0xC8(%rbp)
	movq $0x2237,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq (globalObjptr+0x5540)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r14,0x10(%r15)
	movq 0x190(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x1,0x20(%r15)
	movq $0x225B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	addq $0x10,%r12
L_351521:
	cmpl $0x0,0x30(%rbp)
	jng L_522901
L_351655:
	movq (globalObjptr+0x5C28)(%rip),%r15
	movl 0x0(%r15),%r14d
	movq $0x8C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xD0(%rbp)
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x1,0x8(%r13)
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_349610
L_351656:
	movl %r14d,0x0(%r15)
	movq 0x148(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq %r13,0x188(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_351657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp pushCompensationBlock_1
.p2align 0x4
L_522901:
L_351523:
	movq $0x1,0x20(%rbp)
L_351524:
	movq 0x158(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_351525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_522902:
L_351779:
	movq %r15,0xC8(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_351521
.p2align 0x4
L_522903:
L_351518:
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x5,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,0x190(%rbp)
	je L_522904
L_351519:
	jmp L_351520
.p2align 0x4
L_522904:
L_351776:
	movq %r15,0xC8(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_351521
.p2align 0x4
L_522905:
L_351787:
	movl $0x1,%ecx
	jmp L_351517
.p2align 0x4
L_522906:
L_351781:
	movl $0x2,%ecx
	jmp L_351517
.p2align 0x4
L_522907:
L_351783:
	movl $0x8,%ecx
	jmp L_351517
.p2align 0x4
L_522908:
L_351782:
	movl $0xA,%ecx
	jmp L_351517
.p2align 0x4
L_522910:
L_351790:
	movb $0x5,%dl
	jmp L_351514
.p2align 0x4
L_522911:
L_351789:
	movb $0x5,%dl
	jmp L_351514
.p2align 0x4
L_522912:
L_351788:
	movb $0x5,%dl
	jmp L_351514
.p2align 0x4
L_522913:
L_351797:
	movb $0x2,%dl
	jmp L_351514
.p2align 0x4
L_522914:
L_351791:
	shrq $0x2,%r15
	movw %r15w,%r14w
	shrw $0x8,%r14w
	movb %r14b,%dl
	cmpb $0x2,%dl
	je L_522916
	cmpb $0x3,%dl
	je L_522915
L_351793:
	movb $0x7,%dl
	jmp L_351514
.p2align 0x4
L_522915:
L_351796:
	movb $0x5,%dl
	jmp L_351514
.p2align 0x4
L_522916:
L_351795:
	movb $0x6,%dl
	jmp L_351514
.p2align 0x4
.long 0x4C16
L_351657:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movl 0x198(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351658
L_351774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_351775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351775
.p2align 0x4
.long 0x4C3A
L_351775:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_351658:
	movq $0x17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE8(%rbp)
	addq $0x28,%r12
	movl 0x34(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x148(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_351659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
.long 0x4BFF
L_351525:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movl 0x170(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351526
L_351653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_351654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351654
.p2align 0x4
.long 0x4C15
L_351654:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_351526:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_351528
L_351646:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351647
L_351651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_351652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351652
.p2align 0x4
.long 0x4C15
L_351652:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_351647:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x160(%rbp),%rsi
	movq 0x78(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_351648:
	testl %eax,%eax
	jz L_522919
L_351650:
	movq $0x1,0x28(%rbp)
L_351530:
	movq $0x2237,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x5540)(%rip),%r14
	movq %r14,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq $0x1,0x20(%r15)
	movq $0x225B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1269,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movzwl (globalWord16+0x3A)(%rip),%r14d
	movl %r14d,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2245,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x223B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x225B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x21C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x148(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (immediate_112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
L_522919:
L_351528:
	movq $0x21C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x148(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (immediate_111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4C17
L_351659:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351660
L_351772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_351773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351773
.p2align 0x4
.long 0x4C39
L_351773:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_351660:
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x5,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xF8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_351661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C01
immediate_112:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351531
L_351642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_351643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351643
.p2align 0x4
.long 0x4C13
L_351643:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_351531:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x221D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x5,%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x21D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2215,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movb $0x5,%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_351532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x4C00
immediate_111:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351529
L_351644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_351645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351645
.p2align 0x4
.long 0x4C14
L_351645:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_351529:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2229,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x4,%r15b
	movzbl %r15b,%r13d
	movb $0x5,%r15b
	movzbl %r15b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	jmp L_351530
.p2align 0x4
.long 0x4C18
L_351661:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movl 0x180(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	movl %r15d,0x180(%rbp)
	movq $0x3,0x188(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_351662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C02
L_351532:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351533
L_351640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_351641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351641
.p2align 0x4
.long 0x4C11
L_351641:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_351533:
	movq 0x70(%rbp),%r13
	cmpq $0x1,%r13
	je L_351540
L_351534:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_351535:
	movq 0x60(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_522928
L_351536:
	cmpq $0x1,%r14
	je L_522926
L_351537:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_351535
.p2align 0x4
L_522926:
L_351538:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351540
L_351636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_351637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351637
.p2align 0x4
.long 0x4C11
L_351637:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_351540:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
L_351541:
	movq 0x120(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_351542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
L_522928:
L_351638:
	movq 0x70(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp L_351541
.p2align 0x4
.long 0x4C19
L_351662:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq $0x3,0x180(%rbp)
	movq %r15,0x188(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_351663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4C03
L_351542:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351543
L_351634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_351635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351635
.p2align 0x4
.long 0x4C11
L_351635:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_351543:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_351550
L_351544:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_351545:
	movq 0x70(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_522933
L_351546:
	cmpq $0x1,%r14
	je L_522931
L_351547:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_351545
.p2align 0x4
L_522931:
L_351548:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351550
L_351627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_351628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351628
.p2align 0x4
.long 0x4C11
L_351628:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_351550:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
L_351551:
	movq $0x2231,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x225B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2217,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_351552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
L_522933:
L_351629:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351630
L_351631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_351632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351632
.p2align 0x4
.long 0x4C12
L_351632:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_351630:
	movq 0x60(%rbp),%r15
	jmp L_351551
.p2align 0x4
.long 0x4C1A
L_351663:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_351664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C04
L_351552:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351553
L_351625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_351626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351626
.p2align 0x4
.long 0x4C10
L_351626:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_351553:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_351560
L_351554:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_351555:
	movq 0x68(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_351561
L_351556:
	cmpq $0x1,%r14
	je L_522937
L_351557:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_351555
.p2align 0x4
L_522937:
L_351558:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351560
L_351621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_351622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351622
.p2align 0x4
.long 0x4C10
L_351622:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_351560:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
L_351561:
	movq 0x120(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_351562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x4C1B
L_351664:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movl 0x180(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	movl %r15d,0x180(%rbp)
	movq $0x3,0x188(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_351665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C05
L_351562:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351563
L_351619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_351620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351620
.p2align 0x4
.long 0x4C0E
L_351620:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_351563:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_351570
L_351564:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_351565:
	movq 0x68(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_522944
L_351566:
	cmpq $0x1,%r14
	je L_522942
L_351567:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_351565
.p2align 0x4
L_522942:
L_351568:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351570
L_351612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_351613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351613
.p2align 0x4
.long 0x4C0E
L_351613:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_351570:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
L_351571:
	movq $0x2231,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x225B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x21CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2237,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x18(%r13)
	addq $0x30,%r12
	movq (globalObjptr+0x5540)(%rip),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq %r14,0x10(%r13)
	movq $0x1,0x20(%r13)
	movq $0x225B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x229F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x130(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x98(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0xA0(%rbp)
	movq %r14,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_351572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_522944:
L_351614:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351615
L_351616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_351617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351617
.p2align 0x4
.long 0x4C0F
L_351617:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_351615:
	movq 0x18(%rbp),%r15
	jmp L_351571
.p2align 0x4
.long 0x4C1C
L_351665:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0x180(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_351666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C06
L_351572:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movl 0x148(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x148(%rbp)
	movq $0x3,0x150(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_351573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C1D
L_351666:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351667
L_351770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_351771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351771
.p2align 0x4
.long 0x4C38
L_351771:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_351667:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movslq 0x30(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0xE0(%rbp)
	movq %r14,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_351668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4C07
L_351573:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x148(%rbp)
	movq $0x9,0x150(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_351574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C1E
L_351668:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movl 0x180(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x180(%rbp)
	movq $0x3,0x188(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_351669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C08
L_351574:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351575
L_351610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_351611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351611
.p2align 0x4
.long 0x4C0D
L_351611:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_351575:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x148(%rbp)
	addq $0x10,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_351576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4C1F
L_351669:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,0x178(%rbp)
	movq 0x170(%rbp),%r14
	movq %r14,0x180(%rbp)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_351670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C09
L_351576:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351577
L_351608:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_351609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351609
.p2align 0x4
.long 0x4C0C
L_351609:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_351577:
	movq $0x2251,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq $0x2259,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2257,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x224F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2259,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x5C38)(%rip),%r11
	movq %r11,0x8(%r13)
	movq $0x227B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x5770)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x229F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xC8(%rbp),%r15
	cmpq $0x1,%r15
	je L_522959
L_351578:
	movq %r14,0x18(%rbp)
L_351579:
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_351580:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522958
.p2align 0x4,,0x7
L_351581:
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x18(%rbp),%r11
	cmpq $0x1,%r11
	je L_522957
L_351582:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_351583:
	cmpq $0x1,%r15
	je L_522950
L_351584:
	movq %r13,0x18(%rbp)
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
L_351585:
	jmp L_351580
.p2align 0x4
L_522950:
L_351586:
	movq %r13,0x18(%rbp)
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_351587:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522956
.p2align 0x4,,0x7
L_351588:
	movq 0x18(%rbp),%r11
	cmpq $0x1,%r11
	je L_522951
L_351589:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x20(%rbp),%r14
	jmp L_351583
.p2align 0x4
L_522951:
L_351590:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_522955
L_351591:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_351592:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522954
.p2align 0x4,,0x7
L_351593:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_522952
L_351594:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_351592
.p2align 0x4
L_522952:
L_351596:
	cmpq $0x1,%r15
	je L_522953
L_351597:
	movq $0x22A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x138(%rbp),%r15
	jmp L_350009
.p2align 0x4
L_522953:
L_351598:
	movq $0x1,%r14
	movq 0x138(%rbp),%r15
	jmp L_350009
.p2align 0x4
L_522954:
L_351599:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_351600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351600
.p2align 0x4
.long 0x4C0A
L_351600:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	jmp L_351593
.p2align 0x4
L_522955:
L_351601:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_351596
.p2align 0x4
L_522956:
L_351602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_351603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351603
.p2align 0x4
.long 0x4C0B
L_351603:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	jmp L_351588
.p2align 0x4
L_522957:
L_351604:
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_351592
.p2align 0x4
L_522958:
L_351605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_351606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351606
.p2align 0x4
.long 0x4C0A
L_351606:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	jmp L_351581
.p2align 0x4
L_522959:
L_351607:
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_351587
.p2align 0x4
.long 0x4C20
L_351670:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351671
L_351768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_351769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351769
.p2align 0x4
.long 0x4C37
L_351769:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_351671:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x170(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_351672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1437
.p2align 0x4
.long 0x4C21
L_351672:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x178(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x100(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x80(%rbp)
	movq %r15,%r14
	andq $0x1,%r14
	jnz L_522965
L_351760:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	jo L_349610
L_351761:
	movq 0x8(%r13),%rsi
	movq %rsi,%r15
	movq 0x0(%r13),%r11
	imulq %r14,%r15
	addq $0x7,%r11
	addq %r11,%rsi
	addq %r15,%rsi
	movq %rsi,%r15
	movq %rsi,0xB8(%rbp)
	addq $0x0,%r15
	jc L_522963
L_351763:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_351764
L_351766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_351767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351767
.p2align 0x4
.long 0x4C36
L_351767:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_351764:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xB8(%rbp),%rsi
	movq 0x20(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_351765:
	movq %rax,0x20(%rbp)
	movq (gcState+0x0)(%rip),%r12
L_351674:
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_351675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_522963:
L_351762:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_522965:
L_351673:
	notq %r15
	orq $0x1,%r15
	movq %r15,0x20(%rbp)
	jmp L_351674
.p2align 0x4
.long 0x4C22
L_351675:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movl 0x170(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movl %r15d,0x170(%rbp)
	movq $0x3,0x178(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_351676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C23
L_351676:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0x170(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_351677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C24
L_351677:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351678
L_351758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_351759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351759
.p2align 0x4
.long 0x4C35
L_351759:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_351678:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	addq $0x10,%r12
	movq 0x108(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (immediate_113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4C25
immediate_113:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351679
L_351756:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_351757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351757
.p2align 0x4
.long 0x4C34
L_351757:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_351679:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2229,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x2,%r15b
	movzbl %r15b,%r13d
	movb $0x5,%r15b
	movzbl %r15b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xB0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x229F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	cmpq $0x1,0x0(%r15)
	je L_522967
L_351680:
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (immediate_114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
L_522967:
L_351755:
	movq $0x1,0x20(%rbp)
L_351682:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x2237,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x18(%r14)
	addq $0x30,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq (globalObjptr+0x5540)(%rip),%r15
	movq %r15,0x10(%r14)
	movq $0x1,0x20(%r14)
	movq $0x225B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x21D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2215,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movb $0x6,%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_351683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
.long 0x4C26
immediate_114:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351681
L_351753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_351754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351754
.p2align 0x4
.long 0x4C33
L_351754:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_351681:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2229,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x4,%r15b
	movzbl %r15b,%r13d
	movb $0x5,%r15b
	movzbl %r15b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xB0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x229D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_351682
.p2align 0x4
.long 0x4C27
L_351683:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351684
L_351751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_351752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351752
.p2align 0x4
.long 0x4C32
L_351752:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_351684:
	movq 0x70(%rbp),%r13
	cmpq $0x1,%r13
	je L_351691
L_351685:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_351686:
	movq 0x88(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_522972
L_351687:
	cmpq $0x1,%r14
	je L_522970
L_351688:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_351686
.p2align 0x4
L_522970:
L_351689:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351691
L_351747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_351748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351748
.p2align 0x4
.long 0x4C32
L_351748:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_351691:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x88(%rbp)
L_351692:
	movq 0x120(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_351693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_1
.p2align 0x4
L_522972:
L_351749:
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	jmp L_351692
.p2align 0x4
.long 0x4C28
L_351693:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351694
L_351745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_351746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351746
.p2align 0x4
.long 0x4C31
L_351746:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_351694:
	movq 0x88(%rbp),%r13
	cmpq $0x1,%r13
	je L_351701
L_351695:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_351696:
	movq 0xA8(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_522977
L_351697:
	cmpq $0x1,%r14
	je L_522975
L_351698:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_351696
.p2align 0x4
L_522975:
L_351699:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351701
L_351738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_351739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351739
.p2align 0x4
.long 0x4C31
L_351739:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_351701:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
L_351702:
	movq $0x2231,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x225B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x128(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xB0(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0xB8(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0xD8(%rbp)
	movq %r14,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_351703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_522977:
L_351740:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351741
L_351742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_351743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351743
.p2align 0x4
.long 0x4C32
L_351743:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_351741:
	movq 0x88(%rbp),%r15
	jmp L_351702
.p2align 0x4
.long 0x4C29
L_351703:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movl 0x170(%rbp),%r15d
	movl %r15d,0xD0(%rbp)
	movl %r15d,0x170(%rbp)
	movq $0x3,0x178(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_351704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4C2A
L_351704:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0x170(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_351705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4C2B
L_351705:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351706
L_351736:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_351737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351737
.p2align 0x4
.long 0x4C30
L_351737:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_351706:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	addq $0x10,%r12
	movq 0xB0(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (immediate_115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4C2C
immediate_115:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351707
L_351734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_351735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351735
.p2align 0x4
.long 0x4C2F
L_351735:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_351707:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x221F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movb $0x3,%r15b
	movzbl %r15b,%r13d
	movb $0x5,%r15b
	movzbl %r15b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xA0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x229F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x259F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_351708:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522990
.p2align 0x4,,0x7
L_351709:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_522989
L_351710:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x20(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_351711:
	cmpq $0x1,%r14
	jne L_522988
L_351714:
	cmpq $0x1,%r15
	je L_522982
L_351715:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_351711
.p2align 0x4
L_522982:
L_351716:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_351717
L_351729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_351730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351730
.p2align 0x4
.long 0x4C2E
L_351730:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_351717:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_522986
L_351718:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_351719:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_522985
.p2align 0x4,,0x7
L_351720:
	movq $0x259F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_522983
L_351721:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_351719
.p2align 0x4
L_522983:
L_351723:
	cmpq $0x1,%r15
	je L_351523
L_351724:
	movq $0x22A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_351524
.p2align 0x4
L_522985:
L_351726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_351727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351727
.p2align 0x4
.long 0x4C2D
L_351727:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	jmp L_351720
.p2align 0x4
L_522986:
L_351728:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_351723
.p2align 0x4
L_522988:
L_351712:
	movq %r14,0x28(%rbp)
L_351713:
	movq 0x20(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_351708
.p2align 0x4
L_522989:
L_351731:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_351719
.p2align 0x4
L_522990:
L_351732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_351733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_351733
.p2align 0x4
.long 0x4C2D
L_351733:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	jmp L_351709
