/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:08:46 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_1261
.hidden x_1261
x_1261:
L_32099:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_32100
L_32151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_32152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32152
.p2align 0x4
.long 0x80A
L_32152:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_32100:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_32101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x8A6
L_32101:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_386000
L_32102:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_385999
L_32103:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
L_32104:
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_32105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_385999:
L_32112:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386000:
L_32148:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_32112
L_32149:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_32104
.p2align 0x4
.long 0x8EE
L_32105:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_386005
L_32107:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386004
L_32108:
	movq 0x58(%rbp),%r15
	movq 0x10(%r13),%r14
	cmpq %r14,0x10(%r15)
	je L_386003
L_32109:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_32112
L_32110:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_32104
.p2align 0x4
L_386003:
L_32113:
	movl $0x0,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_32114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
L_386004:
L_32146:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386005:
L_32106:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8EF
L_32114:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x10(%rbp)
	jnz L_386006
L_32115:
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_32116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
L_386006:
L_32143:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_32144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8F0
L_32116:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_32117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BE
L_32144:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_32145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8F1
L_32117:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_32118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x8BF
L_32145:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_32133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x8F2
L_32118:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32119
L_32141:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_32142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32142
.p2align 0x4
.long 0x7AC
L_32142:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_32119:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_32120:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_32121
L_32122:
	cmpq $0x1,%r14
	je L_386007
L_32123:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_32120
.p2align 0x4
L_386007:
L_32124:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32125
L_32139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_32140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32140
.p2align 0x4
.long 0x8F6
L_32140:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_32125:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386009
L_32126:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_32127:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386008
L_32128:
	movl %r13d,0x0(%r15)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_32129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386008:
L_32121:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386009:
L_32138:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_32127
.p2align 0x4
.long 0x61B
L_32133:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32134
L_32135:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_32136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32136
.p2align 0x4
.long 0x61C
L_32136:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_32134:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F3
L_32129:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_386014
L_32130:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_32131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386014:
L_32137:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F4
L_32131:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_32132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8F5
L_32132:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x68(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_32133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.text
.p2align 0x4
.globl isInRange_0
.hidden isInRange_0
isInRange_0:
L_32153:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_32154
L_32182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32183
.p2align 0x4
.long 0x4E7
L_32183:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_32154:
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_386015
L_32155:
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_32156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386015:
L_32177:
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_32178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8F7
L_32156:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_32157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x7BE
L_32178:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	decl %r15d
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_32179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8F8
L_32157:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x3,0x18(%rbp)
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%rbp
	leaq (L_32158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x8F9
L_32179:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_32180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x521
L_32158:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,%r15
L_32159:
	movq 0x8(%rbp),%r13
	movq %r13,%r11
	andq %r15,%r11
	andq $0x1,%r11
	jz L_386021
L_32160:
	cmpq %r15,%r13
	jl L_32167
L_32162:
	movq 0x8(%rbp),%r15
	movq %r15,%r13
	andq %r14,%r13
	andq $0x1,%r13
	jz L_386018
L_32163:
	cmpq %r15,%r14
	jl L_386017
L_32165:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386017:
L_32167:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386018:
L_32168:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r14,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_32169:
	cmpl $0x0,%eax
	jg L_32167
	jmp L_32165
.p2align 0x4
L_386021:
L_32173:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_32174:
	cmpl $0x0,%eax
	jg L_32167
	jmp L_32162
.p2align 0x4
.long 0x8FA
L_32180:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x3,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_32181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4E0
L_32181:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x18(%rbp),%r15
	jmp L_32159
.text
.p2align 0x4
.globl layout_33
.hidden layout_33
layout_33:
L_32184:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_32185
L_32221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_32222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32222
.p2align 0x4
.long 0x45F
L_32222:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_32185:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r11
	movq %r11,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_386030
L_32186:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x128F,%r15
	je L_386026
	cmpq $0x1290,%r15
	je L_386025
	cmpq $0x1291,%r15
	je L_386024
	cmpq $0x1292,%r15
	je L_386023
L_32187:
	movq 0x0(%r11),%r15
	movq %r15,0x8(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_32188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_386023:
L_32212:
	movq 0x0(%r11),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_32213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ordToString_0
.p2align 0x4
L_386024:
L_32210:
	movq %r14,0x10(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_32211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_386025:
L_32209:
	movq 0x0(%r11),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_386026:
L_32193:
	movq 0x0(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_386029
L_32195:
	decl %ecx
	jo L_386028
L_32197:
	movq $0x1,0x20(%rbp)
loop_465:
	cmpl $0x0,%ecx
	jl L_386027
L_32198:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x28(%rbp)
	movslq %ecx,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_32199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ordToString_0
.p2align 0x4
L_386027:
L_32203:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_32204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_386028:
L_32196:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386029:
L_32194:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386030:
L_32218:
	shrq $0x1,%r11
	movl %r11d,%r15d
	testl %r15d,%r15d
	jnz L_386031
L_32219:
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_386031:
L_32220:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_32188:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32189
L_32191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_32192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32192
.p2align 0x4
.long 0x451
L_32192:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_32189:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE4A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_32190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_32213:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32214
L_32216:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_32217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32217
.p2align 0x4
.long 0x451
L_32217:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_32214:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE488)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_32215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_32211:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x64E
L_32199:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32200
L_32201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_32202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32202
.p2align 0x4
.long 0x653
L_32202:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_32200:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	movl 0x28(%rbp),%ecx
	jmp loop_465
.p2align 0x4
.long 0x1
L_32204:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32205
L_32207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_32208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32208
.p2align 0x4
.long 0x451
L_32208:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_32205:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA2E0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_32206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_32190:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_32215:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_32206:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.text
.p2align 0x4
.globl x_1260
.hidden x_1260
x_1260:
L_32223:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_32224
L_32279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_32280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32280
.p2align 0x4
.long 0x61D
L_32280:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_32224:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_32225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x8EE
L_32225:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32226
L_32277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_32278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32278
.p2align 0x4
.long 0x900
L_32278:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_32226:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_386040
L_32227:
L_32228:
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%rbp),%r15
	cmpq 0x10(%r15),%r14
	je L_386039
L_32229:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_386038
L_32230:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x28(%rbp)
L_32231:
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_32232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386038:
L_32239:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386039:
L_32275:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386040:
L_32276:
	movq 0x58(%rbp),%r14
	xchgq %r14,%r15
	jmp L_32228
.p2align 0x4
.long 0x8EE
L_32232:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_386045
L_32234:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386044
L_32235:
	movq 0x10(%r13),%r15
	cmpq %r15,0x58(%rbp)
	je L_386043
L_32236:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_32239
L_32237:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_32231
.p2align 0x4
L_386043:
L_32240:
	movl $0x1,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_32241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
L_386044:
L_32273:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386045:
L_32233:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8FB
L_32241:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x10(%rbp)
	jnz L_386046
L_32242:
	movq 0x48(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_32243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
L_386046:
L_32270:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_32271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8FC
L_32243:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_32244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x510
L_32271:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_32272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8FD
L_32244:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_32245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x8FF
L_32272:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_32260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7A8
L_32245:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32246
L_32268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_32269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32269
.p2align 0x4
.long 0x7AC
L_32269:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_32246:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_32247:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_32248
L_32249:
	cmpq $0x1,%r14
	je L_386047
L_32250:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_32247
.p2align 0x4
L_386047:
L_32251:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32252
L_32266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_32267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32267
.p2align 0x4
.long 0x8FE
L_32267:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_32252:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386049
L_32253:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_32254:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386048
L_32255:
	movl %r13d,0x0(%r15)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_32256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386048:
L_32248:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386049:
L_32265:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_32254
.p2align 0x4
.long 0x51A
L_32260:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32261
L_32262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_32263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32263
.p2align 0x4
.long 0x488
L_32263:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_32261:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C6
L_32256:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_386054
L_32257:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_32258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386054:
L_32264:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7B4
L_32258:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_32259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x79B
L_32259:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_32260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.text
.p2align 0x4
.globl x_1259
.hidden x_1259
x_1259:
L_32281:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_32282
L_32327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_32328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32328
.p2align 0x4
.long 0x646
L_32328:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_32282:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_32283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x4ED
L_32283:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	je L_386059
L_32284:
	movq (globalObjptr+0x9E8)(%rip),%r14
	movb $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_32285:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r13
	movb 0x38(%rbp),%r11b
	testb %r11b,%r11b
	jz L_386058
L_32325:
L_32287:
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_386057
L_32288:
	cmpq $0x1,%r14
	je L_386056
L_32289:
	movb 0x0(%r14),%r13b
	movq 0x8(%r14),%r14
	movb %r13b,0x38(%rbp)
	jmp L_32285
.p2align 0x4
L_386056:
L_32290:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386057:
L_32291:
	movb 0x38(%rbp),%r15b
	movb %r15b,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_32292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp make_0
.p2align 0x4
L_386058:
	movq %r10,%r13
	jmp L_32287
.p2align 0x4
L_386059:
L_32326:
	movq (globalObjptr+0x9E8)(%rip),%r14
	movq 0x38(%rbp),%r13
	movb $0x1,0x38(%rbp)
	xchgq %r13,%r15
	jmp L_32285
.p2align 0x4
.long 0x901
L_32292:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32293
L_32323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_32324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32324
.p2align 0x4
.long 0x905
L_32324:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_32293:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_386060
L_32294:
	movq 0x0(%r14),%r15
L_32295:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386060:
L_32296:
	movq 0x30(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_32297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x902
L_32297:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_32298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x903
L_32298:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_32299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x864
L_32299:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32300
L_32321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_32322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32322
.p2align 0x4
.long 0x86B
L_32322:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_32300:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_32301:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_32302
L_32303:
	cmpq $0x1,%r14
	je L_386062
L_32304:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_32301
.p2align 0x4
L_386062:
L_32305:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32306
L_32319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_32320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32320
.p2align 0x4
.long 0x7C7
L_32320:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_32306:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386064
L_32307:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_32308:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386063
L_32309:
	movl %r13d,0x0(%r15)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_32310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386063:
L_32302:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386064:
L_32318:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_32308
.p2align 0x4
.long 0x904
L_32310:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32311
L_32316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_32317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32317
.p2align 0x4
.long 0x478
L_32317:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_32311:
	movq (globalObjptr+0x1608)(%rip),%r14
	movq (globalObjptr+0x1610)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_386069
L_32312:
	movb 0x38(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_386068
L_32313:
	movq (globalObjptr+0x4FB0)(%rip),%r15
	jmp L_32295
.p2align 0x4
L_386068:
L_32314:
	movq (globalWord64+0xF28)(%rip),%r15
	jmp L_32295
.p2align 0x4
L_386069:
L_32315:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl make_0
.hidden make_0
make_0:
L_32329:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_32590
L_32330:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386072
L_32331:
	movq 0x10(%rbp),%r15
	movq 0x38(%r15),%r14
	movq 0x30(%r15),%r13
	movq %r13,0x28(%rbp)
	movss 0x20(%r15),%xmm15
	movss %xmm15,0x4(%rbp)
	movss 0x1C(%r15),%xmm15
	movss %xmm15,0x30(%rbp)
	movss 0x18(%r15),%xmm15
	movss %xmm15,0x34(%rbp)
	movss 0x10(%r15),%xmm15
	movss %xmm15,0x38(%rbp)
	movss 0xC(%r15),%xmm15
	movss %xmm15,0x3C(%rbp)
	movss 0x8(%r15),%xmm15
	movss %xmm15,0x40(%rbp)
	movq 0x28(%r15),%r13
	movsd 0x0(%r15),%xmm15
	movsd %xmm15,0x48(%rbp)
	movb 0x0(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_386071
L_32332:
	movsd 0x28(%r13),%xmm15
	movsd %xmm15,0x10(%rbp)
	movsd 0x20(%r13),%xmm15
	movsd %xmm15,0x28(%rbp)
	movsd 0x10(%r13),%xmm15
	movsd %xmm15,0x30(%rbp)
	movsd 0x8(%r13),%xmm15
	movsd %xmm15,0x38(%rbp)
	movsd 0x0(%r13),%xmm15
	movsd %xmm15,0x40(%rbp)
	movq 0x38(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x30(%r13),%r15
	movq %r15,0x68(%rbp)
	movq $0x3E3D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_32333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1270
.p2align 0x4
L_386071:
L_32463:
	movq %r14,0x58(%rbp)
	movq $0x3E3B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_32464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1270
.p2align 0x4
L_386072:
L_32590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_32591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32591
.p2align 0x4
.long 0x90E
L_32591:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_32331
.p2align 0x4
.long 0x61B
L_32333:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_386093
L_32334:
	movl 0x4(%r15),%r14d
	movl %r14d,0x60(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x64(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movb 0x8(%r15),%r14b
	movb %r14b,0x70(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_32335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32335
.p2align 0x4
.long 0x906
L_32335:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl %eax,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32336
L_32459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_32460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32460
.p2align 0x4
.long 0x906
L_32460:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_32336:
	movl 0x58(%rbp),%r15d
	testl %r15d,%r15d
	jz L_386089
L_32337:
	cmpl $0x1,%r15d
	je L_386086
L_32338:
	cmpl $0x2,%r15d
	je L_386083
L_32339:
	cmpl $0x3,%r15d
	jne L_386082
L_32342:
	movb 0x70(%rbp),%r15b
	cmpb $0x1,%r15b
	je doit_2
	cmpb $0x2,%r15b
	je doit_33
	cmpb $0x3,%r15b
	je L_386078
	cmpb $0x4,%r15b
	je L_386076
L_32344:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_386075
L_32345:
	movsd (globalReal64+0x0)(%rip),%xmm15
	movsd %xmm15,%xmm7
L_32346:
	movq $0x7FFFFFFFFFFFFFFF,%r15
	movd %r15,%xmm15
	andpd %xmm7,%xmm15
	ucomisd 0x48(%rbp),%xmm15
	setnp %al
	movzbl %al,%eax
	setna %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jz L_386074
L_32349:
	movq $0x1C8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movsd %xmm7,%xmm15
	movsd %xmm15,0x0(%r15)
	addq $0x10,%r12
	movq $0x1C91,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386074:
L_32348:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386075:
L_32350:
	movsd 0x30(%rbp),%xmm15
	movsd %xmm15,%xmm7
	jmp L_32346
.p2align 0x4
L_386076:
L_32438:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_386077
L_32439:
	movsd 0x38(%rbp),%xmm15
	movsd %xmm15,%xmm7
	jmp L_32346
.p2align 0x4
L_386077:
L_32440:
	movsd 0x40(%rbp),%xmm15
	movsd %xmm15,%xmm7
	jmp L_32346
.p2align 0x4
L_386078:
L_32434:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_386079
L_32435:
	movsd 0x10(%rbp),%xmm15
	movsd %xmm15,%xmm7
	jmp L_32346
.p2align 0x4
L_386079:
L_32436:
	movsd 0x28(%rbp),%xmm15
	movsd %xmm15,%xmm7
	jmp L_32346
.p2align 0x4
doit_33:
doit_2:
	movb $0x0,0x28(%rbp)
doit_3:
	movl 0x64(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_386080
L_32352:
	leaq L_32425(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_32353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386080:
L_32426:
	negl %r15d
	jo L_386081
L_32427:
	movl %r15d,0x78(%rbp)
	leaq L_32425(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_32428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386081:
L_32362:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386082:
L_32341:
	movq (globalObjptr+0x778)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386083:
L_32441:
	movb 0x70(%rbp),%r14b
	cmpb $0x1,%r14b
	je doit_4
	cmpb $0x2,%r14b
	je doit_35
	cmpb $0x3,%r14b
	je L_32434
	cmpb $0x4,%r14b
	je L_32438
	jmp L_32344
.p2align 0x4
doit_35:
doit_4:
	movb $0x1,0x28(%rbp)
	jmp doit_3
.p2align 0x4
L_386086:
L_32447:
	movb 0x70(%rbp),%r14b
	cmpb $0x1,%r14b
	je doit_5
	cmpb $0x2,%r14b
	je doit_37
	cmpb $0x3,%r14b
	je L_32434
	cmpb $0x4,%r14b
	je L_32438
	jmp L_32344
.p2align 0x4
doit_37:
doit_5:
	movb $0x2,0x28(%rbp)
	jmp doit_3
.p2align 0x4
L_386089:
L_32453:
	movb 0x70(%rbp),%r14b
	cmpb $0x1,%r14b
	je doit_6
	cmpb $0x2,%r14b
	je doit_39
	cmpb $0x3,%r14b
	je L_32434
	cmpb $0x4,%r14b
	je L_32438
	jmp L_32344
.p2align 0x4
doit_39:
doit_6:
	movb $0x3,0x28(%rbp)
	jmp doit_3
.p2align 0x4
L_386093:
L_32462:
	movq (globalObjptr+0x19D0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x90A
L_32464:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r15
	je L_32462
L_32465:
	movl 0x4(%r15),%r14d
	movl %r14d,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x14(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movb 0x8(%r15),%r14b
	movb %r14b,0x44(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_32466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32466
.p2align 0x4
.long 0x90B
L_32466:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl %eax,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32467
L_32587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_32588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32588
.p2align 0x4
.long 0x90B
L_32588:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_32467:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jz L_386109
L_32468:
	cmpl $0x1,%r15d
	je L_386106
L_32469:
	cmpl $0x2,%r15d
	je L_386103
L_32470:
	cmpl $0x3,%r15d
	jne L_32341
L_32472:
	movb 0x44(%rbp),%r15b
	cmpb $0x1,%r15b
	je doit_7
	cmpb $0x2,%r15b
	je doit_41
	cmpb $0x3,%r15b
	je L_386098
	cmpb $0x4,%r15b
	je L_386096
L_32474:
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_386095
L_32475:
	movss (globalReal32+0x8)(%rip),%xmm15
	movss %xmm15,%xmm7
L_32476:
	movl $0x7FFFFFFF,%r15d
	movd %r15d,%xmm15
	andps %xmm7,%xmm15
	ucomiss 0x40(%rbp),%xmm15
	setnp %al
	movzbl %al,%eax
	setna %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jz L_32348
L_32478:
	movd %xmm7,%r15d
	movl %r15d,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x1C91,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386095:
L_32479:
	movss 0x34(%rbp),%xmm15
	movss %xmm15,%xmm7
	jmp L_32476
.p2align 0x4
L_386096:
L_32566:
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_386097
L_32567:
	movss 0x30(%rbp),%xmm15
	movss %xmm15,%xmm7
	jmp L_32476
.p2align 0x4
L_386097:
L_32568:
	movss 0x4(%rbp),%xmm15
	movss %xmm15,%xmm7
	jmp L_32476
.p2align 0x4
L_386098:
L_32562:
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_386099
L_32563:
	movss 0x3C(%rbp),%xmm15
	movss %xmm15,%xmm7
	jmp L_32476
.p2align 0x4
L_386099:
L_32564:
	movss 0x38(%rbp),%xmm15
	movss %xmm15,%xmm7
	jmp L_32476
.p2align 0x4
doit_41:
doit_7:
	movb $0x0,0x30(%rbp)
doit_8:
	movl 0x14(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_386100
L_32481:
	leaq L_32553(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_32482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386100:
L_32554:
	negl %r15d
	jo L_386101
L_32555:
	movl %r15d,0x58(%rbp)
	leaq L_32553(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_32556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386101:
L_32491:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386103:
L_32569:
	movb 0x44(%rbp),%r14b
	cmpb $0x1,%r14b
	je doit_9
	cmpb $0x2,%r14b
	je doit_43
	cmpb $0x3,%r14b
	je L_32562
	cmpb $0x4,%r14b
	je L_32566
	jmp L_32474
.p2align 0x4
doit_43:
doit_9:
	movb $0x1,0x30(%rbp)
	jmp doit_8
.p2align 0x4
L_386106:
L_32575:
	movb 0x44(%rbp),%r14b
	cmpb $0x1,%r14b
	je doit_10
	cmpb $0x2,%r14b
	je doit_45
	cmpb $0x3,%r14b
	je L_32562
	cmpb $0x4,%r14b
	je L_32566
	jmp L_32474
.p2align 0x4
doit_45:
doit_10:
	movb $0x2,0x30(%rbp)
	jmp doit_8
.p2align 0x4
L_386109:
L_32581:
	movb 0x44(%rbp),%r14b
	cmpb $0x1,%r14b
	je doit_11
	cmpb $0x2,%r14b
	je doit_47
	cmpb $0x3,%r14b
	je L_32562
	cmpb $0x4,%r14b
	je L_32566
	jmp L_32474
.p2align 0x4
doit_47:
doit_11:
	movb $0x3,0x30(%rbp)
	jmp doit_8
.p2align 0x4
.long 0x907
L_32353:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r14
	movq %r14,0x30(%rbp)
	movl 0x60(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_386148
L_32354:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_386147
L_32355:
	movq 0x8(%r14),%r15
	xorl %ebx,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_32356:
	incl %ecx
	cmpq $0x1,%r15
	je L_386114
L_32357:
	movq 0x8(%r15),%r15
	jmp L_32356
.p2align 0x4
L_386114:
L_32358:
L_32359:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	movq %r14,0x38(%rbp)
	jne L_386146
L_32361:
	addl %ecx,%r15d
	jo L_32362
L_32363:
	addl $0x4,%r15d
	jo L_32362
L_32364:
	addl %ebx,%r15d
	jo L_32362
L_32365:
	movslq %r15d,%rdx
	movq %rdx,0x40(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_386142
L_32366:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_32367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32367
.p2align 0x4
.long 0x908
L_32367:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x60(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_386140
L_32368:
	xorl %ecx,%ecx
	movq %rax,%r15
L_32369:
	movslq %ecx,%r14
	movq 0x40(%rbp),%r13
	cmpq %r13,%r14
	jnb L_32371
L_32372:
	movb $0x30,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32362
L_32373:
	movslq %ecx,%r14
	cmpq %r13,%r14
	jnb L_32371
L_32375:
	movb $0x2E,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32362
L_32376:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_32388
L_32377:
	movq 0x8(%r13),%r14
	movl 0x0(%r13),%r11d
	movl %ecx,%ebx
	movl %r11d,%ecx
.p2align 0x4,,0x7
L_32378:
	cmpl $0x0,%ecx
	jl L_32414
L_32379:
	cmpl $0x9,%ecx
	jg L_386133
L_32380:
	addl $0x30,%ecx
	jo L_32362
L_32381:
	cmpl $0xFF,%ecx
	ja L_386131
L_32382:
	movb %cl,%r13b
	movslq %ebx,%r11
	cmpq 0x40(%rbp),%r11
	jnb L_32371
L_32384:
	movb %r13b,0x0(%r15,%r11,1)
	incl %ebx
	jo L_32362
L_32385:
	cmpq $0x1,%r14
	je L_386115
L_32386:
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	jmp L_32378
.p2align 0x4
L_386115:
	movl %ebx,%ecx
L_32388:
	movslq %ecx,%r14
	cmpq 0x40(%rbp),%r14
	jnb L_32371
L_32390:
	movb $0x45,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32362
L_32391:
	movq 0x38(%rbp),%r13
	decq %r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_466:
	cmpq %r14,%r13
	jl L_386118
L_32392:
	movq %r14,%r11
	incq %r11
	movq 0x30(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r9b
	movslq %ecx,%r14
	cmpq 0x40(%rbp),%r14
	jnb L_386117
L_32394:
	movb %r9b,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32362
L_32395:
	movq %r11,%r14
	jmp loop_466
.p2align 0x4
L_386117:
L_32371:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386118:
L_32396:
	movslq %ecx,%r14
	movq 0x40(%rbp),%r13
	cmpq %r13,%r14
	jnb L_32371
L_32398:
	movb $0x0,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32362
L_32399:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	decq %r13
	jo L_32362
L_32400:
	movb 0x0(%r15,%r13,1),%r14b
	testb %r14b,%r14b
	jnz L_386123
L_32402:
	movb 0x28(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_386122
	cmpb $0x2,%r14b
	je L_386121
	cmpb $0x3,%r14b
	je L_386120
L_32403:
	xorl %ecx,%ecx
L_32404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %ecx,%esi
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_32405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Real64_strtor
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	movsd %xmm0,(cReturnTemp+0x0)(%rip)
	jmp L_32405
.p2align 0x4
.long 0x909
L_32405:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movsd (cReturnTemp+0x0)(%rip),%xmm15
	movsd %xmm15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32406
L_32407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_32408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32408
.p2align 0x4
.long 0x909
L_32408:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_32406:
	movsd 0x28(%rbp),%xmm15
	movsd %xmm15,%xmm7
	jmp L_32346
.p2align 0x4
L_386120:
L_32411:
	movl $0x1,%ecx
	jmp L_32404
.p2align 0x4
L_386121:
L_32410:
	movl $0x3,%ecx
	jmp L_32404
.p2align 0x4
L_386122:
L_32409:
	movl $0x2,%ecx
	jmp L_32404
.p2align 0x4
L_386123:
L_32401:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x750)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386131:
L_32412:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x7,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386133:
L_32414:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386140:
L_32417:
	cmpq $0x0,0x40(%rbp)
	jna L_32371
L_32419:
	movb $0x2D,0x0(%rax)
	movl $0x1,%ecx
	movq %rax,%r15
	jmp L_32369
.p2align 0x4
L_386142:
L_32420:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386146:
L_32360:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386147:
L_32421:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
	jmp L_32359
.p2align 0x4
L_386148:
L_32422:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_386149
L_32423:
	movq 0x8(%r14),%r15
	movl $0x1,%ebx
	xorl %ecx,%ecx
	jmp L_32356
.p2align 0x4
L_386149:
L_32424:
	movl $0x1,%ebx
	xorl %ecx,%ecx
	jmp L_32359
.p2align 0x4
.long 0x48A
L_32425:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x907
L_32428:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32429
L_32430:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_32431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32431
.p2align 0x4
.long 0x908
L_32431:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_32429:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_32353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x90C
L_32482:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r14
	movq %r14,0x28(%rbp)
	movl 0x10(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_386185
L_32483:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_386184
L_32484:
	movq 0x8(%r14),%r15
	xorl %ebx,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_32485:
	incl %ecx
	cmpq $0x1,%r15
	je L_386151
L_32486:
	movq 0x8(%r15),%r15
	jmp L_32485
.p2align 0x4
L_386151:
L_32487:
L_32488:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	movq %r14,0x38(%rbp)
	jne L_386183
L_32490:
	addl %ecx,%r15d
	jo L_32491
L_32492:
	addl $0x4,%r15d
	jo L_32491
L_32493:
	addl %ebx,%r15d
	jo L_32491
L_32494:
	movslq %r15d,%rdx
	movq %rdx,0x50(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_386179
L_32495:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_32496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32496
.p2align 0x4
.long 0x90D
L_32496:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x10(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_386177
L_32497:
	xorl %ecx,%ecx
	movq %rax,%r15
L_32498:
	movslq %ecx,%r14
	movq 0x50(%rbp),%r13
	cmpq %r13,%r14
	jnb L_32500
L_32501:
	movb $0x30,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32491
L_32502:
	movslq %ecx,%r14
	cmpq %r13,%r14
	jnb L_32500
L_32504:
	movb $0x2E,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32491
L_32505:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_32517
L_32506:
	movq 0x8(%r13),%r14
	movl 0x0(%r13),%r11d
	movl %ecx,%ebx
	movl %r11d,%ecx
.p2align 0x4,,0x7
L_32507:
	cmpl $0x0,%ecx
	jl L_32414
L_32508:
	cmpl $0x9,%ecx
	jg L_32414
L_32509:
	addl $0x30,%ecx
	jo L_32491
L_32510:
	cmpl $0xFF,%ecx
	ja L_386168
L_32511:
	movb %cl,%r13b
	movslq %ebx,%r11
	cmpq 0x50(%rbp),%r11
	jnb L_32500
L_32513:
	movb %r13b,0x0(%r15,%r11,1)
	incl %ebx
	jo L_32491
L_32514:
	cmpq $0x1,%r14
	je L_386152
L_32515:
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	jmp L_32507
.p2align 0x4
L_386152:
	movl %ebx,%ecx
L_32517:
	movslq %ecx,%r14
	cmpq 0x50(%rbp),%r14
	jnb L_32500
L_32519:
	movb $0x45,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32491
L_32520:
	movq 0x38(%rbp),%r13
	decq %r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_467:
	cmpq %r14,%r13
	jl L_386155
L_32521:
	movq %r14,%r11
	incq %r11
	movq 0x28(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r9b
	movslq %ecx,%r14
	cmpq 0x50(%rbp),%r14
	jnb L_386154
L_32523:
	movb %r9b,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32491
L_32524:
	movq %r11,%r14
	jmp loop_467
.p2align 0x4
L_386154:
L_32500:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386155:
L_32525:
	movslq %ecx,%r14
	movq 0x50(%rbp),%r13
	cmpq %r13,%r14
	jnb L_32500
L_32527:
	movb $0x0,0x0(%r15,%r14,1)
	incl %ecx
	jo L_32491
L_32528:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	decq %r13
	jo L_32491
L_32529:
	movb 0x0(%r15,%r13,1),%r14b
	testb %r14b,%r14b
	jnz L_386160
L_32531:
	movb 0x30(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_386159
	cmpb $0x2,%r14b
	je L_386158
	cmpb $0x3,%r14b
	je L_386157
L_32532:
	xorl %ecx,%ecx
L_32533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %ecx,%esi
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_32534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Real32_strtor
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	movss %xmm0,(cReturnTemp+0x0)(%rip)
	jmp L_32534
.p2align 0x4
.long 0x476
L_32534:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movss (cReturnTemp+0x0)(%rip),%xmm15
	movss %xmm15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32535
L_32536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_32537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32537
.p2align 0x4
.long 0x476
L_32537:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_32535:
	movss 0x28(%rbp),%xmm15
	movss %xmm15,%xmm7
	jmp L_32476
.p2align 0x4
L_386157:
L_32540:
	movl $0x1,%ecx
	jmp L_32533
.p2align 0x4
L_386158:
L_32539:
	movl $0x3,%ecx
	jmp L_32533
.p2align 0x4
L_386159:
L_32538:
	movl $0x2,%ecx
	jmp L_32533
.p2align 0x4
L_386160:
L_32530:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x750)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386168:
L_32541:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x7,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386177:
L_32545:
	cmpq $0x0,0x50(%rbp)
	jna L_32500
L_32547:
	movb $0x2D,0x0(%rax)
	movl $0x1,%ecx
	movq %rax,%r15
	jmp L_32498
.p2align 0x4
L_386179:
L_32548:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386183:
L_32489:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386184:
L_32549:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
	jmp L_32488
.p2align 0x4
L_386185:
L_32550:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_386186
L_32551:
	movq 0x8(%r14),%r15
	movl $0x1,%ebx
	xorl %ecx,%ecx
	jmp L_32485
.p2align 0x4
L_386186:
L_32552:
	movl $0x1,%ebx
	xorl %ecx,%ecx
	jmp L_32488
.p2align 0x4
.long 0x48A
L_32553:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x90C
L_32556:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32557
L_32558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_32559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32559
.p2align 0x4
.long 0x90B
L_32559:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_32557:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_32482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.text
.p2align 0x4
.globl x_1270
.hidden x_1270
x_1270:
L_32592:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_32593
L_32734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_32735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32735
.p2align 0x4
.long 0x45F
L_32735:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_32593:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386240
L_32733:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	movl $0x0,0x20(%rbp)
.p2align 0x4,,0x7
L_32719:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386239
.p2align 0x4,,0x7
L_32720:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32598
L_32722:
	movl 0x20(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386236
L_32726:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32625
L_32728:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%r14d
	incl %r14d
	movq 0x18(%rbp),%r15
	movl %ecx,0x10(%rbp)
	movl %r14d,%ecx
L_32687:
	movzbq %dl,%r14
	movq 0x8(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_32625
L_32689:
	movl 0x0(%r13,%r14,4),%r11d
	testl %r11d,%r11d
	jz L_386224
L_32716:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movzbl %dl,%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1F1D,%r13
	je L_386188
L_32718:
	movq %r14,0x18(%rbp)
	movl %ecx,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_32719
.p2align 0x4
L_386188:
L_32717:
	movq %r14,0x18(%rbp)
	movl %ecx,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
.p2align 0x4,,0x7
L_32595:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386223
.p2align 0x4,,0x7
L_32596:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32598
L_32599:
	movl 0x20(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386190
L_32684:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_386189
L_32686:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%r14d
	incl %r14d
	movq 0x18(%rbp),%r15
	movl %ecx,0x10(%rbp)
	movl %r14d,%ecx
	jmp L_32687
.p2align 0x4
L_386189:
L_32625:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386190:
L_32600:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386221
L_32601:
	movq 0x8(%r15),%r13
	movq %r13,0x8(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	movl %ecx,0x14(%rbp)
.p2align 0x4,,0x7
L_32602:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386220
.p2align 0x4,,0x7
L_32603:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_386191
L_32604:
	movq %r15,0x18(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movb %r15b,0x10(%rbp)
	jmp L_32602
.p2align 0x4
L_386191:
L_32605:
	movq %r15,0x8(%rbp)
	movl 0x14(%rbp),%r15d
	movl %r15d,0x10(%rbp)
L_32606:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_386219
L_32607:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_32608:
	incl %ecx
	cmpq $0x1,%r15
	je L_386192
L_32609:
	movq 0x8(%r15),%r15
	jmp L_32608
.p2align 0x4
L_386192:
L_32610:
L_32611:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	testq %rdx,%rdx
	jz L_386218
L_32612:
	cmpq $0x7FFFFFFF,%rdx
	ja L_386217
L_32613:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32614
.p2align 0x4
.long 0x45C
L_32614:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_32615:
	movq 0x8(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_468:
	cmpq 0x18(%rbp),%r14
	jnl L_386194
L_32673:
	cmpq $0x1,%r13
	je L_386193
L_32674:
	movq 0x8(%r13),%r11
	movb 0x0(%r13),%r10b
	movb %r10b,0x0(%r15,%r14,1)
	incq %r14
	movq %r11,%r13
	jmp loop_468
.p2align 0x4
L_386193:
L_32676:
	movq (globalObjptr+0x5A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386194:
L_32616:
	movl 0x10(%rbp),%ecx
L_32617:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386213
L_32666:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32598
L_32668:
	cmpl %r13d,%ecx
	jnl L_32622
L_32670:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32625
L_32672:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_32627:
	cmpb $0x2B,%dl
	je L_386202
	cmpb $0x2D,%dl
	je normal_3
	cmpb $0x7E,%dl
	je normal_16
L_32628:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movb %dl,0x4(%rbp)
	movl %ecx,0x0(%rbp)
	jmp normalP_0
.p2align 0x4
normal_16:
normal_3:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386198
L_32659:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_386197
L_32661:
	cmpl %r13d,%ecx
	jnl L_386196
L_32663:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32625
L_32665:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_32652:
	movl %ecx,0x8(%rbp)
	movb %dl,0xC(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_32653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp normalP_0
.p2align 0x4
L_386196:
L_32622:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386197:
L_32598:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386198:
L_32645:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32598
L_32647:
	cmpl %r13d,%ecx
	jnl L_32622
L_32649:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32625
L_32651:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_32652
.p2align 0x4
L_386202:
L_32629:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386206
L_32638:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32598
L_32640:
	cmpl %r13d,%ecx
	jnl L_32622
L_32642:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32625
L_32644:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_32637:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movb %dl,0x4(%rbp)
	movl %ecx,0x0(%rbp)
	jmp normalP_0
.p2align 0x4
L_386206:
L_32630:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32598
L_32632:
	cmpl %r13d,%ecx
	jnl L_32622
L_32634:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32625
L_32636:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_32637
.p2align 0x4
L_386213:
L_32618:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32598
L_32620:
	cmpl %r13d,%ecx
	jnl L_32622
L_32623:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32625
L_32626:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_32627
.p2align 0x4
L_386217:
L_32678:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386218:
L_32679:
	movq (globalObjptr+0x598)(%rip),%r15
	jmp L_32615
.p2align 0x4
L_386219:
L_32680:
	xorl %ecx,%ecx
	jmp L_32611
.p2align 0x4
L_386220:
L_32681:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32682
.p2align 0x4
.long 0x524
L_32682:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_32603
.p2align 0x4
L_386221:
L_32683:
	movq $0x1,0x8(%rbp)
	movl %ecx,0x10(%rbp)
	jmp L_32606
.p2align 0x4
L_386223:
L_32731:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_32732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32732
.p2align 0x4
.long 0x4DF
L_32732:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_32596
.p2align 0x4
L_386224:
L_32690:
	cmpq $0x1,%r15
	je L_386233
L_32691:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x14(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_32692:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386232
.p2align 0x4,,0x7
L_32693:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_386225
L_32694:
	movq %r15,0x18(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movb %r15b,0x14(%rbp)
	jmp L_32692
.p2align 0x4
L_386225:
L_32695:
	movq %r15,0x8(%rbp)
L_32696:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_386231
L_32697:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_32698:
	incl %ecx
	cmpq $0x1,%r15
	je L_386226
L_32699:
	movq 0x8(%r15),%r15
	jmp L_32698
.p2align 0x4
L_386226:
L_32700:
L_32701:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	testq %rdx,%rdx
	jz L_386230
L_32702:
	cmpq $0x7FFFFFFF,%rdx
	ja L_32678
L_32703:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32704
.p2align 0x4
.long 0x45C
L_32704:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_32705:
	movq 0x8(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_469:
	cmpq 0x18(%rbp),%r14
	jnl L_386228
L_32707:
	cmpq $0x1,%r13
	je L_32676
L_32708:
	movq 0x8(%r13),%r11
	movb 0x0(%r13),%r10b
	movb %r10b,0x0(%r15,%r14,1)
	incq %r14
	movq %r11,%r13
	jmp loop_469
.p2align 0x4
L_386228:
L_32706:
	movl 0x10(%rbp),%ecx
	jmp L_32617
.p2align 0x4
L_386230:
L_32711:
	movq (globalObjptr+0x598)(%rip),%r15
	jmp L_32705
.p2align 0x4
L_386231:
L_32712:
	xorl %ecx,%ecx
	jmp L_32701
.p2align 0x4
L_386232:
L_32713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32714
.p2align 0x4
.long 0x524
L_32714:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_32693
.p2align 0x4
L_386233:
L_32715:
	movq $0x1,0x8(%rbp)
	jmp L_32696
.p2align 0x4
L_386236:
L_32723:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386237
L_32724:
	movq 0x8(%r15),%r13
	movq %r13,0x8(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	movl %ecx,0x14(%rbp)
	jmp L_32602
.p2align 0x4
L_386237:
L_32725:
	movq $0x1,0x8(%rbp)
	movl %ecx,0x10(%rbp)
	jmp L_32606
.p2align 0x4
L_386239:
L_32729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_32730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32730
.p2align 0x4
.long 0x4DF
L_32730:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_32720
.p2align 0x4
L_386240:
L_32594:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	movl $0x0,0x20(%rbp)
	jmp L_32595
.p2align 0x4
.long 0x1
L_32653:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32654
L_32657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_32658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32658
.p2align 0x4
.long 0x451
L_32658:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_32654:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_32622
L_32655:
	movl 0x0(%r15),%r14d
	movq 0x10(%r15),%r13
	movb 0x8(%r15),%r11b
	movq $0x2963,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movl $0x1,0x4(%r15)
	movzbl %r11b,%r14d
	movl %r14d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl normalP_0
.hidden normalP_0
normalP_0:
L_32736:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_33514
L_32737:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386319
L_32738:
	movb 0x4(%rbp),%r15b
	cmpb $0x5A,%r15b
	ja L_386318
L_32739:
	cmpb $0x41,%r15b
	jb L_386317
L_32740:
	movzbl %r15b,%r14d
	addl $0x20,%r14d
	movb %r14b,%dl
L_32741:
	cmpb $0x2E,%dl
	je L_386306
	cmpb $0x69,%dl
	je L_386268
	cmpb $0x6E,%dl
	je L_386247
L_32742:
	movb 0x4(%rbp),%r15b
	cmpb $0x39,%r15b
	ja L_33223
L_32743:
	cmpb $0x30,%r15b
	jb L_386245
L_32744:
	movzbl %r15b,%r14d
	subl $0x30,%r14d
	jo L_386244
L_32746:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x20(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%rbp
	leaq (L_32747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386244:
L_32745:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386245:
L_33223:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386247:
L_33467:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386264
L_33505:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_33507:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_33223
L_33509:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33511:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33475:
	cmpb $0x5A,%dl
	ja L_33478
L_33476:
	cmpb $0x41,%dl
	jb L_33478
L_33477:
	movzbl %dl,%r15d
	addl $0x20,%r15d
	movb %r15b,%dl
L_33478:
	cmpb $0x61,%dl
	jne L_33223
L_33480:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386254
L_33496:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_386253
L_33498:
	cmpl %r13d,%ecx
	jnl L_33223
L_33500:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_386251
L_33502:
	movb 0x0(%r14,%r13,1),%dl
L_33488:
	cmpb $0x5A,%dl
	ja L_33491
L_33489:
	cmpb $0x41,%dl
	jb L_33491
L_33490:
	movzbl %dl,%r15d
	addl $0x20,%r15d
	movb %r15b,%dl
L_33491:
	cmpb $0x6E,%dl
	jne L_33223
L_33493:
	movq $0x2963,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movb $0x3,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq $0x1,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386251:
L_32930:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386253:
L_32751:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386254:
L_33481:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33483:
	cmpl %r13d,%ecx
	jnl L_33223
L_33485:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33487:
	movb 0x0(%r14,%r13,1),%dl
	jmp L_33488
.p2align 0x4
L_386264:
L_33468:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_33470:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_33223
L_33472:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33474:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33475
.p2align 0x4
L_386268:
L_33382:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386302
L_33460:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33462:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_33223
L_33464:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33466:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33390:
	cmpb $0x5A,%dl
	ja L_33393
L_33391:
	cmpb $0x41,%dl
	jb L_33393
L_33392:
	movzbl %dl,%r15d
	addl $0x20,%r15d
	movb %r15b,%dl
L_33393:
	cmpb $0x6E,%dl
	jne L_33223
L_33395:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386292
L_33451:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_33453:
	cmpl %r13d,%ecx
	jnl L_33223
L_33455:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33457:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33403:
	cmpb $0x5A,%dl
	ja L_33406
L_33404:
	cmpb $0x41,%dl
	jb L_33406
L_33405:
	movzbl %dl,%r15d
	addl $0x20,%r15d
	movb %r15b,%dl
L_33406:
	cmpb $0x66,%dl
	jne L_33223
L_33408:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_470:
	cmpl $0x5,%ebx
	je L_386284
L_33409:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386279
L_33435:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33437:
	cmpl %r13d,%ecx
	jnl L_386276
L_33442:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33444:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33421:
	cmpb $0x5A,%dl
	ja L_33424
L_33422:
	cmpb $0x41,%dl
	jb L_33424
L_33423:
	movzbl %dl,%r15d
	addl $0x20,%r15d
	movb %r15b,%dl
L_33424:
	movslq %ebx,%r15
	cmpq $0x5,%r15
	jnb L_32930
L_33426:
	movq (globalObjptr+0xE4B0)(%rip),%r14
	cmpb %dl,0x0(%r14,%r15,1)
	jne L_386270
L_33431:
	incl %ebx
	jo L_32745
L_33432:
	jmp loop_470
.p2align 0x4
L_386270:
L_33427:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33428
L_33429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_33430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33430
.p2align 0x4
.long 0x0
L_33430:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
L_33428:
	movq $0x2963,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movb $0x4,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq $0x1,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386276:
L_33438:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33415
L_33440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_33441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33441
.p2align 0x4
.long 0x0
L_33441:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
L_33415:
	movq $0x2963,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movb $0x4,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq $0x1,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386279:
L_33410:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33412:
	cmpl %r13d,%ecx
	jnl L_386281
L_33418:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33420:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33421
.p2align 0x4
L_386281:
L_33413:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33415
L_33416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_33417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33417
.p2align 0x4
.long 0x0
L_33417:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	jmp L_33415
.p2align 0x4
L_386284:
L_33445:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33446
L_33447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_33448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33448
.p2align 0x4
.long 0x0
L_33448:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
L_33446:
	movq $0x2963,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movb $0x4,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq $0x1,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386292:
L_33396:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_33398:
	cmpl %r13d,%ecx
	jnl L_33223
L_33400:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33402:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33403
.p2align 0x4
L_386302:
L_33383:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33385:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_33223
L_33387:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33389:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33390
.p2align 0x4
L_386306:
L_33225:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386313
L_33375:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33377:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_33223
L_33379:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33381:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33233:
	cmpb $0x39,%dl
	ja L_33223
L_33234:
	cmpb $0x30,%dl
	jb L_33223
L_33235:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32745
L_33236:
	movl %ecx,0x18(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%rbp
	leaq (L_33237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386313:
L_33226:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33228:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_33223
L_33230:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33232:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33233
.p2align 0x4
L_386317:
L_33512:
	movb %r15b,%dl
	jmp L_32741
.p2align 0x4
L_386318:
L_33513:
	movb %r15b,%dl
	jmp L_32741
.p2align 0x4
L_386319:
L_33514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_33515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33515
.p2align 0x4
.long 0x494
L_33515:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_32738
.p2align 0x4
.long 0x521
L_32747:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32748
L_33220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_33221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33221
.p2align 0x4
.long 0x522
L_33221:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_32748:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386453
L_33211:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33213:
	movl 0x10(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386450
L_33217:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33219:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_32932:
	cmpb $0x5A,%dl
	ja L_32935
L_32933:
	cmpb $0x41,%dl
	jb L_32935
L_32934:
	movzbl %dl,%r15d
	addl $0x20,%r15d
	movb %r15b,%dl
L_32935:
	cmpb $0x2E,%dl
	je L_386432
	cmpb $0x65,%dl
	je L_386388
L_32936:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386387
L_32937:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
L_32755:
	testl %ecx,%ecx
	jnz L_386384
L_32917:
	incl %ebx
	jo L_32745
L_32918:
	cmpq $0x1,%r15
	je L_386321
L_32919:
	movl 0x0(%r15),%ecx
	movq %r15,0x18(%rbp)
	movq 0x8(%r15),%r15
	jmp L_32755
.p2align 0x4
L_386321:
L_32920:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32921
L_32925:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_32926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32926
.p2align 0x4
.long 0x4E8
L_32926:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_32921:
	movl 0x0(%rbp),%ecx
	movq 0x8(%rbp),%r14
	movq 0x10(%rbp),%r15
L_32922:
	cmpq $0x1,%r15
	je L_386380
L_32923:
	movl %ecx,0x4(%rbp)
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_32759:
	cmpq $0x1,%r14
	je L_386322
L_32760:
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movl %r15d,0x0(%rbp)
	jmp L_32759
.p2align 0x4
L_386322:
L_32761:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32762
L_32909:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32910
.p2align 0x4
.long 0x4E7
L_32910:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_32762:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_386367
L_32763:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_386366
L_32764:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%ecx
	movl 0x4(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
L_32765:
	imull $0xA,%ebx
	jo L_32766
L_32799:
	addl %ebx,%ecx
	movl %ecx,0x4(%rbp)
	jo L_386363
L_32800:
	cmpq $0x1,%r14
	je L_386323
L_32801:
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movl %ecx,%ebx
	movl %r15d,%ecx
	jmp L_32765
.p2align 0x4
L_386323:
L_32802:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32803
L_32877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_32878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32878
.p2align 0x4
.long 0x4E8
L_32878:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_32803:
	movl 0x0(%rbp),%ecx
	movl 0x4(%rbp),%ebx
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
L_32804:
	testl %ecx,%ecx
	jz L_386361
L_32874:
	negl %ebx
	jo L_386358
L_32876:
	movl %ebx,0x10(%rbp)
L_32806:
	movl 0x10(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	cmpq $0x1,0x0(%rbp)
	jne L_386333
L_32873:
	movq 0x8(%rbp),%r15
L_32774:
	cmpq $0x1,%r15
	je L_386332
L_32775:
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_386331
L_32777:
	shrq $0x1,%r14
	movl %r14d,0x0(%rbp)
L_32778:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_386330
L_32780:
	movl 0x0(%r15),%ecx
	movq %r15,0x8(%rbp)
	movq 0x8(%r15),%r15
	movl $0x0,0x4(%rbp)
.p2align 0x4,,0x7
L_32781:
	testl %ecx,%ecx
	jnz L_386328
L_32788:
	movl 0x4(%rbp),%r14d
	incl %r14d
	movl %r14d,0x8(%rbp)
	jo L_32745
L_32789:
	cmpq $0x1,%r15
	je L_386324
L_32790:
	movl 0x0(%r15),%ecx
	movl %r14d,0x4(%rbp)
	movq %r15,0x8(%rbp)
	movq 0x8(%r15),%r15
	jmp L_32781
.p2align 0x4
L_386324:
L_32791:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32792
L_32793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_32794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32794
.p2align 0x4
.long 0x26
L_32794:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_32792:
	movq $0x1,%r15
	movl 0x8(%rbp),%ecx
L_32784:
	movl 0x0(%rbp),%r14d
	subl %ecx,%r14d
	jo L_32745
L_32785:
	xorl %ebx,%ebx
	movb $0x2,%dl
	movl %r14d,%ecx
L_32772:
	movq $0x2963,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movl %ebx,0x4(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movzbl %dl,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386328:
L_32782:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32783
L_32786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_32787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32787
.p2align 0x4
.long 0x494
L_32787:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_32783:
	movq 0x8(%rbp),%r15
	movl 0x4(%rbp),%ecx
	jmp L_32784
.p2align 0x4
L_386330:
L_32779:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_386331:
L_32776:
	movl 0x4(%r14),%ebx
	movl 0x0(%r14),%ecx
	movq 0x10(%r14),%r15
	movb 0x8(%r14),%dl
	jmp L_32772
.p2align 0x4
L_386332:
L_32795:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
	movq $0x1,%r15
	xorb %dl,%dl
	jmp L_32772
.p2align 0x4
L_386333:
L_32807:
	cmpq $0x1,0x8(%rbp)
	je L_386355
L_32809:
	movq 0x0(%rbp),%r15
	andq $0x3,%r15
	jz L_386334
L_32810:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_386334:
L_32811:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x14(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_32812:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386354
.p2align 0x4,,0x7
L_32813:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386335
L_32814:
	movq %r15,0x20(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movl %r15d,0x14(%rbp)
	jmp L_32812
.p2align 0x4
L_386335:
L_32815:
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
.p2align 0x4,,0x7
L_32816:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386353
.p2align 0x4,,0x7
L_32817:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_386336
L_32818:
	movq %r15,0x18(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movl %r15d,0x14(%rbp)
	jmp L_32816
.p2align 0x4
L_386336:
L_32819:
	movl 0x14(%rbp),%ecx
	movq 0x18(%rbp),%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
.p2align 0x4,,0x7
L_32820:
	cmpq $0x1,%r15
	je L_386337
L_32821:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp L_32820
.p2align 0x4
L_386337:
L_32822:
	movq %r14,%r15
L_32823:
	testl %ecx,%ecx
	jz L_386342
L_32825:
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_386341
L_32827:
	movq %r15,0x18(%rbp)
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_32828:
	incl %ecx
	movl %ecx,0x14(%rbp)
	cmpq $0x1,%r15
	je L_386338
L_32829:
	movq 0x8(%r15),%r15
	jmp L_32828
.p2align 0x4
L_386338:
L_32830:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32831
L_32833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32834
.p2align 0x4
.long 0x27
L_32834:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_32831:
	movl 0x10(%rbp),%ecx
	addl 0x14(%rbp),%ecx
	jo L_32745
L_32832:
	movq 0x18(%rbp),%r15
	movb $0x2,%dl
	xorl %ebx,%ebx
	jmp L_32772
.p2align 0x4
L_386341:
L_32826:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_386342:
L_32836:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_386352
L_32838:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x14(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_32839:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386351
.p2align 0x4,,0x7
L_32840:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_386343
L_32841:
	movq %r15,0x18(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movl %r15d,0x14(%rbp)
	jmp L_32839
.p2align 0x4
L_386343:
L_32842:
	movq 0x18(%rbp),%r15
	movl 0x14(%rbp),%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
L_32843:
	testl %ecx,%ecx
	jnz L_386347
L_32854:
	incl %ebx
	jo L_32745
L_32855:
	cmpq $0x1,%r15
	je L_386344
L_32856:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp L_32843
.p2align 0x4
L_386344:
L_32858:
	movq 0x0(%rbp),%r15
	andq $0x3,%r15
	jz L_386345
L_32859:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_386345:
L_32860:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movq $0x1,0x18(%rbp)
	xorl %ecx,%ecx
	jmp L_32828
.p2align 0x4
L_386347:
L_32844:
	movq %r15,0x8(%rbp)
	movl %ecx,0x14(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_32845:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386350
.p2align 0x4,,0x7
L_32846:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_386348
L_32847:
	movq %r15,0x18(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movl %r15d,0x14(%rbp)
	jmp L_32845
.p2align 0x4
L_386348:
L_32849:
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_386349
L_32851:
	movq %r15,0x18(%rbp)
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
	jmp L_32828
.p2align 0x4
L_386349:
L_32850:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_386350:
L_32852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32853
.p2align 0x4
.long 0x524
L_32853:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_32846
.p2align 0x4
L_386351:
L_32861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32862
.p2align 0x4
.long 0x524
L_32862:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_32840
.p2align 0x4
L_386352:
L_32837:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_386353:
L_32863:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32864
.p2align 0x4
.long 0x524
L_32864:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_32817
.p2align 0x4
L_386354:
L_32865:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_32866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32866
.p2align 0x4
.long 0x561
L_32866:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_32813
.p2align 0x4
L_386355:
L_32868:
	movq 0x0(%rbp),%r15
	andq $0x3,%r15
	jz L_386356
L_32869:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_386356:
L_32870:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r14),%r11d
	cmpq $0x1,%r13
	je L_386357
L_32871:
	movl 0x0(%r13),%r11d
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movl %r11d,%ecx
	jmp L_32820
.p2align 0x4
L_386357:
L_32872:
	movq %r14,%r15
	movl %r11d,%ecx
	jmp L_32823
.p2align 0x4
L_386358:
L_32875:
	movq 0x0(%rbp),%r15
	movq 0x8(%rbp),%r14
L_32768:
	testl %ecx,%ecx
	jnz L_386360
L_32769:
	movb $0x4,%dl
L_32770:
	movq $0x2965,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movzbl %dl,%r11d
	movl %r11d,0x8(%r13)
	movl $0x0,0xC(%r13)
	movq $0x1,0x10(%r13)
	cmpq $0x1,%r15
	jne L_386359
L_32773:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_32774
.p2align 0x4
L_386359:
L_32771:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
	movq $0x1,%r15
	jmp L_32772
.p2align 0x4
L_386360:
L_32796:
	xorb %dl,%dl
	jmp L_32770
.p2align 0x4
L_386361:
L_32805:
	movl %ebx,0x10(%rbp)
	jmp L_32806
.p2align 0x4
L_386363:
L_32766:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32767
L_32797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_32798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32798
.p2align 0x4
.long 0x4E8
L_32798:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_32767:
	movl 0x0(%rbp),%ecx
	movq 0x8(%rbp),%r15
	movq 0x10(%rbp),%r14
	jmp L_32768
.p2align 0x4
L_386366:
L_32879:
	movl 0x4(%rbp),%ecx
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	xorl %ebx,%ebx
	jmp L_32804
.p2align 0x4
L_386367:
L_32881:
	movq 0x10(%rbp),%r15
	andq $0x3,%r15
	jz L_386368
L_32882:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_386368:
L_32883:
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movl %r14d,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_32884:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386378
.p2align 0x4,,0x7
L_32885:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_386369
L_32886:
	movq %r15,0x28(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movl %r15d,0x20(%rbp)
	jmp L_32884
.p2align 0x4
L_386369:
L_32887:
	movq 0x28(%rbp),%r15
	movl 0x20(%rbp),%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
L_32888:
	testl %ecx,%ecx
	jnz L_386374
L_32898:
	incl %ebx
	jo L_32745
L_32899:
	cmpq $0x1,%r15
	je L_386370
L_32900:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp L_32888
.p2align 0x4
L_386370:
L_32901:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32902
L_32905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32906
.p2align 0x4
.long 0x522
L_32906:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_32902:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_386371
L_32903:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%ecx
	movl 0x4(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32765
.p2align 0x4
L_386371:
L_32904:
	movl 0x4(%rbp),%ecx
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	xorl %ebx,%ebx
	jmp L_32804
.p2align 0x4
L_386374:
L_32889:
	movq %r15,0x10(%rbp)
	movl %ecx,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_32890:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386377
.p2align 0x4,,0x7
L_32891:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_386375
L_32892:
	movq %r15,0x28(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movl %r15d,0x20(%rbp)
	jmp L_32890
.p2align 0x4
L_386375:
L_32893:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_386376
L_32894:
	movq %r15,0x10(%rbp)
	movq 0x8(%r13),%r14
	movl 0x0(%r13),%ecx
	movl 0x4(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	xorl %ebx,%ebx
	jmp L_32765
.p2align 0x4
L_386376:
L_32895:
	movq %r15,0x8(%rbp)
	movl 0x4(%rbp),%ecx
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	xorl %ebx,%ebx
	jmp L_32804
.p2align 0x4
L_386377:
L_32896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_32897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32897
.p2align 0x4
.long 0x4F1
L_32897:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_32891
.p2align 0x4
L_386378:
L_32907:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_32908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32908
.p2align 0x4
.long 0x4F1
L_32908:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_32885
.p2align 0x4
L_386380:
L_32924:
	movq $0x1,%r15
L_32912:
	cmpq $0x1,%r14
	je L_386381
L_32913:
	movl %ecx,0x0(%rbp)
	movq %r15,0x8(%rbp)
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r14
	movq $0x1,0x10(%rbp)
	xorl %r15d,%r15d
	movl %ebx,%ecx
	movl %r15d,%ebx
	jmp L_32765
.p2align 0x4
L_386381:
L_32914:
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	xorl %ebx,%ebx
	jmp L_32804
.p2align 0x4
L_386384:
L_32756:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32757
L_32915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32916
.p2align 0x4
.long 0x4E7
L_32916:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_32757:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_386385
L_32758:
	movq 0x8(%r15),%r14
	movl 0x0(%rbp),%r13d
	movl %r13d,0x4(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	jmp L_32759
.p2align 0x4
L_386385:
L_32911:
	movl 0x0(%rbp),%ecx
	movq 0x8(%rbp),%r14
	movq 0x18(%rbp),%r13
	xchgq %r13,%r15
	jmp L_32912
.p2align 0x4
L_386387:
L_32938:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386388:
L_33104:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386427
L_33200:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33202:
	cmpl %r13d,%ecx
	jnl L_386424
L_33206:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33208:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33114:
	cmpb $0x2B,%dl
	je L_386408
	cmpb $0x2D,%dl
	je neg_1
	cmpb $0x7E,%dl
	je neg_3
L_33115:
	cmpb $0x39,%dl
	ja L_386392
L_33116:
	cmpb $0x30,%dl
	jb L_386390
L_33117:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32745
L_33118:
	movl %ecx,0x28(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_33119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386390:
L_33125:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386391
L_33126:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386391:
L_33127:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386392:
L_33128:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386393
L_33129:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386393:
L_33130:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
neg_3:
neg_1:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386403
L_33191:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_33193:
	cmpl %r13d,%ecx
	jnl L_386400
L_33197:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33199:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33175:
	cmpb $0x39,%dl
	ja L_386397
L_33176:
	cmpb $0x30,%dl
	jb L_386395
L_33177:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32745
L_33178:
	movl %ecx,0x28(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_33179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386395:
L_33185:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386396
L_33186:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386396:
L_33187:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386397:
L_33188:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386398
L_33189:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386398:
L_33190:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386400:
L_33194:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386401
L_33195:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386401:
L_33196:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386403:
L_33166:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_33168:
	cmpl %r13d,%ecx
	jnl L_386405
L_33172:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33174:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33175
.p2align 0x4
L_386405:
L_33169:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386406
L_33170:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386406:
L_33171:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386408:
L_33131:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386418
L_33157:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_33159:
	cmpl %r13d,%ecx
	jnl L_386415
L_33163:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33165:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33141:
	cmpb $0x39,%dl
	ja L_386412
L_33142:
	cmpb $0x30,%dl
	jb L_386410
L_33143:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32745
L_33144:
	movl %ecx,0x28(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_33145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386410:
L_33151:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386411
L_33152:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386411:
L_33153:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386412:
L_33154:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386413
L_33155:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386413:
L_33156:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386415:
L_33160:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386416
L_33161:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386416:
L_33162:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386418:
L_33132:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33134:
	cmpl %r13d,%ecx
	jnl L_386420
L_33138:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33140:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33141
.p2align 0x4
L_386420:
L_33135:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386421
L_33136:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386421:
L_33137:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386424:
L_33203:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386425
L_33204:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386425:
L_33205:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386427:
L_33105:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_33107:
	cmpl %r13d,%ecx
	jnl L_386429
L_33111:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33113:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33114
.p2align 0x4
L_386429:
L_33108:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386430
L_33109:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386430:
L_33110:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386432:
L_32939:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386442
L_33095:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_33097:
	cmpl %r13d,%ecx
	jnl L_386439
L_33101:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33103:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_32949:
	cmpb $0x39,%dl
	ja L_386436
L_32950:
	cmpb $0x30,%dl
	jb L_386434
L_32951:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32745
L_32952:
	movl %ecx,0x28(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_32953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386434:
L_33089:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386435
L_33090:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386435:
L_33091:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386436:
L_33092:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386437
L_33093:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386437:
L_33094:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386439:
L_33098:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386440
L_33099:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386440:
L_33100:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386442:
L_32940:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_32942:
	cmpl %r13d,%ecx
	jnl L_386444
L_32946:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_32948:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_32949
.p2align 0x4
L_386444:
L_32943:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386445
L_32944:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386445:
L_32945:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386450:
L_33214:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386451
L_33215:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	xchgl %r13d,%ecx
	jmp L_32755
.p2align 0x4
L_386451:
L_33216:
	xorl %r13d,%r13d
	movq $0x1,%r11
	movq $0x1,%r15
	xchgq %r11,%r14
	xchgl %r13d,%ecx
	jmp L_32922
.p2align 0x4
L_386453:
L_32749:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_32752:
	movl 0x10(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386455
L_32928:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_32931:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_32932
.p2align 0x4
L_386455:
L_32753:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386456
L_32754:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	xchgl %r13d,%ecx
	jmp L_32755
.p2align 0x4
L_386456:
L_32927:
	xorl %r13d,%r13d
	movq $0x1,%r11
	movq $0x1,%r15
	xchgq %r11,%r14
	xchgl %r13d,%ecx
	jmp L_32922
.p2align 0x4
.long 0x521
L_33237:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33238
L_33371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_33372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33372
.p2align 0x4
.long 0x522
L_33372:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_33238:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386510
L_33362:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33364:
	movl 0x10(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386507
L_33368:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33370:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33248:
	cmpb $0x5A,%dl
	ja L_33251
L_33249:
	cmpb $0x41,%dl
	jb L_33251
L_33250:
	movzbl %dl,%r15d
	addl $0x20,%r15d
	movb %r15b,%dl
L_33251:
	cmpb $0x65,%dl
	jne L_386502
L_33255:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386497
L_33351:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_33353:
	cmpl %r13d,%ecx
	jnl L_386494
L_33357:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33359:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33265:
	cmpb $0x2B,%dl
	je L_386478
	cmpb $0x2D,%dl
	je neg_2
	cmpb $0x7E,%dl
	je neg_5
L_33266:
	cmpb $0x39,%dl
	ja L_386462
L_33267:
	cmpb $0x30,%dl
	jb L_386460
L_33268:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32745
L_33269:
	movl %ecx,0x28(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_33270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386460:
L_33276:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386461
L_33277:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386461:
L_33278:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32912
.p2align 0x4
L_386462:
L_33279:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386463
L_33280:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386463:
L_33281:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32912
.p2align 0x4
neg_5:
neg_2:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386473
L_33342:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_33344:
	cmpl %r13d,%ecx
	jnl L_386470
L_33348:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33350:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33326:
	cmpb $0x39,%dl
	ja L_386467
L_33327:
	cmpb $0x30,%dl
	jb L_386465
L_33328:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32745
L_33329:
	movl %ecx,0x28(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_33330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386465:
L_33336:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386466
L_33337:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386466:
L_33338:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32912
.p2align 0x4
L_386467:
L_33339:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386468
L_33340:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386468:
L_33341:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32912
.p2align 0x4
L_386470:
L_33345:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386471
L_33346:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386471:
L_33347:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32912
.p2align 0x4
L_386473:
L_33317:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33319:
	cmpl %r13d,%ecx
	jnl L_386475
L_33323:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33325:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33326
.p2align 0x4
L_386475:
L_33320:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386476
L_33321:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386476:
L_33322:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32912
.p2align 0x4
L_386478:
L_33282:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386488
L_33308:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_33310:
	cmpl %r13d,%ecx
	jnl L_386485
L_33314:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33316:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33292:
	cmpb $0x39,%dl
	ja L_386482
L_33293:
	cmpb $0x30,%dl
	jb L_386480
L_33294:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32745
L_33295:
	movl %ecx,0x28(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_33296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386480:
L_33302:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386481
L_33303:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386481:
L_33304:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32912
.p2align 0x4
L_386482:
L_33305:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386483
L_33306:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386483:
L_33307:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32912
.p2align 0x4
L_386485:
L_33311:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386486
L_33312:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386486:
L_33313:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32912
.p2align 0x4
L_386488:
L_33283:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33285:
	cmpl %r13d,%ecx
	jnl L_386490
L_33289:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33291:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33292
.p2align 0x4
L_386490:
L_33286:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386491
L_33287:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386491:
L_33288:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32912
.p2align 0x4
L_386494:
L_33354:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386495
L_33355:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386495:
L_33356:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32912
.p2align 0x4
L_386497:
L_33256:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_33258:
	cmpl %r13d,%ecx
	jnl L_386499
L_33262:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33264:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33265
.p2align 0x4
L_386499:
L_33259:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386500
L_33260:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386500:
L_33261:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32912
.p2align 0x4
L_386502:
L_33252:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386503
L_33253:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386503:
L_33254:
	xorl %ecx,%ecx
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32912
.p2align 0x4
L_386507:
L_33365:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386508
L_33366:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386508:
L_33367:
	xorl %r13d,%r13d
	movq $0x1,%r14
	movq $0x1,%r11
	xchgq %r11,%r15
	xchgl %r13d,%ecx
	jmp L_32912
.p2align 0x4
L_386510:
L_33239:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33241:
	movl 0x10(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386512
L_33245:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33247:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33248
.p2align 0x4
L_386512:
L_33242:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386513
L_33243:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386513:
L_33244:
	xorl %r13d,%r13d
	movq $0x1,%r14
	movq $0x1,%r11
	xchgq %r11,%r15
	xchgl %r13d,%ecx
	jmp L_32912
.p2align 0x4
.long 0x48F
L_33119:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33120
L_33123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_33124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33124
.p2align 0x4
.long 0x60F
L_33124:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_33120:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386516
L_33121:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386516:
L_33122:
	xorl %ecx,%ecx
	movq 0x28(%rbp),%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
.long 0x48F
L_33179:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33180
L_33183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_33184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33184
.p2align 0x4
.long 0x60F
L_33184:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_33180:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386518
L_33181:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x1,0x0(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386518:
L_33182:
	movl $0x1,%ecx
	movq 0x28(%rbp),%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
.long 0x48F
L_33145:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33146
L_33149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_33150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33150
.p2align 0x4
.long 0x60F
L_33150:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_33146:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386520
L_33147:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386520:
L_33148:
	xorl %ecx,%ecx
	movq 0x28(%rbp),%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
.long 0x4E0
L_32953:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32954
L_33087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_33088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33088
.p2align 0x4
.long 0x72F
L_33088:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_32954:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386573
L_33078:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33080:
	movl 0x10(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386570
L_33084:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33086:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_32964:
	cmpb $0x5A,%dl
	ja L_32967
L_32965:
	cmpb $0x41,%dl
	jb L_32967
L_32966:
	movzbl %dl,%r15d
	addl $0x20,%r15d
	movb %r15b,%dl
L_32967:
	cmpb $0x65,%dl
	jne L_386565
L_32971:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386560
L_33067:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_33069:
	cmpl %r13d,%ecx
	jnl L_386557
L_33073:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33075:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_32981:
	cmpb $0x2B,%dl
	je L_386541
	cmpb $0x2D,%dl
	je neg_0
	cmpb $0x7E,%dl
	je neg_7
L_32982:
	cmpb $0x39,%dl
	ja L_386525
L_32983:
	cmpb $0x30,%dl
	jb L_386523
L_32984:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32745
L_32985:
	movl %ecx,0x30(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_32986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386523:
L_32992:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386524
L_32993:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386524:
L_32994:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386525:
L_32995:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386526
L_32996:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386526:
L_32997:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
neg_7:
neg_0:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386536
L_33058:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33060:
	cmpl %r13d,%ecx
	jnl L_386533
L_33064:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33066:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33042:
	cmpb $0x39,%dl
	ja L_386530
L_33043:
	cmpb $0x30,%dl
	jb L_386528
L_33044:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32745
L_33045:
	movl %ecx,0x30(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_33046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386528:
L_33052:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386529
L_33053:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386529:
L_33054:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386530:
L_33055:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386531
L_33056:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386531:
L_33057:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386533:
L_33061:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386534
L_33062:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386534:
L_33063:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386536:
L_33033:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33035:
	cmpl %r13d,%ecx
	jnl L_386538
L_33039:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33041:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33042
.p2align 0x4
L_386538:
L_33036:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386539
L_33037:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386539:
L_33038:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386541:
L_32998:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386551
L_33024:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_32751
L_33026:
	cmpl %r13d,%ecx
	jnl L_386548
L_33030:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33032:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_33008:
	cmpb $0x39,%dl
	ja L_386545
L_33009:
	cmpb $0x30,%dl
	jb L_386543
L_33010:
	movzbl %dl,%r15d
	subl $0x30,%r15d
	jo L_32745
L_33011:
	movl %ecx,0x30(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_33012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp digitStar_0
.p2align 0x4
L_386543:
L_33018:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386544
L_33019:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386544:
L_33020:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386545:
L_33021:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386546
L_33022:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386546:
L_33023:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386548:
L_33027:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386549
L_33028:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386549:
L_33029:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386551:
L_32999:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_33001:
	cmpl %r13d,%ecx
	jnl L_386553
L_33005:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_33007:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_33008
.p2align 0x4
L_386553:
L_33002:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386554
L_33003:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386554:
L_33004:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386557:
L_33070:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386558
L_33071:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386558:
L_33072:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386560:
L_32972:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_32974:
	cmpl %r13d,%ecx
	jnl L_386562
L_32978:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_32980:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_32981
.p2align 0x4
L_386562:
L_32975:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386563
L_32976:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386563:
L_32977:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386565:
L_32968:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386566
L_32969:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386566:
L_32970:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
L_386570:
L_33081:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386571
L_33082:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	xchgl %r13d,%ecx
	jmp L_32755
.p2align 0x4
L_386571:
L_33083:
	xorl %r13d,%r13d
	movq $0x1,%r11
	movq 0x20(%rbp),%r15
	xchgq %r11,%r14
	xchgl %r13d,%ecx
	jmp L_32922
.p2align 0x4
L_386573:
L_32955:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_32751
L_32957:
	movl 0x10(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386575
L_32961:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_32930
L_32963:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_32964
.p2align 0x4
L_386575:
L_32958:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386576
L_32959:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movl $0x0,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	xchgl %r13d,%ecx
	jmp L_32755
.p2align 0x4
L_386576:
L_32960:
	xorl %r13d,%r13d
	movq $0x1,%r11
	movq 0x20(%rbp),%r15
	xchgq %r11,%r14
	xchgl %r13d,%ecx
	jmp L_32922
.p2align 0x4
.long 0x48F
L_33270:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33271
L_33274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_33275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33275
.p2align 0x4
.long 0x60F
L_33275:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_33271:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386579
L_33272:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386579:
L_33273:
	xorl %ecx,%ecx
	movq 0x28(%rbp),%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32912
.p2align 0x4
.long 0x48F
L_33330:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33331
L_33334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_33335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33335
.p2align 0x4
.long 0x60F
L_33335:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_33331:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386581
L_33332:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x1,0x4(%rbp)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386581:
L_33333:
	movl $0x1,%ecx
	movq 0x28(%rbp),%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32912
.p2align 0x4
.long 0x48F
L_33296:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33297
L_33300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_33301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33301
.p2align 0x4
.long 0x60F
L_33301:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_33297:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386583
L_33298:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_32759
.p2align 0x4
L_386583:
L_33299:
	xorl %ecx,%ecx
	movq 0x28(%rbp),%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_32912
.p2align 0x4
.long 0x519
L_32986:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32987
L_32990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_32991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32991
.p2align 0x4
.long 0x90F
L_32991:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_32987:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386585
L_32988:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386585:
L_32989:
	xorl %ecx,%ecx
	movq 0x30(%rbp),%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
.long 0x519
L_33046:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33047
L_33050:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_33051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33051
.p2align 0x4
.long 0x90F
L_33051:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_33047:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386587
L_33048:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x1,0x0(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386587:
L_33049:
	movl $0x1,%ecx
	movq 0x30(%rbp),%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32922
.p2align 0x4
.long 0x519
L_33012:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33013
L_33016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_33017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33017
.p2align 0x4
.long 0x90F
L_33017:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_33013:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_386589
L_33014:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	movl $0x0,0x0(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%rbp)
	xorl %ebx,%ebx
	jmp L_32755
.p2align 0x4
L_386589:
L_33015:
	xorl %ecx,%ecx
	movq 0x30(%rbp),%r13
	movq 0x20(%rbp),%r15
	xchgq %r13,%r14
	jmp L_32922
.text
.p2align 0x4
.globl digitStar_0
.hidden digitStar_0
digitStar_0:
L_33516:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_33517
L_33559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_33560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33560
.p2align 0x4
.long 0x4E8
L_33560:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_33517:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1D,%r14
	je L_386604
L_33558:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_33544:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386603
.p2align 0x4,,0x7
L_33545:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_33522
L_33547:
	movl 0x20(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386601
L_33549:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_33535
L_33551:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%ebx
	incl %ebx
	movq 0x28(%rbp),%r15
L_33537:
	cmpb $0x39,%dl
	ja done_2
L_33538:
	cmpb $0x30,%dl
	jb done_24
L_33539:
	movzbl %dl,%ecx
	subl $0x30,%ecx
	jo L_386599
L_33541:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1F1D,%r13
	je L_386591
L_33543:
	movl %ebx,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	jmp L_33544
.p2align 0x4
L_386591:
L_33542:
	movl %ebx,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
.p2align 0x4,,0x7
L_33519:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386598
.p2align 0x4,,0x7
L_33520:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_386597
L_33523:
	movl 0x20(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_386593
L_33533:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_386592
L_33536:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%ebx
	incl %ebx
	movq 0x28(%rbp),%r15
	jmp L_33537
.p2align 0x4
L_386592:
L_33535:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386593:
L_33524:
	movl %ecx,0x0(%rbp)
	movq 0x28(%rbp),%r15
done_1:
	cmpq $0x1,%r15
	je L_386596
L_33525:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x4(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_33526:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386595
.p2align 0x4,,0x7
L_33527:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_386594
L_33528:
	movq %r15,0x10(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movl %r15d,0x4(%rbp)
	jmp L_33526
.p2align 0x4
L_386594:
L_33529:
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386595:
L_33530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_33531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33531
.p2align 0x4
.long 0x4E8
L_33531:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_33527
.p2align 0x4
L_386596:
L_33532:
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386597:
L_33522:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386598:
L_33556:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_33557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33557
.p2align 0x4
.long 0x4F2
L_33557:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_33520
.p2align 0x4
L_386599:
L_33540:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
done_24:
done_2:
	movl %ecx,0x0(%rbp)
	jmp done_1
.p2align 0x4
L_386601:
L_33548:
	movl %ecx,0x0(%rbp)
	movq 0x28(%rbp),%r15
	jmp done_1
.p2align 0x4
L_386603:
L_33552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_33553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33553
.p2align 0x4
.long 0x4F2
L_33553:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_33545
.p2align 0x4
L_386604:
L_33518:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_33519
.text
.p2align 0x4
.globl x_1258
.hidden x_1258
x_1258:
L_33561:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_33562
L_33663:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_33664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33664
.p2align 0x4
.long 0x63B
L_33664:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_33562:
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_33563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x910
L_33563:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_386611
L_33565:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_33566:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_33567
L_33568:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_33567
L_33569:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_386608
L_33571:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_386607
L_33574:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_33575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
L_386607:
L_33573:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386608:
L_33567:
	movq (globalObjptr+0x1B18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386611:
L_33564:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x911
L_33575:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_386612
L_33576:
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x48(%rbp)
	movl $0x8,%ecx
	movq $0x1,0x58(%rbp)
L_33577:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_33578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_386612:
L_33662:
	movl $0x8,%ecx
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_33577
.p2align 0x4
.long 0x912
L_33578:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33579
L_33660:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33661
.p2align 0x4
.long 0x91D
L_33661:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_33579:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_386613
L_33580:
	movq %r15,0x58(%rbp)
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_33577
.p2align 0x4
L_386613:
L_33581:
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_33582:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386615
.p2align 0x4,,0x7
L_33583:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_386614
L_33584:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_33582
.p2align 0x4
L_386614:
L_33585:
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
L_33586:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_33587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386615:
L_33658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33659
.p2align 0x4
.long 0x802
L_33659:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_33583
.p2align 0x4
.long 0x913
L_33587:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_33573
L_33589:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386619
L_33590:
	movq 0x50(%rbp),%r15
	movq 0x10(%r13),%r14
	cmpq %r14,0x10(%r15)
	je L_386618
L_33591:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_386617
L_33592:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_33586
.p2align 0x4
L_386617:
L_33593:
	movq (globalObjptr+0xBDB0)(%rip),%r14
	movq %r14,0x0(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386618:
L_33594:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_33595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386619:
L_33657:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x914
L_33595:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33596
L_33655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_33656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33656
.p2align 0x4
.long 0x91C
L_33656:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_33596:
	movl 0x48(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_386637
	cmpl $0x10,%r15d
	je L_386636
	cmpl $0x20,%r15d
	je L_386621
L_33597:
	movq (globalObjptr+0x16E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386621:
L_33654:
	movb $0x0,0x48(%rbp)
L_33599:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x50(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	movq %r13,0x60(%rbp)
	cmpq %r13,%r14
	je L_386622
L_33600:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386622:
L_33601:
	movq 0x60(%rbp),%r15
	testq %r15,%r15
	jz L_386635
L_33602:
	cmpq $0x7FFFFFFF,%r15
	ja L_386634
L_33603:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33604
L_33649:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33650
.p2align 0x4
.long 0x915
L_33650:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_33604:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA8F,%rcx
	movq 0x60(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33605
.p2align 0x4
.long 0x915
L_33605:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_33606:
	movq $0x0,0x70(%rbp)
loop_471:
	movq 0x60(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_386623
L_33607:
	movq 0x68(%rbp),%r15
	movq $0xEC9,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C93,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386623:
L_33608:
	movq 0x70(%rbp),%r11
	movl %r11d,%r10d
	movslq %r10d,%r15
	cmpq 0x50(%rbp),%r15
	jnb L_33573
L_33610:
	movq 0x30(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq %r10,0x78(%rbp)
	movq 0x38(%rbp),%r11
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r9
	movq %r9,0x80(%rbp)
	movq %r10,%r11
	andq $0x1,%r11
	andq $0x1,%r11
	jz L_386630
L_33611:
	cmpq $0x1,%r10
	jl L_33618
L_33613:
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movb 0x48(%rbp),%r8b
	cmpb $0x1,%r8b
	je L_386628
	cmpb $0x2,%r8b
	je L_386627
L_33614:
	movq %r10,%r13
L_33615:
	movq 0x78(%rbp),%r11
	movq %r11,%r10
	andq %r13,%r10
	andq $0x1,%r10
	jz L_386625
L_33616:
	cmpq %r13,%r11
	jl L_386624
L_33618:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_33619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ordToString_0
.p2align 0x4
L_386624:
L_33627:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_33628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386625:
L_33638:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r11,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_33639:
	cmpl $0x0,%eax
	jl L_33627
	jmp L_33618
.p2align 0x4
L_386627:
L_33643:
	movq %r9,%r13
	jmp L_33615
.p2align 0x4
L_386628:
L_33642:
	movq %r11,%r13
	jmp L_33615
.p2align 0x4
L_386630:
L_33645:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r10,%rsi
	movq $0x1,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_33646:
	cmpl $0x0,%eax
	jg L_33618
	jmp L_33613
.p2align 0x4
L_386634:
L_33651:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386635:
L_33652:
	movq (globalObjptr+0x6EB0)(%rip),%r14
	movq %r14,0x68(%rbp)
	jmp L_33606
.p2align 0x4
L_386636:
L_33653:
	movb $0x1,0x48(%rbp)
	jmp L_33599
.p2align 0x4
L_386637:
L_33598:
	movb $0x2,0x48(%rbp)
	jmp L_33599
.p2align 0x4
.long 0x916
L_33619:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33620
L_33635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_33636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33636
.p2align 0x4
.long 0x91B
L_33636:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_33620:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE488)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE490)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_33621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x916
L_33628:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl %r15d,0x98(%rbp)
	movq $0x3,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_33629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x916
L_33621:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_33622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x918
L_33629:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_33630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x916
L_33622:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_386640
L_33624:
	movl %r14d,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_33625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386640:
L_33623:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x919
L_33630:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33631
L_33632:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_33633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33633
.p2align 0x4
.long 0x91A
L_33633:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_33631:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_471
.p2align 0x4
.long 0x917
L_33625:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_33627
L_33634:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1257
.hidden x_1257
x_1257:
L_33665:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_33666
L_33737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_33738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33738
.p2align 0x4
.long 0x657
L_33738:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_33666:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_33667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x8BA
L_33667:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_386644
L_33668:
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x40(%rbp)
	movl $0x8,%ecx
	movq $0x1,0x50(%rbp)
L_33669:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_33670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_386644:
L_33736:
	movl $0x8,%ecx
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_33669
.p2align 0x4
.long 0x8BB
L_33670:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33671
L_33734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_33735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33735
.p2align 0x4
.long 0x8C1
L_33735:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_33671:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_386645
L_33672:
	movq %r15,0x50(%rbp)
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_33669
.p2align 0x4
L_386645:
L_33673:
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_33674:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386647
.p2align 0x4,,0x7
L_33675:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_386646
L_33676:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_33674
.p2align 0x4
L_386646:
L_33677:
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
L_33678:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386647:
L_33732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_33733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33733
.p2align 0x4
.long 0x8C0
L_33733:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_33675
.p2align 0x4
.long 0x8BC
L_33679:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movslq %r15d,%r14
	movq 0x18(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_386652
L_33681:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386651
L_33682:
	movq 0x48(%rbp),%r15
	movq 0x10(%r13),%r14
	cmpq %r14,0x10(%r15)
	je L_386650
L_33683:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_386649
L_33684:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_33678
.p2align 0x4
L_386649:
L_33685:
	movq (globalObjptr+0xBDB0)(%rip),%r14
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386650:
L_33686:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386651:
L_33731:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386652:
L_33680:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C4
L_33687:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpl $0x8,%r15d
	je L_386663
	cmpl $0x10,%r15d
	je L_386662
	cmpl $0x20,%r15d
	je L_386653
L_33688:
	movq (globalObjptr+0x16E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386653:
L_33730:
	xorb %dl,%dl
L_33690:
	movq 0x30(%rbp),%r11
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x28(%rbp),%r11
	movq %r11,%r10
	andq $0x1,%r10
	andq $0x1,%r10
	jz L_386660
L_33691:
	cmpq $0x1,%r11
	jl L_33698
L_33693:
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	cmpb $0x1,%dl
	je L_386658
	cmpb $0x2,%dl
	je L_386657
L_33694:
	movq %r10,%r13
L_33695:
	movq 0x28(%rbp),%r11
	movq %r11,%r10
	andq %r13,%r10
	andq $0x1,%r10
	jz L_386655
L_33696:
	cmpq %r13,%r11
	jl L_386654
L_33698:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ordToString_0
.p2align 0x4
L_386654:
L_33707:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386655:
L_33718:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r11,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_33719:
	cmpl $0x0,%eax
	jl L_33707
	jmp L_33698
.p2align 0x4
L_386657:
L_33723:
	movq %r9,%r13
	jmp L_33695
.p2align 0x4
L_386658:
L_33722:
	movq %r11,%r13
	jmp L_33695
.p2align 0x4
L_386660:
L_33725:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r11,%rsi
	movq $0x1,%rdi
	xorq %rax,%rax
	movb %dl,%bl
	call IntInf_compare
L_33726:
	cmpl $0x0,%eax
	jg L_33698
	movb %bl,%dl
	jmp L_33693
.p2align 0x4
L_386662:
L_33729:
	movb $0x1,%dl
	jmp L_33690
.p2align 0x4
L_386663:
L_33689:
	movb $0x2,%dl
	jmp L_33690
.p2align 0x4
.long 0x8BD
L_33699:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33700
L_33715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_33716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33716
.p2align 0x4
.long 0x77A
L_33716:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_33700:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE488)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE490)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x8BE
L_33708:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_33709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8BD
L_33701:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BF
L_33709:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_33710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x8BD
L_33702:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_386665
L_33704:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_33705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386665:
L_33703:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61B
L_33710:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33711
L_33712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_33713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33713
.p2align 0x4
.long 0x61C
L_33713:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_33711:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C5
L_33705:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_33707
L_33714:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1256
.hidden x_1256
x_1256:
L_33739:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_33740
L_33791:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_33792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33792
.p2align 0x4
.long 0x80A
L_33792:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_33740:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x8A6
L_33741:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_386670
L_33742:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386669
L_33743:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
L_33744:
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_33745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386669:
L_33752:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386670:
L_33788:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_33752
L_33789:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_33744
.p2align 0x4
.long 0x8EE
L_33745:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_386675
L_33747:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386674
L_33748:
	movq 0x58(%rbp),%r15
	movq 0x10(%r13),%r14
	cmpq %r14,0x10(%r15)
	je L_386673
L_33749:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_33752
L_33750:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_33744
.p2align 0x4
L_386673:
L_33753:
	movl $0x0,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_33754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
L_386674:
L_33786:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386675:
L_33746:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8EF
L_33754:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x10(%rbp)
	jnz L_386676
L_33755:
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
L_386676:
L_33783:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8F0
L_33756:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BE
L_33784:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_33785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8F1
L_33757:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_33758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x8BF
L_33785:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_33773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x8F2
L_33758:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33759
L_33781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_33782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33782
.p2align 0x4
.long 0x7AC
L_33782:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_33759:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_33760:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_33761
L_33762:
	cmpq $0x1,%r14
	je L_386677
L_33763:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_33760
.p2align 0x4
L_386677:
L_33764:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33765
L_33779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_33780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33780
.p2align 0x4
.long 0x8F6
L_33780:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_33765:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386679
L_33766:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_33767:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386678
L_33768:
	movl %r13d,0x0(%r15)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_33769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386678:
L_33761:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386679:
L_33778:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_33767
.p2align 0x4
.long 0x61B
L_33773:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33774
L_33775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_33776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33776
.p2align 0x4
.long 0x61C
L_33776:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_33774:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F3
L_33769:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_386684
L_33770:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_33771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386684:
L_33777:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F4
L_33771:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_33772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8F5
L_33772:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x68(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.text
.p2align 0x4
.globl x_1255
.hidden x_1255
x_1255:
L_33793:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_33794
L_33849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_33850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33850
.p2align 0x4
.long 0x61D
L_33850:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_33794:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_33795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x8EE
L_33795:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33796
L_33847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33848
.p2align 0x4
.long 0x900
L_33848:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_33796:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_386688
L_33797:
L_33798:
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%rbp),%r15
	cmpq 0x10(%r15),%r14
	je L_386687
L_33799:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_386686
L_33800:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x28(%rbp)
L_33801:
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_33802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386686:
L_33809:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386687:
L_33845:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386688:
L_33846:
	movq 0x58(%rbp),%r14
	xchgq %r14,%r15
	jmp L_33798
.p2align 0x4
.long 0x8EE
L_33802:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_386693
L_33804:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386692
L_33805:
	movq 0x10(%r13),%r15
	cmpq %r15,0x58(%rbp)
	je L_386691
L_33806:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_33809
L_33807:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_33801
.p2align 0x4
L_386691:
L_33810:
	movl $0x1,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_33811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
L_386692:
L_33843:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386693:
L_33803:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8FB
L_33811:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x10(%rbp)
	jnz L_386694
L_33812:
	movq 0x48(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
L_386694:
L_33840:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_33841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8FC
L_33813:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_33814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x510
L_33841:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_33842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8FD
L_33814:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_33815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x8FF
L_33842:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_33830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7A8
L_33815:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33816
L_33838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_33839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33839
.p2align 0x4
.long 0x7AC
L_33839:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_33816:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_33817:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_33818
L_33819:
	cmpq $0x1,%r14
	je L_386695
L_33820:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_33817
.p2align 0x4
L_386695:
L_33821:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33822
L_33836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_33837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33837
.p2align 0x4
.long 0x8FE
L_33837:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_33822:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386697
L_33823:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_33824:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386696
L_33825:
	movl %r13d,0x0(%r15)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_33826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386696:
L_33818:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386697:
L_33835:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_33824
.p2align 0x4
.long 0x51A
L_33830:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33831
L_33832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_33833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33833
.p2align 0x4
.long 0x488
L_33833:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_33831:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C6
L_33826:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_386702
L_33827:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_33828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386702:
L_33834:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7B4
L_33828:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_33829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x79B
L_33829:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_33830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.text
.p2align 0x4
.globl x_1254
.hidden x_1254
x_1254:
L_33851:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_33852
L_33953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_33954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33954
.p2align 0x4
.long 0x63B
L_33954:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_33852:
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_33853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x910
L_33853:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_386708
L_33855:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_33856:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_33857
L_33858:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_33857
L_33859:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_386705
L_33861:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_386704
L_33864:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_33865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
L_386704:
L_33863:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386705:
L_33857:
	movq (globalObjptr+0x1B18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386708:
L_33854:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x911
L_33865:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_386709
L_33866:
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x48(%rbp)
	movl $0x8,%ecx
	movq $0x1,0x58(%rbp)
L_33867:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_33868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_386709:
L_33952:
	movl $0x8,%ecx
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_33867
.p2align 0x4
.long 0x912
L_33868:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33869
L_33950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33951
.p2align 0x4
.long 0x91D
L_33951:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_33869:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_386710
L_33870:
	movq %r15,0x58(%rbp)
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_33867
.p2align 0x4
L_386710:
L_33871:
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_33872:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386712
.p2align 0x4,,0x7
L_33873:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_386711
L_33874:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_33872
.p2align 0x4
L_386711:
L_33875:
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
L_33876:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_33877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386712:
L_33948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33949
.p2align 0x4
.long 0x802
L_33949:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_33873
.p2align 0x4
.long 0x913
L_33877:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_33863
L_33879:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386716
L_33880:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq %r14,0x10(%r13)
	je L_386715
L_33881:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_386714
L_33882:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_33876
.p2align 0x4
L_386714:
L_33883:
	movq (globalObjptr+0xBDB0)(%rip),%r14
	movq %r14,0x0(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386715:
L_33884:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_33885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386716:
L_33947:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x914
L_33885:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33886
L_33945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_33946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33946
.p2align 0x4
.long 0x91C
L_33946:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_33886:
	movl 0x48(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_386734
	cmpl $0x10,%r15d
	je L_386733
	cmpl $0x20,%r15d
	je L_386718
L_33887:
	movq (globalObjptr+0x16E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386718:
L_33944:
	movb $0x0,0x48(%rbp)
L_33889:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x50(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	movq %r13,0x60(%rbp)
	cmpq %r14,%r13
	je L_386719
L_33890:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386719:
L_33891:
	movq 0x60(%rbp),%r15
	testq %r15,%r15
	jz L_386732
L_33892:
	cmpq $0x7FFFFFFF,%r15
	ja L_386731
L_33893:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33894
L_33939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33940
.p2align 0x4
.long 0x915
L_33940:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_33894:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA8F,%rcx
	movq 0x60(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_33895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33895
.p2align 0x4
.long 0x915
L_33895:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_33896:
	movq $0x0,0x70(%rbp)
loop_472:
	movq 0x60(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_386720
L_33897:
	movq 0x68(%rbp),%r15
	movq $0xEC9,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C93,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386720:
L_33898:
	movq 0x70(%rbp),%r11
	movl %r11d,%r10d
	movslq %r10d,%r15
	cmpq 0x50(%rbp),%r15
	jnb L_33863
L_33900:
	movq 0x30(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq %r10,0x78(%rbp)
	movq 0x38(%rbp),%r11
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r9
	movq %r9,0x80(%rbp)
	movq %r10,%r11
	andq $0x1,%r11
	andq $0x1,%r11
	jz L_386727
L_33901:
	cmpq $0x1,%r10
	jl L_33908
L_33903:
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movb 0x48(%rbp),%r8b
	cmpb $0x1,%r8b
	je L_386725
	cmpb $0x2,%r8b
	je L_386724
L_33904:
	movq %r10,%r13
L_33905:
	movq 0x78(%rbp),%r11
	movq %r11,%r10
	andq %r13,%r10
	andq $0x1,%r10
	jz L_386722
L_33906:
	cmpq %r13,%r11
	jl L_386721
L_33908:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_33909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ordToString_0
.p2align 0x4
L_386721:
L_33917:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_33918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386722:
L_33928:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r11,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_33929:
	cmpl $0x0,%eax
	jl L_33917
	jmp L_33908
.p2align 0x4
L_386724:
L_33933:
	movq %r9,%r13
	jmp L_33905
.p2align 0x4
L_386725:
L_33932:
	movq %r11,%r13
	jmp L_33905
.p2align 0x4
L_386727:
L_33935:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r10,%rsi
	movq $0x1,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_33936:
	cmpl $0x0,%eax
	jg L_33908
	jmp L_33903
.p2align 0x4
L_386731:
L_33941:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386732:
L_33942:
	movq (globalObjptr+0x4FA8)(%rip),%r14
	movq %r14,0x68(%rbp)
	jmp L_33896
.p2align 0x4
L_386733:
L_33943:
	movb $0x1,0x48(%rbp)
	jmp L_33889
.p2align 0x4
L_386734:
L_33888:
	movb $0x2,0x48(%rbp)
	jmp L_33889
.p2align 0x4
.long 0x916
L_33909:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33910
L_33925:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_33926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33926
.p2align 0x4
.long 0x91B
L_33926:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_33910:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE488)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE490)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_33911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x916
L_33918:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl %r15d,0x98(%rbp)
	movq $0x3,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_33919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x916
L_33911:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_33912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x918
L_33919:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_33920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x916
L_33912:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_386737
L_33914:
	movl %r14d,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_33915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386737:
L_33913:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x919
L_33920:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33921
L_33922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_33923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33923
.p2align 0x4
.long 0x91A
L_33923:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_33921:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_472
.p2align 0x4
.long 0x917
L_33915:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_33917
L_33924:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1253
.hidden x_1253
x_1253:
L_33955:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_33956
L_34001:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_34002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34002
.p2align 0x4
.long 0x646
L_34002:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_33956:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_33957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x4ED
L_33957:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	je L_386744
L_33958:
	movq (globalObjptr+0x9E8)(%rip),%r14
	movb $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_33959:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r13
	movb 0x38(%rbp),%r11b
	testb %r11b,%r11b
	jz L_386743
L_33999:
L_33961:
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_386742
L_33962:
	cmpq $0x1,%r14
	je L_386741
L_33963:
	movb 0x0(%r14),%r13b
	movq 0x8(%r14),%r14
	movb %r13b,0x38(%rbp)
	jmp L_33959
.p2align 0x4
L_386741:
L_33964:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386742:
L_33965:
	movb 0x38(%rbp),%r15b
	movb %r15b,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_33966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp make_0
.p2align 0x4
L_386743:
	movq %r10,%r13
	jmp L_33961
.p2align 0x4
L_386744:
L_34000:
	movq (globalObjptr+0x9E8)(%rip),%r14
	movq 0x38(%rbp),%r13
	movb $0x1,0x38(%rbp)
	xchgq %r13,%r15
	jmp L_33959
.p2align 0x4
.long 0x901
L_33966:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33967
L_33997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_33998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33998
.p2align 0x4
.long 0x905
L_33998:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_33967:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_386745
L_33968:
	movq 0x0(%r14),%r15
L_33969:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386745:
L_33970:
	movq 0x30(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_33971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x902
L_33971:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_33972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x903
L_33972:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_33973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x864
L_33973:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33974
L_33995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_33996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33996
.p2align 0x4
.long 0x86B
L_33996:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_33974:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_33975:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_33976
L_33977:
	cmpq $0x1,%r14
	je L_386747
L_33978:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_33975
.p2align 0x4
L_386747:
L_33979:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33980
L_33993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_33994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33994
.p2align 0x4
.long 0x7C7
L_33994:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_33980:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386749
L_33981:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_33982:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386748
L_33983:
	movl %r13d,0x0(%r15)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_33984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386748:
L_33976:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386749:
L_33992:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_33982
.p2align 0x4
.long 0x904
L_33984:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_33985
L_33990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_33991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_33991
.p2align 0x4
.long 0x478
L_33991:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_33985:
	movq (globalObjptr+0x1610)(%rip),%r14
	movq (globalObjptr+0x1608)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_386754
L_33986:
	movb 0x38(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_386753
L_33987:
	movq (globalObjptr+0x4FB0)(%rip),%r15
	jmp L_33969
.p2align 0x4
L_386753:
L_33988:
	movq (globalWord64+0xF28)(%rip),%r15
	jmp L_33969
.p2align 0x4
L_386754:
L_33989:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1252
.hidden x_1252
x_1252:
L_34003:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_34004
L_34059:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_34060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34060
.p2align 0x4
.long 0x61D
L_34060:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_34004:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_34005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x8EE
L_34005:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34006
L_34057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_34058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34058
.p2align 0x4
.long 0x900
L_34058:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_34006:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_386759
L_34007:
L_34008:
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%rbp),%r15
	cmpq 0x10(%r15),%r14
	je L_386758
L_34009:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_386757
L_34010:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x28(%rbp)
L_34011:
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_34012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386757:
L_34019:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386758:
L_34055:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386759:
L_34056:
	movq 0x58(%rbp),%r14
	xchgq %r14,%r15
	jmp L_34008
.p2align 0x4
.long 0x8EE
L_34012:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_386764
L_34014:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386763
L_34015:
	movq 0x10(%r13),%r15
	cmpq %r15,0x58(%rbp)
	je L_386762
L_34016:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_34019
L_34017:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_34011
.p2align 0x4
L_386762:
L_34020:
	movl $0x1,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_34021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
L_386763:
L_34053:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386764:
L_34013:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8FB
L_34021:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x10(%rbp)
	jnz L_386765
L_34022:
	movq 0x48(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
L_386765:
L_34050:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_34051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8FC
L_34023:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x510
L_34051:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_34052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8FD
L_34024:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_34025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x8FF
L_34052:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_34040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7A8
L_34025:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34026
L_34048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_34049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34049
.p2align 0x4
.long 0x7AC
L_34049:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_34026:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_34027:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_34028
L_34029:
	cmpq $0x1,%r14
	je L_386766
L_34030:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_34027
.p2align 0x4
L_386766:
L_34031:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34032
L_34046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_34047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34047
.p2align 0x4
.long 0x8FE
L_34047:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_34032:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386768
L_34033:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_34034:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386767
L_34035:
	movl %r13d,0x0(%r15)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_34036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386767:
L_34028:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386768:
L_34045:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_34034
.p2align 0x4
.long 0x51A
L_34040:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34041
L_34042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_34043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34043
.p2align 0x4
.long 0x488
L_34043:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_34041:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C6
L_34036:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_386773
L_34037:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_34038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386773:
L_34044:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7B4
L_34038:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_34039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x79B
L_34039:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_34040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.text
.p2align 0x4
.globl x_1251
.hidden x_1251
x_1251:
L_34061:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_34062
L_34113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_34114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34114
.p2align 0x4
.long 0x80A
L_34114:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_34062:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x8A6
L_34063:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_386776
L_34064:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_386775
L_34065:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
L_34066:
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_34067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386775:
L_34074:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386776:
L_34110:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_34074
L_34111:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_34066
.p2align 0x4
.long 0x8EE
L_34067:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_386781
L_34069:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386780
L_34070:
	movq 0x58(%rbp),%r15
	movq 0x10(%r13),%r14
	cmpq %r14,0x10(%r15)
	je L_386779
L_34071:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_34074
L_34072:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_34066
.p2align 0x4
L_386779:
L_34075:
	movl $0x0,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_34076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
L_386780:
L_34108:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386781:
L_34068:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8EF
L_34076:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x10(%rbp)
	jnz L_386782
L_34077:
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
L_386782:
L_34105:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8F0
L_34078:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BE
L_34106:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_34107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8F1
L_34079:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_34080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x8BF
L_34107:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_34095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x8F2
L_34080:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34081
L_34103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_34104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34104
.p2align 0x4
.long 0x7AC
L_34104:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_34081:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_34082:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_34083
L_34084:
	cmpq $0x1,%r14
	je L_386783
L_34085:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_34082
.p2align 0x4
L_386783:
L_34086:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34087
L_34101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_34102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34102
.p2align 0x4
.long 0x8F6
L_34102:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_34087:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386785
L_34088:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_34089:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386784
L_34090:
	movl %r13d,0x0(%r15)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_34091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386784:
L_34083:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386785:
L_34100:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_34089
.p2align 0x4
.long 0x61B
L_34095:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34096
L_34097:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_34098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34098
.p2align 0x4
.long 0x61C
L_34098:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_34096:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F3
L_34091:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_386790
L_34092:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_34093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386790:
L_34099:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F4
L_34093:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_34094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8F5
L_34094:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x68(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.text
.p2align 0x4
.globl x_1250
.hidden x_1250
x_1250:
L_34115:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_34116
L_34187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_34188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34188
.p2align 0x4
.long 0x657
L_34188:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_34116:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_34117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x8BA
L_34117:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_386792
L_34118:
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x40(%rbp)
	movl $0x8,%ecx
	movq $0x1,0x50(%rbp)
L_34119:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_34120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_386792:
L_34186:
	movl $0x8,%ecx
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_34119
.p2align 0x4
.long 0x8BB
L_34120:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34121
L_34184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_34185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34185
.p2align 0x4
.long 0x8C1
L_34185:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_34121:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_386793
L_34122:
	movq %r15,0x50(%rbp)
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_34119
.p2align 0x4
L_386793:
L_34123:
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_34124:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386795
.p2align 0x4,,0x7
L_34125:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_386794
L_34126:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_34124
.p2align 0x4
L_386794:
L_34127:
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
L_34128:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386795:
L_34182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_34183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34183
.p2align 0x4
.long 0x8C0
L_34183:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_34125
.p2align 0x4
.long 0x8BC
L_34129:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movslq %r15d,%r14
	movq 0x18(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_386800
L_34131:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386799
L_34132:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq %r14,0x10(%r13)
	je L_386798
L_34133:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_386797
L_34134:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_34128
.p2align 0x4
L_386797:
L_34135:
	movq (globalObjptr+0xBDB0)(%rip),%r14
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386798:
L_34136:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386799:
L_34181:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386800:
L_34130:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C4
L_34137:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpl $0x8,%r15d
	je L_386811
	cmpl $0x10,%r15d
	je L_386810
	cmpl $0x20,%r15d
	je L_386801
L_34138:
	movq (globalObjptr+0x16E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386801:
L_34180:
	xorb %dl,%dl
L_34140:
	movq 0x30(%rbp),%r11
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x28(%rbp),%r11
	movq %r11,%r10
	andq $0x1,%r10
	andq $0x1,%r10
	jz L_386808
L_34141:
	cmpq $0x1,%r11
	jl L_34148
L_34143:
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	cmpb $0x1,%dl
	je L_386806
	cmpb $0x2,%dl
	je L_386805
L_34144:
	movq %r10,%r13
L_34145:
	movq %r13,%r11
	movq 0x28(%rbp),%r10
	andq %r10,%r11
	andq $0x1,%r11
	jz L_386803
L_34146:
	cmpq %r13,%r10
	jl L_386802
L_34148:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ordToString_0
.p2align 0x4
L_386802:
L_34157:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386803:
L_34168:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r10,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_34169:
	cmpl $0x0,%eax
	jl L_34157
	jmp L_34148
.p2align 0x4
L_386805:
L_34173:
	movq %r9,%r13
	jmp L_34145
.p2align 0x4
L_386806:
L_34172:
	movq %r11,%r13
	jmp L_34145
.p2align 0x4
L_386808:
L_34175:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r11,%rsi
	movq $0x1,%rdi
	xorq %rax,%rax
	movb %dl,%bl
	call IntInf_compare
L_34176:
	cmpl $0x0,%eax
	jg L_34148
	movb %bl,%dl
	jmp L_34143
.p2align 0x4
L_386810:
L_34179:
	movb $0x1,%dl
	jmp L_34140
.p2align 0x4
L_386811:
L_34139:
	movb $0x2,%dl
	jmp L_34140
.p2align 0x4
.long 0x8BD
L_34149:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34150
L_34165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_34166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34166
.p2align 0x4
.long 0x77A
L_34166:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_34150:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE488)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE490)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x8BE
L_34158:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_34159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8BD
L_34151:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BF
L_34159:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_34160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x8BD
L_34152:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_386813
L_34154:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_34155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386813:
L_34153:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61B
L_34160:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34161
L_34162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_34163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34163
.p2align 0x4
.long 0x61C
L_34163:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_34161:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C5
L_34155:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_34157
L_34164:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1249
.hidden x_1249
x_1249:
L_34189:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_34190
L_34291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_34292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34292
.p2align 0x4
.long 0x63B
L_34292:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_34190:
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_34191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x910
L_34191:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_386821
L_34193:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_34194:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_34195
L_34196:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_34195
L_34197:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_386818
L_34199:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_386817
L_34202:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_34203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
L_386817:
L_34201:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386818:
L_34195:
	movq (globalObjptr+0x1B18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386821:
L_34192:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x911
L_34203:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_386822
L_34204:
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x48(%rbp)
	movl $0x8,%ecx
	movq $0x1,0x58(%rbp)
L_34205:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_34206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_386822:
L_34290:
	movl $0x8,%ecx
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_34205
.p2align 0x4
.long 0x912
L_34206:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34207
L_34288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_34289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34289
.p2align 0x4
.long 0x91D
L_34289:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_34207:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_386823
L_34208:
	movq %r15,0x58(%rbp)
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_34205
.p2align 0x4
L_386823:
L_34209:
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_34210:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386825
.p2align 0x4,,0x7
L_34211:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_386824
L_34212:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_34210
.p2align 0x4
L_386824:
L_34213:
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
L_34214:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_34215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386825:
L_34286:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_34287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34287
.p2align 0x4
.long 0x802
L_34287:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_34211
.p2align 0x4
.long 0x913
L_34215:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_34201
L_34217:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_386829
L_34218:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq %r14,0x10(%r13)
	je L_386828
L_34219:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_386827
L_34220:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_34214
.p2align 0x4
L_386827:
L_34221:
	movq (globalObjptr+0xBDB0)(%rip),%r14
	movq %r14,0x0(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386828:
L_34222:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_34223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_386829:
L_34285:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x914
L_34223:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34224
L_34283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_34284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34284
.p2align 0x4
.long 0x91C
L_34284:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_34224:
	movl 0x48(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_386847
	cmpl $0x10,%r15d
	je L_386846
	cmpl $0x20,%r15d
	je L_386831
L_34225:
	movq (globalObjptr+0x16E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386831:
L_34282:
	movb $0x0,0x48(%rbp)
L_34227:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x50(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	movq %r13,0x60(%rbp)
	cmpq %r13,%r14
	je L_386832
L_34228:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386832:
L_34229:
	movq 0x60(%rbp),%r15
	testq %r15,%r15
	jz L_386845
L_34230:
	cmpq $0x7FFFFFFF,%r15
	ja L_386844
L_34231:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34232
L_34277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_34278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34278
.p2align 0x4
.long 0x915
L_34278:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_34232:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA8F,%rcx
	movq 0x60(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_34233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34233
.p2align 0x4
.long 0x915
L_34233:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_34234:
	movq $0x0,0x70(%rbp)
loop_473:
	movq 0x60(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_386833
L_34235:
	movq 0x68(%rbp),%r15
	movq $0xEC9,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C93,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386833:
L_34236:
	movq 0x70(%rbp),%r11
	movl %r11d,%r10d
	movslq %r10d,%r15
	cmpq 0x50(%rbp),%r15
	jnb L_34201
L_34238:
	movq 0x30(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq %r10,0x78(%rbp)
	movq 0x38(%rbp),%r11
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r9
	movq %r9,0x80(%rbp)
	movq %r10,%r11
	andq $0x1,%r11
	andq $0x1,%r11
	jz L_386840
L_34239:
	cmpq $0x1,%r10
	jl L_34246
L_34241:
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movb 0x48(%rbp),%r8b
	cmpb $0x1,%r8b
	je L_386838
	cmpb $0x2,%r8b
	je L_386837
L_34242:
	movq %r10,%r13
L_34243:
	movq 0x78(%rbp),%r11
	movq %r11,%r10
	andq %r13,%r10
	andq $0x1,%r10
	jz L_386835
L_34244:
	cmpq %r13,%r11
	jl L_386834
L_34246:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_34247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ordToString_0
.p2align 0x4
L_386834:
L_34255:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_34256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386835:
L_34266:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r11,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_34267:
	cmpl $0x0,%eax
	jl L_34255
	jmp L_34246
.p2align 0x4
L_386837:
L_34271:
	movq %r9,%r13
	jmp L_34243
.p2align 0x4
L_386838:
L_34270:
	movq %r11,%r13
	jmp L_34243
.p2align 0x4
L_386840:
L_34273:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r10,%rsi
	movq $0x1,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_34274:
	cmpl $0x0,%eax
	jg L_34246
	jmp L_34241
.p2align 0x4
L_386844:
L_34279:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386845:
L_34280:
	movq (globalObjptr+0x6EC8)(%rip),%r14
	movq %r14,0x68(%rbp)
	jmp L_34234
.p2align 0x4
L_386846:
L_34281:
	movb $0x1,0x48(%rbp)
	jmp L_34227
.p2align 0x4
L_386847:
L_34226:
	movb $0x2,0x48(%rbp)
	jmp L_34227
.p2align 0x4
.long 0x916
L_34247:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34248
L_34263:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_34264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34264
.p2align 0x4
.long 0x91B
L_34264:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_34248:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE488)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE490)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_34249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x916
L_34256:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movl %r15d,0x98(%rbp)
	movq $0x3,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_34257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x916
L_34249:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_34250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x918
L_34257:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_34258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x916
L_34250:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_386850
L_34252:
	movl %r14d,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_34253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386850:
L_34251:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x919
L_34258:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34259
L_34260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_34261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34261
.p2align 0x4
.long 0x91A
L_34261:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_34259:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_473
.p2align 0x4
.long 0x917
L_34253:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_34255
L_34262:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1248
.hidden x_1248
x_1248:
L_34293:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_34294
L_34339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_34340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34340
.p2align 0x4
.long 0x646
L_34340:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_34294:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_34295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x4ED
L_34295:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	je L_386857
L_34296:
	movq (globalObjptr+0x9E8)(%rip),%r14
	movb $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_34297:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r13
	movb 0x38(%rbp),%r11b
	testb %r11b,%r11b
	jz L_386856
L_34337:
L_34299:
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_386855
L_34300:
	cmpq $0x1,%r14
	je L_386854
L_34301:
	movb 0x0(%r14),%r13b
	movq 0x8(%r14),%r14
	movb %r13b,0x38(%rbp)
	jmp L_34297
.p2align 0x4
L_386854:
L_34302:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386855:
L_34303:
	movb 0x38(%rbp),%r15b
	movb %r15b,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_34304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp make_0
.p2align 0x4
L_386856:
	movq %r10,%r13
	jmp L_34299
.p2align 0x4
L_386857:
L_34338:
	movq (globalObjptr+0x9E8)(%rip),%r14
	movq 0x38(%rbp),%r13
	movb $0x1,0x38(%rbp)
	xchgq %r13,%r15
	jmp L_34297
.p2align 0x4
.long 0x901
L_34304:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34305
L_34335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_34336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34336
.p2align 0x4
.long 0x905
L_34336:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_34305:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_386858
L_34306:
	movq 0x0(%r14),%r15
L_34307:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386858:
L_34308:
	movq 0x30(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_34309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x902
L_34309:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE4A0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_34310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x903
L_34310:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_34311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_33
.p2align 0x4
.long 0x864
L_34311:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34312
L_34333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_34334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34334
.p2align 0x4
.long 0x86B
L_34334:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_34312:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_34313:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_34314
L_34315:
	cmpq $0x1,%r14
	je L_386860
L_34316:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_34313
.p2align 0x4
L_386860:
L_34317:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34318
L_34331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_34332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34332
.p2align 0x4
.long 0x7C7
L_34332:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_34318:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_386862
L_34319:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_34320:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_386861
L_34321:
	movl %r13d,0x0(%r15)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_34322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_386861:
L_34314:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386862:
L_34330:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_34320
.p2align 0x4
.long 0x904
L_34322:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34323
L_34328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_34329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34329
.p2align 0x4
.long 0x478
L_34329:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_34323:
	movq (globalObjptr+0x1610)(%rip),%r14
	movq (globalObjptr+0x1608)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_386867
L_34324:
	movb 0x38(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_386866
L_34325:
	movq (globalObjptr+0x4FB0)(%rip),%r15
	jmp L_34307
.p2align 0x4
L_386866:
L_34326:
	movq (globalWord64+0xF28)(%rip),%r15
	jmp L_34307
.p2align 0x4
L_386867:
L_34327:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl lookupConstant_0
.hidden lookupConstant_0
lookupConstant_0:
L_34341:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_35323
L_34342:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386921
L_34343:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_386920
L_34344:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1490,%r13
	je L_386918
L_34495:
	movq 0x70(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x68(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x60(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x58(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x50(%r14),%r10
	movq %r10,0x48(%rbp)
	movq 0x48(%r14),%r10
	movq %r10,0x50(%rbp)
	movq 0x40(%r14),%r10
	movq %r10,0x58(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x60(%rbp)
	movq 0x38(%r14),%r10
	movq %r10,0x68(%rbp)
	movq 0x30(%r14),%r10
	movq %r10,0x70(%rbp)
	movq 0x28(%r14),%r10
	movq %r10,0x78(%rbp)
	movq 0x20(%r14),%r10
	movq %r10,0x80(%rbp)
	movq 0x18(%r14),%r10
	movq %r10,0x88(%rbp)
	movq 0x10(%r14),%r10
	movq %r10,0x90(%rbp)
	movq 0x8(%r14),%r10
	movq %r10,0x98(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq $0x1,0x0(%r15)
	movl 0x0(%r13),%r15d
	testl %r15d,%r15d
	jnz L_386869
L_34496:
	movq 0x0(%r11),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x6CD8)(%rip),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xA8(%rbp)
	leaq L_34534(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xA8,%rbp
	leaq (L_34497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_386869:
L_35321:
	movq $0x40E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_34567:
	movq $0x2921,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2072,%r14
	je L_386871
L_34569:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	xchgq %r14,%r15
L_34492:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,0x8(%r13)
	jne L_386870
L_34494:
	movq $0x1225,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r15
	movq $0x2375,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386870:
L_34493:
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386871:
L_34568:
	movq 0x38(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
L_34347:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x70(%rbp)
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_34349
L_34350:
	movl $0x0,0x8(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_474:
	cmpl %ecx,%ebx
	jnl L_386873
L_34488:
	movl %ebx,%r15d
	incl %r15d
	movslq %ebx,%r14
	cmpq 0x70(%rbp),%r14
	jnb L_386872
L_34490:
	movq 0x60(%rbp),%r13
	movzbl 0x0(%r13,%r14,1),%r11d
	movl 0x8(%rbp),%r14d
	imull $0x1F,%r14d
	addl %r14d,%r11d
	movl %r11d,0x8(%rbp)
	movl %r15d,%ebx
	jmp loop_474
.p2align 0x4
L_386872:
L_34357:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386873:
L_34351:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34352
L_34486:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_34487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34487
.p2align 0x4
.long 0x92C
L_34487:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_34352:
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r15
	movq (globalObjptr+0xAE0)(%rip),%r14
	movq 0x0(%r14),%r13
	incq %r13
	jo L_386915
L_34354:
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r14
	movl 0x0(%r14),%r13d
	andl 0x8(%rbp),%r13d
	cmpl $0x0,%r13d
	jl L_34370
L_34355:
	movslq %r13d,%r14
	movq %r14,0x78(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_34357
L_34358:
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x80(%rbp)
	cmpq $0x1,%r13
	je L_34368
L_34359:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x88(%rbp)
.p2align 0x4,,0x7
L_34360:
	movq (globalObjptr+0xAE8)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_386911
L_34362:
	movq %r14,0x0(%r11)
	movq 0x88(%rbp),%r11
	movq 0x10(%r11),%r14
	cmpq 0x60(%rbp),%r14
	je L_386909
L_34363:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	cmpq %r11,0x70(%rbp)
	jne L_386906
L_34462:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_120:
	cmpq %r13,0x70(%rbp)
	je L_386901
L_34463:
	movq 0x60(%rbp),%r11
	movb 0x0(%r14,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_386874
L_34470:
	incq %r13
	jmp vectorEqualLoop_120
.p2align 0x4
L_386874:
L_34464:
	cmpq $0x1,%r15
	je L_386875
L_34465:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x88(%rbp)
	jmp L_34360
.p2align 0x4
L_386875:
L_34466:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34368
L_34468:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_34469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34469
.p2align 0x4
.long 0x92A
L_34469:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_34368:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_386899
L_34369:
	movq $0xF9B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movl 0x8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x48(%rbp),%rdx
	movl 0x0(%rdx),%r15d
	incl %r15d
	jo L_34370
L_34371:
	movl %r15d,0x0(%rdx)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28FF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r11)
	movq 0x78(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_34357
L_34373:
	movq %r13,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r13,%r14,8)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_34349
L_34375:
	movl 0x0(%rdx),%r15d
	imull $0x4,%r15d
	jo L_34370
L_34376:
	cmpl %r15d,%r11d
	jnl L_386891
L_34422:
	addl %r11d,%r11d
	jo L_34370
L_34423:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x8(%rbp)
	movslq %r11d,%rdx
	movq %rdx,0x48(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_386889
L_34424:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8B5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_34425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34425
.p2align 0x4
.long 0x927
L_34425:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_475:
	cmpq 0x48(%rbp),%r15
	jnl L_386876
L_34453:
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_475
.p2align 0x4
L_386876:
L_34426:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0xC(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_386888
L_34428:
	cmpl $0x0,%r13d
	jl L_386887
L_34429:
	movl $0x0,0x80(%rbp)
.p2align 0x4,,0x7
loop_476:
	movl 0x80(%rbp),%r15d
	cmpl 0xC(%rbp),%r15d
	jnl L_386882
L_34438:
	movslq %r15d,%r14
	movq 0x78(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_34447
L_34439:
	movq 0x8(%r13),%r15
	movq %r15,0x88(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x90(%rbp)
L_34440:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_386880
.p2align 0x4,,0x7
L_34441:
	movq 0x90(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x8(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_386879
L_34442:
	movslq %r14d,%r13
	cmpq 0x48(%rbp),%r13
	jnb L_34357
L_34444:
	movq 0x70(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x28FF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_386877
L_34445:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	jmp L_34440
.p2align 0x4
L_386877:
L_34447:
	incl 0x80(%rbp)
	jmp loop_476
.p2align 0x4
L_386879:
L_34370:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386880:
L_34449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_34450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34450
.p2align 0x4
.long 0x929
L_34450:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_34441
.p2align 0x4
L_386882:
L_34430:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34431
L_34436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_34437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34437
.p2align 0x4
.long 0x928
L_34437:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_34431:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r15
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_386885
	cmpq $0x2,%r14
	je L_386884
	cmpq $0x3,%r14
	je L_386883
L_34432:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
L_34379:
	movq 0x28(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x3E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0xA07,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r15,0x88(%rbp)
	addq $0x18,%r12
	movb $0x3,%r15b
	movzbl %r15b,%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0xA09,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0xA,0x0(%r15)
	movq %r11,0x8(%r15)
	movq $0xA0B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x10(%r10)
	movq %r11,0x18(%r10)
	addq $0x28,%r12
	movq $0xA,0x0(%r10)
	movl $0x12,0x8(%r10)
	movl $0x0,0xC(%r10)
	movq $0xA0D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x20,%r12
	movq %r10,0x10(%r15)
	movq $0x3E57,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x70,%rbp
	leaq (L_34380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp reader_0
.p2align 0x4
L_386883:
L_34435:
	shrq $0x2,%r15
	movb %r15b,%dl
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
L_34415:
	movb %dl,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_34416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp make_0
.p2align 0x4
L_386884:
L_34434:
	movq 0x68(%rbp),%r14
	xchgq %r14,%r15
L_34413:
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_386885:
L_34433:
	movq 0x68(%rbp),%r14
	movq %r14,0x28(%rbp)
L_34396:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_34397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1205
.p2align 0x4
L_386887:
L_34452:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4F8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386888:
L_34349:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386889:
L_34454:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386891:
L_34377:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_386894
	cmpq $0x2,%r14
	je L_386893
	cmpq $0x3,%r14
	je L_386892
L_34378:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_34379
.p2align 0x4
L_386892:
L_34414:
	shrq $0x2,%r15
	movb %r15b,%dl
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_34415
.p2align 0x4
L_386893:
L_34412:
	movq 0x68(%rbp),%r14
	xchgq %r14,%r15
	jmp L_34413
.p2align 0x4
L_386894:
L_34395:
	movq 0x68(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_34396
.p2align 0x4
L_386899:
L_34455:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xE4D8)(%rip),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE4D0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (L_34456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_386901:
L_34471:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34473
L_34478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_34479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34479
.p2align 0x4
.long 0x92B
L_34479:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_34473:
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_386904
	cmpq $0x2,%r13
	je L_386903
	cmpq $0x3,%r13
	je L_386902
L_34474:
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	jmp L_34379
.p2align 0x4
L_386902:
L_34477:
	movq %r14,0x28(%rbp)
	shrq $0x2,%r15
	movb %r15b,%dl
	jmp L_34415
.p2align 0x4
L_386903:
	xchgq %r14,%r15
	jmp L_34413
.p2align 0x4
L_386904:
L_34475:
	movq %r14,0x28(%rbp)
	jmp L_34396
.p2align 0x4
L_386906:
L_34364:
	cmpq $0x1,%r15
	je L_386907
L_34365:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x88(%rbp)
	jmp L_34360
.p2align 0x4
L_386907:
L_34366:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34368
L_34460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_34461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34461
.p2align 0x4
.long 0x92A
L_34461:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_34368
.p2align 0x4
L_386909:
L_34480:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34473
L_34482:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_34483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34483
.p2align 0x4
.long 0x92B
L_34483:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_34473
.p2align 0x4
L_386911:
L_34361:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xAF0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386915:
L_34353:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xAF8)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386918:
L_34345:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x2072,%r14
	je L_386919
L_34491:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xchgq %r13,%r15
	jmp L_34492
.p2align 0x4
L_386919:
L_34346:
	movq 0x38(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x28(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
	jmp L_34347
.p2align 0x4
L_386920:
L_35322:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386921:
L_35323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_35324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35324
.p2align 0x4
.long 0x6FE
L_35324:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_34343
.p2align 0x4
.long 0x92D
L_34497:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_34498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp openIn_0
.p2align 0x4
.long 0x48A
L_34534:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34535
L_34536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_34537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34537
.p2align 0x4
.long 0x936
L_34537:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_34535:
	movq 0xA0(%rbp),%r15
L_34531:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x2923,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x80,%r12
	movl 0x60(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x50(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x58(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x60(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x68(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x70(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x91E
L_34380:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34381
L_34393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_34394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34394
.p2align 0x4
.long 0x921
L_34394:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_34381:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_386924
L_34382:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_34383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386924:
L_34389:
	movq (globalObjptr+0xDBC0)(%rip),%r14
	movq 0x40(%rbp),%r13
	xchgq %r13,%r15
error_0:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x7C8)(%rip),%r15
	movq %r15,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE4B8)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE4C0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE4C8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE4D0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (bug_35+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x925
L_34416:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34417
L_34420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_34421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34421
.p2align 0x4
.long 0x926
L_34421:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_34417:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_386926
L_34418:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_386926:
L_34419:
	movq (globalObjptr+0xBAE8)(%rip),%r14
	movq 0x28(%rbp),%r13
	xchgq %r13,%r15
	jmp error_0
.p2align 0x4
.long 0x922
L_34397:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34398
L_34410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_34411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34411
.p2align 0x4
.long 0x924
L_34411:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_34398:
	movq 0x30(%rbp),%r15
	andq $0x1,%r15
	jnz L_386928
L_34399:
	movq (globalObjptr+0xCD70)(%rip),%r14
	movq 0x28(%rbp),%r15
	jmp error_0
.p2align 0x4
L_386928:
L_34400:
	movq 0x30(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	testl %r14d,%r14d
	jnz L_386929
L_34401:
	movq $0x1,0x28(%rbp)
L_34402:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_34403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_386929:
L_34409:
	movq $0x3,0x28(%rbp)
	jmp L_34402
.p2align 0x4
.long 0x920
L_34456:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34457
L_34458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_34459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34459
.p2align 0x4
.long 0x504
L_34459:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_34457:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x92D
L_34498:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movl 0x60(%rbp),%r15d
	movl %r15d,%r14d
	decl %r14d
	movl %r14d,0x64(%rbp)
	movslq %r15d,%rdx
	movq %rdx,0xD0(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_387138
L_34499:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8B5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_34500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34500
.p2align 0x4
.long 0x92E
L_34500:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq %rax,0xD8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_477:
	cmpq 0xD0(%rbp),%r15
	jnl L_386932
L_35319:
	movq 0xD8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_477
.p2align 0x4
L_386932:
L_34501:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34502
L_35317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_35318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35318
.p2align 0x4
.long 0x95C
L_35318:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_34502:
	movq $0x8B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD0(%rbp)
	addq $0x10,%r12
	movq 0xD8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xE0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xE8(%rbp)
	addq $0x10,%r12
	movl 0x64(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_387136
L_34503:
	movq 0x8(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0x0(%r14),%r15
L_34504:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0xF0(%rbp)
	cmpq $0x1,%r14
	je L_387135
L_34505:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0x23F9,%rax
	cmpq $0x5C,%rax
	ja L_386933
	leaq jumpTable_50(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_50:
.quad L_387131,L_387126,L_387124,L_387120,L_387116,L_387114,L_387112,L_387110,L_387108,L_387105,L_387103,L_387101,L_387099,L_387097,L_387095,L_387094,L_387092,L_387091,L_387090,L_387089,L_387088,L_387087,L_387085,L_387083,L_387081,L_387079,L_387077,L_387076,L_387074,L_387072,L_387069,L_387067,L_387065,L_387063,L_387061,L_387059,L_387057,L_387055,L_387053,L_387051,L_387050,L_387049,L_387048,L_387046,L_387044,L_387041,L_387039,L_387037,L_387035,L_387032,L_387030,L_387029,L_387028,L_387026,L_387024,L_387021,L_387019,L_387017,L_387013,L_387011,L_387009,L_387005,L_387004,L_387002,L_387001,L_386999,L_386997,L_386995,L_386993,L_386991,L_386989,L_386988,L_386986,L_386984,L_386982,L_386980,L_386979,L_386978,L_386976,L_386971,L_386969,L_386961,L_386959,L_386957,L_386955,L_386953,L_386951,L_386947,L_386945,L_386943,L_386942,L_386938,L_386935
.text
.p2align 0x4
L_386933:
L_34506:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r11
	movb 0x0(%r11),%r13b
	testb %r13b,%r13b
	jnz L_386934
L_34507:
	movl $0x8,%ecx
L_34508:
	movl %ecx,0x100(%rbp)
	movq %r15,0x108(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386934:
L_34577:
	movl $0x4,%ecx
	jmp L_34508
.p2align 0x4
L_386935:
L_35310:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_386937
	cmpb $0x2,%r13b
	je L_386936
L_35311:
	movl $0x2,%ecx
L_35312:
	movl %ecx,0x100(%rbp)
	movq %r15,0x108(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386936:
L_35314:
	xorl %ecx,%ecx
	jmp L_35312
.p2align 0x4
L_386937:
L_35313:
	movl $0x1,%ecx
	jmp L_35312
.p2align 0x4
L_386938:
L_35305:
	movq 0x0(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x1,%r15b
	je L_386941
	cmpb $0x2,%r15b
	je L_386940
	cmpb $0x3,%r15b
	je L_386939
L_34984:
	movq (globalObjptr+0xD720)(%rip),%r15
L_34511:
	movq $0xDE5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xF0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xF8(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xF8,%rbp
	leaq (L_34512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp add_2
.p2align 0x4
L_386939:
L_34990:
	movq (globalObjptr+0xD730)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_386940:
L_34988:
	movq (globalObjptr+0xD718)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_386941:
L_34986:
	movq (globalObjptr+0xD728)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_386942:
L_35304:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x838)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386943:
L_35301:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_386944
L_34590:
	movq (globalObjptr+0xCDB0)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_386944:
L_34588:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_386945:
L_35298:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_386947:
L_35289:
	movq 0x0(%r14),%r13
	movb 0x0(%r13),%dl
	movq (globalObjptr+0x920)(%rip),%r15
	movq (globalObjptr+0x860)(%rip),%r14
	movq %r14,0xF8(%rbp)
.p2align 0x4,,0x7
L_35290:
	movq 0xF8(%rbp),%r14
	cmpb 0x0(%r14),%dl
	je L_386949
L_35291:
	cmpq $0x1,%r15
	je L_386948
L_35292:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0xF8(%rbp)
	jmp L_35290
.p2align 0x4
L_386948:
L_34607:
	movq $0x9,0xC0(%rbp)
L_34528:
	leaq L_34534(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xD0,%rbp
	leaq (L_34529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeIn_0
.p2align 0x4
L_386949:
L_35294:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35295
L_35296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_35297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35297
.p2align 0x4
.long 0x93D
L_35297:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_35295:
	movq 0xF8(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_34511
.p2align 0x4
L_386951:
L_35286:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_386953:
L_35283:
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_386954
L_35284:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_386954:
L_34618:
	movq (globalObjptr+0xDF58)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_386955:
L_35280:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_386957:
L_35235:
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_386958
L_35236:
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x64(%rbp)
	movq $0x1,0x108(%rbp)
	movq %r14,%r15
L_35237:
	movl 0x0(%r15),%r14d
	movl %r14d,0x110(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x120(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x128(%rbp)
	addq $0x120,%rbp
	leaq (L_35238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
L_386958:
L_35279:
	movq $0x1,%r15
L_35259:
	movq %r15,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_31+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_386959:
L_35198:
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_386960
L_35199:
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x64(%rbp)
	movq $0x1,0x108(%rbp)
	movq %r14,%r15
L_35200:
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (toString_28+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
L_386960:
L_35234:
	movq $0x1,%r15
L_35217:
	movq %r15,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_29+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_386961:
L_35189:
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_386968
	cmpb $0x2,%r13b
	je L_386967
	cmpb $0x3,%r13b
	je L_386966
	cmpb $0x4,%r13b
	je L_386965
	cmpb $0x5,%r13b
	je L_386964
	cmpb $0x6,%r13b
	je L_386963
	cmpb $0x7,%r13b
	je L_34618
L_35190:
	movq (globalObjptr+0xE598)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_386963:
L_35196:
	movq (globalObjptr+0xE5C8)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_386964:
L_35195:
	movq (globalObjptr+0xE5C0)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_386965:
L_35194:
	movq (globalObjptr+0xE5B8)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_386966:
L_35193:
	movq (globalObjptr+0xE5B0)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_386967:
L_35192:
	movq (globalObjptr+0xE5A8)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_386968:
L_35191:
	movq (globalObjptr+0xE5A0)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_386969:
L_35186:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_386971:
L_35153:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_386975
L_35154:
	movq 0x8(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x64(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r14,%r15
L_35155:
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x23E9,%r15
	je L_386974
	cmpq $0x23EA,%r15
	je L_386973
	cmpq $0x23EB,%r15
	je L_386972
L_35156:
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r11
	movq %r11,%r15
L_35157:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x1590)(%rip),%r15
	movq %r15,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xCDA8)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE2A0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x110,%rbp
	leaq (L_35158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_386972:
L_35184:
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r11
	movq %r11,%r15
	jmp L_35157
.p2align 0x4
L_386973:
L_35183:
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r11
	movq %r11,%r15
	jmp L_35157
.p2align 0x4
L_386974:
L_35182:
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r11
	movq %r11,%r15
	jmp L_35157
.p2align 0x4
L_386975:
L_35185:
	movq $0x1,%r15
L_35168:
	movq %r15,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_27+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_386976:
L_35150:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_386978:
L_35149:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x830)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386979:
L_35148:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movl $0x3E8,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_386980:
L_35145:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_386982:
L_35142:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_386984:
L_35114:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_386985
L_35115:
	movq 0x8(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x64(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r14,%r15
L_35116:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x13D0)(%rip),%r13
	movq %r13,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xE588)(%rip),%r15
	movq %r15,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE590)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x110(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x110,%rbp
	leaq (L_35117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_386985:
L_35141:
	movq $0x1,%r15
L_35127:
	movq %r15,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_26+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_386986:
L_35111:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_386988:
L_35110:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_34511
.p2align 0x4
L_386989:
L_35107:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_386991:
L_35104:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_386993:
L_35101:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_386995:
L_35064:
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_386996
L_35065:
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x64(%rbp)
	movq $0x1,0x108(%rbp)
	movq %r14,%r15
L_35066:
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (toString_24+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
L_386996:
L_35100:
	movq $0x1,%r15
L_35083:
	movq %r15,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_25+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_386997:
L_35061:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_386999:
L_35058:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387001:
L_35038:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xF8(%rbp)
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq (globalObjptr+0x828)(%rip),%r15
	movl 0x0(%r15),%r13d
	movl %r13d,0x108(%rbp)
	movl 0x4(%r15),%r13d
	movl %r13d,0x64(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_35039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387002:
L_34992:
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x100(%rbp)
	movl 0x8(%r13),%r11d
	movl %r11d,0x64(%rbp)
	movl 0xC(%r13),%r11d
	testl %r11d,%r11d
	jnz L_387003
L_34993:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_34994:
	movq %r15,0x110(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x110,%rbp
	leaq (L_34995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387003:
L_35037:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_34994
.p2align 0x4
L_387004:
L_34991:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x820)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387005:
L_34982:
	movq 0x0(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x1,%r15b
	je L_34986
	cmpb $0x2,%r15b
	je L_34988
	cmpb $0x3,%r15b
	je L_34990
	jmp L_34984
.p2align 0x4
L_387009:
L_34979:
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_34618
L_34980:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387011:
L_34976:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387013:
L_34971:
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_387016
	cmpb $0x2,%r13b
	je L_387015
	cmpb $0x3,%r13b
	je L_387014
L_34972:
	movq (globalObjptr+0xCAE8)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387014:
L_34975:
	movq (globalObjptr+0xCAE0)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387015:
L_34974:
	movq (globalObjptr+0xCAF8)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387016:
L_34973:
	movq (globalObjptr+0xCAF0)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387017:
L_34968:
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	testb %r13b,%r13b
	jz L_387018
L_34970:
	movq (globalObjptr+0xCAD0)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387018:
L_34963:
	movq (globalObjptr+0xCAD8)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387019:
L_34965:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387021:
L_34960:
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_34963
	cmpb $0x2,%r13b
	je L_387022
L_34961:
	movq (globalObjptr+0xE578)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387022:
L_34964:
	movq (globalObjptr+0xE580)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387024:
L_34957:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387026:
L_34920:
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_387027
L_34921:
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x64(%rbp)
	movq $0x1,0x108(%rbp)
	movq %r14,%r15
L_34922:
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (toString_20+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
L_387027:
L_34956:
	movq $0x1,%r15
L_34939:
	movq %r15,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_21+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_387028:
L_34919:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_34511
.p2align 0x4
L_387029:
L_34918:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_34511
.p2align 0x4
L_387030:
L_34915:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387032:
L_34911:
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_387034
	cmpb $0x2,%r13b
	je L_387033
L_34912:
	movq (globalObjptr+0xD520)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387033:
L_34914:
	movq (globalObjptr+0xD540)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387034:
L_34913:
	movq (globalObjptr+0xD538)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387035:
L_34908:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387037:
L_34895:
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_387038
L_34897:
	movl %r14d,0x108(%rbp)
	movq $0x3BEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x100(%rbp)
	addq $0x10,%r12
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_387038:
L_34896:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,0xC0(%rbp)
	jmp L_34528
.p2align 0x4
L_387039:
L_34892:
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	testb %r13b,%r13b
	jnz L_387040
L_34893:
	movq (globalObjptr+0xD660)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387040:
L_34894:
	movq (globalObjptr+0xD668)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387041:
L_34884:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq %r10,%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_387043
	cmpq $0x2,%r15
	je L_387042
L_34885:
	movq (globalObjptr+0xE560)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387042:
L_34887:
	movq %r13,0x108(%rbp)
	shrq $0x2,%r10
	movl %r10d,%r15d
	movl %r15d,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387043:
L_34886:
	movq (globalObjptr+0xE568)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387044:
L_34881:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387046:
L_34878:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387048:
L_34877:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_34511
.p2align 0x4
L_387049:
L_34876:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_34511
.p2align 0x4
L_387050:
L_34875:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_34511
.p2align 0x4
L_387051:
L_34838:
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_387052
L_34839:
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x64(%rbp)
	movq $0x1,0x108(%rbp)
	movq %r14,%r15
L_34840:
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (toString_17+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
L_387052:
L_34874:
	movq $0x1,%r15
L_34857:
	movq %r15,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_18+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_387053:
L_34835:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387055:
L_34832:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387057:
L_34829:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387059:
L_34826:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387061:
L_34823:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387063:
L_34820:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387065:
L_34817:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387067:
L_34814:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387069:
L_34801:
	movq 0x0(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x1,%r15b
	je L_387071
	cmpb $0x2,%r15b
	je L_387070
L_34802:
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE548)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (toString_16+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387070:
L_34813:
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE558)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (toString_16+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387071:
L_34812:
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE550)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (toString_16+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387072:
L_34798:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387074:
L_34752:
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x100(%rbp)
	movl 0x8(%r13),%r11d
	movl %r11d,0x64(%rbp)
	movl 0xC(%r13),%r11d
	testl %r11d,%r11d
	jnz L_387075
L_34753:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_34754:
	movq %r15,0x110(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x110,%rbp
	leaq (L_34755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387075:
L_34797:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_34754
.p2align 0x4
L_387076:
L_34751:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_34511
.p2align 0x4
L_387077:
L_34748:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387079:
L_34745:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387081:
L_34742:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387083:
L_34739:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387085:
L_34736:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387087:
L_34735:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_34511
.p2align 0x4
L_387088:
L_34734:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x818)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387089:
L_34733:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x810)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387090:
L_34732:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x808)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387091:
L_34731:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x800)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387092:
L_34728:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387094:
L_34727:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movb 0x8(%r14),%r11b
	movl 0x4(%r14),%r10d
	movl 0x0(%r14),%r9d
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	addq $0x28,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x7F8)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387095:
L_34724:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387097:
L_34717:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,%r14
	andq $0x1,%r14
	jz L_34618
L_34719:
	movq %r15,0x108(%rbp)
	shrq $0x1,%r11
	movl %r11d,%r15d
	movl %r15d,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387099:
L_34669:
	movq 0x0(%r14),%r15
	movq %r15,0xF8(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_387100
L_34670:
	movl 0xC(%r13),%r15d
	movl %r15d,0x64(%rbp)
	movl 0x8(%r13),%r15d
	movl %r15d,0x100(%rbp)
	movl 0x4(%r13),%r15d
	movl %r15d,0x104(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x108(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_34671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387100:
L_34716:
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (toString_14+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387101:
L_34632:
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_387102
L_34633:
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x64(%rbp)
	movq $0x1,0x108(%rbp)
	movq %r14,%r15
L_34634:
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (toString_11+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
L_387102:
L_34668:
	movq $0x1,%r15
L_34651:
	movq %r15,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_12+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_387103:
L_34629:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387105:
L_34625:
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_387107
	cmpb $0x2,%r13b
	je L_387106
L_34626:
	movq (globalObjptr+0xE500)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387106:
L_34628:
	movq (globalObjptr+0xE510)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387107:
L_34627:
	movq (globalObjptr+0xE508)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387108:
L_34622:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387110:
L_34619:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387112:
L_34615:
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_34618
L_34616:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x100(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387114:
L_34612:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_387115
L_34613:
	jmp L_34511
.p2align 0x4
L_387115:
L_34614:
	movq (globalObjptr+0xC9B8)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387116:
L_34602:
	movq 0x0(%r14),%r13
	movb 0x0(%r13),%dl
	movq (globalObjptr+0x9C8)(%rip),%r15
	movq (globalObjptr+0x928)(%rip),%r14
	movq %r14,0xF8(%rbp)
.p2align 0x4,,0x7
L_34603:
	movq 0xF8(%rbp),%r14
	cmpb 0x0(%r14),%dl
	je L_387118
L_34604:
	cmpq $0x1,%r15
	je L_34607
L_34605:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0xF8(%rbp)
	jmp L_34603
.p2align 0x4
L_387118:
L_34608:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34609
L_34610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_34611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34611
.p2align 0x4
.long 0x93D
L_34611:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_34609:
	movq 0xF8(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_34511
.p2align 0x4
L_387120:
L_34597:
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_387123
	cmpb $0x2,%r13b
	je L_387122
	cmpb $0x3,%r13b
	je L_387121
L_34598:
	movq (globalObjptr+0xE4E8)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387121:
L_34601:
	movq (globalObjptr+0xE4F8)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387122:
L_34600:
	movq (globalObjptr+0xDE28)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387123:
L_34599:
	movq (globalObjptr+0xE4F0)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387124:
L_34594:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_34588
	jmp L_34590
.p2align 0x4
L_387126:
L_34587:
	movq 0x0(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_34590
	cmpb $0x3,%r15b
	je L_34590
	cmpb $0x5,%r15b
	je L_34590
	cmpb $0x7,%r15b
	je L_34590
	jmp L_34588
.p2align 0x4
L_387131:
L_34578:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_387134
L_34579:
	movq 0x8(%r15),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
	movq %r13,%r14
.p2align 0x4,,0x7
L_34580:
	incl %ecx
	jo L_387133
L_34582:
	cmpq $0x1,%r15
	je L_387132
L_34583:
	movq 0x8(%r15),%r15
	jmp L_34580
.p2align 0x4
L_387132:
L_34584:
	movq %r14,%r15
L_34585:
	movl %ecx,0x100(%rbp)
	movq %r15,0x108(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387133:
L_34581:
	movq $0x3,0xC0(%rbp)
	jmp L_34528
.p2align 0x4
L_387134:
L_34586:
	xorl %ecx,%ecx
	movq %r13,%r15
	jmp L_34585
.p2align 0x4
L_387135:
L_35315:
	movq (globalObjptr+0xA058)(%rip),%r15
	jmp L_34511
.p2align 0x4
L_387136:
L_34516:
	movq 0xC8(%rbp),%r14
	cmpq $0x1,%r14
	je loop_3809
L_34517:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xC8(%rbp)
L_34518:
	movq %r15,0xF8(%rbp)
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xF8,%rbp
	leaq (L_34519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp add_2
.p2align 0x4
loop_3809:
loop_478:
	leaq L_34540(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0xF8,%rbp
	leaq (L_34522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1210
.p2align 0x4
L_387138:
L_35320:
	movq $0x5,0xC0(%rbp)
	jmp L_34528
.p2align 0x4
.long 0x76E
L_34383:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_34384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x920
bug_35:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34390
L_34391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_34392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34392
.p2align 0x4
.long 0x504
L_34392:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_34390:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x923
L_34403:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x58(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_34404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x92F
L_34509:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34510
L_34575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_34576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34576
.p2align 0x4
.long 0x93D
L_34576:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_34510:
	movq 0xF8(%rbp),%r15
	jmp L_34511
.p2align 0x4
.long 0x48A
L_34540:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xC0(%rbp)
	jmp L_34528
.p2align 0x4
.long 0x930
L_34512:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34513
L_34573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_34574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34574
.p2align 0x4
.long 0x93A
L_34574:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_34513:
	movq 0xD8(%rbp),%r14
	cmpq $0x1,%r14
	je L_34516
L_34514:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xD8(%rbp)
	jmp L_34504
.p2align 0x4
.long 0x934
L_34529:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34530
L_34532:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_34533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34533
.p2align 0x4
.long 0x935
L_34533:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_34530:
	movq 0xC0(%rbp),%r15
	jmp L_34531
.p2align 0x4
.long 0x959
L_35238:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r14
	movq %r14,0x118(%rbp)
	movl 0x110(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_387144
L_35239:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_35240:
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_35241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387144:
L_35278:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_35240
.p2align 0x4
.long 0x92F
toString_31:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_31+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x93E
toString_28:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq $0x1,0x118(%rbp)
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (rev_28+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x92F
toString_29:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_29+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x958
L_35158:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq %r15,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_35159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x92F
toString_27:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_27+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x958
L_35117:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq %r15,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_35118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x92F
toString_26:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_26+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x93E
toString_24:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq $0x1,0x118(%rbp)
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (rev_24+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x92F
toString_25:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_25+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x955
L_35039:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_35040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x94E
L_34995:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34996
L_35035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35036
.p2align 0x4
.long 0x954
L_35036:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_34996:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x110(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xE538)(%rip),%r13
	movq %r13,0x8(%r14)
	movl 0x64(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_387145
L_34997:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_34998:
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_34999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387145:
L_35034:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_34998
.p2align 0x4
.long 0x93E
toString_20:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq $0x1,0x118(%rbp)
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (rev_20+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x92F
toString_21:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_21+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x92F
L_34898:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (toString_19+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x92F
L_34888:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34889
L_34890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_34891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34891
.p2align 0x4
.long 0x93D
L_34891:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_34889:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE570)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x93E
toString_17:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq $0x1,0x118(%rbp)
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (rev_17+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x92F
toString_18:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_18+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x92F
toString_16:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_16+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x94E
L_34755:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34756
L_34795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34796
.p2align 0x4
.long 0x954
L_34796:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_34756:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x110(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xE538)(%rip),%r13
	movq %r13,0x8(%r14)
	movl 0x64(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_387148
L_34757:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_34758:
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_34759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387148:
L_34794:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_34758
.p2align 0x4
.long 0x92F
L_34720:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34721
L_34722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_34723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34723
.p2align 0x4
.long 0x93D
L_34723:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_34721:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x942
L_34671:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r14
	movq %r14,0x110(%rbp)
	movl 0x108(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_387151
L_34672:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_34673:
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_34674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387151:
L_34715:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_34673
.p2align 0x4
.long 0x92F
toString_14:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
toString_13:
	movq %r15,0x108(%rbp)
	movq $0x1,0x100(%rbp)
	addq $0x100,%rbp
	leaq (rev_14+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x93E
toString_11:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq $0x1,0x118(%rbp)
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (rev_12+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x92F
toString_12:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_13+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x931
L_34519:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xC8(%rbp),%r14
	cmpq $0x1,%r14
	je loop_478
L_34520:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xC8(%rbp)
	jmp L_34518
.p2align 0x4
.long 0x932
L_34522:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq $0x1,%r15
	je L_387152
L_34523:
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_34524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tokens_0
.p2align 0x4
L_387152:
L_34564:
	leaq L_34534(%rip),%r14
	movq %r14,0x18(%rbp)
	movq 0xA0(%rbp),%r14
	movq %r14,0xF8(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,0x100(%rbp)
	movq 0xB0(%rbp),%r14
	movq %r14,0x108(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,0x110(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x118(%rbp)
	addq $0xF8,%rbp
	leaq (L_34565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeIn_0
.p2align 0x4
.long 0x91F
L_34384:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_34385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x6F4
L_34404:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_34405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x95A
L_35241:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35242
L_35276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_35277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35277
.p2align 0x4
.long 0x95B
L_35277:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_35242:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x118(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x120(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x128(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x130(%rbp)
	addq $0x118,%rbp
	leaq (toString_30+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x92F
rev_31:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387156
L_35260:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35261:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387155
.p2align 0x4,,0x7
L_35262:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387154
L_35263:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35261
.p2align 0x4
L_387154:
L_35265:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387155:
L_35266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35267
.p2align 0x4
.long 0x93F
L_35267:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35262
.p2align 0x4
L_387156:
L_35268:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35265
.p2align 0x4
.long 0x93E
rev_28:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq $0x1,%r15
	je L_387159
L_35201:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x110(%rbp)
	movq %r14,0x118(%rbp)
	movq $0x1,0x120(%rbp)
.p2align 0x4,,0x7
L_35202:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387158
.p2align 0x4,,0x7
L_35203:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x110(%rbp),%r14
	cmpq $0x1,%r14
	je L_387157
L_35204:
	movq %r15,0x120(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x118(%rbp)
	jmp L_35202
.p2align 0x4
L_387157:
L_35206:
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_35207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387158:
L_35231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_35232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35232
.p2align 0x4
.long 0x941
L_35232:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp L_35203
.p2align 0x4
L_387159:
L_35233:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35206
.p2align 0x4
.long 0x92F
rev_29:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387162
L_35218:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35219:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387161
.p2align 0x4,,0x7
L_35220:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387160
L_35221:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35219
.p2align 0x4
L_387160:
L_35223:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387161:
L_35224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35225
.p2align 0x4
.long 0x93F
L_35225:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35220
.p2align 0x4
L_387162:
L_35226:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35223
.p2align 0x4
.long 0x958
L_35159:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35160
L_35180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35181
.p2align 0x4
.long 0x93F
L_35181:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_35160:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r14d
	incl %r14d
	jo L_34581
L_35161:
	movq 0xF8(%rbp),%r13
	cmpq $0x1,%r13
	je L_387163
L_35162:
	movl %r14d,0x64(%rbp)
	movq %r15,0x100(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0xF8(%rbp)
	jmp L_35155
.p2align 0x4
L_387163:
L_35163:
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35164:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387165
.p2align 0x4,,0x7
L_35165:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_35168
L_35166:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35164
.p2align 0x4
L_387165:
L_35178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35179
.p2align 0x4
.long 0x93F
L_35179:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35165
.p2align 0x4
.long 0x92F
rev_27:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387170
L_35169:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35170:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387169
.p2align 0x4,,0x7
L_35171:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387168
L_35172:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35170
.p2align 0x4
L_387168:
L_35174:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387169:
L_35175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35176
.p2align 0x4
.long 0x93F
L_35176:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35171
.p2align 0x4
L_387170:
L_35177:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35174
.p2align 0x4
.long 0x958
L_35118:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35119
L_35139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35140
.p2align 0x4
.long 0x93F
L_35140:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_35119:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r14d
	incl %r14d
	jo L_34581
L_35120:
	movq 0xF8(%rbp),%r13
	cmpq $0x1,%r13
	je L_387171
L_35121:
	movl %r14d,0x64(%rbp)
	movq %r15,0x100(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0xF8(%rbp)
	jmp L_35116
.p2align 0x4
L_387171:
L_35122:
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35123:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387173
.p2align 0x4,,0x7
L_35124:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_35127
L_35125:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35123
.p2align 0x4
L_387173:
L_35137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35138
.p2align 0x4
.long 0x93F
L_35138:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35124
.p2align 0x4
.long 0x92F
rev_26:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387178
L_35128:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35129:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387177
.p2align 0x4,,0x7
L_35130:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387176
L_35131:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35129
.p2align 0x4
L_387176:
L_35133:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387177:
L_35134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35135
.p2align 0x4
.long 0x93F
L_35135:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35130
.p2align 0x4
L_387178:
L_35136:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35133
.p2align 0x4
.long 0x93E
rev_24:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq $0x1,%r15
	je L_387181
L_35067:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x110(%rbp)
	movq %r14,0x118(%rbp)
	movq $0x1,0x120(%rbp)
.p2align 0x4,,0x7
L_35068:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387180
.p2align 0x4,,0x7
L_35069:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x110(%rbp),%r14
	cmpq $0x1,%r14
	je L_387179
L_35070:
	movq %r15,0x120(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x118(%rbp)
	jmp L_35068
.p2align 0x4
L_387179:
L_35072:
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_35073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387180:
L_35097:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_35098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35098
.p2align 0x4
.long 0x941
L_35098:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp L_35069
.p2align 0x4
L_387181:
L_35099:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35072
.p2align 0x4
.long 0x92F
rev_25:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387184
L_35084:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35085:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387183
.p2align 0x4,,0x7
L_35086:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387182
L_35087:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35085
.p2align 0x4
L_387182:
L_35089:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387183:
L_35090:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35091
.p2align 0x4
.long 0x93F
L_35091:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35086
.p2align 0x4
L_387184:
L_35092:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35089
.p2align 0x4
.long 0x955
L_35040:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35041
L_35056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_35057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35057
.p2align 0x4
.long 0x957
L_35057:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_35041:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x108(%rbp)
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE528)(%rip),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (L_35042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x943
L_34999:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35000
L_35032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_35033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35033
.p2align 0x4
.long 0x94D
L_35033:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_35000:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x118(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE540)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x100(%rbp),%r15
	andq $0x1,%r15
	jnz L_387186
L_35001:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_35002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387186:
L_35016:
	movq 0x100(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,0x64(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_35017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x93E
rev_20:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq $0x1,%r15
	je L_387190
L_34923:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x110(%rbp)
	movq %r14,0x118(%rbp)
	movq $0x1,0x120(%rbp)
.p2align 0x4,,0x7
L_34924:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387189
.p2align 0x4,,0x7
L_34925:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x110(%rbp),%r14
	cmpq $0x1,%r14
	je L_387188
L_34926:
	movq %r15,0x120(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x118(%rbp)
	jmp L_34924
.p2align 0x4
L_387188:
L_34928:
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_34929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387189:
L_34953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_34954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34954
.p2align 0x4
.long 0x941
L_34954:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp L_34925
.p2align 0x4
L_387190:
L_34955:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34928
.p2align 0x4
.long 0x92F
rev_21:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387193
L_34940:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34941:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387192
.p2align 0x4,,0x7
L_34942:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387191
L_34943:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34941
.p2align 0x4
L_387191:
L_34945:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387192:
L_34946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34947
.p2align 0x4
.long 0x93F
L_34947:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34942
.p2align 0x4
L_387193:
L_34948:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34945
.p2align 0x4
.long 0x92F
toString_19:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_19+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x93E
rev_17:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq $0x1,%r15
	je L_387196
L_34841:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x110(%rbp)
	movq %r14,0x118(%rbp)
	movq $0x1,0x120(%rbp)
.p2align 0x4,,0x7
L_34842:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387195
.p2align 0x4,,0x7
L_34843:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x110(%rbp),%r14
	cmpq $0x1,%r14
	je L_387194
L_34844:
	movq %r15,0x120(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x118(%rbp)
	jmp L_34842
.p2align 0x4
L_387194:
L_34846:
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_34847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387195:
L_34871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_34872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34872
.p2align 0x4
.long 0x941
L_34872:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp L_34843
.p2align 0x4
L_387196:
L_34873:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34846
.p2align 0x4
.long 0x92F
rev_18:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387199
L_34858:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34859:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387198
.p2align 0x4,,0x7
L_34860:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387197
L_34861:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34859
.p2align 0x4
L_387197:
L_34863:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387198:
L_34864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34865
.p2align 0x4
.long 0x93F
L_34865:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34860
.p2align 0x4
L_387199:
L_34866:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34863
.p2align 0x4
.long 0x92F
rev_16:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387202
L_34803:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34804:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387201
.p2align 0x4,,0x7
L_34805:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387200
L_34806:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34804
.p2align 0x4
L_387200:
L_34808:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387201:
L_34809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34810
.p2align 0x4
.long 0x93F
L_34810:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34805
.p2align 0x4
L_387202:
L_34811:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34808
.p2align 0x4
.long 0x943
L_34759:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34760
L_34792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_34793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34793
.p2align 0x4
.long 0x94D
L_34793:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_34760:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x118(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE540)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x100(%rbp),%r15
	andq $0x1,%r15
	jnz L_387203
L_34761:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_34762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387203:
L_34776:
	movq 0x100(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,0x64(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_34777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x943
L_34674:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34675
L_34713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_34714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34714
.p2align 0x4
.long 0x94D
L_34714:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_34675:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x118(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE518)(%rip),%r14
	movq %r14,0x8(%r15)
	movl 0x100(%rbp),%r15d
	movl %r15d,0x128(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_34676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x92F
rev_14:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387208
L_34693:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34694:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387207
.p2align 0x4,,0x7
L_34695:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387206
L_34696:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34694
.p2align 0x4
L_387206:
L_34698:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387207:
L_34699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34700
.p2align 0x4
.long 0x93F
L_34700:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34695
.p2align 0x4
L_387208:
L_34701:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34698
.p2align 0x4
.long 0x93E
rev_12:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq $0x1,%r15
	je L_387211
L_34635:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x110(%rbp)
	movq %r14,0x118(%rbp)
	movq $0x1,0x120(%rbp)
.p2align 0x4,,0x7
L_34636:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387210
.p2align 0x4,,0x7
L_34637:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x110(%rbp),%r14
	cmpq $0x1,%r14
	je L_387209
L_34638:
	movq %r15,0x120(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x118(%rbp)
	jmp L_34636
.p2align 0x4
L_387209:
L_34640:
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_34641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387210:
L_34665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_34666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34666
.p2align 0x4
.long 0x941
L_34666:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp L_34637
.p2align 0x4
L_387211:
L_34667:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34640
.p2align 0x4
.long 0x92F
rev_13:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387214
L_34652:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34653:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387213
.p2align 0x4,,0x7
L_34654:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387212
L_34655:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34653
.p2align 0x4
L_387212:
L_34657:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387213:
L_34658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34659
.p2align 0x4
.long 0x93F
L_34659:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34654
.p2align 0x4
L_387214:
L_34660:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34657
.p2align 0x4
.long 0x931
L_34524:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34526
L_34562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_34563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34563
.p2align 0x4
.long 0x93A
L_34563:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_34526:
	movq 0xD8(%rbp),%r11
	movq %r11,%r15
	andq $0x3,%r15
	jnz x_66
L_34541:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movq %r10,0xF0(%rbp)
L_34542:
	movq %r15,%r14
	andq $0x3,%r14
	jnz x_66
L_34543:
	movq 0x8(%r15),%r11
	movq %r11,0xD8(%rbp)
	movq 0x0(%r15),%r11
	cmpq (globalObjptr+0xCD40)(%rip),%r11
	je L_34556
L_34544:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	cmpq $0x1,%r14
	jne x_66
L_34546:
	xorq %r13,%r13
	movq %r11,%r15
.p2align 0x4,,0x7
vectorEqualLoop_121:
	cmpq %r13,%r14
	je L_387216
L_34547:
	movq (globalObjptr+0xCD40)(%rip),%r10
	movb 0x0(%r10,%r13,1),%r11b
	cmpb %r11b,0x0(%r15,%r13,1)
	jne L_387215
L_34552:
	incq %r13
	jmp vectorEqualLoop_121
.p2align 0x4
L_387215:
L_34548:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb x_66
L_34550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_34551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34551
.p2align 0x4
.long 0x938
L_34551:
	addq $0xFFFFFFFFFFFFFF28,%rbp
x_66:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE4E0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (bug_36+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387216:
L_34553:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34556
L_34559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_34560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34560
.p2align 0x4
.long 0x939
L_34560:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_34556:
	movq 0xD8(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz x_66
L_34557:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x8(%r15)
	jne x_66
L_34558:
	movq $0xDE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xF0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xF8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xF8,%rbp
	leaq (loop_479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp add_2
.p2align 0x4
.long 0x93B
L_34565:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34566
L_34570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_34571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34571
.p2align 0x4
.long 0x93C
L_34571:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_34566:
	movq $0x40E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x48,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x38(%r15)
	jmp L_34567
.p2align 0x4
.long 0x69B
L_34385:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34386
L_34387:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_34388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34388
.p2align 0x4
.long 0x488
L_34388:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_34386:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x847
L_34405:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34406
L_34407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_34408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34408
.p2align 0x4
.long 0x6F7
L_34408:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_34406:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x93E
toString_30:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq $0x1,0x118(%rbp)
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (rev_30+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x93E
L_35207:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_35208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x93E
L_35073:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_35074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x956
L_35042:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_35043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x94F
L_35002:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35003
L_35014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_35015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35015
.p2align 0x4
.long 0x950
L_35015:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_35003:
	movq 0xF8(%rbp),%r15
L_35004:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE018)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (toString_22+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x944
L_35017:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x100(%rbp)
	movl 0x64(%rbp),%r15d
	movl %r15d,0x128(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_35018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x93E
L_34929:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_34930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x92F
rev_19:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387226
L_34899:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34900:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387225
.p2align 0x4,,0x7
L_34901:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387224
L_34902:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34900
.p2align 0x4
L_387224:
L_34904:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387225:
L_34905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34906
.p2align 0x4
.long 0x93F
L_34906:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34901
.p2align 0x4
L_387226:
L_34907:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34904
.p2align 0x4
.long 0x93E
L_34847:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_34848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x94F
L_34762:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34763
L_34774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_34775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34775
.p2align 0x4
.long 0x950
L_34775:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_34763:
	movq 0xF8(%rbp),%r15
L_34764:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE018)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (toString_15+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x944
L_34777:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x100(%rbp)
	movl 0x64(%rbp),%r15d
	movl %r15d,0x128(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_34778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x944
L_34676:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_34677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x93E
L_34641:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_34642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x933
bug_36:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34527
L_34538:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_34539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34539
.p2align 0x4
.long 0x937
L_34539:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_34527:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	jmp L_34528
.p2align 0x4
.long 0x932
loop_479:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp loop_478
.p2align 0x4
.long 0x93E
rev_30:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq $0x1,%r15
	je L_387231
L_35243:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x110(%rbp)
	movq %r14,0x118(%rbp)
	movq $0x1,0x120(%rbp)
.p2align 0x4,,0x7
L_35244:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387230
.p2align 0x4,,0x7
L_35245:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x110(%rbp),%r14
	cmpq $0x1,%r14
	je L_387229
L_35246:
	movq %r15,0x120(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x118(%rbp)
	jmp L_35244
.p2align 0x4
L_387229:
L_35248:
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_35249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387230:
L_35273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_35274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35274
.p2align 0x4
.long 0x941
L_35274:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp L_35245
.p2align 0x4
L_387231:
L_35275:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35248
.p2align 0x4
.long 0x93E
L_35208:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35209
L_35229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_35230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35230
.p2align 0x4
.long 0x940
L_35230:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_35209:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r14d
	incl %r14d
	jo L_34581
L_35210:
	movq 0x100(%rbp),%r13
	cmpq $0x1,%r13
	je L_387232
L_35211:
	movl %r14d,0x64(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x100(%rbp)
	jmp L_35200
.p2align 0x4
L_387232:
L_35212:
	movq 0x108(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35213:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387234
.p2align 0x4,,0x7
L_35214:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_35217
L_35215:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35213
.p2align 0x4
L_387234:
L_35227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35228
.p2align 0x4
.long 0x93F
L_35228:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35214
.p2align 0x4
.long 0x93E
L_35074:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35075
L_35095:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_35096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35096
.p2align 0x4
.long 0x940
L_35096:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_35075:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r14d
	incl %r14d
	jo L_34581
L_35076:
	movq 0x100(%rbp),%r13
	cmpq $0x1,%r13
	je L_387237
L_35077:
	movl %r14d,0x64(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x100(%rbp)
	jmp L_35066
.p2align 0x4
L_387237:
L_35078:
	movq 0x108(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35079:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387239
.p2align 0x4,,0x7
L_35080:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_35083
L_35081:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35079
.p2align 0x4
L_387239:
L_35093:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35094
.p2align 0x4
.long 0x93F
L_35094:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35080
.p2align 0x4
.long 0x956
L_35043:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35044
L_35054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35055
.p2align 0x4
.long 0x954
L_35055:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_35044:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE530)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (toString_23+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x92F
toString_22:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_22+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x951
L_35018:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_35019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x93E
L_34930:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34931
L_34951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_34952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34952
.p2align 0x4
.long 0x940
L_34952:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_34931:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r14d
	incl %r14d
	jo L_34581
L_34932:
	movq 0x100(%rbp),%r13
	cmpq $0x1,%r13
	je L_387243
L_34933:
	movl %r14d,0x64(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x100(%rbp)
	jmp L_34922
.p2align 0x4
L_387243:
L_34934:
	movq 0x108(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34935:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387245
.p2align 0x4,,0x7
L_34936:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_34939
L_34937:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34935
.p2align 0x4
L_387245:
L_34949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34950
.p2align 0x4
.long 0x93F
L_34950:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34936
.p2align 0x4
.long 0x93E
L_34848:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34849
L_34869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_34870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34870
.p2align 0x4
.long 0x940
L_34870:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_34849:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r14d
	incl %r14d
	jo L_34581
L_34850:
	movq 0x100(%rbp),%r13
	cmpq $0x1,%r13
	je L_387248
L_34851:
	movl %r14d,0x64(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x100(%rbp)
	jmp L_34840
.p2align 0x4
L_387248:
L_34852:
	movq 0x108(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34853:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387250
.p2align 0x4,,0x7
L_34854:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_34857
L_34855:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34853
.p2align 0x4
L_387250:
L_34867:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34868
.p2align 0x4
.long 0x93F
L_34868:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34854
.p2align 0x4
.long 0x92F
toString_15:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_15+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x951
L_34778:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_34779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x944
L_34677:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34678
L_34711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_34712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34712
.p2align 0x4
.long 0x94C
L_34712:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_34678:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x120(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE520)(%rip),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_34679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x93E
L_34642:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34643
L_34663:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_34664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34664
.p2align 0x4
.long 0x940
L_34664:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_34643:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r14d
	incl %r14d
	jo L_34581
L_34644:
	movq 0x100(%rbp),%r13
	cmpq $0x1,%r13
	je L_387254
L_34645:
	movl %r14d,0x64(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x100(%rbp)
	jmp L_34634
.p2align 0x4
L_387254:
L_34646:
	movq 0x108(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34647:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387256
.p2align 0x4,,0x7
L_34648:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_34651
L_34649:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34647
.p2align 0x4
L_387256:
L_34661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34662
.p2align 0x4
.long 0x93F
L_34662:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34648
.p2align 0x4
.long 0x93E
L_35249:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_35250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x92F
toString_23:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (rev_23+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x92F
rev_22:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387261
L_35005:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35006:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387260
.p2align 0x4,,0x7
L_35007:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387259
L_35008:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35006
.p2align 0x4
L_387259:
L_35010:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387260:
L_35011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35012
.p2align 0x4
.long 0x93F
L_35012:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35007
.p2align 0x4
L_387261:
L_35013:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35010
.p2align 0x4
.long 0x951
L_35019:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35020
L_35030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_35031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35031
.p2align 0x4
.long 0x953
L_35031:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_35020:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x108(%rbp)
	addq $0x18,%r12
	movq 0x100(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_35021:
	addl 0x0(%r15),%ecx
	movl %ecx,0x64(%rbp)
	jo L_34581
L_35022:
	cmpq $0x1,%r14
	je L_387262
L_35023:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_35021
.p2align 0x4
L_387262:
L_35024:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35025
L_35028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_35029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35029
.p2align 0x4
.long 0x952
L_35029:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_35025:
	movl 0x64(%rbp),%r15d
	testl %r15d,%r15d
	jz L_387263
L_35026:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_35004
.p2align 0x4
L_387263:
L_35027:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_35004
.p2align 0x4
.long 0x92F
rev_15:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387269
L_34765:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_34766:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387268
.p2align 0x4,,0x7
L_34767:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387267
L_34768:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_34766
.p2align 0x4
L_387267:
L_34770:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387268:
L_34771:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_34772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34772
.p2align 0x4
.long 0x93F
L_34772:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_34767
.p2align 0x4
L_387269:
L_34773:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_34770
.p2align 0x4
.long 0x951
L_34779:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34780
L_34790:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_34791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34791
.p2align 0x4
.long 0x953
L_34791:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_34780:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x108(%rbp)
	addq $0x18,%r12
	movq 0x100(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_34781:
	addl 0x0(%r15),%ecx
	movl %ecx,0x64(%rbp)
	jo L_34581
L_34782:
	cmpq $0x1,%r14
	je L_387270
L_34783:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_34781
.p2align 0x4
L_387270:
L_34784:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34785
L_34788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_34789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34789
.p2align 0x4
.long 0x952
L_34789:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_34785:
	movl 0x64(%rbp),%r15d
	testl %r15d,%r15d
	jz L_387271
L_34786:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_34764
.p2align 0x4
L_387271:
L_34787:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_34764
.p2align 0x4
.long 0x945
L_34679:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_34680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x93E
L_35250:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35251
L_35271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_35272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35272
.p2align 0x4
.long 0x940
L_35272:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_35251:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x64(%rbp),%r14d
	incl %r14d
	jo L_34581
L_35252:
	movq 0x100(%rbp),%r13
	cmpq $0x1,%r13
	je L_387275
L_35253:
	movl %r14d,0x64(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x100(%rbp)
	jmp L_35237
.p2align 0x4
L_387275:
L_35254:
	movq 0x108(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35255:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387277
.p2align 0x4,,0x7
L_35256:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_35259
L_35257:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35255
.p2align 0x4
L_387277:
L_35269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35270
.p2align 0x4
.long 0x93F
L_35270:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35256
.p2align 0x4
.long 0x92F
rev_23:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_387282
L_35045:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_35046:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387281
.p2align 0x4,,0x7
L_35047:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387280
L_35048:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_35046
.p2align 0x4
L_387280:
L_35050:
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_34509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387281:
L_35051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_35052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35052
.p2align 0x4
.long 0x93F
L_35052:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	jmp L_35047
.p2align 0x4
L_387282:
L_35053:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_35050
.p2align 0x4
.long 0x945
L_34680:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34681
L_34709:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_34710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34710
.p2align 0x4
.long 0x94B
L_34710:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_34681:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x128(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE528)(%rip),%r14
	movq %r14,0x8(%r15)
	movl 0x104(%rbp),%r15d
	movl %r15d,0x138(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_34682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x946
L_34682:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_34683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x946
L_34683:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34684
L_34707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_34708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34708
.p2align 0x4
.long 0x94A
L_34708:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_34684:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE530)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x120(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_34685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x947
L_34685:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34686
L_34705:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_34706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34706
.p2align 0x4
.long 0x949
L_34706:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_34686:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x100(%rbp)
	addq $0x18,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_34687:
	addl 0x0(%r15),%ecx
	movl %ecx,0x64(%rbp)
	jo L_34581
L_34688:
	cmpq $0x1,%r14
	je L_387285
L_34689:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_34687
.p2align 0x4
L_387285:
L_34690:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_34691
L_34703:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_34704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_34704
.p2align 0x4
.long 0x948
L_34704:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_34691:
	movl 0x64(%rbp),%r15d
	testl %r15d,%r15d
	jz L_387286
L_34692:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp toString_13
.p2align 0x4
L_387286:
L_34702:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp toString_13
