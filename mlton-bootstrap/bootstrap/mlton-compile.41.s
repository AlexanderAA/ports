/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:09:11 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl foreach_3
.hidden foreach_3
foreach_3:
L_132427:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_132428
L_132709:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_132710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132710
.p2align 0x4
.long 0x45F
L_132710:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_132428:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_428891
L_132429:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428891:
L_132430:
	cmpl $0x0,0x10(%rbp)
	jl L_428975
L_132431:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_1372:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428974
.p2align 0x4,,0x7
L_132432:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_428973
L_132434:
	movslq %r15d,%r14
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_428972
	cmpq $0x2,%r15
	je L_428971
L_132435:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x19A4,%rax
	cmpq $0xE,%rax
	ja L_428892
	leaq jumpTable_291(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_291:
.quad L_428970,L_428957,L_428956,L_428955,L_428942,L_428941,L_428940,L_428927,L_428926,L_428925,L_428923,L_428922,L_428909,L_428908,L_428907
.text
.p2align 0x4
L_428892:
L_132436:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x28(%rbp)
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_428906
L_132437:
	movq $0x21B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_132438:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428905
.p2align 0x4,,0x7
L_132439:
	movq $0x1301,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x38(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x30(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x0(%r10),%r14
	movq 0x28(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_428904
L_132441:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_428903
L_132442:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_132444:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_428902
L_132460:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xDA1,%r11
	jne L_428901
L_132461:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_428898
L_132445:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_428897
L_132447:
	cmpq $0x1,%r15
	je L_428893
L_132448:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_132444
.p2align 0x4
L_428893:
L_132449:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428896
.p2align 0x4,,0x7
L_132450:
	movl 0x18(%rbp),%ecx
L_132451:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_428895
L_132453:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_132455
L_132457:
	movl %ecx,0x0(%r15)
L_132455:
	movq $0x1B43,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
.p2align 0x4,,0x7
L_132456:
	incl 0x14(%rbp)
	jmp loop_1372
.p2align 0x4
L_428895:
L_132452:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428896:
L_132458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_132459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132459
.p2align 0x4
.long 0xCA7
L_132459:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_132450
.p2align 0x4
L_428897:
L_132446:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428898:
L_132463:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_132452
L_132464:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_132466
L_132467:
	movl %ecx,0x0(%r15)
L_132466:
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428901:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_132445
.p2align 0x4
L_428902:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_132445
.p2align 0x4
L_428903:
L_132468:
	xorl %ecx,%ecx
	jmp L_132451
.p2align 0x4
L_428904:
L_132440:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428905:
L_132469:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_132470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132470
.p2align 0x4
.long 0x554
L_132470:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_132439
.p2align 0x4
L_428906:
L_132471:
	movq %r11,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_132472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp new_25
.p2align 0x4
L_428907:
L_132651:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_132652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_428908:
L_132650:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_132492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1325
.p2align 0x4
L_428909:
L_132624:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_132440
L_132625:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_428920
L_132626:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_132628:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_132629
L_132642:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD72,%r13
	jne L_132629
L_132643:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x18(%rbp)
	je L_428915
L_132629:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_132446
L_132630:
	cmpq $0x1,%r15
	je L_428910
L_132631:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_132628
.p2align 0x4
L_428910:
L_132632:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428913
.p2align 0x4,,0x7
L_132633:
	movl 0x28(%rbp),%ecx
L_132634:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_132452
L_132635:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_132637
L_132639:
	movl %ecx,0x0(%r15)
L_132637:
	movq $0x1343,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1AE5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_132638:
	movb $0x1,0x0(%r15)
	jmp L_132456
.p2align 0x4
L_428913:
L_132640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_132641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132641
.p2align 0x4
.long 0x5E0
L_132641:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_132633
.p2align 0x4
L_428915:
L_132645:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_132452
L_132646:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_428916
L_132648:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_132638
.p2align 0x4
L_428916:
L_132647:
	movq %r13,%r15
	jmp L_132638
.p2align 0x4
L_428920:
L_132649:
	xorl %ecx,%ecx
	jmp L_132634
.p2align 0x4
L_428922:
L_132623:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_132492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1324
.p2align 0x4
L_428923:
L_132613:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1EB0,%r15
	je L_428924
L_132619:
	movq %r14,0x28(%rbp)
	movq 0x58(%r11),%r15
	movl 0x0(%r11),%r14d
	movq 0x50(%r11),%r13
	movq 0x48(%r11),%r10
	movq 0x40(%r11),%r9
	movq 0x38(%r11),%r8
	movq 0x30(%r11),%rsp
	movq 0x28(%r11),%rsi
	movq 0x20(%r11),%rdi
	movq 0x18(%r11),%rdx
	movq 0x10(%r11),%rcx
	movq 0x8(%r11),%rbx
	movq $0x8C5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r14d,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r10,0x18(%r11)
	movq %r9,0x20(%r11)
	movq %r8,0x28(%r11)
	movq %rsp,0x30(%r11)
	movq %rsi,0x38(%r11)
	movq %rdi,0x40(%r11)
	movq %rdx,0x48(%r11)
	movq %rcx,0x50(%r11)
	movq %rbx,0x58(%r11)
	addq $0x68,%r12
	movl $0x0,0x4(%r11)
	movq %r11,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_132620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_428924:
L_132614:
	movq %r14,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_132615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1315
.p2align 0x4
L_428925:
L_132612:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_132492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1323
.p2align 0x4
L_428926:
L_132611:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_132492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_0
.p2align 0x4
L_428927:
L_132586:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r15
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r11
	movq $0x1143,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r11,0x0(%r13)
	movq $0x2115,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x18(%rbp)
	movq %r13,0x0(%r10)
	addq $0x10,%r12
	movq 0x8(%r15),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_132440
L_132587:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_428938
L_132588:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_132590:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_428937
L_132603:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD6A,%r11
	jne L_428936
L_132604:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x28)(%rip)
	je L_428933
L_132591:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_132446
L_132592:
	cmpq $0x1,%r15
	je L_428928
L_132593:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x28)(%rip),%r14
	jmp L_132590
.p2align 0x4
L_428928:
L_132594:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428931
.p2align 0x4,,0x7
L_132595:
	movl 0x30(%rbp),%ecx
L_132596:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_132452
L_132597:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_132599
L_132600:
	movl %ecx,0x0(%r15)
L_132599:
	movq $0x1AD5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_132456
.p2align 0x4
L_428931:
L_132601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_132602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132602
.p2align 0x4
.long 0xEAC
L_132602:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_132595
.p2align 0x4
L_428933:
L_132606:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_132452
L_132607:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_132466
L_132609:
	movl %ecx,0x0(%r15)
	jmp L_132466
.p2align 0x4
L_428936:
	movq %r14,(localObjptr+0x28)(%rip)
	jmp L_132591
.p2align 0x4
L_428937:
	movq %r14,(localObjptr+0x28)(%rip)
	jmp L_132591
.p2align 0x4
L_428938:
L_132610:
	xorl %ecx,%ecx
	jmp L_132596
.p2align 0x4
L_428940:
L_132585:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_132492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_0
.p2align 0x4
L_428941:
L_132584:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_132492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1323
.p2align 0x4
L_428942:
L_132559:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x18(%rbp)
	movq 0x0(%r9),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_132440
L_132560:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_428953
L_132561:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_132563:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_428952
L_132576:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD6E,%r11
	jne L_428951
L_132577:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x18)(%rip)
	je L_428948
L_132564:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_132446
L_132565:
	cmpq $0x1,%r15
	je L_428943
L_132566:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_132563
.p2align 0x4
L_428943:
L_132567:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428946
.p2align 0x4,,0x7
L_132568:
	movl 0x30(%rbp),%ecx
L_132569:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_132452
L_132570:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_132572
L_132573:
	movl %ecx,0x0(%r15)
L_132572:
	movq $0x1ADD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_132456
.p2align 0x4
L_428946:
L_132574:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_132575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132575
.p2align 0x4
.long 0xEAC
L_132575:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_132568
.p2align 0x4
L_428948:
L_132579:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_132452
L_132580:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_132466
L_132582:
	movl %ecx,0x0(%r15)
	jmp L_132466
.p2align 0x4
L_428951:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_132564
.p2align 0x4
L_428952:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_132564
.p2align 0x4
L_428953:
L_132583:
	xorl %ecx,%ecx
	jmp L_132569
.p2align 0x4
L_428955:
L_132558:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_132492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1324
.p2align 0x4
L_428956:
L_132556:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
	movq $0x3D8D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	addq $0x28,%rbp
	leaq (L_132557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_428957:
L_132530:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_132440
L_132531:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_428968
L_132532:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_132534:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_132535
L_132548:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD72,%r13
	jne L_132535
L_132549:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x18(%rbp)
	je L_428963
L_132535:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_132446
L_132536:
	cmpq $0x1,%r15
	je L_428958
L_132537:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_132534
.p2align 0x4
L_428958:
L_132538:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428961
.p2align 0x4,,0x7
L_132539:
	movl 0x28(%rbp),%ecx
L_132540:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_132452
L_132541:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_132543
L_132545:
	movl %ecx,0x0(%r15)
L_132543:
	movq $0x1343,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1AE5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_132544:
	movb $0x1,0x0(%r15)
	jmp L_132456
.p2align 0x4
L_428961:
L_132546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_132547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132547
.p2align 0x4
.long 0x5E0
L_132547:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_132539
.p2align 0x4
L_428963:
L_132551:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_132452
L_132552:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_428964
L_132554:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_132544
.p2align 0x4
L_428964:
L_132553:
	movq %r13,%r15
	jmp L_132544
.p2align 0x4
L_428968:
L_132555:
	xorl %ecx,%ecx
	jmp L_132540
.p2align 0x4
L_428970:
L_132476:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_132477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_428971:
L_132705:
	movq 0x8(%r13),%r14
	movq 0x10(%r14),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r11)
	jmp L_132456
.p2align 0x4
L_428972:
L_132704:
	movq 0x8(%r13),%r14
	movq 0x10(%r14),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r11)
	jmp L_132456
.p2align 0x4
L_428973:
L_132433:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428974:
L_132706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_132707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132707
.p2align 0x4
.long 0x45D
L_132707:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_132432
.p2align 0x4
L_428975:
L_132708:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x525
L_132472:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl 0x44(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132473
L_132474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132475
.p2align 0x4
.long 0xF30
L_132475:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_132473:
	movq $0xFB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x3C(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x21B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	jmp L_132438
.p2align 0x4
.long 0x526
L_132652:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_132653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x523
L_132492:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_132456
.p2align 0x4
.long 0x555
L_132620:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_132456
L_132617:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_132446
L_132618:
	movl %r14d,0x0(%r15)
	jmp L_132456
.p2align 0x4
.long 0x555
L_132615:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10DC,%r13
	je L_132617
	jmp L_132456
.p2align 0x4
.long 0x555
L_132557:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_132456
.p2align 0x4
.long 0x526
L_132477:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_132478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x526
L_132653:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_132654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x526
L_132478:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_132479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x540
L_132654:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_132655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1315
.p2align 0x4
.long 0x540
L_132479:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_132480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1315
.p2align 0x4
.long 0x571
L_132655:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10DC,%r15
	je L_428981
L_132656:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_132657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_428981:
L_132672:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_132673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5B3
L_132480:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10DC,%r15
	je L_428982
L_132481:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_132482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_428982:
L_132498:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_132499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x542
L_132657:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132658
L_132670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_132671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132671
.p2align 0x4
.long 0x546
L_132671:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_132658:
	movq 0x18(%rbp),%r15
L_132659:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_132660:
	addl 0x0(%r14),%ecx
	movl %ecx,0x20(%rbp)
	jo L_132446
L_132661:
	cmpq $0x1,%r15
	je L_428983
L_132662:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_132660
.p2align 0x4
L_428983:
L_132663:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132664
L_132668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_132669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132669
.p2align 0x4
.long 0x569
L_132669:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_132664:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_428984
L_132665:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
x_482:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x48(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_132666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_428984:
L_132667:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_482
.p2align 0x4
.long 0x528
L_132673:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_428988
L_132674:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_132675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_428988:
L_132699:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_132700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1C92
L_132482:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132483
L_132496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_132497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132497
.p2align 0x4
.long 0x1C93
L_132497:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_132483:
	movq 0x20(%rbp),%r15
L_132484:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_132485:
	addl 0x0(%r14),%ecx
	movl %ecx,0x28(%rbp)
	jo L_132446
L_132486:
	cmpq $0x1,%r15
	je L_428989
L_132487:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_132485
.p2align 0x4
L_428989:
L_132488:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132489
L_132494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_132495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132495
.p2align 0x4
.long 0x5E0
L_132495:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_132489:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_428990
L_132490:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
x_481:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_132491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_428990:
L_132493:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_481
.p2align 0x4
.long 0x584
L_132499:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_428994
L_132500:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_132501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_428994:
L_132525:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_132526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x568
L_132666:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_132492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x57E
L_132675:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_132676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_5
.p2align 0x4
.long 0x19CF
L_132700:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132701
L_132702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_132703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132703
.p2align 0x4
.long 0x58F
L_132703:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_132701:
	movq 0x20(%rbp),%r15
L_132684:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_132685:
	addl 0x0(%r14),%ecx
	movl %ecx,0x18(%rbp)
	jo L_132446
L_132686:
	cmpq $0x1,%r15
	je L_428995
L_132687:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_132685
.p2align 0x4
L_428995:
L_132688:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132689
L_132692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_132693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132693
.p2align 0x4
.long 0xF7F
L_132693:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_132689:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_428996
L_132690:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_132659
.p2align 0x4
L_428996:
L_132691:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_132659
.p2align 0x4
.long 0x555
L_132491:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_132492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x57E
L_132501:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_132502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_5
.p2align 0x4
.long 0x5A9
L_132526:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132527
L_132528:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_132529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132529
.p2align 0x4
.long 0x547
L_132529:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_132527:
	movq 0x20(%rbp),%r15
L_132510:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_132511:
	addl 0x0(%r14),%ecx
	movl %ecx,0x28(%rbp)
	jo L_132446
L_132512:
	cmpq $0x1,%r15
	je L_429000
L_132513:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_132511
.p2align 0x4
L_429000:
L_132514:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132515
L_132518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_132519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132519
.p2align 0x4
.long 0x1C93
L_132519:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_132515:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_429001
L_132516:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_132484
.p2align 0x4
L_429001:
L_132517:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_132484
.p2align 0x4
.long 0x5B9
L_132676:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132677
L_132697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_132698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132698
.p2align 0x4
.long 0x52F
L_132698:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_132677:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_132678:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_132446
L_132679:
	cmpq $0x1,%r14
	je L_429005
L_132680:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_132678
.p2align 0x4
L_429005:
L_132681:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132682
L_132695:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_132696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132696
.p2align 0x4
.long 0x572
L_132696:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_132682:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_429006
L_132683:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_132684
.p2align 0x4
L_429006:
L_132694:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_132684
.p2align 0x4
.long 0x598
L_132502:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132503
L_132523:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_132524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132524
.p2align 0x4
.long 0x5BA
L_132524:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_132503:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_132504:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_132446
L_132505:
	cmpq $0x1,%r14
	je L_429010
L_132506:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_132504
.p2align 0x4
L_429010:
L_132507:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132508
L_132521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_132522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132522
.p2align 0x4
.long 0x572
L_132522:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_132508:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_429011
L_132509:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_132510
.p2align 0x4
L_429011:
L_132520:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_132510
.text
.p2align 0x4
.globl visit_12
.hidden visit_12
visit_12:
L_132711:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_132712
L_132780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_132781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132781
.p2align 0x4
.long 0x4DE
L_132781:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_132712:
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_132713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x4E3
L_132713:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132714
L_132778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_132779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132779
.p2align 0x4
.long 0xBBD
L_132779:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_132714:
	movslq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_132716
L_132717:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_429018
L_132718:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_429017
L_132720:
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movq %r15,%r8
	imulq $0x30,%r13
	movq 0x0(%r14,%r13,1),%rsp
	movq %rsp,0x30(%rbp)
	imulq $0x30,%r11
	movq 0x8(%r14,%r11,1),%r13
	movq %r13,0x38(%rbp)
	imulq $0x30,%r10
	movq 0x10(%r14,%r10,1),%r13
	movq %r13,0x40(%rbp)
	imulq $0x30,%r9
	movq 0x18(%r14,%r9,1),%r13
	movq %r13,0x48(%rbp)
	imulq $0x30,%r8
	movq 0x20(%r14,%r8,1),%r13
	movq %r13,0x50(%rbp)
	imulq $0x30,%r15
	movq 0x28(%r14,%r15,1),%r11
	movq %r11,0x58(%rbp)
	movq $0x797,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x36EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x68(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x70(%rbp)
	cmpq %r15,%r11
	jne L_429016
L_132723:
	movq $0x437B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x88(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	movq $0x35D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	movq %r13,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_132724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_429016:
L_132722:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429017:
L_132716:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429018:
L_132777:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x19C8
L_132724:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x70(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_429022
L_132725:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_132726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132726
.p2align 0x4
.long 0x19CA
L_132726:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1373:
	cmpq 0x70(%rbp),%r15
	jnl L_429021
L_132775:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_1373
.p2align 0x4
L_429021:
L_132727:
	movq %r14,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0x90,%rbp
	leaq (L_132728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_0
.p2align 0x4
L_429022:
L_132765:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C94
L_132728:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132729
L_132773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_132774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132774
.p2align 0x4
.long 0x1C9C
L_132774:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_132729:
	movq $0x35CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_132730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x1C95
L_132730:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	cmpq $0x1,%r13
	je L_429037
L_132731:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_132732:
	incl %ecx
	jo L_132733
L_132734:
	cmpq $0x1,%r15
	je L_429024
L_132735:
	movq 0x8(%r15),%r15
	jmp L_132732
.p2align 0x4
L_429024:
L_132736:
L_132737:
	movslq %ecx,%rdx
	movq %rdx,0x60(%rbp)
	testq %rdx,%rdx
	jz L_429035
L_132738:
	cmpq $0x7FFFFFFF,%rdx
	ja L_132765
L_132739:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_132740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132740
.p2align 0x4
.long 0x1C96
L_132740:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,0x80(%rbp)
L_132741:
	movq 0x68(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1374:
	cmpq 0x60(%rbp),%r15
	jnl L_429026
L_132767:
	cmpq $0x1,%r14
	je L_429025
L_132768:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x80(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1374
.p2align 0x4
L_429025:
L_132769:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429026:
L_132742:
	movq 0x80(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x60(%rbp)
	cmpq %rdx,%r14
	jne L_132722
L_132744:
	decl %r13d
	movl %r13d,0x68(%rbp)
	jo L_132733
L_132745:
	testq %rdx,%rdx
	jz L_429031
L_132746:
	cmpq $0x7FFFFFFF,%rdx
	ja L_132765
L_132747:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_132748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132748
.p2align 0x4
.long 0x1C97
L_132748:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x88(%rbp)
L_132749:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1375:
	cmpq 0x60(%rbp),%r15
	jnl L_429028
L_132762:
	movl %r15d,%r14d
	movl 0x68(%rbp),%r13d
	subl %r14d,%r13d
	jo L_429027
L_132763:
	movslq %r13d,%r14
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1375
.p2align 0x4
L_429027:
L_132733:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429028:
L_132750:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132751
L_132760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_132761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132761
.p2align 0x4
.long 0x1C9B
L_132761:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_132751:
	movq 0x88(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x77B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x38,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%r14)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x23A5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq $0x36E9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	addq $0x30,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x35D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x90(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_132752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_429031:
L_132766:
	movq (globalObjptr+0xF90)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_132749
.p2align 0x4
L_429035:
L_132771:
	movq (globalObjptr+0xD50)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_132741
.p2align 0x4
L_429037:
L_132772:
	xorl %ecx,%ecx
	jmp L_132737
.p2align 0x4
.long 0x1C98
L_132752:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0x70(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_132753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132753
.p2align 0x4
.long 0x1C99
L_132753:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1376:
	cmpq 0x70(%rbp),%r15
	jnl L_429038
L_132759:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_1376
.p2align 0x4
L_429038:
L_132754:
	movq %r14,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_132755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_0
.p2align 0x4
.long 0x16E4
L_132755:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132756
L_132757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_132758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132758
.p2align 0x4
.long 0x1C9A
L_132758:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_132756:
	movq $0x35CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreachi_0
.text
.p2align 0x4
.globl get_35
.hidden get_35
get_35:
L_132782:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_132783
L_132827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_132828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132828
.p2align 0x4
.long 0x45F
L_132828:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_132783:
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_429050
L_132785:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_429049
L_132786:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_132788:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_132789
L_132819:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD71,%r11
	jne L_132789
L_132820:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	cmpq %r10,0x10(%rbp)
	je L_429044
L_132789:
	incl %ecx
	jo L_429043
L_132791:
	cmpq $0x1,%r15
	je L_429040
L_132792:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	jmp L_132788
.p2align 0x4
L_429040:
L_132793:
L_132794:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_429042
L_132796:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_132798
L_132818:
	movl %ecx,0x0(%r15)
L_132798:
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_132799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_36
.p2align 0x4
L_429042:
L_132795:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429043:
L_132790:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429044:
L_132822:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_132795
L_132823:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_429045
L_132825:
	movl %ecx,0x0(%r15)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429045:
L_132824:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429049:
L_132826:
	xorl %ecx,%ecx
	jmp L_132794
.p2align 0x4
L_429050:
L_132784:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8A9
L_132799:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132800
L_132816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_132817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132817
.p2align 0x4
.long 0x51F
L_132817:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_132800:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x3DF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_132801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
.long 0xA8E
L_132801:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132802
L_132814:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132815
.p2align 0x4
.long 0xA8F
L_132815:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_132802:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	testb %r13b,%r13b
	jnz L_429053
L_132803:
	movl $0x1,0x18(%rbp)
L_132804:
	movq 0x30(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r14),%r13
	movl 0x0(%r13),%r10d
	movl %r10d,0x50(%rbp)
	movq $0x3FB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	addq $0x48,%rbp
	leaq (L_132805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_429053:
L_132813:
	movl $0x0,0x18(%rbp)
	jmp L_132804
.p2align 0x4
.long 0x791
L_132805:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132806
L_132811:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132812
.p2align 0x4
.long 0x1C9D
L_132812:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_132806:
	movq 0x38(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r14),%r13
	movl 0x0(%r13),%r10d
	movl %r10d,0x48(%rbp)
	movq $0x3FB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	addq $0x40,%rbp
	leaq (L_132807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0xB9E
L_132807:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132808
L_132809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132810
.p2align 0x4
.long 0x1C9D
L_132810:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_132808:
	movq $0x1345,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x1AE3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl unfoldiP_0
.hidden unfoldiP_0
unfoldiP_0:
L_132829:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_132830
L_132900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_132901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132901
.p2align 0x4
.long 0x457
L_132901:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_132830:
	movq 0x8(%rbp),%rdx
	testq %rdx,%rdx
	jz L_429089
L_132831:
	cmpq $0x7FFFFFFF,%rdx
	ja L_429088
L_132832:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x141D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_132833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132833
.p2align 0x4
.long 0x457
L_132833:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,0x10(%rbp)
L_132834:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_1377:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429087
.p2align 0x4,,0x7
L_132835:
	movq 0x8(%rbp),%r15
	cmpq %r15,0x18(%rbp)
	jnl L_429086
L_132837:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_429085
L_132838:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x203E,%rax
	cmpq $0xF,%rax
	ja L_429057
	leaq jumpTable_292(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_292:
.quad L_429084,L_429083,L_429082,L_429081,L_429080,L_429077,L_429076,L_429073,L_429071,L_429070,L_429067,L_429066,L_429063,L_429062,L_429061,L_429060
.text
.p2align 0x4
L_429057:
L_132839:
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xF65,%r15
	je L_429059
	cmpq $0xF66,%r15
	je L_429058
L_132840:
	movq 0x0(%r11),%r15
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
.p2align 0x4,,0x7
L_132841:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_1377
.p2align 0x4
L_429058:
L_132843:
	movq 0x0(%r11),%r15
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_132841
.p2align 0x4
L_429059:
L_132842:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_132841
.p2align 0x4
L_429060:
L_132889:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_132890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1315
.p2align 0x4
L_429061:
L_132883:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_132884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1315
.p2align 0x4
L_429062:
L_132882:
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	jmp L_132841
.p2align 0x4
L_429063:
L_132878:
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xF65,%r15
	je L_429065
	cmpq $0xF66,%r15
	je L_429064
L_132879:
	movq 0x0(%r11),%r15
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_132841
.p2align 0x4
L_429064:
L_132881:
	movq 0x0(%r11),%r15
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_132841
.p2align 0x4
L_429065:
L_132880:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_132841
.p2align 0x4
L_429066:
L_132877:
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	jmp L_132841
.p2align 0x4
L_429067:
L_132873:
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xF65,%r15
	je L_429069
	cmpq $0xF66,%r15
	je L_429068
L_132874:
	movq 0x0(%r11),%r15
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_132841
.p2align 0x4
L_429068:
L_132876:
	movq 0x0(%r11),%r15
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_132841
.p2align 0x4
L_429069:
L_132875:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_132841
.p2align 0x4
L_429070:
L_132872:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x18(%rbp),%r14
	movq 0x0(%r13,%r14,8),%r13
	movq %r13,%r15
	jmp L_132841
.p2align 0x4
L_429071:
L_132869:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_429072
L_132870:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq %r11,%r15
	jmp L_132841
.p2align 0x4
L_429072:
L_132871:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429073:
L_132865:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x18(%rbp),%r15
	movl %r15d,%r11d
	cmpl $0x0,%r11d
	je L_429075
	cmpl $0x1,%r11d
	je L_429074
L_132866:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429074:
L_132868:
	movq %r13,%r15
	jmp L_132841
.p2align 0x4
L_429075:
	movq %r14,%r15
	jmp L_132841
.p2align 0x4
L_429076:
L_132860:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_132861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1315
.p2align 0x4
L_429077:
L_132856:
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xF65,%r15
	je L_429079
	cmpq $0xF66,%r15
	je L_429078
L_132857:
	movq 0x0(%r11),%r15
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_132841
.p2align 0x4
L_429078:
L_132859:
	movq 0x0(%r11),%r15
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_132841
.p2align 0x4
L_429079:
L_132858:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_132841
.p2align 0x4
L_429080:
L_132854:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_132855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
L_429081:
L_132853:
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	jmp L_132841
.p2align 0x4
L_429082:
L_132852:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_132841
.p2align 0x4
L_429083:
L_132845:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_132846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1315
.p2align 0x4
L_429084:
L_132844:
	movq 0x18(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	jmp L_132841
.p2align 0x4
L_429085:
L_132895:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429086:
L_132836:
	movq 0x10(%rbp),%r15
	movq $0x903,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429087:
L_132896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_132897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132897
.p2align 0x4
.long 0x112A
L_132897:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_132835
.p2align 0x4
L_429088:
L_132898:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429089:
L_132899:
	movq (globalObjptr+0x490)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_132834
.p2align 0x4
.long 0x1C9E
L_132890:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10DB,%r14
	je L_429092
L_132892:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_429091
L_132893:
	movq 0x0(%r14),%r15
	jmp L_132841
.p2align 0x4
L_429091:
L_132851:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429092:
L_132891:
	movq 0x0(%r15),%r15
	jmp L_132841
.p2align 0x4
.long 0x1C9E
L_132884:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10DB,%r14
	je L_429094
L_132886:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_132851
L_132887:
	movq 0x0(%r14),%r15
	jmp L_132841
.p2align 0x4
L_429094:
L_132885:
	movq 0x0(%r15),%r15
	jmp L_132841
.p2align 0x4
.long 0x1C9E
L_132861:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10DC,%r14
	jne L_132851
L_132862:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_132851
L_132863:
	movq 0x0(%r14),%r15
	jmp L_132841
.p2align 0x4
.long 0x1C9E
L_132855:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_132841
.p2align 0x4
.long 0x1C9E
L_132846:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10DB,%r14
	je L_429098
L_132848:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_132851
L_132849:
	movq 0x0(%r14),%r15
	jmp L_132841
.p2align 0x4
L_429098:
L_132847:
	movq 0x0(%r15),%r15
	jmp L_132841
.text
.p2align 0x4
.globl translateOperand_0
.hidden translateOperand_0
translateOperand_0:
L_132902:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_132903
L_133007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_133008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133008
.p2align 0x4
.long 0x45F
L_133008:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_132903:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq 0x30(%r15),%r13
	movq 0x28(%r15),%r11
	movq %r11,0x10(%rbp)
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq %r9,0x18(%rbp)
	movq 0x8(%r15),%r9
	movq %r9,0x20(%rbp)
	movq 0x0(%r15),%r9
	movq %r9,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,%r9
	andq $0x3,%r9
	cmpq $0x1,%r9
	je L_429107
	cmpq $0x2,%r9
	je L_429106
	cmpq $0x3,%r9
	je L_429105
L_132904:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r9
	shrq $0x1,%r9
	cmpq $0x108B,%r9
	je L_429103
	cmpq $0x108C,%r9
	je L_429102
	cmpq $0x108D,%r9
	je L_429101
	cmpq $0x108E,%r9
	je L_429100
	cmpq $0x108F,%r9
	je L_429099
L_132905:
	movq %r11,0x10(%rbp)
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r9
	movq %r9,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_132906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1315
.p2align 0x4
L_429099:
L_132998:
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_132999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
L_429100:
L_132993:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_132994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
L_429101:
L_132992:
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp constOperand_0
.p2align 0x4
L_429102:
L_132925:
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_132926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
L_429103:
L_132911:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r11d
	shll $0x1,%r11d
	orl $0x1,%r11d
	movl %r11d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_429104
L_132912:
	movq %r15,0x28(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_132913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_429104:
L_132920:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_132921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_429105:
L_133006:
	movq %r10,0x8(%rbp)
	shrq $0x2,%r15
	movb %r15b,%r14b
	movb %r14b,0x0(%rbp)
	jmp runtimeOp_0
.p2align 0x4
L_429106:
L_133005:
	movq $0x3,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429107:
L_133004:
	movq (globalObjptr+0x7538)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_132906:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10DB,%r15
	je L_429110
L_132908:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_429109
L_132909:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429109:
L_132910:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429110:
L_132907:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x639
L_132999:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_133000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
.long 0x2B
L_132994:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132995
L_132996:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_132997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132997
.p2align 0x4
.long 0x2C
L_132997:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_132995:
	movq $0x1EBF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A7
L_132926:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132927
L_132990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132991
.p2align 0x4
.long 0x4B0
L_132991:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_132927:
	movq 0x38(%rbp),%r15
	cmpq $0x3,%r15
	je L_132950
L_132928:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_132929
L_132948:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_132950
	cmpq $0xF5A,%r14
	je L_132950
	cmpq $0xF5B,%r14
	je L_132950
	cmpq $0xF5D,%r14
	je L_132950
	cmpq $0xF5E,%r14
	je L_132950
	cmpq $0xF5F,%r14
	je L_429116
	cmpq $0xF60,%r14
	je L_429115
L_132929:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x6,%r15
	je L_429113
L_132930:
	andq $0x3,%r14
	jnz L_132931
L_132943:
L_132931:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_132932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_429113:
L_132944:
	shrq $0x3,%r14
	movb %r14b,%r13b
	testb %r13b,%r13b
	jnz L_429114
L_132945:
	movq (globalObjptr+0x4FB0)(%rip),%r15
L_132946:
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp get_103
.p2align 0x4
L_429114:
L_132947:
	movq (globalWord64+0xF28)(%rip),%r15
	jmp L_132946
.p2align 0x4
L_429115:
L_132950:
	movq $0x1EB7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429116:
L_132955:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_132956:
	cmpq $0x3,%r15
	je L_429131
L_132957:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_132929
L_132958:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_429128
	cmpq $0xF5A,%r14
	je L_429126
	cmpq $0xF5B,%r14
	je L_429124
	cmpq $0xF5D,%r14
	je L_429122
	cmpq $0xF5E,%r14
	je L_429120
	cmpq $0xF5F,%r14
	je L_429119
	cmpq $0xF60,%r14
	je L_429117
	jmp L_132929
.p2align 0x4
L_429117:
L_132980:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132950
L_132982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132983
.p2align 0x4
.long 0x732
L_132983:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_132950
.p2align 0x4
L_429119:
L_132979:
	movq 0x0(%r15),%r15
	jmp L_132956
.p2align 0x4
L_429120:
L_132975:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132950
L_132977:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132978
.p2align 0x4
.long 0x732
L_132978:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_132950
.p2align 0x4
L_429122:
L_132971:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132950
L_132973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132974
.p2align 0x4
.long 0x732
L_132974:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_132950
.p2align 0x4
L_429124:
L_132967:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132950
L_132969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132970
.p2align 0x4
.long 0x732
L_132970:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_132950
.p2align 0x4
L_429126:
L_132963:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132950
L_132965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132966
.p2align 0x4
.long 0x732
L_132966:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_132950
.p2align 0x4
L_429128:
L_132959:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132950
L_132961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132962
.p2align 0x4
.long 0x732
L_132962:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_132950
.p2align 0x4
L_429131:
L_132984:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132950
L_132986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132987
.p2align 0x4
.long 0x732
L_132987:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_132950
.p2align 0x4
.long 0x2B
L_132913:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_132914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1
L_132921:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xA9E
L_133000:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133001
L_133002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_133003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133003
.p2align 0x4
.long 0x145A
L_133003:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_133001:
	movq $0x1EC1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movzbl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA9E
L_132932:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_132933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x71D
L_132914:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x38(%rbp)
	movq $0x3,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_132915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1
bug_388:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132922
L_132923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_132924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132924
.p2align 0x4
.long 0x451
L_132924:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_132922:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xAA1
L_132933:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl %r15d,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_132934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x71E
L_132915:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_132916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xFC5
L_132934:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_132935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x48F
L_132916:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132917
L_132918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_132919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132919
.p2align 0x4
.long 0x5E5
L_132919:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_132917:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x652
L_132935:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132936
L_132941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_132942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132942
.p2align 0x4
.long 0x653
L_132942:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_132936:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
L_132937:
	movq 0x30(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_429145
L_132939:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF51,%r13
	jne L_429144
L_132940:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429144:
	movq %r14,%r15
L_132938:
	movq $0x1EBF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429145:
	xchgq %r14,%r15
	jmp L_132938
.text
.p2align 0x4
.globl runtimeOp_0
.hidden runtimeOp_0
runtimeOp_0:
L_133009:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_133095
L_133010:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429175
L_133011:
	movzbq 0x0(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_429147
	leaq jumpTable_293(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_293:
.quad L_429174,L_429173,L_429172,L_429171,L_429170,L_429169,L_429168,L_429167,L_429166,L_429148
.text
.p2align 0x4
L_429147:
L_133012:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429148:
L_133094:
	movq (globalObjptr+0x2498)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
L_133014:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movzbq 0x0(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_429149
	leaq jumpTable_294(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_294:
.quad L_429164,L_429162,L_429161,L_429159,L_429157,L_133015,L_429154,L_429153,L_429151,L_429150
.text
.p2align 0x4
L_429149:
L_133015:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_429150:
	movq %r14,%r15
L_133020:
	movq $0x1EB7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x3,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429151:
L_133074:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_429152
L_133075:
	movq %r15,0x28(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_133076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_429152:
L_133080:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_133081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_429153:
	movq %r14,%r15
	jmp L_133020
.p2align 0x4
L_429154:
L_133062:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_429155
L_133063:
	movq %r15,0x28(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_133064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_429155:
L_133068:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_133069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_429157:
L_133051:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_429158
L_133052:
	movq %r15,0x28(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_133053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_429158:
L_133057:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_133058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_429159:
L_133040:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_429160
L_133041:
	movq %r15,0x28(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_133042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_429160:
L_133046:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_133047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_429161:
	movq %r14,%r15
	jmp L_133020
.p2align 0x4
L_429162:
L_133028:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_429163
L_133029:
	movq %r15,0x28(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_133030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_429163:
L_133034:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_133035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_429164:
L_133016:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_429165
L_133017:
	movq %r15,0x28(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_133018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_429165:
L_133023:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_133024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_429166:
L_133093:
	movq (globalObjptr+0x2448)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_133014
.p2align 0x4
L_429167:
L_133092:
	movq (globalObjptr+0x2450)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_133014
.p2align 0x4
L_429168:
L_133091:
	movq (globalObjptr+0x2490)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_133014
.p2align 0x4
L_429169:
L_133090:
	movq $0x5,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429170:
L_133089:
	movq (globalObjptr+0x2488)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_133014
.p2align 0x4
L_429171:
L_133088:
	movq (globalObjptr+0x2460)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_133014
.p2align 0x4
L_429172:
L_133087:
	movq (globalObjptr+0x2468)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_133014
.p2align 0x4
L_429173:
L_133086:
	movq (globalObjptr+0x2480)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_133014
.p2align 0x4
L_429174:
L_133013:
	movq (globalObjptr+0x2470)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_133014
.p2align 0x4
L_429175:
L_133095:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_133096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133096
.p2align 0x4
.long 0x494
L_133096:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_133011
.p2align 0x4
.long 0x2B
L_133076:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133077
L_133078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_133079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133079
.p2align 0x4
.long 0x2C
L_133079:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_133077:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	jmp L_133020
.p2align 0x4
.long 0x1
L_133081:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2B
L_133064:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133065
L_133066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_133067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133067
.p2align 0x4
.long 0x2C
L_133067:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_133065:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	jmp L_133020
.p2align 0x4
.long 0x1
L_133069:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2B
L_133053:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133054
L_133055:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_133056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133056
.p2align 0x4
.long 0x2C
L_133056:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_133054:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	jmp L_133020
.p2align 0x4
.long 0x1
L_133058:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2B
L_133042:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133043
L_133044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_133045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133045
.p2align 0x4
.long 0x2C
L_133045:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_133043:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	jmp L_133020
.p2align 0x4
.long 0x1
L_133047:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2B
L_133030:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133031
L_133032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_133033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133033
.p2align 0x4
.long 0x2C
L_133033:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_133031:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	jmp L_133020
.p2align 0x4
.long 0x1
L_133035:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2B
L_133018:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133019
L_133021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_133022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133022
.p2align 0x4
.long 0x2C
L_133022:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_133019:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	jmp L_133020
.p2align 0x4
.long 0x1
L_133024:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_394:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133082
L_133083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133084
.p2align 0x4
.long 0x451
L_133084:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133082:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_393:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133070
L_133071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133072
.p2align 0x4
.long 0x451
L_133072:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133070:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_392:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133059
L_133060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133061
.p2align 0x4
.long 0x451
L_133061:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133059:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_391:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133048
L_133049:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133050
.p2align 0x4
.long 0x451
L_133050:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133048:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_390:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133036
L_133037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133038
.p2align 0x4
.long 0x451
L_133038:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133036:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_389:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133025
L_133026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133027
.p2align 0x4
.long 0x451
L_133027:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133025:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1599
.hidden x_1599
x_1599:
L_133097:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_133254
L_133098:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429228
L_133099:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_133121
L_133100:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
.p2align 0x4,,0x7
L_133101:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_133117
L_133102:
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_133247
	cmpq $0x5,%r13
	je L_429224
	cmpq $0x6,%r13
	je L_429222
L_133103:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_133104
L_133243:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_429220
	cmpq $0xF54,%r13
	je L_429189
L_133104:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_133105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_429189:
L_133245:
	movb $0xB,%dl
.p2align 0x4,,0x7
L_133115:
	cmpb %dl,0x0(%rbp)
	je L_429192
L_133117:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_429190
L_133118:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_133101
.p2align 0x4
L_429190:
L_133119:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133121
L_133122:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_133123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133123
.p2align 0x4
.long 0x0
L_133123:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
L_133121:
	movq $0xD97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429192:
L_133124:
	movq 0x30(%rbp),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_133125:
	incl %ecx
	jo L_133126
L_133127:
	cmpq $0x1,%r15
	je L_429193
L_133128:
	movq 0x8(%r15),%r15
	jmp L_133125
.p2align 0x4
L_429193:
L_133129:
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_429218
L_133130:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAD9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_133131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133131
.p2align 0x4
.long 0x789
L_133131:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	movq 0x28(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1378:
	cmpq 0x30(%rbp),%r15
	jnl L_429195
L_133236:
	cmpq $0x1,%r14
	je L_429194
L_133237:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x38(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1378
.p2align 0x4
L_429194:
L_133238:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429195:
L_133132:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133133
L_133234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_133235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133235
.p2align 0x4
.long 0x793
L_133235:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_133133:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x28(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	je L_429196
L_133134:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429196:
L_133135:
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jz L_429206
L_133136:
	movq $0x1765,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r15)
	movq %r11,0x8(%r15)
	cmpq $0x0,0x30(%rbp)
	jna L_133138
L_133139:
	movq 0x0(%r11),%r14
	cmpl $0x0,%r13d
	jl L_429204
L_133140:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1379:
	cmpl 0x28(%rbp),%ecx
	jnl L_429200
L_133192:
	movslq %ecx,%r13
	movq 0x38(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq 0x8(%r10),%r13
	movq 0x0(%r13),%r11
	movq %r11,%r13
	andq $0x1,%r13
	jz L_429199
L_133210:
	shrq $0x1,%r11
	movl %r11d,%r13d
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r9
	movq %r9,%r11
	andq $0x1,%r11
	jz L_429198
L_133228:
	shrq $0x1,%r9
	movl %r9d,%r11d
	cmpl %r13d,%r11d
	jnl L_429197
L_133231:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r10,%r14
	movq %r15,(localObjptr+0x0)(%rip)
L_133230:
	incl %ecx
	movq (localObjptr+0x0)(%rip),%r15
	movl (localWord32+0x0)(%rip),%ebx
	jmp loop_1379
.p2align 0x4
L_429197:
	movl %ebx,(localWord32+0x0)(%rip)
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_133230
.p2align 0x4
L_429198:
L_133211:
	movq %r14,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (toString_218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_429199:
L_133193:
	movq %r10,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (toString_217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_429200:
L_133141:
	movl 0x28(%rbp),%r14d
	decl %r14d
	movslq %ebx,%r13
	movq 0x30(%rbp),%r11
	cmpq %r11,%r13
	jnb L_133138
L_133143:
	movq 0x38(%rbp),%r10
	movq 0x0(%r10,%r13,8),%r9
	movslq %r14d,%r8
	cmpq %r11,%r8
	jnb L_429202
L_133145:
	movq 0x0(%r10,%r8,8),%r11
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	movq %r11,0x0(%r10,%r13,8)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	movq %r9,0x0(%r10,%r8,8)
	decl %r14d
	jo L_429201
L_133146:
	movl %r14d,0x48(%rbp)
	movq %r15,0x60(%rbp)
	movl $0x0,0x4C(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r10,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_133147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_12
.p2align 0x4
L_429201:
L_133126:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429202:
L_133138:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429204:
L_133232:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429206:
L_133150:
	movl 0x28(%rbp),%r15d
	decl %r15d
	jo L_133126
L_133151:
	movl %r15d,0x30(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
loop_1380:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429215
.p2align 0x4,,0x7
L_133152:
	movl 0x30(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_429207
L_133153:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x23B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	jmp loop_1380
.p2align 0x4
L_429207:
L_133154:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_429214
L_133155:
	movq 0x0(%r14),%r13
	movq %r14,0x30(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movl $0x0,0x38(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_133156:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,%r14
	andq $0x1,%r14
	jz L_429213
L_133174:
	shrq $0x1,%r13
	movl %r13d,%r14d
	movl 0x38(%rbp),%r13d
	cmpl %r14d,%r13d
	jne L_429211
L_133180:
	incl %r13d
	movl %r13d,0x30(%rbp)
	jo L_133126
L_133181:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_429208
L_133182:
	movq 0x0(%r14),%r11
	movl %r13d,0x38(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r11,%r15
	jmp L_133156
.p2align 0x4
L_429208:
L_133183:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133184
L_133185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_133186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133186
.p2align 0x4
.long 0x5E4
L_133186:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_133184:
	movq 0x28(%rbp),%r15
	movl 0x30(%rbp),%ecx
L_133177:
	movq $0xD97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429211:
L_133175:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133176
L_133178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_133179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133179
.p2align 0x4
.long 0x51D
L_133179:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_133176:
	movq 0x30(%rbp),%r15
	movl 0x38(%rbp),%ecx
	jmp L_133177
.p2align 0x4
L_429213:
L_133157:
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (toString_216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_429214:
L_133187:
	xorl %ecx,%ecx
	movq %r14,%r15
	jmp L_133177
.p2align 0x4
L_429215:
L_133188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_133189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133189
.p2align 0x4
.long 0x815
L_133189:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_133152
.p2align 0x4
L_429218:
L_133239:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429220:
L_133244:
	movb $0x6,%dl
	jmp L_133115
.p2align 0x4
L_429222:
L_133249:
	shrq $0x3,%r15
	movb %r15b,%dl
	testb %dl,%dl
	jnz L_429223
L_133250:
	movb $0x4,%dl
	jmp L_133115
.p2align 0x4
L_429223:
L_133251:
	movb $0x5,%dl
	jmp L_133115
.p2align 0x4
L_429224:
L_133247:
	movb $0xB,%dl
	jmp L_133115
.p2align 0x4
L_429228:
L_133254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_133255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133255
.p2align 0x4
.long 0x4E9
L_133255:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_133099
.p2align 0x4
.long 0x4ED
L_133105:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpl $0x8,%r15d
	je L_429233
	cmpl $0x10,%r15d
	je L_429232
	cmpl $0x20,%r15d
	je L_429231
	cmpl $0x40,%r15d
	je L_429230
L_133106:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_133107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_429230:
L_133242:
	xorb %dl,%dl
	jmp L_133115
.p2align 0x4
L_429231:
L_133241:
	movb $0x1,%dl
	jmp L_133115
.p2align 0x4
L_429232:
L_133240:
	movb $0x2,%dl
	jmp L_133115
.p2align 0x4
L_429233:
L_133114:
	movb $0x3,%dl
	jmp L_133115
.p2align 0x4
.long 0x1
toString_218:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
toString_217:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x5E3
L_133147:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133148
L_133190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_133191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133191
.p2align 0x4
.long 0x793
L_133191:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_133148:
	movq $0x3CD9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x48(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movl $0x1,0x54(%rbp)
	addq $0x48,%rbp
	leaq (L_133149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x1
toString_216:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
L_133107:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133108
L_133112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133113
.p2align 0x4
.long 0x451
L_133113:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133108:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
rev_216:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_429238
L_133212:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_133213:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429237
.p2align 0x4,,0x7
L_133214:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429236
L_133215:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_133213
.p2align 0x4
L_429236:
L_133217:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_133218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_429237:
L_133225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133226
.p2align 0x4
.long 0x45B
L_133226:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_133214
.p2align 0x4
L_429238:
L_133227:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_133217
.p2align 0x4
.long 0x1
rev_215:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_429241
L_133194:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_133195:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429240
.p2align 0x4,,0x7
L_133196:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429239
L_133197:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_133195
.p2align 0x4
L_429239:
L_133199:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_133200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_429240:
L_133207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133208
.p2align 0x4
.long 0x45B
L_133208:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_133196
.p2align 0x4
L_429241:
L_133209:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_133199
.p2align 0x4
.long 0x7CB
L_133149:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_133150
.p2align 0x4
.long 0x1
rev_214:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_429244
L_133158:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_133159:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429243
.p2align 0x4,,0x7
L_133160:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429242
L_133161:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_133159
.p2align 0x4
L_429242:
L_133163:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_133164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_429243:
L_133171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133172
.p2align 0x4
.long 0x45B
L_133172:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_133160
.p2align 0x4
L_429244:
L_133173:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_133163
.p2align 0x4
.long 0x1
bug_395:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133109
L_133110:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133111
.p2align 0x4
.long 0x451
L_133111:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133109:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_133218:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133219
L_133223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133224
.p2align 0x4
.long 0x451
L_133224:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133219:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_133200:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133201
L_133205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133206
.p2align 0x4
.long 0x451
L_133206:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133201:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_133164:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133165
L_133169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133170
.p2align 0x4
.long 0x451
L_133170:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133165:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_398:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133220
L_133221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133222
.p2align 0x4
.long 0x451
L_133222:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133220:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_397:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133202
L_133203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133204
.p2align 0x4
.long 0x451
L_133204:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133202:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_396:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133166
L_133167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133168
.p2align 0x4
.long 0x451
L_133168:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133166:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl qsort_12
.hidden qsort_12
qsort_12:
L_133256:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_1381
L_133376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_133377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133377
.p2align 0x4
.long 0x4E7
L_133377:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
loop_1381:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_133258
L_133259:
	cmpl $0x14,%r15d
	jng L_429253
L_133261:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x20(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x24(%rbp)
	jo L_429252
L_133262:
	movl %r15d,0x30(%rbp)
	movl %r13d,0x34(%rbp)
	addq $0x30,%rbp
	leaq (L_133263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_429252:
L_133258:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429253:
L_133260:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5EC
L_133263:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_133264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x5EF
L_133264:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%esp
	movl %esp,0x20(%rbp)
	movl 0x4(%rbp),%ebx
	movl %ebx,%esi
	addl %esp,%esi
	jo L_133258
L_133265:
	movq 0x18(%rbp),%rsp
	movq 0x8(%rsp),%r13
	movq 0x0(%rsp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movslq %ebx,%r15
	cmpq %r14,%r15
	jnb L_133267
L_133268:
	movq 0x0(%r13,%r15,8),%r10
	movslq %esi,%r9
	cmpq %r14,%r9
	jnb L_133267
L_133270:
	movq 0x0(%r13,%r9,8),%r8
	movq 0xFFFFFFFFFFFFFFF0(%r11),%rsp
	cmpq %rsp,%r15
	jnb L_133267
L_133272:
	movq %r11,%rsi
	shrq $0x8,%rsi
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%rsi,1)
	movq %r8,0x0(%r11,%r15,8)
	cmpq %rsp,%r9
	jnb L_133267
L_133274:
	movq %r11,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%rdi,%r8,1)
	movq %r10,0x0(%r11,%r9,8)
	movq 0x10(%rbp),%rsi
	movq 0xFFFFFFFFFFFFFFF0(%rsi),%r10
	cmpq %r10,%r15
	jnb L_133267
L_133276:
	movq 0x0(%rsi,%r15,8),%r9
	movl 0x0(%rbp),%ecx
	incl %ecx
	jo L_133258
L_133277:
	movq %rsp,%r8
.p2align 0x4,,0x7
loop_1383:
	incl %ebx
	movl %ebx,0x20(%rbp)
	jo L_133258
L_133278:
	movslq %ebx,%rsp
	cmpq %r10,%rsp
	jnb L_133267
L_133280:
	movq 0x10(%rbp),%rsi
	movq %rsp,%rax
	movq 0x0(%rsi,%rax,8),%rsp
	movq 0x8(%r9),%rsi
	movq 0x0(%rsi),%rdi
	movq %rdi,%rdx
	andq $0x1,%rdx
	jz L_429270
L_133298:
	shrq $0x1,%rdi
	movl %edi,%edx
	movq 0x8(%rsp),%rdi
	movq 0x0(%rdi),%rbx
	movq %rbx,%rdi
	andq $0x1,%rdi
	jz L_429269
L_133316:
	shrq $0x1,%rbx
	movl %ebx,%edi
	cmpl %edx,%edi
	jl L_429268
	xchgq %rax,%r15
	xchgq %rsi,%r11
	movq %r8,(localWord64+0x18)(%rip)
	movq %r14,(localWord64+0x0)(%rip)
	movq %r13,(localObjptr+0x0)(%rip)
	movq %rax,(localWord64+0x8)(%rip)
	movq %rsi,(localObjptr+0x8)(%rip)
.p2align 0x4,,0x7
loop_1384:
	decl %ecx
	jo L_133258
L_133318:
	movslq %ecx,%r14
	cmpq %r10,%r14
	jnb L_133267
L_133320:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r8
	movq 0x8(%r8),%r13
	movq 0x0(%r13),%rsp
	movq %rsp,%r13
	andq $0x1,%r13
	jz L_429265
L_133338:
	shrq $0x1,%rsp
	movl %esp,%r13d
	movq 0x0(%r11),%rsp
	movq %rsp,%rsi
	andq $0x1,%rsi
	jz L_429264
L_133356:
	shrq $0x1,%rsp
	movl %esp,%esi
	cmpl %r13d,%esi
	jnl L_429255
L_133374:
	jmp loop_1384
.p2align 0x4
L_429255:
L_133357:
	movl 0x20(%rbp),%ebx
	cmpl %ebx,%ecx
	jl L_429260
L_133358:
	movq (localWord64+0x0)(%rip),%rsp
	cmpq %rsp,%r15
	jnb L_133267
L_133360:
	movq (localObjptr+0x0)(%rip),%r13
	movq 0x0(%r13,%r15,8),%r11
	cmpq %rsp,%r14
	jnb L_133267
L_133362:
	movq 0x0(%r13,%r14,8),%r8
	movq (localWord64+0x18)(%rip),%rsi
	cmpq %rsi,%r15
	jnb L_133267
L_133364:
	movq (localObjptr+0x8)(%rip),%rdi
	movq %rdi,%rdx
	shrq $0x8,%rdx
	movq (gcState+0x3C8)(%rip),%rax
	movb $0x1,0x0(%rax,%rdx,1)
	movq %r8,0x0(%rdi,%r15,8)
	cmpq %rsi,%r14
	jnb L_429256
L_133366:
	movq %rdi,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rax,%r15,1)
	movq %r11,0x0(%rdi,%r14,8)
	movq %rsp,%r14
	movq %rdi,%r11
	movq %rsi,%r8
	movq (localWord64+0x8)(%rip),%r15
	jmp loop_1383
.p2align 0x4
L_429256:
L_133267:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429260:
L_133367:
	movq (localObjptr+0x0)(%rip),%r15
	movq (localWord64+0x8)(%rip),%r13
	movq 0x0(%r15,%r13,8),%r11
	cmpq (localWord64+0x0)(%rip),%r14
	jnb L_133267
L_133369:
	movq 0x0(%r15,%r14,8),%r10
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r13,8)
	cmpq (localWord64+0x18)(%rip),%r14
	jnb L_133267
L_133371:
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	decl %ecx
	jo L_133258
L_133372:
	movl %ecx,0x30(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_133373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_12
.p2align 0x4
L_429264:
L_133339:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r9,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_429265:
L_133321:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r8,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_429268:
L_133375:
	movl 0x20(%rbp),%ebx
	jmp loop_1383
.p2align 0x4
L_429269:
L_133299:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %rsp,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_429270:
L_133281:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r9,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
.long 0x5EC
L_133373:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_1381
.p2align 0x4
.long 0x1
toString_222:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
toString_221:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
toString_220:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
toString_219:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
rev_220:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_429282
L_133340:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_133341:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429281
.p2align 0x4,,0x7
L_133342:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429280
L_133343:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_133341
.p2align 0x4
L_429280:
L_133345:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_133346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_429281:
L_133353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133354
.p2align 0x4
.long 0x45B
L_133354:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_133342
.p2align 0x4
L_429282:
L_133355:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_133345
.p2align 0x4
.long 0x1
rev_219:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_429285
L_133322:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_133323:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429284
.p2align 0x4,,0x7
L_133324:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429283
L_133325:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_133323
.p2align 0x4
L_429283:
L_133327:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_133328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_429284:
L_133335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133336
.p2align 0x4
.long 0x45B
L_133336:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_133324
.p2align 0x4
L_429285:
L_133337:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_133327
.p2align 0x4
.long 0x1
rev_218:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_429288
L_133300:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_133301:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429287
.p2align 0x4,,0x7
L_133302:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429286
L_133303:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_133301
.p2align 0x4
L_429286:
L_133305:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_133306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_429287:
L_133313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133314
.p2align 0x4
.long 0x45B
L_133314:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_133302
.p2align 0x4
L_429288:
L_133315:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_133305
.p2align 0x4
.long 0x1
rev_217:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_429291
L_133282:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_133283:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429290
.p2align 0x4,,0x7
L_133284:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429289
L_133285:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_133283
.p2align 0x4
L_429289:
L_133287:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_133288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_429290:
L_133295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133296
.p2align 0x4
.long 0x45B
L_133296:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_133284
.p2align 0x4
L_429291:
L_133297:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_133287
.p2align 0x4
.long 0x1
L_133346:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133347
L_133351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133352
.p2align 0x4
.long 0x451
L_133352:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133347:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_133328:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133329
L_133333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133334
.p2align 0x4
.long 0x451
L_133334:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133329:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_133306:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133307
L_133311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133312
.p2align 0x4
.long 0x451
L_133312:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133307:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_133288:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133289
L_133293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133294
.p2align 0x4
.long 0x451
L_133294:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133289:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_402:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133348
L_133349:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133350
.p2align 0x4
.long 0x451
L_133350:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133348:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_401:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133330
L_133331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133332
.p2align 0x4
.long 0x451
L_133332:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133330:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_400:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133308
L_133309:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133310
.p2align 0x4
.long 0x451
L_133310:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133308:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_399:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133290
L_133291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133292
.p2align 0x4
.long 0x451
L_133292:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133290:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl new_30
.hidden new_30
new_30:
L_133378:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_133379
L_133442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_133443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133443
.p2align 0x4
.long 0x45F
L_133443:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_133379:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429320
L_133380:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_133381:
	incl %ecx
	jo L_133382
L_133383:
	cmpq $0x1,%r15
	je L_429300
L_133384:
	movq 0x8(%r15),%r15
	jmp L_133381
.p2align 0x4
L_429300:
L_133385:
L_133386:
	movslq %ecx,%r15
	cmpq $0x7FFFFFFF,%r15
	movq %r15,0x10(%rbp)
	ja L_429318
L_133387:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133388
L_133438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133439
.p2align 0x4
.long 0x45D
L_133439:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_133388:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA8F,%rcx
	movq 0x10(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133389
.p2align 0x4
.long 0x45D
L_133389:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq $0x0,0x20(%rbp)
loop_1385:
	movq 0x10(%rbp),%r14
	cmpq %r14,0x20(%rbp)
	jnl L_429302
L_133428:
	cmpq $0x1,%r15
	je L_429301
L_133429:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x11,0x50(%rbp)
	movq %r11,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_133430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_429301:
L_133437:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429302:
L_133390:
	movq 0x10(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x20(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	je L_429303
L_133391:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429303:
L_133392:
	movl 0x20(%rbp),%r13d
	testl %r13d,%r13d
	jz L_429313
L_133393:
	movq $0x1767,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r15)
	movq %r11,0x8(%r15)
	cmpq $0x0,0x10(%rbp)
	jna L_133395
L_133396:
	movq 0x0(%r11),%r14
	cmpl $0x0,%r13d
	jl L_429311
L_133397:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1386:
	cmpl 0x20(%rbp),%ecx
	jnl L_429307
L_133416:
	movslq %ecx,%r13
	movq 0x18(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq 0x8(%r10),%r13
	movq 0x8(%r14),%r11
	movq %r13,%r9
	andq %r11,%r9
	andq $0x1,%r9
	jz L_429305
L_133417:
	cmpq %r13,%r11
	jl L_429304
	movq %r15,(localObjptr+0x0)(%rip)
	movl %ebx,(localWord32+0x0)(%rip)
L_133419:
	incl %ecx
	movq (localObjptr+0x0)(%rip),%r15
	movl (localWord32+0x0)(%rip),%ebx
	jmp loop_1386
.p2align 0x4
L_429304:
	movq %r10,%r11
	movq %r15,(localObjptr+0x0)(%rip)
L_133421:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r11,%r14
	jmp L_133419
.p2align 0x4
L_429305:
L_133422:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r11,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	movl %ecx,%r13d
	movl %ebx,(localWord32+0x0)(%rip)
	movq %r10,%rbx
	call IntInf_compare
L_133423:
	cmpl $0x0,%eax
	jg L_429306
	movl %r13d,%ecx
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_133419
.p2align 0x4
L_429306:
	movq %rbx,%r11
	movl %r13d,%ecx
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_133421
.p2align 0x4
L_429307:
L_133398:
	movl 0x20(%rbp),%r14d
	decl %r14d
	movslq %ebx,%r13
	movq 0x10(%rbp),%r11
	cmpq %r11,%r13
	jnb L_133395
L_133400:
	movq 0x18(%rbp),%r10
	movq 0x0(%r10,%r13,8),%r9
	movslq %r14d,%r8
	cmpq %r11,%r8
	jnb L_429309
L_133402:
	movq 0x0(%r10,%r8,8),%r11
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	movq %r11,0x0(%r10,%r13,8)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	movq %r9,0x0(%r10,%r8,8)
	decl %r14d
	jo L_429308
L_133403:
	movl %r14d,0x30(%rbp)
	movq %r15,0x40(%rbp)
	movl $0x0,0x34(%rbp)
	movq %r10,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_133404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_13
.p2align 0x4
L_429308:
L_133382:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429309:
L_133395:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429311:
L_133426:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429313:
L_133407:
	movl 0x20(%rbp),%r15d
	decl %r15d
	jo L_133382
L_133408:
	movl %r15d,0x28(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
loop_1387:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429315
.p2align 0x4,,0x7
L_133409:
	movl 0x28(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_429314
L_133410:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x1B77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	jmp loop_1387
.p2align 0x4
L_429314:
L_133411:
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429315:
L_133412:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_133413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133413
.p2align 0x4
.long 0x8B9
L_133413:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_133409
.p2align 0x4
L_429318:
L_133440:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429320:
L_133441:
	xorl %ecx,%ecx
	jmp L_133386
.p2align 0x4
.long 0x101E
L_133430:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_429322
L_133431:
	movq (globalObjptr+0x1510)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429322:
L_133432:
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x11,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_133433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x897
L_133404:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133405
L_133414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_133415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133415
.p2align 0x4
.long 0x49C
L_133415:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_133405:
	movq $0x3D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl $0x1,0x3C(%rbp)
	addq $0x30,%rbp
	leaq (L_133406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0xA82
L_133433:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133434
L_133435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_133436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133436
.p2align 0x4
.long 0x1C9F
L_133436:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_133434:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x20(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x20(%rbp)
	movq 0x28(%rbp),%r15
	jmp loop_1385
.p2align 0x4
.long 0x897
L_133406:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_133407
.text
.p2align 0x4
.globl qsort_13
.hidden qsort_13
qsort_13:
L_133444:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_1388
L_133503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133504
.p2align 0x4
.long 0x4E8
L_133504:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_1388:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_133446
L_133447:
	cmpl $0x14,%r15d
	jng L_429326
L_133449:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_429325
L_133450:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_133451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_429325:
L_133446:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429326:
L_133448:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_133451:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_133452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E5
L_133452:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%esp
	movl %esp,0x18(%rbp)
	movl 0x4(%rbp),%ebx
	movl %ebx,%esi
	addl %esp,%esi
	jo L_133446
L_133453:
	movq 0x10(%rbp),%rsp
	movq 0x8(%rsp),%r13
	movq 0x0(%rsp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movslq %ebx,%r15
	cmpq %r14,%r15
	jnb L_133455
L_133456:
	movq 0x0(%r13,%r15,8),%r10
	movslq %esi,%r9
	cmpq %r14,%r9
	jnb L_133455
L_133458:
	movq 0x0(%r13,%r9,8),%r8
	movq 0xFFFFFFFFFFFFFFF0(%r11),%rsp
	cmpq %rsp,%r15
	jnb L_133455
L_133460:
	movq %r11,%rsi
	shrq $0x8,%rsi
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%rsi,1)
	movq %r8,0x0(%r11,%r15,8)
	cmpq %rsp,%r9
	jnb L_133455
L_133462:
	movq %r11,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%rdi,%r8,1)
	movq %r10,0x0(%r11,%r9,8)
	movq 0x8(%rbp),%rsi
	movq 0xFFFFFFFFFFFFFFF0(%rsi),%r10
	cmpq %r10,%r15
	jnb L_133455
L_133464:
	movq 0x0(%rsi,%r15,8),%r9
	movl 0x0(%rbp),%ecx
	incl %ecx
	jo L_133446
L_133465:
	movq %rsp,%r8
.p2align 0x4,,0x7
loop_1390:
	incl %ebx
	movl %ebx,0x18(%rbp)
	jo L_133446
L_133466:
	movslq %ebx,%rsp
	cmpq %r10,%rsp
	jnb L_133455
L_133468:
	movq 0x8(%r9),%rsi
	movq 0x8(%rbp),%rdi
	movq %rsp,%rax
	movq 0x0(%rdi,%rax,8),%rsp
	movq 0x8(%rsp),%rdx
	movq %rsi,%rsp
	andq %rdx,%rsp
	andq $0x1,%rsp
	jz L_429342
L_133469:
	cmpq %rsi,%rdx
	jl L_429341
	xchgq %rax,%r15
	xchgq %rsi,%r13
	movq %r11,(localObjptr+0x8)(%rip)
	movq %r8,(localWord64+0x18)(%rip)
	movq %r14,(localWord64+0x0)(%rip)
	movq %rax,(localWord64+0x8)(%rip)
	movq %rsi,(localObjptr+0x0)(%rip)
.p2align 0x4,,0x7
loop_1391:
	decl %ecx
	jo L_133446
L_133471:
	movslq %ecx,%r14
	cmpq %r10,%r14
	jnb L_133455
L_133473:
	movq 0x8(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r8
	movq 0x8(%r8),%rsp
	movq %r13,%r11
	andq %rsp,%r11
	andq $0x1,%r11
	jz L_429337
L_133474:
	cmpq %rsp,%r13
	jnl L_429328
L_133493:
	jmp loop_1391
.p2align 0x4
L_429328:
	xchgq %r14,%r15
	xchgq %r9,%r14
	movq %r9,(localWord64+0x10)(%rip)
L_133476:
	movl 0x18(%rbp),%ebx
	cmpl %ebx,%ecx
	jl L_429333
L_133477:
	movq (localWord64+0x10)(%rip),%r13
	movq (localWord64+0x0)(%rip),%rsp
	cmpq %rsp,%r13
	jnb L_133455
L_133479:
	movq (localObjptr+0x0)(%rip),%rsi
	movq 0x0(%rsi,%r13,8),%r11
	cmpq %rsp,%r15
	jnb L_133455
L_133481:
	movq 0x0(%rsi,%r15,8),%r9
	movq (localWord64+0x18)(%rip),%r8
	cmpq %r8,%r13
	jnb L_133455
L_133483:
	movq (localObjptr+0x8)(%rip),%rdi
	movq %rdi,%rdx
	shrq $0x8,%rdx
	movq (gcState+0x3C8)(%rip),%rax
	movb $0x1,0x0(%rax,%rdx,1)
	movq %r9,0x0(%rdi,%r13,8)
	cmpq %r8,%r15
	jnb L_429329
L_133485:
	movq %rdi,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rax,%r13,1)
	movq %r11,0x0(%rdi,%r15,8)
	movq %rsi,%r13
	movq %rdi,%r11
	movq %r14,%r9
	movq %rsp,%r14
	movq (localWord64+0x8)(%rip),%r15
	jmp loop_1390
.p2align 0x4
L_429329:
L_133455:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429333:
L_133486:
	movq (localObjptr+0x0)(%rip),%r14
	movq (localWord64+0x8)(%rip),%r13
	movq 0x0(%r14,%r13,8),%r11
	cmpq (localWord64+0x0)(%rip),%r15
	jnb L_133455
L_133488:
	movq 0x0(%r14,%r15,8),%r10
	movq (localObjptr+0x8)(%rip),%r14
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r14,%r13,8)
	cmpq (localWord64+0x18)(%rip),%r15
	jnb L_133455
L_133490:
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	decl %ecx
	jo L_133446
L_133491:
	movl %ecx,0x28(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_133492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_13
.p2align 0x4
L_429337:
L_133494:
	movq (c_stackP+0x0)(%rip),%r11
	xchgq %r11,%rsp
	movq %r13,%rsi
	movq %r11,%rdi
	xorq %rax,%rax
	movl %ecx,%ebx
	xchgq %r9,%r13
	xchgq %r10,%r12
	movq %r9,(localObjptr+0x20)(%rip)
	movq %r10,(gcState+0x0)(%rip)
	call IntInf_compare
L_133495:
	cmpl $0x0,%eax
	jng L_429338
L_133497:
	movq (gcState+0x0)(%rip),%r11
	xchgq %r11,%r12
	movq %r11,%r10
	movq %r13,%r9
	movl %ebx,%ecx
	movq (localObjptr+0x20)(%rip),%r13
	jmp loop_1391
.p2align 0x4
L_429338:
	movq (gcState+0x0)(%rip),%r11
	xchgq %r11,%r12
	xchgq %r14,%r15
	xchgq %r13,%r14
	movq %r11,%r10
	movl %ebx,%ecx
	movq %r13,(localWord64+0x10)(%rip)
	jmp L_133476
.p2align 0x4
L_429341:
L_133498:
	movl 0x18(%rbp),%ebx
	jmp loop_1390
.p2align 0x4
L_429342:
L_133499:
	movq (c_stackP+0x0)(%rip),%rsp
	xchgq %rdx,%rsi
	movq %rdx,%rdi
	xorq %rbx,%rbx
	xchgq %rbx,%rax
	xchgq %rdx,%r12
	xchgq %r11,%r13
	movq %r13,(localObjptr+0x8)(%rip)
	movl %ecx,%r13d
	xchgq %r8,%r14
	xchgq %r9,%r15
	xchgq %r10,%r14
	movq %r11,(localObjptr+0x0)(%rip)
	movq %rdx,(gcState+0x0)(%rip)
	movq %r8,(localWord64+0x0)(%rip)
	movq %r9,(localWord64+0x8)(%rip)
	movq %r10,(localWord64+0x18)(%rip)
	call IntInf_compare
L_133500:
	cmpl $0x0,%eax
	jng loop_3860
L_133502:
	movl 0x18(%rbp),%esi
	movq (gcState+0x0)(%rip),%rdi
	xchgq %rdi,%r12
	movq %r14,%r10
	movq %r15,%r9
	movl %r13d,%ecx
	movq %rbx,(localWord64+0x10)(%rip)
	movl %esi,%ebx
	movq (localWord64+0x8)(%rip),%r15
	movq (localWord64+0x0)(%rip),%r14
	movq (localObjptr+0x0)(%rip),%r13
	movq (localObjptr+0x8)(%rip),%r11
	movq (localWord64+0x18)(%rip),%r8
	jmp loop_1390
.p2align 0x4
loop_3860:
	movq (gcState+0x0)(%rip),%r11
	xchgq %r11,%r12
	movl %r13d,%ecx
	movq %r11,%r13
	movq %r14,%r10
	movq %r15,%r9
	movq %rbx,%r15
	jmp loop_1391
.p2align 0x4
.long 0x4F4
L_133492:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_1388
.text
.p2align 0x4
.globl loop_3856
.hidden loop_3856
loop_3856:
L_133505:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_133506
L_133579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_133580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133580
.p2align 0x4
.long 0x45F
L_133580:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_133506:
L_133507:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_133508
L_133509:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x108A,%r14
	je L_429355
	cmpq $0x108C,%r14
	je L_429354
	cmpq $0x108E,%r14
	je L_429353
	cmpq $0x108F,%r14
	je L_429352
L_133508:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429352:
L_133573:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_133574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3856
.p2align 0x4
L_429353:
L_133568:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_133569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3856
.p2align 0x4
L_429354:
L_133563:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_133564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3856
.p2align 0x4
L_429355:
L_133510:
	movq 0x0(%rbp),%r9
	movq 0x0(%r9),%r8
	movq 0x0(%r8),%r13
	movq 0x8(%rbp),%r9
	movq 0x8(%r9),%r10
	movq 0x0(%r9),%r11
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r14
	incq %r14
	jo L_429365
L_133512:
	movq %r14,0x0(%r9)
	movq 0x0(%r15),%r9
	cmpq $0x1,%r9
	je L_429364
L_133513:
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
.p2align 0x4,,0x7
L_133515:
	movq %r14,%r9
	andq $0x3,%r9
	jnz L_429363
L_133555:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r9
	shrq $0x1,%r9
	cmpq $0xD6A,%r9
	jne L_429362
L_133556:
	movq 0x8(%r14),%r9
	cmpq 0x0(%r14),%r10
	movq %r10,(localObjptr+0x10)(%rip)
	je L_429359
L_133516:
	incl %ecx
	jo L_429358
L_133518:
	cmpq $0x1,%r15
	je L_429356
L_133519:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r10
	jmp L_133515
.p2align 0x4
L_429356:
L_133520:
L_133521:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_429357
L_133523:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_483
L_133554:
	movl %ecx,0x0(%r15)
x_483:
	movq %r13,0x8(%rbp)
	movq %r11,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_133525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_429357:
L_133522:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429358:
L_133517:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429359:
L_133558:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_133522
L_133559:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_429360
L_133561:
	movl %ecx,0x0(%r15)
	movq %r9,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429360:
L_133560:
	movq %r9,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429362:
	movq %r10,(localObjptr+0x10)(%rip)
	jmp L_133516
.p2align 0x4
L_429363:
	movq %r10,(localObjptr+0x10)(%rip)
	jmp L_133516
.p2align 0x4
L_429364:
L_133562:
	xorl %ecx,%ecx
	jmp L_133521
.p2align 0x4
L_429365:
L_133511:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x639
L_133574:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_133575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3856
.p2align 0x4
.long 0x2B
L_133569:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133570
L_133571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_133572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133572
.p2align 0x4
.long 0x2C
L_133572:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_133570:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_133564:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133565
L_133566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_133567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133567
.p2align 0x4
.long 0x4B1
L_133567:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_133565:
	movq $0x2119,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_133525:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_133526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA9E
L_133575:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133576
L_133577:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_133578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133578
.p2align 0x4
.long 0x145A
L_133578:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_133576:
	movq $0x211F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movzbl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_133526:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_133527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_133527:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF380)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_133528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_133528:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_133529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_133529:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133530
L_133552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_133553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133553
.p2align 0x4
.long 0x4AE
L_133553:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_133530:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_133531:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_133517
L_133532:
	cmpq $0x1,%r14
	je L_429371
L_133533:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_133531
.p2align 0x4
L_429371:
L_133534:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133535
L_133550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_133551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133551
.p2align 0x4
.long 0x4E6
L_133551:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_133535:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_429372
L_133536:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_223:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_429372:
L_133549:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_223
.p2align 0x4
.long 0x1
rev_221:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_429378
L_133537:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_133538:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429377
.p2align 0x4,,0x7
L_133539:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429376
L_133540:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_133538
.p2align 0x4
L_429376:
L_133542:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_429377:
L_133546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133547
.p2align 0x4
.long 0x45B
L_133547:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_133539
.p2align 0x4
L_429378:
L_133548:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_133542
.p2align 0x4
.long 0x1
bug_403:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133543
L_133544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133545
.p2align 0x4
.long 0x451
L_133545:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133543:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3857
.hidden loop_3857
loop_3857:
L_133581:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_133582
L_133655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_133656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133656
.p2align 0x4
.long 0x45F
L_133656:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_133582:
L_133583:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_133584
L_133585:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x108A,%r14
	je L_429383
	cmpq $0x108C,%r14
	je L_429382
	cmpq $0x108E,%r14
	je L_429381
	cmpq $0x108F,%r14
	je L_429380
L_133584:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429380:
L_133649:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_133650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3857
.p2align 0x4
L_429381:
L_133644:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_133645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3857
.p2align 0x4
L_429382:
L_133639:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_133640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3857
.p2align 0x4
L_429383:
L_133586:
	movq 0x0(%rbp),%r9
	movq 0x0(%r9),%r8
	movq 0x0(%r8),%r13
	movq 0x8(%rbp),%r9
	movq 0x8(%r9),%r10
	movq 0x0(%r9),%r11
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r14
	incq %r14
	jo L_429393
L_133588:
	movq %r14,0x0(%r9)
	movq 0x0(%r15),%r9
	cmpq $0x1,%r9
	je L_429392
L_133589:
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
.p2align 0x4,,0x7
L_133591:
	movq %r14,%r9
	andq $0x3,%r9
	jnz L_429391
L_133631:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r9
	shrq $0x1,%r9
	cmpq $0xD6A,%r9
	jne L_429390
L_133632:
	movq 0x8(%r14),%r9
	cmpq 0x0(%r14),%r10
	movq %r10,(localObjptr+0x10)(%rip)
	je L_429387
L_133592:
	incl %ecx
	jo L_429386
L_133594:
	cmpq $0x1,%r15
	je L_429384
L_133595:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r10
	jmp L_133591
.p2align 0x4
L_429384:
L_133596:
L_133597:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_429385
L_133599:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_484
L_133630:
	movl %ecx,0x0(%r15)
x_484:
	movq %r13,0x8(%rbp)
	movq %r11,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_133601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_429385:
L_133598:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429386:
L_133593:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429387:
L_133634:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_133598
L_133635:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_429388
L_133637:
	movl %ecx,0x0(%r15)
	movq %r9,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429388:
L_133636:
	movq %r9,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429390:
	movq %r10,(localObjptr+0x10)(%rip)
	jmp L_133592
.p2align 0x4
L_429391:
	movq %r10,(localObjptr+0x10)(%rip)
	jmp L_133592
.p2align 0x4
L_429392:
L_133638:
	xorl %ecx,%ecx
	jmp L_133597
.p2align 0x4
L_429393:
L_133587:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x639
L_133650:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_133651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3857
.p2align 0x4
.long 0x2B
L_133645:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133646
L_133647:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_133648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133648
.p2align 0x4
.long 0x2C
L_133648:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_133646:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_133640:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133641
L_133642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_133643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133643
.p2align 0x4
.long 0x4B1
L_133643:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_133641:
	movq $0x2119,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_133601:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_133602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA9E
L_133651:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133652
L_133653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_133654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133654
.p2align 0x4
.long 0x145A
L_133654:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_133652:
	movq $0x211F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movzbl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_133602:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_133603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_133603:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF380)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_133604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_133604:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_133605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_133605:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133606
L_133628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_133629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133629
.p2align 0x4
.long 0x4AE
L_133629:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_133606:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_133607:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_133593
L_133608:
	cmpq $0x1,%r14
	je L_429399
L_133609:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_133607
.p2align 0x4
L_429399:
L_133610:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133611
L_133626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_133627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133627
.p2align 0x4
.long 0x4E6
L_133627:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_133611:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_429400
L_133612:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_224:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_429400:
L_133625:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_224
.p2align 0x4
.long 0x1
rev_222:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_429406
L_133613:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_133614:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429405
.p2align 0x4,,0x7
L_133615:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429404
L_133616:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_133614
.p2align 0x4
L_429404:
L_133618:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_429405:
L_133622:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133623
.p2align 0x4
.long 0x45B
L_133623:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_133615
.p2align 0x4
L_429406:
L_133624:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_133618
.p2align 0x4
.long 0x1
bug_404:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133619
L_133620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133621
.p2align 0x4
.long 0x451
L_133621:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133619:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl intInfBinary_23
.hidden intInfBinary_23
intInfBinary_23:
L_133657:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_133797
L_133658:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429408
L_133659:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_133660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_429408:
L_133797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_133798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133798
.p2align 0x4
.long 0x804
L_133798:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_133659
.p2align 0x4
.long 0x65F
L_133660:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_429410
L_133661:
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_133662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_429410:
L_133665:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x65F
L_133662:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_133665
L_133663:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1D,%r14
	je L_429445
	cmpq $0x1E,%r14
	je L_429436
	cmpq $0x23,%r14
	je L_429434
	cmpq $0x26,%r14
	je L_429433
	cmpq $0x2A,%r14
	je L_429424
	cmpq $0x2B,%r14
	je L_429423
	cmpq $0x2D,%r14
	je L_429422
	cmpq $0x2E,%r14
	je L_429421
	cmpq $0x33,%r14
	je L_429412
L_133664:
	andq $0x3,%r15
	jnz L_133665
L_133666:
	jmp L_133665
.p2align 0x4
L_429412:
L_133770:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	movq 0x0(%rbp),%r11
	andq %r11,%r13
	andq $0x1,%r13
	jz L_429413
L_133771:
	xorq %r11,%r14
	orq $0x1,%r14
	movq %r14,0x58(%rbp)
intInf_14:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_133772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_429413:
L_133778:
	andq $0x1,%r14
	jz L_429419
L_133779:
	movq $0x1,%r14
	xchgq %r14,%r15
L_133780:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_429417
L_133781:
	movq $0x1,%r14
L_133782:
	cmpq %r14,%r15
	jnl L_133784
L_133790:
	movq %r14,%r15
L_133784:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%rsi
	movq 0x8(%r14),%r13
	imulq %r13,%r15
	addq $0x7,%rsi
	addq %r13,%rsi
	addq %r15,%rsi
	movq %rsi,%r15
	movq %rsi,0x10(%rbp)
	addq $0x0,%r15
	jc L_429415
L_133785:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_133786
L_133788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_133789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133789
.p2align 0x4
.long 0x129D
L_133789:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_133786:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x10(%rbp),%rdx
	movq 0x8(%rbp),%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_xorb
L_133787:
	movq %rax,0x58(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_14
.p2align 0x4
L_429415:
L_133690:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_429417:
L_133791:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_429418
L_133792:
	jmp L_133782
.p2align 0x4
L_429418:
L_133698:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429419:
L_133793:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	decq %r13
	jo L_133698
L_133794:
	xchgq %r13,%r15
	jmp L_133780
.p2align 0x4
L_429421:
L_133762:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_133763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_429422:
L_133754:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_133755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_429423:
L_133746:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_133747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_429424:
L_133721:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	movq 0x0(%rbp),%r11
	andq %r11,%r13
	andq $0x1,%r13
	jz L_429425
L_133722:
	orq %r11,%r14
	orq $0x1,%r14
	movq %r14,0x58(%rbp)
intInf_13:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_133723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_429425:
L_133729:
	andq $0x1,%r14
	jz L_429431
L_133730:
	movq $0x1,%r14
	xchgq %r14,%r15
L_133731:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_429429
L_133732:
	movq $0x1,%r14
L_133733:
	cmpq %r14,%r15
	jnl L_133735
L_133741:
	movq %r14,%r15
L_133735:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%rsi
	movq %rsi,%r13
	movq 0x0(%r14),%r11
	imulq %r15,%r13
	addq $0x7,%r11
	addq %r11,%rsi
	addq %r13,%rsi
	movq %rsi,%r15
	movq %rsi,0x10(%rbp)
	addq $0x0,%r15
	jc L_133690
L_133736:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_133737
L_133739:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_133740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133740
.p2align 0x4
.long 0x129D
L_133740:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_133737:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x10(%rbp),%rdx
	movq 0x8(%rbp),%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_orb
L_133738:
	movq %rax,0x58(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_13
.p2align 0x4
L_429429:
L_133742:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_133698
L_133743:
	jmp L_133733
.p2align 0x4
L_429431:
L_133744:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	decq %r13
	jo L_133698
L_133745:
	xchgq %r13,%r15
	jmp L_133731
.p2align 0x4
L_429433:
L_133713:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_133714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_429434:
L_133702:
	movq 0x0(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
loop_1392:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_429435
L_133703:
	movq 0x48(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_133704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
L_429435:
L_133706:
	movq 0x60(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_133707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_429436:
L_133675:
	movq 0x8(%rbp),%r14
	andq 0x0(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_429437
L_133676:
	orq $0x1,%r14
	movq %r14,0x58(%rbp)
intInf_12:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_133677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_429437:
L_133683:
	movq 0x8(%rbp),%r14
	andq $0x1,%r14
	jz L_429443
L_133684:
	movq $0x1,%r14
	xchgq %r14,%r15
L_133685:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_429441
L_133686:
	movq $0x1,%r14
L_133687:
	cmpq %r14,%r15
	jnl L_133689
L_133696:
	movq %r14,%r15
L_133689:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	imulq %r11,%r15
	addq $0x7,%r13
	addq %r13,%r11
	addq %r11,%r15
	movq %r15,%rsi
	movq %r15,0x18(%rbp)
	addq $0x0,%rsi
	jc L_133690
L_133691:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq %rsi,%r15
	jnb L_133692
L_133694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_133695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133695
.p2align 0x4
.long 0x129D
L_133695:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_133692:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x18(%rbp),%rdx
	movq 0x8(%rbp),%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_andb
L_133693:
	movq %rax,0x58(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_12
.p2align 0x4
L_429441:
L_133697:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_133698
L_133699:
	jmp L_133687
.p2align 0x4
L_429443:
L_133700:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	decq %r13
	jo L_133698
L_133701:
	xchgq %r13,%r15
	jmp L_133685
.p2align 0x4
L_429445:
L_133667:
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_133668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0xA96
L_133772:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133773
L_133776:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_133777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133777
.p2align 0x4
.long 0x770
L_133777:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_133773:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_133665
L_133774:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61B
L_133763:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_133764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x61B
L_133755:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_133756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x61B
L_133747:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_133748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0xA96
L_133723:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133724
L_133727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_133728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133728
.p2align 0x4
.long 0x770
L_133728:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_133724:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_133665
L_133725:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61B
L_133714:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_133715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x129E
L_133704:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_133705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x79A
L_133707:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133708
L_133711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_133712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133712
.p2align 0x4
.long 0x129F
L_133712:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_133708:
	movl 0x68(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_133665
L_133709:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA96
L_133677:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133678
L_133681:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_133682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133682
.p2align 0x4
.long 0x770
L_133682:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_133678:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_133665
L_133679:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61B
L_133668:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_133669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0xA96
L_133764:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133765
L_133768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_133769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133769
.p2align 0x4
.long 0x770
L_133769:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_133765:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_133665
L_133766:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA96
L_133756:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133757
L_133760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_133761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133761
.p2align 0x4
.long 0x770
L_133761:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_133757:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_133665
L_133758:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA96
L_133748:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133749
L_133752:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_133753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133753
.p2align 0x4
.long 0x770
L_133753:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_133749:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_133665
L_133750:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA96
L_133715:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133716
L_133719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_133720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133720
.p2align 0x4
.long 0x770
L_133720:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_133716:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_133665
L_133717:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x77E
L_133705:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq 0x58(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x58(%rbp)
	jmp loop_1392
.p2align 0x4
.long 0xA96
L_133669:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133670
L_133673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_133674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133674
.p2align 0x4
.long 0x770
L_133674:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_133670:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_133665
L_133671:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2653,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3855
.hidden loop_3855
loop_3855:
L_133799:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_133800
L_133873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_133874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133874
.p2align 0x4
.long 0x45F
L_133874:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_133800:
L_133801:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_133802
L_133803:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x108A,%r14
	je L_429468
	cmpq $0x108C,%r14
	je L_429467
	cmpq $0x108E,%r14
	je L_429466
	cmpq $0x108F,%r14
	je L_429465
L_133802:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429465:
L_133867:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_133868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3855
.p2align 0x4
L_429466:
L_133862:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_133863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3855
.p2align 0x4
L_429467:
L_133857:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_133858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3855
.p2align 0x4
L_429468:
L_133804:
	movq 0x0(%rbp),%r9
	movq 0x0(%r9),%r8
	movq 0x0(%r8),%r13
	movq 0x8(%rbp),%r9
	movq 0x8(%r9),%r10
	movq 0x0(%r9),%r11
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r14
	incq %r14
	jo L_429478
L_133806:
	movq %r14,0x0(%r9)
	movq 0x0(%r15),%r9
	cmpq $0x1,%r9
	je L_429477
L_133807:
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
.p2align 0x4,,0x7
L_133809:
	movq %r14,%r9
	andq $0x3,%r9
	jnz L_429476
L_133849:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r9
	shrq $0x1,%r9
	cmpq $0xD6A,%r9
	jne L_429475
L_133850:
	movq 0x8(%r14),%r9
	cmpq 0x0(%r14),%r10
	movq %r10,(localObjptr+0x10)(%rip)
	je L_429472
L_133810:
	incl %ecx
	jo L_429471
L_133812:
	cmpq $0x1,%r15
	je L_429469
L_133813:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r10
	jmp L_133809
.p2align 0x4
L_429469:
L_133814:
L_133815:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_429470
L_133817:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_485
L_133848:
	movl %ecx,0x0(%r15)
x_485:
	movq %r13,0x8(%rbp)
	movq %r11,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_133819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_429470:
L_133816:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429471:
L_133811:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429472:
L_133852:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_133816
L_133853:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_429473
L_133855:
	movl %ecx,0x0(%r15)
	movq %r9,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429473:
L_133854:
	movq %r9,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429475:
	movq %r10,(localObjptr+0x10)(%rip)
	jmp L_133810
.p2align 0x4
L_429476:
	movq %r10,(localObjptr+0x10)(%rip)
	jmp L_133810
.p2align 0x4
L_429477:
L_133856:
	xorl %ecx,%ecx
	jmp L_133815
.p2align 0x4
L_429478:
L_133805:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x639
L_133868:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_133869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3855
.p2align 0x4
.long 0x2B
L_133863:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133864
L_133865:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_133866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133866
.p2align 0x4
.long 0x2C
L_133866:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_133864:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_133858:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133859
L_133860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_133861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133861
.p2align 0x4
.long 0x4B1
L_133861:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_133859:
	movq $0x2119,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_133819:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_133820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA9E
L_133869:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133870
L_133871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_133872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133872
.p2align 0x4
.long 0x145A
L_133872:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_133870:
	movq $0x211F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movzbl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_133820:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_133821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_133821:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF380)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_133822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_133822:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_133823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_133823:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133824
L_133846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_133847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133847
.p2align 0x4
.long 0x4AE
L_133847:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_133824:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_133825:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_133811
L_133826:
	cmpq $0x1,%r14
	je L_429484
L_133827:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_133825
.p2align 0x4
L_429484:
L_133828:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133829
L_133844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_133845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133845
.p2align 0x4
.long 0x4E6
L_133845:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_133829:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_429485
L_133830:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_225:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_429485:
L_133843:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_225
.p2align 0x4
.long 0x1
rev_223:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_429491
L_133831:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_133832:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429490
.p2align 0x4,,0x7
L_133833:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429489
L_133834:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_133832
.p2align 0x4
L_429489:
L_133836:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_429490:
L_133840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133841
.p2align 0x4
.long 0x45B
L_133841:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_133833
.p2align 0x4
L_429491:
L_133842:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_133836
.p2align 0x4
.long 0x1
bug_405:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133837
L_133838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133839
.p2align 0x4
.long 0x451
L_133839:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133837:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_37
.hidden get_37
get_37:
L_133875:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_133876
L_133930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133931
.p2align 0x4
.long 0x45B
L_133931:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_133876:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_429502
L_133878:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_429501
L_133879:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_133881:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_133882
L_133922:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xD69,%r13
	jne L_133882
L_133923:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpq %r11,0x10(%rbp)
	je L_429496
L_133882:
	incl %ecx
	jo L_429495
L_133884:
	cmpq $0x1,%r14
	je L_429493
L_133885:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_133881
.p2align 0x4
L_429493:
L_133886:
L_133887:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_429494
L_133889:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_486
L_133921:
	movl %ecx,0x0(%r15)
x_486:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_133891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_429494:
L_133888:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429495:
L_133883:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429496:
L_133925:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_133888
L_133926:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_429497
L_133928:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429497:
L_133927:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429501:
L_133929:
	xorl %ecx,%ecx
	jmp L_133887
.p2align 0x4
L_429502:
L_133877:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_133891:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_133892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_133892:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_133893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_133893:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_133894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_133894:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_133895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_133895:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133896
L_133919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_133920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133920
.p2align 0x4
.long 0x4AE
L_133920:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_133896:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_133897:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_133883
L_133898:
	cmpq $0x1,%r14
	je L_429504
L_133899:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_133897
.p2align 0x4
L_429504:
L_133900:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133901
L_133917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_133918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133918
.p2align 0x4
.long 0x4E6
L_133918:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_133901:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_429505
L_133902:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_226:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_429505:
L_133916:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_226
.p2align 0x4
.long 0x1
rev_224:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_429511
L_133903:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_133904:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429510
.p2align 0x4,,0x7
L_133905:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429509
L_133906:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_133904
.p2align 0x4
L_429509:
L_133908:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_133909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_429510:
L_133913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133914
.p2align 0x4
.long 0x45B
L_133914:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_133905
.p2align 0x4
L_429511:
L_133915:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_133908
.p2align 0x4
.long 0x1
L_133909:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133910
L_133911:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133912
.p2align 0x4
.long 0x451
L_133912:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133910:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1321
.hidden x_1321
x_1321:
L_133932:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_133983
L_133933:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429527
L_133934:
	movq 0x8(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r10),%r14
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_429526
L_133936:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_429525
L_133937:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_133939:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_429524
L_133975:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD6B,%r11
	jne L_429523
L_133976:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_429520
L_133940:
	incl %ecx
	movl %ecx,0x8(%rbp)
	jo L_429519
L_133942:
	cmpq $0x1,%r15
	je L_429513
L_133943:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_133939
.p2align 0x4
L_429513:
L_133944:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133945
L_133973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_133974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133974
.p2align 0x4
.long 0x659
L_133974:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_133945:
	movl 0x8(%rbp),%ecx
L_133946:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_429517
L_133948:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_133950
L_133972:
	movl %ecx,0x0(%r15)
L_133950:
	movq $0x134F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1AD7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_133951:
	movb 0x0(%r15),%r14b
	cmpb $0x1,%r14b
	je L_429515
	cmpb $0x2,%r14b
	je L_429514
L_133952:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_133953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_429514:
L_133971:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429515:
L_133970:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429517:
L_133947:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429519:
L_133941:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429520:
L_133978:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_133947
L_133979:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_429521
L_133981:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_133951
.p2align 0x4
L_429521:
L_133980:
	movq %r11,%r15
	jmp L_133951
.p2align 0x4
L_429523:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_133940
.p2align 0x4
L_429524:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_133940
.p2align 0x4
L_429525:
L_133982:
	xorl %ecx,%ecx
	jmp L_133946
.p2align 0x4
L_429526:
L_133935:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429527:
L_133983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_133984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133984
.p2align 0x4
.long 0x45F
L_133984:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_133934
.p2align 0x4
.long 0x1
L_133953:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
toString_227:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
rev_225:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_429531
L_133954:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_133955:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429530
.p2align 0x4,,0x7
L_133956:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429529
L_133957:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_133955
.p2align 0x4
L_429529:
L_133959:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_133960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_429530:
L_133967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_133968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133968
.p2align 0x4
.long 0x45B
L_133968:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_133956
.p2align 0x4
L_429531:
L_133969:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_133959
.p2align 0x4
.long 0x1
L_133960:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133961
L_133965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133966
.p2align 0x4
.long 0x451
L_133966:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133961:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE70)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED58)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_406:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133962
L_133963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_133964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_133964
.p2align 0x4
.long 0x451
L_133964:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_133962:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_34
.hidden get_34
get_34:
L_133985:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_134015
L_133986:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429546
L_133987:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_429545
L_133989:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_429544
L_133990:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_133992:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_133993
L_134007:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD74,%r13
	jne L_133993
L_134008:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_429539
L_133993:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_429538
L_133995:
	cmpq $0x1,%r15
	je L_429534
L_133996:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_133992
.p2align 0x4
L_429534:
L_133997:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_133998
L_134005:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_134006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134006
.p2align 0x4
.long 0x49B
L_134006:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_133998:
	movl 0x18(%rbp),%ecx
L_133999:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_429536
L_134001:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_134003
L_134004:
	movl %ecx,0x0(%r15)
L_134003:
	movq $0x7C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x7CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movw $0x0,%r13w
	movzwl %r13w,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x7CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq $0x1,0x10(%r13)
	movq $0xCB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xCB7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x2,0x0(%r11)
	movq $0xCB9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r14,0x8(%r10)
	movq %r15,0x10(%r10)
	addq $0x20,%r12
	movq $0xCBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x1AE9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429536:
L_134000:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429538:
L_133994:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429539:
L_134010:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_134000
L_134011:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_429540
L_134013:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429540:
L_134012:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429544:
L_134014:
	xorl %ecx,%ecx
	jmp L_133999
.p2align 0x4
L_429545:
L_133988:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429546:
L_134015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_134016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134016
.p2align 0x4
.long 0x45F
L_134016:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_133987
.text
.p2align 0x4
.globl up_0
.hidden up_0
up_0:
L_134017:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_134018
L_134046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_134047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134047
.p2align 0x4
.long 0x494
L_134047:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_134018:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movw 0x0(%r14),%r15w
	movw %r15w,%r11w
	andw $0x3,%r11w
	cmpw $0x1,%r11w
	je L_134021
	cmpw $0x2,%r11w
	je L_429553
L_134019:
	movw 0x0(%rbp),%r15w
	andw $0x3,%r15w
	cmpw $0x1,%r15w
	je setTop_9
	cmpw $0x2,%r15w
	je L_429548
L_134021:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429548:
L_134034:
	movw 0x0(%rbp),%r15w
	shrw $0x2,%r15w
	movb %r15b,%r11b
	movzbw %r11b,%r15w
	shlw $0x2,%r15w
	orw $0x2,%r15w
	movw %r15w,0x0(%r14)
	movw 0x0(%r13),%r14w
	movw %r14w,%r13w
	andw $0x1,%r13w
	jz L_429551
L_134036:
	shrw $0x1,%r14w
	movb %r14b,%r13b
	cmpb %r13b,%r11b
	jne L_429550
L_134038:
	movw %r15w,0x10(%rbp)
continue_2:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq $0x1,%r13
	je L_134021
L_134024:
	movq 0x8(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_134025:
	movq %r15,0x30(%rbp)
	movw 0x10(%rbp),%r15w
	movw %r15w,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_134026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_0
.p2align 0x4
L_429550:
L_134028:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429551:
L_134035:
	movw %r15w,0x10(%rbp)
	jmp continue_2
.p2align 0x4
setTop_9:
	movq %r13,%r15
setTop_2:
	movw 0x0(%r15),%r13w
	andw $0x1,%r13w
	jnz L_134028
L_134023:
	movw $0x1,0x0(%r14)
	movw $0x1,0x10(%rbp)
	jmp continue_2
.p2align 0x4
L_429553:
L_134040:
	shrw $0x2,%r15w
	movb %r15b,%r11b
	movw 0x0(%rbp),%r15w
	andw $0x3,%r15w
	cmpw $0x1,%r15w
	je setTop_10
	cmpw $0x2,%r15w
	je L_429554
	jmp L_134021
.p2align 0x4
L_429554:
L_134043:
	movw 0x0(%rbp),%r10w
	shrw $0x2,%r10w
	movb %r10b,%r9b
	cmpb %r11b,%r9b
	je L_134021
	movq %r13,%r15
	jmp setTop_2
.p2align 0x4
setTop_10:
	movq %r13,%r15
	jmp setTop_2
.p2align 0x4
.long 0x48F
L_134026:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r14d
	movl %r14d,0x14(%rbp)
	testl %r14d,%r14d
	jz L_134028
L_134029:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_134021
L_134030:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_134025
.text
.p2align 0x4
.globl up_1
.hidden up_1
up_1:
L_134048:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_134049
L_134077:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_134078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134078
.p2align 0x4
.long 0x45F
L_134078:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_134049:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_134063
	cmpq $0x2,%r15
	je L_429564
L_134050:
	movq 0x0(%rbp),%r10
	cmpq $0x1,%r10
	je setTop_3
	cmpq $0x2,%r10
	je L_134063
L_134051:
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r15)
	je L_134063
setTop_3:
	cmpq $0x1,0x0(%r14)
	jne L_429561
L_134055:
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	movq $0x1,0x0(%rbp)
	movq %r11,%r13
continue_3:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_429560
L_134056:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,%r15
L_134057:
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_134058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_1
.p2align 0x4
L_429560:
L_134063:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429561:
L_134054:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429564:
L_134069:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je setTop_3
	cmpq $0x2,%r15
	je L_134063
L_134070:
	movq %r13,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je continue_9
L_134071:
	movq 0x10(%r15),%r14
	cmpq %r14,0x10(%r13)
	jne L_134054
	movq %r11,%r13
	jmp continue_3
.p2align 0x4
continue_9:
	movq %r11,%r13
	jmp continue_3
.p2align 0x4
.long 0x5AF
L_134058:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r14d
	movl %r14d,0x10(%rbp)
	testl %r14d,%r14d
	jz L_134054
L_134060:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_134063
L_134061:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_134057
.text
.p2align 0x4
.globl goto_0
.hidden goto_0
goto_0:
L_134079:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_134080
L_134478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_134479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134479
.p2align 0x4
.long 0x45B
L_134479:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_134080:
	movq 0x10(%rbp),%r8
	movq 0xB0(%r8),%r11
	movq 0xA8(%r8),%r10
	movq 0xA0(%r8),%rsp
	movq %rsp,0x18(%rbp)
	movq 0x98(%r8),%rsp
	movq %rsp,0x20(%rbp)
	movq 0x90(%r8),%rsp
	movq %rsp,0x28(%rbp)
	movq 0x88(%r8),%rsp
	movq %rsp,0x30(%rbp)
	movq 0x80(%r8),%rsp
	movq %rsp,0x38(%rbp)
	movq 0x78(%r8),%rsp
	movq %rsp,0x40(%rbp)
	movq 0x70(%r8),%rsp
	movq %rsp,0x48(%rbp)
	movq 0x68(%r8),%rsp
	movq %rsp,0x50(%rbp)
	movq 0x60(%r8),%rsp
	movq %rsp,0x58(%rbp)
	movb 0x8(%r8),%spl
	movb %spl,0x60(%rbp)
	movq 0x58(%r8),%rsp
	movq %rsp,0x68(%rbp)
	movq 0x50(%r8),%rsp
	movq %rsp,0x70(%rbp)
	movq 0x48(%r8),%rsp
	movq %rsp,0x78(%rbp)
	movq 0x40(%r8),%rsp
	movq %rsp,0x80(%rbp)
	movq 0x38(%r8),%rsp
	movq %rsp,0x88(%rbp)
	movq 0x30(%r8),%rsp
	movq %rsp,0x90(%rbp)
	movl 0x4(%r8),%esp
	movl %esp,0x64(%rbp)
	movq 0x28(%r8),%rsp
	movq %rsp,0x98(%rbp)
	movq 0x20(%r8),%rsp
	movq %rsp,0xA0(%rbp)
	movl 0x0(%r8),%esp
	movl %esp,0xA8(%rbp)
	movq 0x18(%r8),%rsp
	movq %rsp,0xB0(%rbp)
	movq 0x10(%r8),%rsp
	movq %rsp,0xB8(%rbp)
	movq 0xB8(%r8),%rsp
	movq 0x8(%rsp),%r9
	movq 0x0(%rsp),%r13
	movq 0x8(%rbp),%r8
	movq 0x10(%r8),%r15
	movq (globalObjptr+0x1068)(%rip),%r8
	movq 0x0(%r8),%r14
	incq %r14
	jo L_429640
L_134082:
	movq %r14,0x0(%r8)
	movq 0x0(%r15),%r8
	cmpq $0x1,%r8
	je L_429639
L_134083:
	movq 0x0(%r8),%r14
	movq 0x8(%r8),%r8
	xorl %ecx,%ecx
	movq %r8,%r15
.p2align 0x4,,0x7
L_134085:
	movq %r14,%r8
	andq $0x3,%r8
	jnz L_429638
L_134126:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r8
	shrq $0x1,%r8
	cmpq $0xD9D,%r8
	jne L_429637
L_134127:
	movq 0x8(%r14),%r8
	cmpq 0x0(%r14),%r9
	movq %r9,(localObjptr+0x18)(%rip)
	je L_429574
	movq %r10,(localObjptr+0x10)(%rip)
	movq %r11,(localObjptr+0x8)(%rip)
L_134086:
	incl %ecx
	jo L_429573
L_134088:
	cmpq $0x1,%r15
	je L_429571
L_134089:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	movq (localObjptr+0x10)(%rip),%r10
	movq (localObjptr+0x18)(%rip),%r9
	jmp L_134085
.p2align 0x4
L_429571:
L_134090:
L_134091:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_429572
L_134093:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_487
L_134125:
	movl %ecx,0x0(%r15)
x_487:
	movq %r13,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_134095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_429572:
L_134092:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429573:
L_134087:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429574:
L_134129:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_134092
L_134130:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_429635
L_134476:
	movl %ecx,0x0(%r14)
	movq %r8,%r15
	movq %r10,(localObjptr+0x10)(%rip)
	movq %r11,(localObjptr+0x8)(%rip)
L_134132:
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movl 0x0(%r14),%r11d
	testl %r11d,%r11d
	jnz L_429634
L_134133:
	movl $0x1,0x0(%r14)
	movq 0x0(%r13),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0xC0(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0xC8(%rbp)
	movq 0x18(%r13),%r10
	movq %r10,0xD0(%rbp)
	movq 0x20(%r13),%r9
	movq %r9,0xD8(%rbp)
	movq (localObjptr+0x8)(%rip),%r15
	cmpq $0x1,%r15
	je L_429630
L_134134:
	movq 0x0(%r15),%r13
	movq %r13,0xE0(%rbp)
	movq 0x10(%r11),%r13
	movq 0x8(%r15),%r11
	cmpq 0x10(%r11),%r13
	je L_429609
L_134135:
	movq (localObjptr+0x10)(%rip),%r15
	cmpq %r13,0x10(%r15)
	je L_429605
L_134136:
	cmpq $0x1,%r10
	je L_429593
	cmpq $0x2,%r10
	je L_429592
L_134137:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1097,%r15
	je L_429582
L_134407:
	movq 0x0(%rbp),%r15
	movq %r14,0x28(%rbp)
add_0:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r15
	je L_429581
L_134149:
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq $0x1,0xE8(%rbp)
.p2align 0x4,,0x7
L_134150:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429580
.p2align 0x4,,0x7
L_134151:
	movq $0x2149,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429575
L_134152:
	movq %r15,0xE8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xE0(%rbp)
	jmp L_134150
.p2align 0x4
L_429575:
L_134153:
	movq 0xE8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq $0x1,0xE8(%rbp)
.p2align 0x4,,0x7
L_134154:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429579
.p2align 0x4,,0x7
L_134155:
	movq 0xE0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10A2,%r14
	je L_429577
L_134380:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429576
L_134381:
	movq %r15,0xE8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xE0(%rbp)
	jmp L_134154
.p2align 0x4
L_429576:
L_134382:
L_134159:
	movq %r15,0xE8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_134160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceSeqIndex_0
.p2align 0x4
L_429577:
L_134156:
	movq 0xC0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429578
L_134157:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0xC0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp L_134154
.p2align 0x4
L_429578:
L_134158:
	movq 0xE8(%rbp),%r13
	xchgq %r13,%r15
	jmp L_134159
.p2align 0x4
L_429579:
L_134383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_134384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134384
.p2align 0x4
.long 0x1CC4
L_134384:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_134155
.p2align 0x4
L_429580:
L_134385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_134386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134386
.p2align 0x4
.long 0x1CC4
L_134386:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_134151
.p2align 0x4
L_429581:
L_134387:
	movq $0x1,%r15
	jmp L_134159
.p2align 0x4
L_429582:
L_134138:
	movq 0xD0(%rbp),%r13
	movq 0x40(%r13),%r15
L_134139:
	cmpq $0x1,%r15
	je L_429591
L_134140:
	cmpq (globalObjptr+0xCDF8)(%rip),%r15
	je L_429590
L_134141:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq $0x10,%r14
	jne vectorEqual_64
L_134400:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_131:
	cmpq %r13,%r14
	je L_429589
L_134401:
	movq (globalObjptr+0xCDF8)(%rip),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne vectorEqual_226
L_134403:
	incq %r13
	jmp vectorEqualLoop_131
.p2align 0x4
vectorEqual_226:
vectorEqual_64:
	cmpq %r15,(globalObjptr+0xDA18)(%rip)
	je L_429588
L_134143:
	cmpq $0x9,%r14
	jne vectorEqual_65
L_134394:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_130:
	cmpq %r13,%r14
	je L_429587
L_134395:
	movq (globalObjptr+0xDA18)(%rip),%r10
	movb 0x0(%r10,%r13,1),%r11b
	cmpb %r11b,0x0(%r15,%r13,1)
	jne vectorEqual_227
L_134397:
	incq %r13
	jmp vectorEqualLoop_130
.p2align 0x4
vectorEqual_227:
vectorEqual_65:
	cmpq %r15,(globalObjptr+0xD978)(%rip)
	je L_429586
L_134145:
	cmpq $0xA,%r14
	jne L_134147
L_134388:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_129:
	cmpq %r14,%r13
	je L_429584
L_134389:
	movq (globalObjptr+0xD978)(%rip),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_429583
L_134391:
	incq %r13
	jmp vectorEqualLoop_129
.p2align 0x4
L_429583:
L_134147:
	movq %r15,0xE8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (doit_25+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromC_0
.p2align 0x4
L_429584:
L_134392:
	movq 0x30(%rbp),%r15
doit_26:
	movq %r15,0xE8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xE8,%rbp
	leaq (L_134148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1605
.p2align 0x4
L_429586:
L_134393:
	movq 0x30(%rbp),%r15
	jmp doit_26
.p2align 0x4
L_429587:
L_134398:
	movq 0x0(%rbp),%r15
	movq 0xC0(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp add_0
.p2align 0x4
L_429588:
L_134399:
	movq 0x0(%rbp),%r15
	movq 0xC0(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp add_0
.p2align 0x4
L_429589:
L_134404:
	movq 0x28(%rbp),%r15
	jmp doit_26
.p2align 0x4
L_429590:
L_134405:
	movq 0x28(%rbp),%r15
	jmp doit_26
.p2align 0x4
L_429591:
L_134406:
	movq (globalObjptr+0xF390)(%rip),%r15
	movq %r15,0xE8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (doit_25+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromC_0
.p2align 0x4
L_429592:
L_134409:
	movq 0x0(%rbp),%r15
	movq %r14,0x28(%rbp)
	jmp add_0
.p2align 0x4
L_429593:
L_134408:
	movq %r14,0x28(%rbp)
L_134162:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_429604
L_134165:
	cmpl $0x0,%r13d
	jl L_429603
L_134166:
	movq $0x1,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq $0x1,0xE0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movl $0x0,0x34(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq $0x1,0xC8(%rbp)
.p2align 0x4,,0x7
loop_1393:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429602
.p2align 0x4,,0x7
L_134167:
	movl 0x34(%rbp),%r15d
	cmpl 0x30(%rbp),%r15d
	jnl L_429599
L_134332:
	movslq %r15d,%r14
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0xF0(%rbp)
L_134333:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_134334
L_134336:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1092,%r15
	je L_429595
	cmpq $0x1094,%r15
	je L_429594
L_134334:
	movq $0x218B,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq 0xF0(%rbp),%rsp
	movq %rsp,0x0(%r8)
	movq 0x38(%rbp),%rsp
	movq %rsp,0x8(%r8)
	movq 0xC0(%rbp),%r9
	movq 0xC8(%rbp),%r10
	movq 0xD0(%rbp),%r11
	movq 0xD8(%rbp),%r13
	movq 0xE0(%rbp),%r14
	movq 0xE8(%rbp),%r15
.p2align 0x4,,0x7
L_134335:
	movq %r8,0x38(%rbp)
	movq %r9,0xC0(%rbp)
	movq %r10,0xC8(%rbp)
	movq %r11,0xD0(%rbp)
	movq %r13,0xD8(%rbp)
	movq %r14,0xE0(%rbp)
	movq %r15,0xE8(%rbp)
	incl 0x34(%rbp)
	jmp loop_1393
.p2align 0x4
L_429594:
L_134370:
	movq 0xF0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x100(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_134371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_429595:
L_134337:
	movq 0xF0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xF8(%rbp)
	cmpb $0x6,0x60(%rbp)
	je L_429596
L_134338:
	xorl %ecx,%ecx
L_134339:
	movl %ecx,0x110(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x158(%rbp)
	movb 0x60(%rbp),%r15b
	movb %r15b,0x160(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x108,%rbp
	leaq (L_134340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maybeSplit_0
.p2align 0x4
L_429596:
L_134366:
	movq 0xE0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	andq $0x1,%r14
	jz L_429597
L_134367:
	cmpq $0x1,%r15
	setg %cl
	movzbl %cl,%ecx
	jmp L_134339
.p2align 0x4
L_429597:
L_134368:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_134369:
	cmpl $0x0,%eax
	setg %cl
	movzbl %cl,%ecx
	jmp L_134339
.p2align 0x4
L_429599:
L_134168:
	cmpb $0x6,0x60(%rbp)
	je L_429600
L_134169:
	xorl %ecx,%ecx
L_134170:
	movq 0xD0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movl %ecx,0xD8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x120(%rbp)
	movb 0x60(%rbp),%r15b
	movb %r15b,0x128(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_134171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maybeSplit_0
.p2align 0x4
L_429600:
L_134328:
	movq 0xE0(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	andq $0x1,%r13
	jz L_429601
L_134329:
	cmpq $0x1,%r14
	setg %cl
	movzbl %cl,%ecx
	jmp L_134170
.p2align 0x4
L_429601:
L_134330:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_134331:
	cmpl $0x0,%eax
	setg %cl
	movzbl %cl,%ecx
	jmp L_134170
.p2align 0x4
L_429602:
L_134375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_134376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134376
.p2align 0x4
.long 0x1CC2
L_134376:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_134167
.p2align 0x4
L_429603:
L_134377:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429604:
L_134164:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429605:
L_134410:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134411
L_134424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_134425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134425
.p2align 0x4
.long 0x1CC8
L_134425:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_134411:
	movq $0x2621,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0xE8(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_134412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134412
.p2align 0x4
.long 0x1CC5
L_134412:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0xC0(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1396:
	cmpq $0x1,%r15
	jnl L_429606
L_134423:
	movq 0xC0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xE0(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1396
.p2align 0x4
L_429606:
L_134413:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134414
L_134421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_134422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134422
.p2align 0x4
.long 0x1CC7
L_134422:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_134414:
	movq 0xC0(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2621,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xE8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_134415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_4
.p2align 0x4
L_429609:
L_134426:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0xE0(%rbp)
	cmpq %r15,%rdx
	jne L_134164
L_134428:
	testq %rdx,%rdx
	jz L_429628
L_134429:
	cmpq $0x7FFFFFFF,%rdx
	ja L_134453
L_134430:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15EF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_134431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134431
.p2align 0x4
.long 0x1CC9
L_134431:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq %rax,0xE8(%rbp)
L_134432:
	movl $0x0,0xAC(%rbp)
	movl $0x0,0xF0(%rbp)
	movq $0x0,0xF8(%rbp)
.p2align 0x4,,0x7
loop_1397:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429626
.p2align 0x4,,0x7
L_134433:
	movq 0xF8(%rbp),%r14
	cmpq 0xE0(%rbp),%r14
	jnl L_429615
L_134455:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0xC0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_134456:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_429614
L_134460:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1092,%r15
	jne L_429613
L_134461:
	movq 0x0(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE43,%r15
	jne L_429612
L_134462:
	movl 0xF0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_429610
L_134463:
	movl 0xAC(%rbp),%ecx
	movl $0x1,%ebx
	movq $0x1,%r13
	movq %r13,%r15
L_134459:
	movl %ecx,0xAC(%rbp)
	movl %ebx,0xF0(%rbp)
	movq 0xE8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xF8(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xF8(%rbp)
	jmp loop_1397
.p2align 0x4
L_429610:
	movq %r13,%r15
L_134457:
	movq $0x2655,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movl 0xAC(%rbp),%ecx
	incl %ecx
	jo L_134087
L_134458:
	movl 0xF0(%rbp),%ebx
	movq %r14,%r15
	jmp L_134459
.p2align 0x4
L_429612:
	movq %r13,%r15
	jmp L_134457
.p2align 0x4
L_429613:
	movq %r13,%r15
	jmp L_134457
.p2align 0x4
L_429614:
	movq %r13,%r15
	jmp L_134457
.p2align 0x4
L_429615:
L_134434:
	movq 0xE8(%rbp),%r15
	movq $0x1757,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0xAC(%rbp),%rdx
	movq %rdx,0xC0(%rbp)
	testq %rdx,%rdx
	jz L_429625
L_134435:
	cmpq $0x7FFFFFFF,%rdx
	ja L_429624
L_134436:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_134437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134437
.p2align 0x4
.long 0x1CCA
L_134437:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,%r15
L_134438:
	xorl %ecx,%ecx
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1398:
	cmpq 0xC0(%rbp),%r14
	jnl L_429619
.p2align 0x4,,0x7
loop_1399:
	movslq %ecx,%r13
	movq 0xE8(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_429617
L_134450:
	incl %ecx
	jo L_134087
L_134451:
	jmp loop_1399
.p2align 0x4
L_429617:
L_134448:
	movq 0x0(%r10),%r13
	incl %ecx
	jo L_134087
L_134449:
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_1398
.p2align 0x4
L_429619:
L_134439:
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0xF0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_429623
L_134441:
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429622
	cmpq $0x2,%r14
	je L_429621
L_134442:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1097,%r13
	je L_429620
L_134444:
	movq %r15,0x28(%rbp)
	movq 0x0(%rbp),%r15
	jmp add_0
.p2align 0x4
L_429620:
L_134443:
	movq %r15,0xC0(%rbp)
	movq 0xD0(%rbp),%r14
	movq 0x40(%r14),%r15
	jmp L_134139
.p2align 0x4
L_429621:
L_134446:
	movq %r15,0x28(%rbp)
	movq 0x0(%rbp),%r15
	jmp add_0
.p2align 0x4
L_429622:
L_134445:
	movq %r15,0x28(%rbp)
	jmp L_134162
.p2align 0x4
L_429623:
L_134440:
	movq (globalObjptr+0x74A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429624:
L_134453:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429625:
L_134454:
	movq (globalObjptr+0x7498)(%rip),%r15
	jmp L_134438
.p2align 0x4
L_429626:
L_134465:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_134466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134466
.p2align 0x4
.long 0x1CCB
L_134466:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	jmp L_134433
.p2align 0x4
L_429628:
L_134468:
	movq (globalObjptr+0x7490)(%rip),%r15
	movq %r15,0xE8(%rbp)
	jmp L_134432
.p2align 0x4
L_429630:
L_134469:
	cmpq $0x1,%r10
	je L_429633
	cmpq $0x2,%r10
	je L_429632
L_134470:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1097,%r15
	je L_429631
L_134472:
	movq 0x0(%rbp),%r15
	movq %r14,0x28(%rbp)
	jmp add_0
.p2align 0x4
L_429631:
L_134471:
	movq 0xD0(%rbp),%r13
	movq 0x40(%r13),%r15
	jmp L_134139
.p2align 0x4
L_429632:
L_134474:
	movq 0x0(%rbp),%r15
	movq %r14,0x28(%rbp)
	jmp add_0
.p2align 0x4
L_429633:
L_134473:
	movq %r14,0x28(%rbp)
	jmp L_134162
.p2align 0x4
L_429634:
L_134475:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429635:
L_134131:
	movq %r8,%r15
	movq %r10,(localObjptr+0x10)(%rip)
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_134132
.p2align 0x4
L_429637:
	movq %r10,(localObjptr+0x10)(%rip)
	movq %r9,(localObjptr+0x18)(%rip)
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_134086
.p2align 0x4
L_429638:
	movq %r10,(localObjptr+0x10)(%rip)
	movq %r9,(localObjptr+0x18)(%rip)
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_134086
.p2align 0x4
L_429639:
L_134477:
	xorl %ecx,%ecx
	jmp L_134091
.p2align 0x4
L_429640:
L_134081:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_134095:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_134096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1CA1
L_134160:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134161
L_134378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_134379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134379
.p2align 0x4
.long 0x1CC3
L_134379:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_134161:
	movq $0x1161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x25EB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_134162
.p2align 0x4
.long 0x1CA0
doit_25:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp doit_26
.p2align 0x4
.long 0x1CA0
L_134148:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r14d
	movl %r14d,0x28(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xC0(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp add_0
.p2align 0x4
.long 0x1CC0
L_134371:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134372
L_134373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_134374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134374
.p2align 0x4
.long 0x1CC1
L_134374:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_134372:
	movq $0x218B,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq 0xF0(%rbp),%rsp
	movq %rsp,0x0(%r8)
	movq 0x38(%rbp),%rsp
	movq %rsp,0x8(%r8)
	movq 0xC0(%rbp),%r9
	movq 0xC8(%rbp),%r10
	movq 0xD0(%rbp),%r11
	movq 0xD8(%rbp),%r13
	movq 0xE0(%rbp),%r14
	movq 0xE8(%rbp),%r15
	jmp L_134335
.p2align 0x4
.long 0x1CBB
L_134340:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134341
L_134364:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_134365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134365
.p2align 0x4
.long 0x1CBF
L_134365:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_134341:
	movq 0xF8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE42,%r14
	je L_429644
L_134362:
	movq 0x0(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x108,%rbp
	leaq (L_134363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1605
.p2align 0x4
L_429644:
L_134342:
	movq 0x0(%r15),%r10
	movq 0xC0(%rbp),%r9
	cmpq $0x1,%r9
	je L_429649
L_134343:
	movq 0x8(%r9),%r13
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10A2,%r14
	je L_429648
L_134360:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r11
	movq $0x2143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r9
	movq %r9,0x8(%r15)
	movl $0x1,%ecx
	movq %r15,%r14
	movq %r10,%r15
L_134345:
	movq 0x8(%r15),%r10
	cmpq %r10,0x8(%r11)
	jne L_429647
L_134347:
	movl %ecx,0xAC(%rbp)
	movq %r13,0xC0(%rbp)
	movq %r14,%r15
L_134348:
	cmpb $0x4,0x60(%rbp)
	jne L_134350
L_134358:
	movq 0xF8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE43,%r13
	jne L_429645
L_134359:
	movl 0xAC(%rbp),%ecx
L_134351:
	movl %ecx,0x108(%rbp)
	movq %r15,0x118(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq $0x1,0x130(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x150(%rbp)
	movb 0x60(%rbp),%r15b
	movb %r15b,0x158(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x100,%rbp
	leaq (L_134352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maybeSplit_0
.p2align 0x4
L_429645:
L_134350:
	xorl %ecx,%ecx
	jmp L_134351
.p2align 0x4
L_429647:
L_134346:
	movq (globalObjptr+0x74A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429648:
L_134344:
	movq 0x0(%r15),%r11
	movq 0xC8(%rbp),%r14
	xorl %ecx,%ecx
	movq %r10,%r15
	jmp L_134345
.p2align 0x4
L_429649:
L_134361:
	movq (globalObjptr+0x74B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1CA2
L_134171:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134172
L_134326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_134327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134327
.p2align 0x4
.long 0x1CBA
L_134327:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_134172:
	movq $0x36E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x14A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq $0x17,0x0(%r14)
	movq $0xE,0x10(%r14)
	movq %r14,0xD0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_134173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x1CC6
L_134415:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movq 0xD0(%rbp),%r13
	cmpq $0x1,%r13
	je L_429654
	cmpq $0x2,%r13
	je L_429653
L_134416:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1097,%r15
	je L_429652
L_134418:
	movq 0x0(%rbp),%r15
	movq %r14,0x28(%rbp)
	jmp add_0
.p2align 0x4
L_429652:
L_134417:
	movq 0xD0(%rbp),%r13
	movq 0x40(%r13),%r15
	jmp L_134139
.p2align 0x4
L_429653:
L_134420:
	movq 0x0(%rbp),%r15
	movq %r14,0x28(%rbp)
	jmp add_0
.p2align 0x4
L_429654:
L_134419:
	movq %r14,0x28(%rbp)
	jmp L_134162
.p2align 0x4
.long 0x1
L_134096:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_134097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1CBE
L_134363:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movl 0x108(%rbp),%r14d
	movl %r14d,0xAC(%rbp)
	movq 0x110(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movq 0xC8(%rbp),%r15
	jmp L_134348
.p2align 0x4
.long 0x1CBC
L_134352:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134353
L_134356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_134357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134357
.p2align 0x4
.long 0x1CBD
L_134357:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_134353:
	movl 0xAC(%rbp),%esp
	testl %esp,%esp
	jnz L_429655
L_134354:
	movq 0x38(%rbp),%r8
	movq 0xC0(%rbp),%r9
	movq 0xC8(%rbp),%r10
	movq 0xD0(%rbp),%r11
	movq 0xD8(%rbp),%r13
	movq $0x1,%r14
	movq 0xE0(%rbp),%r15
	jmp L_134335
.p2align 0x4
L_429655:
L_134355:
	movq $0x218B,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq 0xF0(%rbp),%rsp
	movq %rsp,0x0(%r8)
	movq 0x38(%rbp),%rsp
	movq %rsp,0x8(%r8)
	movq 0xC0(%rbp),%r9
	movq 0xC8(%rbp),%r10
	movq 0xD0(%rbp),%r11
	movq 0xD8(%rbp),%r13
	movq $0x1,%r14
	movq 0xE0(%rbp),%r15
	jmp L_134335
.p2align 0x4
.long 0x1CA3
L_134173:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134174
L_134324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_134325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134325
.p2align 0x4
.long 0x1CB9
L_134325:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_134174:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x109D,%r14
	je L_429665
L_134175:
	movq 0xC0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429664
L_134176:
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_134177:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429663
.p2align 0x4,,0x7
L_134178:
	movq $0x2149,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_429657
L_134179:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_134177
.p2align 0x4
L_429657:
L_134180:
	movq 0x50(%rbp),%r14
	movq %r14,0x40(%rbp)
L_134181:
	cmpq $0x1,%r15
	je L_429662
L_134182:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_134183:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429661
.p2align 0x4,,0x7
L_134184:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10A2,%r14
	je L_429659
L_134189:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_429658
L_134190:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_134183
.p2align 0x4
L_429658:
L_134191:
L_134188:
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp x_1606
.p2align 0x4
L_429659:
L_134185:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_429660
L_134186:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r13,0x50(%rbp)
	jmp L_134183
.p2align 0x4
L_429660:
L_134187:
	movq 0x58(%rbp),%r13
	xchgq %r13,%r15
	jmp L_134188
.p2align 0x4
L_429661:
L_134192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_134193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134193
.p2align 0x4
.long 0x1CA4
L_134193:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_134184
.p2align 0x4
L_429662:
L_134194:
	movq $0x1,%r15
	jmp L_134188
.p2align 0x4
L_429663:
L_134195:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_134196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134196
.p2align 0x4
.long 0x1CA4
L_134196:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_134178
.p2align 0x4
L_429664:
L_134197:
	movq %r15,0x40(%rbp)
	movq $0x1,%r15
	jmp L_134181
.p2align 0x4
L_429665:
L_134198:
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_134081
L_134199:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_429688
L_134200:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x58(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_134202:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_134203
L_134313:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD9E,%r13
	jne L_134203
L_134314:
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x88(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_429682
L_134203:
	movl 0x58(%rbp),%r13d
	incl %r13d
	movl %r13d,0x5C(%rbp)
	jo L_134087
L_134204:
	cmpq $0x1,%r15
	je L_429666
L_134205:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x58(%rbp)
	jmp L_134202
.p2align 0x4
L_429666:
L_134206:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134207
L_134311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_134312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134312
.p2align 0x4
.long 0x1CB7
L_134312:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_134207:
	movl 0x5C(%rbp),%ecx
L_134208:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_134092
L_134209:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_134211
L_134310:
	movl %ecx,0x0(%r15)
L_134211:
	movq $0xC99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xC99,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xCAD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r14,0x10(%r10)
	movq %r15,0x18(%r10)
	addq $0x28,%r12
	movq $0x1B3D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r10,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq %r10,0x50(%rbp)
L_134212:
	movq 0x50(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
L_134213:
	movq 0x10(%rbp),%r14
	andq $0x3,%r14
	jz L_429668
L_134214:
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x2629,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_429667
L_134215:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_134177
.p2align 0x4
L_429667:
L_134216:
	movq 0x8(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_134181
.p2align 0x4
L_429668:
L_134217:
	movq 0xC0(%rbp),%r14
	cmpq $0x1,%r14
	je L_134224
L_134218:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x10(%rbp)
	xchgq %r13,%r15
.p2align 0x4,,0x7
L_134219:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10A3,%r13
	je L_429674
L_134220:
	cmpq $0x1,%r15
	je L_429669
L_134221:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x10(%rbp)
	jmp L_134219
.p2align 0x4
L_429669:
L_134222:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134224
L_134301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_134302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134302
.p2align 0x4
.long 0x1CB5
L_134302:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_134224:
	movq 0x90(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2629,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movl 0x64(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_429671
L_134226:
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_429670
L_134227:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_134177
.p2align 0x4
L_429670:
L_134228:
	movq 0x8(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_134181
.p2align 0x4
L_429671:
L_134230:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_429672
L_134231:
	movq %r14,0xD8(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_134232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_429672:
L_134296:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_134297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_429674:
L_134303:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134304
L_134307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_134308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134308
.p2align 0x4
.long 0x1CB6
L_134308:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_134304:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x2143,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movl 0x64(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_134230
	jmp L_134226
.p2align 0x4
L_429682:
L_134316:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134317
L_134321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_134322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134322
.p2align 0x4
.long 0x1CB8
L_134322:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_134317:
	movl 0x58(%rbp),%r15d
	movslq %r15d,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_134092
L_134318:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %r15d,0x0(%r14)
	jl L_429683
L_134319:
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_134212
.p2align 0x4
L_429683:
L_134320:
	movq (globalObjptr+0x1078)(%rip),%r15
	movl 0x58(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_134212
.p2align 0x4
L_429688:
L_134323:
	xorl %ecx,%ecx
	jmp L_134208
.p2align 0x4
.long 0x4AF
L_134097:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_134098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1CA5
L_134232:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134233
L_134294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_134295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134295
.p2align 0x4
.long 0x1CB4
L_134295:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_134233:
	movq $0x37CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x5,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	movl $0x1,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_134234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x1
L_134297:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x5AF
L_134098:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_134099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1CA5
L_134234:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movb $0xB,%r15b
	movzbq %r15b,%r14
	shlq $0x3,%r14
	orq $0x2,%r14
	movq %r14,0xD0(%rbp)
	movl $0x1,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_134235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
.long 0x1
bug_407:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134298
L_134299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_134300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134300
.p2align 0x4
.long 0x451
L_134300:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_134298:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51E
L_134099:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134100
L_134123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_134124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134124
.p2align 0x4
.long 0x4AE
L_134124:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_134100:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_134101:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_134087
L_134102:
	cmpq $0x1,%r14
	je L_429693
L_134103:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_134101
.p2align 0x4
L_429693:
L_134104:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134105
L_134121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_134122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134122
.p2align 0x4
.long 0x4E6
L_134122:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_134105:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_429694
L_134106:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_228:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_429694:
L_134120:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_228
.p2align 0x4
.long 0x1CA6
L_134235:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134236
L_134292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_134293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134293
.p2align 0x4
.long 0x1CB3
L_134293:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_134236:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1243,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x1,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x0,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq (globalObjptr+0xF388)(%rip),%r13
	movq %r13,0x28(%r14)
	movq (globalObjptr+0xC68)(%rip),%r13
	movq %r13,0x30(%r14)
	movq %r15,0x38(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_134237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1
rev_226:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_429701
L_134107:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_134108:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429700
.p2align 0x4,,0x7
L_134109:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_429699
L_134110:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_134108
.p2align 0x4
L_429699:
L_134112:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_134113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_429700:
L_134117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_134118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134118
.p2align 0x4
.long 0x45B
L_134118:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_134109
.p2align 0x4
L_429701:
L_134119:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_134112
.p2align 0x4
.long 0x1CA7
L_134237:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134238
L_134290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_134291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134291
.p2align 0x4
.long 0x1CB2
L_134291:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_134238:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x40(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_429708
L_134239:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_134240:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429707
.p2align 0x4,,0x7
L_134241:
	movq $0x2149,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_429702
L_134242:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_134240
.p2align 0x4
L_429702:
L_134243:
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_134244:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429706
.p2align 0x4,,0x7
L_134245:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10A2,%r14
	je L_429704
L_134282:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_429703
L_134283:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_134244
.p2align 0x4
L_429703:
L_134284:
L_134249:
	movq %r15,0xD0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_134250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceSeqIndex_0
.p2align 0x4
L_429704:
L_134246:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_429705
L_134247:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x60(%rbp)
	jmp L_134244
.p2align 0x4
L_429705:
L_134248:
	movq 0x68(%rbp),%r13
	xchgq %r13,%r15
	jmp L_134249
.p2align 0x4
L_429706:
L_134285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_134286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134286
.p2align 0x4
.long 0x1CB1
L_134286:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_134245
.p2align 0x4
L_429707:
L_134287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_134288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134288
.p2align 0x4
.long 0x1CB1
L_134288:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_134241
.p2align 0x4
L_429708:
L_134289:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_134249
.p2align 0x4
.long 0x1
L_134113:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134114
L_134115:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_134116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134116
.p2align 0x4
.long 0x451
L_134116:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_134114:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1CA8
L_134250:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134251
L_134280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_134281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134281
.p2align 0x4
.long 0x1CB0
L_134281:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_134251:
	movq $0x1161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x25EB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movl 0xA8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_429715
L_134252:
	movq (globalObjptr+0xF48)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x40(%rbp)
L_134253:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134254
L_134263:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_134264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134264
.p2align 0x4
.long 0x1CAB
L_134264:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_134254:
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x212F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x0,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x1,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x28(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x30(%r14)
	movq (globalObjptr+0xC68)(%rip),%r13
	movq %r13,0x38(%r14)
	movq (globalObjptr+0xF388)(%rip),%r13
	movq %r13,0x40(%r14)
	movq $0x35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x18(%r13)
	addq $0x30,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r13)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r13)
	movq %r15,0x20(%r13)
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_134255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134255
.p2align 0x4
.long 0x1CA9
L_134255:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1394:
	cmpq $0x1,%r15
	jnl L_429711
L_134262:
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x2,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1394
.p2align 0x4
L_429711:
L_134256:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134257
L_134260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_134261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134261
.p2align 0x4
.long 0x1CAA
L_134261:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_134257:
	movq 0x40(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x213D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_429712
L_134258:
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_134177
.p2align 0x4
L_429712:
L_134259:
	movq %r14,0x40(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_134181
.p2align 0x4
L_429715:
L_134265:
	movq 0xB0(%rbp),%r15
	movq 0x18(%r15),%r14
	movb 0x4(%r15),%r13b
	movq 0x10(%r15),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r15),%r10
	movl 0x0(%r15),%r9d
	testl %r9d,%r9d
	jnz L_429717
L_134266:
	cmpb $0x1,%r13b
	jne L_429716
L_134268:
	movslq 0x40(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x80(%rbp)
	movq %r11,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_134269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_429716:
L_134267:
	movq (globalObjptr+0x7470)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429717:
L_134278:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq (globalObjptr+0x18A8)(%rip),%r13
	movl 0x0(%r13),%r10d
	movl %r10d,%r9d
	incl %r10d
	jo L_134087
L_134279:
	movl %r10d,0x0(%r13)
	movq $0xF8B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl %r9d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xF8D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movl 0x40(%rbp),%r13d
	movl %r13d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x0(%r14),%r13
	movq $0x2625,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x0(%r8)
	movq %r13,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r8,0x0(%r14)
	movq $0x2123,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r9d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
new1_21:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_134273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134273
.p2align 0x4
.long 0x1CAB
L_134273:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1395:
	cmpq $0x1,%r15
	jnl L_429718
L_134275:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1395
.p2align 0x4
L_429718:
L_134274:
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x40(%rbp)
	jmp L_134253
.p2align 0x4
.long 0x1CAC
L_134269:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0xD0(%rbp)
	movq $0x3,0xD8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_134270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1CAD
L_134270:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0xD0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_134271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1CAE
L_134271:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134272
L_134276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_134277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134277
.p2align 0x4
.long 0x1CAF
L_134277:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_134272:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x212B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalWord64+0x12A0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	jmp new1_21
.text
.p2align 0x4
.globl fromC_0
.hidden fromC_0
fromC_0:
L_134480:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_134481
L_134553:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_134554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134554
.p2align 0x4
.long 0x45F
L_134554:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_134481:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_429733
L_134484:
	movl $0x0,0x8(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1400:
	cmpl %ecx,%ebx
	jnl L_429723
L_134550:
	movl %ebx,%r14d
	incl %r14d
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_429722
L_134552:
	movq 0x0(%rbp),%r11
	movzbl 0x0(%r11,%r13,1),%r10d
	movl 0x8(%rbp),%r13d
	imull $0x1F,%r13d
	addl %r10d,%r13d
	movl %r13d,0x8(%rbp)
	movl %r14d,%ebx
	jmp loop_1400
.p2align 0x4
L_429722:
L_134491:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429723:
L_134485:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134486
L_134548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_134549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134549
.p2align 0x4
.long 0x659
L_134549:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_134486:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xAE0)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_429731
L_134488:
	movq %r14,0x0(%r13)
	movq 0x18(%rbp),%r13
	movl 0x0(%r13),%r11d
	andl 0x8(%rbp),%r11d
	cmpl $0x0,%r11d
	jl L_429730
L_134489:
	movslq %r11d,%r13
	movq %r13,0x28(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_134491
L_134492:
	movq 0x0(%r15,%r13,8),%r11
	movq %r11,0x30(%rbp)
	cmpq $0x1,%r11
	je L_134501
L_134493:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
.p2align 0x4,,0x7
L_134494:
	movq (globalObjptr+0xAE8)(%rip),%r13
	movq 0x0(%r13),%r11
	incq %r11
	jo L_429727
L_134496:
	movq %r11,0x0(%r13)
	movl 0x8(%rbp),%r13d
	cmpl %r13d,0x0(%r15)
	je L_429726
L_134497:
	cmpq $0x1,%r14
	je L_429724
L_134498:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r13,%r15
	jmp L_134494
.p2align 0x4
L_429724:
L_134499:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134501
L_134543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_134544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134544
.p2align 0x4
.long 0x1CD0
L_134544:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_134501:
	movq $0x1C83,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x58,%rbp
	leaq (L_134502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_429726:
L_134545:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429727:
L_134495:
	movq (globalObjptr+0xAF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429730:
L_134506:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429731:
L_134487:
	movq (globalObjptr+0xAF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429733:
L_134483:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1CCC
L_134502:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134503
L_134541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_134542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134542
.p2align 0x4
.long 0x1CCF
L_134542:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_134503:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0xC(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x40(%rbp),%r15
	cmpb $0x4,0x0(%r15)
	jne L_134505
L_134540:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_134505:
	movq $0xF97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x18B0)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_134506
L_134507:
	movl %r13d,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x2905,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x18,%r12
	movq 0x30(%rbp),%rdx
	movq %rdx,0x8(%r10)
	movq 0x28(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_134491
L_134509:
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r11,%r15,8)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_134483
L_134511:
	movl 0x0(%r14),%r15d
	imull $0x4,%r15d
	jo L_134506
L_134512:
	cmpl %r15d,%r10d
	jnl L_429746
L_134514:
	addl %r10d,%r10d
	jo L_134506
L_134515:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x28(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_429744
L_134516:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x837,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_134517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134517
.p2align 0x4
.long 0x1CCD
L_134517:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1401:
	cmpq 0x30(%rbp),%r15
	jnl L_429735
L_134538:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1401
.p2align 0x4
L_429735:
L_134518:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x2C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_134483
L_134520:
	cmpl $0x0,%r13d
	jl L_429742
L_134521:
	movl $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_1402:
	movl 0x48(%rbp),%r15d
	cmpl 0x2C(%rbp),%r15d
	jnl L_429741
L_134523:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_134532
L_134524:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
L_134525:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429739
.p2align 0x4,,0x7
L_134526:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x28(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_134506
L_134527:
	movslq %r14d,%r13
	cmpq 0x30(%rbp),%r13
	jnb L_134491
L_134529:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x2905,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_429736
L_134530:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_134525
.p2align 0x4
L_429736:
L_134532:
	incl 0x48(%rbp)
	jmp loop_1402
.p2align 0x4
L_429739:
L_134534:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_134535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134535
.p2align 0x4
.long 0x1CCE
L_134535:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_134526
.p2align 0x4
L_429741:
L_134522:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r14
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429742:
L_134537:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429744:
L_134539:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429746:
L_134513:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1605
.hidden x_1605
x_1605:
L_134555:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_134681
L_134556:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429757
L_134557:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x48(%r10),%r15
	movq 0x38(%r10),%r14
	movq 0x30(%r10),%r9
	movq 0x28(%r10),%r8
	movq %r8,0x28(%rbp)
	movq 0x20(%r10),%r8
	movq %r8,0x30(%rbp)
	movq 0x18(%r10),%r8
	movq %r8,0x38(%rbp)
	movq 0x10(%r10),%r8
	movq %r8,0x40(%rbp)
	movq 0x8(%r10),%r8
	movq %r8,0x48(%rbp)
	movq 0x0(%r10),%r8
	movq %r8,0x50(%rbp)
	movq $0x291B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x1759,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x58(%rbp)
	movq %r13,0x0(%r10)
	addq $0x10,%r12
	movq 0x8(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x68(%rbp)
	cmpq %r11,%r10
	je L_429756
L_134558:
	movq 0x8(%rbp),%r11
	cmpq $0x1,%r11
	je L_429755
L_134559:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq %r9,%r15
.p2align 0x4,,0x7
L_134560:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x10A3,%r11
	je L_429754
L_134561:
	cmpq $0x1,%r13
	je L_429753
L_134562:
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r13
	movq %r11,%r14
	jmp L_134560
.p2align 0x4
L_429753:
L_134564:
	movq %r15,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_134565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1607
.p2align 0x4
L_429754:
L_134612:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_134613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1607
.p2align 0x4
L_429755:
	movq %r9,%r15
	jmp L_134564
.p2align 0x4
L_429756:
L_134680:
	movq $0x2145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2149,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429757:
L_134681:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_134682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134682
.p2align 0x4
.long 0x6FE
L_134682:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_134557
.p2align 0x4
.long 0x1CD1
L_134565:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134566
L_134610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_134611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134611
.p2align 0x4
.long 0x1CD7
L_134611:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_134566:
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_429759
L_134567:
	movq $0x2145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2149,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429759:
L_134568:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_134592
L_134569:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x148C,%r13
	je L_429768
L_134593:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x30(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x30(%r13),%r15
	movq 0x28(%r13),%r14
	movq 0x20(%r13),%r10
	movq 0x18(%r13),%r9
	movq 0x10(%r13),%r8
	movq 0x8(%r13),%rsp
	movq 0x8(%r11),%rsi
	movq 0x0(%r13),%rdi
	cmpq %rsi,0x8(%rdi)
	je L_429767
L_134594:
	cmpq %rsi,0x8(%r8)
	je L_429766
L_134595:
	cmpq 0x8(%r10),%rsi
	je L_429760
L_134596:
	movq %r15,0x70(%rbp)
	leaq L_134602(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r11,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_134597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceInfoNode_0
.p2align 0x4
L_429760:
L_134606:
	movq %r14,%r15
L_134599:
	movq $0x2919,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
L_134571:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x2143,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
yes_3:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_429765
L_134572:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x148C,%r13
	je L_429764
L_134575:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x28(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x30(%r13),%r15
	movq 0x28(%r13),%r14
	movq 0x20(%r13),%r10
	movq 0x18(%r13),%r9
	movq 0x10(%r13),%r8
	movq 0x8(%r13),%rsp
	movq 0x8(%r11),%rsi
	movq 0x0(%r13),%rdi
	cmpq 0x8(%rdi),%rsi
	je L_429763
L_134576:
	cmpq 0x8(%r8),%rsi
	je L_429762
L_134577:
	cmpq 0x8(%r10),%rsi
	je L_429761
L_134578:
	movq %r15,0x70(%rbp)
	leaq L_134584(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r11,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_134579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceInfoNode_0
.p2align 0x4
L_429761:
L_134588:
	movq %r14,%r15
L_134581:
	movq $0x2919,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
L_134574:
	movq $0x2147,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2149,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429762:
L_134589:
	movq %r9,%r15
	jmp L_134581
.p2align 0x4
L_429763:
L_134590:
	movq %rsp,%r15
	jmp L_134581
.p2align 0x4
L_429764:
L_134573:
	movq 0x0(%r14),%r14
	xchgq %r14,%r15
	jmp L_134574
.p2align 0x4
L_429765:
L_134592:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429766:
L_134607:
	movq %r9,%r15
	jmp L_134599
.p2align 0x4
L_429767:
L_134608:
	movq %rsp,%r15
	jmp L_134599
.p2align 0x4
L_429768:
L_134570:
	movq 0x0(%r14),%r14
	xchgq %r14,%r15
	jmp L_134571
.p2align 0x4
.long 0x660
L_134613:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134614
L_134677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_134678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134678
.p2align 0x4
.long 0x1CE1
L_134678:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_134614:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jz no_7
L_134616:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	cmpq 0x68(%rbp),%r14
	je L_429771
L_134617:
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_134618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1607
.p2align 0x4
L_429771:
L_134623:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_134592
L_134624:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x148C,%r13
	je L_429779
L_134647:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x30(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x30(%r13),%r15
	movq 0x28(%r13),%r14
	movq 0x20(%r13),%r10
	movq 0x18(%r13),%r9
	movq 0x10(%r13),%r8
	movq 0x8(%r13),%rsp
	movq 0x8(%r11),%rsi
	movq 0x0(%r13),%rdi
	cmpq %rsi,0x8(%rdi)
	je L_429778
L_134648:
	cmpq %rsi,0x8(%r8)
	je L_429777
L_134649:
	cmpq 0x8(%r10),%rsi
	je L_429772
L_134650:
	movq %r15,0x70(%rbp)
	leaq L_134656(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r11,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_134651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceInfoNode_0
.p2align 0x4
L_429772:
L_134660:
	movq %r14,%r15
L_134653:
	movq $0x2919,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_134626:
	movq 0x50(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r14
	movq 0x10(%rbp),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x30(%rbp)
	movq 0x28(%rbp),%r9
	movq 0x10(%r9),%rsp
	movq 0x8(%rsp),%rsi
	movq 0x10(%r10),%r9
	cmpq 0x8(%r9),%rsi
	je yes_3
L_134627:
	cmpq 0x8(%r15),%rsi
	je yes_3
L_134628:
	cmpq 0x8(%r14),%rsi
	je yes_3
L_134629:
	movq 0x0(%r8),%r11
	cmpq $0x1,%r11
	je L_134636
L_134630:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movq %rsi,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_134631:
	movq 0x10(%r13),%r11
	cmpq 0x8(%r11),%r15
	je L_429775
L_134632:
	cmpq $0x1,%r14
	je L_429773
L_134633:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	jmp L_134631
.p2align 0x4
L_429773:
L_134634:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134636
L_134637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_134638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134638
.p2align 0x4
.long 0x1CD9
L_134638:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_134636:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2143,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp yes_3
.p2align 0x4
L_429775:
L_134639:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb yes_3
L_134641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_134642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134642
.p2align 0x4
.long 0x1CDA
L_134642:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp yes_3
.p2align 0x4
L_429777:
L_134661:
	movq %r9,%r15
	jmp L_134653
.p2align 0x4
L_429778:
L_134662:
	movq %rsp,%r15
	jmp L_134653
.p2align 0x4
L_429779:
L_134625:
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	jmp L_134626
.p2align 0x4
no_7:
no_2:
	movq $0x2145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2149,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1CD5
L_134597:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134598
L_134600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_134601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134601
.p2align 0x4
.long 0x1CD6
L_134601:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_134598:
	movq 0x38(%rbp),%r15
	jmp L_134599
.p2align 0x4
.long 0x48A
L_134602:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134603
L_134604:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_134605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134605
.p2align 0x4
.long 0x1CD4
L_134605:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_134603:
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1CD2
L_134579:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134580
L_134582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_134583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134583
.p2align 0x4
.long 0x1CD3
L_134583:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_134580:
	movq 0x30(%rbp),%r15
	jmp L_134581
.p2align 0x4
.long 0x48A
L_134584:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134585
L_134586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_134587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134587
.p2align 0x4
.long 0x1CD4
L_134587:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_134585:
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1CD8
L_134618:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134619
L_134674:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_134675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134675
.p2align 0x4
.long 0x1CE0
L_134675:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_134619:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz no_2
L_134621:
	movq 0x38(%rbp),%r15
	movq 0x60(%rbp),%r14
	cmpq %r14,0x8(%r15)
	je no_2
L_134622:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE41,%r13
	jne L_134623
L_134664:
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_134665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1607
.p2align 0x4
.long 0x1CDB
L_134651:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134652
L_134654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_134655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134655
.p2align 0x4
.long 0x1CDC
L_134655:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_134652:
	movq 0x38(%rbp),%r15
	jmp L_134653
.p2align 0x4
.long 0x48A
L_134656:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134657
L_134658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_134659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134659
.p2align 0x4
.long 0x1CDD
L_134659:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_134657:
	movq $0x291B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1CDE
L_134665:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134666
L_134671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_134672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134672
.p2align 0x4
.long 0x1CDF
L_134672:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_134666:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz no_2
L_134668:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq %r14,0x70(%rbp)
	je no_2
	jmp L_134623
.text
.p2align 0x4
.globl x_1607
.hidden x_1607
x_1607:
loopS_15:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_134683
L_134744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_134745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134745
.p2align 0x4
.long 0x45F
L_134745:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_134683:
	movq 0x8(%rbp),%r15
.p2align 0x4,,0x7
loop_1403:
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1EA7,%r15
	je L_429792
	cmpq $0x1EA8,%r15
	je L_429791
L_134684:
	movq 0x8(%r14),%r15
	cmpb $0x4,0x0(%r14)
	je loop_1403
L_134686:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429791:
L_134718:
	movq 0x10(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_134719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1607
.p2align 0x4
L_429792:
L_134688:
	movq 0x10(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%rbp),%r14
	movq 0x10(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE40,%r14
	jne L_429794
L_134689:
	movq 0x8(%r11),%r14
	cmpq $0x1,%r14
	je L_134686
L_134690:
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_134691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_429794:
L_134709:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_429797
L_134710:
	movq 0x8(%r14),%r14
	xorl %ecx,%ecx
	movq %r14,%r15
.p2align 0x4,,0x7
L_134711:
	incl %ecx
	jo L_429796
L_134713:
	cmpq $0x1,%r15
	je L_429795
L_134714:
	movq 0x8(%r15),%r15
	jmp L_134711
.p2align 0x4
L_429795:
L_134715:
L_134716:
	cmpl $0x0,%ecx
	setg %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429796:
L_134712:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429797:
L_134717:
	xorl %ecx,%ecx
	jmp L_134716
.p2align 0x4
.long 0x51E
L_134719:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x18(%rbp)
	jz L_134721
L_134722:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE40,%r15
	jne L_134721
L_134723:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_429799
L_134724:
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_134725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_429799:
L_134721:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x521
L_134691:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_429804
L_134692:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_134693:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429803
.p2align 0x4,,0x7
L_134694:
	movq $0x1BB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_429802
L_134695:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_134693
.p2align 0x4
L_429802:
L_134696:
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movl $0x1,0x20(%rbp)
L_134697:
	movl 0x0(%r15),%r14d
	movl %r14d,0x24(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_134698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1608
.p2align 0x4
L_429803:
L_134705:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_134706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134706
.p2align 0x4
.long 0x51F
L_134706:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_134694
.p2align 0x4
L_429804:
L_134707:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x521
L_134725:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_429807
L_134726:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_134727:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429806
.p2align 0x4,,0x7
L_134728:
	movq $0x1BA7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_429805
L_134729:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_134727
.p2align 0x4
L_429805:
L_134730:
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movl $0x0,0x20(%rbp)
L_134731:
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_134732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1608
.p2align 0x4
L_429806:
L_134739:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_134740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134740
.p2align 0x4
.long 0x51F
L_134740:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_134728
.p2align 0x4
L_429807:
L_134741:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x609
L_134698:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r14d
	movl %r14d,0x28(%rbp)
	testl %r14d,%r14d
	jnz L_429809
L_134699:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_429808
L_134700:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_134697
.p2align 0x4
L_429808:
L_134701:
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429809:
L_134702:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_429810
L_134703:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movl 0x24(%rbp),%r14d
	movl %r14d,0x20(%rbp)
	jmp L_134697
.p2align 0x4
L_429810:
L_134704:
	movl 0x24(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x609
L_134732:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r14d
	movl %r14d,0x24(%rbp)
	testl %r14d,%r14d
	jnz L_429812
L_134733:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_429811
L_134734:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_134731
.p2align 0x4
L_429811:
L_134735:
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429812:
L_134736:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_429813
L_134737:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movl $0x1,0x20(%rbp)
	jmp L_134731
.p2align 0x4
L_429813:
L_134738:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1608
.hidden x_1608
x_1608:
L_134746:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_134747
L_134907:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_134908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134908
.p2align 0x4
.long 0x45F
L_134908:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_134747:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x40(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x38(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movl 0x0(%r14),%r11d
	movl %r11d,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x58(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x54(%rbp)
	movslq %r15d,%r11
	cmpq %r14,%r11
	jne L_134749
L_134750:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x8(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_134749
L_134752:
	cmpl $0x0,%r14d
	jl L_134812
L_134753:
	movl $0x0,0xC(%rbp)
.p2align 0x4,,0x7
loop_1404:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429879
.p2align 0x4,,0x7
L_134754:
	movl 0xC(%rbp),%r15d
	cmpl 0x8(%rbp),%r15d
	jnl L_429817
L_134896:
	movslq %r15d,%r14
	movq 0x48(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_429816
L_134898:
	testl %r11d,%r11d
	jz L_429815
L_134899:
	movq $0x12F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1B8F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq %r13,%r15
L_134900:
	movq 0x18(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_429814
L_134902:
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13,%r14,8)
	incl 0xC(%rbp)
	jmp loop_1404
.p2align 0x4
L_429814:
L_134758:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429815:
L_134903:
	movq $0x1,%r15
	jmp L_134900
.p2align 0x4
L_429816:
L_134749:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429817:
L_134755:
	movq $0x1,0x8(%rbp)
	movl 0x50(%rbp),%r14d
	movl %r14d,0x48(%rbp)
	movl $0x0,0x4C(%rbp)
.p2align 0x4,,0x7
loop_1405:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429878
.p2align 0x4,,0x7
L_134756:
	movslq 0x48(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_134758
L_134759:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_134769
L_134760:
	movl 0x4(%r13),%r14d
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	testl %r10d,%r10d
	jz L_429875
L_134890:
	movl 0x54(%rbp),%r13d
	cmpl %r13d,0x4C(%rbp)
	jnl L_429871
L_134892:
	movq $0x1,0x8(%rbp)
L_134769:
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_134758
L_134771:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_134814
L_134772:
	movl 0x4C(%rbp),%r14d
	cmpl %r14d,0x54(%rbp)
	je L_429835
L_134773:
	movslq %r14d,%r13
	cmpq 0x58(%rbp),%r13
	jnb L_134758
L_134775:
	movq 0x0(%rbp),%r14
	movzbq 0x0(%r14,%r13,1),%r11
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	jnb L_134758
L_134777:
	movslq 0x0(%r14,%r11,4),%r13
	movq 0x28(%rbp),%r14
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r10
	cmpq 0x0(%r14),%r15
	jnb L_134758
L_134779:
	cmpq %r10,%r13
	jnb L_134758
L_134781:
	imulq %r10,%r15
	addq %r15,%r13
	movq %r13,%r15
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r14
	movq %r14,0x60(%rbp)
	salq $0x4,%r13
	movl 0x0(%r11,%r13,1),%r15d
	movl %r15d,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_134749
L_134783:
	cmpl $0x0,%r13d
	jl L_429829
L_134784:
	movl $0x0,0x68(%rbp)
loop_1406:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429828
.p2align 0x4,,0x7
L_134785:
	movl 0x50(%rbp),%r15d
	cmpl %r15d,0x68(%rbp)
	jl L_429819
L_134786:
	movl 0x4C(%rbp),%r15d
	incl %r15d
	jo L_429818
L_134788:
	movl %r15d,0x4C(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp loop_1405
.p2align 0x4
L_429818:
L_134787:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429819:
L_134789:
	movslq 0x68(%rbp),%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xDC8,%r15
	je L_429824
L_134799:
	movl 0x4(%r13),%ecx
	movq 0x8(%r13),%r15
	movslq 0x0(%r13),%r14
	movq 0x18(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_134758
L_134801:
	movq 0x0(%r13,%r14,8),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r10,%r14
	jne L_134749
L_134803:
	testl %r13d,%r13d
	jz L_429821
L_134804:
	movq $0x12F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1B8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
L_134805:
	movslq %ecx,%r14
	movq 0x10(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_134758
L_134807:
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13,%r14,8)
L_134797:
	incl 0x68(%rbp)
	jmp loop_1406
.p2align 0x4
L_429821:
	movq %r11,%r15
	jmp L_134805
.p2align 0x4
L_429824:
L_134790:
	movl 0x0(%r13),%ebx
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_134749
L_134792:
	testl %r13d,%r13d
	jz L_429826
L_134793:
	movq $0x12F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1B8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
L_134794:
	movslq %ebx,%r14
	movq 0x10(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_134758
L_134796:
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13,%r14,8)
	jmp L_134797
.p2align 0x4
L_429826:
L_134798:
	movq $0x1,%r15
	jmp L_134794
.p2align 0x4
L_429828:
L_134809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_134810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134810
.p2align 0x4
.long 0x1CE2
L_134810:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_134785
.p2align 0x4
L_429829:
L_134812:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429835:
L_134814:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_134847
L_134815:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl %r14d,%ecx
	movslq %ecx,%r15
	movq %r15,0x30(%rbp)
	cmpq %r15,%r14
	jne L_134749
L_134817:
	cmpl $0x0,%ecx
	jl L_134812
L_134818:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1407:
	cmpl %ecx,%ebx
	jnl L_429836
L_134885:
	movslq %ebx,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movl %ebx,0x0(%r13)
	incl %ebx
	jmp loop_1407
.p2align 0x4
L_429836:
L_134819:
	movq 0x30(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_134856
L_134820:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_134821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134821
.p2align 0x4
.long 0x1CE3
L_134821:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1408:
	cmpq 0x30(%rbp),%r15
	jnl L_429837
L_134883:
	movq 0x20(%rbp),%r14
	movl $0xFFFFFFFF,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_1408
.p2align 0x4
L_429837:
L_134822:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x175B,%rcx
	movq 0x30(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_134823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134823
.p2align 0x4
.long 0x1CE4
L_134823:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1409:
	cmpq 0x30(%rbp),%r15
	jnl L_429838
L_134882:
	movq 0x38(%rbp),%r14
	movb $0x1,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1409
.p2align 0x4
L_429838:
L_134824:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_134837
L_134825:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_134826:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429863
.p2align 0x4,,0x7
L_134827:
	movq $0x1B8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_429839
L_134828:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_134826
.p2align 0x4
L_429839:
L_134829:
	movq 0x60(%rbp),%r13
	movq 0x48(%rbp),%r15
	xchgq %r13,%r14
.p2align 0x4,,0x7
L_134830:
	movq 0x8(%r15),%r13
	movl 0x0(%r15),%r11d
	movl %r11d,(localWord32+0x0)(%rip)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%ecx
	movslq %ecx,%r15
	cmpq %r11,%r15
	jne L_134749
L_134832:
	cmpl $0x0,%ecx
	jl L_134812
L_134833:
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_1410:
	cmpl %ecx,%ebx
	jnl L_429846
L_134865:
	movslq %ebx,%r13
	movq 0x0(%r15,%r13,8),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xDC5,%r13
	je L_429844
L_134870:
	movq 0x0(%r11),%r13
	movslq 0x0(%r13),%r10
	cmpq 0x30(%rbp),%r10
	jnb L_134758
L_134872:
	movq 0x20(%rbp),%r13
	movl 0x0(%r13,%r10,4),%r11d
	movl (localWord32+0x0)(%rip),%r13d
	subl %r11d,%r13d
	jo L_134787
L_134873:
	movslq %r11d,%r9
	movslq %r13d,%r11
	movq 0x58(%rbp),%r13
	cmpq %r9,%r13
	jb L_134758
L_134874:
	subq %r9,%r13
	cmpq %r11,%r13
	jb L_134758
L_134875:
	movq 0x38(%rbp),%r13
	movb $0x0,0x0(%r13,%r10,1)
	movq %r14,(localObjptr+0x0)(%rip)
L_134869:
	incl %ebx
	movq (localObjptr+0x0)(%rip),%r14
	jmp loop_1410
.p2align 0x4
L_429844:
L_134866:
	movq 0x0(%r11),%r13
	movslq 0x0(%r13),%r10
	cmpq 0x30(%rbp),%r10
	jnb L_134758
L_134868:
	movq 0x20(%rbp),%r13
	movl (localWord32+0x0)(%rip),%r11d
	movl %r11d,0x0(%r13,%r10,4)
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_134869
.p2align 0x4
L_429846:
L_134834:
	cmpq $0x1,%r14
	je L_429847
L_134835:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_134830
.p2align 0x4
L_429847:
L_134837:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %rdx,%r15
	jne L_134749
L_134839:
	cmpq $0x7FFFFFFF,%rdx
	ja L_134856
L_134840:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x175D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_134841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134841
.p2align 0x4
.long 0x1CE5
L_134841:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	xorl %ecx,%ecx
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1411:
	cmpq 0x20(%rbp),%r15
	jnl L_429851
L_134857:
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq 0x38(%rbp),%r10
	movb 0x0(%r10,%r11,1),%r13b
	testb %r13b,%r13b
	jnz L_429850
L_134858:
	cmpq 0x28(%rbp),%r11
	jnb L_134758
L_134860:
	incl %ecx
	jo L_134787
L_134861:
	movl %ecx,(localWord32+0x0)(%rip)
	xorb %dl,%dl
L_134862:
	movb %dl,0x0(%r14,%r15,1)
	incq %r15
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_1411
.p2align 0x4
L_429850:
L_134863:
	movb $0x1,%dl
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_134862
.p2align 0x4
L_429851:
L_134842:
	movslq %ecx,%r15
	cmpq $0x7FFFFFFF,%r15
	ja L_429858
L_134843:
	xorl %ecx,%ecx
	xorq %r13,%r13
.p2align 0x4,,0x7
loop_1412:
	cmpq %r15,%r13
	jnl L_429855
.p2align 0x4,,0x7
loop_1413:
	movslq %ecx,%r11
	movb 0x0(%r14,%r11,1),%r10b
	testb %r10b,%r10b
	jz L_429853
L_134853:
	incl %ecx
	jo L_134787
L_134854:
	jmp loop_1413
.p2align 0x4
L_429853:
L_134851:
	incl %ecx
	jo L_134787
L_134852:
	incq %r13
	jmp loop_1412
.p2align 0x4
L_429855:
L_134844:
	movl 0x18(%rbp),%r15d
	movslq %r15d,%r14
	cmpq %r14,0x58(%rbp)
	jb L_134758
L_134845:
	cmpl %r15d,0x54(%rbp)
	jne L_429856
L_134848:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429856:
L_134847:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429858:
L_134856:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429863:
L_134879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_134880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134880
.p2align 0x4
.long 0x1CE6
L_134880:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_134827
.p2align 0x4
L_429871:
	movl %r14d,%ecx
	movq %r11,%r14
L_134762:
	movslq %ecx,%r13
	movq 0x18(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	jnb L_134758
L_134764:
	movq 0x0(%r11,%r13,8),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r9
	cmpq %r13,%r9
	jne L_134749
L_134766:
	testl %r11d,%r11d
	jz L_429872
L_134767:
	movq $0x12F5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl 0x4C(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1B8F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r10,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r13
L_134768:
	movq $0x1B95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movl 0x4C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x8(%rbp)
	jmp L_134769
.p2align 0x4
L_429872:
	movq %r10,%r13
	jmp L_134768
.p2align 0x4
L_429875:
	movl %r14d,%ecx
	movq %r11,%r14
	jmp L_134762
.p2align 0x4
L_429878:
L_134894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_134895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134895
.p2align 0x4
.long 0x8A2
L_134895:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_134756
.p2align 0x4
L_429879:
L_134904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_134905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134905
.p2align 0x4
.long 0x1CE7
L_134905:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_134754
.text
.p2align 0x4
.globl sourceInfoNode_0
.hidden sourceInfoNode_0
sourceInfoNode_0:
L_134909:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_134910
L_134964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_134965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134965
.p2align 0x4
.long 0x45F
L_134965:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_134910:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_134911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
.long 0x1337
L_134911:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134912
L_134962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_134963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134963
.p2align 0x4
.long 0x1A1F
L_134963:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_134912:
	movq 0x8(%rbp),%r15
	andq $0x1,%r15
	jnz L_429889
L_134913:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE40,%r15
	je L_429885
L_134960:
	movq 0x0(%r14),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x1590)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE2A0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_134933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_429885:
L_134914:
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_429888
L_134915:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_134916:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429887
.p2align 0x4,,0x7
L_134917:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_429886
L_134918:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_134916
.p2align 0x4
L_429886:
L_134919:
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_134920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_429887:
L_134957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_134958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134958
.p2align 0x4
.long 0x804
L_134958:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_134917
.p2align 0x4
L_429888:
L_134959:
	movq $0x1,%r15
L_134922:
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_134923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_429889:
L_134961:
	movq 0x8(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
L_134937:
	movq 0x38(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_429890
L_134938:
	movl %r14d,0x0(%r15)
	movq $0xC99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xC9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movl %ecx,0x4(%r14)
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x2143,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429890:
L_134935:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1CEB
L_134933:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134934
L_134939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_134940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134940
.p2align 0x4
.long 0x5A2
L_134940:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_134934:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%ecx
	movl %ecx,%r14d
	incl %ecx
	jo L_134935
L_134936:
	movl %ecx,0x0(%r15)
	movq $0x1955,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r9,0x0(%r13)
	movl %r14d,%ecx
	jmp L_134937
.p2align 0x4
.long 0x1CE8
L_134920:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134921
L_134955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_134956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134956
.p2align 0x4
.long 0x809
L_134956:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_134921:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_134922
.p2align 0x4
.long 0x7EF
L_134923:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134924
L_134953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_134954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134954
.p2align 0x4
.long 0x61D
L_134954:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_134924:
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x58(%rbp)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_429896
L_134925:
	cmpb $0x5,0x0(%r14)
	je L_429895
L_134926:
	movq %r11,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_134927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_429895:
L_134945:
	movq 0x8(%r13),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x18(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x58(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x5C(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_134946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_429896:
L_134952:
	movq (globalObjptr+0xE448)(%rip),%r14
	xchgq %r14,%r15
L_134932:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_134933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1CE9
L_134927:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_134928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1CED
L_134946:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_134947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x60D
L_134928:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134929
L_134943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_134944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134944
.p2align 0x4
.long 0x61D
L_134944:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_134929:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_134930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1CEE
L_134947:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x5C(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_134948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1CEA
L_134930:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134931
L_134941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_134942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134942
.p2align 0x4
.long 0x1CEC
L_134942:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_134931:
	movq 0x8(%rbp),%r15
	jmp L_134932
.p2align 0x4
.long 0x1CEF
L_134948:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134949
L_134950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_134951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_134951
.p2align 0x4
.long 0x1CF0
L_134951:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_134949:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_134930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
