/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:08:43 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl toString_538
.hidden toString_538
toString_538:
L_18482:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_18483
L_18521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18522
.p2align 0x4
.long 0x45F
L_18522:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_18483:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_380365
L_18485:
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_380350
L_18486:
	movq %r11,%r15
L_18487:
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_18488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_380350:
L_18489:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movl %r13d,(localWord32+0x0)(%rip)
	cmpq %r14,%r15
	jne L_380364
L_18491:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
	movq %r11,%r15
.p2align 0x4,,0x7
loop_260:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_380353
L_18517:
	movl %ebx,%r13d
	incl %r13d
	movslq %ebx,%r11
	cmpq %r14,%r11
	jnb L_380352
L_18519:
	incl %ecx
	jo L_380351
L_18520:
	movl %r13d,%ebx
	jmp loop_260
.p2align 0x4
L_380351:
L_18501:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380352:
L_18495:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380353:
L_18492:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_261:
	cmpl %ebx,%ecx
	je L_18487
L_18493:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_18495
L_18496:
	movb 0x0(%r15,%r13,1),%dl
	cmpb $0x41,%dl
	jb L_380359
L_18497:
	cmpb $0x61,%dl
	jb L_380357
L_18498:
	cmpb $0x7A,%dl
	jna L_18500
L_18504:
	cmpb $0x5F,%dl
	jne L_380355
L_18500:
	incl %ebx
	jo L_18501
L_18502:
	jmp loop_261
.p2align 0x4
L_380355:
L_18505:
	movq %r15,0x28(%rbp)
	movq $0x6,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_18506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1211
.p2align 0x4
L_380357:
L_18508:
	cmpb $0x5A,%dl
	jna L_18500
	jmp L_18504
.p2align 0x4
L_380359:
L_18511:
	cmpb $0x30,%dl
	jb L_18504
L_18512:
	cmpb $0x39,%dl
	jna L_18500
	jmp L_18504
.p2align 0x4
L_380364:
L_18490:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380365:
L_18484:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_18488:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_18506:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_18487
.text
.p2align 0x4
.globl unique_0
.hidden unique_0
unique_0:
L_18523:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_18524
L_18607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18608
.p2align 0x4
.long 0x45F
L_18608:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_18524:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r14
	jne L_18526
L_18527:
	movl $0x0,0x8(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_262:
	cmpl %ecx,%ebx
	jnl L_380368
L_18604:
	movl %ebx,%r15d
	incl %r15d
	movslq %ebx,%r14
	cmpq 0x28(%rbp),%r14
	jnb L_380367
L_18606:
	movq 0x0(%rbp),%r13
	movzbl 0x0(%r13,%r14,1),%r11d
	movl 0x8(%rbp),%r14d
	imull $0x1F,%r14d
	addl %r11d,%r14d
	movl %r14d,0x8(%rbp)
	movl %r15d,%ebx
	jmp loop_262
.p2align 0x4
L_380367:
L_18534:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380368:
L_18528:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18529
L_18602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18603
.p2align 0x4
.long 0x5DE
L_18603:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18529:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xAE0)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_380398
L_18531:
	movq %r14,0x0(%r13)
	movq 0x18(%rbp),%r13
	movl 0x0(%r13),%r11d
	andl 0x8(%rbp),%r11d
	cmpl $0x0,%r11d
	jl L_18546
L_18532:
	movslq %r11d,%r13
	movq %r13,0x30(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_18534
L_18535:
	movq 0x0(%r15,%r13,8),%r11
	movq %r11,0x38(%rbp)
	cmpq $0x1,%r11
	je L_18545
L_18536:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
.p2align 0x4,,0x7
L_18537:
	movq (globalObjptr+0xAE8)(%rip),%r10
	movq 0x0(%r10),%r13
	incq %r13
	jo L_380394
L_18539:
	movq %r13,0x0(%r10)
	movq 0x8(%r15),%r13
	cmpq %r13,0x0(%rbp)
	je L_18598
L_18540:
	movq 0x28(%rbp),%r10
	cmpq %r10,0xFFFFFFFFFFFFFFF0(%r13)
	jne L_380390
L_18588:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_94:
	cmpq %r11,0x28(%rbp)
	je L_380389
L_18589:
	movq 0x0(%rbp),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r13,%r11,1)
	jne L_380369
L_18596:
	incq %r11
	jmp vectorEqualLoop_94
.p2align 0x4
L_380369:
L_18590:
	cmpq $0x1,%r14
	je L_380370
L_18591:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_18537
.p2align 0x4
L_380370:
L_18592:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18545
L_18594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_18595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18595
.p2align 0x4
.long 0x5DD
L_18595:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_18545:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xFA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movl 0x8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x1660)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_18546
L_18547:
	movl %r13d,0x0(%r15)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28F7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r10)
	movq 0x30(%rbp),%rdx
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%rdx
	jnb L_18534
L_18549:
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r14,1)
	movq %r10,0x0(%r11,%rdx,8)
	movq 0x0(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_18526
L_18551:
	movl 0x0(%r15),%r14d
	imull $0x4,%r14d
	jo L_18546
L_18552:
	cmpl %r14d,%r10d
	jnl L_380383
L_18560:
	addl %r10d,%r10d
	jo L_18546
L_18561:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x8(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_380381
L_18562:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x61,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_18563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18563
.p2align 0x4
.long 0x5DB
L_18563:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_263:
	cmpq 0x30(%rbp),%r15
	jnl L_380371
L_18584:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_263
.p2align 0x4
L_380371:
L_18564:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0xC(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_380380
L_18566:
	cmpl $0x0,%r13d
	jl L_380379
L_18567:
	movl $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_264:
	movl 0x48(%rbp),%r15d
	cmpl 0xC(%rbp),%r15d
	jnl L_380377
L_18569:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_18578
L_18570:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
L_18571:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380375
.p2align 0x4,,0x7
L_18572:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x8(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_380374
L_18573:
	movslq %r14d,%r13
	cmpq 0x30(%rbp),%r13
	jnb L_18534
L_18575:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x28F7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_380372
L_18576:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_18571
.p2align 0x4
L_380372:
L_18578:
	incl 0x48(%rbp)
	jmp loop_264
.p2align 0x4
L_380374:
L_18546:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380375:
L_18580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_18581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18581
.p2align 0x4
.long 0x5DC
L_18581:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_18572
.p2align 0x4
L_380377:
L_18568:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r14
	movl 0x8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r14
	movq %r14,%r15
L_18554:
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_18546
L_18555:
	movl %r14d,0x0(%r15)
	movl %r13d,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_18556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_380379:
L_18583:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380380:
L_18526:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380381:
L_18585:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380383:
L_18553:
	movq 0x28(%rbp),%r15
	jmp L_18554
.p2align 0x4
L_380389:
L_18598:
	movq 0x10(%r15),%r14
	movq %r14,%r15
	jmp L_18554
.p2align 0x4
L_380390:
L_18541:
	cmpq $0x1,%r14
	je L_380391
L_18542:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_18537
.p2align 0x4
L_380391:
L_18543:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18545
L_18586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_18587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18587
.p2align 0x4
.long 0x5DD
L_18587:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_18545
.p2align 0x4
L_380394:
L_18538:
	movq (globalObjptr+0xAF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380398:
L_18530:
	movq (globalObjptr+0xAF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_18556:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18557
L_18558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18559
.p2align 0x4
.long 0x45F
L_18559:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_18557:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.text
.p2align 0x4
.globl x_1211
.hidden x_1211
x_1211:
L_18609:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_18610
L_18799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18800
.p2align 0x4
.long 0x45F
L_18800:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_18610:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	movq $0x0,0x20(%rbp)
.p2align 0x4,,0x7
loop_265:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380474
.p2align 0x4,,0x7
L_18611:
	movq 0x20(%rbp),%r15
	cmpq %r15,0x10(%rbp)
	jl L_380458
L_18612:
	movq %r15,%r14
	incq %r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r14
	movb 0x0(%r14,%r15,1),%r13b
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_380456
	cmpq $0x2,%r15
	je L_380454
	cmpq $0x3,%r15
	je L_380453
	cmpq $0x5,%r15
	je L_380452
	cmpq $0x6,%r15
	je L_380429
	cmpq $0x7,%r15
	je L_380427
L_18613:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x206D,%r14
	je L_380411
	cmpq $0x206E,%r14
	je L_380403
L_18614:
	movb %r13b,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x10B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_539
.p2align 0x4
L_380403:
L_18700:
	movq 0x0(%r15),%r14
	cmpb $0x20,%r13b
	jb L_380410
L_18701:
	cmpb $0x7E,%r13b
	ja L_380407
L_18702:
	cmpb $0x22,%r13b
	je L_380406
	cmpb $0x5C,%r13b
	je L_380404
L_18703:
	movzbq %r13b,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380404:
L_18704:
	movq (globalObjptr+0xE0F0)(%rip),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
full_1:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380405
.p2align 0x4,,0x7
L_18615:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0x225,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movq $0x0,0x0(%r13)
	movq %r15,0x10(%r13)
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp loop_265
.p2align 0x4
L_380405:
L_18616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18617
.p2align 0x4
.long 0x5E0
L_18617:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_18615
.p2align 0x4
L_380406:
L_18622:
	movq (globalObjptr+0xE080)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380407:
	movq %r14,%r15
	movb %r13b,%dl
L_18706:
	cmpb $0x9,%dl
	je L_380409
	cmpb $0xA,%dl
	je L_380408
L_18707:
	movzbl %dl,%r14d
	movl %r14d,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	movq %r14,0x18(%r15)
	addq $0x28,%r12
	movl $0x0,0x0(%r15)
	movl $0x21,0x4(%r15)
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_18708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_380408:
L_18713:
	movq (globalObjptr+0xE100)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380409:
L_18712:
	movq (globalObjptr+0xE0F8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380410:
	movq %r14,%r15
	movb %r13b,%dl
	jmp L_18706
.p2align 0x4
L_380411:
L_18618:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movzbl %r13b,%r15d
	cmpb $0x20,%r13b
	jb L_380426
L_18619:
	cmpb $0x7E,%r13b
	ja L_380416
L_18620:
	cmpl $0x22,%r15d
	je L_18622
	cmpl $0x27,%r15d
	je L_380414
	cmpl $0x3F,%r15d
	je L_380413
	cmpl $0x5C,%r15d
	je L_380412
L_18621:
	movzbq %r13b,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380412:
L_18625:
	movq (globalObjptr+0xE098)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380413:
L_18624:
	movq (globalObjptr+0xE090)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380414:
L_18623:
	movq (globalObjptr+0xE088)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380416:
	movl %r15d,%ecx
	movq %r11,%r15
L_18627:
	cmpl $0x7,%ecx
	je L_380425
	cmpl $0x8,%ecx
	je L_380424
	cmpl $0x9,%ecx
	je L_380423
	cmpl $0xA,%ecx
	je L_380422
	cmpl $0xB,%ecx
	je L_380421
	cmpl $0xC,%ecx
	je L_380420
	cmpl $0xD,%ecx
	je L_380419
L_18628:
	cmpl $0x100,%ecx
	jl L_380418
L_18629:
	cmpl $0x10000,%ecx
	jl L_380417
L_18630:
	movl %ecx,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movl $0x0,0x0(%r14)
	movl $0x21,0x4(%r14)
	movb $0x0,%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_18631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_380417:
L_18652:
	movl %ecx,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movl $0x0,0x0(%r14)
	movl $0x21,0x4(%r14)
	movb $0x0,%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_18653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_380418:
L_18672:
	movl %ecx,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	movq %r14,0x18(%r15)
	addq $0x28,%r12
	movl $0x0,0x0(%r15)
	movl $0x21,0x4(%r15)
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_18673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_380419:
L_18698:
	movq (globalObjptr+0xE0E8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380420:
L_18697:
	movq (globalObjptr+0xE0E0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380421:
L_18696:
	movq (globalObjptr+0xE0D8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380422:
L_18695:
	movq (globalObjptr+0xE0D0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380423:
L_18694:
	movq (globalObjptr+0xE0C8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380424:
L_18693:
	movq (globalObjptr+0xE0C0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380425:
L_18692:
	movq (globalObjptr+0xE0B8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380426:
	movl %r15d,%ecx
	movq %r11,%r15
	jmp L_18627
.p2align 0x4
L_380427:
L_18755:
	cmpb $0x5C,%r13b
	jne L_380428
L_18717:
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380428:
L_18756:
	movzbq %r13b,%r14
	shlq $0x4,%r14
	orq $0x9,%r14
	movq %r14,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380429:
L_18731:
	cmpb $0x21,%r13b
	je L_380451
	cmpb $0x23,%r13b
	je L_380450
	cmpb $0x24,%r13b
	je L_380449
	cmpb $0x25,%r13b
	je L_380448
	cmpb $0x26,%r13b
	je L_380447
	cmpb $0x27,%r13b
	je L_380446
	cmpb $0x2A,%r13b
	je L_380445
	cmpb $0x2B,%r13b
	je L_380444
	cmpb $0x2D,%r13b
	je L_380443
	cmpb $0x2E,%r13b
	je L_380442
	cmpb $0x2F,%r13b
	je L_380441
	cmpb $0x3A,%r13b
	je L_380440
	cmpb $0x3C,%r13b
	je L_380439
	cmpb $0x3D,%r13b
	je L_380438
	cmpb $0x3E,%r13b
	je L_380437
	cmpb $0x3F,%r13b
	je L_380436
	cmpb $0x40,%r13b
	je L_380435
	cmpb $0x5C,%r13b
	je L_380434
	cmpb $0x5E,%r13b
	je L_380433
	cmpb $0x60,%r13b
	je L_380432
	cmpb $0x7C,%r13b
	je L_380431
	cmpb $0x7E,%r13b
	je L_380430
L_18732:
	movzbq %r13b,%r14
	shlq $0x4,%r14
	orq $0x9,%r14
	movq %r14,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380430:
L_18754:
	movq (globalObjptr+0xE1A8)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380431:
L_18753:
	movq (globalObjptr+0xE1A0)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380432:
L_18752:
	movq (globalObjptr+0xE198)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380433:
L_18751:
	movq (globalObjptr+0xE190)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380434:
L_18750:
	movq (globalObjptr+0xE188)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380435:
L_18749:
	movq (globalObjptr+0xE180)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380436:
L_18748:
	movq (globalObjptr+0xE178)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380437:
L_18747:
	movq (globalObjptr+0xE170)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380438:
L_18746:
	movq (globalObjptr+0xE168)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380439:
L_18745:
	movq (globalObjptr+0xE160)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380440:
L_18744:
	movq (globalObjptr+0xE158)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380441:
L_18743:
	movq (globalObjptr+0xE150)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380442:
L_18742:
	movq (globalObjptr+0xE148)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380443:
L_18741:
	movq (globalObjptr+0xE140)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380444:
L_18740:
	movq (globalObjptr+0xE138)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380445:
L_18739:
	movq (globalObjptr+0xE130)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380446:
L_18738:
	movq (globalObjptr+0xDDD0)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380447:
L_18737:
	movq (globalObjptr+0xE128)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380448:
L_18736:
	movq (globalObjptr+0xE120)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380449:
L_18735:
	movq (globalObjptr+0xE118)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380450:
L_18734:
	movq (globalObjptr+0xE110)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380451:
L_18733:
	movq (globalObjptr+0xE108)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380452:
L_18726:
	cmpb $0x5A,%r13b
	ja str_5
L_18727:
	cmpb $0x41,%r13b
	jb str_4
L_18728:
	movzbl %r13b,%r14d
	addl $0x20,%r14d
	movb %r14b,%dl
str_1:
	movzbq %dl,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
str_4:
	movb %r13b,%dl
	jmp str_1
.p2align 0x4
str_5:
	movb %r13b,%dl
	jmp str_1
.p2align 0x4
L_380453:
L_18721:
	cmpb $0x5A,%r13b
	ja str_7
L_18722:
	cmpb $0x41,%r13b
	jb str_6
L_18723:
	movzbl %r13b,%r14d
	addl $0x20,%r14d
	movb %r14b,%dl
str_0:
	movzbq %dl,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
str_6:
	movb %r13b,%dl
	jmp str_0
.p2align 0x4
str_7:
	movb %r13b,%dl
	jmp str_0
.p2align 0x4
L_380454:
L_18718:
	cmpb $0x7E,%r13b
	jne L_380455
L_18720:
	movq (globalObjptr+0xD3C0)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp full_1
.p2align 0x4
L_380455:
L_18719:
	movzbq %r13b,%r14
	shlq $0x4,%r14
	orq $0x9,%r14
	movq %r14,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380456:
L_18715:
	cmpb $0x5C,%r13b
	je L_18717
L_18716:
	movzbq %r13b,%r14
	shlq $0x4,%r14
	orq $0x9,%r14
	movq %r14,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380458:
L_18757:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_380473
L_18758:
	movq 0x8(%r14),%r13
	movq %r13,0x0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_18759:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380472
.p2align 0x4,,0x7
L_18760:
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_380459
L_18761:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_18759
.p2align 0x4
L_380459:
L_18762:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_380466
L_18763:
	movq 0x8(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_18764:
	addq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	je L_380460
L_18765:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_18764
.p2align 0x4
L_380460:
L_18766:
	testq %r15,%r15
	jz L_380465
L_18767:
	cmpq $0x7FFFFFFF,%r15
	ja L_380464
L_18768:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_18769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18769
.p2align 0x4
.long 0x49B
L_18769:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_18770:
	movq 0x10(%rbp),%r10
	movq 0x8(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_266:
	cmpq 0x18(%rbp),%r14
	jnl L_380463
.p2align 0x4,,0x7
loop_267:
	cmpq 0x8(%r11),%r13
	jl L_380462
L_18773:
	cmpq $0x1,%r10
	je L_380461
L_18774:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_267
.p2align 0x4
L_380461:
L_18775:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380462:
L_18776:
	movq %r13,%r9
	addq 0x0(%r11),%r9
	movq 0x10(%r11),%rsp
	movb 0x0(%rsp,%r9,1),%r8b
	movb %r8b,0x0(%r15,%r14,1)
	incq %r13
	incq %r14
	jmp loop_266
.p2align 0x4
L_380463:
L_18771:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380464:
L_18778:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380465:
L_18779:
	movq (globalObjptr+0x5B0)(%rip),%r14
	xchgq %r14,%r15
	jmp L_18770
.p2align 0x4
L_380466:
L_18780:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x20(%rbp)
	testq %r13,%r13
	jnz L_18782
L_18791:
	cmpq %r10,0xFFFFFFFFFFFFFFF0(%r11)
	jne L_380467
L_18793:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380467:
L_18782:
	movq 0x20(%rbp),%rdx
	testq %rdx,%rdx
	jz L_380470
L_18783:
	cmpq $0x7FFFFFFF,%rdx
	ja L_18778
L_18784:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_18785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18785
.p2align 0x4
.long 0x49C
L_18785:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,%r15
L_18786:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_268:
	cmpq 0x20(%rbp),%r14
	jnl L_380468
L_18788:
	movq %r14,%r13
	addq 0x10(%rbp),%r13
	movq 0x18(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_268
.p2align 0x4
L_380468:
L_18787:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380470:
L_18790:
	movq (globalObjptr+0x5A8)(%rip),%r15
	jmp L_18786
.p2align 0x4
L_380472:
L_18794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_18795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18795
.p2align 0x4
.long 0x45B
L_18795:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_18760
.p2align 0x4
L_380473:
L_18796:
	movq $0x3,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380474:
L_18797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_18798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18798
.p2align 0x4
.long 0x5E1
L_18798:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_18611
.p2align 0x4
.long 0x5DF
full_0:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp full_1
.p2align 0x4
.long 0x5DF
L_18708:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18709
L_18710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18711
.p2align 0x4
.long 0x5E0
L_18711:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18709:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE0F0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5DF
L_18631:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18632
L_18650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18651
.p2align 0x4
.long 0x5E0
L_18651:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18632:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_380479
L_18635:
	movl $0x8,%r14d
	subl %r13d,%r14d
	cmpl $0x0,%r14d
	jg L_380478
L_18636:
	testl %r14d,%r14d
	jnz L_380477
L_18639:
L_18640:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE0A0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_380477:
L_18638:
	movq (globalObjptr+0x748)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380478:
L_18641:
	movl %r14d,0x48(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x30,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_18642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380479:
L_18634:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5DF
L_18653:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18654
L_18670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18671
.p2align 0x4
.long 0x5E0
L_18671:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18654:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_18634
L_18656:
	movl $0x4,%r14d
	subl %r13d,%r14d
	cmpl $0x0,%r14d
	jg L_380482
L_18657:
	testl %r14d,%r14d
	jnz L_18638
L_18659:
L_18660:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE0A8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_380482:
L_18661:
	movl %r14d,0x48(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x30,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_18662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x5DF
L_18673:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18674
L_18690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18691
.p2align 0x4
.long 0x5E0
L_18691:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18674:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_18634
L_18676:
	movl $0x3,%r14d
	subl %r13d,%r14d
	cmpl $0x0,%r14d
	jg L_380486
L_18677:
	testl %r14d,%r14d
	jnz L_18638
L_18679:
L_18680:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE0B0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (full_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_380486:
L_18681:
	movl %r14d,0x48(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x30,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_18682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x577
L_18642:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18643
L_18648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_18649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18649
.p2align 0x4
.long 0x562
L_18649:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_18643:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_18644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x577
L_18662:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18663
L_18668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_18669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18669
.p2align 0x4
.long 0x562
L_18669:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_18663:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_18664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x577
L_18682:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18683
L_18688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_18689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18689
.p2align 0x4
.long 0x562
L_18689:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_18683:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_18684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5DF
L_18644:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18645
L_18646:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18647
.p2align 0x4
.long 0x5E0
L_18647:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18645:
	movq 0x20(%rbp),%r15
	jmp L_18640
.p2align 0x4
.long 0x5DF
L_18664:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18665
L_18666:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18667
.p2align 0x4
.long 0x5E0
L_18667:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18665:
	movq 0x20(%rbp),%r15
	jmp L_18660
.p2align 0x4
.long 0x5DF
L_18684:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18685
L_18686:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18687
.p2align 0x4
.long 0x5E0
L_18687:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18685:
	movq 0x20(%rbp),%r15
	jmp L_18680
.text
.p2align 0x4
.globl toString_539
.hidden toString_539
toString_539:
L_18801:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_18889
L_18802:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380509
L_18803:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movb 0x0(%rbp),%r15b
	movzbl %r15b,%r11d
	cmpb $0x20,%r15b
	jb L_380508
L_18804:
	cmpb $0x7E,%r15b
	ja L_380497
L_18805:
	cmpl $0x22,%r11d
	je L_380496
	cmpl $0x5C,%r11d
	je L_380495
L_18806:
	movzbq %r15b,%r11
	shlq $0x4,%r11
	orq $0x9,%r11
	movq %r11,0x0(%rbp)
	movl $0x1,0x8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380495:
L_18808:
	movq (globalObjptr+0xE098)(%rip),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380496:
L_18807:
	movq (globalObjptr+0xE080)(%rip),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380497:
	movq %r14,%r15
	movq %r13,%r14
	movl %r11d,%ecx
L_18810:
	cmpl $0x7,%ecx
	je L_380507
	cmpl $0x8,%ecx
	je L_380506
	cmpl $0x9,%ecx
	je L_380505
	cmpl $0xA,%ecx
	je L_380504
	cmpl $0xB,%ecx
	je L_380503
	cmpl $0xC,%ecx
	je L_380502
	cmpl $0xD,%ecx
	je L_380501
L_18811:
	cmpl $0x20,%ecx
	jl L_380500
L_18812:
	cmpl $0x100,%ecx
	jl L_380499
L_18813:
	cmpl $0x10000,%ecx
	jl L_380498
L_18814:
	movl %ecx,0x8(%rbp)
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movl $0x0,0x0(%r14)
	movl $0x21,0x4(%r14)
	movb $0x0,%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_18815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_380498:
L_18836:
	movl %ecx,0x8(%rbp)
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq $0x55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movl $0x0,0x0(%r14)
	movl $0x21,0x4(%r14)
	movb $0x0,%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_18837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_380499:
L_18856:
	movl %ecx,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	movq %r14,0x18(%r15)
	addq $0x28,%r12
	movl $0x0,0x0(%r15)
	movl $0x21,0x4(%r15)
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_18857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_380500:
L_18876:
	addl $0x40,%ecx
	movb %cl,%r15b
	movzbq %r15b,%r14
	shlq $0x4,%r14
	orq $0x9,%r14
	movq %r14,0x8(%rbp)
	movl $0x1,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_18877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380501:
L_18887:
	movq (globalObjptr+0xE0E8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380502:
L_18886:
	movq (globalObjptr+0xE0E0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380503:
L_18885:
	movq (globalObjptr+0xE0D8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380504:
L_18884:
	movq (globalObjptr+0xE0D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380505:
L_18883:
	movq (globalObjptr+0xE0C8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380506:
L_18882:
	movq (globalObjptr+0xE0C0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380507:
L_18881:
	movq (globalObjptr+0xE0B8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380508:
	movq %r14,%r15
	movq %r13,%r14
	movl %r11d,%ecx
	jmp L_18810
.p2align 0x4
L_380509:
L_18889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18890
.p2align 0x4
.long 0x494
L_18890:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_18803
.p2align 0x4
.long 0x1
L_18815:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18816
L_18834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_18835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18835
.p2align 0x4
.long 0x451
L_18835:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_18816:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_380513
L_18819:
	movl $0x8,%r14d
	subl %r13d,%r14d
	cmpl $0x0,%r14d
	jg L_380512
L_18820:
	testl %r14d,%r14d
	jnz L_380511
L_18823:
L_18824:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE0A0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_380511:
L_18822:
	movq (globalObjptr+0x748)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380512:
L_18825:
	movl %r14d,0x20(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x30,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_18826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_380513:
L_18818:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_18837:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18838
L_18854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_18855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18855
.p2align 0x4
.long 0x451
L_18855:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_18838:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_18818
L_18840:
	movl $0x4,%r14d
	subl %r13d,%r14d
	cmpl $0x0,%r14d
	jg L_380516
L_18841:
	testl %r14d,%r14d
	jnz L_18822
L_18843:
L_18844:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE0A8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_380516:
L_18845:
	movl %r14d,0x20(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x30,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_18846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x1
L_18857:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18858
L_18874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_18875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18875
.p2align 0x4
.long 0x451
L_18875:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_18858:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_18818
L_18860:
	movl $0x3,%r14d
	subl %r13d,%r14d
	cmpl $0x0,%r14d
	jg L_380520
L_18861:
	testl %r14d,%r14d
	jnz L_18822
L_18863:
L_18864:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE0B0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_380520:
L_18865:
	movl %r14d,0x20(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x30,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_18866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x1
L_18877:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18878
L_18879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_18880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18880
.p2align 0x4
.long 0x451
L_18880:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_18878:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE1B0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x521
L_18826:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18827
L_18832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_18833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18833
.p2align 0x4
.long 0x4E8
L_18833:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_18827:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_18828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x521
L_18846:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18847
L_18852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_18853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18853
.p2align 0x4
.long 0x4E8
L_18853:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_18847:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_18848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x521
L_18866:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18867
L_18872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_18873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18873
.p2align 0x4
.long 0x4E8
L_18873:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_18867:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_18868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_18828:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18829
L_18830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_18831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18831
.p2align 0x4
.long 0x451
L_18831:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_18829:
	movq 0x0(%rbp),%r15
	jmp L_18824
.p2align 0x4
.long 0x1
L_18848:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18849
L_18850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_18851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18851
.p2align 0x4
.long 0x451
L_18851:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_18849:
	movq 0x0(%rbp),%r15
	jmp L_18844
.p2align 0x4
.long 0x1
L_18868:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18869
L_18870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_18871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18871
.p2align 0x4
.long 0x451
L_18871:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_18869:
	movq 0x0(%rbp),%r15
	jmp L_18864
.text
.p2align 0x4
.globl get_21
.hidden get_21
get_21:
L_18891:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_18892
L_18946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18947
.p2align 0x4
.long 0x45F
L_18947:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_18892:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_380539
L_18894:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_380538
L_18895:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_18897:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_380537
L_18938:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD9C,%r10
	jne L_380536
L_18939:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_380533
L_18898:
	incl %ecx
	jo L_380532
L_18900:
	cmpq $0x1,%r14
	je L_380530
L_18901:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_18897
.p2align 0x4
L_380530:
L_18902:
L_18903:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_380531
L_18905:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_27
L_18937:
	movl %ecx,0x0(%r15)
x_27:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_18907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_380531:
L_18904:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380532:
L_18899:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380533:
L_18941:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_18904
L_18942:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_380534
L_18944:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380534:
L_18943:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380536:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_18898
.p2align 0x4
L_380537:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_18898
.p2align 0x4
L_380538:
L_18945:
	xorl %ecx,%ecx
	jmp L_18903
.p2align 0x4
L_380539:
L_18893:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_18907:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_18908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_18908:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_18909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_18909:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_18910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_18910:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_18911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_18911:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18912
L_18935:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_18936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18936
.p2align 0x4
.long 0x4AE
L_18936:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_18912:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_18913:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_18899
L_18914:
	cmpq $0x1,%r14
	je L_380541
L_18915:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_18913
.p2align 0x4
L_380541:
L_18916:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18917
L_18933:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_18934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18934
.p2align 0x4
.long 0x4E6
L_18934:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_18917:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_380542
L_18918:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_5:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_380542:
L_18932:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_5
.p2align 0x4
.long 0x1
rev_5:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_380548
L_18919:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_18920:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380547
.p2align 0x4,,0x7
L_18921:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_380546
L_18922:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_18920
.p2align 0x4
L_380546:
L_18924:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_18925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_380547:
L_18929:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_18930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18930
.p2align 0x4
.long 0x45B
L_18930:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_18921
.p2align 0x4
L_380548:
L_18931:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_18924
.p2align 0x4
.long 0x1
L_18925:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18926
L_18927:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_18928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18928
.p2align 0x4
.long 0x451
L_18928:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_18926:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3785
.hidden loop_3785
loop_3785:
L_18948:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_18949
L_18980:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18981
.p2align 0x4
.long 0x45F
L_18981:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_18949:
	movq 0x8(%rbp),%r15
.p2align 0x4,,0x7
loop_269:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	cmpq $0x1,%r14
	je L_380556
L_18950:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDB3,%r15
	je L_380554
	cmpq $0xDB4,%r15
	je L_380552
	cmpq $0xDB5,%r15
	je L_380550
L_18951:
	movq 0x8(%r14),%r15
	jmp loop_269
.p2align 0x4
L_380550:
L_18975:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18976
L_18977:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18978
.p2align 0x4
.long 0x45F
L_18978:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_18976:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380552:
L_18968:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_380553
L_18969:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r13
	movq 0x0(%rbp),%r14
	movq %r15,0x0(%rbp)
	movq %r13,%r15
L_18970:
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_18971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_380553:
L_18974:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380554:
L_18952:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_380555
L_18953:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_18954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_380555:
L_18967:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380556:
L_18979:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_18971:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_380558
L_18972:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	jmp L_18970
.p2align 0x4
L_380558:
L_18973:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x521
L_18954:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18955
L_18965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_18966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18966
.p2align 0x4
.long 0x4E8
L_18966:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_18955:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_380559
L_18956:
	movq 0x8(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r15
	movq 0x10(%rbp),%r14
L_18957:
	movq %r15,0x18(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_18958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_380559:
L_18964:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_18958:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18959
L_18962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_18963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_18963
.p2align 0x4
.long 0x45F
L_18963:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_18959:
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_380561
L_18960:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%rbp),%r14
	jmp L_18957
.p2align 0x4
L_380561:
L_18961:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl record_3
.hidden record_3
record_3:
L_18982:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_19013
L_18983:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380564
L_18984:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_380563
L_18985:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq $0x1,0x8(%rbp)
L_18986:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_18987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_380563:
L_19012:
	movq $0x1,%r15
L_19004:
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA2F0)(%rip),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp x_1218
.p2align 0x4
L_380564:
L_19013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_19014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19014
.p2align 0x4
.long 0x451
L_19014:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_18984
.p2align 0x4
.long 0x51E
L_18987:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_18988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_18988:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18989
L_19010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_19011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19011
.p2align 0x4
.long 0x4AE
L_19011:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_18989:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_18990:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_380572
L_18992:
	cmpq $0x1,%r14
	je L_380566
L_18993:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_18990
.p2align 0x4
L_380566:
L_18994:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_18995
L_19008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19009
.p2align 0x4
.long 0x52C
L_19009:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_18995:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_380570
L_18996:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_18997:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_380567
L_18998:
	movq %r15,0x8(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	movq %r14,%r15
	jmp L_18986
.p2align 0x4
L_380567:
L_18999:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_19000:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380569
.p2align 0x4,,0x7
L_19001:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_19004
L_19002:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_19000
.p2align 0x4
L_380569:
L_19005:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_19006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19006
.p2align 0x4
.long 0x45B
L_19006:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_19001
.p2align 0x4
L_380570:
L_19007:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_18997
.p2align 0x4
L_380572:
L_18991:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_16
.hidden get_16
get_16:
L_19015:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_19016
L_19073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19074
.p2align 0x4
.long 0x45F
L_19074:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19016:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_380584
L_19018:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_380583
L_19019:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_19021:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_380582
L_19065:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD97,%r10
	jne L_380581
L_19066:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_380578
L_19022:
	incl %ecx
	jo L_380577
L_19024:
	cmpq $0x1,%r14
	je L_380574
L_19025:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_19021
.p2align 0x4
L_380574:
L_19026:
L_19027:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_380576
L_19029:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_28
L_19064:
	movl %ecx,0x0(%r15)
x_28:
	movq 0x0(%r13),%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_380575
L_19062:
	movq %r11,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_19063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_380575:
L_19031:
	movq %r14,%r15
L_19032:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_19033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380576:
L_19028:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380577:
L_19023:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380578:
L_19068:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_19028
L_19069:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_380579
L_19071:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380579:
L_19070:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380581:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_19022
.p2align 0x4
L_380582:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_19022
.p2align 0x4
L_380583:
L_19072:
	xorl %ecx,%ecx
	jmp L_19027
.p2align 0x4
L_380584:
L_19017:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x521
L_19063:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_19032
.p2align 0x4
.long 0x1
L_19033:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_19034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_19034:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_19035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_19035:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_19036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_19036:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19037
L_19060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_19061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19061
.p2align 0x4
.long 0x4AE
L_19061:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_19037:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_19038:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_19023
L_19039:
	cmpq $0x1,%r14
	je L_380586
L_19040:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19038
.p2align 0x4
L_380586:
L_19041:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19042
L_19058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19059
.p2align 0x4
.long 0x4E6
L_19059:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19042:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_380587
L_19043:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_6:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_6+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_380587:
L_19057:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_6
.p2align 0x4
.long 0x1
rev_6:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_380593
L_19044:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_19045:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380592
.p2align 0x4,,0x7
L_19046:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_380591
L_19047:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_19045
.p2align 0x4
L_380591:
L_19049:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_19050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_380592:
L_19054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_19055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19055
.p2align 0x4
.long 0x45B
L_19055:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_19046
.p2align 0x4
L_380593:
L_19056:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_19049
.p2align 0x4
.long 0x1
L_19050:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19051
L_19052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_19053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19053
.p2align 0x4
.long 0x451
L_19053:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_19051:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_24
.hidden layout_24
layout_24:
L_19075:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_19076
L_19195:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19196
.p2align 0x4
.long 0x45F
L_19196:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19076:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10C6,%r14
	je L_380595
L_19139:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq (globalObjptr+0xDE88)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380595:
L_19077:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xE1C0)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5EC
L_19140:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_19141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x517
L_19078:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19079
L_19137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19138
.p2align 0x4
.long 0x4E9
L_19138:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19079:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_380597
L_19081:
	movl %r10d,0x40(%rbp)
	movq $0x3B2B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x20,%r12
	movq %r14,0x0(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_380597:
L_19080:
	movq (globalObjptr+0x4D8)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5E2
L_19141:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5E2
L_19082:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_19083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x5E2
L_19142:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19143
L_19193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19194
.p2align 0x4
.long 0x4F1
L_19194:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19143:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEE8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_380599
L_19171:
	shrq $0x1,%r14
	movl %r14d,0x38(%rbp)
	movq (globalObjptr+0xDDF0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_19172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380599:
L_19144:
	movq (globalObjptr+0xDEF0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_19145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5E2
L_19083:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19084
L_19135:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19136
.p2align 0x4
.long 0x4F1
L_19136:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19084:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE50)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_380601
L_19113:
	shrq $0x1,%r14
	movl %r14d,0x38(%rbp)
	movq (globalObjptr+0xDDF0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_19114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380601:
L_19085:
	movq (globalObjptr+0xDEF0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_19086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5E8
L_19172:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movl 0x38(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_380603
L_19173:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_19174:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_19175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380603:
L_19192:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_19174
.p2align 0x4
.long 0x510
L_19145:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19146
L_19169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19170
.p2align 0x4
.long 0x5E7
L_19170:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19146:
	movq 0x38(%rbp),%r15
L_19147:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE80)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_19148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x5E8
L_19114:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movl 0x38(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_380605
L_19115:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_19116:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_19117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380605:
L_19134:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_19116
.p2align 0x4
.long 0x510
L_19086:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19087
L_19111:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19112
.p2align 0x4
.long 0x5E7
L_19112:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19087:
	movq 0x38(%rbp),%r15
L_19088:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE80)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_19089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x5E9
L_19175:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19176
L_19190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_19191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19191
.p2align 0x4
.long 0x5EB
L_19191:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_19176:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_19177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x511
L_19148:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19149
L_19167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19168
.p2align 0x4
.long 0x5EE
L_19168:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19149:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x5E9
L_19117:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19118
L_19132:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_19133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19133
.p2align 0x4
.long 0x5EB
L_19133:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_19118:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_19119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x5E3
L_19089:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19090
L_19109:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19110
.p2align 0x4
.long 0x5E6
L_19110:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19090:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x5E9
L_19177:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19178
L_19188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_19189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19189
.p2align 0x4
.long 0x5EB
L_19189:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_19178:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19179:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_380614
L_19180:
	cmpq $0x1,%r14
	je L_380611
L_19181:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19179
.p2align 0x4
L_380611:
L_19182:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19183
L_19186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_19187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19187
.p2align 0x4
.long 0x5EA
L_19187:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_19183:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380612
L_19184:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_19147
.p2align 0x4
L_380612:
L_19185:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_19147
.p2align 0x4
L_380614:
L_19096:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5ED
L_19150:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19151
L_19165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19166
.p2align 0x4
.long 0x4FC
L_19166:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19151:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x5E9
L_19119:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19120
L_19130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_19131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19131
.p2align 0x4
.long 0x5EB
L_19131:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_19120:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19121:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_19096
L_19122:
	cmpq $0x1,%r14
	je L_380617
L_19123:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19121
.p2align 0x4
L_380617:
L_19124:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19125
L_19128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_19129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19129
.p2align 0x4
.long 0x5EA
L_19129:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_19125:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380618
L_19126:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_19088
.p2align 0x4
L_380618:
L_19127:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_19088
.p2align 0x4
.long 0x519
L_19091:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19092
L_19107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19108
.p2align 0x4
.long 0x51C
L_19108:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19092:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x51A
L_19152:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19153
L_19163:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19164
.p2align 0x4
.long 0x488
L_19164:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19153:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19154:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_19096
L_19155:
	cmpq $0x1,%r14
	je L_380623
L_19156:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19154
.p2align 0x4
L_380623:
L_19157:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19158
L_19161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_19162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19162
.p2align 0x4
.long 0x51B
L_19162:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_19158:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380624
L_19159:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380624:
L_19160:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_19093:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19094
L_19105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19106
.p2align 0x4
.long 0x5E5
L_19106:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19094:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19095:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_19096
L_19097:
	cmpq $0x1,%r14
	je L_380628
L_19098:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19095
.p2align 0x4
L_380628:
L_19099:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19100
L_19103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19104
.p2align 0x4
.long 0x5E4
L_19104:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19100:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380629
L_19101:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380629:
L_19102:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_3
.hidden layout_3
layout_3:
L_19197:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_19198
L_19312:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19313
.p2align 0x4
.long 0x45F
L_19313:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19198:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x5EF
L_19199:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19200
L_19310:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19311
.p2align 0x4
.long 0x4E9
L_19311:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19200:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1456,%r14
	jne L_380641
L_19202:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_380640
	cmpq $0x1085,%r15
	je L_380638
	cmpq $0x1086,%r15
	je L_380637
L_19203:
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movb 0x0(%r13),%r14b
	cmpb $0x1,%r14b
	je L_380636
	cmpb $0x2,%r14b
	je L_380635
	cmpb $0x3,%r14b
	je L_380634
L_19204:
	movq (globalObjptr+0xE1C8)(%rip),%r15
L_19205:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_19206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380634:
L_19238:
	movq (globalObjptr+0xD828)(%rip),%r15
	jmp L_19205
.p2align 0x4
L_380635:
L_19237:
	movq (globalObjptr+0xE1D0)(%rip),%r15
	jmp L_19205
.p2align 0x4
L_380636:
L_19236:
	movq (globalObjptr+0xCE20)(%rip),%r15
	jmp L_19205
.p2align 0x4
L_380637:
L_19257:
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_380638:
L_19253:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_380639
L_19255:
	movl %r13d,0x10(%rbp)
	movq $0x3C9B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_19256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_380639:
L_19254:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380640:
L_19239:
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE1D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380641:
L_19201:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_19206:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x48F
L_19258:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_19201
L_19259:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_19256:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x490
L_19240:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_19241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_11
.p2align 0x4
.long 0x5EF
L_19207:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_19208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_3
.p2align 0x4
.long 0x519
L_19260:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_380644
L_19261:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
L_19262:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xE1E0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_19263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380644:
L_19309:
	movq $0x1,%r15
L_19280:
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp separateRight_0
.p2align 0x4
.long 0x459
L_19241:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19242
L_19251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19252
.p2align 0x4
.long 0x508
L_19252:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19242:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19243:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_380648
L_19244:
	cmpq $0x1,%r14
	je L_380645
L_19245:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19243
.p2align 0x4
L_380645:
L_19246:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19247
L_19249:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19250
.p2align 0x4
.long 0x51D
L_19250:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19247:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380646
L_19248:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380646:
L_19226:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380648:
L_19211:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x519
L_19208:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19209
L_19234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19235
.p2align 0x4
.long 0x51C
L_19235:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19209:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19210:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_19211
L_19212:
	cmpq $0x1,%r14
	je L_380650
L_19213:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19210
.p2align 0x4
L_380650:
L_19214:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19215
L_19232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19233
.p2align 0x4
.long 0x51D
L_19233:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19215:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_380651
L_19216:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
paren_5:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x0(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_19217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380651:
L_19231:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp paren_5
.p2align 0x4
.long 0x5F0
L_19263:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_19264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x51A
L_19281:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x4AF
L_19217:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_19218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5E9
L_19264:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_19265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51A
L_19282:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19283
L_19300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19301
.p2align 0x4
.long 0x5F3
L_19301:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19283:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_380656
L_19284:
	decl %ecx
	jo L_19211
L_19285:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_19286:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA2F0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_19287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380656:
L_19299:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_19286
.p2align 0x4
.long 0x5AF
L_19218:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19219
L_19229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_19230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19230
.p2align 0x4
.long 0x45B
L_19230:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_19219:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19220:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_19211
L_19221:
	cmpq $0x1,%r14
	je L_380658
L_19222:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19220
.p2align 0x4
L_380658:
L_19223:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19224
L_19227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19228
.p2align 0x4
.long 0x49C
L_19228:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19224:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_19226
L_19225:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5E9
L_19265:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19266
L_19307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_19308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19308
.p2align 0x4
.long 0x5EB
L_19308:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_19266:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19267:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_19211
L_19268:
	cmpq $0x1,%r14
	je L_380663
L_19269:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19267
.p2align 0x4
L_380663:
L_19270:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19271
L_19305:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_19306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19306
.p2align 0x4
.long 0x5EA
L_19306:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_19271:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_380667
L_19272:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_19273:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_380664
L_19274:
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movq %r14,%r15
	jmp L_19262
.p2align 0x4
L_380664:
L_19275:
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_19276:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380666
.p2align 0x4,,0x7
L_19277:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_19280
L_19278:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_19276
.p2align 0x4
L_380666:
L_19302:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_19303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19303
.p2align 0x4
.long 0x5F4
L_19303:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_19277
.p2align 0x4
L_380667:
L_19304:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_19273
.p2align 0x4
.long 0x5F1
L_19287:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19288
L_19297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19298
.p2align 0x4
.long 0x489
L_19298:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19288:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19289:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_19211
L_19290:
	cmpq $0x1,%r14
	je L_380671
L_19291:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19289
.p2align 0x4
L_380671:
L_19292:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19293
L_19295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_19296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19296
.p2align 0x4
.long 0x5F2
L_19296:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_19293:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_19226
L_19294:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl root_5
.hidden root_5
root_5:
L_19314:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_19315
L_19324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_19325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19325
.p2align 0x4
.long 0x451
L_19325:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_19315:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1456,%r13
	je L_380677
L_19316:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1457,%r15
	jne L_380676
L_19318:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_19319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_380676:
L_19317:
	movq (globalObjptr+0x14F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380677:
L_19323:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_19319:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19320
L_19321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19322
.p2align 0x4
.long 0x45F
L_19322:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19320:
	movq $0x28AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_11
.hidden layout_11
layout_11:
L_19326:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_19384
L_19327:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380696
L_19328:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x18(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0xC5F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x20(%rbp)
	addq $0x28,%r12
	movq %r11,0x0(%r10)
	movq 0x8(%rbp),%r9
	movq %r9,0x8(%r10)
	movq %r13,0x10(%r10)
	movq %r11,0x18(%r10)
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_380695
L_19330:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_380694
L_19331:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x30(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_19333:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_19334
L_19373:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCA5,%r13
	jne L_19334
L_19374:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_380687
L_19334:
	movl 0x30(%rbp),%r13d
	incl %r13d
	movl %r13d,0x34(%rbp)
	jo L_380686
L_19336:
	cmpq $0x1,%r15
	je L_380680
L_19337:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x30(%rbp)
	jmp L_19333
.p2align 0x4
L_380680:
L_19338:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19339
L_19371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19372
.p2align 0x4
.long 0x5F6
L_19372:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19339:
	movl 0x34(%rbp),%ecx
L_19340:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_380684
L_19342:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_19344
L_19370:
	movl %ecx,0x0(%r15)
L_19344:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	je L_380681
L_19365:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380681:
L_19345:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_380682
L_19347:
	movl %r13d,0x48(%rbp)
	movq $0x375D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_19348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_380682:
L_19346:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380684:
L_19341:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380686:
L_19335:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380687:
L_19376:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19377
L_19381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19382
.p2align 0x4
.long 0x5F7
L_19382:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19377:
	movl 0x30(%rbp),%r15d
	movslq %r15d,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_19341
L_19378:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %r15d,0x0(%r14)
	jl L_380689
L_19379:
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
L_19352:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_380688
L_19353:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
L_19354:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x3DBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_19355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_380688:
L_19359:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380689:
L_19380:
	movq (globalObjptr+0x1078)(%rip),%r15
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_19352
.p2align 0x4
L_380694:
L_19383:
	xorl %ecx,%ecx
	jmp L_19340
.p2align 0x4
L_380695:
L_19329:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380696:
L_19384:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19385
.p2align 0x4
.long 0x45F
L_19385:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_19328
.p2align 0x4
.long 0x4E2
L_19366:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19367
L_19368:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19369
.p2align 0x4
.long 0x51F
L_19369:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19367:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
L_19351:
	movq $0x194B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_19352
.p2align 0x4
.long 0x5F5
L_19348:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_19349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x4A7
L_19355:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19356
L_19360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19361
.p2align 0x4
.long 0x4B0
L_19361:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19356:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_19359
L_19357:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_19354
.p2align 0x4
.long 0x4E2
L_19349:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19350
L_19363:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19364
.p2align 0x4
.long 0x51F
L_19364:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19350:
	movq 0x20(%rbp),%r15
	jmp L_19351
.text
.p2align 0x4
.globl tabulate_12
.hidden tabulate_12
tabulate_12:
L_19386:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_19387
L_19575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19576
.p2align 0x4
.long 0x457
L_19576:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19387:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_380744
L_19388:
	cmpq $0x7FFFFFFF,%rdx
	ja L_380743
L_19389:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1487,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_19390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19390
.p2align 0x4
.long 0x452
L_19390:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_19391:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_270:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_380742
L_19393:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_380741
L_19394:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1BA7,%rax
	cmpq $0xC,%rax
	ja L_380702
	leaq jumpTable_21(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_21:
.quad L_380739,L_380735,L_380733,L_380732,L_380731,L_380730,L_380729,L_380713,L_380711,L_380709,L_380707,L_380704,L_380703
.text
.p2align 0x4
L_380702:
L_19395:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3788
.p2align 0x4
L_380703:
L_19571:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3788
.p2align 0x4
L_380704:
L_19566:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movslq %r14d,%r15
	movq 0x10(%r13),%r14
	movq 0x0(%r14,%r15,8),%r10
	movl 0x0(%r13),%r14d
	testl %r14d,%r14d
	jz L_380706
L_19568:
	cmpq $0x1,%r10
	je L_380705
L_19569:
	movq %r10,%r15
.p2align 0x4,,0x7
L_19397:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x8(%rbp),%r15
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x18(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r14,0x0(%r15,%r9,1)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,%r14
	salq $0x4,%r14
	movq %r13,0x8(%r15,%r14,1)
	incq %r11
	movq %r11,0x18(%rbp)
	jmp loop_270
.p2align 0x4
L_380705:
L_19570:
	movq %r11,%r15
	jmp L_19397
.p2align 0x4
L_380706:
L_19567:
	movq %r11,%r15
	jmp L_19397
.p2align 0x4
L_380707:
L_19544:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movslq %r14d,%r11
	movq %r11,%r14
	salq $0x4,%r14
	salq $0x4,%r11
	movq 0x8(%r15),%r10
	movq 0x8(%r10,%r11,1),%r9
	movl 0x0(%r10,%r14,1),%r11d
	testl %r11d,%r11d
	jnz L_380708
L_19545:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_19546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_27
.p2align 0x4
L_380708:
L_19551:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_19552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_27
.p2align 0x4
L_380709:
L_19522:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movslq %r14d,%r11
	movq %r11,%r14
	salq $0x4,%r14
	salq $0x4,%r11
	movq 0x8(%r15),%r10
	movq 0x8(%r10,%r11,1),%r9
	movl 0x0(%r10,%r14,1),%r11d
	testl %r11d,%r11d
	jnz L_380710
L_19523:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_19524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_28
.p2align 0x4
L_380710:
L_19529:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_19530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_28
.p2align 0x4
L_380711:
L_19500:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movslq %r14d,%r11
	movq %r11,%r14
	salq $0x4,%r14
	salq $0x4,%r11
	movq 0x8(%r15),%r10
	movq 0x8(%r10,%r11,1),%r9
	movl 0x0(%r10,%r14,1),%r11d
	testl %r11d,%r11d
	jnz L_380712
L_19501:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_19502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_13
.p2align 0x4
L_380712:
L_19507:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_19508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_13
.p2align 0x4
L_380713:
L_19456:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movslq %r14d,%r15
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r15,8),%r8
	movq %r8,0x28(%rbp)
	movq 0x18(%r10),%r14
	movq 0x10(%r10),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r10),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r10),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r8),%r11
	movq %r11,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_380728
L_19458:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_380726
L_19459:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_19461:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_380725
L_19489:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA5,%r11
	jne L_380724
L_19490:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_380721
L_19462:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_380720
L_19463:
	cmpq $0x1,%r15
	je L_380714
L_19464:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_19461
.p2align 0x4
L_380714:
L_19465:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19466
L_19487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_19488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19488
.p2align 0x4
.long 0x5FC
L_19488:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_19466:
	movl 0x50(%rbp),%ecx
L_19467:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_380718
L_19469:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_19471
L_19486:
	movl %ecx,0x0(%r15)
L_19471:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	je L_380715
L_19481:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_19482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380715:
L_19472:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_380716
L_19474:
	movl %r13d,0x60(%rbp)
	movq $0x375D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_19475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_380716:
L_19473:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380718:
L_19468:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380720:
L_19418:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380721:
L_19492:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_19468
L_19493:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_380722
L_19495:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_19397
.p2align 0x4
L_380722:
L_19494:
	movq %r11,%r15
	jmp L_19397
.p2align 0x4
L_380724:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_19462
.p2align 0x4
L_380725:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_19462
.p2align 0x4
L_380726:
L_19496:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19497
L_19498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_19499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19499
.p2align 0x4
.long 0x5A2
L_19499:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_19497:
	xorl %ecx,%ecx
	jmp L_19467
.p2align 0x4
L_380728:
L_19457:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380729:
L_19455:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_19397
.p2align 0x4
L_380730:
L_19454:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_11
.p2align 0x4
L_380731:
L_19453:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_11
.p2align 0x4
L_380732:
L_19452:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x0(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_19397
.p2align 0x4
L_380733:
L_19430:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movslq %r14d,%r11
	movq %r11,%r14
	salq $0x4,%r14
	salq $0x4,%r11
	movq 0x8(%r15),%r10
	movq 0x8(%r10,%r11,1),%r9
	movl 0x0(%r10,%r14,1),%r11d
	testl %r11d,%r11d
	jnz L_380734
L_19431:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_19432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_13
.p2align 0x4
L_380734:
L_19437:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_19438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_13
.p2align 0x4
L_380735:
L_19401:
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	salq $0x4,%r15
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r11,%r15,1),%r10
	movl 0x0(%r11,%r14,1),%r9d
	testl %r9d,%r9d
	jnz L_380737
L_19402:
	movq 0x8(%r10),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je L_380736
L_19403:
	movq (globalObjptr+0xDF00)(%rip),%r15
L_19404:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380736:
L_19410:
	movq (globalObjptr+0xDF08)(%rip),%r15
	jmp L_19404
.p2align 0x4
L_380737:
L_19411:
	movq 0x8(%r10),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je L_380738
L_19412:
	movq (globalObjptr+0xDF00)(%rip),%r15
L_19413:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380738:
L_19429:
	movq (globalObjptr+0xDF08)(%rip),%r15
	jmp L_19413
.p2align 0x4
L_380739:
L_19398:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14,%r15,8),%r10
	cmpq $0x1,%r10
	je L_380740
L_19399:
	movq %r10,%r15
	jmp L_19397
.p2align 0x4
L_380740:
L_19400:
	movq %r11,%r15
	jmp L_19397
.p2align 0x4
L_380741:
L_19572:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380742:
L_19392:
	movq 0x8(%rbp),%r14
	movq $0xB15,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380743:
L_19573:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380744:
L_19574:
	movq (globalObjptr+0xCA8)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_19391
.p2align 0x4
.long 0x5F8
L_19396:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_19397
.p2align 0x4
.long 0x5F8
L_19546:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19547
L_19549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19550
.p2align 0x4
.long 0x52C
L_19550:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19547:
	movq 0x20(%rbp),%r15
L_19548:
	movq $0x619,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_19397
.p2align 0x4
.long 0x5F8
L_19552:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xE1F0)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5F8
L_19524:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19525
L_19527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19528
.p2align 0x4
.long 0x52C
L_19528:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19525:
	movq 0x20(%rbp),%r15
L_19526:
	movq $0x619,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_19397
.p2align 0x4
.long 0x5F8
L_19530:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xE1F0)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5F8
L_19502:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19503
L_19505:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19506
.p2align 0x4
.long 0x52C
L_19506:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19503:
	movq 0x20(%rbp),%r15
L_19504:
	movq $0x619,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_19397
.p2align 0x4
.long 0x5F8
L_19508:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xE1F0)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5FA
L_19482:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19483
L_19484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_19485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19485
.p2align 0x4
.long 0x5FB
L_19485:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_19483:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
L_19478:
	movq $0x194B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	jmp L_19397
.p2align 0x4
.long 0x5F9
L_19475:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_19476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x5F8
L_19432:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19433
L_19435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19436
.p2align 0x4
.long 0x52C
L_19436:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19433:
	movq 0x20(%rbp),%r15
L_19434:
	movq $0x619,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_19397
.p2align 0x4
.long 0x5F8
L_19438:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xE1F0)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5F8
L_19405:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19406
L_19408:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19409
.p2align 0x4
.long 0x52C
L_19409:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19406:
	movq 0x20(%rbp),%r15
L_19407:
	movq $0x619,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_19397
.p2align 0x4
.long 0x5F8
L_19414:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xE1F0)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x456
L_19553:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19554
L_19564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19565
.p2align 0x4
.long 0x579
L_19565:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19554:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19555:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_19418
L_19556:
	cmpq $0x1,%r14
	je L_380752
L_19557:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19555
.p2align 0x4
L_380752:
L_19558:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19559
L_19562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19563
.p2align 0x4
.long 0x559
L_19563:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19559:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380753
L_19560:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_19548
.p2align 0x4
L_380753:
L_19561:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_19548
.p2align 0x4
.long 0x456
L_19531:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19532
L_19542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19543
.p2align 0x4
.long 0x579
L_19543:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19532:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19533:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_19418
L_19534:
	cmpq $0x1,%r14
	je L_380757
L_19535:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19533
.p2align 0x4
L_380757:
L_19536:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19537
L_19540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19541
.p2align 0x4
.long 0x559
L_19541:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19537:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380758
L_19538:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_19526
.p2align 0x4
L_380758:
L_19539:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_19526
.p2align 0x4
.long 0x456
L_19509:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19510
L_19520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19521
.p2align 0x4
.long 0x579
L_19521:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19510:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19511:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_19418
L_19512:
	cmpq $0x1,%r14
	je L_380762
L_19513:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19511
.p2align 0x4
L_380762:
L_19514:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19515
L_19518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19519
.p2align 0x4
.long 0x559
L_19519:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19515:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380763
L_19516:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_19504
.p2align 0x4
L_380763:
L_19517:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_19504
.p2align 0x4
.long 0x5FA
L_19476:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19477
L_19479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_19480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19480
.p2align 0x4
.long 0x5FB
L_19480:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_19477:
	movq 0x20(%rbp),%r15
	jmp L_19478
.p2align 0x4
.long 0x456
L_19439:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19440
L_19450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19451
.p2align 0x4
.long 0x579
L_19451:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19440:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19441:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_19418
L_19442:
	cmpq $0x1,%r14
	je L_380768
L_19443:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19441
.p2align 0x4
L_380768:
L_19444:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19445
L_19448:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19449
.p2align 0x4
.long 0x559
L_19449:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19445:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380769
L_19446:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_19434
.p2align 0x4
L_380769:
L_19447:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_19434
.p2align 0x4
.long 0x456
L_19415:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19416
L_19427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19428
.p2align 0x4
.long 0x579
L_19428:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19416:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19417:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_19418
L_19419:
	cmpq $0x1,%r14
	je L_380773
L_19420:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19417
.p2align 0x4
L_380773:
L_19421:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19422
L_19425:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19426
.p2align 0x4
.long 0x559
L_19426:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19422:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380774
L_19423:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_19407
.p2align 0x4
L_380774:
L_19424:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_19407
.text
.p2align 0x4
.globl loop_3788
.hidden loop_3788
loop_3788:
L_19577:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_19675
L_19578:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380783
L_19579:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1057,%r14
	je L_380780
	cmpq $0x1058,%r14
	je L_380778
L_19580:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x8(%rbp)
	addq $0x8,%rbp
	leaq (simple_9+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380778:
L_19671:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_380779
L_19673:
	movl %r13d,0x30(%rbp)
	movq $0x3767,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_380779:
L_19588:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380780:
L_19584:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1059,%r15
	je L_380782
L_19633:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_19588
L_19635:
	movl %r13d,0x38(%rbp)
	movq $0x374D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_380782:
L_19585:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380783:
L_19675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19676
.p2align 0x4
.long 0x45F
L_19676:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_19579
.p2align 0x4
.long 0x1
simple_9:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19581
L_19582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_19583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19583
.p2align 0x4
.long 0x451
L_19583:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_19581:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_19674:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
layoutApp_0:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1054,%r13
	jne L_380786
L_19637:
	movq %r14,0x0(%rbp)
	movq %r11,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	jmp layoutApp_1
.p2align 0x4
L_380786:
L_19638:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
.long 0x2
L_19636:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%rbp),%r15
	jmp layoutApp_0
.p2align 0x4
.long 0x5EF
L_19586:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %rdx,%r14
	movq %r14,0x28(%rbp)
	jne L_19588
L_19589:
	cmpq $0x7FFFFFFF,%rdx
	ja L_380789
L_19590:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19591
.p2align 0x4
.long 0x5FD
L_19591:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_271:
	cmpq 0x30(%rbp),%r15
	jnl L_380788
L_19629:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0x28(%rbp),%r13
	jnb L_380787
L_19631:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_271
.p2align 0x4
L_380787:
L_19630:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380788:
L_19592:
	movb $0x1,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_19593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sortArray_0
.p2align 0x4
L_380789:
L_19632:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_19639:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144A,%r14
	jne L_380793
L_19641:
	movq 0x8(%r15),%r14
	movl 0x8(%r14),%r13d
	movl %r13d,0x20(%rbp)
	movl 0xC(%r14),%r13d
	movl %r13d,0x24(%rbp)
	movl 0x10(%r14),%r13d
	movl %r13d,0x28(%rbp)
	movq 0x30(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_380792
	cmpb $0x2,%r13b
	je L_380791
L_19642:
	movq (globalObjptr+0xE1F8)(%rip),%r15
L_19643:
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380791:
L_19670:
	movq (globalObjptr+0xE228)(%rip),%r15
	jmp L_19643
.p2align 0x4
L_380792:
L_19669:
	movq (globalObjptr+0xE220)(%rip),%r15
	jmp L_19643
.p2align 0x4
L_380793:
L_19640:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5FE
L_19593:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19594
L_19627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19628
.p2align 0x4
.long 0x601
L_19628:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19594:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_19588
L_19596:
	movq $0x3845,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x30(%rbp)
	movl %r14d,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_19597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_13
.p2align 0x4
.long 0x602
L_19644:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19645
L_19667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19668
.p2align 0x4
.long 0x607
L_19668:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19645:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE200)(%rip),%r14
	movq %r14,0x8(%r15)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_19646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x5FF
L_19597:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19598
L_19625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_19626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19626
.p2align 0x4
.long 0x4E9
L_19626:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_19598:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_19588
L_19600:
	movl %r13d,0x38(%rbp)
	movq $0x3C8F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x603
L_19646:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_19647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x459
L_19601:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_19602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp separateRight_0
.p2align 0x4
.long 0x603
L_19647:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19648
L_19665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19666
.p2align 0x4
.long 0x606
L_19666:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19648:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xE208)(%rip),%r13
	movq %r13,0x8(%r14)
	movl 0x24(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_380799
L_19649:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_19650:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_19651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380799:
L_19664:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_19650
.p2align 0x4
.long 0x459
L_19602:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_19603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x604
L_19651:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19652
L_19662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_19663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19663
.p2align 0x4
.long 0x605
L_19663:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_19652:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE210)(%rip),%r14
	movq %r14,0x8(%r15)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_19653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x459
L_19603:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19604
L_19623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19624
.p2align 0x4
.long 0x600
L_19624:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19604:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_380803
L_19605:
	decl %ecx
	jo L_380802
L_19607:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
L_19608:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA2F0)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_19609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_380802:
L_19606:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380803:
L_19622:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_19608
.p2align 0x4
.long 0x512
L_19653:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_19654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5ED
L_19609:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19610
L_19620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19621
.p2align 0x4
.long 0x4FC
L_19621:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19610:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_19611:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_19606
L_19612:
	cmpq $0x1,%r14
	je L_380805
L_19613:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_19611
.p2align 0x4
L_380805:
L_19614:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19615
L_19618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_19619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19619
.p2align 0x4
.long 0x51B
L_19619:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_19615:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_380806
L_19616:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
simple_10:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380806:
L_19617:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp simple_10
.p2align 0x4
.long 0x512
L_19654:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19655
L_19660:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_19661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19661
.p2align 0x4
.long 0x514
L_19661:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_19655:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE218)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_19656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x1
L_19656:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19657
L_19658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_19659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19659
.p2align 0x4
.long 0x451
L_19659:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_19657:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl sortArray_0
.hidden sortArray_0
sortArray_0:
L_19677:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_19734
L_19678:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380834
L_19679:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x10(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x4(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	je L_380812
L_19680:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380812:
L_19681:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jz L_380833
L_19682:
	movq $0x1733,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	cmpq $0x0,0x10(%rbp)
	jna L_19684
L_19685:
	movq 0x0(%r13),%r14
	cmpl $0x0,%r15d
	jl L_380831
L_19686:
	movq %r14,0x20(%rbp)
	movl $0x0,0x28(%rbp)
	movl $0x0,0x2C(%rbp)
.p2align 0x4,,0x7
loop_272:
	movl 0x2C(%rbp),%ecx
	cmpl 0x4(%rbp),%ecx
	jnl L_380827
L_19698:
	movslq %ecx,%r15
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x30(%rbp)
	movb 0x0(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_380822
	cmpb $0x2,%r14b
	je L_380817
L_19699:
	movq 0x8(%r13),%r14
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_380814
L_19700:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_380813
L_19708:
	movq %r13,%r15
L_19705:
	movq %r15,0x20(%rbp)
	movl %ecx,0x28(%rbp)
	incl 0x2C(%rbp)
	jmp loop_272
.p2align 0x4
L_380813:
L_19701:
	movq %r10,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_19702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380814:
L_19709:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movq %r10,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_380816
L_19711:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r15d,%r14d
	jl L_380815
.p2align 0x4,,0x7
L_19707:
	movq 0x20(%rbp),%r15
	movl 0x28(%rbp),%ecx
	jmp L_19705
.p2align 0x4
L_380815:
.p2align 0x4,,0x7
L_19704:
	movq 0x30(%rbp),%r15
	movl 0x2C(%rbp),%ecx
	jmp L_19705
.p2align 0x4
L_380816:
L_19710:
	movq 0x20(%rbp),%r15
	movl 0x28(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_19705
.p2align 0x4
L_380817:
L_19723:
	movq 0x8(%r13),%r14
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_380819
L_19724:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_380818
L_19726:
	movq %r13,%r15
	jmp L_19705
.p2align 0x4
L_380818:
L_19725:
	movq %r10,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_19702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380819:
L_19727:
	shrq $0x1,%r14
	movl %r14d,%r11d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_380821
L_19729:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r11d,%r14d
	jl L_19704
L_19730:
	movq 0x20(%rbp),%r15
	movl 0x28(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_19705
.p2align 0x4
L_380821:
L_19728:
	movq 0x20(%rbp),%r15
	movl 0x28(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_19705
.p2align 0x4
L_380822:
L_19714:
	movq 0x8(%r13),%r11
	movq 0x20(%rbp),%r10
	movq 0x8(%r10),%r9
	movq %r11,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_380824
L_19715:
	movq %r9,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_380823
L_19717:
	movq %r13,%r15
	jmp L_19705
.p2align 0x4
L_380823:
L_19716:
	movq %r9,0x40(%rbp)
	movq %r11,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_19702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380824:
L_19718:
	shrq $0x1,%r11
	movl %r11d,%r15d
	movq %r9,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	jne L_380826
L_19720:
	shrq $0x1,%r9
	movl %r9d,%r11d
	cmpl %r15d,%r11d
	jl L_19704
	jmp L_19707
.p2align 0x4
L_380826:
L_19719:
	movq 0x20(%rbp),%r15
	movl 0x28(%rbp),%r11d
	xchgl %r11d,%ecx
	jmp L_19705
.p2align 0x4
L_380827:
L_19687:
	movl 0x4(%rbp),%r15d
	decl %r15d
	movslq 0x28(%rbp),%r14
	movq 0x10(%rbp),%r13
	cmpq %r13,%r14
	jnb L_19684
L_19689:
	movq 0x8(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_380829
L_19691:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_380828
L_19693:
	movb 0x0(%rbp),%r14b
	movb %r14b,0x20(%rbp)
	movq %r11,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%rbp)
	movl %r15d,0x18(%rbp)
	movl $0x0,0x1C(%rbp)
	addq $0x18,%rbp
	leaq (L_19694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_1
.p2align 0x4
L_380828:
L_19692:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380829:
L_19684:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380831:
L_19732:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380833:
L_19733:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380834:
L_19734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19735
.p2align 0x4
.long 0x494
L_19735:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_19679
.p2align 0x4
.long 0x608
L_19702:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jnz L_19707
	jmp L_19704
.p2align 0x4
.long 0x521
L_19694:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19695
L_19696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19697
.p2align 0x4
.long 0x494
L_19697:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19695:
	movq $0x3D09,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	movl 0x4(%rbp),%r14d
	movl %r14d,0x8(%rbp)
	movq %r15,0x0(%rbp)
	movl $0x1,0xC(%rbp)
	jmp fold_0
.text
.p2align 0x4
.globl qsort_1
.hidden qsort_1
qsort_1:
L_19736:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_273
L_19844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_19845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19845
.p2align 0x4
.long 0x2C
L_19845:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
loop_273:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_19738
L_19739:
	cmpl $0x14,%r15d
	jng L_380839
L_19741:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0xC(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x20(%rbp)
	jo L_380838
L_19742:
	movl %r15d,0x30(%rbp)
	movl %r13d,0x34(%rbp)
	addq $0x30,%rbp
	leaq (L_19743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_380838:
L_19738:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380839:
L_19740:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x609
L_19743:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_19744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x490
L_19744:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0xC(%rbp)
	jo L_19738
L_19745:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %ecx,%r10
	movq %r10,0x38(%rbp)
	cmpq %r15,%r10
	jnb L_19747
L_19748:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_19747
L_19750:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_19747
L_19752:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_19747
L_19754:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq %r14,%r10
	jnb L_19747
L_19756:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_19738
L_19757:
	movl %r15d,0xC(%rbp)
.p2align 0x4,,0x7
loop_275:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_19738
L_19758:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_19747
L_19760:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movb 0x8(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_380874
	cmpb $0x2,%r15b
	je L_380869
L_19761:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r13),%r15
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_380842
L_19762:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_380841
L_19820:
	jmp loop_275
.p2align 0x4
L_380841:
L_19763:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_19764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380842:
L_19821:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_380868
L_19823:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl %r13d,%r14d
	jl L_380867
.p2align 0x4,,0x7
L_19768:
	movl 0xC(%rbp),%ecx
.p2align 0x4,,0x7
loop_276:
	decl %ecx
	movl %ecx,0xC(%rbp)
	jo L_19738
L_19769:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_19747
L_19771:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movb 0x8(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_380860
	cmpb $0x2,%r15b
	je L_380855
L_19772:
	movq 0x8(%r13),%r15
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_380844
L_19773:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_380843
L_19796:
	jmp loop_276
.p2align 0x4
L_380843:
L_19774:
	movq %r13,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_19775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380844:
L_19797:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_19779
L_19799:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_380853
.p2align 0x4,,0x7
L_19779:
	movl 0x58(%rbp),%ecx
	cmpl %ecx,0xC(%rbp)
	jl L_380849
L_19780:
	movq 0x60(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq %r14,%r15
	jnb L_19747
L_19782:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_19747
L_19784:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x40(%rbp),%r13
	cmpq %r13,%r15
	jnb L_19747
L_19786:
	movq 0x28(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_380845
L_19788:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_275
.p2align 0x4
L_380845:
L_19747:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380849:
L_19789:
	movq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x30(%rbp),%r11
	jnb L_19747
L_19791:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x28(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x40(%rbp),%r11
	jnb L_19747
L_19793:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0xC(%rbp),%r15d
	decl %r15d
	jo L_19738
L_19794:
	movl %r15d,0x68(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_19795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_1
.p2align 0x4
L_380853:
.p2align 0x4,,0x7
L_19777:
	movl 0xC(%rbp),%ecx
	jmp loop_276
.p2align 0x4
L_380855:
L_19811:
	movq 0x8(%r13),%r15
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_380857
L_19812:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_380856
L_19814:
	jmp loop_276
.p2align 0x4
L_380856:
L_19813:
	movq %r13,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_19775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380857:
L_19815:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_19779
L_19817:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jnl L_19779
L_19819:
	jmp loop_276
.p2align 0x4
L_380860:
L_19802:
	movq 0x8(%r13),%r14
	movq 0x50(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_380862
L_19803:
	movq %r11,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_380861
L_19805:
	jmp loop_276
.p2align 0x4
L_380861:
L_19804:
	movq %r11,0x78(%rbp)
	movq %r14,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_19775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380862:
L_19806:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_19779
L_19808:
	shrq $0x1,%r11
	movl %r11d,%r14d
	cmpl %r13d,%r14d
	jl L_19777
	jmp L_19779
.p2align 0x4
L_380867:
.p2align 0x4,,0x7
L_19766:
	movl 0x58(%rbp),%ecx
	jmp loop_275
.p2align 0x4
L_380868:
L_19822:
	movl 0xC(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_276
.p2align 0x4
L_380869:
L_19835:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r13),%r15
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_380871
L_19836:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_380870
L_19838:
	jmp loop_275
.p2align 0x4
L_380870:
L_19837:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_19764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380871:
L_19839:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_380873
L_19841:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl %r13d,%r14d
	jl loop_275
L_19842:
	movl 0xC(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_276
.p2align 0x4
L_380873:
L_19840:
	movl 0xC(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_276
.p2align 0x4
L_380874:
L_19826:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r11
	movq 0x8(%r13),%r14
	movq %r11,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_380876
L_19827:
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_380875
L_19829:
	jmp loop_275
.p2align 0x4
L_380875:
L_19828:
	movq %r14,0x70(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_19764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_380876:
L_19830:
	shrq $0x1,%r11
	movl %r11d,%r13d
	movq %r14,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	jne L_380878
L_19832:
	shrq $0x1,%r14
	movl %r14d,%r11d
	cmpl %r13d,%r11d
	jl L_19766
	jmp L_19768
.p2align 0x4
L_380878:
L_19831:
	movl 0xC(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp loop_276
.p2align 0x4
.long 0x60A
L_19764:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_19768
	jmp L_19766
.p2align 0x4
.long 0x60B
L_19775:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_19779
	jmp L_19777
.p2align 0x4
.long 0x60C
L_19795:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_273
.text
.p2align 0x4
.globl tabulate_13
.hidden tabulate_13
tabulate_13:
L_19846:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_19847
L_19930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19931
.p2align 0x4
.long 0x457
L_19931:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19847:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_380913
L_19848:
	cmpq $0x7FFFFFFF,%rdx
	ja L_380912
L_19849:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_19850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19850
.p2align 0x4
.long 0x452
L_19850:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_19851:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_277:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380911
.p2align 0x4,,0x7
L_19852:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_380910
L_19854:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1C1F,%r13
	je L_380909
	cmpq $0x1C20,%r13
	je L_380908
	cmpq $0x1C21,%r13
	je L_380907
	cmpq $0x1C22,%r13
	je L_380905
	cmpq $0x1C23,%r13
	je L_380892
	cmpq $0x1C24,%r13
	je L_380891
	cmpq $0x1C25,%r13
	je L_380890
L_19855:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_19856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3790
.p2align 0x4
L_380890:
L_19921:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x30(%rbp)
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_19922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3791
.p2align 0x4
L_380891:
L_19916:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_19917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3792
.p2align 0x4
L_380892:
L_19876:
	movq 0x0(%r15),%r11
	movslq %r14d,%r13
	movq 0x8(%r15),%r10
	movq 0x0(%r10,%r13,8),%r9
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r8
	movq %r8,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1057,%r15
	je L_380901
	cmpq $0x1058,%r15
	je L_380899
L_19877:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_380898
L_19880:
	xorl %ebx,%ebx
	movq %r11,%r14
.p2align 0x4,,0x7
loop_278:
	cmpl %ebx,%ecx
	je L_380897
L_19881:
	movslq %ebx,%r11
	cmpq %r15,%r11
	jnb L_380896
L_19883:
	movq %r11,%r10
	salq $0x4,%r10
	movq 0x0(%r14,%r10,1),%r9
	salq $0x4,%r11
	movq 0x8(%r14,%r11,1),%r10
	movq 0x8(%r10),%r8
	movq 0x8(%r13),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r8)
	je L_380894
L_19884:
	incl %ebx
	jo L_380893
L_19886:
	jmp loop_278
.p2align 0x4
L_380893:
L_19885:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380894:
L_19887:
	movq %r9,0x28(%rbp)
.p2align 0x4,,0x7
L_19888:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380895
.p2align 0x4,,0x7
L_19889:
	movq $0x103B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
.p2align 0x4,,0x7
L_19858:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_277
.p2align 0x4
L_380895:
L_19890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19891
.p2align 0x4
.long 0x579
L_19891:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_19889
.p2align 0x4
L_380896:
L_19874:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380897:
L_19892:
	movq (globalObjptr+0x4D28)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380898:
L_19879:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380899:
L_19909:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r10,%r14
	jne L_19879
L_19911:
	movl %r13d,0x40(%rbp)
	movq $0x3AF3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	addq $0x38,%rbp
	leaq (L_19912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_380901:
L_19893:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1059,%r14
	je L_380903
L_19902:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r10
	cmpq %r10,%r15
	jne L_19879
L_19904:
	movl %r13d,0x38(%rbp)
	movq $0x3AF7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	addq $0x30,%rbp
	leaq (L_19905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_380903:
L_19894:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r10
	cmpq %r10,%r15
	jne L_19879
L_19896:
	movl %r13d,0x38(%rbp)
	movq $0x3847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	addq $0x30,%rbp
	leaq (L_19897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_13
.p2align 0x4
L_380905:
L_19872:
	movq 0x0(%r15),%r13
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_19874
L_19875:
	movq 0x0(%r13,%r15,8),%r13
	movq %r13,%r15
	jmp L_19858
.p2align 0x4
L_380907:
L_19871:
	movslq %r14d,%r13
	movq 0x0(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x103B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
	jmp L_19858
.p2align 0x4
L_380908:
L_19866:
	movslq %r14d,%r13
	movq 0x0(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_19867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3793
.p2align 0x4
L_380909:
L_19861:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_19862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_22
.p2align 0x4
L_380910:
L_19853:
	movq 0x8(%rbp),%r14
	movq $0xAF3,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380911:
L_19926:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_19927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19927
.p2align 0x4
.long 0x45C
L_19927:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_19852
.p2align 0x4
L_380912:
L_19928:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380913:
L_19929:
	movq (globalObjptr+0xC28)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_19851
.p2align 0x4
.long 0x456
L_19856:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19857
L_19859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19860
.p2align 0x4
.long 0x579
L_19860:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19857:
	movq $0x103B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_19858
.p2align 0x4
.long 0x456
L_19922:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19923
L_19924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19925
.p2align 0x4
.long 0x579
L_19925:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19923:
	movq $0x103B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_19858
.p2align 0x4
.long 0x456
L_19917:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19918
L_19919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19920
.p2align 0x4
.long 0x579
L_19920:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19918:
	movq $0x103B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_19858
.p2align 0x4
.long 0x557
L_19912:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19913
L_19914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_19915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19915
.p2align 0x4
.long 0x575
L_19915:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_19913:
	movq $0x20B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	jmp L_19888
.p2align 0x4
.long 0x456
L_19905:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19906
L_19907:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19908
.p2align 0x4
.long 0x579
L_19908:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19906:
	movq $0x20B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
L_19899:
	movq $0x20AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	jmp L_19888
.p2align 0x4
.long 0x456
L_19897:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19898
L_19900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19901
.p2align 0x4
.long 0x579
L_19901:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19898:
	movq $0x20B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_19899
.p2align 0x4
.long 0x456
L_19867:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19868
L_19869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19870
.p2align 0x4
.long 0x579
L_19870:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19868:
	movq $0x103B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_19858
.p2align 0x4
.long 0x456
L_19862:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19863
L_19864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_19865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19865
.p2align 0x4
.long 0x579
L_19865:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_19863:
	movq $0x103B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_19858
.text
.p2align 0x4
.globl loop_3790
.hidden loop_3790
loop_3790:
L_19932:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_19972
L_19933:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_380935
L_19934:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq 0x0(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0x1057,%r13
	je L_380931
	cmpq $0x1058,%r13
	je L_380929
L_19935:
	movq 0x0(%r11),%r10
	movq %r10,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%ecx
	movslq %ecx,%r11
	cmpq %r13,%r11
	jne L_380928
L_19938:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_279:
	cmpl %ecx,%ebx
	je L_380926
L_19939:
	movslq %ebx,%r11
	cmpq %r13,%r11
	jnb L_380925
L_19941:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x0(%r15,%r11,8),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r9)
	je L_380924
L_19942:
	incl %ebx
	jo L_380923
L_19944:
	jmp loop_279
.p2align 0x4
L_380923:
L_19943:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380924:
L_19945:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380925:
L_19940:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380926:
L_19946:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19947
L_19948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19949
.p2align 0x4
.long 0x494
L_19949:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19947:
	movq $0x20AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380928:
L_19937:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380929:
L_19965:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq %r14,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_19937
L_19967:
	movl %r13d,0x28(%rbp)
	movq $0x3B01,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_19968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_380931:
L_19950:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1059,%r14
	je L_380933
L_19958:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_19937
L_19960:
	movl %r13d,0x10(%rbp)
	movq $0x3AE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_19961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_380933:
L_19951:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_19937
L_19953:
	movl %r13d,0x10(%rbp)
	movq $0x383D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_19954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_13
.p2align 0x4
L_380935:
L_19972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_19973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19973
.p2align 0x4
.long 0x45F
L_19973:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_19934
.p2align 0x4
.long 0x2B
L_19968:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19969
L_19970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_19971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19971
.p2align 0x4
.long 0x2C
L_19971:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_19969:
	movq $0x20B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_19961:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19962
L_19963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_19964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19964
.p2align 0x4
.long 0x451
L_19964:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_19962:
	movq $0x20B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
record_0:
	movq $0x20AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_19954:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_19955
L_19956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_19957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19957
.p2align 0x4
.long 0x451
L_19957:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_19955:
	movq $0x20B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp record_0
.text
.p2align 0x4
.globl tabulate_10
.hidden tabulate_10
tabulate_10:
L_19974:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_19975
L_20087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_20088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20088
.p2align 0x4
.long 0x457
L_20088:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_19975:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_380985
L_19976:
	cmpq $0x7FFFFFFF,%rdx
	ja L_380984
L_19977:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1449,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_19978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_19978
.p2align 0x4
.long 0x452
L_19978:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_19979:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_280:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_380983
L_19981:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_380982
L_19982:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1D74,%rax
	cmpq $0xC,%rax
	ja L_380940
	leaq jumpTable_22(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_22:
.quad L_380981,L_380980,L_380979,L_380978,L_380977,L_380963,L_380960,L_380946,L_380945,L_380944,L_380943,L_380942,L_380941
.text
.p2align 0x4
L_380940:
L_19983:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3790
.p2align 0x4
L_380941:
L_20083:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3790
.p2align 0x4
L_380942:
L_20082:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3791
.p2align 0x4
L_380943:
L_20081:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_22
.p2align 0x4
L_380944:
L_20080:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3792
.p2align 0x4
L_380945:
L_20079:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3793
.p2align 0x4
L_380946:
L_20039:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movslq %r14d,%r15
	movq 0x8(%r13),%r10
	movq 0x0(%r10,%r15,8),%r9
	movq %r9,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0x1057,%r15
	je L_380955
	cmpq $0x1058,%r15
	je L_380952
L_20040:
	movq 0x0(%r9),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_380951
L_20042:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_282:
	cmpl %ecx,%ebx
	je L_380950
L_20043:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_380949
L_20045:
	movq %r13,%r11
	salq $0x4,%r11
	movq 0x20(%rbp),%r10
	movq 0x0(%r10,%r11,1),%r9
	salq $0x4,%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r10,%r13,1),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r11)
	je L_380948
L_20046:
	incl %ebx
	jo L_380947
L_20047:
	jmp loop_282
.p2align 0x4
L_380947:
L_20001:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380948:
L_20048:
	movq %r9,%r15
.p2align 0x4,,0x7
L_19985:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_280
.p2align 0x4
L_380949:
L_19998:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380950:
L_20005:
	movq (globalObjptr+0x4D28)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380951:
L_19994:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380952:
L_20069:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20070
L_20077:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20078
.p2align 0x4
.long 0x579
L_20078:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20070:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_19994
L_20072:
	movl %r13d,0x48(%rbp)
	movq $0x3AF3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_20073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_380955:
L_20050:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20051
L_20067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20068
.p2align 0x4
.long 0x579
L_20068:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20051:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1059,%r15
	je L_380957
L_20060:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_19994
L_20062:
	movl %r13d,0x30(%rbp)
	movq $0x3AF7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_20063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_380957:
L_20052:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_19994
L_20054:
	movl %r13d,0x30(%rbp)
	movq $0x3847,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_20055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_13
.p2align 0x4
L_380960:
L_20035:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpl $0x0,%r14d
	je L_380962
	cmpl $0x1,%r14d
	je L_380961
L_20036:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380961:
L_20038:
	movq %r11,%r15
	jmp L_19985
.p2align 0x4
L_380962:
	movq %r13,%r15
	jmp L_19985
.p2align 0x4
L_380963:
L_19991:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movslq %r14d,%r15
	movq 0x8(%r13),%r10
	movq 0x0(%r10,%r15,8),%r9
	movq %r9,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0x1057,%r15
	je L_380972
	cmpq $0x1058,%r15
	je L_380969
L_19992:
	movq 0x0(%r9),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_19994
L_19995:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_281:
	cmpl %ecx,%ebx
	je L_20005
L_19996:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_19998
L_19999:
	movq %r13,%r11
	salq $0x4,%r11
	movq 0x20(%rbp),%r10
	movq 0x0(%r10,%r11,1),%r9
	salq $0x4,%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r10,%r13,1),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r11)
	je L_380965
L_20000:
	incl %ebx
	jo L_20001
L_20002:
	jmp loop_281
.p2align 0x4
L_380965:
L_20003:
	movq %r9,%r15
	jmp L_19985
.p2align 0x4
L_380969:
L_20025:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20026
L_20033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20034
.p2align 0x4
.long 0x579
L_20034:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20026:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_19994
L_20028:
	movl %r13d,0x48(%rbp)
	movq $0x3AF3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_20029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_380972:
L_20006:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20007
L_20023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20024
.p2align 0x4
.long 0x579
L_20024:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20007:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1059,%r15
	je L_380974
L_20016:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_19994
L_20018:
	movl %r13d,0x30(%rbp)
	movq $0x3AF7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_20019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_380974:
L_20008:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_19994
L_20010:
	movl %r13d,0x30(%rbp)
	movq $0x3847,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_20011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_13
.p2align 0x4
L_380977:
L_19990:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3793
.p2align 0x4
L_380978:
L_19989:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3792
.p2align 0x4
L_380979:
L_19988:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r14),%r11
	movq %r11,%r15
	jmp L_19985
.p2align 0x4
L_380980:
L_19987:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_22
.p2align 0x4
L_380981:
L_19986:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_19984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3791
.p2align 0x4
L_380982:
L_20084:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380983:
L_19980:
	movq 0x8(%rbp),%r14
	movq $0x9E3,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380984:
L_20085:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380985:
L_20086:
	movq (globalObjptr+0xB28)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_19979
.p2align 0x4
.long 0x5F8
L_19984:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_19985
.p2align 0x4
.long 0x568
L_20073:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20074
L_20075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20076
.p2align 0x4
.long 0x591
L_20076:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_20074:
	movq $0x20B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_19985
.p2align 0x4
.long 0x5F8
L_20063:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20064
L_20065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20066
.p2align 0x4
.long 0x52C
L_20066:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20064:
	movq $0x20B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_20057:
	movq $0x20AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_19985
.p2align 0x4
.long 0x5F8
L_20055:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20056
L_20058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20059
.p2align 0x4
.long 0x52C
L_20059:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20056:
	movq $0x20B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_20057
.p2align 0x4
.long 0x568
L_20029:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20030
L_20031:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20032
.p2align 0x4
.long 0x591
L_20032:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_20030:
	movq $0x20B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_19985
.p2align 0x4
.long 0x5F8
L_20019:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20020
L_20021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20022
.p2align 0x4
.long 0x52C
L_20022:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20020:
	movq $0x20B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_20013:
	movq $0x20AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_19985
.p2align 0x4
.long 0x5F8
L_20011:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20012
L_20014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20015
.p2align 0x4
.long 0x52C
L_20015:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20012:
	movq $0x20B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_20013
.text
.p2align 0x4
.globl loop_3791
.hidden loop_3791
loop_3791:
L_20089:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_20259
L_20090:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381010
L_20091:
	movq 0x8(%rbp),%r14
	movq 0x40(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x38(%r14),%r11
	movq %r11,0x18(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x20(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xDEB,%r14
	je L_381006
	cmpq $0xDEC,%r14
	je L_381004
L_20092:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_20100
L_20093:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
L_20094:
	movq 0x18(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x10(%r8),%r14
	movq 0x20(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x10(%r8),%r13
	cmpq %r13,%r14
	je L_381001
L_20095:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	jne L_380998
L_20103:
	xorq %r10,%r10
.p2align 0x4,,0x7
vectorEqualLoop_95:
	cmpq %r10,%r11
	je L_380996
L_20104:
	movb 0x0(%r13,%r10,1),%r9b
	cmpb %r9b,0x0(%r14,%r10,1)
	jne L_380993
L_20111:
	incq %r10
	jmp vectorEqualLoop_95
.p2align 0x4
L_380993:
L_20105:
	cmpq $0x1,%r15
	je L_380994
L_20106:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x20(%rbp)
	jmp L_20094
.p2align 0x4
L_380994:
L_20107:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20100
L_20109:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_20110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20110
.p2align 0x4
.long 0x2C
L_20110:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_20100:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x20ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14)
var_0:
	movq $0x20AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_380996:
L_20112:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20113
L_20114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20115
.p2align 0x4
.long 0x49D
L_20115:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20113:
	movq 0x20(%rbp),%r15
	jmp var_0
.p2align 0x4
L_380998:
L_20096:
	cmpq $0x1,%r15
	je L_380999
L_20097:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x20(%rbp)
	jmp L_20094
.p2align 0x4
L_380999:
L_20098:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20100
L_20101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_20102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20102
.p2align 0x4
.long 0x2C
L_20102:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_20100
.p2align 0x4
L_381001:
L_20116:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20117
L_20118:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20119
.p2align 0x4
.long 0x49D
L_20119:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20117:
	movq 0x20(%rbp),%r15
	jmp var_0
.p2align 0x4
L_381004:
L_20137:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_381005
L_20139:
	movl %r13d,0x68(%rbp)
	movq $0x3AE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_20140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_381005:
L_20124:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381006:
L_20121:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDED,%r15
	je L_381008
L_20130:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_20124
L_20132:
	movl %r11d,0x10(%rbp)
	movq $0x3AFF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_20133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_381008:
L_20122:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_20124
L_20125:
	movl %r11d,0x10(%rbp)
	movq $0x384B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_20126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_13
.p2align 0x4
L_381010:
L_20259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_20260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20260
.p2align 0x4
.long 0x45F
L_20260:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_20091
.p2align 0x4
.long 0x60D
L_20140:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20141
L_20257:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_20258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20258
.p2align 0x4
.long 0x61D
L_20258:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_20141:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r10d
	movl %r10d,0x58(%rbp)
	movslq %r10d,%r9
	cmpq %r14,%r9
	jne L_20124
L_20143:
	cmpq $0x1,%r13
	jne normal_0
L_20245:
	cmpl $0x2,%r10d
	jne normal_0
L_20246:
	movq 0x8(%r11),%r13
	movq 0x48(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r8
	cmpq %r8,0x8(%r13)
	jne normal_8
L_20248:
	cmpq $0x0,%r14
	jna L_20168
L_20250:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	jna L_381012
L_20252:
	movq 0x8(%r15),%r14
	movq $0x3AF5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movl $0x2,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_20253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_381012:
L_20168:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
normal_8:
normal_0:
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_20144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookupLongtycon_0
.p2align 0x4
.long 0x1
L_20133:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20134
L_20135:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_20136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20136
.p2align 0x4
.long 0x451
L_20136:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_20134:
	movq $0x20B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
record_1:
	movq $0x20AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_20126:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20127
L_20128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_20129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20129
.p2align 0x4
.long 0x451
L_20129:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_20127:
	movq $0x20B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp record_1
.p2align 0x4
.long 0x61B
L_20253:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20254
L_20255:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_20256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20256
.p2align 0x4
.long 0x61C
L_20256:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_20254:
	movq $0x20B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x60E
L_20144:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20145
L_20243:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_20244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20244
.p2align 0x4
.long 0x61A
L_20244:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_20145:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_381042
L_20146:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_20148
L_20207:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movl %r15d,0x20(%rbp)
	cmpl 0x58(%rbp),%r15d
	je L_381019
L_20208:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xE230)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_20209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_381019:
L_20148:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x105C,%r15
	je L_381021
	cmpq $0x105D,%r15
	je L_381020
L_20149:
	movq 0x0(%r14),%r15
	movq $0x20B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381020:
L_20206:
	movq 0x8(%r14),%r15
	movq $0x20B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381021:
L_20150:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	movq %r10,0x20(%rbp)
	cmpq %r10,%r14
	jne L_20124
L_20152:
	testl %r11d,%r11d
	jnz L_381039
L_20203:
	movl 0x58(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_381022
L_20205:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381022:
	movl %r11d,%ecx
L_20154:
	cmpl %ecx,0x58(%rbp)
	je L_381023
L_20155:
	movq (globalObjptr+0x4E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381023:
L_20156:
	movq 0x20(%rbp),%rdx
	testq %rdx,%rdx
	jz L_381038
L_20157:
	cmpq $0x7FFFFFFF,%rdx
	ja L_381037
L_20158:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15C9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20159
.p2align 0x4
.long 0x4E1
L_20159:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_20160:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_283:
	cmpq 0x20(%rbp),%r15
	jnl L_381024
L_20200:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r8
	movq 0x28(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r11
	movq %r9,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_283
.p2align 0x4
L_381024:
L_20161:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20162
L_20198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20199
.p2align 0x4
.long 0x60F
L_20199:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20162:
	movq 0x28(%rbp),%r13
	movq $0xB51,0xFFFFFFFFFFFFFFF8(%r13)
	movq 0x18(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1057,%r15
	je L_381032
	cmpq $0x1058,%r15
	je L_381030
L_20163:
	movq 0x0(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_20124
L_20165:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_284:
	cmpl %ecx,%ebx
	je L_381028
L_20166:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_20168
L_20169:
	movq %r13,%r11
	salq $0x4,%r11
	movq 0x28(%rbp),%r10
	movq 0x0(%r10,%r11,1),%r9
	salq $0x4,%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r10,%r13,1),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r11)
	je L_381026
L_20170:
	incl %ebx
	jo L_381025
L_20172:
	jmp loop_284
.p2align 0x4
L_381025:
L_20171:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381026:
L_20173:
	movq %r9,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381028:
L_20174:
	movq (globalObjptr+0x4D28)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381030:
L_20191:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_20124
L_20193:
	movl %r11d,0x38(%rbp)
	movq $0x3AF3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_20194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_381032:
L_20175:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1059,%r14
	je L_381034
L_20184:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_20124
L_20186:
	movl %r11d,0x10(%rbp)
	movq $0x3AF7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_20187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_381034:
L_20176:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r15
	jne L_20124
L_20178:
	movl %r11d,0x10(%rbp)
	movq $0x3847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_20179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_13
.p2align 0x4
L_381037:
L_20201:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381038:
L_20202:
	movq (globalObjptr+0x4D30)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_20160
.p2align 0x4
L_381039:
	movl %r11d,%ecx
	jmp L_20154
.p2align 0x4
L_381042:
L_20242:
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x610
L_20209:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_20210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
.long 0x459
L_20194:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20195
L_20196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20197
.p2align 0x4
.long 0x508
L_20197:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20195:
	movq $0x20B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_20187:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20188
L_20189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_20190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20190
.p2align 0x4
.long 0x451
L_20190:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_20188:
	movq $0x20B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
L_20181:
	movq $0x20AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_20179:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20180
L_20182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_20183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20183
.p2align 0x4
.long 0x451
L_20183:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_20180:
	movq $0x20B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_20181
.p2align 0x4
.long 0x611
L_20210:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20211
L_20239:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_20240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20240
.p2align 0x4
.long 0x619
L_20240:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_20211:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xE238)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_20212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x612
L_20212:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_20213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x613
L_20213:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_20214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x613
L_20214:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpl $0x1,0x58(%rbp)
	je L_381048
L_20215:
	movq (globalObjptr+0xE240)(%rip),%r15
L_20216:
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_20217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_381048:
L_20238:
	movq (globalObjptr+0xE258)(%rip),%r15
	jmp L_20216
.p2align 0x4
.long 0x614
L_20217:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xE248)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_20218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x615
L_20218:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_20219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x616
L_20219:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_20220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x616
L_20220:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20221
L_20236:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_20237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20237
.p2align 0x4
.long 0x618
L_20237:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_20221:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_20222:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_20171
L_20223:
	cmpq $0x1,%r14
	je L_381049
L_20224:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_20222
.p2align 0x4
L_381049:
L_20225:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20226
L_20234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_20235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20235
.p2align 0x4
.long 0x617
L_20235:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_20226:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_381051
L_20227:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_20228:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_20171
L_20229:
	movl %r13d,0x0(%r15)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_20230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_381051:
L_20233:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_20228
.p2align 0x4
.long 0x51A
L_20230:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_381055
L_20231:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381055:
L_20232:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl lookupLongtycon_0
.hidden lookupLongtycon_0
lookupLongtycon_0:
L_20261:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_20463
L_20262:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381086
L_20263:
	movq 0x10(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	cmpq $0x1,%r15
	je L_381072
L_20264:
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%rbp),%r11
	movq 0x38(%r11),%r10
	movq 0x10(%r10),%r9
	movq 0x0(%r9),%r8
	movq %r8,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_381071
L_20266:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_381070
L_20267:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x50(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_20269:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_20270
L_20421:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_20270
L_20422:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x40(%rbp)
	je L_381064
L_20270:
	movl 0x50(%rbp),%r13d
	incl %r13d
	movl %r13d,0x54(%rbp)
	jo L_381063
L_20272:
	cmpq $0x1,%r15
	je L_381056
L_20273:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x50(%rbp)
	jmp L_20269
.p2align 0x4
L_381056:
L_20274:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20275
L_20419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_20420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20420
.p2align 0x4
.long 0x632
L_20420:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_20275:
	movl 0x54(%rbp),%ecx
L_20276:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_381061
L_20278:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_20280
L_20418:
	movl %ecx,0x0(%r15)
L_20280:
	movq $0x1133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x112F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x112B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_20281:
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je doit_31
L_20282:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	movq 0x18(%r13),%r11
	movq 0x8(%r15),%r14
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r10
	movq %r10,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x8(%r15)
	movq $0x143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r10
	movq %r10,0x8(%r15)
	cmpq $0x1,%r13
	je L_381059
L_20283:
	movq 0x0(%r13),%r9
	movq 0x0(%r9),%r14
	movq 0x0(%r10),%r13
	cmpq $0x1,%r14
	je L_381058
L_20284:
	movq 0x0(%r14),%r10
	cmpq $0x1,%r13
	je L_381057
L_20285:
	movq 0x8(%r13),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r11,%r14
L_20286:
	movq %r14,0x18(%rbp)
	movq $0x145,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x10(%rbp)
	addq $0x18,%r12
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp lookupLongtycon_1
.p2align 0x4
L_381057:
L_20287:
	movq %r14,%r13
	movq %r11,%r14
	jmp L_20286
.p2align 0x4
L_381058:
L_20288:
	movq %r11,%r14
	jmp L_20286
.p2align 0x4
L_381059:
L_20289:
	movq 0x0(%r10),%r9
	movq %r11,%r14
	xchgq %r9,%r13
	jmp L_20286
.p2align 0x4
doit_31:
doit_0:
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_20291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1224
.p2align 0x4
L_381061:
L_20277:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381063:
L_20271:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381064:
L_20424:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20425
L_20429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_20430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20430
.p2align 0x4
.long 0x633
L_20430:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_20425:
	movl 0x50(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_20277
L_20426:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_381065
L_20427:
	movq 0x58(%rbp),%r15
	jmp L_20281
.p2align 0x4
L_381065:
L_20428:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x50(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x58(%rbp),%r15
	jmp L_20281
.p2align 0x4
L_381070:
L_20431:
	xorl %ecx,%ecx
	jmp L_20276
.p2align 0x4
L_381071:
L_20265:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381072:
L_20432:
	movq 0x8(%rbp),%r13
	movq 0x38(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x10(%rbp)
	movq 0x30(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_20265
L_20433:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_381084
L_20434:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x38(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_20436:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_20437
L_20452:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_20437
L_20453:
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x10(%rbp)
	je L_381078
L_20437:
	movl 0x38(%rbp),%r13d
	incl %r13d
	movl %r13d,0x3C(%rbp)
	jo L_20271
L_20438:
	cmpq $0x1,%r15
	je L_381073
L_20439:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x38(%rbp)
	jmp L_20436
.p2align 0x4
L_381073:
L_20440:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20441
L_20450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_20451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20451
.p2align 0x4
.long 0x634
L_20451:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_20441:
	movl 0x3C(%rbp),%ecx
L_20442:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_20277
L_20443:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_20445
L_20449:
	movl %ecx,0x0(%r15)
L_20445:
	movq $0x1133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x112F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x112B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_20446:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je doit_0
L_20447:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0x18(%r15),%r11
	movq %r11,0x0(%rbp)
	movq 0x8(%r14),%r15
	movq $0x24E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x8(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381078:
L_20455:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20456
L_20460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_20461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20461
.p2align 0x4
.long 0x635
L_20461:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_20456:
	movl 0x38(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_20277
L_20457:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_381079
L_20458:
	movq 0x40(%rbp),%r15
	jmp L_20446
.p2align 0x4
L_381079:
L_20459:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x38(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x40(%rbp),%r15
	jmp L_20446
.p2align 0x4
L_381084:
L_20462:
	xorl %ecx,%ecx
	jmp L_20442
.p2align 0x4
L_381086:
L_20463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_20464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20464
.p2align 0x4
.long 0x45B
L_20464:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_20263
.p2align 0x4
.long 0x459
L_20291:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20292
L_20416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20417
.p2align 0x4
.long 0x508
L_20417:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20292:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_381101
L_20293:
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1051,%r14
	je L_381097
	cmpq $0x1052,%r14
	je L_381088
L_20294:
	movq 0x0(%r15),%r14
	movq $0x20A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x20B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_20295:
	movq $0x1111,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381088:
L_20362:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq $0x20A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq %r13,0x40(%rbp)
	cmpq %r13,%r15
	movq %r11,0x28(%rbp)
	jne L_381096
L_20364:
	testq %r13,%r13
	jz L_381095
L_20365:
	cmpq $0x7FFFFFFF,%r13
	ja L_381094
L_20366:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20367
L_20411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_20412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20412
.p2align 0x4
.long 0x628
L_20412:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_20367:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15CB,%rcx
	movq 0x40(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_20368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20368
.p2align 0x4
.long 0x628
L_20368:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_20369:
	movq $0x0,0x50(%rbp)
loop_286:
	movq 0x40(%rbp),%r14
	cmpq %r14,0x50(%rbp)
	jl L_381089
L_20370:
	movq 0x48(%rbp),%r14
	movq $0x689,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x20BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_20295
.p2align 0x4
L_381089:
L_20371:
	movq 0x50(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq %r15,%r14
	salq $0x5,%r14
	movq 0x28(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0x58(%rbp)
	salq $0x5,%r15
	movq 0x10(%r13,%r15,1),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x48(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x40(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x38(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE7F,%r15
	je L_381092
L_20404:
	movq 0x8(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x23DD,%r15
	je L_381091
L_20410:
	movq 0x0(%r14),%r14
	movq %r14,%r15
L_20407:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE7F,%r13
	je L_381090
L_20409:
	movq %r15,0xB0(%rbp)
	movq 0x18(%r14),%r14
	movq %r14,0x58(%rbp)
L_20373:
	movq $0x1,0xC0(%rbp)
	movl $0x0,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_20374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_381090:
L_20408:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_20373
.p2align 0x4
L_381091:
L_20405:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x443,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xB8(%rbp)
	addq $0x18,%r12
	addq $0xB8,%rbp
	leaq (L_20406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bound_0
.p2align 0x4
L_381092:
L_20372:
	movq 0x0(%r11),%r11
	movq %r11,0x58(%rbp)
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0xB0(%rbp)
	jmp L_20373
.p2align 0x4
L_381094:
L_20413:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381095:
L_20414:
	movq (globalObjptr+0x4E20)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_20369
.p2align 0x4
L_381096:
L_20302:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381097:
L_20296:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%rbp),%r11
	movq 0x48(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x40(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x38(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x30(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x28(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x20(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x70(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE7F,%r15
	je L_381100
L_20355:
	movq 0x8(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x23DD,%r15
	je L_381099
L_20361:
	movq 0x0(%r11),%r11
	movq %r11,%r15
L_20358:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE7F,%r13
	je L_381098
L_20360:
	movq %r15,0x88(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x80(%rbp)
L_20298:
	movq $0x1,0x98(%rbp)
	movl $0x0,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_20299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
L_381098:
L_20359:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	jmp L_20298
.p2align 0x4
L_381099:
L_20356:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq $0x443,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r11,0x88(%rbp)
	addq $0x18,%r12
	addq $0x88,%rbp
	leaq (L_20357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bound_0
.p2align 0x4
L_381100:
L_20297:
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x88(%rbp)
	jmp L_20298
.p2align 0x4
L_381101:
L_20415:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x629
L_20374:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20375
L_20402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_20403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20403
.p2align 0x4
.long 0x630
L_20403:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_20375:
	movq 0xB8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_20302
L_20377:
	movl %r13d,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x20A9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r13)
	movq $0x20B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4123,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq $0x2,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x607,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq %r15,0x8(%r11)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xD8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xB4F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x38(%r10)
	movq %r11,0x48(%r10)
	addq $0x68,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r10)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r10)
	movq 0x98(%rbp),%r14
	movq %r14,0x10(%r10)
	movq 0x90(%rbp),%r14
	movq %r14,0x18(%r10)
	movq 0x88(%rbp),%r14
	movq %r14,0x20(%r10)
	movq 0x80(%rbp),%r14
	movq %r14,0x28(%r10)
	movq 0x78(%rbp),%r14
	movq %r14,0x30(%r10)
	movq 0x70(%rbp),%r14
	movq %r14,0x40(%r10)
	movq %r15,0x50(%r10)
	movq %r13,0x58(%r10)
	movq %r10,0xF0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_20378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_22
.p2align 0x4
.long 0x631
L_20406:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	jmp L_20407
.p2align 0x4
.long 0x61E
L_20299:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20300
L_20353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_20354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20354
.p2align 0x4
.long 0x626
L_20354:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_20300:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_20302
L_20303:
	movl %r13d,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x20A9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r13)
	movq $0x20B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4123,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq $0x2,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x607,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq %r15,0x8(%r11)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xB4F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x38(%r10)
	movq %r11,0x48(%r10)
	addq $0x68,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r10)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r10)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r10)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r10)
	movq 0x58(%rbp),%r14
	movq %r14,0x20(%r10)
	movq 0x50(%rbp),%r14
	movq %r14,0x28(%r10)
	movq 0x48(%rbp),%r14
	movq %r14,0x30(%r10)
	movq 0x40(%rbp),%r14
	movq %r14,0x40(%r10)
	movq %r15,0x50(%r10)
	movq %r13,0x58(%r10)
	movq %r10,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_20304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_22
.p2align 0x4
.long 0x627
L_20357:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	jmp L_20358
.p2align 0x4
.long 0x62A
L_20378:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20379
L_20400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_20401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20401
.p2align 0x4
.long 0x62F
L_20401:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_20379:
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_381107
L_20380:
	movq 0x8(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
L_20381:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_20382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_381107:
L_20386:
	movq 0xC0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_381108
L_20387:
	movq 0x8(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
L_20388:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq $0x3D91,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_20389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_381108:
L_20393:
	movq 0xD0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x110B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq 0x50(%rbp),%r11
	movq %r11,%r10
	salq $0x4,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,%r15
	salq $0x4,%r15
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14,%r15,1)
	incq %r11
	movq %r11,0x50(%rbp)
	jmp loop_286
.p2align 0x4
.long 0x61F
L_20304:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20305
L_20351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_20352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20352
.p2align 0x4
.long 0x625
L_20352:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_20305:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_381110
L_20306:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
L_20307:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_20308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_381110:
L_20312:
	movq 0x98(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xA8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_381111
L_20313:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
L_20314:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq $0x3D91,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_20315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_381111:
L_20319:
	movq 0xA8(%rbp),%r11
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq $0x1,0x0(%r11)
	movq 0x38(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1058,%r15
	jne L_20320
L_20324:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_20302
L_20326:
	movq 0x88(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ebx
	movslq %ebx,%r11
	cmpq %r13,%r11
	jne L_20302
L_20328:
	cmpl %ebx,%ecx
	jne L_20320
L_20330:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_285:
	cmpl %ebx,%ecx
	je L_381118
L_20331:
	movslq %ebx,%r11
	cmpq %r15,%r11
	jnb L_20333
L_20334:
	movq 0x0(%r14,%r11,8),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0x1056,%r9
	jne L_20320
L_20335:
	movq 0x0(%r10),%r9
	cmpq %r13,%r11
	jnb L_381115
L_20337:
	movq 0x88(%rbp),%r10
	movq 0x0(%r10,%r11,8),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r9),%rsi
	movq 0x8(%rsi),%rdi
	cmpq %rdi,0x8(%rsp)
	jne L_381113
L_20339:
	incl %ebx
	jo L_20271
L_20340:
	jmp loop_285
.p2align 0x4
L_381113:
L_20320:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20321
L_20322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_20323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20323
.p2align 0x4
.long 0x622
L_20323:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_20321:
	movq $0x20B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_20295
.p2align 0x4
L_381115:
L_20333:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381118:
L_20341:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20342
L_20343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_20344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20344
.p2align 0x4
.long 0x48C
L_20344:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_20342:
	movq $0x20B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_20295
.p2align 0x4
.long 0x62B
L_20382:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20383
L_20397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_20398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20398
.p2align 0x4
.long 0x62E
L_20398:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_20383:
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_20386
L_20384:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	jmp L_20381
.p2align 0x4
.long 0x62C
L_20389:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20390
L_20394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_20395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20395
.p2align 0x4
.long 0x62D
L_20395:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_20390:
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_20393
L_20391:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	jmp L_20388
.p2align 0x4
.long 0x620
L_20308:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20309
L_20348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_20349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20349
.p2align 0x4
.long 0x624
L_20349:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_20309:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_20312
L_20310:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_20307
.p2align 0x4
.long 0x621
L_20315:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20316
L_20345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_20346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20346
.p2align 0x4
.long 0x623
L_20346:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_20316:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_20319
L_20317:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_20314
.text
.p2align 0x4
.globl lookupLongtycon_1
.hidden lookupLongtycon_1
lookupLongtycon_1:
L_20465:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_20466
L_20611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20612
.p2align 0x4
.long 0x63C
L_20612:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20466:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x30(%rbp)
	cmpq $0x1,%r11
	je L_381133
L_20467:
	movq 0x8(%r11),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r11),%r14
	movq %r14,0x18(%rbp)
L_20468:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_20469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_381133:
L_20610:
	movq 0x18(%rbp),%r15
L_20544:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_20545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x636
L_20469:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x145C,%r14
	jne L_381152
L_20471:
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r14
	jne L_381151
L_20474:
	cmpl $0x0,%ecx
	jl L_381150
L_20475:
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_287:
	cmpl %ecx,%ebx
	jnl L_381138
L_20538:
	movslq %ebx,%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r13),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r10)
	je L_381135
L_20539:
	incl %ebx
	jmp loop_287
.p2align 0x4
L_381135:
L_20540:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20541
L_20607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_20608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20608
.p2align 0x4
.long 0x63B
L_20608:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_20541:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381136
L_20542:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r15
	jmp L_20468
.p2align 0x4
L_381136:
L_20543:
	movq 0x40(%rbp),%r15
	jmp L_20544
.p2align 0x4
L_381138:
L_20476:
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_20477:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381149
.p2align 0x4,,0x7
L_20478:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381139
L_20479:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r13,0x18(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_20477
.p2align 0x4
L_381139:
L_20480:
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_381148
L_20481:
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_20482:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381147
.p2align 0x4,,0x7
L_20483:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381140
L_20484:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_20482
.p2align 0x4
L_381140:
L_20485:
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_20486:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381146
.p2align 0x4,,0x7
L_20487:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381141
L_20488:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_20486
.p2align 0x4
L_381141:
L_20489:
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_20490:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381145
.p2align 0x4,,0x7
L_20491:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381142
L_20492:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r13,0x18(%rbp)
	jmp L_20490
.p2align 0x4
L_381142:
L_20493:
	movq %r13,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_20494:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381144
.p2align 0x4,,0x7
L_20495:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381143
L_20496:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_20494
.p2align 0x4
L_381143:
L_20497:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_20498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_381144:
L_20527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20528
.p2align 0x4
.long 0x637
L_20528:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_20495
.p2align 0x4
L_381145:
L_20529:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20530
.p2align 0x4
.long 0x637
L_20530:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_20491
.p2align 0x4
L_381146:
L_20531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20532
.p2align 0x4
.long 0x637
L_20532:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_20487
.p2align 0x4
L_381147:
L_20533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20534
.p2align 0x4
.long 0x4F0
L_20534:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_20483
.p2align 0x4
L_381148:
L_20535:
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_20490
.p2align 0x4
L_381149:
L_20536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20537
.p2align 0x4
.long 0x4DE
L_20537:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_20478
.p2align 0x4
L_381150:
L_20606:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381151:
L_20473:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381152:
L_20470:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x576
L_20545:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x145C,%r14
	jne L_20470
L_20546:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r14
	jne L_20473
L_20548:
	cmpl $0x0,%ecx
	jl L_20606
L_20549:
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_288:
	cmpl %ecx,%ebx
	jnl L_381154
L_20602:
	movslq %ebx,%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	movq 0x30(%rbp),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r9)
	je L_381153
L_20603:
	incl %ebx
	jmp loop_288
.p2align 0x4
L_381153:
L_20604:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381154:
L_20550:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20551
L_20600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20601
.p2align 0x4
.long 0x575
L_20601:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_20551:
	cmpq $0x1,0x28(%rbp)
	je L_381163
L_20552:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_381162
L_20553:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_20554:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381161
.p2align 0x4,,0x7
L_20555:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381155
L_20556:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_20554
.p2align 0x4
L_381155:
L_20557:
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_20558:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381160
.p2align 0x4,,0x7
L_20559:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381156
L_20560:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_20558
.p2align 0x4
L_381156:
L_20562:
	movq $0x143,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	cmpq $0x1,%r15
	je L_381159
L_20563:
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r13),%r15
	cmpq $0x1,%r10
	je L_381158
L_20564:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r15
	je L_381157
L_20565:
	movq 0x8(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r10,%r14
L_20566:
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	addq $0x30,%rbp
	leaq (L_20567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
L_381157:
L_20591:
	movq %r14,%r15
	movq %r10,%r14
	jmp L_20566
.p2align 0x4
L_381158:
L_20592:
	xchgq %r14,%r15
	jmp L_20566
.p2align 0x4
L_381159:
L_20593:
	movq 0x0(%r13),%r11
	movq %r14,%r15
	movq %r11,%r14
	jmp L_20566
.p2align 0x4
L_381160:
L_20594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20595
.p2align 0x4
.long 0x4F0
L_20595:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_20559
.p2align 0x4
L_381161:
L_20596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_20597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20597
.p2align 0x4
.long 0x4EB
L_20597:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_20555
.p2align 0x4
L_381162:
L_20598:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_20562
.p2align 0x4
L_381163:
L_20599:
	movq 0x0(%rbp),%r15
	jmp L_20562
.p2align 0x4
.long 0x5FF
L_20498:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20499
L_20525:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20526
.p2align 0x4
.long 0x4E9
L_20526:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20499:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_20500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x496
L_20567:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20568
L_20589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20590
.p2align 0x4
.long 0x63A
L_20590:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20568:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xE260)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x496
L_20500:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_20501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x638
L_20569:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA440)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x496
L_20501:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xE260)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_20502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x639
L_20570:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x517
L_20502:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA460)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_20503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E3
L_20571:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20572
L_20587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20588
.p2align 0x4
.long 0x4F0
L_20588:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_20572:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_20573:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_20507
L_20574:
	cmpq $0x1,%r14
	je L_381170
L_20575:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_20573
.p2align 0x4
L_381170:
L_20576:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20577
L_20585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_20586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20586
.p2align 0x4
.long 0x4A1
L_20586:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_20577:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_381172
L_20578:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_20579:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_381171
L_20580:
	movl %r13d,0x0(%r15)
	movq %r14,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_20581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_381171:
L_20507:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381172:
L_20584:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_20579
.p2align 0x4
.long 0x4A5
L_20503:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_20581:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_381176
L_20517:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381176:
L_20519:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E3
L_20504:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20505
L_20523:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20524
.p2align 0x4
.long 0x4F0
L_20524:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_20505:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_20506:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_20507
L_20508:
	cmpq $0x1,%r14
	je L_381177
L_20509:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_20506
.p2align 0x4
L_381177:
L_20510:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20511
L_20521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_20522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20522
.p2align 0x4
.long 0x4A1
L_20522:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_20511:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_381179
L_20512:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_20513:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_20507
L_20514:
	movl %r13d,0x0(%r15)
	movq %r14,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_20515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_381179:
L_20520:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_20513
.p2align 0x4
.long 0x1
L_20515:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_20519
	jmp L_20517
.text
.p2align 0x4
.globl root_8
.hidden root_8
root_8:
L_20613:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_20614
L_20623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_20624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20624
.p2align 0x4
.long 0x451
L_20624:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_20614:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145C,%r13
	je L_381185
L_20615:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145D,%r15
	jne L_381184
L_20617:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_20618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_381184:
L_20616:
	movq (globalObjptr+0x14F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381185:
L_20622:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_20618:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20619
L_20620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_20621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20621
.p2align 0x4
.long 0x45F
L_20621:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_20619:
	movq $0x28BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3781
.hidden loop_3781
loop_3781:
L_20625:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_20626
L_20633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_20634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20634
.p2align 0x4
.long 0x45F
L_20634:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_20626:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_381188
L_20627:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_20628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_381188:
L_20632:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_20628:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20629
L_20630:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_20631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20631
.p2align 0x4
.long 0x4E7
L_20631:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_20629:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl msg_0
.hidden msg_0
msg_0:
L_20635:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_20636
L_20711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20712
.p2align 0x4
.long 0x63C
L_20712:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20636:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_381191
L_20637:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x30(%rbp)
	movl 0x4(%r14),%r13d
	movl %r13d,0x34(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_20638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_381191:
L_20710:
	movq (globalObjptr+0xBDB0)(%rip),%r15
	movq %r15,0x10(%rbp)
L_20643:
	movq $0x1,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (rev_7+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x63D
L_20638:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_20639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x640
rev_7:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r15
	je L_381195
L_20644:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_20645:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381194
.p2align 0x4,,0x7
L_20646:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_381193
L_20647:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_20645
.p2align 0x4
L_381193:
L_20649:
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_381194:
L_20705:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20706
.p2align 0x4
.long 0x646
L_20706:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_20646
.p2align 0x4
L_381195:
L_20707:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_20649
.p2align 0x4
.long 0x63E
L_20639:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x34(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_20640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x640
L_20650:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x0,%r14
	ja L_381196
L_20651:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381196:
L_20652:
	movq 0x8(%rbp),%r15
	movb 0x0(%r15),%r14b
	cmpb $0x61,%r14b
	jb str_9
L_20653:
	cmpb $0x7A,%r14b
	ja str_8
L_20654:
	movzbl %r14b,%r15d
	addl $0xFFFFFFE0,%r15d
	movb %r15b,%dl
str_2:
	movzbq %dl,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_20655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
str_8:
	movb %r14b,%dl
	jmp str_2
.p2align 0x4
str_9:
	movb %r14b,%dl
	jmp str_2
.p2align 0x4
.long 0x63F
L_20640:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20641
L_20708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_20709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20709
.p2align 0x4
.long 0x647
L_20709:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_20641:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x641
L_20655:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_381199
L_20657:
	decl %r14d
	jo L_381198
L_20659:
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x40(%rbp)
	movl $0x1,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_20660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_381198:
L_20658:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381199:
L_20656:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x558
L_20642:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_20643
.p2align 0x4
.long 0x642
L_20660:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20661
L_20701:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20702
.p2align 0x4
.long 0x645
L_20702:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_20661:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x7C8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x640
L_20662:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x640
L_20663:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20664
L_20699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20700
.p2align 0x4
.long 0x644
L_20700:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20664:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xA18)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x643
L_20665:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x643
L_20666:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x558
L_20667:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x641
L_20668:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20669
L_20697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20698
.p2align 0x4
.long 0x4DE
L_20698:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20669:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_20670:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_20658
L_20671:
	cmpq $0x1,%r14
	je L_381202
L_20672:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_20670
.p2align 0x4
L_381202:
L_20673:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20674
L_20695:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20696
.p2align 0x4
.long 0x578
L_20696:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_20674:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_381203
L_20675:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_20676:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x2,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_381203:
L_20694:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_20676
.p2align 0x4
.long 0x50B
L_20677:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20678
L_20692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20693
.p2align 0x4
.long 0x450
L_20693:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20678:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_381208
L_20679:
	decl %ecx
	jo L_20658
L_20680:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
L_20681:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1B65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x2,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_381208:
L_20691:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_20681
.p2align 0x4
.long 0x51A
L_20682:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20683
L_20689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_20690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20690
.p2align 0x4
.long 0x5F3
L_20690:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_20683:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_381211
L_20684:
	decl %ecx
	jo L_20658
L_20685:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_20686:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_381211:
L_20688:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_20686
.p2align 0x4
.long 0x51A
L_20687:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp output_0
.text
.p2align 0x4
.globl file_0
.hidden file_0
file_0:
L_20713:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_20737
L_20714:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381214
L_20715:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_381213
L_20716:
	movq 0x0(%r14),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x15A0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_20717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_381213:
L_20736:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381214:
L_20737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_20738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20738
.p2align 0x4
.long 0x45F
L_20738:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_20715
.p2align 0x4
.long 0x2B
L_20717:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r11
	movq %r11,0x18(%rbp)
	movq 0x10(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	cmpq %r14,%r15
	jl L_20733
L_20718:
	xorq %r13,%r13
.p2align 0x4,,0x7
loop_289:
	cmpq %r14,%r13
	jnl L_381217
L_20731:
	movq 0x18(%rbp),%r11
	movq 0x10(%rbp),%r9
	movb 0x0(%r9,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_381216
L_20734:
	incq %r13
	jmp loop_289
.p2align 0x4
L_381216:
L_20733:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381217:
L_20719:
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_20721
L_20722:
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_381219
L_20724:
	subl %r13d,%r14d
	jo L_381218
L_20726:
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl %r13d,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_20727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_381218:
L_20725:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381219:
L_20721:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_20727:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20728
L_20729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_20730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20730
.p2align 0x4
.long 0x451
L_20730:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_20728:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE268)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.text
.p2align 0x4
.globl extract_0
.hidden extract_0
extract_0:
L_20739:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_20740
L_20763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_20764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20764
.p2align 0x4
.long 0x24
L_20764:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_20740:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movslq 0x8(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r13
	andq $0x1,%r13
	jnz L_381229
L_20741:
	cmpq %r14,%r15
	jb L_381228
L_20742:
	movq %r15,%r13
	subq %r14,%r13
	movq %r13,0x20(%rbp)
sequence_0:
	movq 0x18(%rbp),%r14
	testq %r14,%r14
	jnz L_20744
L_20753:
	cmpq %r15,0x20(%rbp)
	jne L_381223
L_20755:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381223:
L_20744:
	movq 0x20(%rbp),%rdx
	testq %rdx,%rdx
	jz L_381226
L_20745:
	cmpq $0x7FFFFFFF,%rdx
	ja L_381225
L_20746:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20747
.p2align 0x4
.long 0x648
L_20747:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,%r15
L_20748:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_290:
	cmpq 0x20(%rbp),%r14
	jnl L_381224
L_20750:
	movq 0x18(%rbp),%r13
	addq %r14,%r13
	movq 0x10(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_290
.p2align 0x4
L_381224:
L_20749:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381225:
L_20751:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381226:
L_20752:
	movq (globalObjptr+0x5A8)(%rip),%r15
	jmp L_20748
.p2align 0x4
L_381228:
L_20757:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381229:
L_20758:
	movq 0x0(%rbp),%r13
	shrq $0x1,%r13
	movl %r13d,%r11d
	movslq %r11d,%r13
	cmpq %r14,%r15
	jb L_20757
L_20759:
	movq %r15,%r11
	subq %r14,%r11
	cmpq %r13,%r11
	jb L_20757
L_20760:
	movq %r13,0x20(%rbp)
	jmp sequence_0
.text
.p2align 0x4
.globl loop_3780
.hidden loop_3780
loop_3780:
L_20765:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_20766
L_20851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_20852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20852
.p2align 0x4
.long 0x45B
L_20852:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_20766:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
loop_291:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381250
.p2align 0x4,,0x7
L_20767:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r13d
	movl %r13d,0x2C(%rbp)
	movl 0x4(%r15),%r11d
	movl %r11d,0x30(%rbp)
	cmpq $0x1,%r14
	je L_381249
L_20768:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDB3,%r15
	je L_381241
	cmpq $0xDB4,%r15
	je L_381239
	cmpq $0xDB5,%r15
	je L_381234
L_20769:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r10d
	addl %r13d,%r10d
	jo L_381233
L_20771:
	movq %r15,0x20(%rbp)
	movq $0x343,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	addq $0x10,%r12
	movl %r11d,0x4(%r15)
	movq %r15,0x18(%rbp)
	jmp loop_291
.p2align 0x4
L_381233:
L_20770:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381234:
L_20823:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpl %r13d,%r11d
	jnl L_381236
L_20834:
	subl %r11d,%r13d
	movl %r13d,0x20(%rbp)
	jo L_20770
L_20835:
	movl $0x8,0x38(%rbp)
	movl %r13d,0x3C(%rbp)
	addq $0x38,%rbp
	leaq (L_20836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_381236:
L_20825:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1B,%r14
	je L_381238
	cmpq $0x1F1C,%r14
	je L_381237
L_20826:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381237:
L_20833:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381238:
L_20832:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381239:
L_20816:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_381240
L_20817:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r10
	movq 0x18(%rbp),%r15
	movq %r14,0x18(%rbp)
	movq %r10,%r14
L_20818:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_20819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_381240:
L_20822:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381241:
L_20772:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r10d
	testl %r10d,%r10d
	jnz L_20798
L_20773:
	movl %r13d,%r14d
	addl 0x28(%rbp),%r14d
	jo L_20770
L_20774:
	cmpl $0x50,%r14d
	jg L_381245
L_20775:
	cmpl %r13d,%r11d
	jnl L_381243
L_20783:
	subl %r11d,%r13d
	movl %r13d,0x18(%rbp)
	jo L_20770
L_20784:
	movl $0x8,0x40(%rbp)
	movl %r13d,0x44(%rbp)
	addq $0x40,%rbp
	leaq (L_20785+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_381243:
L_20777:
	movl 0x30(%rbp),%r15d
	addl 0x28(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	jo L_20770
L_20778:
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_20779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3794
.p2align 0x4
L_381245:
L_20798:
	cmpq $0x1,%r15
	je L_381246
L_20799:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_20800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_381246:
L_20814:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381249:
L_20848:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381250:
L_20849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20850
.p2align 0x4
.long 0x4B1
L_20850:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_20767
.p2align 0x4
.long 0x64F
L_20836:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movq $0x9,%r14
	shlq $0x4,%r14
	orq $0x7,%r14
	movq %r14,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_20837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x651
L_20827:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20828
L_20830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20831
.p2align 0x4
.long 0x474
L_20831:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20828:
	movl 0x2C(%rbp),%r15d
	addl 0x28(%rbp),%r15d
	jo L_20770
L_20829:
	movq $0x343,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	movl %r15d,0x4(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_20819:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_381254
L_20820:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	jmp L_20818
.p2align 0x4
L_381254:
L_20821:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x64A
L_20785:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	movq $0x9,%r14
	shlq $0x4,%r14
	orq $0x7,%r14
	movq %r14,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_20786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x473
L_20779:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20780
L_20781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_20782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20782
.p2align 0x4
.long 0x649
L_20782:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_20780:
	movq $0x343,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl %r14d,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x64D
L_20800:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_381258
L_20801:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
L_20802:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1B,%r14
	je L_381257
	cmpq $0x1F1C,%r14
	je L_381256
L_20803:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381256:
L_20812:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381257:
L_20811:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381258:
L_20813:
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x64F
L_20837:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl $0x8,0x40(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x44(%rbp)
	addq $0x40,%rbp
	leaq (L_20838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x64A
L_20786:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl $0x8,0x48(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	addq $0x48,%rbp
	leaq (L_20787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x64E
L_20804:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20805
L_20809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20810
.p2align 0x4
.long 0x650
L_20810:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20805:
	movq $0x343,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl 0x2C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_20806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x652
L_20838:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq $0x20,%r14
	shlq $0x4,%r14
	orq $0x7,%r14
	movq %r14,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_20839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x64B
L_20787:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq $0x20,%r14
	shlq $0x4,%r14
	orq $0x7,%r14
	movq %r14,0x48(%rbp)
	movl %r15d,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_20788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x64F
L_20806:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_381260
L_20807:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_20802
.p2align 0x4
L_381260:
L_20808:
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x652
L_20839:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20840
L_20846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_20847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20847
.p2align 0x4
.long 0x653
L_20847:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_20840:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x64B
L_20788:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20789
L_20795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_20796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20796
.p2align 0x4
.long 0x64C
L_20796:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_20789:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_20790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x64F
L_20841:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1F1B,%r13
	je L_381264
	cmpq $0x1F1C,%r13
	je L_381263
L_20842:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381263:
L_20845:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381264:
L_20844:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_20843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x64A
L_20790:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1F1B,%r13
	je L_381266
	cmpq $0x1F1C,%r13
	je L_381265
L_20791:
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_20792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381265:
L_20794:
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_20792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381266:
L_20793:
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_20792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x64F
L_20843:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_20825
.p2align 0x4
.long 0x64A
L_20792:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_20777
.text
.p2align 0x4
.globl loop_3794
.hidden loop_3794
loop_3794:
loopS_0:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_20853
L_20884:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_20885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20885
.p2align 0x4
.long 0x45F
L_20885:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_20853:
	movq 0x0(%rbp),%r15
.p2align 0x4,,0x7
loop_292:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_381274
L_20854:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDB3,%r15
	je L_381272
	cmpq $0xDB4,%r15
	je L_381270
	cmpq $0xDB5,%r15
	je L_381267
L_20855:
	movq 0x8(%r14),%r15
	jmp loop_292
.p2align 0x4
L_381267:
L_20879:
	movq 0x0(%r14),%r15
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1F1B,%r13
	je L_381269
	cmpq $0x1F1C,%r13
	je L_381268
L_20880:
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp output_0
.p2align 0x4
L_381268:
L_20882:
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp output_0
.p2align 0x4
L_381269:
L_20881:
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp output_0
.p2align 0x4
L_381270:
L_20871:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_381271
L_20872:
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_20873:
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_20874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3794
.p2align 0x4
L_381271:
L_20877:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381272:
L_20856:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_381273
L_20857:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_20858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3794
.p2align 0x4
L_381273:
L_20870:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381274:
L_20883:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_20874:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_20877
L_20875:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_20873
.p2align 0x4
.long 0x4E5
L_20858:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_381279
L_20859:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
L_20860:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F1B,%r14
	je L_381278
	cmpq $0x1F1C,%r14
	je L_381277
L_20861:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_20862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381277:
L_20868:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_20862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381278:
L_20867:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_20862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_381279:
L_20866:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5EF
L_20862:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_20863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3794
.p2align 0x4
.long 0x4E5
L_20863:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_20866
L_20864:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_20860
.text
.p2align 0x4
.globl layout_26
.hidden layout_26
layout_26:
L_20886:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_20947
L_20887:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381282
L_20888:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r11
	movq %r11,0x8(%rbp)
	cmpq $0x1,%r15
	je L_381281
L_20889:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq $0x1,0x18(%rbp)
	movq %r14,%r15
L_20890:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_20891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_381281:
L_20946:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_20918:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_20919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_381282:
L_20947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_20948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20948
.p2align 0x4
.long 0x451
L_20948:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_20888
.p2align 0x4
.long 0x5EF
L_20891:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20892
L_20944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20945
.p2align 0x4
.long 0x4E9
L_20945:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20892:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381284
L_20893:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_20890
.p2align 0x4
L_381284:
L_20894:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_20895:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_381286
.p2align 0x4,,0x7
L_20896:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_381285
L_20897:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_20895
.p2align 0x4
L_381285:
L_20898:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_20899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_381286:
L_20942:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20943
.p2align 0x4
.long 0x4E9
L_20943:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_20896
.p2align 0x4
.long 0x2B
L_20919:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20920
L_20930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_20931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20931
.p2align 0x4
.long 0x2C
L_20931:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_20920:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_20921:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_381291
L_20922:
	cmpq $0x1,%r14
	je L_381288
L_20923:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_20921
.p2align 0x4
L_381288:
L_20924:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20925
L_20928:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_20929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20929
.p2align 0x4
.long 0x4E6
L_20929:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_20925:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_381289
L_20926:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381289:
L_20927:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_381291:
L_20903:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5FF
L_20899:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_20900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x4E0
L_20900:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20901
L_20940:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_20941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20941
.p2align 0x4
.long 0x4E7
L_20941:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_20901:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_20902:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_20903
L_20904:
	cmpq $0x1,%r14
	je L_381293
L_20905:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_20902
.p2align 0x4
L_381293:
L_20906:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20907
L_20938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20939
.p2align 0x4
.long 0x499
L_20939:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20907:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_381294
L_20908:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_20909:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_20910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_381294:
L_20937:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_20909
.p2align 0x4
.long 0x4E5
L_20910:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20911
L_20935:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_20936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20936
.p2align 0x4
.long 0x4E7
L_20936:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_20911:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_20912:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_20903
L_20913:
	cmpq $0x1,%r14
	je L_381298
L_20914:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_20912
.p2align 0x4
L_381298:
L_20915:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_20916
L_20933:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_20934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_20934
.p2align 0x4
.long 0x499
L_20934:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_20916:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_381299
L_20917:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_20918
.p2align 0x4
L_381299:
L_20932:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_20918
