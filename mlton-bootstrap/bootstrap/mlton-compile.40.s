/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:09:10 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl frame_0
.hidden frame_0
frame_0:
L_126691:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_126692
L_126777:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126778
.p2align 0x4
.long 0x1B3D
L_126778:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_126692:
	movslq 0x8(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_426877
L_126702:
	movq %r15,%r13
	salq $0x4,%r13
	salq $0x4,%r15
	movl 0x4(%r14,%r15,1),%r11d
	movl %r11d,0x8(%rbp)
	movl 0x0(%r14,%r13,1),%r15d
	cmpl %r15d,0x0(%rbp)
	jne L_126701
L_126704:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jz L_426875
L_126707:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_426874
L_126708:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_126709:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_426873
.p2align 0x4,,0x7
L_126710:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF64,%r14
	jne L_426869
L_126716:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r10
L_126717:
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_126718
L_126770:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	jne L_426866
L_126771:
	movq $0x1BC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_426859
L_126772:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_126709
.p2align 0x4
L_426859:
L_126773:
	movq %r15,0x20(%rbp)
L_126721:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_426865
L_126722:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_126723:
	incl %ecx
	jo L_426864
L_126725:
	cmpq $0x1,%r15
	je L_426860
L_126726:
	movq 0x8(%r15),%r15
	jmp L_126723
.p2align 0x4
L_426860:
L_126727:
L_126728:
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_426863
L_126729:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xABB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126730
.p2align 0x4
.long 0x1114
L_126730:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
	movq 0x20(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1340:
	cmpq 0x30(%rbp),%r15
	jnl L_426862
L_126765:
	cmpq $0x1,%r14
	je L_426861
L_126766:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x48(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1340
.p2align 0x4
L_426861:
L_126767:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426862:
L_126731:
	leaq L_126758(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_126732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sortArray_1
.p2align 0x4
L_426863:
L_126768:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426864:
L_126724:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426865:
L_126769:
	xorl %ecx,%ecx
	jmp L_126728
.p2align 0x4
L_426866:
L_126718:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_426867
L_126719:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_126709
.p2align 0x4
L_426867:
L_126720:
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_126721
.p2align 0x4
L_426869:
L_126712:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_126713
L_126714:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xDA4,%r13
	jne L_426871
L_126715:
	movq 0x0(%r14),%r13
	xchgq %r13,%r15
L_126698:
	cmpq %r15,0x10(%rbp)
	je L_426870
L_126699:
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426870:
L_126701:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426871:
L_126713:
	movq 0x28(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426873:
L_126774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_126775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126775
.p2align 0x4
.long 0x703
L_126775:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_126710
.p2align 0x4
L_426874:
L_126776:
	movq $0x1,0x20(%rbp)
	jmp L_126721
.p2align 0x4
L_426875:
L_126706:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426877:
L_126694:
	movq 0x28(%rbp),%r13
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_126695
L_126696:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xDA4,%r15
	jne L_426878
L_126697:
	movq 0x0(%r13),%r15
	xchgq %r13,%r14
	jmp L_126698
.p2align 0x4
L_426878:
L_126695:
	movq 0x28(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B3A
L_126732:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126733
L_126763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_126764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126764
.p2align 0x4
.long 0x1B3C
L_126764:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_126733:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_426881
L_126736:
	movl %r14d,0x58(%rbp)
	movq $0x377D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_126737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_1
.p2align 0x4
L_426881:
L_126735:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA1C
L_126758:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r14
L_126759:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_426884
L_126761:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDA4,%r15
	jne L_426883
L_126762:
	movq %r14,%r13
	movq 0x0(%r14),%r14
	movq %r14,%r15
	movq %r13,%r14
	jmp L_126698
.p2align 0x4
L_426883:
	movq %r14,%r15
L_126760:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426884:
	movq %r14,%r15
	jmp L_126760
.p2align 0x4
.long 0x1B3B
L_126737:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r13
	movq %r13,0x20(%rbp)
	movslq 0x8(%rbp),%r15
	movq 0x18(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_426892
L_126743:
	movq 0x0(%r11,%r15,8),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r14,%r15
	jne L_126735
L_126745:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r13
	movl %r13d,%ebx
	movslq %ebx,%r15
	cmpq %r13,%r15
	jne L_126735
L_126747:
	cmpl %ebx,%ecx
	jne L_126701
L_126749:
	xorl %ebx,%ebx
	movq %r10,%r15
.p2align 0x4,,0x7
loop_1341:
	cmpl %ebx,%ecx
	je L_126706
L_126750:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_426887
L_126752:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%r15,%r13,8),%rsi
	movq 0x20(%rbp),%r11
	movq 0x0(%r11,%r13,8),%rdi
	xorq %rax,%rax
	movl %ecx,%r13d
	call IntInf_equal
L_126753:
	testl %eax,%eax
	jz L_126701
L_126755:
	incl %ebx
	jo L_126724
L_126756:
	movl %r13d,%ecx
	jmp loop_1341
.p2align 0x4
L_426887:
L_126751:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426892:
L_126739:
	movq 0x28(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_126740
L_126741:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDA4,%r15
	jne L_426893
L_126742:
	movq 0x0(%r14),%r15
	jmp L_126698
.p2align 0x4
L_426893:
L_126740:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_49
.hidden layout_49
layout_49:
L_126779:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_126780
L_126915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_126916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126916
.p2align 0x4
.long 0x45F
L_126916:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_126780:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_426898
	cmpq $0x2,%r15
	je L_426897
L_126781:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF68,%r14
	je L_426896
	cmpq $0xF69,%r14
	je L_426895
L_126782:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq (globalObjptr+0xF2F0)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_126783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426895:
L_126880:
	movl 0x0(%r15),%r14d
	movl %r14d,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq (globalObjptr+0xE8B0)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_126881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426896:
L_126815:
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xE8A8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_126816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426897:
L_126914:
	movq (globalObjptr+0xF310)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_426898:
L_126913:
	movq (globalObjptr+0xE8C8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5EC
L_126783:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_126784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x8A9
L_126881:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126882
L_126911:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_126912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126912
.p2align 0x4
.long 0x51F
L_126912:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_126882:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_426900
L_126884:
	movl %r13d,0x40(%rbp)
	movq $0x3C79,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_126885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_426900:
L_126790:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8A4
L_126816:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,0x38(%rbp)
	je L_426902
L_126817:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_126818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426902:
L_126875:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_126876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x785
L_126784:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_126785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x71E
L_126885:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_126886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x849
L_126818:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_126819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_7
.p2align 0x4
.long 0x1B42
L_126876:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126877
L_126878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126879
.p2align 0x4
.long 0x8ED
L_126879:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_126877:
	movq 0x10(%rbp),%r15
L_126827:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE9A0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r15
	andq $0x1,%r15
	jnz L_426903
L_126828:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_126829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426903:
L_126850:
	movq 0x30(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,0x38(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_126851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x785
L_126785:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126786
L_126813:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_126814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126814
.p2align 0x4
.long 0x4F1
L_126814:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_126786:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF2F8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_126787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x71E
L_126886:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126887
L_126909:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_126910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126910
.p2align 0x4
.long 0x4F2
L_126910:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_126887:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDF28)(%rip),%r14
	movq %r14,0x8(%r15)
	movl 0x8(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_126888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1B3E
L_126819:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126820
L_126873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_126874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126874
.p2align 0x4
.long 0xBB8
L_126874:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_126820:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_126821:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_426910
L_126822:
	cmpq $0x1,%r14
	je L_426907
L_126823:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_126821
.p2align 0x4
L_426907:
L_126824:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126825
L_126871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126872
.p2align 0x4
.long 0x1B41
L_126872:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_126825:
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jz L_426908
L_126826:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_126827
.p2align 0x4
L_426908:
L_126870:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_126827
.p2align 0x4
L_426910:
L_126798:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1853
L_126829:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126830
L_126848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126849
.p2align 0x4
.long 0x8ED
L_126849:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_126830:
	movq 0x18(%rbp),%r15
L_126831:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF300)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_126832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_38
.p2align 0x4
.long 0x860
L_126851:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_126852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x785
L_126787:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126788
L_126811:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_126812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126812
.p2align 0x4
.long 0x4F1
L_126812:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_126788:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF300)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_126790
L_126791:
	movl %r13d,0x40(%rbp)
	movq $0x3B55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_126792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x5ED
L_126888:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_126889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B3F
L_126832:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126833
L_126846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126847
.p2align 0x4
.long 0x1B40
L_126847:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_126833:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xD648)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_126834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x1859
L_126852:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_126853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5ED
L_126792:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_126793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x5ED
L_126889:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126890
L_126907:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_126908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126908
.p2align 0x4
.long 0x4FC
L_126908:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_126890:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF2F8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_126891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x847
L_126834:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126835
L_126844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_126845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126845
.p2align 0x4
.long 0x848
L_126845:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_126835:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_126836:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_126798
L_126837:
	cmpq $0x1,%r14
	je L_426917
L_126838:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_126836
.p2align 0x4
L_426917:
L_126839:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126840
L_126842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_126843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126843
.p2align 0x4
.long 0x513
L_126843:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_126840:
	movl 0x58(%rbp),%r15d
	testl %r15d,%r15d
	jz L_426918
L_126841:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426918:
L_126804:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1859
L_126853:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126854
L_126868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126869
.p2align 0x4
.long 0xAA4
L_126869:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_126854:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF2F8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_126855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x5ED
L_126793:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126794
L_126809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_126810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126810
.p2align 0x4
.long 0x4FC
L_126810:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_126794:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF308)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_126795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x5ED
L_126891:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126892
L_126905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_126906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126906
.p2align 0x4
.long 0x4FC
L_126906:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_126892:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF300)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_126893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x1859
L_126855:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126856
L_126866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126867
.p2align 0x4
.long 0xAA4
L_126867:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_126856:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_126857:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_126798
L_126858:
	cmpq $0x1,%r14
	je L_426925
L_126859:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_126857
.p2align 0x4
L_426925:
L_126860:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126861
L_126864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126865
.p2align 0x4
.long 0x1815
L_126865:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_126861:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_426926
L_126862:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_126831
.p2align 0x4
L_426926:
L_126863:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_126831
.p2align 0x4
.long 0x51A
L_126795:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126796
L_126807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_126808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126808
.p2align 0x4
.long 0x488
L_126808:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_126796:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_126797:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_126798
L_126799:
	cmpq $0x1,%r14
	je L_426930
L_126800:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_126797
.p2align 0x4
L_426930:
L_126801:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126802
L_126805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126806
.p2align 0x4
.long 0x51B
L_126806:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_126802:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_126804
L_126803:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_126893:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126894
L_126903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_126904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126904
.p2align 0x4
.long 0x488
L_126904:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_126894:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_126895:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_126798
L_126896:
	cmpq $0x1,%r14
	je L_426935
L_126897:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_126895
.p2align 0x4
L_426935:
L_126898:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126899
L_126901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_126902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126902
.p2align 0x4
.long 0x51B
L_126902:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_126899:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_126804
L_126900:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_46
.hidden layout_46
layout_46:
L_126917:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_126918
L_127033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_127034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127034
.p2align 0x4
.long 0x45F
L_127034:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_126918:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x68,%rbp
	leaq (L_126919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xA45
L_126919:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_126920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA45
L_126920:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_126921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA46
L_126921:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_126922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_49
.p2align 0x4
.long 0x1B43
L_126922:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126923
L_127031:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_127032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127032
.p2align 0x4
.long 0x99F
L_127032:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_126923:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF2D8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_426941
L_126926:
	movl %r13d,0x88(%rbp)
	movq $0x3C7B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_126927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_426941:
L_126925:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B44
L_126927:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x80,%rbp
	leaq (L_126928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1B44
L_126928:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126929
L_127029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_127030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127030
.p2align 0x4
.long 0x1B53
L_127030:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_126929:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF160)(%rip),%r14
	movq %r14,0x8(%r15)
	cmpq $0x1,0x48(%rbp)
	je L_426943
L_126930:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_126931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426943:
L_127024:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_127025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B45
L_126931:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126932
L_127022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_127023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127023
.p2align 0x4
.long 0x1B4D
L_127023:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_126932:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_126925
L_126934:
	movl %r13d,0x88(%rbp)
	movq $0x3B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_126935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x1B51
L_127025:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127026
L_127027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_127028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127028
.p2align 0x4
.long 0x1B52
L_127028:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_127026:
	movq 0x48(%rbp),%r15
L_126945:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF1F8)(%rip),%r15
	movq %r15,0x8(%r14)
	cmpq $0x1,0x40(%rbp)
	je L_426947
L_126946:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_126947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426947:
L_127012:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_127013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B46
L_126935:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x80,%rbp
	leaq (L_126936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1B45
L_126947:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126948
L_127010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_127011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127011
.p2align 0x4
.long 0x1B4D
L_127011:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_126948:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_126925
L_126950:
	movl %r13d,0x88(%rbp)
	movq $0x3C7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_126951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x1B4E
L_127013:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127014
L_127015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_127016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127016
.p2align 0x4
.long 0x1B4F
L_127016:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_127014:
	movq 0x40(%rbp),%r15
L_126960:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF090)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_126961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x1B46
L_126936:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126937
L_127020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_127021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127021
.p2align 0x4
.long 0x1B4D
L_127021:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_126937:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_126938:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_426955
L_126940:
	cmpq $0x1,%r14
	je L_426952
L_126941:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_126938
.p2align 0x4
L_426952:
L_126942:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126943
L_127018:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_127019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127019
.p2align 0x4
.long 0x1B50
L_127019:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_126943:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_426953
L_126944:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_126945
.p2align 0x4
L_426953:
L_127017:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_126945
.p2align 0x4
L_426955:
L_126939:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B47
L_126951:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x80,%rbp
	leaq (L_126952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1B48
L_126961:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126962
L_127003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_127004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127004
.p2align 0x4
.long 0x1B4A
L_127004:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_126962:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_126963:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_126939
L_126964:
	cmpq $0x1,%r14
	je L_426957
L_126965:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_126963
.p2align 0x4
L_426957:
L_126966:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126967
L_127001:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_127002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127002
.p2align 0x4
.long 0x9BD
L_127002:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_126967:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_426959
L_126968:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_126969:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_126925
L_126971:
	movl %r13d,0x58(%rbp)
	movq $0x3B51,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_126972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_426959:
L_127000:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_126969
.p2align 0x4
.long 0x1B47
L_126952:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126953
L_127008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_127009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127009
.p2align 0x4
.long 0x1B4C
L_127009:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_126953:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_126954:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_126939
L_126955:
	cmpq $0x1,%r14
	je L_426963
L_126956:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_126954
.p2align 0x4
L_426963:
L_126957:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126958
L_127006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_127007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127007
.p2align 0x4
.long 0x1B4B
L_127007:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_126958:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_426964
L_126959:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_126960
.p2align 0x4
L_426964:
L_127005:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_126960
.p2align 0x4
.long 0x7AA
L_126972:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_126973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x7AA
L_126973:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126974
L_126998:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_126999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126999
.p2align 0x4
.long 0x1B49
L_126999:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_126974:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_426969
L_126975:
	decl %ecx
	jo L_126939
L_126976:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
L_126977:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_126978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_47
.p2align 0x4
L_426969:
L_126997:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_126977
.p2align 0x4
.long 0x78D
L_126978:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126979
L_126995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_126996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126996
.p2align 0x4
.long 0x78E
L_126996:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_126979:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_126980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x847
L_126980:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126981
L_126993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_126994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126994
.p2align 0x4
.long 0x83D
L_126994:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_126981:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_426973
L_126982:
	decl %ecx
	jo L_126939
L_126983:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
L_126984:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1B65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x4,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_126985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_426973:
L_126992:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_126984
.p2align 0x4
.long 0x1
L_126985:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_126986
L_126990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_126991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_126991
.p2align 0x4
.long 0x494
L_126991:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_126986:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_426976
L_126987:
	decl %r15d
	jo L_126939
L_126988:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426976:
L_126989:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_47
.hidden layout_47
layout_47:
L_127035:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_127036
L_127300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_127301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127301
.p2align 0x4
.long 0x45F
L_127301:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_127036:
	movq 0x8(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_426983
	cmpq $0x2,%r15
	je L_426982
L_127037:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF6B,%r14
	je L_426981
	cmpq $0xF6C,%r14
	je L_426980
	cmpq $0xF6D,%r14
	je L_426979
	cmpq $0xF6E,%r14
	je L_426978
L_127038:
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq (globalObjptr+0xE958)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_127039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426978:
L_127258:
	movq 0x20(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xE998)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_127259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426979:
L_127182:
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xE990)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_127183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426980:
L_127103:
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq (globalObjptr+0xF320)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_127104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426981:
L_127088:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xF318)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_127089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426982:
L_127299:
	movq (globalObjptr+0xF330)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_426983:
L_127298:
	movq (globalObjptr+0xF328)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8A4
L_127039:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_127040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_5
.p2align 0x4
.long 0x67A
L_127259:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_127260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_542
.p2align 0x4
.long 0x1B61
L_127183:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127184
L_127256:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_127257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127257
.p2align 0x4
.long 0x1B68
L_127257:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_127184:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_426985
L_127186:
	movl %r13d,0x68(%rbp)
	movq $0x3B57,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_127187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_426985:
L_127056:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4EC
L_127104:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_127105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x496
L_127089:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_127090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1046
L_127040:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127041
L_127086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_127087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127087
.p2align 0x4
.long 0x4B0
L_127087:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_127041:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE960)(%rip),%r14
	movq %r14,0x8(%r15)
	cmpq $0x1,0x10(%rbp)
	je L_426987
L_127042:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_127043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426987:
L_127081:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_127082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B69
L_127260:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_127261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B62
L_127187:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_127188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xB1D
L_127105:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_127106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2B
L_127090:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_127091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xDE4
L_127043:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_127044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x4B4
L_127082:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127083
L_127084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_127085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127085
.p2align 0x4
.long 0x4B5
L_127085:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_127083:
	movq 0x48(%rbp),%r15
L_127054:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCAD0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_127056
L_127057:
	movl %r13d,0x60(%rbp)
	movq $0x3C77,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_127058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x1B69
L_127261:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127262
L_127296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_127297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127297
.p2align 0x4
.long 0x1B6F
L_127297:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_127262:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE9A8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_127056
L_127264:
	movl %r13d,0x60(%rbp)
	movq $0x3C75,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_127265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x1B62
L_127188:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127189
L_127254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_127255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127255
.p2align 0x4
.long 0xBBB
L_127255:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_127189:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDF28)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r15
	andq $0x1,%r15
	jnz L_426993
L_127190:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_127191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_426993:
L_127234:
	movq 0x28(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,0x18(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_127235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB1D
L_127106:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127107
L_127180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_127181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127181
.p2align 0x4
.long 0x4EB
L_127181:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_127107:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xA430)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_127056
L_127109:
	movl %r13d,0x58(%rbp)
	movq $0x3B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_127110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x2B
L_127091:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127092
L_127101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_127102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127102
.p2align 0x4
.long 0x2C
L_127102:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_127092:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127093:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_427000
L_127094:
	cmpq $0x1,%r14
	je L_426997
L_127095:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127093
.p2align 0x4
L_426997:
L_127096:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127097
L_127099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_127100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127100
.p2align 0x4
.long 0x4E6
L_127100:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_127097:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_426998
L_127098:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_426998:
L_127069:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427000:
L_127048:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AA
L_127044:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_127045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x9F3
L_127058:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_127059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1866
L_127265:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_127266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1B63
L_127191:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127192
L_127232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_127233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127233
.p2align 0x4
.long 0x1B64
L_127233:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_127192:
	movq 0x18(%rbp),%r15
L_127193:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF300)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_127194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_38
.p2align 0x4
.long 0x1B65
L_127235:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_127236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1B55
L_127110:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_127111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4AA
L_127045:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127046
L_127079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_127080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127080
.p2align 0x4
.long 0x4AD
L_127080:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_127046:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127047:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_127048
L_127049:
	cmpq $0x1,%r14
	je L_427003
L_127050:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127047
.p2align 0x4
L_427003:
L_127051:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127052
L_127077:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_127078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127078
.p2align 0x4
.long 0x1B54
L_127078:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_127052:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_427004
L_127053:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_127054
.p2align 0x4
L_427004:
L_127076:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_127054
.p2align 0x4
.long 0x9F3
L_127059:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127060
L_127074:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_127075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127075
.p2align 0x4
.long 0x514
L_127075:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_127060:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE968)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_127061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x1866
L_127266:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127267
L_127294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_127295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127295
.p2align 0x4
.long 0x1B6E
L_127295:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_127267:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDF28)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_127268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_5
.p2align 0x4
.long 0x9C3
L_127194:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127195
L_127230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_127231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127231
.p2align 0x4
.long 0x735
L_127231:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_127195:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xD648)(%rip),%r14
	movq %r14,0x8(%r15)
	cmpq $0x1,0x8(%rbp)
	je L_427010
L_127196:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_127197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_427010:
L_127225:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_127226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B66
L_127236:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_127237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B55
L_127111:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127112
L_127178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_127179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127179
.p2align 0x4
.long 0xE95
L_127179:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_127112:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF160)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_427012
L_127113:
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_127114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_427012:
L_127173:
	movq (globalObjptr+0xDF58)(%rip),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_127174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x69B
L_127061:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127062
L_127072:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_127073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127073
.p2align 0x4
.long 0x6AE
L_127073:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_127062:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127063:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_127048
L_127064:
	cmpq $0x1,%r14
	je L_427014
L_127065:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127063
.p2align 0x4
L_427014:
L_127066:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127067
L_127070:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_127071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127071
.p2align 0x4
.long 0x5F2
L_127071:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_127067:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_127069
L_127068:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B6A
L_127268:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127269
L_127292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_127293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127293
.p2align 0x4
.long 0x1B6D
L_127293:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_127269:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE9A0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_127270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x836
L_127197:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_127198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xBA7
L_127226:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127227
L_127228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_127229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127229
.p2align 0x4
.long 0x5E7
L_127229:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_127227:
	movq 0x20(%rbp),%r15
L_127207:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE920)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_127208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x1B66
L_127237:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127238
L_127252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_127253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127253
.p2align 0x4
.long 0xC43
L_127253:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_127238:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF2F8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_127239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x98A
L_127114:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_127115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1B60
L_127174:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127175
L_127176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_127177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127177
.p2align 0x4
.long 0xBA3
L_127177:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_127175:
	movq 0x20(%rbp),%r15
L_127141:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE920)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_127142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x1B3E
L_127270:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_127271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xAA1
L_127198:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_127199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x78B
L_127208:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127209
L_127218:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_127219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127219
.p2align 0x4
.long 0x78C
L_127219:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_127209:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127210:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_127048
L_127211:
	cmpq $0x1,%r14
	je L_427023
L_127212:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127210
.p2align 0x4
L_427023:
L_127213:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127214
L_127216:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_127217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127217
.p2align 0x4
.long 0xA25
L_127217:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_127214:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_127069
L_127215:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B66
L_127239:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127240
L_127250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_127251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127251
.p2align 0x4
.long 0xC43
L_127251:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_127240:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127241:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_127048
L_127242:
	cmpq $0x1,%r14
	je L_427028
L_127243:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127241
.p2align 0x4
L_427028:
L_127244:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127245
L_127248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_127249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127249
.p2align 0x4
.long 0x1B67
L_127249:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_127245:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_427029
L_127246:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_127193
.p2align 0x4
L_427029:
L_127247:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_127193
.p2align 0x4
.long 0x1B56
L_127115:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_127116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x78B
L_127142:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127143
L_127152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_127153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127153
.p2align 0x4
.long 0x78C
L_127153:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_127143:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127144:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_127048
L_127145:
	cmpq $0x1,%r14
	je L_427033
L_127146:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127144
.p2align 0x4
L_427033:
L_127147:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127148
L_127150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_127151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127151
.p2align 0x4
.long 0xA25
L_127151:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_127148:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_127069
L_127149:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B3E
L_127271:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127272
L_127290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_127291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127291
.p2align 0x4
.long 0xBB8
L_127291:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_127272:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x9EC8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_127273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xAA1
L_127199:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127200
L_127223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_127224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127224
.p2align 0x4
.long 0x4B0
L_127224:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_127200:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127201:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_127048
L_127202:
	cmpq $0x1,%r14
	je L_427039
L_127203:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127201
.p2align 0x4
L_427039:
L_127204:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127205
L_127221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_127222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127222
.p2align 0x4
.long 0xB1F
L_127222:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_127205:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_427040
L_127206:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_127207
.p2align 0x4
L_427040:
L_127220:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_127207
.p2align 0x4
.long 0x1B56
L_127116:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127117
L_127171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_127172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127172
.p2align 0x4
.long 0x98C
L_127172:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_127117:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE920)(%rip),%r14
	movq %r14,0x8(%r15)
	cmpq $0x1,0x48(%rbp)
	je L_427044
L_127118:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_127119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_427044:
L_127166:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_127167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B6B
L_127273:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_127274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B57
L_127119:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_127120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1B5E
L_127167:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127168
L_127169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_127170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127170
.p2align 0x4
.long 0x1B5F
L_127170:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_127168:
	movq 0x20(%rbp),%r15
L_127129:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE20)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_127130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x1B6B
L_127274:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127275
L_127288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_127289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127289
.p2align 0x4
.long 0x1B6C
L_127289:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_127275:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE9B0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_127276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x1B58
L_127120:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_127121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B59
L_127130:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_127131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x90C
L_127276:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127277
L_127286:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_127287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127287
.p2align 0x4
.long 0x9BB
L_127287:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_127277:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127278:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_127048
L_127279:
	cmpq $0x1,%r14
	je L_427048
L_127280:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127278
.p2align 0x4
L_427048:
L_127281:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127282
L_127284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_127285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127285
.p2align 0x4
.long 0x770
L_127285:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_127282:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jz L_127069
L_127283:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B58
L_127121:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127122
L_127164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_127165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127165
.p2align 0x4
.long 0x1B5D
L_127165:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_127122:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127123:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_127048
L_127124:
	cmpq $0x1,%r14
	je L_427053
L_127125:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127123
.p2align 0x4
L_427053:
L_127126:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127127
L_127162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_127163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127163
.p2align 0x4
.long 0x1B5C
L_127163:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_127127:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_427054
L_127128:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_127129
.p2align 0x4
L_427054:
L_127161:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_127129
.p2align 0x4
.long 0x1B59
L_127131:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127132
L_127159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_127160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127160
.p2align 0x4
.long 0x1B5B
L_127160:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_127132:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE018)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_127133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x1B5A
L_127133:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127134
L_127157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_127158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127158
.p2align 0x4
.long 0xC21
L_127158:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_127134:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127135:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_127048
L_127136:
	cmpq $0x1,%r14
	je L_427059
L_127137:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127135
.p2align 0x4
L_427059:
L_127138:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127139
L_127155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_127156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127156
.p2align 0x4
.long 0xDDD
L_127156:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_127139:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_427060
L_127140:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_127141
.p2align 0x4
L_427060:
L_127154:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_127141
.text
.p2align 0x4
.globl layout_48
.hidden layout_48
layout_48:
L_127302:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_127303
L_127389:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_127390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127390
.p2align 0x4
.long 0x45F
L_127390:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_127303:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_427066
L_127304:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF56,%r14
	je L_427065
	cmpq $0xF57,%r14
	je L_427064
L_127305:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xE658)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_127306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_427064:
L_127363:
	movl 0x0(%r15),%r14d
	movl %r14d,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq (globalObjptr+0xF348)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_427065:
L_127338:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq (globalObjptr+0xF338)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_427066:
L_127388:
	movq (globalObjptr+0xD140)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E5
L_127306:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,0x10(%rbp)
	je L_427068
L_127307:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_427068:
L_127333:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E0
L_127364:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_127365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x4F4
L_127339:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_427069
L_127340:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_127341:
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_127342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_427069:
L_127362:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_127341
.p2align 0x4
.long 0x5EF
L_127308:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_127309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x48F
L_127334:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127335
L_127336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127337
.p2align 0x4
.long 0x5E5
L_127337:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127335:
	movq 0x20(%rbp),%r15
L_127318:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_127319:
	addl 0x0(%r14),%ecx
	movl %ecx,0x28(%rbp)
	jo L_427073
L_127320:
	cmpq $0x1,%r15
	je L_427070
L_127321:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_127319
.p2align 0x4
L_427070:
L_127322:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127323
L_127326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_127327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127327
.p2align 0x4
.long 0x4E6
L_127327:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_127323:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_427071
L_127324:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427071:
L_127325:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427073:
L_127312:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x459
L_127365:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127366
L_127386:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127387
.p2align 0x4
.long 0x5E5
L_127387:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127366:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xF350)(%rip),%r13
	movq %r13,0x8(%r14)
	movl 0x10(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_427075
L_127367:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_127368:
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_127369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_427075:
L_127385:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_127368
.p2align 0x4
.long 0x517
L_127342:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127343
L_127360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127361
.p2align 0x4
.long 0x4E9
L_127361:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127343:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF340)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_127344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x519
L_127309:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127310
L_127331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_127332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127332
.p2align 0x4
.long 0x51C
L_127332:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_127310:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127311:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_127312
L_127313:
	cmpq $0x1,%r14
	je L_427078
L_127314:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127311
.p2align 0x4
L_427078:
L_127315:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127316
L_127329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_127330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127330
.p2align 0x4
.long 0x607
L_127330:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_127316:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_427079
L_127317:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_127318
.p2align 0x4
L_427079:
L_127328:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_127318
.p2align 0x4
.long 0x5ED
L_127369:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127370
L_127383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_127384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127384
.p2align 0x4
.long 0x4FC
L_127384:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_127370:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF340)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_127371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x5ED
L_127344:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127345
L_127358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_127359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127359
.p2align 0x4
.long 0x4FC
L_127359:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_127345:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_127346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x459
L_127371:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127372
L_127381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_127382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127382
.p2align 0x4
.long 0x508
L_127382:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_127372:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127373:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_127312
L_127374:
	cmpq $0x1,%r14
	je L_427085
L_127375:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127373
.p2align 0x4
L_427085:
L_127376:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127377
L_127379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_127380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127380
.p2align 0x4
.long 0x51D
L_127380:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_127377:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_127325
L_127378:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x459
L_127346:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127347
L_127356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_127357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127357
.p2align 0x4
.long 0x508
L_127357:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_127347:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127348:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_127312
L_127349:
	cmpq $0x1,%r14
	je L_427090
L_127350:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127348
.p2align 0x4
L_427090:
L_127351:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127352
L_127354:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_127355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127355
.p2align 0x4
.long 0x51D
L_127355:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_127352:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_127325
L_127353:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layoutHeader_0
.hidden layoutHeader_0
layoutHeader_0:
L_127391:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_127392
L_127496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_127497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127497
.p2align 0x4
.long 0x45F
L_127497:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_127392:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0xF1F0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_127393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x98A
L_127393:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_127394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x9E5
L_127394:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_127395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x9E5
L_127395:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_127396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BB
L_127396:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127397
L_127494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_127495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127495
.p2align 0x4
.long 0x8C1
L_127495:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_127397:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_427096
L_127400:
	movl %r13d,0x70(%rbp)
	movq $0x3CA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_127401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_427096:
L_127399:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B70
L_127401:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_127402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1B70
L_127402:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127403
L_127492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_127493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127493
.p2align 0x4
.long 0x8C1
L_127493:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_127403:
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_427098
L_127404:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_127405:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_127406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_427098:
L_127423:
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_127424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1B71
L_127406:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_127407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1B74
L_127424:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,0x38(%rbp)
	je L_427100
L_127425:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_127426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_427100:
L_127487:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_127488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA95
L_127407:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_127408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA45
L_127426:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127427
L_127485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_127486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127486
.p2align 0x4
.long 0xBAA
L_127486:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_127427:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_127399
L_127429:
	movl %r13d,0x78(%rbp)
	movq $0x3B31,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_127430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x1B7D
L_127488:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127489
L_127490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_127491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127491
.p2align 0x4
.long 0x8C1
L_127491:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_127489:
	movq 0x38(%rbp),%r15
L_127439:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF1F8)(%rip),%r15
	movq %r15,0x8(%r14)
	cmpq $0x1,0x30(%rbp)
	je L_427103
L_127440:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_127441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_427103:
L_127475:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_127476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA95
L_127408:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xEAA0)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_127409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1A01
L_127430:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_127431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xA45
L_127441:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127442
L_127473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_127474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127474
.p2align 0x4
.long 0xBAA
L_127474:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_127442:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_127399
L_127444:
	movl %r13d,0x78(%rbp)
	movq $0x3CA9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_127445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x1B7B
L_127476:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127477
L_127478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_127479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127479
.p2align 0x4
.long 0xDF3
L_127479:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_127477:
	movq 0x18(%rbp),%r15
L_127454:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF090)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_127455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x1B72
L_127409:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127410
L_127421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_127422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127422
.p2align 0x4
.long 0x1B73
L_127422:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_127410:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_127411:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_427111
L_127413:
	cmpq $0x1,%r14
	je L_427108
L_127414:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127411
.p2align 0x4
L_427108:
L_127415:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127416
L_127419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_127420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127420
.p2align 0x4
.long 0x51B
L_127420:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_127416:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_427109
L_127417:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427109:
L_127418:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427111:
L_127412:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1A01
L_127431:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127432
L_127483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_127484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127484
.p2align 0x4
.long 0xBAA
L_127484:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_127432:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127433:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_127412
L_127434:
	cmpq $0x1,%r14
	je L_427113
L_127435:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127433
.p2align 0x4
L_427113:
L_127436:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127437
L_127481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_127482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127482
.p2align 0x4
.long 0x1B7C
L_127482:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_127437:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_427114
L_127438:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_127439
.p2align 0x4
L_427114:
L_127480:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_127439
.p2align 0x4
.long 0x1B75
L_127445:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_127446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1B76
L_127455:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127456
L_127466:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_127467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127467
.p2align 0x4
.long 0x1B78
L_127467:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_127456:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127457:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_127412
L_127458:
	cmpq $0x1,%r14
	je L_427118
L_127459:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127457
.p2align 0x4
L_427118:
L_127460:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127461
L_127464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_127465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127465
.p2align 0x4
.long 0x1B77
L_127465:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_127461:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_427119
L_127462:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_127405
.p2align 0x4
L_427119:
L_127463:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_127405
.p2align 0x4
.long 0x1B75
L_127446:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127447
L_127471:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_127472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127472
.p2align 0x4
.long 0x1B7A
L_127472:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_127447:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127448:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_127412
L_127449:
	cmpq $0x1,%r14
	je L_427123
L_127450:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127448
.p2align 0x4
L_427123:
L_127451:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127452
L_127469:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_127470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127470
.p2align 0x4
.long 0x1B79
L_127470:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_127452:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_427124
L_127453:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_127454
.p2align 0x4
L_427124:
L_127468:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_127454
.text
.p2align 0x4
.globl checkPrimApp_0
.hidden checkPrimApp_0
checkPrimApp_0:
L_127498:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_127499
L_127609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_127610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127610
.p2align 0x4
.long 0x4AE
L_127610:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_127499:
	movq 0x18(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_427128
L_127500:
	movq %r13,0x68(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (word_34+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_427128:
L_127604:
	movq %r10,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_127605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1B7E
word_34:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427130
L_127501:
	movq %r14,0x68(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (word_35+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_427130:
L_127599:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_127600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_127605:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1B7F
word_35:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427131
L_127502:
	movq %r14,0x68(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (word_36+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_427131:
L_127594:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_127595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_127600:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_344:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127606
L_127607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_127608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127608
.p2align 0x4
.long 0x451
L_127608:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_127606:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1338
word_36:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127503
L_127592:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_127593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127593
.p2align 0x4
.long 0x61D
L_127593:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_127503:
	movq $0x41FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x24E8)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_127504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp done_48
.p2align 0x4
.long 0x1
L_127595:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_343:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127601
L_127602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_127603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127603
.p2align 0x4
.long 0x451
L_127603:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_127601:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B80
L_127504:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127505
L_127590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_127591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127591
.p2align 0x4
.long 0x1B81
L_127591:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_127505:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x9,%r14
	je L_427202
	cmpq $0xA,%r14
	je L_427201
	cmpq $0xB,%r14
	je L_427200
	cmpq $0xD,%r14
	je L_427199
	cmpq $0x11,%r14
	je L_427198
	cmpq $0x15,%r14
	je L_427197
	cmpq $0x16,%r14
	je L_427196
	cmpq $0x43,%r14
	je L_427195
	cmpq $0x51,%r14
	je L_427194
	cmpq $0x67,%r14
	je L_427193
	cmpq $0x69,%r14
	je L_427192
	cmpq $0x6A,%r14
	je L_427191
	cmpq $0x6B,%r14
	je L_427190
	cmpq $0x6D,%r14
	je L_427189
	cmpq $0x6E,%r14
	je L_427188
	cmpq $0x6F,%r14
	je L_427187
	cmpq $0x71,%r14
	je L_427186
	cmpq $0x72,%r14
	je L_427185
	cmpq $0x73,%r14
	je L_427184
	cmpq $0x75,%r14
	je L_427183
	cmpq $0x76,%r14
	je L_427182
	cmpq $0x77,%r14
	je L_427181
	cmpq $0x79,%r14
	je L_427180
	cmpq $0x7A,%r14
	je L_427179
	cmpq $0x7B,%r14
	je L_427178
	cmpq $0x7D,%r14
	je L_427177
	cmpq $0x7E,%r14
	je L_427176
	cmpq $0x7F,%r14
	je L_427175
	cmpq $0x81,%r14
	je L_427174
	cmpq $0x82,%r14
	je L_427173
	cmpq $0x83,%r14
	je L_427172
	cmpq $0x85,%r14
	je L_427171
	cmpq $0x86,%r14
	je L_427170
	cmpq $0x87,%r14
	je L_427169
	cmpq $0x89,%r14
	je L_427168
L_127506:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_127507
L_127515:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x10A8,%rax
	cmpq $0x1A,%rax
	ja L_427135
	leaq jumpTable_286(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_286:
.quad L_427166,L_427165,L_427164,L_427163,L_427162,L_427161,L_427160,L_427159,L_427158,L_427157,L_427156,L_427155,L_427154,L_427153,L_427152,L_427151,L_427150,L_427149,L_427148,L_427147,L_427146,L_427145,L_427144,L_427143,L_427142,L_427141,L_427136
.text
.p2align 0x4
L_427135:
L_127507:
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_127508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_542
.p2align 0x4
L_427136:
L_127545:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_427140
L_127547:
	decl %r13d
	jo L_427139
L_127549:
	movl %r13d,0x28(%rbp)
	movq $0x1,0x8(%rbp)
.p2align 0x4,,0x7
loop_1342:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427138
.p2align 0x4,,0x7
L_127550:
	movl 0x28(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_427137
L_127551:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x4203,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2717,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	jmp loop_1342
.p2align 0x4
L_427137:
L_127552:
	movq $0x41F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427138:
L_127553:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_127554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127554
.p2align 0x4
.long 0x810
L_127554:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_127550
.p2align 0x4
L_427139:
L_127548:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427140:
L_127546:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427141:
L_127544:
	movq $0x41F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427142:
L_127543:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movq $0x4209,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq %r13,0x8(%rbp)
	movq $0x4201,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427143:
L_127542:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movb 0x4(%r15),%r13b
	movq $0x4209,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq %r13,0x8(%rbp)
	movq $0x4201,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427144:
L_127541:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
x_469:
	movq $0x4207,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r15,0x10(%r14)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x2717,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r11,0x8(%rbp)
	addq $0x18,%r12
	movq $0x41FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427145:
L_127540:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp x_469
.p2align 0x4
L_427146:
L_127539:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_469
.p2align 0x4
L_427147:
L_127538:
	movq 0x8(%rbp),%r15
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r13
	movq $0x4205,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq %r13,0x8(%rbp)
	movq $0x41FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427148:
L_127534:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x4207,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq $0x2717,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_127535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp done_48
.p2align 0x4
L_427149:
L_127533:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r14),%r11
	movq $0x4207,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq $0x2717,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x8(%rbp)
	movq $0x41FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427150:
L_127532:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
wordShift_2:
	movq $0x4205,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x4207,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r15,0x10(%r14)
	movq $0x2717,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r11,0x8(%rbp)
	addq $0x18,%r12
	movq $0x41FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427151:
L_127531:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x4207,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq $0x2717,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x8(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427152:
L_127530:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp x_469
.p2align 0x4
L_427153:
L_127529:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp x_469
.p2align 0x4
L_427154:
L_127528:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
x_470:
	movq $0x4207,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r15,0x10(%r14)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq %r13,0x8(%rbp)
	movq $0x41FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427155:
L_127527:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_470
.p2align 0x4
L_427156:
L_127526:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_470
.p2align 0x4
L_427157:
L_127525:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_469
.p2align 0x4
L_427158:
L_127524:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp x_469
.p2align 0x4
L_427159:
L_127523:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp x_469
.p2align 0x4
L_427160:
L_127522:
	movq 0x8(%rbp),%r15
	movb 0x4(%r15),%r14b
	movq 0x8(%r15),%r13
	movq $0x4205,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq %r13,0x8(%rbp)
	movq $0x41FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427161:
L_127521:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp wordShift_2
.p2align 0x4
L_427162:
L_127520:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp wordShift_2
.p2align 0x4
L_427163:
L_127519:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp wordShift_2
.p2align 0x4
L_427164:
L_127518:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_469
.p2align 0x4
L_427165:
L_127517:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp x_469
.p2align 0x4
L_427166:
L_127516:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_469
.p2align 0x4
L_427168:
L_127589:
	movq %r15,%r14
	shrq $0x10,%r14
	movb %r14b,%r13b
	shrq $0x8,%r15
	movb %r15b,%r14b
	movq $0x4209,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2717,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq %r11,0x8(%rbp)
	movq $0x41FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427169:
L_127588:
	shrq $0x8,%r15
	movb %r15b,%dl
x_472:
	movq $0x4209,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %dl,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x2717,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r11,0x8(%rbp)
	addq $0x18,%r12
	movq $0x41FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %dl,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427170:
L_127587:
	shrq $0x8,%r15
	movb %r15b,%dl
x_471:
	movq $0x4209,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %dl,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq %r13,0x8(%rbp)
	movq $0x41FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %dl,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427171:
L_127586:
	shrq $0x8,%r15
	movb %r15b,%dl
x_473:
	movq $0x4209,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %dl,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2717,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x8(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427172:
L_127585:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_471
.p2align 0x4
L_427173:
L_127584:
	shrq $0x8,%r15
	movb %r15b,%dl
realTernary_2:
	movq $0x4209,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %dl,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x2717,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r13,0x8(%rbp)
	addq $0x18,%r12
	movq $0x41FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %dl,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427174:
L_127583:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp realTernary_2
.p2align 0x4
L_427175:
L_127582:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_472
.p2align 0x4
L_427176:
L_127581:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_473
.p2align 0x4
L_427177:
L_127580:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_473
.p2align 0x4
L_427178:
L_127579:
	shrq $0x8,%r15
	movb %r15b,%r14b
	movq $0x4205,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x4209,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2717,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r10,0x8(%rbp)
	addq $0x18,%r12
	movq $0x41FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r11,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427179:
L_127578:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_473
.p2align 0x4
L_427180:
L_127577:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_472
.p2align 0x4
L_427181:
L_127576:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_472
.p2align 0x4
L_427182:
L_127575:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_471
.p2align 0x4
L_427183:
L_127574:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_471
.p2align 0x4
L_427184:
L_127573:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_471
.p2align 0x4
L_427185:
L_127572:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_471
.p2align 0x4
L_427186:
L_127571:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_471
.p2align 0x4
L_427187:
L_127570:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_471
.p2align 0x4
L_427188:
L_127569:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_471
.p2align 0x4
L_427189:
L_127568:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_471
.p2align 0x4
L_427190:
L_127567:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_472
.p2align 0x4
L_427191:
L_127566:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_471
.p2align 0x4
L_427192:
L_127565:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_471
.p2align 0x4
L_427193:
L_127564:
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_471
.p2align 0x4
L_427194:
L_127563:
	movq $0x1,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427195:
L_127562:
	movq (globalObjptr+0x24E0)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427196:
L_127561:
	movq $0x420B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq %r13,0x8(%rbp)
	movq $0x4201,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427197:
L_127560:
	movq $0x4205,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x420B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x2717,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r10,0x8(%rbp)
	addq $0x18,%r12
	movq $0x41F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427198:
L_127559:
	movq $0x420B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x2717,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r11,0x8(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427199:
L_127558:
	movq $0x4205,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq %r13,0x8(%rbp)
	movq $0x41F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427200:
L_127557:
	movq $0x420B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x2717,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r11,0x8(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427201:
L_127556:
	movq $0x420B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x2717,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r11,0x8(%rbp)
	addq $0x18,%r12
	movq $0x4201,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
L_427202:
L_127555:
	movq $0x4205,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2717,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x420B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x2717,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r10,0x8(%rbp)
	addq $0x18,%r12
	movq $0x41F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp done_48
.p2align 0x4
.long 0x1
bug_342:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127596
L_127597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_127598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127598
.p2align 0x4
.long 0x451
L_127598:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_127596:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_127508:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127509
L_127513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_127514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127514
.p2align 0x4
.long 0x451
L_127514:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_127509:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF358)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x920
L_127535:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	testl %r15d,%r15d
	jnz L_427206
L_127536:
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427206:
L_127537:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_341:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127510
L_127511:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_127512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127512
.p2align 0x4
.long 0x451
L_127512:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_127510:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl done_48
.hidden done_48
done_48:
L_127611:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_127612
L_127739:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_127740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127740
.p2align 0x4
.long 0x4AE
L_127740:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_127612:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_427242
L_127613:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_127614:
	incl %ecx
	jo L_127615
L_127616:
	cmpq $0x1,%r15
	je L_427208
L_127617:
	movq 0x8(%r15),%r15
	jmp L_127614
.p2align 0x4
L_427208:
L_127618:
L_127619:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_427240
L_127620:
	cmpq $0x7FFFFFFF,%rdx
	ja L_427239
L_127621:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1573,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127622
.p2align 0x4
.long 0x4DF
L_127622:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_127623:
	movq 0x8(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1343:
	cmpq 0x20(%rbp),%r15
	jnl L_427210
L_127733:
	cmpq $0x1,%r14
	je L_427209
L_127734:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x28(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1343
.p2align 0x4
L_427209:
L_127735:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427210:
L_127624:
	movq 0x28(%rbp),%r15
	movq $0x1769,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x8(%rbp)
	movl %r13d,%r14d
	movl %r14d,0x20(%rbp)
	movslq %r14d,%r11
	cmpq %r13,%r11
	jne L_127626
L_127627:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movq %r13,0x30(%rbp)
	movl %r13d,%r15d
	movslq %r15d,%r11
	cmpq %r13,%r11
	jne L_427237
L_127629:
	cmpl %r15d,%r14d
	jne L_127631
L_127632:
	movl $0x0,0x24(%rbp)
.p2align 0x4,,0x7
loop_1344:
	movl 0x24(%rbp),%r15d
	cmpl 0x20(%rbp),%r15d
	je L_427224
L_127633:
	movslq %r15d,%r14
	cmpq 0x8(%rbp),%r14
	jnb L_127635
L_127636:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x38(%rbp)
	cmpq 0x30(%rbp),%r14
	jnb L_427222
L_127638:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r11
	movq %r11,0x40(%rbp)
	cmpq $0x1,%r11
	jne L_427214
L_127684:
	movq 0x8(%r13),%r15
L_127685:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_127631
L_127686:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF53,%r14
	jne L_427212
.p2align 0x4,,0x7
L_127645:
	movl 0x24(%rbp),%r15d
	incl %r15d
	jo L_427211
L_127646:
	movl %r15d,0x24(%rbp)
	jmp loop_1344
.p2align 0x4
L_427211:
L_127615:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427212:
L_127631:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427214:
L_127639:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127640
L_127682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_127683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127683
.p2align 0x4
.long 0x1B89
L_127683:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_127640:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2102,%r14
	je L_427220
	cmpq $0x2103,%r14
	je L_427219
	cmpq $0x2104,%r14
	je L_427217
	cmpq $0x2105,%r14
	je L_427215
L_127641:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_127642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_427215:
L_127671:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_427216
L_127672:
	movq %r13,0x50(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_127673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_427216:
L_127677:
	movq %r10,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_127678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427217:
L_127664:
	movq 0x8(%r15),%r13
	movb 0x0(%r15),%r11b
	movzbq %r11b,%r14
	shlq $0x3,%r14
	orq $0x6,%r14
	movq %r14,0x48(%rbp)
	testb %r11b,%r11b
	jnz L_427218
L_127665:
	movq $0x11,%r14
	movq %r13,%r15
toBits_16:
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq $0x11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_127666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_427218:
L_127670:
	movq $0x9,%r14
	movq %r13,%r15
	jmp toBits_16
.p2align 0x4
L_427219:
L_127648:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_127649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_427220:
L_127647:
	movq 0x0(%r15),%r14
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_127642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_427222:
L_127635:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427224:
L_127688:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127689
L_127731:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_127732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127732
.p2align 0x4
.long 0x65A
L_127732:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_127689:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_427233
L_127691:
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_127631
L_127692:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x20FC,%r13
	je L_427230
	cmpq $0x20FD,%r13
	je L_427229
	cmpq $0x20FE,%r13
	je L_427227
	cmpq $0x20FF,%r13
	je L_427226
	cmpq $0x2100,%r13
	je L_427225
L_127693:
	movq 0x0(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp equals_1
.p2align 0x4
L_427225:
L_127728:
	movq 0x0(%r14),%r13
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	movq $0x493,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r11,0x0(%rbp)
	addq $0x18,%r12
	movq %r15,0x8(%rbp)
	jmp equals_1
.p2align 0x4
L_427226:
L_127727:
	movq 0x0(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp equals_1
.p2align 0x4
L_427227:
L_127720:
	movq 0x8(%r14),%r13
	movb 0x0(%r14),%r11b
	movzbq %r11b,%r10
	shlq $0x3,%r10
	orq $0x6,%r10
	movq %r10,0x8(%rbp)
	testb %r11b,%r11b
	jnz L_427228
L_127721:
	movq $0x11,%r14
	xchgq %r13,%r15
toBits_17:
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movq $0x11,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_127722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_427228:
L_127726:
	movq $0x9,%r14
	xchgq %r13,%r15
	jmp toBits_17
.p2align 0x4
L_427229:
L_127705:
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq %r11,0x8(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x18(%rbp)
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	movq $0x493,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r11,0x28(%rbp)
	addq $0x18,%r12
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_127706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_427230:
L_127694:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x0(%r8),%rsp
	cmpq $0x1,%rsp
	je L_427231
L_127695:
	movq %r11,0x28(%rbp)
	movq 0x0(%rsp),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_127696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_427231:
L_127700:
	movq %r9,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_127701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427233:
L_127729:
	cmpq $0x1,0x0(%rbp)
	jne L_127631
L_127716:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427237:
L_127626:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427239:
L_127736:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427240:
L_127737:
	movq (globalObjptr+0x24D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_127623
.p2align 0x4
L_427242:
L_127738:
	xorl %ecx,%ecx
	jmp L_127619
.p2align 0x4
.long 0x1B82
L_127642:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jnz L_127645
	jmp L_127631
.p2align 0x4
.long 0x1B88
L_127673:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127674
L_127675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_127676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127676
.p2align 0x4
.long 0x1B89
L_127676:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_127674:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_127642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x1
L_127678:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1B86
L_127666:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127667
L_127668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_127669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127669
.p2align 0x4
.long 0x1B87
L_127669:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_127667:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_127642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x1B83
L_127649:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127650
L_127662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_127663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127663
.p2align 0x4
.long 0x1B85
L_127663:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_127650:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_127645
L_127651:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_127652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x2B
L_127722:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127723
L_127724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_127725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127725
.p2align 0x4
.long 0x2C
L_127725:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_127723:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x5EF
L_127706:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127707
L_127718:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127719
.p2align 0x4
.long 0x4E1
L_127719:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127707:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_127716
L_127708:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_127709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x2B
L_127696:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127697
L_127698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_127699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127699
.p2align 0x4
.long 0x2C
L_127699:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_127697:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x1
L_127701:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_345:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127679
L_127680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_127681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127681
.p2align 0x4
.long 0x451
L_127681:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_127679:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B84
L_127652:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	testl %r15d,%r15d
	jnz L_127645
L_127653:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
L_127654:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_127631
L_127655:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF52,%r13
	jne L_127631
L_127656:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%r15),%rsi
	movq 0x50(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_127657:
	testl %eax,%eax
	jnz L_127645
	jmp L_127631
.p2align 0x4
.long 0x490
L_127709:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jnz L_127716
L_127710:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
L_127711:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_127631
L_127712:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF52,%r13
	jne L_127631
L_127713:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x18(%rbp),%rsi
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_127714:
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_346:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127702
L_127703:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_127704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127704
.p2align 0x4
.long 0x451
L_127704:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_127702:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1593
.hidden x_1593
x_1593:
L_127741:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_127742
L_127831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_127832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127832
.p2align 0x4
.long 0x45F
L_127832:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_127742:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_127743:
	testl %eax,%eax
	jz L_427262
L_127746:
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_127747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_427262:
L_127745:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5AF
L_127747:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	testl %r15d,%r15d
	jnz L_127754
L_127748:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r13,%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_427311
	cmpq $0x6,%r15
	je L_127745
L_127749:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_127750
L_127773:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF51,%r15
	je L_427303
	cmpq $0xF52,%r15
	je L_427289
	cmpq $0xF53,%r15
	je L_427276
L_127750:
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_127754
L_127751:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_127745
L_127752:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF51,%r15
	je L_127754
	cmpq $0xF52,%r15
	je L_427264
	jmp L_127745
.p2align 0x4
L_427264:
L_127755:
	movq 0x0(%r14),%r15
x_474:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_427272
L_127758:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1345:
	cmpl %ecx,%ebx
	je L_427271
L_127759:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_427270
L_127762:
	movq 0x0(%r15,%r13,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,%r13
	andq $0x7,%r13
	cmpq $0x1,%r13
	je L_127766
	cmpq $0x6,%r13
	je L_127766
L_127763:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_127745
L_127764:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xF51,%r13
	jne L_127745
L_127766:
	incl %ebx
	jo L_427265
L_127768:
	jmp loop_1345
.p2align 0x4
L_427265:
L_127767:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427270:
L_127761:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427271:
L_127754:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427272:
L_127757:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427276:
L_127801:
	movq 0x0(%r13),%r15
	movq %r14,%r13
	andq $0x7,%r13
	cmpq $0x1,%r13
	je L_127754
L_127802:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_127745
L_127803:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF51,%r13
	je L_127754
	cmpq $0xF52,%r13
	je L_427285
	cmpq $0xF53,%r13
	je L_427277
	jmp L_127745
.p2align 0x4
L_427277:
L_127806:
	movq 0x0(%r14),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%ecx
	movslq %ecx,%r14
	cmpq %r13,%r14
	jne L_127757
L_127808:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r11
	movl %r11d,%r9d
	movslq %r9d,%r14
	movl %r9d,(localWord32+0x4)(%rip)
	cmpq %r11,%r14
	jne L_127757
L_127810:
	movl $0x0,(localWord32+0x8)(%rip)
	xorl %ebx,%ebx
	movq %r10,%r14
.p2align 0x4,,0x7
loop_1347:
	cmpl %ecx,%ebx
	movl %ecx,(localWord32+0x0)(%rip)
	jnl L_127754
L_127812:
	movslq %ebx,%r10
	movl %ebx,(localWord32+0xC)(%rip)
	cmpq %r13,%r10
	jnb L_127761
L_127814:
	movq 0x0(%r15,%r10,8),%r9
	movq %r9,%r10
	movl (localWord32+0x8)(%rip),%ecx
	movl (localWord32+0x4)(%rip),%ebx
.p2align 0x4,,0x7
loop_1348:
	cmpl %ebx,%ecx
	jnl L_127745
L_127816:
	movslq %ecx,%r9
	cmpq %r11,%r9
	jnb L_127761
L_127818:
	movq 0x0(%r14,%r9,8),%r8
	movl 0x0(%r10),%esp
	cmpl %esp,0x0(%r8)
	je L_427278
L_127819:
	incl %ecx
	jmp loop_1348
.p2align 0x4
L_427278:
L_127820:
	movl (localWord32+0xC)(%rip),%r10d
	incl %r10d
	incl %ecx
	movl %ecx,(localWord32+0x8)(%rip)
	xchgl %r10d,%ebx
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_1347
.p2align 0x4
L_427285:
L_127805:
	movq 0x0(%r14),%r15
	jmp x_474
.p2align 0x4
L_427289:
L_127781:
	movq 0x0(%r13),%r15
	movq %r14,%r13
	andq $0x7,%r13
	cmpq $0x1,%r13
	je L_127754
L_127782:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_127745
L_127783:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF51,%r13
	je L_127754
	cmpq $0xF52,%r13
	je L_427299
	cmpq $0xF53,%r13
	je L_427290
	jmp L_127745
.p2align 0x4
L_427290:
L_127786:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_127757
L_127788:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1346:
	cmpl %ebx,%ecx
	je L_127754
L_127789:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_127761
L_127791:
	movq 0x0(%r15,%r13,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,%r13
	andq $0x7,%r13
	cmpq $0x1,%r13
	je L_127795
	cmpq $0x6,%r13
	je L_127795
L_127792:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_127745
L_127793:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xF51,%r13
	jne L_127745
L_127795:
	incl %ebx
	jo L_127767
L_127796:
	jmp loop_1346
.p2align 0x4
L_427299:
L_127785:
	movq 0x0(%r14),%r15
	jmp x_474
.p2align 0x4
L_427303:
L_127774:
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_127754
L_127775:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_127745
L_127776:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF51,%r15
	je L_127754
	cmpq $0xF52,%r15
	je L_427305
	cmpq $0xF53,%r15
	je L_127754
	jmp L_127745
.p2align 0x4
L_427305:
L_127778:
	movq 0x0(%r14),%r15
	jmp x_474
.p2align 0x4
L_427311:
L_127822:
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_127754
L_127823:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_127745
L_127824:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF51,%r15
	je L_127754
	cmpq $0xF52,%r15
	je L_427313
	cmpq $0xF53,%r15
	je L_127754
	jmp L_127745
.p2align 0x4
L_427313:
L_127826:
	movq 0x0(%r14),%r15
	jmp x_474
.text
.p2align 0x4
.globl get_105
.hidden get_105
get_105:
L_127833:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_127834
L_127887:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_127888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127888
.p2align 0x4
.long 0x45F
L_127888:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_127834:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_427327
L_127836:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_427326
L_127837:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_127839:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_427325
L_127879:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xC9E,%r10
	jne L_427324
L_127880:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_427321
L_127840:
	incl %ecx
	jo L_427320
L_127842:
	cmpq $0x1,%r14
	je L_427318
L_127843:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_127839
.p2align 0x4
L_427318:
L_127844:
L_127845:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_427319
L_127847:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_475
L_127878:
	movl %ecx,0x0(%r15)
x_475:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_127849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_427319:
L_127846:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427320:
L_127841:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427321:
L_127882:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_127846
L_127883:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_427322
L_127885:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427322:
L_127884:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427324:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_127840
.p2align 0x4
L_427325:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_127840
.p2align 0x4
L_427326:
L_127886:
	xorl %ecx,%ecx
	jmp L_127845
.p2align 0x4
L_427327:
L_127835:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_127849:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_127850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_127850:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_127851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_127851:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xED00)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_127852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_127852:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_127853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_127853:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127854
L_127876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_127877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127877
.p2align 0x4
.long 0x4AE
L_127877:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_127854:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_127855:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_127841
L_127856:
	cmpq $0x1,%r14
	je L_427329
L_127857:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_127855
.p2align 0x4
L_427329:
L_127858:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127859
L_127874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_127875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127875
.p2align 0x4
.long 0x4E6
L_127875:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_127859:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_427330
L_127860:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_213:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_427330:
L_127873:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_213
.p2align 0x4
.long 0x1
rev_211:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_427336
L_127861:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_127862:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427335
.p2align 0x4,,0x7
L_127863:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427334
L_127864:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_127862
.p2align 0x4
L_427334:
L_127866:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_427335:
L_127870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_127871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127871
.p2align 0x4
.long 0x45B
L_127871:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_127863
.p2align 0x4
L_427336:
L_127872:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_127866
.p2align 0x4
.long 0x1
bug_347:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127867
L_127868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_127869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127869
.p2align 0x4
.long 0x451
L_127869:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_127867:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1594
.hidden x_1594
x_1594:
L_127889:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_127890
L_127960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_127961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127961
.p2align 0x4
.long 0x452
L_127961:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_127890:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_427349
L_127891:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x149E,%r13
	je L_427348
L_127893:
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2064,%r15
	je L_427347
	cmpq $0x2065,%r15
	je L_427346
	cmpq $0x2066,%r15
	je L_427344
	cmpq $0x2067,%r15
	je L_427342
	cmpq $0x2068,%r15
	je L_427340
	cmpq $0x2069,%r15
	je L_427338
L_127894:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	leaq L_127899(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_127895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1291
.p2align 0x4
L_427338:
L_127946:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427339
L_127947:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_127899(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_127948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_427339:
L_127954:
	movq %r11,0x28(%rbp)
	leaq L_127899(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_127955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427340:
L_127933:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427341
L_127934:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_127899(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_127935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_427341:
L_127941:
	movq %r11,0x28(%rbp)
	leaq L_127899(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_127942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427342:
L_127920:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427343
L_127921:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_127899(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_127922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_427343:
L_127928:
	movq %r11,0x28(%rbp)
	leaq L_127899(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_127929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427344:
L_127906:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427345
L_127907:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_127899(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_127908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_427345:
L_127915:
	movq %r11,0x28(%rbp)
	leaq L_127899(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_127916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427346:
L_127905:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	leaq L_127899(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_127895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1292
.p2align 0x4
L_427347:
L_127904:
	movq 0x18(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	leaq L_127899(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_127895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1293
.p2align 0x4
L_427348:
L_127892:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427349:
L_127959:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB26
L_127895:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127896
L_127897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127898
.p2align 0x4
.long 0xB27
L_127898:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127896:
	movq $0x293D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_127899:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127900
L_127902:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127903
.p2align 0x4
.long 0xB28
L_127903:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127900:
	movq 0x20(%rbp),%r15
L_127901:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x293F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x465
L_127948:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127949
L_127952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_127953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127953
.p2align 0x4
.long 0x71B
L_127953:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_127949:
	cmpq $0x1,0x30(%rbp)
	jne L_427353
L_127951:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_427353:
L_127911:
	movq (globalObjptr+0x1510)(%rip),%r15
	jmp L_127901
.p2align 0x4
.long 0xB26
L_127955:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x465
L_127935:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127936
L_127939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_127940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127940
.p2align 0x4
.long 0x71B
L_127940:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_127936:
	cmpq $0x1,0x30(%rbp)
	jne L_127911
L_127938:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB26
L_127942:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x465
L_127922:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127923
L_127926:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_127927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127927
.p2align 0x4
.long 0x71B
L_127927:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_127923:
	cmpq $0x1,0x30(%rbp)
	jne L_127911
L_127925:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB26
L_127929:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x465
L_127908:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127909
L_127913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_127914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127914
.p2align 0x4
.long 0x71B
L_127914:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_127909:
	cmpq $0x1,0x30(%rbp)
	jne L_127911
L_127912:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB26
L_127916:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB26
bug_351:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127956
L_127957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127958
.p2align 0x4
.long 0xB28
L_127958:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127956:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_127901
.p2align 0x4
.long 0xB26
bug_350:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127943
L_127944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127945
.p2align 0x4
.long 0xB28
L_127945:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127943:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_127901
.p2align 0x4
.long 0xB26
bug_349:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127930
L_127931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127932
.p2align 0x4
.long 0xB28
L_127932:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127930:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_127901
.p2align 0x4
.long 0xB26
bug_348:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127917
L_127918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127919
.p2align 0x4
.long 0xB28
L_127919:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127917:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_127901
.text
.p2align 0x4
.globl x_1595
.hidden x_1595
x_1595:
L_127962:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_127963
L_128033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128034
.p2align 0x4
.long 0x452
L_128034:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_127963:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_427376
L_127964:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x149E,%r13
	je L_427375
L_127966:
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2064,%r15
	je L_427374
	cmpq $0x2065,%r15
	je L_427373
	cmpq $0x2066,%r15
	je L_427371
	cmpq $0x2067,%r15
	je L_427369
	cmpq $0x2068,%r15
	je L_427367
	cmpq $0x2069,%r15
	je L_427365
L_127967:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	leaq L_127972(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_127968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1291
.p2align 0x4
L_427365:
L_128019:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427366
L_128020:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_127972(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_128021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_427366:
L_128027:
	movq %r11,0x28(%rbp)
	leaq L_127972(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427367:
L_128006:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427368
L_128007:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_127972(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_128008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_427368:
L_128014:
	movq %r11,0x28(%rbp)
	leaq L_127972(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427369:
L_127993:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427370
L_127994:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_127972(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_127995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_427370:
L_128001:
	movq %r11,0x28(%rbp)
	leaq L_127972(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427371:
L_127979:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427372
L_127980:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_127972(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_127981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_427372:
L_127988:
	movq %r11,0x28(%rbp)
	leaq L_127972(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_127989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427373:
L_127978:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	leaq L_127972(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_127968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1292
.p2align 0x4
L_427374:
L_127977:
	movq 0x18(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	leaq L_127972(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_127968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1293
.p2align 0x4
L_427375:
L_127965:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427376:
L_128032:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB26
L_127968:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127969
L_127970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127971
.p2align 0x4
.long 0xB27
L_127971:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127969:
	movq $0x293D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_127972:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127973
L_127975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127976
.p2align 0x4
.long 0xB28
L_127976:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127973:
	movq 0x20(%rbp),%r15
L_127974:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x293F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x465
L_128021:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128022
L_128025:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_128026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128026
.p2align 0x4
.long 0x71B
L_128026:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_128022:
	cmpq $0x1,0x30(%rbp)
	jne L_427380
L_128024:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_427380:
L_127984:
	movq (globalObjptr+0x1510)(%rip),%r15
	jmp L_127974
.p2align 0x4
.long 0xB26
L_128028:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x465
L_128008:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128009
L_128012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_128013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128013
.p2align 0x4
.long 0x71B
L_128013:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_128009:
	cmpq $0x1,0x30(%rbp)
	jne L_127984
L_128011:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB26
L_128015:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x465
L_127995:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127996
L_127999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_128000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128000
.p2align 0x4
.long 0x71B
L_128000:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_127996:
	cmpq $0x1,0x30(%rbp)
	jne L_127984
L_127998:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB26
L_128002:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x465
L_127981:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127982
L_127986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_127987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127987
.p2align 0x4
.long 0x71B
L_127987:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_127982:
	cmpq $0x1,0x30(%rbp)
	jne L_127984
L_127985:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_127968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB26
L_127989:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB26
bug_355:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128029
L_128030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128031
.p2align 0x4
.long 0xB28
L_128031:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128029:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_127974
.p2align 0x4
.long 0xB26
bug_354:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128016
L_128017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128018
.p2align 0x4
.long 0xB28
L_128018:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128016:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_127974
.p2align 0x4
.long 0xB26
bug_353:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128003
L_128004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128005
.p2align 0x4
.long 0xB28
L_128005:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128003:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_127974
.p2align 0x4
.long 0xB26
bug_352:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_127990
L_127991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_127992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_127992
.p2align 0x4
.long 0xB28
L_127992:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_127990:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_127974
.text
.p2align 0x4
.globl interfere_0
.hidden interfere_0
interfere_0:
L_128035:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128036
L_128164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128165
.p2align 0x4
.long 0x45B
L_128165:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_128036:
	movq 0x0(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%rbp)
.p2align 0x4,,0x7
loop_1350:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_128037:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_128039
L_128043:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_427431
	cmpq $0xF5A,%r14
	je L_427410
	cmpq $0xF5B,%r14
	je L_427407
	cmpq $0xF5D,%r14
	je L_427401
	cmpq $0xF5E,%r14
	je L_427398
	cmpq $0xF5F,%r14
	je L_427397
	cmpq $0xF60,%r14
	je L_427394
L_128039:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_128040
L_128041:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF5F,%r13
	jne L_427392
L_128042:
	movq 0x0(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp loop_1350
.p2align 0x4
L_427392:
L_128040:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427394:
L_128156:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
L_128157:
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_427396
L_128162:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xF5F,%r11
	jne L_427395
L_128163:
	movq 0x0(%r13),%r13
	movq %r13,0x18(%rbp)
	jmp loop_1350
.p2align 0x4
L_427395:
	movq %r14,%r15
L_128158:
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_128159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp inter_0
.p2align 0x4
L_427396:
	movq %r14,%r15
	jmp L_128158
.p2align 0x4
L_427397:
L_128155:
	movq 0x0(%r15),%r15
	jmp loop_1350
.p2align 0x4
L_427398:
L_128151:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_128152
L_128153:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF5F,%r13
	jne L_427399
L_128154:
	movq 0x0(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp loop_1350
.p2align 0x4
L_427399:
L_128152:
	movq $0x5,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp inter_0
.p2align 0x4
L_427401:
L_128141:
	movq 0x0(%r15),%r14
L_128142:
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_128040
L_128143:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xF5D,%r11
	je L_427403
	cmpq $0xF5F,%r11
	je L_427402
	jmp L_128040
.p2align 0x4
L_427402:
L_128149:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	jmp loop_1350
.p2align 0x4
L_427403:
L_128144:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movq 0x18(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r9
	movl 0x0(%r10),%r8d
	movl 0x4(%r14),%esp
	cmpl %esp,0x4(%r10)
	jne L_128040
L_128146:
	cmpl %r13d,%r8d
	jne L_128040
L_128148:
	movq %r9,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp equals_1
.p2align 0x4
L_427407:
L_128136:
	movq 0x0(%r15),%r14
L_128137:
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_427409
L_128139:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xF5F,%r11
	jne L_427408
L_128140:
	movq 0x0(%r13),%r13
	movq %r13,0x18(%rbp)
	jmp loop_1350
.p2align 0x4
L_427408:
	movq %r14,%r15
L_128138:
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp inter_0
.p2align 0x4
L_427409:
	movq %r14,%r15
	jmp L_128138
.p2align 0x4
L_427410:
L_128077:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_128078:
	movq 0x18(%rbp),%r10
	movq %r10,%r9
	andq $0x3,%r9
	jnz L_128040
L_128079:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0xF5A,%r9
	je L_427412
	cmpq $0xF5F,%r9
	je L_427411
	jmp L_128040
.p2align 0x4
L_427411:
L_128135:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	jmp loop_1350
.p2align 0x4
L_427412:
L_128080:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r10
	movq %r11,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_128040
L_128081:
	shrq $0x1,%r11
	movl %r11d,%r15d
	movq %r10,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_128040
L_128082:
	shrq $0x1,%r10
	movl %r10d,%r13d
	cmpl %r13d,%r15d
	jne L_128040
L_128084:
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_128130
	cmpq $0x5,%r13
	je L_427425
	cmpq $0x6,%r13
	je L_427423
L_128085:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_427422
L_128126:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_427421
	cmpq $0xF54,%r13
	je L_427413
	movq %r14,%r11
L_128086:
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_128087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_427413:
L_128128:
	movb $0xB,0x30(%rbp)
L_128097:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_128118
	cmpq $0x5,%r15
	je L_427419
	cmpq $0x6,%r15
	je L_427417
L_128098:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_128099
L_128114:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_427415
	cmpq $0xF54,%r15
	je L_427414
L_128099:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_128100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_427414:
L_128116:
	movb $0xB,%dl
L_128110:
	cmpb %dl,0x30(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427415:
L_128115:
	movb $0x6,%dl
	jmp L_128110
.p2align 0x4
L_427417:
L_128120:
	shrq $0x3,%r14
	movb %r14b,%dl
	testb %dl,%dl
	jnz L_427418
L_128121:
	movb $0x4,%dl
	jmp L_128110
.p2align 0x4
L_427418:
L_128122:
	movb $0x5,%dl
	jmp L_128110
.p2align 0x4
L_427419:
L_128118:
	movb $0xB,%dl
	jmp L_128110
.p2align 0x4
L_427421:
L_128127:
	movb $0x6,0x30(%rbp)
	jmp L_128097
.p2align 0x4
L_427422:
	movq %r14,%r11
	jmp L_128086
.p2align 0x4
L_427423:
L_128132:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_427424
L_128133:
	movb $0x4,0x30(%rbp)
	jmp L_128097
.p2align 0x4
L_427424:
L_128134:
	movb $0x5,0x30(%rbp)
	jmp L_128097
.p2align 0x4
L_427425:
L_128130:
	movb $0xB,0x30(%rbp)
	jmp L_128097
.p2align 0x4
L_427431:
L_128044:
	movq 0x0(%r15),%r14
L_128045:
	movq 0x18(%rbp),%r11
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_128040
L_128046:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0xF59,%r10
	je L_427433
	cmpq $0xF5F,%r10
	je L_427432
	jmp L_128040
.p2align 0x4
L_427432:
L_128076:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	jmp loop_1350
.p2align 0x4
L_427433:
L_128047:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x50(%rbp)
	movq $0x11,0x60(%rbp)
	movq %r11,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_128048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x8A9
L_128159:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	testl %r15d,%r15d
	jnz L_427437
L_128160:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp inter_0
.p2align 0x4
L_427437:
L_128161:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x6FF
L_128087:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpl $0x8,%r15d
	je L_427441
	cmpl $0x10,%r15d
	je L_427440
	cmpl $0x20,%r15d
	je L_427439
	cmpl $0x40,%r15d
	je L_427438
L_128088:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_128089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_427438:
L_128125:
	movb $0x0,0x30(%rbp)
	jmp L_128097
.p2align 0x4
L_427439:
L_128124:
	movb $0x1,0x30(%rbp)
	jmp L_128097
.p2align 0x4
L_427440:
L_128123:
	movb $0x2,0x30(%rbp)
	jmp L_128097
.p2align 0x4
L_427441:
L_128096:
	movb $0x3,0x30(%rbp)
	jmp L_128097
.p2align 0x4
.long 0x79B
L_128100:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpl $0x8,%r15d
	je L_427445
	cmpl $0x10,%r15d
	je L_427444
	cmpl $0x20,%r15d
	je L_427443
	cmpl $0x40,%r15d
	je L_427442
L_128101:
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_128102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_427442:
L_128113:
	xorb %dl,%dl
	jmp L_128110
.p2align 0x4
L_427443:
L_128112:
	movb $0x1,%dl
	jmp L_128110
.p2align 0x4
L_427444:
L_128111:
	movb $0x2,%dl
	jmp L_128110
.p2align 0x4
L_427445:
L_128109:
	movb $0x3,%dl
	jmp L_128110
.p2align 0x4
.long 0x4B3
L_128048:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	jne L_427446
L_128051:
	movq $0x11,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_128052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_427446:
L_128050:
	movq (globalObjptr+0x1510)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_128089:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128090
L_128094:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128095
.p2align 0x4
.long 0x451
L_128095:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128090:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_128102:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128103
L_128107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128108
.p2align 0x4
.long 0x451
L_128108:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128103:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x8F2
L_128052:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128053
L_128074:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_128075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128075
.p2align 0x4
.long 0x7AC
L_128075:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_128053:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_128054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x1
bug_356:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128091
L_128092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128093
.p2align 0x4
.long 0x451
L_128093:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128091:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_357:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128104
L_128105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128106
.p2align 0x4
.long 0x451
L_128106:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128104:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F2
L_128054:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x11,0x68(%rbp)
	movq %r14,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_128055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x1B8A
L_128055:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	jne L_128050
L_128057:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x11,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_128058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x1B8B
L_128058:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128059
L_128072:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_128073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128073
.p2align 0x4
.long 0x4B7
L_128073:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_128059:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_128060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x9AF
L_128060:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	movq 0x40(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_427456
L_128061:
	cmpq %r13,%r15
	jnl L_128040
L_128064:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	movq 0x28(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_427454
L_128065:
	cmpq %r15,%r13
	setl %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427454:
L_128066:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_128067:
	cmpl $0x0,%eax
	setg %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427456:
L_128068:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_128069:
	cmpl $0x0,%eax
	jg L_128064
	jmp L_128040
.text
.p2align 0x4
.globl inter_0
.hidden inter_0
inter_0:
L_128166:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128167
L_128168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128169
.p2align 0x4
.long 0x45B
L_128169:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_128167:
	movq 0x10(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x8(%rbp)
	jmp interfere_0
.text
.p2align 0x4
.globl isSubtype_0
.hidden isSubtype_0
isSubtype_0:
L_128170:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128171
L_128296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128297
.p2align 0x4
.long 0x45B
L_128297:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_128171:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF65,%r14
	je L_427465
	cmpq $0xF66,%r14
	je L_427461
L_128172:
	movq 0x0(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF64,%r13
	jne L_128173
L_128174:
	movq 0x0(%r14),%r13
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r10
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x8(%r11),%rsi
	movq 0x8(%r14),%rdi
	xorq %rax,%rax
	movq %r10,%rbx
	call IntInf_equal
L_128175:
	testl %eax,%eax
	jz L_427459
L_128177:
	movq %rbx,0x0(%rbp)
	movq %r13,0x8(%rbp)
	jmp x_1593
.p2align 0x4
L_427459:
L_128173:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427461:
L_128237:
	movq 0x0(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF66,%r13
	jne L_128173
L_128238:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movl 0x0(%r14),%r11d
	movq 0x0(%r15),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movl 0x0(%r10),%r8d
	movl 0x4(%r14),%esp
	cmpl %esp,0x4(%r10)
	jne L_128173
L_128240:
	cmpl %r8d,%r11d
	jne L_128173
L_128242:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1593
.p2align 0x4
L_427465:
L_128178:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xF65,%r11
	jne L_128173
L_128179:
	movq 0x8(%r15),%r11
	movq %r11,0x8(%rbp)
	movq 0x0(%r13),%r10
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r9
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_128173
L_128180:
	shrq $0x1,%r10
	movl %r10d,%r15d
	movq %r9,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_128173
L_128181:
	shrq $0x1,%r9
	movl %r9d,%r13d
	cmpl %r13d,%r15d
	jne L_128173
L_128183:
	movq %r11,0x28(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1593
.p2align 0x4
.long 0x5EF
L_128243:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_128173
L_128245:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_128291
	cmpq $0x5,%r15
	je L_427483
	cmpq $0x6,%r15
	je L_427481
L_128246:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_128247
L_128287:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_427479
	cmpq $0xF54,%r15
	je L_427471
L_128247:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_128248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_427471:
L_128289:
	movb $0xB,0x20(%rbp)
L_128258:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_128279
	cmpq $0x5,%r15
	je L_427477
	cmpq $0x6,%r15
	je L_427475
L_128259:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_128260
L_128275:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_427473
	cmpq $0xF54,%r15
	je L_427472
L_128260:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_128261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_427472:
L_128277:
	movb $0xB,%dl
L_128271:
	cmpb 0x20(%rbp),%dl
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427473:
L_128276:
	movb $0x6,%dl
	jmp L_128271
.p2align 0x4
L_427475:
L_128281:
	shrq $0x3,%r14
	movb %r14b,%dl
	testb %dl,%dl
	jnz L_427476
L_128282:
	movb $0x4,%dl
	jmp L_128271
.p2align 0x4
L_427476:
L_128283:
	movb $0x5,%dl
	jmp L_128271
.p2align 0x4
L_427477:
L_128279:
	movb $0xB,%dl
	jmp L_128271
.p2align 0x4
L_427479:
L_128288:
	movb $0x6,0x20(%rbp)
	jmp L_128258
.p2align 0x4
L_427481:
L_128293:
	shrq $0x3,%r14
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_427482
L_128294:
	movb $0x4,0x20(%rbp)
	jmp L_128258
.p2align 0x4
L_427482:
L_128295:
	movb $0x5,0x20(%rbp)
	jmp L_128258
.p2align 0x4
L_427483:
L_128291:
	movb $0xB,0x20(%rbp)
	jmp L_128258
.p2align 0x4
.long 0x5EF
L_128184:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_128173
L_128186:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_128232
	cmpq $0x5,%r15
	je L_427498
	cmpq $0x6,%r15
	je L_427496
L_128187:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_128188
L_128228:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_427494
	cmpq $0xF54,%r15
	je L_427486
L_128188:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_128189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_427486:
L_128230:
	movb $0xB,0x18(%rbp)
L_128199:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_128220
	cmpq $0x5,%r15
	je L_427492
	cmpq $0x6,%r15
	je L_427490
L_128200:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_128201
L_128216:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_427488
	cmpq $0xF54,%r15
	je L_427487
L_128201:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_128202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_427487:
L_128218:
	movb $0xB,%dl
L_128212:
	cmpb %dl,0x18(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427488:
L_128217:
	movb $0x6,%dl
	jmp L_128212
.p2align 0x4
L_427490:
L_128222:
	shrq $0x3,%r14
	movb %r14b,%dl
	testb %dl,%dl
	jnz L_427491
L_128223:
	movb $0x4,%dl
	jmp L_128212
.p2align 0x4
L_427491:
L_128224:
	movb $0x5,%dl
	jmp L_128212
.p2align 0x4
L_427492:
L_128220:
	movb $0xB,%dl
	jmp L_128212
.p2align 0x4
L_427494:
L_128229:
	movb $0x6,0x18(%rbp)
	jmp L_128199
.p2align 0x4
L_427496:
L_128234:
	shrq $0x3,%r14
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_427497
L_128235:
	movb $0x4,0x18(%rbp)
	jmp L_128199
.p2align 0x4
L_427497:
L_128236:
	movb $0x5,0x18(%rbp)
	jmp L_128199
.p2align 0x4
L_427498:
L_128232:
	movb $0xB,0x18(%rbp)
	jmp L_128199
.p2align 0x4
.long 0x8A9
L_128248:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpl $0x8,%r15d
	je L_427504
	cmpl $0x10,%r15d
	je L_427503
	cmpl $0x20,%r15d
	je L_427502
	cmpl $0x40,%r15d
	je L_427501
L_128249:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_128250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_427501:
L_128286:
	movb $0x0,0x20(%rbp)
	jmp L_128258
.p2align 0x4
L_427502:
L_128285:
	movb $0x1,0x20(%rbp)
	jmp L_128258
.p2align 0x4
L_427503:
L_128284:
	movb $0x2,0x20(%rbp)
	jmp L_128258
.p2align 0x4
L_427504:
L_128257:
	movb $0x3,0x20(%rbp)
	jmp L_128258
.p2align 0x4
.long 0x50B
L_128261:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpl $0x8,%r15d
	je L_427508
	cmpl $0x10,%r15d
	je L_427507
	cmpl $0x20,%r15d
	je L_427506
	cmpl $0x40,%r15d
	je L_427505
L_128262:
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_128263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_427505:
L_128274:
	xorb %dl,%dl
	jmp L_128271
.p2align 0x4
L_427506:
L_128273:
	movb $0x1,%dl
	jmp L_128271
.p2align 0x4
L_427507:
L_128272:
	movb $0x2,%dl
	jmp L_128271
.p2align 0x4
L_427508:
L_128270:
	movb $0x3,%dl
	jmp L_128271
.p2align 0x4
.long 0x517
L_128189:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpl $0x8,%r15d
	je L_427512
	cmpl $0x10,%r15d
	je L_427511
	cmpl $0x20,%r15d
	je L_427510
	cmpl $0x40,%r15d
	je L_427509
L_128190:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_128191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_427509:
L_128227:
	movb $0x0,0x18(%rbp)
	jmp L_128199
.p2align 0x4
L_427510:
L_128226:
	movb $0x1,0x18(%rbp)
	jmp L_128199
.p2align 0x4
L_427511:
L_128225:
	movb $0x2,0x18(%rbp)
	jmp L_128199
.p2align 0x4
L_427512:
L_128198:
	movb $0x3,0x18(%rbp)
	jmp L_128199
.p2align 0x4
.long 0x2
L_128202:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpl $0x8,%r15d
	je L_427516
	cmpl $0x10,%r15d
	je L_427515
	cmpl $0x20,%r15d
	je L_427514
	cmpl $0x40,%r15d
	je L_427513
L_128203:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_128204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_427513:
L_128215:
	xorb %dl,%dl
	jmp L_128212
.p2align 0x4
L_427514:
L_128214:
	movb $0x1,%dl
	jmp L_128212
.p2align 0x4
L_427515:
L_128213:
	movb $0x2,%dl
	jmp L_128212
.p2align 0x4
L_427516:
L_128211:
	movb $0x3,%dl
	jmp L_128212
.p2align 0x4
.long 0x1
L_128250:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128251
L_128255:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128256
.p2align 0x4
.long 0x451
L_128256:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128251:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_128263:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128264
L_128268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128269
.p2align 0x4
.long 0x451
L_128269:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128264:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_128191:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128192
L_128196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128197
.p2align 0x4
.long 0x451
L_128197:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128192:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_128204:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128205
L_128209:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128210
.p2align 0x4
.long 0x451
L_128210:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128205:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_360:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128252
L_128253:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128254
.p2align 0x4
.long 0x451
L_128254:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128252:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_361:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128265
L_128266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128267
.p2align 0x4
.long 0x451
L_128267:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128265:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_358:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128193
L_128194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128195
.p2align 0x4
.long 0x451
L_128195:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128193:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_359:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128206
L_128207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128208
.p2align 0x4
.long 0x451
L_128208:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128206:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_104
.hidden get_104
get_104:
L_128298:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128299
L_128352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_128353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128353
.p2align 0x4
.long 0x45F
L_128353:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_128299:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_427534
L_128301:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_427533
L_128302:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_128304:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_427532
L_128344:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xDA3,%r10
	jne L_427531
L_128345:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_427528
L_128305:
	incl %ecx
	jo L_427527
L_128307:
	cmpq $0x1,%r14
	je L_427525
L_128308:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_128304
.p2align 0x4
L_427525:
L_128309:
L_128310:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_427526
L_128312:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_476
L_128343:
	movl %ecx,0x0(%r15)
x_476:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_128314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_427526:
L_128311:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427527:
L_128306:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427528:
L_128347:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_128311
L_128348:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_427529
L_128350:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427529:
L_128349:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427531:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_128305
.p2align 0x4
L_427532:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_128305
.p2align 0x4
L_427533:
L_128351:
	xorl %ecx,%ecx
	jmp L_128310
.p2align 0x4
L_427534:
L_128300:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_128314:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_128315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_128315:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_128316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_128316:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xED00)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_128317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_128317:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_128318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_128318:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128319
L_128341:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_128342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128342
.p2align 0x4
.long 0x4AE
L_128342:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_128319:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_128320:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_128306
L_128321:
	cmpq $0x1,%r14
	je L_427536
L_128322:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_128320
.p2align 0x4
L_427536:
L_128323:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128324
L_128339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_128340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128340
.p2align 0x4
.long 0x4E6
L_128340:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_128324:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_427537
L_128325:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_214:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_427537:
L_128338:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_214
.p2align 0x4
.long 0x1
rev_212:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_427543
L_128326:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_128327:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427542
.p2align 0x4,,0x7
L_128328:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427541
L_128329:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_128327
.p2align 0x4
L_427541:
L_128331:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_427542:
L_128335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128336
.p2align 0x4
.long 0x45B
L_128336:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_128328
.p2align 0x4
L_427543:
L_128337:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_128331
.p2align 0x4
.long 0x1
bug_362:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128332
L_128333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128334
.p2align 0x4
.long 0x451
L_128334:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128332:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1316
.hidden x_1316
x_1316:
L_128354:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128355
L_128425:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128426
.p2align 0x4
.long 0x452
L_128426:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_128355:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_427556
L_128356:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x149E,%r13
	je L_427555
L_128358:
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2064,%r15
	je L_427554
	cmpq $0x2065,%r15
	je L_427553
	cmpq $0x2066,%r15
	je L_427551
	cmpq $0x2067,%r15
	je L_427549
	cmpq $0x2068,%r15
	je L_427547
	cmpq $0x2069,%r15
	je L_427545
L_128359:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	leaq L_128364(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_128360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1291
.p2align 0x4
L_427545:
L_128411:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427546
L_128412:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_128364(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_128413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_427546:
L_128419:
	movq %r11,0x28(%rbp)
	leaq L_128364(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427547:
L_128398:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427548
L_128399:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_128364(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_128400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_427548:
L_128406:
	movq %r11,0x28(%rbp)
	leaq L_128364(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427549:
L_128385:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427550
L_128386:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_128364(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_128387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_427550:
L_128393:
	movq %r11,0x28(%rbp)
	leaq L_128364(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427551:
L_128371:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_427552
L_128372:
	movq 0x0(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	leaq L_128364(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_128373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_427552:
L_128380:
	movq %r11,0x28(%rbp)
	leaq L_128364(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_427553:
L_128370:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	leaq L_128364(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_128360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1292
.p2align 0x4
L_427554:
L_128369:
	movq 0x18(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	leaq L_128364(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_128360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1293
.p2align 0x4
L_427555:
L_128357:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427556:
L_128424:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB26
L_128360:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128361
L_128362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128363
.p2align 0x4
.long 0xB27
L_128363:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128361:
	movq $0x293D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_128364:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128365
L_128367:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128368
.p2align 0x4
.long 0xB28
L_128368:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128365:
	movq 0x20(%rbp),%r15
L_128366:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x293F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x465
L_128413:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128414
L_128417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_128418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128418
.p2align 0x4
.long 0x71B
L_128418:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_128414:
	cmpq $0x1,0x30(%rbp)
	jne L_427560
L_128416:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_128360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_427560:
L_128376:
	movq (globalObjptr+0x1510)(%rip),%r15
	jmp L_128366
.p2align 0x4
.long 0xB26
L_128420:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x465
L_128400:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128401
L_128404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_128405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128405
.p2align 0x4
.long 0x71B
L_128405:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_128401:
	cmpq $0x1,0x30(%rbp)
	jne L_128376
L_128403:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_128360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB26
L_128407:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x465
L_128387:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128388
L_128391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_128392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128392
.p2align 0x4
.long 0x71B
L_128392:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_128388:
	cmpq $0x1,0x30(%rbp)
	jne L_128376
L_128390:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_128360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB26
L_128394:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x465
L_128373:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128374
L_128378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_128379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128379
.p2align 0x4
.long 0x71B
L_128379:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_128374:
	cmpq $0x1,0x30(%rbp)
	jne L_128376
L_128377:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_128360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xB26
L_128381:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB26
bug_366:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128421
L_128422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128423
.p2align 0x4
.long 0xB28
L_128423:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128421:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_128366
.p2align 0x4
.long 0xB26
bug_365:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128408
L_128409:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128410
.p2align 0x4
.long 0xB28
L_128410:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128408:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_128366
.p2align 0x4
.long 0xB26
bug_364:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128395
L_128396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128397
.p2align 0x4
.long 0xB28
L_128397:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128395:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_128366
.p2align 0x4
.long 0xB26
bug_363:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128382
L_128383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128384
.p2align 0x4
.long 0xB28
L_128384:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128382:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_128366
.text
.p2align 0x4
.globl jump_2
.hidden jump_2
jump_2:
L_128427:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128428
L_128476:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_128477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128477
.p2align 0x4
.long 0x4DE
L_128477:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_128428:
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_128429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_104
.p2align 0x4
.long 0x65C
L_128429:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128430
L_128474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128475
.p2align 0x4
.long 0x63C
L_128475:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128430:
	movq 0x8(%rbp),%r15
	movq 0x30(%r15),%r14
	cmpq $0x1,%r14
	je L_427574
L_128431:
	andq $0x3,%r14
	jnz L_128432
L_128433:
L_128432:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427574:
L_128434:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x50(%rbp)
	movq $0x322F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (not_35+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp existsi_0
.p2align 0x4
.long 0x5F0
not_35:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128435
L_128472:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_128473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128473
.p2align 0x4
.long 0xBC3
L_128473:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_128435:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_128432
L_128437:
	movq 0x20(%rbp),%r15
	andq $0x3,%r15
	jz L_427583
L_128438:
	cmpq $0x1,0x38(%rbp)
	jne L_128432
L_128441:
	movq 0x18(%rbp),%r15
	andq $0x3,%r15
	jz L_427577
L_128442:
	cmpq $0x1,0x30(%rbp)
	jne L_128432
L_128444:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427577:
L_128445:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_128444
L_128446:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_128448
L_128449:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_427579
L_128451:
	cmpl %r10d,%r13d
	jne L_128432
L_128453:
	movq $0x322D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (not_36+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp existsi_0
.p2align 0x4
L_427579:
L_128448:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427583:
L_128457:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_128441
L_128458:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_128448
L_128460:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_128448
L_128462:
	cmpl %r13d,%r10d
	jne L_128432
L_128464:
	movq $0x3231,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (not_37+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp existsi_0
.p2align 0x4
.long 0x1
not_36:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	testl %r15d,%r15d
	jnz L_128432
	jmp L_128444
.p2align 0x4
.long 0x8FF
not_37:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128465
L_128468:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_128469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128469
.p2align 0x4
.long 0xC18
L_128469:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_128465:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_128432
	jmp L_128441
.text
.p2align 0x4
.globl existsi_0
.hidden existsi_0
existsi_0:
L_128478:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128479
L_128715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_128716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128716
.p2align 0x4
.long 0x45F
L_128716:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_128479:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x10(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x18(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	je L_427593
L_128480:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427593:
L_128481:
	movl $0x0,0x1C(%rbp)
.p2align 0x4,,0x7
loop_1351:
	movl 0x1C(%rbp),%r15d
	cmpl %r15d,0x18(%rbp)
	je L_427672
L_128482:
	movslq %r15d,%r14
	cmpq 0x10(%rbp),%r14
	jnb L_427671
L_128484:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1914,%rax
	cmpq $0x7,%rax
	ja L_427594
	leaq jumpTable_287(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_287:
.quad L_427669,L_427660,L_427659,L_427650,L_427649,L_427640,L_427612,L_427603
.text
.p2align 0x4
L_427594:
L_128485:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128486
L_128515:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128516
.p2align 0x4
.long 0x52C
L_128516:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128486:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF65,%r13
	je L_427600
	cmpq $0xF66,%r13
	je L_427598
L_128487:
	movq 0x0(%r15),%r13
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,%r14
	je L_427597
L_128488:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
L_128489:
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF65,%r15
	je L_427596
	cmpq $0xF66,%r15
	je L_427595
L_128490:
	movq 0x0(%r14),%r15
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_128491:
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_128492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp interfere_0
.p2align 0x4
L_427595:
L_128507:
	movq 0x0(%r14),%r15
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_128491
.p2align 0x4
L_427596:
L_128506:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
	jmp L_128491
.p2align 0x4
L_427597:
L_128497:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427598:
L_128512:
	movq 0x0(%r15),%r13
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,%r14
	je L_128497
L_128513:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	jmp L_128489
.p2align 0x4
L_427600:
L_128509:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	cmpq $0x1,%r14
	je L_128497
L_128510:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	jmp L_128489
.p2align 0x4
L_427603:
L_128686:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128687
L_128712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128713
.p2align 0x4
.long 0x52C
L_128713:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128687:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF65,%r13
	je L_427609
	cmpq $0xF66,%r13
	je L_427607
L_128688:
	movq 0x0(%r15),%r13
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,%r14
	je L_128497
L_128689:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
L_128690:
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF65,%r15
	je L_427605
	cmpq $0xF66,%r15
	je L_427604
L_128691:
	movq 0x0(%r14),%r15
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_128692:
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_128693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp interfere_0
.p2align 0x4
L_427604:
L_128704:
	movq 0x0(%r14),%r15
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_128692
.p2align 0x4
L_427605:
L_128703:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
	jmp L_128692
.p2align 0x4
L_427607:
L_128709:
	movq 0x0(%r15),%r13
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,%r14
	je L_128497
L_128710:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	jmp L_128690
.p2align 0x4
L_427609:
L_128706:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	cmpq $0x1,%r14
	je L_128497
L_128707:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	jmp L_128690
.p2align 0x4
L_427612:
L_128613:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF65,%r15
	je L_427620
	cmpq $0xF66,%r15
	je L_427616
L_128614:
	movq 0x0(%r14),%r13
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF64,%r14
	jne L_128501
L_128615:
	movq 0x0(%r13),%r14
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r10
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x8(%r13),%rsi
	movq 0x8(%r11),%rdi
	xorq %rax,%rax
	movq %r10,%rbx
	call IntInf_equal
L_128616:
	testl %eax,%eax
	jnz L_427614
.p2align 0x4,,0x7
L_128501:
	movl 0x1C(%rbp),%r15d
	incl %r15d
	jo L_427613
L_128503:
	movl %r15d,0x1C(%rbp)
	jmp loop_1351
.p2align 0x4
L_427613:
L_128502:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427614:
L_128618:
	movq %rbx,0x28(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_427616:
L_128680:
	movq 0x0(%r14),%r15
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF66,%r13
	jne L_128501
L_128681:
	movq 0x8(%r15),%r13
	movl 0x0(%r15),%r11d
	movq 0x0(%r14),%r10
	movq 0x8(%r10),%r9
	movl 0x0(%r10),%r8d
	movl 0x4(%r10),%esp
	cmpl %esp,0x4(%r15)
	jne L_128501
L_128683:
	cmpl %r8d,%r11d
	jne L_128501
L_128685:
	movq %r9,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_128619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_427620:
L_128622:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xF65,%r10
	jne L_128501
L_128623:
	movq 0x8(%r14),%r10
	movq %r10,0x28(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r13
	movq 0x0(%r14),%r11
	movq 0x0(%r11),%r10
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_128501
L_128624:
	shrq $0x1,%r13
	movl %r13d,%r14d
	movq %r10,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_128501
L_128625:
	shrq $0x1,%r10
	movl %r10d,%r11d
	cmpl %r14d,%r11d
	jne L_128501
L_128627:
	movq 0x8(%r15),%r14
	movq %r14,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_128675
	cmpq $0x5,%r13
	je L_427634
	cmpq $0x6,%r13
	je L_427632
L_128628:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_427631
L_128671:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_427630
	cmpq $0xF54,%r13
	je L_427621
	movq %r15,%r13
L_128629:
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_128630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_427621:
L_128673:
	movb $0xB,0x20(%rbp)
.p2align 0x4,,0x7
L_128640:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_128663
	cmpq $0x5,%r15
	je L_427628
	cmpq $0x6,%r15
	je L_427626
L_128641:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_128642
L_128659:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_427624
	cmpq $0xF54,%r15
	je L_427622
L_128642:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_128643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_427622:
L_128661:
	movb $0xB,%dl
.p2align 0x4,,0x7
L_128653:
	cmpb 0x20(%rbp),%dl
	je L_128497
	jmp L_128501
.p2align 0x4
L_427624:
L_128660:
	movb $0x6,%dl
	jmp L_128653
.p2align 0x4
L_427626:
L_128665:
	shrq $0x3,%r14
	movb %r14b,%dl
	testb %dl,%dl
	jnz L_427627
L_128666:
	movb $0x4,%dl
	jmp L_128653
.p2align 0x4
L_427627:
L_128667:
	movb $0x5,%dl
	jmp L_128653
.p2align 0x4
L_427628:
L_128663:
	movb $0xB,%dl
	jmp L_128653
.p2align 0x4
L_427630:
L_128672:
	movb $0x6,0x20(%rbp)
	jmp L_128640
.p2align 0x4
L_427631:
	movq %r15,%r13
	jmp L_128629
.p2align 0x4
L_427632:
L_128677:
	shrq $0x3,%r14
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_427633
L_128678:
	movb $0x4,0x20(%rbp)
	jmp L_128640
.p2align 0x4
L_427633:
L_128679:
	movb $0x5,0x20(%rbp)
	jmp L_128640
.p2align 0x4
L_427634:
L_128675:
	movb $0xB,0x20(%rbp)
	jmp L_128640
.p2align 0x4
L_427640:
L_128585:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128586
L_128611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128612
.p2align 0x4
.long 0x52C
L_128612:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128586:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF65,%r13
	je L_427646
	cmpq $0xF66,%r13
	je L_427644
L_128587:
	movq 0x0(%r15),%r13
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,%r14
	je L_128497
L_128588:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
L_128589:
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF65,%r15
	je L_427642
	cmpq $0xF66,%r15
	je L_427641
L_128590:
	movq 0x0(%r14),%r15
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_128591:
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_128592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp interfere_0
.p2align 0x4
L_427641:
L_128603:
	movq 0x0(%r14),%r15
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_128591
.p2align 0x4
L_427642:
L_128602:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
	jmp L_128591
.p2align 0x4
L_427644:
L_128608:
	movq 0x0(%r15),%r13
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,%r14
	je L_128497
L_128609:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	jmp L_128589
.p2align 0x4
L_427646:
L_128605:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	cmpq $0x1,%r14
	je L_128497
L_128606:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	jmp L_128589
.p2align 0x4
L_427649:
L_128582:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (not_43+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isSubtype_0
.p2align 0x4
L_427650:
L_128554:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128555
L_128580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128581
.p2align 0x4
.long 0x52C
L_128581:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128555:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF65,%r13
	je L_427656
	cmpq $0xF66,%r13
	je L_427654
L_128556:
	movq 0x0(%r15),%r13
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,%r14
	je L_128497
L_128557:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
L_128558:
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF65,%r15
	je L_427652
	cmpq $0xF66,%r15
	je L_427651
L_128559:
	movq 0x0(%r14),%r15
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_128560:
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_128561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp interfere_0
.p2align 0x4
L_427651:
L_128572:
	movq 0x0(%r14),%r15
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_128560
.p2align 0x4
L_427652:
L_128571:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
	jmp L_128560
.p2align 0x4
L_427654:
L_128577:
	movq 0x0(%r15),%r13
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,%r14
	je L_128497
L_128578:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	jmp L_128558
.p2align 0x4
L_427656:
L_128574:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	cmpq $0x1,%r14
	je L_128497
L_128575:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	jmp L_128558
.p2align 0x4
L_427659:
L_128551:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (not_41+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isSubtype_0
.p2align 0x4
L_427660:
L_128523:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128524
L_128549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128550
.p2align 0x4
.long 0x52C
L_128550:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128524:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF65,%r13
	je L_427666
	cmpq $0xF66,%r13
	je L_427664
L_128525:
	movq 0x0(%r15),%r13
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,%r14
	je L_128497
L_128526:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
L_128527:
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF65,%r15
	je L_427662
	cmpq $0xF66,%r15
	je L_427661
L_128528:
	movq 0x0(%r14),%r15
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_128529:
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_128530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp interfere_0
.p2align 0x4
L_427661:
L_128541:
	movq 0x0(%r14),%r15
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_128529
.p2align 0x4
L_427662:
L_128540:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
	jmp L_128529
.p2align 0x4
L_427664:
L_128546:
	movq 0x0(%r15),%r13
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,%r14
	je L_128497
L_128547:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	jmp L_128527
.p2align 0x4
L_427666:
L_128543:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	cmpq $0x1,%r14
	je L_128497
L_128544:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	jmp L_128527
.p2align 0x4
L_427669:
L_128517:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128518
L_128521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_128522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128522
.p2align 0x4
.long 0x52C
L_128522:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_128518:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq $0x3235,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (not_39+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp existsi_0
.p2align 0x4
L_427671:
L_128483:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427672:
L_128714:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x597
L_128492:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128493
L_128504:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_128505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128505
.p2align 0x4
.long 0x5FC
L_128505:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_128493:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_427675
L_128494:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_128497
L_128495:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_128489
.p2align 0x4
L_427675:
L_128498:
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (not_38+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isSubtype_0
.p2align 0x4
.long 0x597
L_128693:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128694
L_128701:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_128702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128702
.p2align 0x4
.long 0x5FC
L_128702:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_128694:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_427678
L_128695:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_128497
L_128696:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_128690
.p2align 0x4
L_427678:
L_128698:
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (not_45+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isSubtype_0
.p2align 0x4
.long 0x5F8
L_128619:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jnz L_128497
	jmp L_128501
.p2align 0x4
.long 0x576
L_128630:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpl $0x8,%r15d
	je L_427684
	cmpl $0x10,%r15d
	je L_427683
	cmpl $0x20,%r15d
	je L_427682
	cmpl $0x40,%r15d
	je L_427681
L_128631:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_128632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_427681:
L_128670:
	movb $0x0,0x20(%rbp)
	jmp L_128640
.p2align 0x4
L_427682:
L_128669:
	movb $0x1,0x20(%rbp)
	jmp L_128640
.p2align 0x4
L_427683:
L_128668:
	movb $0x2,0x20(%rbp)
	jmp L_128640
.p2align 0x4
L_427684:
L_128639:
	movb $0x3,0x20(%rbp)
	jmp L_128640
.p2align 0x4
.long 0x52B
L_128643:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpl $0x8,%r15d
	je L_427688
	cmpl $0x10,%r15d
	je L_427687
	cmpl $0x20,%r15d
	je L_427686
	cmpl $0x40,%r15d
	je L_427685
L_128644:
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_128645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_427685:
L_128658:
	xorb %dl,%dl
	jmp L_128653
.p2align 0x4
L_427686:
L_128657:
	movb $0x1,%dl
	jmp L_128653
.p2align 0x4
L_427687:
L_128656:
	movb $0x2,%dl
	jmp L_128653
.p2align 0x4
L_427688:
L_128652:
	movb $0x3,%dl
	jmp L_128653
.p2align 0x4
.long 0x597
L_128592:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128593
L_128600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_128601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128601
.p2align 0x4
.long 0x5FC
L_128601:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_128593:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_427690
L_128594:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_128497
L_128595:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_128589
.p2align 0x4
L_427690:
L_128597:
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (not_44+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isSubtype_0
.p2align 0x4
.long 0x5F8
not_43:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jnz L_128501
	jmp L_128497
.p2align 0x4
.long 0x597
L_128561:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128562
L_128569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_128570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128570
.p2align 0x4
.long 0x5FC
L_128570:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_128562:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_427694
L_128563:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_128497
L_128564:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_128558
.p2align 0x4
L_427694:
L_128566:
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (not_42+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isSubtype_0
.p2align 0x4
.long 0x5F8
not_41:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jnz L_128501
	jmp L_128497
.p2align 0x4
.long 0x597
L_128530:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128531
L_128538:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_128539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128539
.p2align 0x4
.long 0x5FC
L_128539:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_128531:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_427698
L_128532:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_128497
L_128533:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_128527
.p2align 0x4
L_427698:
L_128535:
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (not_40+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isSubtype_0
.p2align 0x4
.long 0x5F8
not_39:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jnz L_128501
	jmp L_128497
.p2align 0x4
.long 0x5F8
not_38:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jnz L_128501
	jmp L_128497
.p2align 0x4
.long 0x5F8
not_45:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jnz L_128501
	jmp L_128497
.p2align 0x4
.long 0x1
L_128632:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128633
L_128637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128638
.p2align 0x4
.long 0x451
L_128638:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128633:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_128645:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128646
L_128650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128651
.p2align 0x4
.long 0x451
L_128651:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128646:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5F8
not_44:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jnz L_128501
	jmp L_128497
.p2align 0x4
.long 0x5F8
not_42:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jnz L_128501
	jmp L_128497
.p2align 0x4
.long 0x5F8
not_40:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jnz L_128501
	jmp L_128497
.p2align 0x4
.long 0x1
bug_367:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128634
L_128635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128636
.p2align 0x4
.long 0x451
L_128636:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128634:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_368:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128647
L_128648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128649
.p2align 0x4
.long 0x451
L_128649:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128647:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_36
.hidden get_36
get_36:
L_128717:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128718
L_128772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_128773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128773
.p2align 0x4
.long 0x45F
L_128773:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_128718:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_427719
L_128720:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_427718
L_128721:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_128723:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_427717
L_128764:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD6F,%r10
	jne L_427716
L_128765:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_427713
L_128724:
	incl %ecx
	jo L_427712
L_128726:
	cmpq $0x1,%r14
	je L_427710
L_128727:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_128723
.p2align 0x4
L_427710:
L_128728:
L_128729:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_427711
L_128731:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_477
L_128763:
	movl %ecx,0x0(%r15)
x_477:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_128733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_427711:
L_128730:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427712:
L_128725:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427713:
L_128767:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_128730
L_128768:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_427714
L_128770:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427714:
L_128769:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427716:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_128724
.p2align 0x4
L_427717:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_128724
.p2align 0x4
L_427718:
L_128771:
	xorl %ecx,%ecx
	jmp L_128729
.p2align 0x4
L_427719:
L_128719:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_128733:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_128734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_128734:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_128735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_128735:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF360)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_128736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_128736:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_128737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_128737:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128738
L_128761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_128762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128762
.p2align 0x4
.long 0x4AE
L_128762:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_128738:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_128739:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_128725
L_128740:
	cmpq $0x1,%r14
	je L_427721
L_128741:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_128739
.p2align 0x4
L_427721:
L_128742:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128743
L_128759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_128760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128760
.p2align 0x4
.long 0x4E6
L_128760:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_128743:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_427722
L_128744:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_215:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_427722:
L_128758:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_215
.p2align 0x4
.long 0x1
rev_213:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_427728
L_128745:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_128746:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427727
.p2align 0x4,,0x7
L_128747:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427726
L_128748:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_128746
.p2align 0x4
L_427726:
L_128750:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_128751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_427727:
L_128755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_128756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128756
.p2align 0x4
.long 0x45B
L_128756:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_128747
.p2align 0x4
L_427728:
L_128757:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_128750
.p2align 0x4
.long 0x1
L_128751:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128752
L_128753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_128754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128754
.p2align 0x4
.long 0x451
L_128754:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_128752:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl visit_0
.hidden visit_0
visit_0:
L_128774:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_128775
L_132425:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_132426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132426
.p2align 0x4
.long 0x97B
L_132426:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_128775:
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_128776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x1B8C
L_128776:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128777
L_132423:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_132424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132424
.p2align 0x4
.long 0x971
L_132424:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_128777:
	movslq 0x38(%rbp),%r15
	movq 0x18(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_128779
L_128780:
	movl 0x0(%r11,%r15,4),%r10d
	testl %r10d,%r10d
	jnz L_427750
L_128781:
	movl $0x1,0x0(%r11,%r15,4)
	movq 0x10(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_427749
L_128783:
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1B74,%r15
	je L_427747
	cmpq $0x1B75,%r15
	je L_427746
	cmpq $0x1B76,%r15
	je L_427745
	cmpq $0x1B77,%r15
	je L_427744
	cmpq $0x1B78,%r15
	je L_427743
L_128784:
	movq 0x28(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x20(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%r14),%r10
	movq %r10,0x78(%rbp)
	movq 0x30(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x80(%rbp)
	movq 0x0(%r10),%r9
	movq 0x10(%r14),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x88(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_427742
L_128786:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_427741
L_128787:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_128789:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_427740
L_128817:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xDA2,%r11
	jne L_427739
L_128818:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x18)(%rip)
	je L_427736
L_128790:
	incl %ecx
	movl %ecx,0x90(%rbp)
	jo L_427735
L_128792:
	cmpq $0x1,%r15
	je L_427731
L_128793:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_128789
.p2align 0x4
L_427731:
L_128794:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128795
L_128815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_128816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128816
.p2align 0x4
.long 0x1B91
L_128816:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_128795:
	movl 0x90(%rbp),%ecx
L_128796:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_427733
L_128798:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_128800
L_128814:
	movl %ecx,0x0(%r15)
L_128800:
	movq $0x1B45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq $0x3347,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_128801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_427733:
L_128797:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1080)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427735:
L_128791:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427736:
L_128820:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_128797
L_128821:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_128823
L_128824:
	movl %ecx,0x0(%r15)
L_128823:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427739:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_128790
.p2align 0x4
L_427740:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_128790
.p2align 0x4
L_427741:
L_128825:
	xorl %ecx,%ecx
	jmp L_128796
.p2align 0x4
L_427742:
L_128785:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1088)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427743:
L_132415:
	movq 0x8(%r11),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x48(%rbp)
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_132416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_427744:
L_132414:
	movq 0x0(%r11),%r15
	movq 0x0(%r15),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_128807:
	movq $0x36DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x14A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq $0xB,0x0(%r14)
	movq $0x5,0x10(%r14)
	movq %r14,0x0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
L_427745:
L_129243:
	movq 0x38(%r11),%r15
	movq 0x30(%r11),%r13
	movq %r13,0x40(%rbp)
	movq 0x28(%r11),%r13
	movq %r13,0x48(%rbp)
	movq 0x20(%r11),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%r11),%r13
	movq %r13,0x58(%rbp)
	movq 0x10(%r11),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r11),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r11),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x90(%rbp)
	movq $0x3357,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xA0(%rbp)
	addq $0x10,%r12
	movq %r13,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_129244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_427746:
L_128828:
	movq 0xA0(%r11),%r15
	movq %r15,0x110(%rbp)
	movq 0x98(%r11),%r15
	movq %r15,0x40(%rbp)
	movq 0x90(%r11),%r15
	movq %r15,0x48(%rbp)
	movq 0x88(%r11),%r15
	movq %r15,0x50(%rbp)
	movq 0x80(%r11),%r15
	movq %r15,0x58(%rbp)
	movq 0x78(%r11),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%r11),%r15
	movq %r15,0x68(%rbp)
	movq 0x68(%r11),%r15
	movq %r15,0x70(%rbp)
	movq 0x60(%r11),%r15
	movq %r15,0x78(%rbp)
	movq 0x58(%r11),%r15
	movq %r15,0x80(%rbp)
	movq 0x50(%r11),%r15
	movq %r15,0x88(%rbp)
	movq 0x48(%r11),%r15
	movq %r15,0x90(%rbp)
	movq 0x40(%r11),%r15
	movq %r15,0x98(%rbp)
	movq 0x38(%r11),%r15
	movq %r15,0xA0(%rbp)
	movq 0x30(%r11),%r15
	movq %r15,0xA8(%rbp)
	movq 0x28(%r11),%r15
	movq %r15,0xB0(%rbp)
	movq 0x20(%r11),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%r11),%r15
	movq %r15,0xC0(%rbp)
	movq 0x10(%r11),%r15
	movq %r15,0xC8(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0xD0(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0xD8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xE0(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0xE8(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0xF0(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_128829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
L_427747:
L_128826:
	movq 0x20(%r11),%r15
	movq 0x18(%r11),%r14
	movq 0x10(%r11),%r13
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq 0x38(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r8
	shrq $0x1,%r8
	cmpq $0x109D,%r8
	jne L_128807
L_128827:
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	movq %r13,0x60(%rbp)
	movq %r10,0x68(%rbp)
	movq %r9,0x70(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_128805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_12
.p2align 0x4
L_427749:
L_128779:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427750:
L_132422:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B8D
L_128801:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128802
L_128812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_128813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128813
.p2align 0x4
.long 0x1B90
L_128813:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_128802:
	movq $0x3289,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_128803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0xBB9
L_132416:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132417
L_132420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_132421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132421
.p2align 0x4
.long 0x1C91
L_132421:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_132417:
	movq 0x50(%rbp),%r15
	andq $0x1,%r15
	jnz L_128823
L_132418:
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_128807
.p2align 0x4
.long 0x1BDE
L_129244:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129245
L_132412:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_132413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132413
.p2align 0x4
.long 0x1C90
L_132413:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_129245:
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x98(%rbp)
	cmpq %r11,%r14
	jne L_128834
L_129247:
	testq %r11,%r11
	jz L_427800
L_129248:
	cmpq $0x7FFFFFFF,%r11
	ja L_129052
L_129249:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129250
L_132408:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_132409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132409
.p2align 0x4
.long 0x1BDF
L_132409:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_129250:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15EF,%rcx
	movq 0x98(%rbp),%rdx
	movq $0x28,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_129251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129251
.p2align 0x4
.long 0x1BDF
L_129251:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0xA0(%rbp)
L_129252:
	movl $0x0,0xA8(%rbp)
	movq $0x0,0xB0(%rbp)
loop_1357:
	movq 0x98(%rbp),%r15
	cmpq %r15,0xB0(%rbp)
	jl L_427763
L_129253:
	movq 0xA0(%rbp),%r15
	movq $0x1757,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0xA8(%rbp),%rdx
	movq %rdx,0x50(%rbp)
	testq %rdx,%rdx
	jz L_427762
L_129254:
	cmpq $0x7FFFFFFF,%rdx
	ja L_427761
L_129255:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_129256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129256
.p2align 0x4
.long 0x1BE0
L_129256:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0x58(%rbp)
L_129257:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1358:
	cmpq 0x50(%rbp),%r15
	jnl L_427759
.p2align 0x4,,0x7
loop_1365:
	movslq %ecx,%r14
	movq 0xA0(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_427757
L_129383:
	incl %ecx
	jo L_128791
L_129384:
	jmp loop_1365
.p2align 0x4
L_427757:
L_129381:
	movq 0x0(%r11),%r14
	incl %ecx
	jo L_128791
L_129382:
	movq 0x58(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_1358
.p2align 0x4
L_427759:
L_129258:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129259
L_129378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_129379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129379
.p2align 0x4
.long 0x1BE4
L_129379:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_129259:
	movq 0x58(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2A31,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x14A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0xA,0x0(%r14)
	movq $0x6,0x8(%r14)
	movq %r14,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_129260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
L_427761:
L_129052:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427762:
L_129386:
	movq (globalObjptr+0x5170)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_129257
.p2align 0x4
L_427763:
L_129387:
	movq 0xB0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x78(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_427797
	cmpq $0x2,%r13
	je L_427796
	cmpq $0x3,%r13
	je L_427795
L_129388:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1091,%r15
	je L_427794
	cmpq $0x1092,%r15
	je L_427793
	cmpq $0x1093,%r15
	je L_427767
	cmpq $0x1094,%r15
	je L_427766
	cmpq $0x1095,%r15
	je L_427765
	cmpq $0x1096,%r15
	je L_427764
L_129389:
	movq %r13,0xB8(%rbp)
keep_1:
	movq $0x2A45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x14B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x6,0x0(%r14)
	movq %r14,0xC8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_129390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefUse_0
.p2align 0x4
L_427764:
L_132351:
	movq 0x10(%r13),%r15
	movq %r15,0xC8(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0xAC(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_132352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3855
.p2align 0x4
L_427765:
L_132345:
	movq 0x8(%r13),%r15
	movq %r15,0xB8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0xC8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_132346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3855
.p2align 0x4
L_427766:
L_132344:
	movq %r13,0xB8(%rbp)
	jmp keep_1
.p2align 0x4
L_427767:
L_129399:
	movq 0x10(%r13),%r15
	movq %r15,0xB8(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0xC0(%rbp)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0xD0(%rbp)
	cmpq %r14,%r11
	movq %r15,0xC8(%rbp)
	jne L_128834
L_129401:
	testq %r11,%r11
	jz L_427791
L_129402:
	cmpq $0x7FFFFFFF,%r11
	ja L_129052
L_129403:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129404
L_132340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_132341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132341
.p2align 0x4
.long 0x1BF2
L_132341:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_129404:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq 0xD0(%rbp),%rdx
	movq $0x20,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_129405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129405
.p2align 0x4
.long 0x1BF2
L_129405:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq %rax,0xD8(%rbp)
L_129406:
	movq $0x0,0xE0(%rbp)
loop_1366:
	movq 0xD0(%rbp),%rdx
	cmpq %rdx,0xE0(%rbp)
	jl L_427788
L_129407:
	movq 0xD8(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0xC0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xB8(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r14,0xC8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0xD0(%rbp)
	movl %r13d,0xAC(%rbp)
	cmpq %r14,%rdx
	jne L_128834
L_129409:
	testq %rdx,%rdx
	jz L_427786
L_129410:
	cmpq $0x7FFFFFFF,%rdx
	ja L_129052
L_129411:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15F1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_129412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129412
.p2align 0x4
.long 0x1BF3
L_129412:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq %rax,0xE0(%rbp)
L_129413:
	movl $0x0,0xE8(%rbp)
	movq $0x0,0xF0(%rbp)
.p2align 0x4,,0x7
loop_1367:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427784
.p2align 0x4,,0x7
L_129414:
	movq 0xF0(%rbp),%r15
	cmpq 0xD0(%rbp),%r15
	jnl L_427772
L_132322:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0xD8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_132323:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_132324
L_132326:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x108A,%r15
	je L_427770
	cmpq $0x108D,%r15
	je L_427768
L_132324:
	movl 0xE8(%rbp),%ecx
	movq $0x1,%r15
L_132325:
	movl %ecx,0xE8(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xF0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xF0(%rbp)
	jmp loop_1367
.p2align 0x4
L_427768:
L_132330:
	movq 0x0(%r13),%r15
	movq $0x264F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_132328:
	movl 0xE8(%rbp),%ecx
	incl %ecx
	jo L_128791
	jmp L_132325
.p2align 0x4
L_427770:
L_132327:
	movq 0x0(%r13),%r15
	movq $0x264D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_132328
.p2align 0x4
L_427772:
L_129415:
	movq 0xE0(%rbp),%r14
	movq $0x175F,0xFFFFFFFFFFFFFFF8(%r14)
	movslq 0xE8(%rbp),%rdx
	movq %rdx,0xD0(%rbp)
	testq %rdx,%rdx
	jz L_427783
L_129416:
	cmpq $0x7FFFFFFF,%rdx
	ja L_129052
L_129417:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15F3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_129418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129418
.p2align 0x4
.long 0x1BF4
L_129418:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq %rax,0xD8(%rbp)
L_129419:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1368:
	cmpq 0xD0(%rbp),%r15
	jnl L_427776
.p2align 0x4,,0x7
loop_1371:
	movslq %ecx,%r14
	movq 0xE0(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_427774
L_132318:
	incl %ecx
	jo L_128791
L_132319:
	jmp loop_1371
.p2align 0x4
L_427774:
L_132316:
	incl %ecx
	jo L_128791
L_132317:
	movq 0xD8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1368
.p2align 0x4
L_427776:
L_129420:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129421
L_132313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_132314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132314
.p2align 0x4
.long 0x1BF3
L_132314:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_129421:
	movq 0xD8(%rbp),%r15
	movq $0x1761,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_427780
L_129423:
	cmpl %r13d,0xAC(%rbp)
	jne keep_8
L_129425:
	decl %r13d
	jo L_128791
L_129426:
	movl %r13d,0xAC(%rbp)
	movq $0x1,0xD0(%rbp)
.p2align 0x4,,0x7
loop_1369:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_427778
.p2align 0x4,,0x7
L_129427:
	movl 0xAC(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_427777
L_129428:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0xAC(%rbp)
	movq 0xD8(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x2651,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	jmp loop_1369
.p2align 0x4
L_427777:
L_129429:
	movq 0x60(%rbp),%r14
	movq 0x288(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0x280(%r14),%r11
	movq %r11,0xE0(%rbp)
	movq 0x278(%r14),%r11
	movq %r11,0xE8(%rbp)
	movq 0x270(%r14),%r11
	movq %r11,0xF0(%rbp)
	movq 0x268(%r14),%r11
	movq %r11,0xF8(%rbp)
	movq 0x260(%r14),%r11
	movq %r11,0x100(%rbp)
	movq 0x258(%r14),%r11
	movq %r11,0x108(%rbp)
	movq 0x250(%r14),%r11
	movq %r11,0x110(%rbp)
	movq 0x248(%r14),%r11
	movq %r11,0x118(%rbp)
	movq 0x240(%r14),%r11
	movq %r11,0x120(%rbp)
	movq 0x238(%r14),%r11
	movq %r11,0x128(%rbp)
	movq 0x230(%r14),%r11
	movq %r11,0x130(%rbp)
	movq 0x228(%r14),%r11
	movq %r11,0x138(%rbp)
	movq 0x220(%r14),%r11
	movq %r11,0x140(%rbp)
	movq 0x218(%r14),%r11
	movq %r11,0x148(%rbp)
	movq 0x210(%r14),%r11
	movq %r11,0x150(%rbp)
	movq 0x208(%r14),%r11
	movq %r11,0x158(%rbp)
	movq 0x200(%r14),%r11
	movq %r11,0x160(%rbp)
	movq 0x1F8(%r14),%r11
	movq %r11,0x168(%rbp)
	movq 0x1F0(%r14),%r11
	movq %r11,0x170(%rbp)
	movq 0x1E8(%r14),%r11
	movq %r11,0x178(%rbp)
	movq 0x1E0(%r14),%r11
	movq %r11,0x180(%rbp)
	movq 0x1D8(%r14),%r11
	movq %r11,0x188(%rbp)
	movq 0x1D0(%r14),%r11
	movq %r11,0x190(%rbp)
	movq 0x1C8(%r14),%r11
	movq %r11,0x198(%rbp)
	movq 0x1C0(%r14),%r11
	movq %r11,0x1A0(%rbp)
	movq 0x1B8(%r14),%r11
	movq %r11,0x1A8(%rbp)
	movq 0x1B0(%r14),%r11
	movq %r11,0x1B0(%rbp)
	movq 0x1A8(%r14),%r11
	movq %r11,0x1B8(%rbp)
	movq 0x1A0(%r14),%r11
	movq %r11,0x1C0(%rbp)
	movq 0x198(%r14),%r11
	movq %r11,0x1C8(%rbp)
	movq 0x190(%r14),%r11
	movq %r11,0x1D0(%rbp)
	movq 0x188(%r14),%r11
	movq %r11,0x1D8(%rbp)
	movq 0x180(%r14),%r11
	movq %r11,0x1E0(%rbp)
	movq 0x178(%r14),%r11
	movq %r11,0x1E8(%rbp)
	movq 0x170(%r14),%r11
	movq %r11,0x1F0(%rbp)
	movq 0x168(%r14),%r11
	movq %r11,0x1F8(%rbp)
	movq 0x160(%r14),%r11
	movq %r11,0x200(%rbp)
	movq 0x158(%r14),%r11
	movq %r11,0x208(%rbp)
	movq 0x150(%r14),%r11
	movq %r11,0x210(%rbp)
	movq 0x148(%r14),%r11
	movq %r11,0x218(%rbp)
	movq 0x140(%r14),%r11
	movq %r11,0x220(%rbp)
	movq 0x138(%r14),%r11
	movq %r11,0x228(%rbp)
	movq 0x130(%r14),%r11
	movq %r11,0x230(%rbp)
	movq 0x128(%r14),%r11
	movq %r11,0x238(%rbp)
	movq 0x120(%r14),%r11
	movq %r11,0x240(%rbp)
	movq 0x118(%r14),%r11
	movq %r11,0x248(%rbp)
	movq 0x110(%r14),%r11
	movq %r11,0x250(%rbp)
	movq 0x108(%r14),%r11
	movq %r11,0x258(%rbp)
	movq 0x100(%r14),%r11
	movq %r11,0x260(%rbp)
	movq 0xF8(%r14),%r11
	movq %r11,0x268(%rbp)
	movq 0xF0(%r14),%r11
	movq %r11,0x270(%rbp)
	movq 0xE8(%r14),%r11
	movq %r11,0x278(%rbp)
	movq 0xE0(%r14),%r11
	movq %r11,0x280(%rbp)
	movq 0xD8(%r14),%r11
	movq %r11,0x288(%rbp)
	movq 0xD0(%r14),%r11
	movq %r11,0x290(%rbp)
	movq 0xC8(%r14),%r11
	movq %r11,0x298(%rbp)
	movq 0xC0(%r14),%r11
	movq %r11,0x2A0(%rbp)
	movq 0xB8(%r14),%r11
	movq %r11,0x2A8(%rbp)
	movq 0xB0(%r14),%r11
	movq %r11,0x2B0(%rbp)
	movq 0xA8(%r14),%r11
	movq %r11,0x2B8(%rbp)
	movq 0xA0(%r14),%r11
	movq %r11,0x2C0(%rbp)
	movq 0x98(%r14),%r11
	movq %r11,0x2C8(%rbp)
	movq 0x90(%r14),%r11
	movq %r11,0x2D0(%rbp)
	movq 0x88(%r14),%r11
	movq %r11,0x2D8(%rbp)
	movq 0x80(%r14),%r11
	movq %r11,0x2E0(%rbp)
	movq 0x78(%r14),%r11
	movq %r11,0x2E8(%rbp)
	movq 0x70(%r14),%r11
	movq %r11,0x2F0(%rbp)
	movq 0x68(%r14),%r11
	movq %r11,0x2F8(%rbp)
	movq 0x60(%r14),%r11
	movq %r11,0x300(%rbp)
	movq 0x58(%r14),%r11
	movq %r11,0x308(%rbp)
	movq 0x50(%r14),%r11
	movq %r11,0x310(%rbp)
	movq 0x48(%r14),%r11
	movq %r11,0x318(%rbp)
	movq 0x40(%r14),%r11
	movq %r11,0x320(%rbp)
	movq 0x38(%r14),%r11
	movq %r11,0x328(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x330(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x338(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x340(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x348(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x350(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x358(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl $0x80,0x368(%rbp)
	movq $0x3,0x370(%rbp)
	movq %r13,0x378(%rbp)
	addq $0x368,%rbp
	leaq (L_129430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
L_427778:
L_132311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_132312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132312
.p2align 0x4
.long 0x1C11
L_132312:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_129427
.p2align 0x4
keep_8:
keep_2:
	movq 0xC8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	jmp keep_1
.p2align 0x4
L_427780:
L_128834:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427783:
L_132321:
	movq (globalObjptr+0x5188)(%rip),%r14
	movq %r14,0xD8(%rbp)
	jmp L_129419
.p2align 0x4
L_427784:
L_132331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_132332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132332
.p2align 0x4
.long 0x1C8B
L_132332:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	jmp L_129414
.p2align 0x4
L_427786:
L_132334:
	movq (globalObjptr+0x5180)(%rip),%r15
	movq %r15,0xE0(%rbp)
	jmp L_129413
.p2align 0x4
L_427788:
L_132335:
	movq 0xE0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0xC8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xF0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF0,%rbp
	leaq (L_132336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3855
.p2align 0x4
L_427791:
L_132343:
	movq (globalObjptr+0x5178)(%rip),%r15
	movq %r15,0xD8(%rbp)
	jmp L_129406
.p2align 0x4
L_427793:
L_129398:
	movq %r13,0xB8(%rbp)
	jmp keep_1
.p2align 0x4
L_427794:
L_129397:
	movq %r13,0xB8(%rbp)
	jmp keep_1
.p2align 0x4
L_427795:
L_132407:
	movq %r13,0xB8(%rbp)
	jmp keep_1
.p2align 0x4
L_427796:
L_132406:
	movq %r13,0xB8(%rbp)
	jmp keep_1
.p2align 0x4
L_427797:
L_132405:
	movq %r13,0xB8(%rbp)
	jmp keep_1
.p2align 0x4
L_427800:
L_132411:
	movq (globalObjptr+0x5168)(%rip),%r15
	movq %r15,0xA0(%rbp)
	jmp L_129252
.p2align 0x4
.long 0x1B92
L_128829:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128830
L_129241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_129242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129242
.p2align 0x4
.long 0x1BDD
L_129242:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_128830:
	movq 0x100(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x108(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0xE8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x140(%rbp)
	movq $0x3D8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_128831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
.long 0xA24
L_128805:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128807
L_128808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_128809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128809
.p2align 0x4
.long 0xBC4
L_128809:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_128807
.p2align 0x4
.long 0x1B8E
L_128803:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128804
L_128810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_128811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128811
.p2align 0x4
.long 0x1B8F
L_128811:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_128804:
	movq $0x2A27,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x14A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x1,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_128805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x1BE1
L_129260:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129261
L_129376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_129377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129377
.p2align 0x4
.long 0x1BEF
L_129377:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_129261:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x109A,%r14
	je L_427836
	cmpq $0x109B,%r14
	je L_427830
	cmpq $0x109C,%r14
	je L_427824
	cmpq $0x109D,%r14
	je L_427818
	cmpq $0x109E,%r14
	je L_427812
	cmpq $0x109F,%r14
	je L_427806
L_129262:
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_129263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3856
.p2align 0x4
L_427806:
L_129358:
	movq 0x28(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0xA0(%rbp)
	cmpq %r15,%r11
	movq %r14,0x98(%rbp)
	jne L_128834
L_129360:
	testq %r11,%r11
	jz L_427810
L_129361:
	cmpq $0x7FFFFFFF,%r11
	ja L_129052
L_129362:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129363
L_129372:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_129373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129373
.p2align 0x4
.long 0x1BEC
L_129373:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_129363:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq 0xA0(%rbp),%rdx
	movq $0xC8,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_129364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129364
.p2align 0x4
.long 0x1BEC
L_129364:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0xA8(%rbp)
L_129365:
	movq $0x0,0xB0(%rbp)
loop_1364:
	movq 0xA0(%rbp),%r14
	cmpq %r14,0xB0(%rbp)
	jl L_427807
L_129366:
	movq 0xA8(%rbp),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x213F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x28(%r15)
L_129265:
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x30,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%r14)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_128807
.p2align 0x4
L_427807:
L_129367:
	movq 0xB0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x98(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xC0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_129368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3857
.p2align 0x4
L_427810:
L_129375:
	movq (globalObjptr+0x51A0)(%rip),%r15
	movq %r15,0xA8(%rbp)
	jmp L_129365
.p2align 0x4
L_427812:
L_129340:
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x68(%rbp)
	cmpq %r15,%r11
	movq %r14,0x60(%rbp)
	jne L_128834
L_129342:
	testq %r11,%r11
	jz L_427816
L_129343:
	cmpq $0x7FFFFFFF,%r11
	ja L_129052
L_129344:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129345
L_129354:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_129355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129355
.p2align 0x4
.long 0x1BE9
L_129355:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_129345:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq 0x68(%rbp),%rdx
	movq $0xB0,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_129346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129346
.p2align 0x4
.long 0x1BE9
L_129346:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x78(%rbp)
L_129347:
	movq $0x0,0x98(%rbp)
loop_1363:
	movq 0x68(%rbp),%r14
	cmpq %r14,0x98(%rbp)
	jl L_427813
L_129348:
	movq 0x78(%rbp),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x213D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_129265
.p2align 0x4
L_427813:
L_129349:
	movq 0x98(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xA8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_129350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3857
.p2align 0x4
L_427816:
L_129357:
	movq (globalObjptr+0x51A0)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_129347
.p2align 0x4
L_427818:
L_129322:
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x68(%rbp)
	cmpq %r11,%r15
	movq %r14,0x60(%rbp)
	jne L_128834
L_129324:
	testq %r11,%r11
	jz L_427822
L_129325:
	cmpq $0x7FFFFFFF,%r11
	ja L_129052
L_129326:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129327
L_129336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_129337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129337
.p2align 0x4
.long 0x1BE9
L_129337:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_129327:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq 0x68(%rbp),%rdx
	movq $0xB0,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_129328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129328
.p2align 0x4
.long 0x1BE9
L_129328:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x78(%rbp)
L_129329:
	movq $0x0,0x98(%rbp)
loop_1362:
	movq 0x68(%rbp),%r14
	cmpq %r14,0x98(%rbp)
	jl L_427819
L_129330:
	movq 0x78(%rbp),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x213B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_129265
.p2align 0x4
L_427819:
L_129331:
	movq 0x98(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xA8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_129332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3857
.p2align 0x4
L_427822:
L_129339:
	movq (globalObjptr+0x51A0)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_129329
.p2align 0x4
L_427824:
L_129304:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x60(%rbp)
	cmpq %r15,%r11
	movq %r14,0x50(%rbp)
	jne L_128834
L_129306:
	testq %r11,%r11
	jz L_427828
L_129307:
	cmpq $0x7FFFFFFF,%r11
	ja L_129052
L_129308:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129309
L_129318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_129319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129319
.p2align 0x4
.long 0x1BE3
L_129319:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_129309:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq 0x60(%rbp),%rdx
	movq $0xA8,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_129310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129310
.p2align 0x4
.long 0x1BE3
L_129310:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x68(%rbp)
L_129311:
	movq $0x0,0x78(%rbp)
loop_1361:
	movq 0x60(%rbp),%r14
	cmpq %r14,0x78(%rbp)
	jl L_427825
L_129312:
	movq 0x68(%rbp),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2139,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_129265
.p2align 0x4
L_427825:
L_129313:
	movq 0x78(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xA0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_129314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3857
.p2align 0x4
L_427828:
L_129321:
	movq (globalObjptr+0x51A0)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_129311
.p2align 0x4
L_427830:
L_129286:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x50(%rbp)
	cmpq %r11,%r15
	movq %r14,0x48(%rbp)
	jne L_128834
L_129288:
	testq %r11,%r11
	jz L_427834
L_129289:
	cmpq $0x7FFFFFFF,%r11
	ja L_129052
L_129290:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129291
L_129300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_129301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129301
.p2align 0x4
.long 0x1BE4
L_129301:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_129291:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq 0x50(%rbp),%rdx
	movq $0xA0,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_129292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129292
.p2align 0x4
.long 0x1BE4
L_129292:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x60(%rbp)
L_129293:
	movq $0x0,0x68(%rbp)
loop_1360:
	movq 0x50(%rbp),%r14
	cmpq %r14,0x68(%rbp)
	jl L_427831
L_129294:
	movq 0x60(%rbp),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2137,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	jmp L_129265
.p2align 0x4
L_427831:
L_129295:
	movq 0x68(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xA0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_129296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3857
.p2align 0x4
L_427834:
L_129303:
	movq (globalObjptr+0x51A0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_129293
.p2align 0x4
L_427836:
L_129268:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x50(%rbp)
	cmpq %r15,%r11
	movq %r14,0x48(%rbp)
	jne L_128834
L_129270:
	testq %r11,%r11
	jz L_427840
L_129271:
	cmpq $0x7FFFFFFF,%r11
	ja L_129052
L_129272:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129273
L_129282:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_129283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129283
.p2align 0x4
.long 0x1BE4
L_129283:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_129273:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq 0x50(%rbp),%rdx
	movq $0xA0,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_129274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129274
.p2align 0x4
.long 0x1BE4
L_129274:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x60(%rbp)
L_129275:
	movq $0x0,0x68(%rbp)
loop_1359:
	movq 0x50(%rbp),%r14
	cmpq %r14,0x68(%rbp)
	jl L_427837
L_129276:
	movq 0x60(%rbp),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2135,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	jmp L_129265
.p2align 0x4
L_427837:
L_129277:
	movq 0x68(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xA0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_129278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3857
.p2align 0x4
L_427840:
L_129285:
	movq (globalObjptr+0x51A0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_129275
.p2align 0x4
.long 0x1BF0
L_129390:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129391
L_129395:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_129396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129396
.p2align 0x4
.long 0x1BF1
L_129396:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_129391:
	movq $0x2655,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
L_129392:
	movl 0xA8(%rbp),%ecx
	incl %ecx
	jo L_128791
L_129394:
	movl %ecx,0xA8(%rbp)
	movq 0xA0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xB0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xB0(%rbp)
	jmp loop_1357
.p2align 0x4
.long 0x1BF0
L_132352:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132353
L_132403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_132404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132404
.p2align 0x4
.long 0x1C37
L_132404:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_132353:
	movq $0x212D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	addq $0x20,%r12
	movl 0xAC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0xC0(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0x0(%r13),%r15
	movq %r15,0xD0(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0xD8(%rbp)
	testl %r14d,%r14d
	jnz keep_4
L_132354:
L_132355:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_4
L_132359:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x108A,%r15
	je L_427851
	cmpq $0x108D,%r15
	je L_427850
	cmpq $0x108E,%r15
	je L_427846
keep_4:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132356
L_132357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_132358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132358
.p2align 0x4
.long 0x1C57
L_132358:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_132356:
	movq 0xC8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	jmp keep_1
.p2align 0x4
L_427846:
L_132395:
	movq 0xC0(%rbp),%r14
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_132396:
L_132397:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_4
L_132398:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x108A,%r14
	je L_427849
	cmpq $0x108D,%r14
	je L_427848
	cmpq $0x108E,%r14
	je L_427847
	jmp keep_4
.p2align 0x4
L_427847:
L_132401:
	movq 0x0(%r15),%r15
	jmp L_132396
.p2align 0x4
L_427848:
L_132400:
	movq %r15,0xB8(%rbp)
L_132361:
	movq 0xB8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_132362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
L_427849:
L_132399:
	movq %r15,0xB8(%rbp)
	jmp L_132361
.p2align 0x4
L_427850:
L_132394:
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	jmp L_132361
.p2align 0x4
L_427851:
L_132360:
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	jmp L_132361
.p2align 0x4
.long 0x1BF0
L_132346:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_132347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3855
.p2align 0x4
.long 0x1BF5
L_129430:
	addq $0xFFFFFFFFFFFFFC98,%rbp
	movq 0x368(%rbp),%r15
	movq %r15,0x360(%rbp)
	movq %r15,0x370(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_129431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x1C8C
L_132336:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132337
L_132338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_132339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132339
.p2align 0x4
.long 0x1C8D
L_132339:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_132337:
	movq 0xD8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xE0(%rbp),%r14
	movq 0xE8(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0xE0(%rbp)
	jmp loop_1366
.p2align 0x4
.long 0x1B93
L_128831:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128832
L_129239:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129240
.p2align 0x4
.long 0x1BDC
L_129240:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_128832:
	movq 0x128(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x118(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_128834
L_128835:
	movq %r10,0x140(%rbp)
	movq $0x4089,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_128836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0x1BE2
L_129263:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129264
L_129266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_129267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129267
.p2align 0x4
.long 0x1BE3
L_129267:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_129264:
	movq $0x2133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_129265
.p2align 0x4
.long 0x1BED
L_129368:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129369
L_129370:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_129371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129371
.p2align 0x4
.long 0x1BEE
L_129371:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_129369:
	movq 0xA8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xB0(%rbp),%r14
	movq 0xB8(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0xB0(%rbp)
	jmp loop_1364
.p2align 0x4
.long 0x1BEA
L_129350:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129351
L_129352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_129353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129353
.p2align 0x4
.long 0x1BEB
L_129353:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_129351:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x98(%rbp),%r14
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x98(%rbp)
	jmp loop_1363
.p2align 0x4
.long 0x1BEA
L_129332:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129333
L_129334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_129335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129335
.p2align 0x4
.long 0x1BEB
L_129335:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_129333:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x98(%rbp),%r14
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x98(%rbp)
	jmp loop_1362
.p2align 0x4
.long 0x1BE7
L_129314:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129315
L_129316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_129317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129317
.p2align 0x4
.long 0x1BE8
L_129317:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_129315:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x78(%rbp),%r14
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x78(%rbp)
	jmp loop_1361
.p2align 0x4
.long 0x1BE5
L_129296:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129297
L_129298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_129299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129299
.p2align 0x4
.long 0x1BE6
L_129299:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_129297:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x68(%rbp),%r14
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x68(%rbp)
	jmp loop_1360
.p2align 0x4
.long 0x1BE5
L_129278:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129279
L_129280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_129281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129281
.p2align 0x4
.long 0x1BE6
L_129281:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_129279:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x68(%rbp),%r14
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x68(%rbp)
	jmp loop_1359
.p2align 0x4
.long 0x1C8E
L_132362:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xD0(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_132363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x1C36
L_132347:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132348
L_132349:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_132350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132350
.p2align 0x4
.long 0x1C37
L_132350:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_132348:
	movq $0x212B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	jmp keep_1
.p2align 0x4
.long 0x1BF6
L_129431:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129432
L_132309:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x378,%rbp
	leaq (L_132310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132310
.p2align 0x4
.long 0x1C8A
L_132310:
	addq $0xFFFFFFFFFFFFFC88,%rbp
L_129432:
	movq 0xE8(%rbp),%r13
	movq 0x30(%r13),%r15
	movq 0x28(%r13),%r14
	movq 0x20(%r13),%r11
	movq 0x38(%r13),%r10
	movq 0x8(%r10),%r9
	movq $0x3D6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x368(%rbp),%r10
	movq %r10,0x0(%r13)
	movq 0x360(%rbp),%r10
	movq %r10,0x8(%r13)
	movq $0x1763,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x370(%rbp)
	movq %r9,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r15,0x10(%r10)
	movq %r14,0x18(%r10)
	movq %r11,0x20(%r10)
	addq $0x30,%r12
	movq 0xD0(%rbp),%r13
	cmpq $0x1,%r13
	je L_130187
L_129433:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_129434:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1327,%r13
	jne L_428384
L_130183:
	cmpq $0x1,%r14
	je L_427864
L_130184:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_129434
.p2align 0x4
L_427864:
L_130185:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130187
L_132306:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x380,%rbp
	leaq (L_132307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132307
.p2align 0x4
.long 0x1C89
L_132307:
	addq $0xFFFFFFFFFFFFFC80,%rbp
L_130187:
	movq 0xD0(%rbp),%r15
	cmpq $0x1,%r15
	je L_428382
L_130188:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xD0(%rbp)
	movq %r14,0xE8(%rbp)
	movq $0x1,0x338(%rbp)
.p2align 0x4,,0x7
L_130189:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428381
.p2align 0x4,,0x7
L_130190:
	movq 0xE8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1327,%r14
	jne L_428380
L_130192:
	movq 0x0(%r15),%r14
	movq $0x284B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x338(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0xD0(%rbp),%r13
	cmpq $0x1,%r13
	je L_427865
L_130193:
	movq %r15,0x338(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0xD0(%rbp)
	movq %r15,0xE8(%rbp)
	jmp L_130189
.p2align 0x4
L_427865:
L_130194:
	movq %r14,0xE8(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq $0x1,0x338(%rbp)
.p2align 0x4,,0x7
L_130195:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428379
.p2align 0x4,,0x7
L_130196:
	movq $0x284B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x338(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_427866
L_130197:
	movq %r15,0x338(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xD0(%rbp)
	movq %r15,0xE8(%rbp)
	jmp L_130195
.p2align 0x4
L_427866:
L_130199:
	movq 0xB8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0xD,%r13
	je L_428371
	cmpq $0x16,%r13
	je L_428363
	cmpq $0x21,%r13
	je L_428352
	cmpq $0x22,%r13
	je L_428346
	cmpq $0x32,%r13
	je L_428339
	cmpq $0x39,%r13
	je L_428333
	cmpq $0x3A,%r13
	je L_428325
	cmpq $0x59,%r13
	je L_428315
	cmpq $0x5A,%r13
	je L_428307
	cmpq $0x5F,%r13
	je L_428299
	cmpq $0x67,%r13
	je L_428291
	cmpq $0x69,%r13
	je L_428283
	cmpq $0x6A,%r13
	je L_428275
	cmpq $0x6B,%r13
	je L_428267
	cmpq $0x6D,%r13
	je L_428259
	cmpq $0x6E,%r13
	je L_428251
	cmpq $0x6F,%r13
	je L_428243
	cmpq $0x71,%r13
	je L_428235
	cmpq $0x72,%r13
	je L_428227
	cmpq $0x73,%r13
	je L_428219
	cmpq $0x75,%r13
	je L_428211
	cmpq $0x76,%r13
	je L_428202
	cmpq $0x77,%r13
	je L_428194
	cmpq $0x79,%r13
	je L_428186
	cmpq $0x7A,%r13
	je L_428175
	cmpq $0x7D,%r13
	je L_428164
	cmpq $0x7E,%r13
	je L_428153
	cmpq $0x7F,%r13
	je L_428145
	cmpq $0x81,%r13
	je L_428137
	cmpq $0x82,%r13
	je L_428129
	cmpq $0x83,%r13
	je L_428107
	cmpq $0x85,%r13
	je L_428095
	cmpq $0x87,%r13
	je L_428087
L_130200:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_130202
L_130323:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0x10A8,%rax
	cmpq $0x18,%rax
	ja L_427867
	leaq jumpTable_288(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_288:
.quad L_428078,L_428069,L_428061,L_428053,L_428045,L_428037,L_428019,L_428011,L_428003,L_427995,L_427984,L_427976,L_427968,L_427959,L_427951,L_427943,L_427935,L_427926,L_427918,L_427908,L_427900,L_427891,L_427883,L_130202,L_427873
.text
.p2align 0x4
L_427867:
L_130202:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_130203:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_130204:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_130205:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne keep_2
L_130206:
	movq 0x0(%r13),%r15
L_130207:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130208:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130209:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_427872
L_130254:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_427870
	cmpq $0xE4C,%r14
	je L_427868
	movq %r13,%r14
L_130210:
	cmpq $0x1,%r14
	jne keep_2
L_130211:
	movq %r15,0xD0(%rbp)
intInfUnary_7:
	movq 0xD0(%rbp),%r15
	movq %r15,0x380(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x388(%rbp)
	addq $0x380,%rbp
	leaq (L_130212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_427868:
L_130315:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427869
L_130316:
	cmpq $0x1,0x8(%r13)
	jne keep_2
x_480:
	movq %r14,0xD8(%rbp)
	movq %r15,0xE0(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x108(%rbp),%r15
	movq 0x120(%rbp),%r14
	movq %r14,0x108(%rbp)
	movq %r15,0x120(%rbp)
	movq 0x118(%rbp),%r15
	movq 0x110(%rbp),%r14
	movq %r14,0x118(%rbp)
	movq %r15,0x110(%rbp)
	addq $0xD8,%rbp
	leaq (L_130318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInfBinary_23
.p2align 0x4
L_427869:
L_130322:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427870:
L_130255:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427871
L_130256:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_130257:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
x_479:
	movq 0xD0(%rbp),%r15
	movq %r15,0x380(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x388(%rbp)
	addq $0x380,%rbp
	leaq (L_130258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_427871:
L_130314:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427872:
	movq %r13,%r14
	jmp L_130210
.p2align 0x4
L_427873:
L_131246:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_131247:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_131248:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_131249:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_427880
	cmpq $0xE4C,%r15
	je L_427874
	jmp keep_2
.p2align 0x4
L_427874:
L_131262:
	movq 0x0(%r13),%r15
L_131263:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_131264:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_131265:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_427879
L_131268:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_427877
	cmpq $0xE4C,%r14
	je L_427875
	movq %r13,%r14
L_131266:
	cmpq $0x1,%r14
	jne keep_2
L_131267:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427875:
L_131273:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427876
L_131274:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_427876:
L_131276:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427877:
L_131269:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427878
L_131270:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_131271:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_427878:
L_131272:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427879:
	movq %r13,%r14
	jmp L_131266
.p2align 0x4
L_427880:
L_131250:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne keep_2
L_131251:
	movq 0x1E0(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,0x0(%r13)
	jne keep_2
L_131253:
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_427881
L_131254:
	movsd 0x0(%r15),%xmm15
	movsd %xmm15,0xD8(%rbp)
	movq 0x1F8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_131255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1474
.p2align 0x4
L_427881:
L_131261:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movd %r14d,%xmm15
	movss %xmm15,%xmm14
	movss %xmm14,0xD8(%rbp)
	movq 0x1E8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_131255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1475
.p2align 0x4
L_427883:
L_131203:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_131204:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_131205:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_131206:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_427890
	cmpq $0xE4C,%r15
	je L_427884
	jmp keep_2
.p2align 0x4
L_427884:
L_131230:
	movq 0x0(%r13),%r15
L_131231:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_131232:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_131233:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_427889
L_131236:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_427887
	cmpq $0xE4C,%r14
	je L_427885
	movq %r13,%r14
L_131234:
	cmpq $0x1,%r14
	jne keep_2
L_131235:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427885:
L_131241:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427886
L_131242:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_427886:
L_131244:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427887:
L_131237:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427888
L_131238:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_131239:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_427888:
L_131240:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427889:
	movq %r13,%r14
	jmp L_131234
.p2align 0x4
L_427890:
L_131207:
	movq 0x0(%r13),%r15
	movq %r15,0xB8(%rbp)
L_131208:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_131209:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_131210:
	movq %r11,%r14
	andq $0x3,%r14
	jnz keep_2
L_131211:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_131212:
	movq 0x0(%r11),%r14
	movq %r14,0xD0(%rbp)
	cmpq $0x1,%r13
	jne keep_2
L_131213:
	movq 0x2A8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xD8(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xE0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xE8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xF8(%rbp)
	movq %r13,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_131214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_427891:
L_131166:
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0xAC(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
L_131167:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_131168:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_131169:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_131170:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_427898
	cmpq $0xE4C,%r15
	je L_427892
	jmp keep_2
.p2align 0x4
L_427892:
L_131187:
	movq 0x0(%r13),%r15
L_131188:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_131189:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_131190:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_427897
L_131193:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_427895
	cmpq $0xE4C,%r14
	je L_427893
	movq %r13,%r14
L_131191:
	cmpq $0x1,%r14
	jne keep_2
L_131192:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427893:
L_131198:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427894
L_131199:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_427894:
L_131201:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427895:
L_131194:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427896
L_131195:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_131196:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_427896:
L_131197:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427897:
	movq %r13,%r14
	jmp L_131191
.p2align 0x4
L_427898:
L_131171:
	movq 0x0(%r13),%r15
L_131172:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_131173:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_131174:
	movq %r11,%r14
	andq $0x3,%r14
	jnz keep_2
L_131175:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_131176:
	movq 0x0(%r11),%r10
	movq %r10,0xB8(%rbp)
	cmpq $0x1,%r13
	jne keep_2
L_131177:
	movl 0xAC(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_427899
L_131178:
	movq 0x0(%r15),%r14
	movq 0x0(%r10),%r15
L_131179:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x108(%rbp)
	addq $0x18,%r12
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x100(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_131180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_427899:
L_131181:
	movq %r15,0x218(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x208(%rbp),%r15
	movq %r15,0x220(%rbp)
	addq $0x218,%rbp
	leaq (L_131182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_427900:
L_131137:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_131138:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_131139:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_131140:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_427907
	cmpq $0xE4C,%r15
	je L_427901
	jmp keep_2
.p2align 0x4
L_427901:
L_131151:
	movq 0x0(%r13),%r15
L_131152:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_131153:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_131154:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_427906
L_131157:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_427904
	cmpq $0xE4C,%r14
	je L_427902
	movq %r13,%r14
L_131155:
	cmpq $0x1,%r14
	jne keep_2
L_131156:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427902:
L_131162:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427903
L_131163:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_427903:
L_131165:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427904:
L_131158:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427905
L_131159:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_131160:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_427905:
L_131161:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427906:
	movq %r13,%r14
	jmp L_131155
.p2align 0x4
L_427907:
L_131141:
	movq 0x0(%r13),%r15
L_131142:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_131143:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_131144:
	movq %r11,%r14
	andq $0x3,%r14
	jnz keep_2
L_131145:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_131146:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne keep_2
L_131147:
	movq %r14,0xD8(%rbp)
	movq %r15,0xE0(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2A0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (word_42+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1476
.p2align 0x4
L_427908:
L_131104:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_131105:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_131106:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_131107:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_427915
	cmpq $0xE4C,%r15
	je L_427909
	jmp keep_2
.p2align 0x4
L_427909:
L_131121:
	movq 0x0(%r13),%r15
L_131122:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_131123:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_131124:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_427914
L_131127:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_427912
	cmpq $0xE4C,%r14
	je L_427910
	movq %r13,%r14
L_131125:
	cmpq $0x1,%r14
	jne keep_2
L_131126:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427910:
L_131132:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427911
L_131133:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_427911:
L_131135:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427912:
L_131128:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427913
L_131129:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_131130:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_427913:
L_131131:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427914:
	movq %r13,%r14
	jmp L_131125
.p2align 0x4
L_427915:
L_131108:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne keep_2
L_131109:
	movq 0x1E0(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,0x0(%r13)
	jne keep_2
L_131111:
	movq 0x8(%r15),%r14
	cmpq $0x41,%r14
	je L_427917
L_131112:
	cmpq $0x81,%r14
	jne L_427916
L_131114:
	movq %r15,0xD8(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_36+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1477
.p2align 0x4
L_427916:
L_131113:
	movq (globalObjptr+0x1A50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_427917:
L_131120:
	movq %r15,0xD8(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_36+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1478
.p2align 0x4
L_427918:
L_131073:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_131074:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_131075:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_131076:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_427925
	cmpq $0xE4C,%r15
	je L_427919
	jmp keep_2
.p2align 0x4
L_427919:
L_131088:
	movq 0x0(%r13),%r15
L_131089:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_131090:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_131091:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_427924
L_131094:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_427922
	cmpq $0xE4C,%r14
	je L_427920
	movq %r13,%r14
L_131092:
	cmpq $0x1,%r14
	jne keep_2
L_131093:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427920:
L_131099:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427921
L_131100:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_427921:
L_131102:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427922:
L_131095:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427923
L_131096:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_131097:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_427923:
L_131098:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427924:
	movq %r13,%r14
	jmp L_131092
.p2align 0x4
L_427925:
L_131077:
	movq 0x0(%r13),%r15
	movq %r15,0xB8(%rbp)
L_131078:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_131079:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_131080:
	movq %r11,%r14
	andq $0x3,%r14
	jnz keep_2
L_131081:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_131082:
	movq 0x0(%r11),%r14
	movq %r14,0xD0(%rbp)
	cmpq $0x1,%r13
	jne keep_2
L_131083:
	movq 0x8(%r15),%r13
	movq %r13,0xE8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_131084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_427926:
L_131040:
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14),%r13
	movl 0x0(%r13),%r11d
	movq 0x8(%r13),%r10
	movq %r10,0xD0(%rbp)
L_131041:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_131042:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_131043:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_131044:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_427933
	cmpq $0xE4C,%r15
	je L_427927
	jmp keep_2
.p2align 0x4
L_427927:
L_131057:
	movq 0x0(%r13),%r15
L_131058:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_131059:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_131060:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_427932
L_131063:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_427930
	cmpq $0xE4C,%r14
	je L_427928
	movq %r13,%r14
L_131061:
	cmpq $0x1,%r14
	jne keep_2
L_131062:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427928:
L_131068:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427929
L_131069:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_427929:
L_131071:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427930:
L_131064:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427931
L_131065:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_131066:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_427931:
L_131067:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427932:
	movq %r13,%r14
	jmp L_131061
.p2align 0x4
L_427933:
L_131045:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne keep_2
L_131046:
	testl %r11d,%r11d
	jnz L_427934
L_131047:
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x278(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_131048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_427934:
L_131053:
	movq %r15,0xE0(%rbp)
	movq 0x270(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xE0,%rbp
	leaq (L_131054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_427935:
L_131011:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_131012:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_131013:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_131014:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_427942
	cmpq $0xE4C,%r15
	je L_427936
	jmp keep_2
.p2align 0x4
L_427936:
L_131025:
	movq 0x0(%r13),%r15
L_131026:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_131027:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_131028:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_427941
L_131031:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_427939
	cmpq $0xE4C,%r14
	je L_427937
	movq %r13,%r14
L_131029:
	cmpq $0x1,%r14
	jne keep_2
L_131030:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427937:
L_131036:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427938
L_131037:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_427938:
L_131039:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427939:
L_131032:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427940
L_131033:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_131034:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_427940:
L_131035:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427941:
	movq %r13,%r14
	jmp L_131029
.p2align 0x4
L_427942:
L_131015:
	movq 0x0(%r13),%r15
L_131016:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_131017:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_131018:
	movq %r11,%r14
	andq $0x3,%r14
	jnz keep_2
L_131019:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_131020:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne keep_2
L_131021:
	movq %r14,0xD8(%rbp)
	movq %r15,0xE0(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x298(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (word_40+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1437
.p2align 0x4
L_427943:
L_130983:
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%r13d
L_130984:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_130985:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
L_130986:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_130987:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_427950
	cmpq $0xE4C,%r15
	je L_427944
	jmp keep_2
.p2align 0x4
L_427944:
L_130995:
	movq 0x0(%r11),%r15
L_130996:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130997:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130998:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_427949
L_131001:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_427947
	cmpq $0xE4C,%r14
	je L_427945
	movq %r13,%r14
L_130999:
	cmpq $0x1,%r14
	jne keep_2
L_131000:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427945:
L_131006:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427946
L_131007:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_427946:
L_131009:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427947:
L_131002:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427948
L_131003:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_131004:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_427948:
L_131005:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427949:
	movq %r13,%r14
	jmp L_130999
.p2align 0x4
L_427950:
L_130988:
	movq 0x0(%r11),%r15
L_130989:
	movq %r14,%r11
	andq $0x3,%r11
	jnz keep_2
L_130990:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
L_130991:
	movq %r10,%r14
	andq $0x3,%r14
	jnz keep_2
L_130992:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_130993:
	movq 0x0(%r10),%r14
	cmpq $0x1,%r11
	jne keep_2
L_130994:
	movl %r13d,0xD8(%rbp)
	movq %r14,0xE0(%rbp)
	movq %r15,0xE8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x170(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xD8,%rbp
	leaq (bool_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1479
.p2align 0x4
L_427951:
L_130935:
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0xAC(%rbp)
L_130936:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_130937:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_130938:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_130939:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_427958
	cmpq $0xE4C,%r15
	je L_427952
	jmp keep_2
.p2align 0x4
L_427952:
L_130968:
	movq 0x0(%r13),%r15
L_130969:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130970:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130971:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_427957
L_130974:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_427955
	cmpq $0xE4C,%r14
	je L_427953
	movq %r13,%r14
L_130972:
	cmpq $0x1,%r14
	jne keep_2
L_130973:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427953:
L_130979:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427954
L_130980:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_427954:
L_130982:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427955:
L_130975:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427956
L_130976:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_130977:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_427956:
L_130978:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427957:
	movq %r13,%r14
	jmp L_130972
.p2align 0x4
L_427958:
L_130940:
	movq 0x0(%r13),%r15
	movq %r15,0xB8(%rbp)
L_130941:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130942:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130943:
	movq %r11,%r14
	andq $0x3,%r14
	jnz keep_2
L_130944:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_130945:
	movq 0x0(%r11),%r14
	movq %r14,0xD0(%rbp)
	cmpq $0x1,%r13
	jne keep_2
L_130946:
	movq 0x290(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0xD8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xE0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xE8(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xF0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x100(%rbp)
	movq %r13,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_130947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_427959:
L_130902:
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0xAC(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
L_130903:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_130904:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_130905:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_130906:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_427966
	cmpq $0xE4C,%r15
	je L_427960
	jmp keep_2
.p2align 0x4
L_427960:
L_130920:
	movq 0x0(%r13),%r15
L_130921:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130922:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130923:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_427965
L_130926:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_427963
	cmpq $0xE4C,%r14
	je L_427961
	movq %r13,%r14
L_130924:
	cmpq $0x1,%r14
	jne keep_2
L_130925:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427961:
L_130931:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427962
L_130932:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_427962:
L_130934:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427963:
L_130927:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427964
L_130928:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_130929:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_427964:
L_130930:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427965:
	movq %r13,%r14
	jmp L_130924
.p2align 0x4
L_427966:
L_130907:
	movq 0x0(%r13),%r15
L_130908:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130909:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130910:
	movq %r11,%r14
	andq $0x3,%r14
	jnz keep_2
L_130911:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_130912:
	movq 0x0(%r11),%r10
	movq %r10,0xB8(%rbp)
	cmpq $0x1,%r13
	jne keep_2
L_130913:
	movl 0xAC(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_427967
L_130914:
	movq 0x0(%r15),%r14
	movq 0x0(%r10),%r15
L_130915:
	movq %r15,0x108(%rbp)
	movq %r14,0x110(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x138(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x108,%rbp
	leaq (L_130916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_427967:
L_130917:
	movq %r15,0x218(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x208(%rbp),%r15
	movq %r15,0x220(%rbp)
	addq $0x218,%rbp
	leaq (L_130918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_427968:
L_130873:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_130874:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_130875:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_130876:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_427975
	cmpq $0xE4C,%r15
	je L_427969
	jmp keep_2
.p2align 0x4
L_427969:
L_130887:
	movq 0x0(%r13),%r15
L_130888:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130889:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130890:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_427974
L_130893:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_427972
	cmpq $0xE4C,%r14
	je L_427970
	movq %r13,%r14
L_130891:
	cmpq $0x1,%r14
	jne keep_2
L_130892:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427970:
L_130898:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427971
L_130899:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_427971:
L_130901:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427972:
L_130894:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427973
L_130895:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_130896:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_427973:
L_130897:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427974:
	movq %r13,%r14
	jmp L_130891
.p2align 0x4
L_427975:
L_130877:
	movq 0x0(%r13),%r15
	movq %r15,0xB8(%rbp)
	cmpq $0x1,%r14
	jne keep_2
L_130878:
	leaq L_130225(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %rbp,%r14
	addq $0x30,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x108(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_130879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_427976:
L_130848:
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
L_130849:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_130850:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_130851:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_130852:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_427983
	cmpq $0xE4C,%r15
	je L_427977
	jmp keep_2
.p2align 0x4
L_427977:
L_130857:
	movq 0x0(%r13),%r15
L_130858:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130859:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130860:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_427982
L_130863:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_427980
	cmpq $0xE4C,%r14
	je L_427978
	movq %r13,%r14
L_130861:
	cmpq $0x1,%r14
	jne keep_2
L_130862:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427978:
L_130868:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427979
L_130869:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_427979:
L_130871:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427980:
L_130864:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427981
L_130865:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_130866:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_427981:
L_130867:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427982:
	movq %r13,%r14
	jmp L_130861
.p2align 0x4
L_427983:
L_130853:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne keep_2
L_130854:
	movq %r15,0x108(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x208(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_130855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_427984:
L_130812:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_130813:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_130814:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_130815:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_427991
	cmpq $0xE4C,%r15
	je L_427985
	jmp keep_2
.p2align 0x4
L_427985:
L_130833:
	movq 0x0(%r13),%r15
L_130834:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130835:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130836:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_427990
L_130839:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_427988
	cmpq $0xE4C,%r14
	je L_427986
	movq %r13,%r14
L_130837:
	cmpq $0x1,%r14
	jne keep_2
L_130838:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427986:
L_130844:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427987
L_130845:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_427987:
L_130847:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427988:
L_130840:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427989
L_130841:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_130842:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_427989:
L_130843:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427990:
	movq %r13,%r14
	jmp L_130837
.p2align 0x4
L_427991:
L_130816:
	movq 0x0(%r13),%r15
	movq %r15,0xB8(%rbp)
	cmpq $0x1,%r14
	jne keep_2
L_130817:
	movq 0x288(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq %r14,%r15
	andq $0x1,%r15
	jnz L_427994
L_130826:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo keep_2
L_130827:
	movq 0x8(%r13),%rsi
	movq %rsi,%r14
	movq 0x0(%r13),%r11
	imulq %r15,%r14
	addq $0x7,%r11
	addq %r11,%rsi
	addq %rsi,%r14
	movq %r14,%rsi
	movq %r14,0xE0(%rbp)
	addq $0x0,%rsi
	jc L_427993
L_130828:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq %rsi,%r15
	jnb L_130829
L_130831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_130832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130832
.p2align 0x4
.long 0x1C6A
L_130832:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_130829:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xE0(%rbp),%rsi
	movq 0xD8(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_130830:
	movq %rax,0xD8(%rbp)
	movq (gcState+0x0)(%rip),%r12
L_130819:
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0xD0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xE8(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xF0(%rbp)
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_130820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_427993:
L_130096:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_427994:
L_130818:
	notq %r14
	orq $0x1,%r14
	movq %r14,0xD8(%rbp)
	jmp L_130819
.p2align 0x4
L_427995:
L_130782:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_130783:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_130784:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_130785:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_428002
	cmpq $0xE4C,%r15
	je L_427996
	jmp keep_2
.p2align 0x4
L_427996:
L_130796:
	movq 0x0(%r13),%r15
L_130797:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130798:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130799:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_428001
L_130802:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_427999
	cmpq $0xE4C,%r14
	je L_427997
	movq %r13,%r14
L_130800:
	cmpq $0x1,%r14
	jne keep_2
L_130801:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427997:
L_130807:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_427998
L_130808:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_427998:
L_130810:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_427999:
L_130803:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428000
L_130804:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_130805:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428000:
L_130806:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428001:
	movq %r13,%r14
	jmp L_130800
.p2align 0x4
L_428002:
L_130786:
	movq 0x0(%r13),%r15
L_130787:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130788:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130789:
	movq %r11,%r14
	andq $0x3,%r14
	jnz keep_2
L_130790:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_130791:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne keep_2
L_130792:
	movq %r14,0xD8(%rbp)
	movq %r15,0xE0(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x230(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (word_39+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1438
.p2align 0x4
L_428003:
L_130732:
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0xAC(%rbp)
L_130733:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_130734:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_130735:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_130736:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_428010
	cmpq $0xE4C,%r15
	je L_428004
	jmp keep_2
.p2align 0x4
L_428004:
L_130766:
	movq 0x0(%r13),%r15
L_130767:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130768:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130769:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_428009
L_130772:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_428007
	cmpq $0xE4C,%r14
	je L_428005
	movq %r13,%r14
L_130770:
	cmpq $0x1,%r14
	jne keep_2
L_130771:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428005:
L_130777:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428006
L_130778:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_428006:
L_130780:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428007:
L_130773:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428008
L_130774:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_130775:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428008:
L_130776:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428009:
	movq %r13,%r14
	jmp L_130770
.p2align 0x4
L_428010:
L_130737:
	movq 0x0(%r13),%r15
	movq %r15,0xB8(%rbp)
L_130738:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130739:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130740:
	movq %r11,%r14
	andq $0x3,%r14
	jnz keep_2
L_130741:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_130742:
	movq 0x0(%r11),%r14
	movq %r14,0xD0(%rbp)
	cmpq $0x1,%r13
	jne keep_2
L_130743:
	movq 0x0(%r14),%r13
	movq %r13,0xD8(%rbp)
	cmpq $0x1,%r13
	je keep_2
L_130744:
	movq 0x280(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0xE0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xE8(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xF0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x108(%rbp)
	movq %r13,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_130745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_428011:
L_130683:
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0xAC(%rbp)
L_130684:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_130685:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_130686:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_130687:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_428018
	cmpq $0xE4C,%r15
	je L_428012
	jmp keep_2
.p2align 0x4
L_428012:
L_130717:
	movq 0x0(%r13),%r15
L_130718:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130719:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130720:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_428017
L_130723:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_428015
	cmpq $0xE4C,%r14
	je L_428013
	movq %r13,%r14
L_130721:
	cmpq $0x1,%r14
	jne keep_2
L_130722:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428013:
L_130728:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428014
L_130729:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_428014:
L_130731:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428015:
L_130724:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428016
L_130725:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_130726:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428016:
L_130727:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428017:
	movq %r13,%r14
	jmp L_130721
.p2align 0x4
L_428018:
L_130688:
	movq 0x0(%r13),%r15
	movq %r15,0xB8(%rbp)
L_130689:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130690:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130691:
	movq %r11,%r14
	andq $0x3,%r14
	jnz keep_2
L_130692:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_130693:
	movq 0x0(%r11),%r14
	movq %r14,0xD0(%rbp)
	cmpq $0x1,%r13
	jne keep_2
L_130694:
	movq 0x0(%r14),%r13
	movq %r13,0xD8(%rbp)
	cmpq $0x1,%r13
	je keep_2
L_130695:
	movq 0x238(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0xE0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xE8(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xF0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xF8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x108(%rbp)
	movq %r13,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_130696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_428019:
L_130549:
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movb 0x4(%r14),%r11b
	movb %r11b,0xAC(%rbp)
L_130550:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_130551:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
L_130552:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_130553:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_428026
	cmpq $0xE4C,%r15
	je L_428020
	jmp keep_2
.p2align 0x4
L_428020:
L_130668:
	movq 0x0(%r11),%r15
L_130669:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130670:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130671:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_428025
L_130674:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_428023
	cmpq $0xE4C,%r14
	je L_428021
	movq %r13,%r14
L_130672:
	cmpq $0x1,%r14
	jne keep_2
L_130673:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428021:
L_130679:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428022
L_130680:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_428022:
L_130682:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428023:
L_130675:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428024
L_130676:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_130677:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428024:
L_130678:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428025:
	movq %r13,%r14
	jmp L_130672
.p2align 0x4
L_428026:
L_130554:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r14
	jne keep_2
L_130555:
	testl %r13d,%r13d
	jnz L_428036
L_130556:
	movq 0x0(%r15),%r14
	movb 0xAC(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_428031
L_130557:
	movq %r14,0xB8(%rbp)
L_130558:
	movq 0x1E0(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,0x0(%r14)
	jne keep_2
L_130560:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x238,%rbp
	leaq (L_130561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130561
.p2align 0x4
.long 0x1C53
L_130561:
	addq $0xFFFFFFFFFFFFFDC8,%rbp
	testl %eax,%eax
	jz L_428030
L_130562:
	cmpl $0x1,%eax
	je L_428029
L_130563:
	cmpl $0x2,%eax
	je L_428028
L_130564:
	cmpl $0x3,%eax
	jne L_428027
L_130567:
	movb $0x0,0xAC(%rbp)
L_130568:
	leaq L_130588(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2,0x238(%rbp)
	addq $0x238,%rbp
	leaq (L_130569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_428027:
L_130566:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x778)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428028:
L_130607:
	movb $0x1,0xAC(%rbp)
	jmp L_130568
.p2align 0x4
L_428029:
L_130608:
	movb $0x2,0xAC(%rbp)
	jmp L_130568
.p2align 0x4
L_428030:
L_130609:
	movb $0x3,0xAC(%rbp)
	jmp L_130568
.p2align 0x4
L_428031:
L_130610:
	movq %r14,0xB8(%rbp)
L_130611:
	movq 0x1E0(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,0x0(%r14)
	jne keep_2
L_130613:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_130614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130614
.p2align 0x4
.long 0x1C58
L_130614:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	testl %eax,%eax
	jz L_428035
L_130615:
	cmpl $0x1,%eax
	je L_428034
L_130616:
	cmpl $0x2,%eax
	je L_428033
L_130617:
	cmpl $0x3,%eax
	jne L_130566
L_130619:
	movb $0x0,0xAC(%rbp)
L_130620:
	leaq L_130640(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2,0x228(%rbp)
	addq $0x228,%rbp
	leaq (L_130621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_428033:
L_130658:
	movb $0x1,0xAC(%rbp)
	jmp L_130620
.p2align 0x4
L_428034:
L_130659:
	movb $0x2,0xAC(%rbp)
	jmp L_130620
.p2align 0x4
L_428035:
L_130660:
	movb $0x3,0xAC(%rbp)
	jmp L_130620
.p2align 0x4
L_428036:
L_130661:
	movq %r15,0x238(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x208(%rbp),%r15
	movq %r15,0x240(%rbp)
	addq $0x238,%rbp
	leaq (L_130662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_428037:
L_130510:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_130511:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_130512:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_130513:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_428044
	cmpq $0xE4C,%r15
	je L_428038
	jmp keep_2
.p2align 0x4
L_428038:
L_130534:
	movq 0x0(%r13),%r15
L_130535:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130536:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130537:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_428043
L_130540:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_428041
	cmpq $0xE4C,%r14
	je L_428039
	movq %r13,%r14
L_130538:
	cmpq $0x1,%r14
	jne keep_2
L_130539:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428039:
L_130545:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428040
L_130546:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_428040:
L_130548:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428041:
L_130541:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428042
L_130542:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_130543:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428042:
L_130544:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428043:
	movq %r13,%r14
	jmp L_130538
.p2align 0x4
L_428044:
L_130514:
	movq 0x0(%r13),%r15
	movq %r15,0xB8(%rbp)
L_130515:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130516:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130517:
	movq %r11,%r14
	andq $0x3,%r14
	jnz keep_2
L_130518:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_130519:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne keep_2
L_130520:
	movq 0x8(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x260(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x258(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x268(%rbp)
	addq $0x258,%rbp
	leaq (L_130521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
L_428045:
L_130470:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_130471:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_130472:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_130473:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_428052
	cmpq $0xE4C,%r15
	je L_428046
	jmp keep_2
.p2align 0x4
L_428046:
L_130494:
	movq 0x0(%r13),%r15
L_130495:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130496:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130497:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_428051
L_130500:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_428049
	cmpq $0xE4C,%r14
	je L_428047
	movq %r13,%r14
L_130498:
	cmpq $0x1,%r14
	jne keep_2
L_130499:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428047:
L_130505:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428048
L_130506:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_428048:
L_130508:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428049:
L_130501:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428050
L_130502:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_130503:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428050:
L_130504:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428051:
	movq %r13,%r14
	jmp L_130498
.p2align 0x4
L_428052:
L_130474:
	movq 0x0(%r13),%r15
	movq %r15,0xB8(%rbp)
L_130475:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130476:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130477:
	movq %r11,%r14
	andq $0x3,%r14
	jnz keep_2
L_130478:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_130479:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne keep_2
L_130480:
	movq 0x8(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x260(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x258(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x268(%rbp)
	addq $0x258,%rbp
	leaq (L_130481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
L_428053:
L_130439:
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%r13d
L_130440:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_130441:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
L_130442:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_130443:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_428060
	cmpq $0xE4C,%r15
	je L_428054
	jmp keep_2
.p2align 0x4
L_428054:
L_130454:
	movq 0x0(%r11),%r15
L_130455:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130456:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130457:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_428059
L_130460:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_428057
	cmpq $0xE4C,%r14
	je L_428055
	movq %r13,%r14
L_130458:
	cmpq $0x1,%r14
	jne keep_2
L_130459:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428055:
L_130465:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428056
L_130466:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_428056:
L_130468:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428057:
L_130461:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428058
L_130462:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_130463:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428058:
L_130464:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428059:
	movq %r13,%r14
	jmp L_130458
.p2align 0x4
L_428060:
L_130444:
	movq 0x0(%r11),%r15
L_130445:
	movq %r14,%r11
	andq $0x3,%r11
	jnz keep_2
L_130446:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
L_130447:
	movq %r10,%r14
	andq $0x3,%r14
	jnz keep_2
L_130448:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_130449:
	movq 0x0(%r10),%r14
	cmpq $0x1,%r11
	jne keep_2
L_130450:
	movl %r13d,0xD8(%rbp)
	movq %r14,0xE0(%rbp)
	movq %r15,0xE8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x260(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xD8,%rbp
	leaq (word_38+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rshift_0
.p2align 0x4
L_428061:
L_130400:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_130401:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_130402:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_130403:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_428068
	cmpq $0xE4C,%r15
	je L_428062
	jmp keep_2
.p2align 0x4
L_428062:
L_130424:
	movq 0x0(%r13),%r15
L_130425:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130426:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130427:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_428067
L_130430:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_428065
	cmpq $0xE4C,%r14
	je L_428063
	movq %r13,%r14
L_130428:
	cmpq $0x1,%r14
	jne keep_2
L_130429:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428063:
L_130435:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428064
L_130436:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_428064:
L_130438:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428065:
L_130431:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428066
L_130432:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_130433:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428066:
L_130434:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428067:
	movq %r13,%r14
	jmp L_130428
.p2align 0x4
L_428068:
L_130404:
	movq 0x0(%r13),%r15
	movq %r15,0xB8(%rbp)
L_130405:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130406:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130407:
	movq %r11,%r14
	andq $0x3,%r14
	jnz keep_2
L_130408:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_130409:
	movq 0x0(%r11),%r14
	movq %r14,0xD0(%rbp)
	cmpq $0x1,%r13
	jne keep_2
L_130410:
	movq 0x250(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xD8(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xE0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xE8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xF8(%rbp)
	movq %r13,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_130411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_428069:
L_130354:
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0xAC(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
L_130355:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_130356:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_130357:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_130358:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_428076
	cmpq $0xE4C,%r15
	je L_428070
	jmp keep_2
.p2align 0x4
L_428070:
L_130384:
	movq 0x0(%r13),%r15
L_130385:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130386:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130387:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_428075
L_130390:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_428073
	cmpq $0xE4C,%r14
	je L_428071
	movq %r13,%r14
L_130388:
	cmpq $0x1,%r14
	jne keep_2
L_130389:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428071:
L_130395:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428072
L_130396:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_428072:
L_130398:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428073:
L_130391:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428074
L_130392:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_130393:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428074:
L_130394:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428075:
	movq %r13,%r14
	jmp L_130388
.p2align 0x4
L_428076:
L_130359:
	movq 0x0(%r13),%r15
L_130360:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130361:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130362:
	movq %r11,%r14
	andq $0x3,%r14
	jnz keep_2
L_130363:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_130364:
	movq 0x0(%r11),%r10
	movq %r10,0xB8(%rbp)
	cmpq $0x1,%r13
	jne keep_2
L_130365:
	movl 0xAC(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_428077
L_130366:
	movq 0x0(%r15),%r14
	movq 0x0(%r10),%r15
L_130367:
	movq %r15,0x108(%rbp)
	movq %r14,0x110(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x128(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x108,%rbp
	leaq (L_130368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_428077:
L_130381:
	movq %r15,0x218(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x208(%rbp),%r15
	movq %r15,0x220(%rbp)
	addq $0x218,%rbp
	leaq (L_130382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_428078:
L_130325:
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_130326:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_130327:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_130328:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_428085
	cmpq $0xE4C,%r15
	je L_428079
	jmp keep_2
.p2align 0x4
L_428079:
L_130339:
	movq 0x0(%r13),%r15
L_130340:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130341:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130342:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_428084
L_130345:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_428082
	cmpq $0xE4C,%r14
	je L_428080
	movq %r13,%r14
L_130343:
	cmpq $0x1,%r14
	jne keep_2
L_130344:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428080:
L_130350:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428081
L_130351:
	cmpq $0x1,0x8(%r13)
	jne keep_2
	jmp x_480
.p2align 0x4
L_428081:
L_130353:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428082:
L_130346:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428083
L_130347:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_130348:
	movq %r15,0xD0(%rbp)
	movq %r14,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428083:
L_130349:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428084:
	movq %r13,%r14
	jmp L_130343
.p2align 0x4
L_428085:
L_130329:
	movq 0x0(%r13),%r15
L_130330:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_130331:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_130332:
	movq %r11,%r14
	andq $0x3,%r14
	jnz keep_2
L_130333:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_130334:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne keep_2
L_130335:
	movq %r14,0xD8(%rbp)
	movq %r15,0xE0(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x268(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (word_37+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1480
.p2align 0x4
L_428087:
L_132270:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_132271:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_132272:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_132273:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428094
	cmpq $0xE4C,%r15
	je L_428088
	jmp keep_2
.p2align 0x4
L_428088:
L_132286:
	movq 0x0(%r11),%r15
L_132287:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_132288:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_132289:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428093
L_132292:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428091
	cmpq $0xE4C,%r13
	je L_428089
	xchgq %r11,%r14
L_132290:
	cmpq $0x1,%r14
	jne keep_2
L_132291:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428089:
L_132297:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428090
L_132298:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428090:
L_132300:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428091:
L_132293:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428092
L_132294:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_132295:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428092:
L_132296:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428093:
	xchgq %r11,%r14
	jmp L_132290
.p2align 0x4
L_428094:
L_132274:
	movq 0x0(%r11),%r15
L_132275:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_132276:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_132277:
	movq %r10,%r13
	andq $0x3,%r13
	jnz keep_2
L_132278:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne keep_2
L_132279:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne keep_2
L_132280:
	movq %r13,0xD8(%rbp)
	movq %r15,0xE0(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2D8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_53+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_428095:
L_132234:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_132235:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_132236:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_132237:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428102
	cmpq $0xE4C,%r15
	je L_428096
	jmp keep_2
.p2align 0x4
L_428096:
L_132254:
	movq 0x0(%r11),%r15
L_132255:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_132256:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_132257:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428101
L_132260:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428099
	cmpq $0xE4C,%r13
	je L_428097
	xchgq %r11,%r14
L_132258:
	cmpq $0x1,%r14
	jne keep_2
L_132259:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428097:
L_132265:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428098
L_132266:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428098:
L_132268:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428099:
L_132261:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428100
L_132262:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_132263:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428100:
L_132264:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428101:
	xchgq %r11,%r14
	jmp L_132258
.p2align 0x4
L_428102:
L_132238:
	movq 0x0(%r11),%r15
L_132239:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_132240:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_132241:
	movq %r10,%r13
	andq $0x3,%r13
	jnz keep_2
L_132242:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne keep_2
L_132243:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne keep_2
L_132244:
	movq 0x2C0(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne keep_2
L_132246:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_428105
L_132247:
	movsd 0x0(%r15),%xmm15
L_132248:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_428104
L_132250:
	movsd 0x0(%r13),%xmm14
	ucomisd %xmm15,%xmm14
	setp %al
	movzbl %al,%eax
	sete %cl
	movzbl %cl,%ecx
	orl %eax,%ecx
bool_1:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x0(%r14),%r15
	testl %ecx,%ecx
	jnz L_428103
L_129537:
	movq $0x1,0xC8(%rbp)
L_129538:
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_129539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428103:
L_129547:
	movq $0x3,0xC8(%rbp)
	jmp L_129538
.p2align 0x4
L_428104:
L_132249:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428105:
L_132251:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_428106
L_132253:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm14,%xmm15
	setp %al
	movzbl %al,%eax
	sete %cl
	movzbl %cl,%ecx
	orl %eax,%ecx
	jmp bool_1
.p2align 0x4
L_428106:
L_132252:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428107:
L_132208:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_132209:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_132210:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_132211:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428114
	cmpq $0xE4C,%r15
	je L_428108
	jmp keep_2
.p2align 0x4
L_428108:
L_132218:
	movq 0x0(%r11),%r15
L_132219:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_132220:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_132221:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428113
L_132224:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428111
	cmpq $0xE4C,%r13
	je L_428109
	xchgq %r11,%r14
L_132222:
	cmpq $0x1,%r14
	jne keep_2
L_132223:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428109:
L_132229:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428110
L_132230:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428110:
L_132232:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428111:
L_132225:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428112
L_132226:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_132227:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428112:
L_132228:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428113:
	xchgq %r11,%r14
	jmp L_132222
.p2align 0x4
L_428114:
L_132212:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne keep_2
L_132213:
	movq 0x318(%rbp),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,0x0(%r11)
	jne keep_2
L_132215:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_428128
L_132216:
	movq $0x8000000000000000,%r13
	movd %r13,%xmm15
	movsd 0x0(%r15),%xmm14
	xorpd %xmm14,%xmm15
	movq $0x1C8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movsd %xmm15,%xmm14
	movsd %xmm14,0x0(%r15)
	addq $0x10,%r12
real_22:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_129485:
	movq $0x211B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xC0(%rbp),%r13
	cmpq $0x1,%r13
	je L_428127
L_129486:
	movq %r14,0xB8(%rbp)
	movq 0x0(%r13),%r15
L_129452:
	movq 0x58(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0xC0(%rbp)
	movq 0x0(%r11),%r14
	movq 0x10(%r15),%r11
	movq %r11,0xC8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_128785
L_129453:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_428125
L_129454:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_129456:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_428124
L_129469:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD6A,%r11
	jne L_428123
L_129470:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_428120
L_129457:
	incl %ecx
	movl %ecx,0xAC(%rbp)
	jo L_128791
L_129458:
	cmpq $0x1,%r15
	je L_428115
L_129459:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_129456
.p2align 0x4
L_428115:
L_129460:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129461
L_129467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_129468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129468
.p2align 0x4
.long 0x1BF7
L_129468:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_129461:
	movl 0xAC(%rbp),%ecx
L_129462:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_128797
L_129463:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_129465
L_129466:
	movl %ecx,0x0(%r15)
L_129465:
	movq $0x1AD5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movl 0xA8(%rbp),%ecx
	movq $0x1,%r15
	jmp L_129394
.p2align 0x4
L_428120:
L_129472:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_128797
L_129473:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_128823
L_129475:
	movl %ecx,0x0(%r15)
	jmp L_128823
.p2align 0x4
L_428123:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_129457
.p2align 0x4
L_428124:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_129457
.p2align 0x4
L_428125:
L_129476:
	xorl %ecx,%ecx
	jmp L_129462
.p2align 0x4
L_428127:
L_129478:
	movl 0xA8(%rbp),%ecx
	movq $0x1,%r15
	jmp L_129394
.p2align 0x4
L_428128:
L_132217:
	shrq $0x1,%r15
	movl %r15d,%r13d
	movd %r13d,%xmm15
	movl $0x80000000,%r13d
	movd %r13d,%xmm14
	xorps %xmm15,%xmm14
	movd %xmm14,%r13d
	movl %r13d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp real_22
.p2align 0x4
L_428129:
L_132171:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_132172:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_132173:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_132174:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428136
	cmpq $0xE4C,%r15
	je L_428130
	jmp keep_2
.p2align 0x4
L_428130:
L_132192:
	movq 0x0(%r11),%r15
L_132193:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_132194:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_132195:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428135
L_132198:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428133
	cmpq $0xE4C,%r13
	je L_428131
	xchgq %r11,%r14
L_132196:
	cmpq $0x1,%r14
	jne keep_2
L_132197:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428131:
L_132203:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428132
L_132204:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428132:
L_132206:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428133:
L_132199:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428134
L_132200:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_132201:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428134:
L_132202:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428135:
	xchgq %r11,%r14
	jmp L_132196
.p2align 0x4
L_428136:
L_132175:
	movq 0x0(%r11),%r15
L_132176:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_132177:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_132178:
	movq %r10,%r13
	andq $0x3,%r13
	jnz keep_2
L_132179:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne keep_2
L_132180:
	movq 0x0(%r10),%r13
L_132181:
	movq %r11,%r10
	andq $0x3,%r10
	jnz keep_2
L_132182:
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
L_132183:
	movq %r9,%r11
	andq $0x3,%r11
	jnz keep_2
L_132184:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r11
	shrq $0x1,%r11
	cmpq $0xE4B,%r11
	jne keep_2
L_132185:
	movq 0x0(%r9),%r11
	cmpq $0x1,%r10
	jne keep_2
L_132186:
	movq %r11,0xD8(%rbp)
	movq %r13,0xE0(%rbp)
	movq %r15,0xE8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2D0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1482
.p2align 0x4
L_428137:
L_132134:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_132135:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_132136:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_132137:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428144
	cmpq $0xE4C,%r15
	je L_428138
	jmp keep_2
.p2align 0x4
L_428138:
L_132155:
	movq 0x0(%r11),%r15
L_132156:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_132157:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_132158:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428143
L_132161:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428141
	cmpq $0xE4C,%r13
	je L_428139
	xchgq %r11,%r14
L_132159:
	cmpq $0x1,%r14
	jne keep_2
L_132160:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428139:
L_132166:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428140
L_132167:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428140:
L_132169:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428141:
L_132162:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428142
L_132163:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_132164:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428142:
L_132165:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428143:
	xchgq %r11,%r14
	jmp L_132159
.p2align 0x4
L_428144:
L_132138:
	movq 0x0(%r11),%r15
L_132139:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_132140:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_132141:
	movq %r10,%r13
	andq $0x3,%r13
	jnz keep_2
L_132142:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne keep_2
L_132143:
	movq 0x0(%r10),%r13
L_132144:
	movq %r11,%r10
	andq $0x3,%r10
	jnz keep_2
L_132145:
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
L_132146:
	movq %r9,%r11
	andq $0x3,%r11
	jnz keep_2
L_132147:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r11
	shrq $0x1,%r11
	cmpq $0xE4B,%r11
	jne keep_2
L_132148:
	movq 0x0(%r9),%r11
	cmpq $0x1,%r10
	jne keep_2
L_132149:
	movq %r11,0xD8(%rbp)
	movq %r13,0xE0(%rbp)
	movq %r15,0xE8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1C8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_51+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1483
.p2align 0x4
L_428145:
L_132102:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_132103:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_132104:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_132105:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428152
	cmpq $0xE4C,%r15
	je L_428146
	jmp keep_2
.p2align 0x4
L_428146:
L_132118:
	movq 0x0(%r11),%r15
L_132119:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_132120:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_132121:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428151
L_132124:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428149
	cmpq $0xE4C,%r13
	je L_428147
	xchgq %r11,%r14
L_132122:
	cmpq $0x1,%r14
	jne keep_2
L_132123:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428147:
L_132129:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428148
L_132130:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428148:
L_132132:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428149:
L_132125:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428150
L_132126:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_132127:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428150:
L_132128:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428151:
	xchgq %r11,%r14
	jmp L_132122
.p2align 0x4
L_428152:
L_132106:
	movq 0x0(%r11),%r15
L_132107:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_132108:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_132109:
	movq %r10,%r13
	andq $0x3,%r13
	jnz keep_2
L_132110:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne keep_2
L_132111:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne keep_2
L_132112:
	movq %r13,0xD8(%rbp)
	movq %r15,0xE0(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1C0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_50+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_428153:
L_132066:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_132067:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_132068:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_132069:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428160
	cmpq $0xE4C,%r15
	je L_428154
	jmp keep_2
.p2align 0x4
L_428154:
L_132086:
	movq 0x0(%r11),%r15
L_132087:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_132088:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_132089:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428159
L_132092:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428157
	cmpq $0xE4C,%r13
	je L_428155
	xchgq %r11,%r14
L_132090:
	cmpq $0x1,%r14
	jne keep_2
L_132091:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428155:
L_132097:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428156
L_132098:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428156:
L_132100:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428157:
L_132093:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428158
L_132094:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_132095:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428158:
L_132096:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428159:
	xchgq %r11,%r14
	jmp L_132090
.p2align 0x4
L_428160:
L_132070:
	movq 0x0(%r11),%r15
L_132071:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_132072:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_132073:
	movq %r10,%r13
	andq $0x3,%r13
	jnz keep_2
L_132074:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne keep_2
L_132075:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne keep_2
L_132076:
	movq 0x1D8(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne keep_2
L_132078:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_428162
L_132079:
	movsd 0x0(%r15),%xmm15
L_132080:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_428161
L_132082:
	ucomisd 0x0(%r13),%xmm15
	setnp %al
	movzbl %al,%eax
	setc %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp bool_1
.p2align 0x4
L_428161:
L_132081:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428162:
L_132083:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_428163
L_132085:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setc %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp bool_1
.p2align 0x4
L_428163:
L_132084:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428164:
L_132030:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_132031:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_132032:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_132033:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428171
	cmpq $0xE4C,%r15
	je L_428165
	jmp keep_2
.p2align 0x4
L_428165:
L_132050:
	movq 0x0(%r11),%r15
L_132051:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_132052:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_132053:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428170
L_132056:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428168
	cmpq $0xE4C,%r13
	je L_428166
	xchgq %r11,%r14
L_132054:
	cmpq $0x1,%r14
	jne keep_2
L_132055:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428166:
L_132061:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428167
L_132062:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428167:
L_132064:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428168:
L_132057:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428169
L_132058:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_132059:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428169:
L_132060:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428170:
	xchgq %r11,%r14
	jmp L_132054
.p2align 0x4
L_428171:
L_132034:
	movq 0x0(%r11),%r15
L_132035:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_132036:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_132037:
	movq %r10,%r13
	andq $0x3,%r13
	jnz keep_2
L_132038:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne keep_2
L_132039:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne keep_2
L_132040:
	movq 0x2C8(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne keep_2
L_132042:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_428173
L_132043:
	movsd 0x0(%r15),%xmm15
L_132044:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_428172
L_132046:
	ucomisd 0x0(%r13),%xmm15
	setnp %al
	movzbl %al,%eax
	setna %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp bool_1
.p2align 0x4
L_428172:
L_132045:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428173:
L_132047:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_428174
L_132049:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setna %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp bool_1
.p2align 0x4
L_428174:
L_132048:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428175:
L_131994:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131995:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131996:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131997:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428182
	cmpq $0xE4C,%r15
	je L_428176
	jmp keep_2
.p2align 0x4
L_428176:
L_132014:
	movq 0x0(%r11),%r15
L_132015:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_132016:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_132017:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428181
L_132020:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428179
	cmpq $0xE4C,%r13
	je L_428177
	xchgq %r11,%r14
L_132018:
	cmpq $0x1,%r14
	jne keep_2
L_132019:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428177:
L_132025:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428178
L_132026:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428178:
L_132028:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428179:
L_132021:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428180
L_132022:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_132023:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428180:
L_132024:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428181:
	xchgq %r11,%r14
	jmp L_132018
.p2align 0x4
L_428182:
L_131998:
	movq 0x0(%r11),%r15
L_131999:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_132000:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_132001:
	movq %r10,%r13
	andq $0x3,%r13
	jnz keep_2
L_132002:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne keep_2
L_132003:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne keep_2
L_132004:
	movq 0x1D0(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne keep_2
L_132006:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_428184
L_132007:
	movsd 0x0(%r15),%xmm15
L_132008:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_428183
L_132010:
	ucomisd 0x0(%r13),%xmm15
	setnp %al
	movzbl %al,%eax
	setz %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp bool_1
.p2align 0x4
L_428183:
L_132009:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428184:
L_132011:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_428185
L_132013:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setz %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp bool_1
.p2align 0x4
L_428185:
L_132012:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428186:
L_131962:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131963:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131964:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131965:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428193
	cmpq $0xE4C,%r15
	je L_428187
	jmp keep_2
.p2align 0x4
L_428187:
L_131978:
	movq 0x0(%r11),%r15
L_131979:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131980:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131981:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428192
L_131984:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428190
	cmpq $0xE4C,%r13
	je L_428188
	xchgq %r11,%r14
L_131982:
	cmpq $0x1,%r14
	jne keep_2
L_131983:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428188:
L_131989:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428189
L_131990:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428189:
L_131992:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428190:
L_131985:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428191
L_131986:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131987:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428191:
L_131988:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428192:
	xchgq %r11,%r14
	jmp L_131982
.p2align 0x4
L_428193:
L_131966:
	movq 0x0(%r11),%r15
L_131967:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131968:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131969:
	movq %r10,%r13
	andq $0x3,%r13
	jnz keep_2
L_131970:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne keep_2
L_131971:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne keep_2
L_131972:
	movq %r13,0xD8(%rbp)
	movq %r15,0xE0(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2E0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_49+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_428194:
L_131930:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131931:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131932:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131933:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428201
	cmpq $0xE4C,%r15
	je L_428195
	jmp keep_2
.p2align 0x4
L_428195:
L_131946:
	movq 0x0(%r11),%r15
L_131947:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131948:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131949:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428200
L_131952:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428198
	cmpq $0xE4C,%r13
	je L_428196
	xchgq %r11,%r14
L_131950:
	cmpq $0x1,%r14
	jne keep_2
L_131951:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428196:
L_131957:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428197
L_131958:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428197:
L_131960:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428198:
L_131953:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428199
L_131954:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131955:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428199:
L_131956:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428200:
	xchgq %r11,%r14
	jmp L_131950
.p2align 0x4
L_428201:
L_131934:
	movq 0x0(%r11),%r15
L_131935:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131936:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131937:
	movq %r10,%r13
	andq $0x3,%r13
	jnz keep_2
L_131938:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne keep_2
L_131939:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne keep_2
L_131940:
	movq %r13,0xD8(%rbp)
	movq %r15,0xE0(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1B8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_48+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_428202:
L_131904:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131905:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131906:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131907:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428209
	cmpq $0xE4C,%r15
	je L_428203
	jmp keep_2
.p2align 0x4
L_428203:
L_131914:
	movq 0x0(%r11),%r15
L_131915:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131916:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131917:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428208
L_131920:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428206
	cmpq $0xE4C,%r13
	je L_428204
	xchgq %r11,%r14
L_131918:
	cmpq $0x1,%r14
	jne keep_2
L_131919:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428204:
L_131925:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428205
L_131926:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428205:
L_131928:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428206:
L_131921:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428207
L_131922:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131923:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428207:
L_131924:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428208:
	xchgq %r11,%r14
	jmp L_131918
.p2align 0x4
L_428209:
L_131908:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne keep_2
L_131909:
	movq 0x188(%rbp),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,0x0(%r11)
	jne keep_2
L_131911:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_428210
L_131912:
	movq $0x7FFFFFFFFFFFFFFF,%r13
	movd %r13,%xmm15
	movsd 0x0(%r15),%xmm14
	andpd %xmm14,%xmm15
	movq $0x1C8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movsd %xmm15,%xmm14
	movsd %xmm14,0x0(%r15)
	addq $0x10,%r12
real_21:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
L_428210:
L_131913:
	shrq $0x1,%r15
	movl %r15d,%r13d
	movd %r13d,%xmm15
	movl $0x7FFFFFFF,%r13d
	movd %r13d,%xmm14
	andps %xmm15,%xmm14
	movd %xmm14,%r13d
	movl %r13d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp real_21
.p2align 0x4
L_428211:
L_131877:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131878:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131879:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131880:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428218
	cmpq $0xE4C,%r15
	je L_428212
	jmp keep_2
.p2align 0x4
L_428212:
L_131888:
	movq 0x0(%r11),%r15
L_131889:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131890:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131891:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428217
L_131894:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428215
	cmpq $0xE4C,%r13
	je L_428213
	xchgq %r11,%r14
L_131892:
	cmpq $0x1,%r14
	jne keep_2
L_131893:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428213:
L_131899:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428214
L_131900:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428214:
L_131902:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428215:
L_131895:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428216
L_131896:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131897:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428216:
L_131898:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428217:
	xchgq %r11,%r14
	jmp L_131892
.p2align 0x4
L_428218:
L_131881:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne keep_2
L_131882:
	movq %r15,0xD8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2E8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_47+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_428219:
L_131850:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131851:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131852:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131853:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428226
	cmpq $0xE4C,%r15
	je L_428220
	jmp keep_2
.p2align 0x4
L_428220:
L_131861:
	movq 0x0(%r11),%r15
L_131862:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131863:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131864:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428225
L_131867:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428223
	cmpq $0xE4C,%r13
	je L_428221
	xchgq %r11,%r14
L_131865:
	cmpq $0x1,%r14
	jne keep_2
L_131866:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428221:
L_131872:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428222
L_131873:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428222:
L_131875:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428223:
L_131868:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428224
L_131869:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131870:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428224:
L_131871:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428225:
	xchgq %r11,%r14
	jmp L_131865
.p2align 0x4
L_428226:
L_131854:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne keep_2
L_131855:
	movq %r15,0xD8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1B0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_46+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_428227:
L_131823:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131824:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131825:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131826:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428234
	cmpq $0xE4C,%r15
	je L_428228
	jmp keep_2
.p2align 0x4
L_428228:
L_131834:
	movq 0x0(%r11),%r15
L_131835:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131836:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131837:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428233
L_131840:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428231
	cmpq $0xE4C,%r13
	je L_428229
	xchgq %r11,%r14
L_131838:
	cmpq $0x1,%r14
	jne keep_2
L_131839:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428229:
L_131845:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428230
L_131846:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428230:
L_131848:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428231:
L_131841:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428232
L_131842:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131843:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428232:
L_131844:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428233:
	xchgq %r11,%r14
	jmp L_131838
.p2align 0x4
L_428234:
L_131827:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne keep_2
L_131828:
	movq %r15,0xD8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2F0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_45+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_428235:
L_131796:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131797:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131798:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131799:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428242
	cmpq $0xE4C,%r15
	je L_428236
	jmp keep_2
.p2align 0x4
L_428236:
L_131807:
	movq 0x0(%r11),%r15
L_131808:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131809:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131810:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428241
L_131813:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428239
	cmpq $0xE4C,%r13
	je L_428237
	xchgq %r11,%r14
L_131811:
	cmpq $0x1,%r14
	jne keep_2
L_131812:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428237:
L_131818:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428238
L_131819:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428238:
L_131821:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428239:
L_131814:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428240
L_131815:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131816:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428240:
L_131817:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428241:
	xchgq %r11,%r14
	jmp L_131811
.p2align 0x4
L_428242:
L_131800:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne keep_2
L_131801:
	movq %r15,0xD8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1A8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_44+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_428243:
L_131769:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131770:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131771:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131772:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428250
	cmpq $0xE4C,%r15
	je L_428244
	jmp keep_2
.p2align 0x4
L_428244:
L_131780:
	movq 0x0(%r11),%r15
L_131781:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131782:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131783:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428249
L_131786:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428247
	cmpq $0xE4C,%r13
	je L_428245
	xchgq %r11,%r14
L_131784:
	cmpq $0x1,%r14
	jne keep_2
L_131785:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428245:
L_131791:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428246
L_131792:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428246:
L_131794:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428247:
L_131787:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428248
L_131788:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131789:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428248:
L_131790:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428249:
	xchgq %r11,%r14
	jmp L_131784
.p2align 0x4
L_428250:
L_131773:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne keep_2
L_131774:
	movq %r15,0xD8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2F8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_43+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_428251:
L_131742:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131743:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131744:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131745:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428258
	cmpq $0xE4C,%r15
	je L_428252
	jmp keep_2
.p2align 0x4
L_428252:
L_131753:
	movq 0x0(%r11),%r15
L_131754:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131755:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131756:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428257
L_131759:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428255
	cmpq $0xE4C,%r13
	je L_428253
	xchgq %r11,%r14
L_131757:
	cmpq $0x1,%r14
	jne keep_2
L_131758:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428253:
L_131764:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428254
L_131765:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428254:
L_131767:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428255:
L_131760:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428256
L_131761:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131762:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428256:
L_131763:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428257:
	xchgq %r11,%r14
	jmp L_131757
.p2align 0x4
L_428258:
L_131746:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne keep_2
L_131747:
	movq %r15,0xD8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1A0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_42+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_428259:
L_131715:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131716:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131717:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131718:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428266
	cmpq $0xE4C,%r15
	je L_428260
	jmp keep_2
.p2align 0x4
L_428260:
L_131726:
	movq 0x0(%r11),%r15
L_131727:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131728:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131729:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428265
L_131732:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428263
	cmpq $0xE4C,%r13
	je L_428261
	xchgq %r11,%r14
L_131730:
	cmpq $0x1,%r14
	jne keep_2
L_131731:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428261:
L_131737:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428262
L_131738:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428262:
L_131740:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428263:
L_131733:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428264
L_131734:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131735:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428264:
L_131736:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428265:
	xchgq %r11,%r14
	jmp L_131730
.p2align 0x4
L_428266:
L_131719:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne keep_2
L_131720:
	movq %r15,0xD8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x300(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_41+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_428267:
L_131683:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131684:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131685:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131686:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428274
	cmpq $0xE4C,%r15
	je L_428268
	jmp keep_2
.p2align 0x4
L_428268:
L_131699:
	movq 0x0(%r11),%r15
L_131700:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131701:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131702:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428273
L_131705:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428271
	cmpq $0xE4C,%r13
	je L_428269
	xchgq %r11,%r14
L_131703:
	cmpq $0x1,%r14
	jne keep_2
L_131704:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428269:
L_131710:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428270
L_131711:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428270:
L_131713:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428271:
L_131706:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428272
L_131707:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131708:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428272:
L_131709:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428273:
	xchgq %r11,%r14
	jmp L_131703
.p2align 0x4
L_428274:
L_131687:
	movq 0x0(%r11),%r15
L_131688:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131689:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131690:
	movq %r10,%r13
	andq $0x3,%r13
	jnz keep_2
L_131691:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne keep_2
L_131692:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne keep_2
L_131693:
	movq %r13,0xD8(%rbp)
	movq %r15,0xE0(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x198(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_40+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_428275:
L_131656:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131657:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131658:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131659:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428282
	cmpq $0xE4C,%r15
	je L_428276
	jmp keep_2
.p2align 0x4
L_428276:
L_131667:
	movq 0x0(%r11),%r15
L_131668:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131669:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131670:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428281
L_131673:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428279
	cmpq $0xE4C,%r13
	je L_428277
	xchgq %r11,%r14
L_131671:
	cmpq $0x1,%r14
	jne keep_2
L_131672:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428277:
L_131678:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428278
L_131679:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428278:
L_131681:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428279:
L_131674:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428280
L_131675:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131676:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428280:
L_131677:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428281:
	xchgq %r11,%r14
	jmp L_131671
.p2align 0x4
L_428282:
L_131660:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne keep_2
L_131661:
	movq %r15,0xD8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x308(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_39+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_428283:
L_131629:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131630:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131631:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131632:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428290
	cmpq $0xE4C,%r15
	je L_428284
	jmp keep_2
.p2align 0x4
L_428284:
L_131640:
	movq 0x0(%r11),%r15
L_131641:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131642:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131643:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428289
L_131646:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428287
	cmpq $0xE4C,%r13
	je L_428285
	xchgq %r11,%r14
L_131644:
	cmpq $0x1,%r14
	jne keep_2
L_131645:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428285:
L_131651:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428286
L_131652:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428286:
L_131654:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428287:
L_131647:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428288
L_131648:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131649:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428288:
L_131650:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428289:
	xchgq %r11,%r14
	jmp L_131644
.p2align 0x4
L_428290:
L_131633:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne keep_2
L_131634:
	movq %r15,0xD8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x190(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_38+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_428291:
L_131602:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131603:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131604:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131605:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_428298
	cmpq $0xE4C,%r15
	je L_428292
	jmp keep_2
.p2align 0x4
L_428292:
L_131613:
	movq 0x0(%r11),%r15
L_131614:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131615:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131616:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428297
L_131619:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428295
	cmpq $0xE4C,%r13
	je L_428293
	xchgq %r11,%r14
L_131617:
	cmpq $0x1,%r14
	jne keep_2
L_131618:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428293:
L_131624:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428294
L_131625:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428294:
L_131627:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428295:
L_131620:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428296
L_131621:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131622:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428296:
L_131623:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428297:
	xchgq %r11,%r14
	jmp L_131617
.p2align 0x4
L_428298:
L_131606:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne keep_2
L_131607:
	movq %r15,0xD8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x310(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (realOpt_37+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_428299:
L_131563:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131564:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131565:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131566:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_428306
	cmpq $0xE4C,%r15
	je L_428300
	jmp keep_2
.p2align 0x4
L_428300:
L_131586:
	movq 0x0(%r11),%r15
L_131587:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131588:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131589:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428305
L_131592:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428303
	cmpq $0xE4C,%r13
	je L_428301
	xchgq %r11,%r14
L_131590:
	cmpq $0x1,%r14
	jne keep_2
L_131591:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428301:
L_131597:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428302
L_131598:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428302:
L_131600:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428303:
L_131593:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428304
L_131594:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131595:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428304:
L_131596:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428305:
	xchgq %r11,%r14
	jmp L_131590
.p2align 0x4
L_428306:
L_131567:
	movq 0x0(%r11),%r14
	movq %r14,0xB8(%rbp)
	cmpq $0x1,%r13
	jne keep_2
L_131568:
	movq 0x8(%r14),%r15
	movq %r15,0xD0(%rbp)
	movq 0x258(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq %r15,0x380(%rbp)
	addq $0x380,%rbp
	leaq (L_131569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428307:
L_131530:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131531:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131532:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131533:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	je L_428314
	cmpq $0xE4C,%r15
	je L_428308
	jmp keep_2
.p2align 0x4
L_428308:
L_131547:
	movq 0x0(%r11),%r15
L_131548:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131549:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131550:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428313
L_131553:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428311
	cmpq $0xE4C,%r13
	je L_428309
	xchgq %r11,%r14
L_131551:
	cmpq $0x1,%r14
	jne keep_2
L_131552:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428309:
L_131558:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428310
L_131559:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428310:
L_131561:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428311:
L_131554:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428312
L_131555:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131556:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428312:
L_131557:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428313:
	xchgq %r11,%r14
	jmp L_131551
.p2align 0x4
L_428314:
L_131534:
	movq 0x8(%r11),%r15
	movq %r15,0xB8(%rbp)
L_131535:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_131536:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
L_131537:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_131538:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	jne keep_2
L_131539:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r15
	jne keep_2
L_131540:
	movq 0x0(%r13),%r15
	movq %r15,0xD8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xD8,%rbp
	leaq (L_131541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428315:
L_131493:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131494:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131495:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131496:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	je L_428322
	cmpq $0xE4C,%r15
	je L_428316
	jmp keep_2
.p2align 0x4
L_428316:
L_131514:
	movq 0x0(%r11),%r15
L_131515:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131516:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131517:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428321
L_131520:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428319
	cmpq $0xE4C,%r13
	je L_428317
	xchgq %r11,%r14
L_131518:
	cmpq $0x1,%r14
	jne keep_2
L_131519:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428317:
L_131525:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428318
L_131526:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428318:
L_131528:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428319:
L_131521:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428320
L_131522:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131523:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428320:
L_131524:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428321:
	xchgq %r11,%r14
	jmp L_131518
.p2align 0x4
L_428322:
L_131497:
	movq 0x8(%r11),%r15
	cmpq $0x1,%r13
	jne keep_2
L_131498:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_428324
L_131500:
	shlq $0x1,%r10
	orq $0x1,%r10
	movq %r10,0xB8(%rbp)
	movq 0x320(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_428323
L_131501:
	movq %r14,0x110(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x108(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x108,%rbp
	leaq (L_131502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_428323:
L_131509:
	movq %r11,0xD8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_131510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_428324:
L_131499:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428325:
L_131456:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131457:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131458:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_428332
L_131477:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_428329
L_131478:
	movq 0x0(%r11),%r15
L_131479:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131480:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131481:
	movq %r10,%r13
	andq $0x3,%r13
	jnz keep_2
L_131482:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428328
	cmpq $0xE4C,%r13
	je L_428326
	jmp keep_2
.p2align 0x4
L_428326:
L_131487:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428327
L_131488:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428327:
L_131490:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_equal
L_131491:
	movl %eax,%ecx
	jmp bool_1
.p2align 0x4
L_428328:
L_131483:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je keep_2
L_131484:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131485:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428329:
	movq %r13,%r15
	xchgq %r11,%r14
L_131460:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131461:
	movq 0x0(%r15),%r13
	cmpq $0x1,0x8(%r15)
	jne keep_2
L_131463:
	movq %r14,%r15
	andq $0x3,%r15
	jnz keep_2
L_131464:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	je L_428331
	cmpq $0xE4A,%r15
	je L_428330
	jmp keep_2
.p2align 0x4
L_428330:
L_131469:
	movq 0x0(%r14),%r15
	movq %r15,0xB8(%rbp)
L_131470:
	movq %r13,%r14
	andq $0x3,%r14
	jnz keep_2
L_131471:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_131472:
	movq 0x0(%r13),%r14
	movq %r14,0xC8(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xE0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_131473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_428331:
L_131465:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq $0xECB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
L_131466:
	movq %r13,%r15
	andq $0x3,%r15
	jnz keep_2
L_131467:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	jne keep_2
L_131468:
	movq %r14,0xE0(%rbp)
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0xECB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0xD8(%rbp)
	addq $0x18,%r12
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xD8,%rbp
	leaq (bool_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_3
.p2align 0x4
L_428332:
	movq %r13,%r15
	xchgq %r11,%r14
	jmp L_131460
.p2align 0x4
L_428333:
L_131424:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131425:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131426:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_428338
L_131441:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_428337
L_131442:
	movq 0x0(%r11),%r15
L_131443:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131444:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131445:
	movq %r10,%r13
	andq $0x3,%r13
	jnz keep_2
L_131446:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428336
	cmpq $0xE4C,%r13
	je L_428334
	jmp keep_2
.p2align 0x4
L_428334:
L_131451:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428335
L_131452:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428335:
L_131454:
	movq 0xC8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	jmp keep_1
.p2align 0x4
L_428336:
L_131447:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je keep_2
L_131448:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131449:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428337:
	movq %r13,%r15
	xchgq %r11,%r14
L_131428:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131429:
	movq 0x0(%r15),%r13
	cmpq $0x1,0x8(%r15)
	jne keep_2
L_131431:
	movq %r14,%r15
	andq $0x3,%r15
	jnz keep_2
L_131432:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	jne keep_2
L_131433:
	movq 0x0(%r14),%r15
	movq %r15,0xB8(%rbp)
L_131434:
	movq %r13,%r14
	andq $0x3,%r14
	jnz keep_2
L_131435:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne keep_2
L_131436:
	movq 0x0(%r13),%r14
	movq %r14,0xC8(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xE0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_131437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_428338:
	movq %r13,%r15
	xchgq %r11,%r14
	jmp L_131428
.p2align 0x4
L_428339:
L_131398:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131399:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131400:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131401:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne keep_2
L_131402:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	je L_428345
L_131403:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131404:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428344
L_131407:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428342
	cmpq $0xE4C,%r13
	je L_428340
	xchgq %r11,%r14
L_131405:
	cmpq $0x1,%r14
	jne keep_2
L_131406:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428340:
L_131412:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428341
L_131413:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428341:
L_131415:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428342:
L_131408:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428343
L_131409:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131410:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428343:
L_131411:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428344:
	xchgq %r11,%r14
	jmp L_131405
.p2align 0x4
L_428345:
L_131416:
	movq %r15,0xD8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x180(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_131417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toWord_0
.p2align 0x4
L_428346:
L_131377:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131378:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131379:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131380:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne keep_2
L_131381:
	movq 0x0(%r11),%r15
L_131382:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131383:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131384:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428351
L_131387:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428349
	cmpq $0xE4C,%r13
	je L_428347
	xchgq %r11,%r14
L_131385:
	cmpq $0x1,%r14
	jne keep_2
L_131386:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428347:
L_131392:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428348
L_131393:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428348:
L_131395:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_equal
L_131396:
	movl %eax,%ecx
	jmp bool_1
.p2align 0x4
L_428349:
L_131388:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428350
L_131389:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131390:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428350:
L_131391:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428351:
	xchgq %r11,%r14
	jmp L_131385
.p2align 0x4
L_428352:
L_131336:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131337:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131338:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131339:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne keep_2
L_131340:
	movq 0x0(%r11),%r15
L_131341:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131342:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131343:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428362
L_131346:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428360
	cmpq $0xE4C,%r13
	je L_428353
	xchgq %r11,%r14
L_131344:
	cmpq $0x1,%r14
	jne keep_2
L_131345:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428353:
L_131351:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428354
L_131352:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428354:
L_131354:
	movq %r13,%r11
	andq %r15,%r11
	andq $0x1,%r11
	jz L_428357
L_131355:
	cmpq %r13,%r15
	jl L_428356
L_131356:
	cmpq %r15,%r13
	jl L_428355
L_131358:
	movq $0x1,0xB8(%rbp)
L_131359:
	movq 0xF8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x188,%rbp
	leaq (L_131360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428355:
L_131367:
	movq $0x3,0xB8(%rbp)
	jmp L_131359
.p2align 0x4
L_428356:
L_131369:
	movq $0xFFFFFFFFFFFFFFFF,0xB8(%rbp)
	jmp L_131359
.p2align 0x4
L_428357:
L_131370:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_131371:
	cmpl $0x0,%eax
	jl L_131369
L_131372:
	cmpl $0x0,%eax
	jg L_131367
	jmp L_131358
.p2align 0x4
L_428360:
L_131347:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428361
L_131348:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131349:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428361:
L_131350:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428362:
	xchgq %r11,%r14
	jmp L_131344
.p2align 0x4
L_428363:
L_131302:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131303:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_428369
L_131304:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne keep_2
L_131305:
	movq 0x0(%r11),%r15
L_131306:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131307:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131308:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428368
L_131311:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428366
	cmpq $0xE4C,%r13
	je L_428364
	xchgq %r11,%r14
L_131309:
	cmpq $0x1,%r14
	jne keep_2
L_131310:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428364:
L_131316:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428365
L_131317:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428365:
L_131319:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428366:
L_131312:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428367
L_131313:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131314:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428367:
L_131315:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428368:
	xchgq %r11,%r14
	jmp L_131309
.p2align 0x4
L_428369:
L_131320:
	cmpq $0x1,%r13
	jne keep_2
L_131321:
	movq 0x328(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_428370
L_131322:
	movq %r13,0x348(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x340(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x340,%rbp
	leaq (L_131323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_428370:
L_131330:
	movq %r10,0xD8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_131331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_428371:
L_131278:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_131279:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_131280:
	movq %r11,%r15
	andq $0x3,%r15
	jnz keep_2
L_131281:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_428378
	cmpq $0xE4C,%r15
	je L_428372
	jmp keep_2
.p2align 0x4
L_428372:
L_131286:
	movq 0x0(%r11),%r15
L_131287:
	movq %r13,%r11
	andq $0x3,%r11
	jnz keep_2
L_131288:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_131289:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_428377
L_131292:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428375
	cmpq $0xE4C,%r13
	je L_428373
	xchgq %r11,%r14
L_131290:
	cmpq $0x1,%r14
	jne keep_2
L_131291:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428373:
L_131297:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428374
L_131298:
	cmpq $0x1,0x8(%r11)
	jne keep_2
	xchgq %r13,%r14
	jmp x_480
.p2align 0x4
L_428374:
L_131300:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428375:
L_131293:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_428376
L_131294:
	cmpq $0x1,0x8(%r11)
	jne keep_2
L_131295:
	movq %r15,0xD0(%rbp)
	movq %r13,0xE0(%rbp)
	jmp x_479
.p2align 0x4
L_428376:
L_131296:
	movq %r15,0xD0(%rbp)
	jmp intInfUnary_7
.p2align 0x4
L_428377:
	xchgq %r11,%r14
	jmp L_131290
.p2align 0x4
L_428378:
L_131282:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne keep_2
L_131283:
	cmpq $0x1,0x0(%r15)
	jne keep_2
L_131285:
	movq $0x1,%r15
	jmp L_129485
.p2align 0x4
L_428379:
L_132301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x380,%rbp
	leaq (L_132302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132302
.p2align 0x4
.long 0x1C88
L_132302:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	jmp L_130196
.p2align 0x4
L_428380:
L_130191:
	movq (globalObjptr+0x1A48)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428381:
L_132303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x380,%rbp
	leaq (L_132304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132304
.p2align 0x4
.long 0x1C88
L_132304:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	jmp L_130190
.p2align 0x4
L_428382:
L_132305:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_130199
.p2align 0x4
L_428384:
L_129435:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129437
L_130181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x380,%rbp
	leaq (L_130182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130182
.p2align 0x4
.long 0x1C39
L_130182:
	addq $0xFFFFFFFFFFFFFC80,%rbp
L_129437:
	movq 0xD0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz keep_2
L_129438:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1326,%r15
	je L_428453
L_130032:
	movq 0x0(%r13),%r15
L_130033:
	movq %r15,%r13
	andq $0x3,%r13
	jnz keep_2
L_130034:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_428392
	cmpq $0xE4B,%r13
	je L_428390
	cmpq $0xE4C,%r13
	je L_428385
	jmp keep_2
.p2align 0x4
L_428385:
L_130065:
	movq 0x0(%r15),%r13
	movq %r13,0xD0(%rbp)
L_130066:
	movq %r14,%r15
	andq $0x3,%r15
	jnz keep_2
L_130067:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1326,%r14
	je L_428389
L_130105:
	movq 0x0(%r13),%r11
L_130106:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_428388
L_130109:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_428387
	cmpq $0xE4C,%r14
	je L_428386
	movq %r15,%r14
L_130107:
	cmpq $0x1,%r14
	jne keep_2
intInfUnary_6:
	movq 0xD0(%rbp),%r15
	movq %r15,0x380(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x388(%rbp)
	addq $0x380,%rbp
	leaq (L_130073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_428386:
L_130170:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r15
	je intInfUnary_6
L_130171:
	cmpq $0x1,0x8(%r15)
	jne keep_2
L_130172:
	movq %r14,0xD8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x108(%rbp),%r15
	movq 0x120(%rbp),%r14
	movq %r14,0x108(%rbp)
	movq %r15,0x120(%rbp)
	movq 0x118(%rbp),%r15
	movq 0x110(%rbp),%r14
	movq %r14,0x118(%rbp)
	movq %r15,0x110(%rbp)
	addq $0xD8,%rbp
	leaq (L_130173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInfBinary_23
.p2align 0x4
L_428387:
L_130110:
	movq 0x0(%r11),%r14
	movq %r14,0xE8(%rbp)
	cmpq $0x1,%r15
	je intInfUnary_6
L_130111:
	cmpq $0x1,0x8(%r15)
	jne keep_2
L_130112:
	movq 0xD0(%rbp),%r15
	movq %r15,0x380(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x388(%rbp)
	addq $0x380,%rbp
	leaq (L_130113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_428388:
	movq %r15,%r14
	jmp L_130107
.p2align 0x4
L_428389:
L_130068:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r15
	je intInfUnary_6
L_130069:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1326,%r15
	jne keep_2
L_130070:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne keep_2
L_130071:
	movq %r14,0xD8(%rbp)
	movl $0x0,0xAC(%rbp)
	movq 0xD0(%rbp),%r14
	movq %r15,0xD0(%rbp)
	movq %r14,%r15
varIntInf_2:
	movq %r15,0x380(%rbp)
	leaq L_130024(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x380,%rbp
	leaq (L_129966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428390:
L_130060:
	movq 0x0(%r15),%r13
L_130061:
	movq %r14,%r15
	andq $0x3,%r15
	jnz keep_2
L_130062:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x1326,%r14
	jne keep_2
L_130063:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r15
	jne keep_2
L_130064:
	movq %r13,0xD0(%rbp)
	movq %r14,0xD8(%rbp)
	movl $0x0,0xAC(%rbp)
varReal_2:
	movq 0x1E0(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,0x0(%r14)
	jne keep_2
L_129913:
	movq 0xD0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_428391
L_129914:
	movsd 0x0(%r15),%xmm15
	movsd %xmm15,0xE8(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_129915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1485
.p2align 0x4
L_428391:
L_129960:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movd %r14d,%xmm15
	movss %xmm15,%xmm14
	movss %xmm14,0xE8(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_129915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1486
.p2align 0x4
L_428392:
L_130035:
	movq 0x0(%r15),%r13
L_130036:
	movq %r14,%r15
	andq $0x3,%r15
	jnz keep_2
L_130037:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x1326,%r14
	jne keep_2
L_130038:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r15
	jne keep_2
L_130039:
	movq 0xB8(%rbp),%r15
	movq %r15,%r11
	andq $0xFF,%r11
	cmpq $0x9,%r11
	je L_428452
	cmpq $0x15,%r11
	je L_428451
L_130040:
	movq %r15,%r11
	andq $0x3,%r11
	jnz keep_2
L_130041:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x10A8,%rax
	cmpq $0x16,%rax
	ja keep_2
	leaq jumpTable_289(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_289:
.quad L_428449,L_428447,L_428425,L_428420,L_428419,L_428416,keep_2,L_428415,L_428413,L_428411,keep_2,keep_2,keep_2,L_428408,L_428405,L_428401,L_428398,keep_2,keep_2,keep_2,L_428396,L_428395,L_428393
.text
.p2align 0x4
L_428393:
L_130057:
	movq %r13,%r15
L_129897:
	cmpq $0x1,0x0(%r15)
	jne keep_2
L_129899:
	movq %r14,%r15
L_129450:
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0xC0(%rbp),%r13
	cmpq $0x1,%r13
	je L_129478
L_129451:
	movq %r14,0xB8(%rbp)
	movq 0x0(%r13),%r15
	jmp L_129452
.p2align 0x4
L_428395:
L_130056:
	movq %r13,%r15
L_129893:
	cmpq $0x1,0x0(%r15)
	jne keep_2
L_129895:
	movq %r14,%r15
	jmp L_129450
.p2align 0x4
L_428396:
L_130055:
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r14,0xB8(%rbp)
	movq %r13,%r15
	movq %r11,%r14
L_129880:
	movq 0x0(%r15),%r13
	movq %r13,0xD0(%rbp)
	cmpq $0x1,%r13
	je L_428397
L_129881:
	movq 0x338(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xD8(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xE0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_129882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428397:
L_129891:
	movq %r14,0xB8(%rbp)
zero_4:
	movq 0x330(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_129671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428398:
L_130054:
	movq 0xB8(%rbp),%r11
	movq 0x0(%r11),%r10
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r13,%r14
	movq %r10,%r13
shift_2:
	testl %ecx,%ecx
	jz L_428400
L_129878:
	movq %r14,0xB8(%rbp)
	movq %r13,0xD0(%rbp)
	movq %r15,%r13
L_129678:
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	cmpq $0x1,%r14
	je L_428399
L_129679:
	movq 0xF8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x340(%rbp)
	addq $0x340,%rbp
	leaq (L_129680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428399:
	movq %r13,%r15
	jmp L_129450
.p2align 0x4
L_428400:
L_129877:
	xchgq %r13,%r14
L_129668:
	cmpq $0x1,0x0(%r13)
	jne keep_2
L_129670:
	movq %r14,0xB8(%rbp)
	jmp zero_4
.p2align 0x4
L_428401:
L_130053:
	movq 0xB8(%rbp),%r15
	movl 0x0(%r15),%ebx
	movq %r13,0xB8(%rbp)
	xorl %ecx,%ecx
L_129825:
	testl %ecx,%ecx
	jnz L_428403
L_129826:
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x348(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xD8(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r13),%r11
	movq %r11,0xE0(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0xE8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xF0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xF8(%rbp)
	testl %ebx,%ebx
	jnz L_428402
L_129827:
	movq %r14,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_129828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428402:
L_129846:
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_129847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428403:
L_129850:
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x340(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xD8(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r13),%r11
	movq %r11,0xE0(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0xE8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xF0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xF8(%rbp)
	testl %ebx,%ebx
	jnz L_428404
L_129851:
	movq %r14,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_129852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428404:
L_129871:
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_129872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428405:
L_130052:
	movq %r14,0xD0(%rbp)
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	movq %r13,%r15
L_129811:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_428407
L_129812:
	cmpq $0x3,%r14
	je L_428406
L_129813:
	testl %ecx,%ecx
	jz keep_2
L_129815:
	movq %r15,0xE0(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_129816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_428406:
L_129822:
	movq 0xD0(%rbp),%r15
	jmp L_129450
.p2align 0x4
L_428407:
L_129823:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
L_428408:
L_130051:
	movq %r14,0xD0(%rbp)
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	movq %r13,%r15
L_129797:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_428410
L_129798:
	cmpq $0x3,%r14
	je L_428409
L_129799:
	testl %ecx,%ecx
	jz keep_2
L_129801:
	movq %r15,0xE0(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_129802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_428409:
L_129808:
	movq 0xD0(%rbp),%r15
	jmp L_129450
.p2align 0x4
L_428410:
L_129809:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
L_428411:
L_130050:
	movq %r13,0xB8(%rbp)
	movq %r14,%r15
L_129784:
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
	cmpq $0x1,%r13
	je L_129450
L_129785:
	movq 0x338(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xD8(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xE0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_129786+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428413:
L_130049:
	movq %r14,0xD0(%rbp)
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	xorl %ecx,%ecx
	movq %r13,%r15
L_129770:
	testl %ecx,%ecx
	jz keep_2
L_129772:
	cmpq $0x3,0x0(%r15)
	je L_428414
L_129773:
	testl %ebx,%ebx
	jz keep_2
L_129775:
	movq %r15,0xE0(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_129776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_428414:
L_129782:
	movq 0xD0(%rbp),%r15
	jmp L_129450
.p2align 0x4
L_428415:
L_130048:
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	xorl %ecx,%ecx
	movq %r13,%r15
L_129755:
	testl %ecx,%ecx
	jz keep_2
L_129757:
	cmpq $0x3,0x0(%r15)
	je zero_4
L_129758:
	testl %ebx,%ebx
	jz keep_2
L_129760:
	movq %r15,0x340(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x340,%rbp
	leaq (L_129761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_428416:
L_130047:
	movq %r14,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r13,0xB8(%rbp)
	xorl %ecx,%ecx
	movq %r14,%r15
ro_2:
	testl %ecx,%ecx
	jz L_428417
L_129733:
	movq %r15,0x248(%rbp)
	addq $0x248,%rbp
	leaq (L_129734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428417:
L_129720:
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	cmpq $0x1,%r14
	je L_428418
L_129721:
	movq 0x338(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_129722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428418:
L_129729:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_129485
.p2align 0x4
L_428419:
L_130046:
	movq %r14,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r13,0xB8(%rbp)
	xorl %ecx,%ecx
	movq %r14,%r15
	jmp ro_2
.p2align 0x4
L_428420:
L_130045:
	movq 0xB8(%rbp),%r15
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r11
	movq %r13,0xB8(%rbp)
	movl $0x0,0xAC(%rbp)
	movq %r11,%r15
L_129665:
	testl %ecx,%ecx
	jnz L_428422
L_129666:
	movl 0xAC(%rbp),%r11d
	testl %r11d,%r11d
	jz L_428421
L_129677:
	movq %r15,0xD0(%rbp)
	movq %r14,%r13
	jmp L_129678
.p2align 0x4
L_428421:
L_129667:
	movq 0xB8(%rbp),%r13
	movq %r15,%r14
	jmp L_129668
.p2align 0x4
L_428422:
L_129703:
	movq 0xB8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xD0(%rbp)
	cmpq $0x1,%r11
	jne L_428424
L_129716:
	movl 0xAC(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_428423
L_129717:
	movq %r15,0xB8(%rbp)
	jmp zero_4
.p2align 0x4
L_428423:
L_129718:
	movq %r14,%r15
	jmp L_129450
.p2align 0x4
L_428424:
L_129704:
	movq 0x338(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_129705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428425:
L_130044:
	movq 0xB8(%rbp),%r11
	movq 0x0(%r11),%r10
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r13,%r14
	movq %r10,%r13
L_129659:
	cmpq $0x1,0x0(%r14)
	jne keep_2
L_129661:
	testl %ecx,%ecx
	jnz L_129450
L_129662:
	movq $0x2169,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0x10,%r12
	movq $0x2657,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0xB8(%rbp)
	movq $0x1,%r13
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_129605:
	incl %ecx
	jo L_128791
L_129606:
	cmpq $0x1,%r13
	je L_428426
L_129607:
	movq 0x8(%r13),%r13
	jmp L_129605
.p2align 0x4
L_428426:
L_129608:
	movslq %ecx,%rdx
	movq %rdx,0xD0(%rbp)
	testq %rdx,%rdx
	jz L_428444
L_129609:
	cmpq $0x7FFFFFFF,%rdx
	ja L_129052
L_129610:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_129611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129611
.p2align 0x4
.long 0x1BF2
L_129611:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq %rax,0xD8(%rbp)
L_129612:
	movq $0x0,0xE0(%rbp)
.p2align 0x4,,0x7
loop_1370:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428442
.p2align 0x4,,0x7
L_129613:
	movq 0xE0(%rbp),%r15
	cmpq 0xD0(%rbp),%r15
	jnl L_428428
L_129642:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_428427
L_129643:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq 0xD8(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0xE0(%rbp)
	jmp loop_1370
.p2align 0x4
L_428427:
L_129644:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4B0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428428:
L_129614:
	movq 0xD8(%rbp),%r11
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r11)
	movq 0xC0(%rbp),%r11
	cmpq $0x1,%r11
	je L_129629
L_129615:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r13
	movq $0x1143,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq $0x2115,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0xB8(%rbp)
	movq %r11,0x0(%r10)
	addq $0x10,%r12
	movq 0x48(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0xD0(%rbp)
	movq 0x0(%r11),%r14
	movq 0x10(%r13),%r15
	movq %r15,0xE0(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r13
	incq %r13
	jo L_128785
L_129616:
	movq %r13,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_428439
L_129617:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_129619:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_428438
L_129633:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD6A,%r11
	jne L_428437
L_129634:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x18)(%rip)
	je L_428434
L_129620:
	incl %ecx
	movl %ecx,0xAC(%rbp)
	jo L_128791
L_129621:
	cmpq $0x1,%r15
	je L_428429
L_129622:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_129619
.p2align 0x4
L_428429:
L_129623:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129624
L_129631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_129632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129632
.p2align 0x4
.long 0x1C08
L_129632:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_129624:
	movl 0xAC(%rbp),%ecx
L_129625:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_128797
L_129626:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_129628
L_129630:
	movl %ecx,0x0(%r15)
L_129628:
	movq $0x1AD5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xE0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_129629:
	movq $0x2127,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2655,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129392
.p2align 0x4
L_428434:
L_129636:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_128797
L_129637:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_128823
L_129639:
	movl %ecx,0x0(%r15)
	jmp L_128823
.p2align 0x4
L_428437:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_129620
.p2align 0x4
L_428438:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_129620
.p2align 0x4
L_428439:
L_129640:
	xorl %ecx,%ecx
	jmp L_129625
.p2align 0x4
L_428442:
L_129645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_129646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129646
.p2align 0x4
.long 0x1C09
L_129646:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	jmp L_129613
.p2align 0x4
L_428444:
L_129648:
	movq (globalObjptr+0x5190)(%rip),%r15
	movq %r15,0xD8(%rbp)
	jmp L_129612
.p2align 0x4
L_428447:
L_130043:
	movq 0xB8(%rbp),%r11
	movq 0x8(%r11),%r10
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r13,%r14
	movq %r10,%r13
L_129653:
	cmpq $0x1,0x0(%r14)
	jne keep_2
L_129655:
	testl %ecx,%ecx
	jnz L_129450
L_129656:
	movq $0x2167,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0xC8(%rbp)
	addq $0x10,%r12
	movq $0x2657,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0xB8(%rbp)
	movq $0x1,%r13
	xorl %ecx,%ecx
	jmp L_129605
.p2align 0x4
L_428449:
L_130042:
	movq %r14,0xD0(%rbp)
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14),%r11
	movq %r11,0xB8(%rbp)
	movq %r13,%r15
L_129596:
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	cmpq $0x1,%r14
	je L_428450
L_129597:
	movq 0x338(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xE8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_129598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428450:
L_129651:
	movq 0xD0(%rbp),%r15
	jmp L_129450
.p2align 0x4
L_428451:
L_130059:
	xorl %ecx,%ecx
	xchgq %r13,%r15
L_129905:
	cmpq $0x1,0x0(%r15)
	jne keep_2
L_129907:
	testl %ecx,%ecx
	jz keep_2
L_129909:
	movq %r14,%r15
	jmp L_129450
.p2align 0x4
L_428452:
L_130058:
	xchgq %r13,%r15
L_129901:
	cmpq $0x1,0x0(%r15)
	jne keep_2
L_129903:
	movq %r14,%r15
	jmp L_129450
.p2align 0x4
L_428453:
L_129439:
	movq 0x0(%r13),%r15
L_129440:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_129441:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x1326,%r14
	je L_428478
L_129580:
	movq 0x0(%r11),%r14
L_129581:
	movq %r14,%r11
	andq $0x3,%r11
	jnz keep_2
L_129582:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xE4A,%r11
	je L_428456
	cmpq $0xE4B,%r11
	je L_428455
	cmpq $0xE4C,%r11
	je L_428454
	jmp keep_2
.p2align 0x4
L_428454:
L_129961:
	movq 0x0(%r14),%r11
L_129962:
	movq %r13,%r14
	andq $0x3,%r14
	jnz keep_2
L_129963:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0x1326,%r13
	jne keep_2
L_129964:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r14
	jne keep_2
L_129965:
	movq %r13,0xD0(%rbp)
	movq %r15,0xD8(%rbp)
	movl $0x1,0xAC(%rbp)
	movq %r11,%r15
	jmp varIntInf_2
.p2align 0x4
L_428455:
L_129910:
	movq 0x0(%r14),%r11
	cmpq $0x1,%r13
	jne keep_2
L_129911:
	movq %r11,0xD0(%rbp)
	movq %r15,0xD8(%rbp)
	movl $0x1,0xAC(%rbp)
	jmp varReal_2
.p2align 0x4
L_428456:
L_129583:
	movq 0x0(%r14),%r11
	cmpq $0x1,%r13
	je L_428459
L_129584:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_129585:
	cmpq $0x1,0x0(%r11)
	jne keep_2
L_129587:
	movq 0xB8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x1F,%r13
	je L_129450
	cmpq $0x25,%r13
	je L_129450
L_129588:
	andq $0x3,%r14
	jnz keep_2
L_129589:
	jmp keep_2
.p2align 0x4
L_428459:
L_129592:
	movq 0xB8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x9,%r13
	je L_428477
	cmpq $0x15,%r13
	je L_428476
L_129593:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_129594:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0x10A8,%rax
	cmpq $0x16,%rax
	ja keep_2
	leaq jumpTable_290(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_290:
.quad L_428475,L_428474,L_428473,L_428472,L_428471,L_428470,keep_2,L_428469,L_428468,L_428467,keep_2,keep_2,keep_2,L_428466,L_428465,L_428464,L_428463,keep_2,keep_2,keep_2,L_428462,L_428461,L_428460
.text
.p2align 0x4
L_428460:
L_129896:
	movq %r15,%r14
	movq %r11,%r15
	jmp L_129897
.p2align 0x4
L_428461:
L_129892:
	movq %r15,%r14
	movq %r11,%r15
	jmp L_129893
.p2align 0x4
L_428462:
L_129879:
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r15,0xB8(%rbp)
	movq %r11,%r15
	movq %r13,%r14
	jmp L_129880
.p2align 0x4
L_428463:
L_129876:
	movq 0xB8(%rbp),%r10
	movq 0x0(%r10),%r13
	movl $0x1,%ecx
	movq %r11,%r14
	jmp shift_2
.p2align 0x4
L_428464:
L_129824:
	movq 0xB8(%rbp),%r15
	movl 0x0(%r15),%ebx
	movq %r11,0xB8(%rbp)
	movl $0x1,%ecx
	jmp L_129825
.p2align 0x4
L_428465:
L_129810:
	movq %r15,0xD0(%rbp)
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	movq %r11,%r15
	jmp L_129811
.p2align 0x4
L_428466:
L_129796:
	movq %r15,0xD0(%rbp)
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	movq %r11,%r15
	jmp L_129797
.p2align 0x4
L_428467:
L_129783:
	movq %r11,0xB8(%rbp)
	jmp L_129784
.p2align 0x4
L_428468:
L_129769:
	movq %r15,0xD0(%rbp)
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	movl $0x1,%ecx
	movq %r11,%r15
	jmp L_129770
.p2align 0x4
L_428469:
L_129754:
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	movl $0x1,%ecx
	movq %r11,%r15
	jmp L_129755
.p2align 0x4
L_428470:
L_129753:
	movq %r15,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r11,0xB8(%rbp)
	movl $0x1,%ecx
	movq %r14,%r15
	jmp ro_2
.p2align 0x4
L_428471:
L_129719:
	movq %r15,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r11,0xB8(%rbp)
	movl $0x1,%ecx
	movq %r14,%r15
	jmp ro_2
.p2align 0x4
L_428472:
L_129664:
	movq 0xB8(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r13
	movq %r11,0xB8(%rbp)
	movl $0x1,0xAC(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp L_129665
.p2align 0x4
L_428473:
L_129658:
	movq 0xB8(%rbp),%r10
	movq 0x0(%r10),%r13
	movl $0x1,%ecx
	movq %r11,%r14
	jmp L_129659
.p2align 0x4
L_428474:
L_129652:
	movq 0xB8(%rbp),%r10
	movq 0x8(%r10),%r13
	movl $0x1,%ecx
	movq %r11,%r14
	jmp L_129653
.p2align 0x4
L_428475:
L_129595:
	movq %r15,0xD0(%rbp)
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq %r11,%r15
	jmp L_129596
.p2align 0x4
L_428476:
L_129904:
	movl $0x1,%ecx
	xchgq %r15,%r14
	xchgq %r11,%r15
	jmp L_129905
.p2align 0x4
L_428477:
L_129900:
	xchgq %r15,%r14
	xchgq %r11,%r15
	jmp L_129901
.p2align 0x4
L_428478:
L_129442:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_428485
L_129443:
	cmpq $0x1,0x8(%r13)
	jne keep_2
L_129444:
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne keep_2
L_129446:
	movq 0xB8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x1E,%r13
	je L_129450
	cmpq $0x2A,%r13
	je L_129450
	cmpq $0x2B,%r13
	je L_428482
	cmpq $0x2D,%r13
	je L_129492
	cmpq $0x2E,%r13
	je L_129492
	cmpq $0x33,%r13
	je L_428479
L_129447:
	andq $0x3,%r14
	jnz keep_2
L_129448:
	jmp keep_2
.p2align 0x4
L_428479:
L_129492:
	xorl %ecx,%ecx
x_478:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_129482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_428482:
L_129481:
	movl $0x1,%ecx
	jmp x_478
.p2align 0x4
L_428485:
L_129495:
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne keep_2
L_129497:
	movq 0xB8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0xA,%r13
	je L_428503
	cmpq $0xB,%r13
	je L_129565
	cmpq $0x11,%r13
	je L_428501
	cmpq $0x21,%r13
	je L_428500
	cmpq $0x22,%r13
	je L_129565
	cmpq $0x39,%r13
	je L_129565
	cmpq $0x3A,%r13
	je L_428497
	cmpq $0x7E,%r13
	je L_428496
	cmpq $0x85,%r13
	je L_428495
L_129498:
	movq %r14,%r13
	andq $0x3,%r13
	jnz keep_2
L_129499:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10A8,%r13
	je L_428494
	cmpq $0x10A9,%r13
	je L_428493
	cmpq $0x10AA,%r13
	je L_428492
	cmpq $0x10AF,%r13
	je L_428491
	cmpq $0x10B0,%r13
	je L_428490
	cmpq $0x10B1,%r13
	je L_129450
	cmpq $0x10B7,%r13
	je L_428488
	cmpq $0x10BA,%r13
	je L_428487
	cmpq $0x10BC,%r13
	je L_129450
	jmp keep_2
.p2align 0x4
L_428487:
L_129548:
	movl $0x1,%ecx
	jmp bool_1
.p2align 0x4
L_428488:
L_129536:
	xorl %ecx,%ecx
	jmp bool_1
.p2align 0x4
L_428490:
L_129528:
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x258(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xD8(%rbp)
	movq %r14,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_129529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428491:
L_129521:
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x330(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xD8(%rbp)
	movq %r14,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_129522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428492:
L_129514:
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x330(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xD8(%rbp)
	movq %r14,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_129515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428493:
L_129507:
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x330(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xD8(%rbp)
	movq %r14,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_129508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428494:
L_129500:
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x330(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xD8(%rbp)
	movq %r14,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_129501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428495:
L_129579:
	movl $0x1,%ecx
	jmp bool_1
.p2align 0x4
L_428496:
L_129578:
	xorl %ecx,%ecx
	jmp bool_1
.p2align 0x4
L_428497:
L_129565:
	movl $0x1,%ecx
	jmp bool_1
.p2align 0x4
L_428500:
L_129568:
	movq 0x330(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x188,%rbp
	leaq (L_129569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428501:
L_129567:
	xorl %ecx,%ecx
	jmp bool_1
.p2align 0x4
L_428503:
L_129550:
	movq 0x358(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_428504
L_129551:
	movq %r13,0x348(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x340(%rbp)
	addq $0x340,%rbp
	leaq (L_129552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_428504:
L_129559:
	movq %r10,0x40(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_129560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1B94
L_128836:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x60(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_128834
L_128838:
	cmpl $0x0,%r13d
	jl L_428540
L_128839:
	movq $0x1,0x118(%rbp)
	movq $0x1,0x130(%rbp)
	movl $0x0,0x64(%rbp)
.p2align 0x4,,0x7
loop_1352:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428539
.p2align 0x4,,0x7
L_128840:
	movl 0x64(%rbp),%r15d
	cmpl 0x60(%rbp),%r15d
	jnl L_428511
L_129229:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
L_129230:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_129231
L_129233:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF59,%r15
	je L_428509
	cmpq $0xF5A,%r15
	je L_428508
L_129231:
	movq 0x118(%rbp),%r15
	movq 0x130(%rbp),%r14
L_129232:
	movq %r15,0x118(%rbp)
	movq %r14,0x130(%rbp)
	incl 0x64(%rbp)
	jmp loop_1352
.p2align 0x4
L_428508:
L_129235:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x11F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x23B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x118(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x130(%rbp),%r14
	jmp L_129232
.p2align 0x4
L_428509:
L_129234:
	movq 0x0(%r13),%r15
	movq $0x262F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x130(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x118(%rbp),%r15
	jmp L_129232
.p2align 0x4
L_428511:
L_128841:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_428512
L_128842:
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x138(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_128843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_428512:
L_129226:
	movq 0x118(%rbp),%r13
	cmpq $0x1,%r13
	je L_428538
L_129227:
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x130(%rbp),%r13
	movq %r13,0x118(%rbp)
	movq $0x1,0x130(%rbp)
.p2align 0x4,,0x7
L_128852:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428537
.p2align 0x4,,0x7
L_128853:
	movq 0x130(%rbp),%r15
	cmpq $0x1,%r15
	je L_428536
L_128854:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x130(%rbp)
	movq %r14,0x138(%rbp)
	movq $0x1,0x140(%rbp)
L_128856:
	movq 0x138(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_428535
L_128858:
	movq 0x0(%r15),%r13
	movq %r13,0x148(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_129201
	cmpq $0x5,%r13
	je L_428533
	cmpq $0x6,%r13
	je L_428531
L_128859:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_128860
L_129197:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_428529
	cmpq $0xF54,%r13
	je L_428513
L_128860:
	movq 0x0(%r14),%r15
	movq %r15,0x150(%rbp)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_128861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428513:
L_129199:
	movb $0xB,0x10C(%rbp)
.p2align 0x4,,0x7
L_128871:
	movq 0x148(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_129189
	cmpq $0x5,%r13
	je L_428527
	cmpq $0x6,%r13
	je L_428525
L_128872:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_128873
L_129185:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_428523
	cmpq $0xF54,%r13
	je L_428514
L_128873:
	movq 0x0(%r14),%r15
	movq %r15,0x148(%rbp)
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_128874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428514:
L_129187:
	movb $0xB,0x10D(%rbp)
.p2align 0x4,,0x7
L_128884:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428522
.p2align 0x4,,0x7
L_128885:
	movb 0x10C(%rbp),%r15b
	cmpb %r15b,0x10D(%rbp)
	je L_428517
L_128886:
	movq $0x2631,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x130(%rbp),%r14
	cmpq $0x1,%r14
	je L_428515
L_128887:
	movq %r15,0x140(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x130(%rbp)
	movq %r15,0x138(%rbp)
	jmp L_128856
.p2align 0x4
L_428515:
L_128889:
	movq $0x23B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2631,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_428516
L_128890:
	movq %r13,0x130(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_128852
.p2align 0x4
L_428516:
L_128891:
	movq %r13,0x68(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x60(%rbp)
L_128892:
	movb $0xB,0x138(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x138,%rbp
	leaq (L_128893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1599
.p2align 0x4
L_428517:
L_129168:
	movq $0x23B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2631,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x140(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x130(%rbp),%r15
	cmpq $0x1,%r15
	je L_428521
L_129169:
	movq %r14,0x138(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x130(%rbp)
L_129170:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428520
.p2align 0x4,,0x7
L_129171:
	movq $0x2631,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_428518
L_129172:
	movq %r15,0x138(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x130(%rbp)
	jmp L_129170
.p2align 0x4
L_428518:
L_129174:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_428519
L_129175:
	movq %r15,0x130(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_128852
.p2align 0x4
L_428519:
L_129176:
	movq %r15,0x68(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp L_128892
.p2align 0x4
L_428520:
L_129177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_129178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129178
.p2align 0x4
.long 0x1BD6
L_129178:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	jmp L_129171
.p2align 0x4
L_428521:
L_129179:
	xchgq %r14,%r15
	jmp L_129174
.p2align 0x4
L_428522:
L_129180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_129181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129181
.p2align 0x4
.long 0x1BD7
L_129181:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	jmp L_128885
.p2align 0x4
L_428523:
L_129186:
	movb $0x6,0x10D(%rbp)
	jmp L_128884
.p2align 0x4
L_428525:
L_129191:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_428526
L_129192:
	movb $0x4,0x10D(%rbp)
	jmp L_128884
.p2align 0x4
L_428526:
L_129193:
	movb $0x5,0x10D(%rbp)
	jmp L_128884
.p2align 0x4
L_428527:
L_129189:
	movb $0xB,0x10D(%rbp)
	jmp L_128884
.p2align 0x4
L_428529:
L_129198:
	movb $0x6,0x10C(%rbp)
	jmp L_128871
.p2align 0x4
L_428531:
L_129203:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_428532
L_129204:
	movb $0x4,0x10C(%rbp)
	jmp L_128871
.p2align 0x4
L_428532:
L_129205:
	movb $0x5,0x10C(%rbp)
	jmp L_128871
.p2align 0x4
L_428533:
L_129201:
	movb $0xB,0x10C(%rbp)
	jmp L_128871
.p2align 0x4
L_428535:
L_128857:
	movq $0xA,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428536:
L_129206:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_128889
.p2align 0x4
L_428537:
L_129207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_129208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129208
.p2align 0x4
.long 0x1BD8
L_129208:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_128853
.p2align 0x4
L_428538:
L_129228:
	movq 0x130(%rbp),%r11
	movq %r11,0x60(%rbp)
	movq $0x1,0x68(%rbp)
	jmp L_128892
.p2align 0x4
L_428539:
L_129236:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_129237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129237
.p2align 0x4
.long 0x1BDB
L_129237:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_128840
.p2align 0x4
L_428540:
L_129238:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C8E
L_132363:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132364
L_132392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_132393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132393
.p2align 0x4
.long 0x1C8F
L_132393:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_132364:
	movl 0xAC(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_132366
L_132365:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
L_132366:
	movq 0x58(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0xC0(%rbp)
	movq 0x0(%r11),%r14
	movq 0xD8(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0xC8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_128785
L_132367:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_428552
L_132368:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_132370:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_428551
L_132383:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD6A,%r11
	jne L_428550
L_132384:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_428547
L_132371:
	incl %ecx
	movl %ecx,0xAC(%rbp)
	jo L_128791
L_132372:
	cmpq $0x1,%r15
	je L_428542
L_132373:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_132370
.p2align 0x4
L_428542:
L_132374:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132375
L_132381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_132382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132382
.p2align 0x4
.long 0x1BF7
L_132382:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_132375:
	movl 0xAC(%rbp),%ecx
L_132376:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_128797
L_132377:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_132379
L_132380:
	movl %ecx,0x0(%r15)
L_132379:
	movq $0x1AD5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movl 0xA8(%rbp),%ecx
	movq $0x1,%r15
	jmp L_129394
.p2align 0x4
L_428547:
L_132386:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_128797
L_132387:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_128823
L_132389:
	movl %ecx,0x0(%r15)
	jmp L_128823
.p2align 0x4
L_428550:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_132371
.p2align 0x4
L_428551:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_132371
.p2align 0x4
L_428552:
L_132390:
	xorl %ecx,%ecx
	jmp L_132376
.p2align 0x4
.long 0x1C26
L_130212:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movl 0x380(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130213
L_130252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x380,%rbp
	leaq (L_130253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130253
.p2align 0x4
.long 0x1C2A
L_130253:
	addq $0xFFFFFFFFFFFFFC80,%rbp
L_130213:
	movl 0xAC(%rbp),%r15d
	testl %r15d,%r15d
	jnz keep_2
L_130214:
	movq 0xB8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x27,%r14
	je L_428560
	cmpq $0x29,%r14
	je L_428556
L_130215:
	andq $0x3,%r15
	jnz keep_2
L_130216:
	jmp keep_2
.p2align 0x4
L_428556:
L_130236:
	movq 0xD0(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_428557
L_130237:
	notq %r14
	orq $0x1,%r14
	movq %r14,0xB8(%rbp)
intInf_11:
	movq 0xB8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_130238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_428557:
L_130244:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%rsi
	decq %rsi
	jo keep_2
L_130245:
	movq 0x148(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	imulq %r11,%rsi
	addq $0x7,%r13
	addq %r11,%r13
	addq %r13,%rsi
	movq %rsi,%r15
	movq %rsi,0xB8(%rbp)
	addq $0x0,%r15
	jc L_130096
L_130246:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_130247
L_130249:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x380,%rbp
	leaq (L_130250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130250
.p2align 0x4
.long 0x1C29
L_130250:
	addq $0xFFFFFFFFFFFFFC80,%rbp
L_130247:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xB8(%rbp),%rsi
	movq 0xD0(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_130248:
	movq %rax,0xB8(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_11
.p2align 0x4
L_428560:
L_130217:
	leaq L_130225(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %rbp,%r14
	addq $0x30,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0xD0(%rbp),%r14
	movq %r14,0x380(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,0x388(%rbp)
	addq $0x380,%rbp
	leaq (L_130218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x1BF8
L_130318:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130319
L_130320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_130321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130321
.p2align 0x4
.long 0x1BF7
L_130321:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_130319:
	movq 0xB8(%rbp),%r15
L_130175:
	cmpq $0x1,%r15
	je keep_2
L_130176:
	movq 0x0(%r15),%r15
	jmp L_129485
.p2align 0x4
.long 0x920
L_130225:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130226
L_130234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_130235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130235
.p2align 0x4
.long 0x1C25
L_130235:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_130226:
	movq 0xB8(%rbp),%r15
	cmpq $0x1,%r15
	je keep_2
	cmpq $0x3,%r15
	je keep_2
	cmpq $0x6,%r15
	je keep_2
	cmpq $0x7,%r15
	je keep_2
L_130227:
	andq $0x3,%r15
	jnz L_130228
L_130229:
L_130228:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C3A
L_130258:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movl 0x380(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130259
L_130312:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x380,%rbp
	leaq (L_130313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130313
.p2align 0x4
.long 0x1C41
L_130313:
	addq $0xFFFFFFFFFFFFFC80,%rbp
L_130259:
	movl 0xAC(%rbp),%r15d
	testl %r15d,%r15d
	jnz keep_2
L_130260:
	movq 0xB8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1F,%r14
	je L_428567
	cmpq $0x25,%r14
	je L_428566
	cmpq $0x2F,%r14
	je L_428565
L_130261:
	andq $0x3,%r15
	jnz keep_2
L_130262:
	jmp keep_2
.p2align 0x4
L_428565:
L_130293:
	movq 0xE0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x170(%rbp)
	leaq L_130225(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %rbp,%r14
	addq $0x30,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x170,%rbp
	leaq (L_130294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428566:
L_130272:
	movq 0xF8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x380(%rbp)
	addq $0x380,%rbp
	leaq (L_130273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428567:
L_130263:
	movq 0xE0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x380(%rbp)
	addq $0x380,%rbp
	leaq (L_130264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1BF8
L_131255:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131256
L_131259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131260
.p2align 0x4
.long 0x1BF7
L_131260:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131256:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_131257:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	jmp L_129485
.p2align 0x4
.long 0x1C06
L_131214:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movl 0xF8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131215
L_131228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_131229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131229
.p2align 0x4
.long 0x1C7C
L_131229:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_131215:
	movl 0xAC(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_428570
L_131216:
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x18F8)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (bug_385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428570:
L_131220:
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xF8(%rbp)
	addq $0x18,%r12
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xE0(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_131221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x1C43
L_131180:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movl 0xAC(%rbp),%ecx
wordOrOverflow_2:
	movl %ecx,0x108(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x108,%rbp
	leaq (L_130369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
.long 0x1C79
L_131182:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_131183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1BF8
word_42:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131148
L_131149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_131150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131150
.p2align 0x4
.long 0x1C42
L_131150:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_131148:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
realOpt_36:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131115
L_131118:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131119
.p2align 0x4
.long 0x1BF7
L_131119:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131115:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_131116:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C01
L_131084:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	testl %r15d,%r15d
	jz L_129567
L_131086:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_131087:
	movl %eax,%ecx
	jmp bool_1
.p2align 0x4
.long 0x1C0F
L_131048:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movl 0xF0(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	leaq L_130225(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %rbp,%r14
	addq $0x30,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0xF0(%rbp)
	movq $0x3,0xF8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF0,%rbp
	leaq (L_131049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C00
L_131054:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_131055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1BF8
word_40:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131022
L_131023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_131024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131024
.p2align 0x4
.long 0x1C42
L_131024:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_131022:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
bool_2:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%ecx
	movl %ecx,0xAC(%rbp)
	jmp bool_1
.p2align 0x4
.long 0x1C16
L_130947:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0xF8(%rbp)
	testl %r15d,%r15d
	jnz L_428576
L_130948:
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1968)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (bug_384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428576:
L_130952:
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_428577
L_130953:
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14),%r15
L_130954:
	movq 0xD0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r15,%r14
	movq %r11,%r15
L_130955:
	movq %r15,0x100(%rbp)
	movq %r14,0x108(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xE0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x100,%rbp
	leaq (L_130956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_428577:
L_130963:
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_130964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1C43
L_130916:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movl 0xAC(%rbp),%ecx
	jmp wordOrOverflow_2
.p2align 0x4
.long 0x1C71
L_130918:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_130919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1C6C
L_130879:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq %r15,0x108(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_130880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x1C6B
L_130855:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0x108(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_130856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x1C66
L_130820:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	leaq L_130225(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %rbp,%r14
	addq $0x30,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x100(%rbp)
	movq $0x3,0x108(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x100,%rbp
	leaq (L_130821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1BF8
word_39:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130793
L_130794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_130795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130795
.p2align 0x4
.long 0x1C42
L_130795:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_130793:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C5E
L_130745:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movl 0x108(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	testl %r15d,%r15d
	jnz L_428579
L_130746:
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1978)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (bug_383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428579:
L_130750:
	movl 0xAC(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_428580
L_130751:
	movq 0xB8(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0xD8(%rbp),%r15
L_130752:
	movq %r15,0x108(%rbp)
	movq %r14,0x110(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xE8(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x108,%rbp
	leaq (L_130753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_428580:
L_130760:
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_130761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1C5E
L_130696:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movl 0x108(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	testl %r15d,%r15d
	jnz L_428581
L_130697:
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1988)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (bug_382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428581:
L_130701:
	movl 0xAC(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_428582
L_130702:
	movq 0xB8(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0xD8(%rbp),%r15
L_130703:
	movq %r15,0x108(%rbp)
	movq %r14,0x110(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xE8(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x108,%rbp
	leaq (L_130704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_428582:
L_130711:
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_130712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1C54
L_130569:
	addq $0xFFFFFFFFFFFFFDC8,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x238(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x240(%rbp)
	addq $0x238,%rbp
	leaq (L_130570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_0
.p2align 0x4
.long 0x920
L_130588:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_130589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130589
.p2align 0x4
.long 0x1C57
L_130589:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl %eax,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130590
L_130605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_130606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130606
.p2align 0x4
.long 0x1C57
L_130606:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_130590:
	movl 0xB8(%rbp),%r15d
	testl %r15d,%r15d
	jz L_428586
L_130591:
	cmpl $0x1,%r15d
	je L_428585
L_130592:
	cmpl $0x2,%r15d
	je L_428584
L_130593:
	cmpl $0x3,%r15d
	jne L_130566
L_130595:
	xorb %dl,%dl
L_130596:
	movb 0xAC(%rbp),%r15b
	cmpb %dl,%r15b
	je keep_2
L_130597:
	leaq L_130225(%rip),%r14
	movq %r14,0x28(%rbp)
	movb %r15b,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (keep_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_428584:
L_130602:
	movb $0x1,%dl
	jmp L_130596
.p2align 0x4
L_428585:
L_130603:
	movb $0x2,%dl
	jmp L_130596
.p2align 0x4
L_428586:
L_130604:
	movb $0x3,%dl
	jmp L_130596
.p2align 0x4
.long 0x1C59
L_130621:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	leaq L_130657(%rip),%r15
	movq %r15,0x28(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x228(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x230(%rbp)
	addq $0x228,%rbp
	leaq (L_130622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_1
.p2align 0x4
.long 0x920
L_130640:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_130641:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_130642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130642
.p2align 0x4
.long 0x1C57
L_130642:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl %eax,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130643
L_130655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_130656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130656
.p2align 0x4
.long 0x1C57
L_130656:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_130643:
	movl 0xB8(%rbp),%r15d
	testl %r15d,%r15d
	jz L_428591
L_130644:
	cmpl $0x1,%r15d
	je L_428590
L_130645:
	cmpl $0x2,%r15d
	je L_428589
L_130646:
	cmpl $0x3,%r15d
	jne L_130566
L_130648:
	xorb %dl,%dl
L_130649:
	movb 0xAC(%rbp),%r15b
	cmpb %r15b,%dl
	je keep_2
L_130650:
	leaq L_130225(%rip),%r14
	movq %r14,0x28(%rbp)
	movb %r15b,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (keep_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_428589:
L_130652:
	movb $0x1,%dl
	jmp L_130649
.p2align 0x4
L_428590:
L_130653:
	movb $0x2,%dl
	jmp L_130649
.p2align 0x4
L_428591:
L_130654:
	movb $0x3,%dl
	jmp L_130649
.p2align 0x4
.long 0x1C5C
L_130662:
	addq $0xFFFFFFFFFFFFFDC8,%rbp
	movq 0x238(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130663
L_130666:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x238,%rbp
	leaq (L_130667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130667
.p2align 0x4
.long 0x1C5D
L_130667:
	addq $0xFFFFFFFFFFFFFDC8,%rbp
L_130663:
	movb 0xAC(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_130611
	jmp L_130558
.p2align 0x4
.long 0x1C4F
L_130521:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq %r15,0x258(%rbp)
	addq $0x258,%rbp
	leaq (L_130522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C4F
L_130481:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq %r15,0x258(%rbp)
	addq $0x258,%rbp
	leaq (L_130482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1BF8
word_38:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130451
L_130452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_130453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130453
.p2align 0x4
.long 0x1C42
L_130453:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_130451:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C06
L_130411:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movl 0xF8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	testl %r15d,%r15d
	jnz L_428596
L_130412:
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1908)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (bug_381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428596:
L_130416:
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xF8(%rbp)
	leaq L_130225(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xE0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_130417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1C43
L_130368:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movl 0xAC(%rbp),%ecx
	jmp wordOrOverflow_2
.p2align 0x4
.long 0x1C46
L_130382:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_130383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1BF8
word_37:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130336
L_130337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_130338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130338
.p2align 0x4
.long 0x1C42
L_130338:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_130336:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
realOpt_53:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132281
L_132284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_132285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132285
.p2align 0x4
.long 0x1BF7
L_132285:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_132281:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_132282:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BFC
L_129539:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0xE8(%rbp)
	movq $0x3,0xF0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xE8,%rbp
	leaq (L_129540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1BF8
realOpt_52:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132187
L_132190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_132191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132191
.p2align 0x4
.long 0x1BF7
L_132191:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_132187:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_132188:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
realOpt_51:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132150
L_132153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_132154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132154
.p2align 0x4
.long 0x1BF7
L_132154:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_132150:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_132151:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
realOpt_50:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_132113
L_132116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_132117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_132117
.p2align 0x4
.long 0x1BF7
L_132117:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_132113:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_132114:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
realOpt_49:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131973
L_131976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131977
.p2align 0x4
.long 0x1BF7
L_131977:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131973:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_131974:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
realOpt_48:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131941
L_131944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131945
.p2align 0x4
.long 0x1BF7
L_131945:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131941:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_131942:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
realOpt_47:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131883
L_131886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131887
.p2align 0x4
.long 0x1BF7
L_131887:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131883:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_131884:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
realOpt_46:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131856
L_131859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131860
.p2align 0x4
.long 0x1BF7
L_131860:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131856:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_131857:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
realOpt_45:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131829
L_131832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131833
.p2align 0x4
.long 0x1BF7
L_131833:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131829:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_131830:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
realOpt_44:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131802
L_131805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131806
.p2align 0x4
.long 0x1BF7
L_131806:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131802:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_131803:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
realOpt_43:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131775
L_131778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131779
.p2align 0x4
.long 0x1BF7
L_131779:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131775:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_131776:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
realOpt_42:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131748
L_131751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131752
.p2align 0x4
.long 0x1BF7
L_131752:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131748:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_131749:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
realOpt_41:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131721
L_131724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131725
.p2align 0x4
.long 0x1BF7
L_131725:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131721:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_131722:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
realOpt_40:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131694
L_131697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131698
.p2align 0x4
.long 0x1BF7
L_131698:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131694:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_131695:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
realOpt_39:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131662
L_131665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131666
.p2align 0x4
.long 0x1BF7
L_131666:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131662:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_131663:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
realOpt_38:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131635
L_131638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131639
.p2align 0x4
.long 0x1BF7
L_131639:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131635:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_131636:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
realOpt_37:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131608
L_131611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131612
.p2align 0x4
.long 0x1BF7
L_131612:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131608:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_131609:
	movq 0x0(%r14),%r15
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C82
L_131569:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movl 0x380(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	leaq L_130225(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %rbp,%r14
	addq $0x30,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x380(%rbp)
	movq $0x3,0x388(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x380,%rbp
	leaq (L_131570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C28
L_131541:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131542
L_131545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131546
.p2align 0x4
.long 0x1BF7
L_131546:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131542:
	movslq 0xAC(%rbp),%r15
	movq 0xB8(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb keep_2
L_131544:
	movq 0x0(%r14,%r15,8),%r13
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_129485
.p2align 0x4
.long 0x1C62
L_131502:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xF8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_131503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C48
L_131510:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (bug_387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1C28
L_131473:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	testl %r15d,%r15d
	jz L_129567
L_131475:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_131476:
	movl %eax,%ecx
	jmp bool_1
.p2align 0x4
.long 0x1C28
L_131437:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	testl %r15d,%r15d
	jz L_129567
L_131439:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_131440:
	movl %eax,%ecx
	jmp bool_1
.p2align 0x4
.long 0x1BF8
L_131417:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131418
L_131421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131422
.p2align 0x4
.long 0x1BF7
L_131422:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131418:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je keep_2
L_131419:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	jmp L_129485
.p2align 0x4
.long 0x1C7E
L_131360:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movl 0x188(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	leaq L_130225(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %rbp,%r14
	addq $0x30,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x188(%rbp)
	movq $0x3,0x190(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x188,%rbp
	leaq (L_131361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C7D
L_131323:
	addq $0xFFFFFFFFFFFFFCC0,%rbp
	movq 0x340(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x330(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_131324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C48
L_131331:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (bug_386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1C26
L_130073:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movl 0x380(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130074
L_130103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x380,%rbp
	leaq (L_130104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130104
.p2align 0x4
.long 0x1C2A
L_130104:
	addq $0xFFFFFFFFFFFFFC80,%rbp
L_130074:
	movl 0xAC(%rbp),%r15d
	testl %r15d,%r15d
	jnz keep_2
L_130075:
	movq 0xB8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x27,%r14
	je L_428624
	cmpq $0x29,%r14
	je L_428619
L_130076:
	andq $0x3,%r15
	jnz keep_2
L_130077:
	jmp keep_2
.p2align 0x4
L_428619:
L_130086:
	movq 0xD0(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_428620
L_130087:
	notq %r14
	orq $0x1,%r14
	movq %r14,0xB8(%rbp)
intInf_10:
	movq 0xB8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_130088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_428620:
L_130094:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	decq %r13
	jo L_128791
L_130095:
	movq 0x148(%rbp),%r14
	movq 0x8(%r14),%rsi
	movq %rsi,%r11
	movq 0x0(%r14),%r10
	imulq %r13,%r11
	addq $0x7,%r10
	addq %r10,%rsi
	addq %rsi,%r11
	movq %r11,%rsi
	movq %r11,0xB8(%rbp)
	addq $0x0,%rsi
	jc L_130096
L_130097:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq %rsi,%r15
	jnb L_130098
L_130100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x380,%rbp
	leaq (L_130101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130101
.p2align 0x4
.long 0x1C29
L_130101:
	addq $0xFFFFFFFFFFFFFC80,%rbp
L_130098:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xB8(%rbp),%rsi
	movq 0xD0(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_130099:
	movq %rax,0xB8(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_10
.p2align 0x4
L_428624:
L_130078:
	movq 0xD0(%rbp),%r14
	movq %r14,0x380(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,0x388(%rbp)
	addq $0x380,%rbp
	leaq (L_130079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x1BF8
L_130173:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130174
L_130178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_130179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130179
.p2align 0x4
.long 0x1BF7
L_130179:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_130174:
	movq 0xB8(%rbp),%r15
	jmp L_130175
.p2align 0x4
.long 0x1C2B
L_130113:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movl 0x380(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130114
L_130167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x380,%rbp
	leaq (L_130168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130168
.p2align 0x4
.long 0x1C38
L_130168:
	addq $0xFFFFFFFFFFFFFC80,%rbp
L_130114:
	movl 0xAC(%rbp),%r15d
	testl %r15d,%r15d
	jnz keep_2
L_130115:
	movq 0xB8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1F,%r14
	je L_428629
	cmpq $0x25,%r14
	je L_428628
	cmpq $0x2F,%r14
	je L_428627
L_130116:
	andq $0x3,%r15
	jnz keep_2
L_130117:
	jmp keep_2
.p2align 0x4
L_428627:
L_130148:
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_130149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_428628:
L_130127:
	movq 0xF8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x380(%rbp)
	addq $0x380,%rbp
	leaq (L_130128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_428629:
L_130118:
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x380(%rbp)
	addq $0x380,%rbp
	leaq (L_130119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C23
L_129966:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movl 0x380(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129967
L_130022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x380,%rbp
	leaq (L_130023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130023
.p2align 0x4
.long 0x1C24
L_130023:
	addq $0xFFFFFFFFFFFFFC80,%rbp
L_129967:
	movq 0xB8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1D,%r14
	je L_428657
	cmpq $0x1E,%r14
	je L_428655
	cmpq $0x1F,%r14
	je L_428652
	cmpq $0x23,%r14
	je L_428649
	cmpq $0x25,%r14
	je L_428647
	cmpq $0x26,%r14
	je L_428643
	cmpq $0x2A,%r14
	je L_428641
	cmpq $0x2B,%r14
	je L_428638
	cmpq $0x2D,%r14
	je L_428635
	cmpq $0x2E,%r14
	je L_428633
	cmpq $0x33,%r14
	je L_428631
L_129968:
	andq $0x3,%r15
	jnz keep_2
L_129969:
	jmp keep_2
.p2align 0x4
L_428631:
L_130017:
	movl 0xE0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_428632
L_130018:
	cmpl $0xFFFFFFFF,%r14d
	jne keep_2
L_130020:
	movq $0x2657,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x2657,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xD8(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xB8(%rbp)
	movq $0x29,0xC8(%rbp)
	xorl %ecx,%ecx
	jmp L_129605
.p2align 0x4
L_428632:
L_130021:
	movq 0xD8(%rbp),%r13
	xchgq %r13,%r15
	jmp L_129450
.p2align 0x4
L_428633:
L_130012:
	movl 0xE0(%rbp),%r14d
	testl %r14d,%r14d
	jnz keep_2
L_130014:
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_428634
L_130015:
	movq $0x2657,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x2657,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xD8(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xB8(%rbp)
	movq $0x27,0xC8(%rbp)
	xorl %ecx,%ecx
	jmp L_129605
.p2align 0x4
L_428634:
L_130016:
	movq 0xD8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_129450
.p2align 0x4
L_428635:
L_130005:
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jz keep_2
L_130007:
	movl 0xE0(%rbp),%r14d
	cmpl $0xFFFFFFFF,%r14d
	je L_129492
L_130008:
	cmpl $0x1,%r14d
	je L_129492
	jmp keep_2
.p2align 0x4
L_428638:
L_130000:
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jz keep_2
L_130002:
	movl 0xE0(%rbp),%r14d
	cmpl $0x1,%r14d
	je L_428640
	cmpl $0xFFFFFFFF,%r14d
	je L_428639
	jmp keep_2
.p2align 0x4
L_428639:
L_130004:
	movq $0x2657,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x2657,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xD8(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xB8(%rbp)
	movq $0x27,0xC8(%rbp)
	xorl %ecx,%ecx
	jmp L_129605
.p2align 0x4
L_428640:
L_130003:
	movq 0xD8(%rbp),%r13
	xchgq %r13,%r15
	jmp L_129450
.p2align 0x4
L_428641:
L_129995:
	movl 0xE0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_428642
L_129996:
	cmpl $0xFFFFFFFF,%r14d
	jne keep_2
L_129982:
	movl $0xFFFFFFFF,%ecx
	jmp x_478
.p2align 0x4
L_428642:
L_129999:
	movq 0xD8(%rbp),%r13
	xchgq %r13,%r15
	jmp L_129450
.p2align 0x4
L_428643:
L_129992:
	movl 0xE0(%rbp),%r14d
	cmpl $0x0,%r14d
	je L_129492
	cmpl $0x1,%r14d
	je L_428645
	cmpl $0xFFFFFFFF,%r14d
	je L_428644
	jmp keep_2
.p2align 0x4
L_428644:
L_129994:
	movq $0x2657,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x2657,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xD8(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xB8(%rbp)
	movq $0x27,0xC8(%rbp)
	xorl %ecx,%ecx
	jmp L_129605
.p2align 0x4
L_428645:
L_129993:
	movq 0xD8(%rbp),%r13
	xchgq %r13,%r15
	jmp L_129450
.p2align 0x4
L_428647:
L_129989:
	movl 0xE0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_129492
	jmp keep_2
.p2align 0x4
L_428649:
L_129984:
	movl 0xE0(%rbp),%r14d
	cmpl $0xFFFFFFFF,%r14d
	je L_129481
L_129985:
	cmpl $0x1,%r14d
	je L_129481
	jmp keep_2
.p2align 0x4
L_428652:
L_129978:
	movl 0xE0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_129492
L_129979:
	cmpl $0xFFFFFFFF,%r14d
	je L_129982
	jmp keep_2
.p2align 0x4
L_428655:
L_129973:
	movl 0xE0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_129492
L_129974:
	cmpl $0xFFFFFFFF,%r14d
	jne keep_2
L_129976:
	movq 0xD8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_129450
.p2align 0x4
L_428657:
L_129970:
	movl 0xE0(%rbp),%r14d
	testl %r14d,%r14d
	jnz keep_2
L_129972:
	movq 0xD8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_129450
.p2align 0x4
.long 0x920
L_130024:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130025
L_130030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_130031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130031
.p2align 0x4
.long 0x1C25
L_130031:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_130025:
	movq 0xB8(%rbp),%r15
	cmpq $0x3,%r15
	je keep_2
L_130026:
	andq $0x3,%r15
	jnz L_130027
L_130028:
L_130027:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1BFC
L_129915:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129916
L_129958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_129959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129959
.p2align 0x4
.long 0x1C08
L_129959:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_129916:
	movq 0xE0(%rbp),%r15
	movq %r15,%r14
	andq $0x7,%r14
	cmpq $0x1,%r14
	je L_428668
	cmpq $0x2,%r14
	je keep_2
	cmpq $0x3,%r14
	je keep_2
	cmpq $0x5,%r14
	je keep_2
	cmpq $0x6,%r14
	je L_428663
L_129917:
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	movq 0xB8(%rbp),%r15
	movq %r15,%r11
	andq $0xFF,%r11
	cmpq $0x79,%r11
	je L_428662
	cmpq $0x7F,%r11
	je L_428661
L_129918:
	andq $0x3,%r15
	jnz keep_2
L_129919:
	jmp keep_2
.p2align 0x4
L_428661:
L_129927:
	shrq $0x8,%r15
	movb %r15b,%r11b
	testl %r14d,%r14d
	jnz keep_2
L_129928:
	cmpl $0x2,%r13d
	jne keep_2
L_129930:
	movzbq %r11b,%r15
	shlq $0x8,%r15
	orq $0x77,%r15
	movq %r15,0xC8(%rbp)
	movq $0x2657,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0xD8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x2657,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xB8(%rbp)
	xorl %ecx,%ecx
	jmp L_129605
.p2align 0x4
L_428662:
L_129920:
	shrq $0x8,%r15
	movb %r15b,%r11b
	movl 0xAC(%rbp),%r15d
	testl %r15d,%r15d
	jz keep_2
L_129922:
	testl %r14d,%r14d
	jnz keep_2
L_129923:
	testl %r13d,%r13d
	jnz keep_2
L_129925:
	movzbq %r11b,%r15
	shlq $0x8,%r15
	orq $0x77,%r15
	movq %r15,0xC8(%rbp)
	movq $0x2657,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0xD8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x2657,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xB8(%rbp)
	xorl %ecx,%ecx
	jmp L_129605
.p2align 0x4
L_428663:
L_129947:
	shrq $0x3,%r15
	movl %r15d,%r14d
	movq 0xB8(%rbp),%r15
	movq %r15,%r13
	andq $0xFF,%r13
	cmpq $0x79,%r13
	je L_428666
	cmpq $0x7F,%r13
	je L_428664
L_129948:
	andq $0x3,%r15
	jnz keep_2
L_129949:
	jmp keep_2
.p2align 0x4
L_428664:
L_129955:
	shrq $0x8,%r15
	movb %r15b,%r11b
	testl %r14d,%r14d
	jz L_428665
L_129957:
	movzbq %r11b,%r15
	shlq $0x8,%r15
	orq $0x83,%r15
	movq %r15,0xC8(%rbp)
	movq $0x2657,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0xD8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq %r13,0xB8(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_129605
.p2align 0x4
L_428665:
L_129956:
	movq 0xD8(%rbp),%r15
	jmp L_129450
.p2align 0x4
L_428666:
L_129950:
	shrq $0x8,%r15
	movb %r15b,%r11b
	movl 0xAC(%rbp),%r15d
	testl %r15d,%r15d
	jz keep_2
L_129952:
	testl %r14d,%r14d
	jz L_428667
L_129954:
	movzbq %r11b,%r15
	shlq $0x8,%r15
	orq $0x83,%r15
	movq %r15,0xC8(%rbp)
	movq $0x2657,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0xD8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq %r13,0xB8(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_129605
.p2align 0x4
L_428667:
L_129953:
	movq 0xD8(%rbp),%r15
	jmp L_129450
.p2align 0x4
L_428668:
L_129932:
	movq 0xB8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x6B,%r13
	je L_428677
	cmpq $0x77,%r13
	je L_428676
	cmpq $0x79,%r13
	je L_428675
	cmpq $0x7A,%r13
	je L_428674
	cmpq $0x7D,%r13
	je L_428673
	cmpq $0x7E,%r13
	je L_428672
	cmpq $0x7F,%r13
	je L_428671
	cmpq $0x85,%r13
	je L_428670
	cmpq $0x87,%r13
	je L_428669
L_129933:
	andq $0x3,%r14
	jnz keep_2
L_129934:
	jmp keep_2
.p2align 0x4
L_428669:
L_129943:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0xD0(%rbp),%r11
	movq %r11,0x0(%r13)
	xchgq %r13,%r15
	jmp L_129485
.p2align 0x4
L_428670:
L_129942:
	movl $0x1,%ecx
	jmp bool_1
.p2align 0x4
L_428671:
L_129941:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0xD0(%rbp),%r11
	movq %r11,0x0(%r13)
	xchgq %r13,%r15
	jmp L_129485
.p2align 0x4
L_428672:
L_129940:
	xorl %ecx,%ecx
	jmp bool_1
.p2align 0x4
L_428673:
L_129939:
	xorl %ecx,%ecx
	jmp bool_1
.p2align 0x4
L_428674:
L_129938:
	xorl %ecx,%ecx
	jmp bool_1
.p2align 0x4
L_428675:
L_129937:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0xD0(%rbp),%r11
	movq %r11,0x0(%r13)
	xchgq %r13,%r15
	jmp L_129485
.p2align 0x4
L_428676:
L_129936:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0xD0(%rbp),%r11
	movq %r11,0x0(%r13)
	xchgq %r13,%r15
	jmp L_129485
.p2align 0x4
L_428677:
L_129935:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0xD0(%rbp),%r11
	movq %r11,0x0(%r13)
	xchgq %r13,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C0F
L_129882:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movl 0xF0(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xF0(%rbp)
	movq $0x3,0xF8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF0,%rbp
	leaq (L_129883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C00
L_129671:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xE0(%rbp)
	movq $0x3,0xE8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_129672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C0A
L_129680:
	addq $0xFFFFFFFFFFFFFCC0,%rbp
	movl 0x340(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0x340(%rbp)
	movq $0x3,0x348(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x350(%rbp)
	addq $0x340,%rbp
	leaq (L_129681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C1E
L_129828:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movl 0x108(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0x100(%rbp)
	movq $0x3,0x108(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x100,%rbp
	leaq (L_129829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C16
L_129847:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	decl %r15d
	movl %r15d,0x100(%rbp)
	movq $0x3,0x108(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x100,%rbp
	leaq (L_129848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C1E
L_129852:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movl 0x108(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0x100(%rbp)
	movq $0x3,0x108(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x100,%rbp
	leaq (L_129853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C16
L_129872:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	decl %r15d
	movl %r15d,0x100(%rbp)
	movq $0x3,0x108(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x100,%rbp
	leaq (L_129873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C00
L_129816:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129817
L_129820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_129821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129821
.p2align 0x4
.long 0x1C11
L_129821:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_129817:
	cmpq $0xFFFFFFFFFFFFFFFF,0xD8(%rbp)
	jne keep_2
L_129819:
	movq $0x2169,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0xC8(%rbp)
	movq $0x2657,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0xB8(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_129605
.p2align 0x4
.long 0x1C00
L_129802:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129803
L_129806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_129807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129807
.p2align 0x4
.long 0x1C11
L_129807:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_129803:
	cmpq $0xFFFFFFFFFFFFFFFF,0xD8(%rbp)
	jne keep_2
L_129805:
	movq $0x2167,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0xC8(%rbp)
	movq $0x2657,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0xB8(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_129605
.p2align 0x4
.long 0x1C0F
L_129786:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movl 0xF0(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xF0(%rbp)
	movq $0x3,0xF8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF0,%rbp
	leaq (L_129787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C00
L_129776:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129777
L_129780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_129781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129781
.p2align 0x4
.long 0x1C11
L_129781:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_129777:
	cmpq $0xFFFFFFFFFFFFFFFF,0xD8(%rbp)
	jne keep_2
L_129779:
	movq $0x2169,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0xC8(%rbp)
	movq $0x2657,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0xB8(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_129605
.p2align 0x4
.long 0x1C1C
L_129761:
	addq $0xFFFFFFFFFFFFFCC0,%rbp
	movq 0x340(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129762
L_129766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x340,%rbp
	leaq (L_129767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129767
.p2align 0x4
.long 0x1C1D
L_129767:
	addq $0xFFFFFFFFFFFFFCC0,%rbp
L_129762:
	cmpq $0xFFFFFFFFFFFFFFFF,0xD0(%rbp)
	je zero_4
	jmp keep_2
.p2align 0x4
.long 0x1C12
L_129734:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
	movl 0x248(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movslq %r15d,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0xF8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xE8(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xF0(%rbp)
	movq %r14,0x248(%rbp)
	addq $0x248,%rbp
	leaq (L_129735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C0F
L_129722:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movl 0xF0(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xF0(%rbp)
	movq $0x3,0xF8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF0,%rbp
	leaq (L_129723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C0F
L_129705:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movl 0xF0(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	movl %r15d,0xF0(%rbp)
	movq $0x3,0xF8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF0,%rbp
	leaq (L_129706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C06
L_129598:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movl 0xF8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xF8(%rbp)
	movq $0x3,0x100(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_129599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1BF8
L_129482:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129483
L_129489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_129490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129490
.p2align 0x4
.long 0x1BF9
L_129490:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_129483:
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jnz keep_2
L_129484:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_129485
.p2align 0x4
.long 0x1BFA
L_129529:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xE8(%rbp)
	movq $0x3,0xF0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xE8,%rbp
	leaq (L_129530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1BFA
L_129522:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xE8(%rbp)
	movq $0x3,0xF0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xE8,%rbp
	leaq (L_129523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1BFA
L_129515:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xE8(%rbp)
	movq $0x3,0xF0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xE8,%rbp
	leaq (L_129516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1BFA
L_129508:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xE8(%rbp)
	movq $0x3,0xF0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xE8,%rbp
	leaq (L_129509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1BFA
L_129501:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xE8(%rbp)
	movq $0x3,0xF0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xE8,%rbp
	leaq (L_129502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C02
L_129569:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movl 0x188(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0x188(%rbp)
	movq $0x3,0x190(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x188,%rbp
	leaq (L_129570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1BFF
L_129552:
	addq $0xFFFFFFFFFFFFFCC0,%rbp
	movq 0x340(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x330(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_129553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0xA1C
L_129560:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (bug_378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1B95
L_128843:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movl 0x148(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128844
L_129224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_129225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129225
.p2align 0x4
.long 0x1BDA
L_129225:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_128844:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x68(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1EA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x140(%rbp)
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_428684
L_128845:
	movq %r14,0x158(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x150(%rbp)
	addq $0x150,%rbp
	leaq (L_128846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_428684:
L_129219:
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_129220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1B98
L_128861:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movl 0x160(%rbp),%r15d
	movl %r15d,0x10C(%rbp)
	cmpl $0x8,%r15d
	je L_428689
	cmpl $0x10,%r15d
	je L_428688
	cmpl $0x20,%r15d
	je L_428687
	cmpl $0x40,%r15d
	je L_428686
L_128862:
	movq 0x150(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_128863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428686:
L_129196:
	movb $0x0,0x10C(%rbp)
	jmp L_128871
.p2align 0x4
L_428687:
L_129195:
	movb $0x1,0x10C(%rbp)
	jmp L_128871
.p2align 0x4
L_428688:
L_129194:
	movb $0x2,0x10C(%rbp)
	jmp L_128871
.p2align 0x4
L_428689:
L_128870:
	movb $0x3,0x10C(%rbp)
	jmp L_128871
.p2align 0x4
.long 0x1B99
L_128874:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movl 0x158(%rbp),%r15d
	movl %r15d,0x150(%rbp)
	cmpl $0x8,%r15d
	je L_428693
	cmpl $0x10,%r15d
	je L_428692
	cmpl $0x20,%r15d
	je L_428691
	cmpl $0x40,%r15d
	je L_428690
L_128875:
	movq 0x148(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_128876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428690:
L_129184:
	movb $0x0,0x10D(%rbp)
	jmp L_128884
.p2align 0x4
L_428691:
L_129183:
	movb $0x1,0x10D(%rbp)
	jmp L_128884
.p2align 0x4
L_428692:
L_129182:
	movb $0x2,0x10D(%rbp)
	jmp L_128884
.p2align 0x4
L_428693:
L_128883:
	movb $0x3,0x10D(%rbp)
	jmp L_128884
.p2align 0x4
.long 0x1B9A
L_128893:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x118(%rbp)
	movb $0xA,0x138(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x138,%rbp
	leaq (L_128894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1599
.p2align 0x4
.long 0x1C28
L_130238:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130239
L_130242:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_130243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130243
.p2align 0x4
.long 0x1BF7
L_130243:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_130239:
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jnz keep_2
L_130240:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_129485
.p2align 0x4
.long 0x1C27
L_130218:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movq 0x380(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_130219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x1C3F
L_130294:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movl 0x170(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpl $0x2,%r15d
	je L_428701
	cmpl $0x8,%r15d
	je L_428700
	cmpl $0xA,%r15d
	je L_428699
	cmpl $0x10,%r15d
	je L_428695
L_130295:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1A40)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428695:
L_130310:
	xorb %dl,%dl
L_130297:
	movq 0x158(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	cmpb $0x1,%dl
	je L_428698
	cmpb $0x2,%dl
	je L_428697
	cmpb $0x3,%dl
	je L_428696
L_130298:
L_130299:
	movq %r15,0x178(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_130300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428696:
	movq %r13,%r15
	jmp L_130299
.p2align 0x4
L_428697:
L_130306:
	movq %r10,%r15
	jmp L_130299
.p2align 0x4
L_428698:
L_130305:
	movq %r11,%r15
	jmp L_130299
.p2align 0x4
L_428699:
L_130309:
	movb $0x1,%dl
	jmp L_130297
.p2align 0x4
L_428700:
L_130308:
	movb $0x2,%dl
	jmp L_130297
.p2align 0x4
L_428701:
L_130296:
	movb $0x3,%dl
	jmp L_130297
.p2align 0x4
.long 0x1C2D
L_130273:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movl 0x380(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	leaq L_130225(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %rbp,%r14
	addq $0x30,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x380(%rbp)
	movq $0x3,0x388(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x380,%rbp
	leaq (L_130274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C2C
L_130264:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movl 0x380(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	leaq L_130225(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %rbp,%r14
	addq $0x30,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x380(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x388(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x380,%rbp
	leaq (L_130265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1487
.p2align 0x4
.long 0x1C48
bug_385:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131217
L_131218:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_131219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131219
.p2align 0x4
.long 0x1C49
L_131219:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_131217:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C4A
L_131221:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xD8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_131222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C44
L_130369:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movl 0x108(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130370
L_130379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_130380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130380
.p2align 0x4
.long 0x1C45
L_130380:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_130370:
	movl 0xAC(%rbp),%r15d
	testl %r15d,%r15d
	jz keep_2
L_130372:
	movq 0xF8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_130373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C7A
L_131183:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131184
L_131185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_131186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131186
.p2align 0x4
.long 0x1C7B
L_131186:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_131184:
	movq 0xB8(%rbp),%r15
	movq 0xD8(%rbp),%r14
	jmp L_131179
.p2align 0x4
.long 0x1C10
L_131049:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,0xF0(%rbp)
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (word_41+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C6E
L_131055:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movl 0xF8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xF8(%rbp)
	movq $0x3,0x100(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_131056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C48
bug_384:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130949
L_130950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_130951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130951
.p2align 0x4
.long 0x1C49
L_130951:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_130949:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C73
L_130956:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xD8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_130957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C77
L_130964:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_428706
L_130965:
	jmp L_130954
.p2align 0x4
L_428706:
L_130966:
	movq 0xD0(%rbp),%r14
	movq %r14,0x100(%rbp)
	movq 0xE8(%rbp),%r14
	movq %r14,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_130967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1C72
L_130919:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xD8(%rbp),%r14
	jmp L_130915
.p2align 0x4
.long 0x1C6D
L_130880:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0xF8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xE0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xE8(%rbp)
	movq %r14,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_130881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C43
L_130856:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movl $0x1,%ecx
	jmp wordOrOverflow_2
.p2align 0x4
.long 0x1C67
L_130821:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xD8(%rbp),%r14
	movq %r14,0xF8(%rbp)
	movq 0xF0(%rbp),%r14
	movq %r14,0x100(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_130822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C48
bug_383:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130747
L_130748:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_130749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130749
.p2align 0x4
.long 0x1C49
L_130749:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_130747:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C5F
L_130753:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xE0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_130754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C64
L_130761:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movl 0xAC(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_428708
L_130762:
	movq 0xD8(%rbp),%r15
	jmp L_130752
.p2align 0x4
L_428708:
L_130763:
	movq 0xD0(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_130764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1C48
bug_382:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130698
L_130699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_130700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130700
.p2align 0x4
.long 0x1C49
L_130700:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_130698:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C5F
L_130704:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xE0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_130705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C64
L_130712:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movl 0xAC(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_428710
L_130713:
	movq 0xD8(%rbp),%r15
	jmp L_130703
.p2align 0x4
L_428710:
L_130714:
	movq 0xD0(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_130715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1C54
L_130570:
	addq $0xFFFFFFFFFFFFFDC8,%rbp
	movsd 0x238(%rbp),%xmm15
	movsd %xmm15,0xD0(%rbp)
	movb $0x1,0x238(%rbp)
	addq $0x238,%rbp
	leaq (L_130571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x1C48
keep_3:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb keep_2
L_130599:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_130600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130600
.p2align 0x4
.long 0x1C57
L_130600:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp keep_2
.p2align 0x4
.long 0x1C59
L_130622:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movss 0x228(%rbp),%xmm15
	movss %xmm15,0xD0(%rbp)
	leaq L_130640(%rip),%r15
	movq %r15,0x28(%rbp)
	movb $0x1,0x228(%rbp)
	addq $0x228,%rbp
	leaq (L_130623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x920
L_130657:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_130641
.p2align 0x4
.long 0x1C4F
L_130522:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movl 0x258(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x258(%rbp)
	addq $0x258,%rbp
	leaq (L_130523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C4F
L_130482:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movl 0x258(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x258(%rbp)
	addq $0x258,%rbp
	leaq (L_130483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C48
bug_381:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130413
L_130414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_130415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130415
.p2align 0x4
.long 0x1C49
L_130415:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_130413:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C4A
L_130417:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xD8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_130418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C47
L_130383:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xD8(%rbp),%r14
	jmp L_130367
.p2align 0x4
.long 0x1BFD
L_129540:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_129541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C83
L_131570:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movq 0x380(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq %r15,0x380(%rbp)
	movq $0x3,0x388(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x380,%rbp
	leaq (L_131571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C80
L_131503:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movl 0xF0(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xF0(%rbp)
	movq $0x3,0xF8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF0,%rbp
	leaq (L_131504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C48
bug_387:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131511
L_131512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_131513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131513
.p2align 0x4
.long 0x1C49
L_131513:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_131511:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C7F
L_131361:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq %r15,0x188(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x188,%rbp
	leaq (L_131362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1BFC
L_131324:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xE8(%rbp)
	movq $0x3,0xF0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xE8,%rbp
	leaq (L_131325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C48
bug_386:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131332
L_131333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_131334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131334
.p2align 0x4
.long 0x1C49
L_131334:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_131332:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C28
L_130088:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130089
L_130092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_130093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130093
.p2align 0x4
.long 0x1BF7
L_130093:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_130089:
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jnz keep_2
L_130090:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_129485
.p2align 0x4
.long 0x1C27
L_130079:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movq 0x380(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_130080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x1C34
L_130149:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movl 0x170(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpl $0x2,%r15d
	je L_428721
	cmpl $0x8,%r15d
	je L_428720
	cmpl $0xA,%r15d
	je L_428719
	cmpl $0x10,%r15d
	je L_428715
L_130150:
	movq (globalObjptr+0x1A40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428715:
L_130165:
	xorb %dl,%dl
L_130152:
	movq 0x158(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	cmpb $0x1,%dl
	je L_428718
	cmpb $0x2,%dl
	je L_428717
	cmpb $0x3,%dl
	je L_428716
L_130153:
L_130154:
	movq %r15,0x178(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_130155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428716:
	movq %r13,%r15
	jmp L_130154
.p2align 0x4
L_428717:
L_130161:
	movq %r10,%r15
	jmp L_130154
.p2align 0x4
L_428718:
L_130160:
	movq %r11,%r15
	jmp L_130154
.p2align 0x4
L_428719:
L_130164:
	movb $0x1,%dl
	jmp L_130152
.p2align 0x4
L_428720:
L_130163:
	movb $0x2,%dl
	jmp L_130152
.p2align 0x4
L_428721:
L_130151:
	movb $0x3,%dl
	jmp L_130152
.p2align 0x4
.long 0x1C2D
L_130128:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movl 0x380(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0x380(%rbp)
	movq $0x3,0x388(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x380,%rbp
	leaq (L_130129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C2C
L_130119:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movl 0x380(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0x380(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x388(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x380,%rbp
	leaq (L_130120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1487
.p2align 0x4
.long 0x1C10
L_129883:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq $0x3,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_129884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1C01
L_129672:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD8(%rbp)
	movq 0xD0(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_129673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C0B
L_129681:
	addq $0xFFFFFFFFFFFFFCC0,%rbp
	movq 0x340(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq %r15,0x340(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x348(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x350(%rbp)
	addq $0x340,%rbp
	leaq (L_129682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C18
L_129829:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq $0x3,0xE8(%rbp)
	movq 0xF0(%rbp),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_129830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1C21
L_129848:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq %r15,0x100(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_129849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x1C18
L_129853:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq $0x3,0xE8(%rbp)
	movq 0xF0(%rbp),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_129854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1C21
L_129873:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq %r15,0x100(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_129874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x1C10
L_129787:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq $0x3,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_129788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1C13
L_129735:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
	movl 0x248(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0x248(%rbp)
	movq $0x3,0x250(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x258(%rbp)
	addq $0x248,%rbp
	leaq (L_129736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C10
L_129723:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq $0x3,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_129724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1C10
L_129706:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq $0x3,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_129707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1C07
L_129599:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq %r15,0xF0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x3,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_129600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1BFB
L_129530:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq $0x3,0xE0(%rbp)
	movq 0xD8(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_129531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1BFB
L_129523:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq $0x1,0xE0(%rbp)
	movq 0xD8(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_129524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1BFB
L_129516:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq $0x1,0xE0(%rbp)
	movq 0xD8(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_129517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1BFB
L_129509:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq $0x1,0xE0(%rbp)
	movq 0xD8(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_129510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1BFB
L_129502:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq $0x1,0xE0(%rbp)
	movq 0xD8(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_129503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C03
L_129570:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0x188(%rbp)
	movq $0x1,0x190(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x188,%rbp
	leaq (L_129571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C00
L_129553:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xE0(%rbp)
	movq $0x3,0xE8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_129554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xA1C
bug_378:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129561
L_129562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_129563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129563
.p2align 0x4
.long 0x7BA
L_129563:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_129561:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B96
L_128846:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128847
L_129217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_129218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129218
.p2align 0x4
.long 0x1BD7
L_129218:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_128847:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1147,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x148(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x138(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_428723
L_128848:
	movq %r14,0x160(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_128849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_428723:
L_129212:
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_129213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xA1C
L_129220:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (bug_377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xA1C
L_128863:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128864
L_128868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_128869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128869
.p2align 0x4
.long 0x7BA
L_128869:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_128864:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (bug_369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xA1C
L_128876:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128877
L_128881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_128882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128882
.p2align 0x4
.long 0x7BA
L_128882:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_128877:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (bug_370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1B9B
L_128894:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x130(%rbp)
	movb $0x9,0x140(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x140,%rbp
	leaq (L_128895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1599
.p2align 0x4
.long 0x1C28
L_130219:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130220
L_130223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_130224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130224
.p2align 0x4
.long 0x1BF7
L_130224:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_130220:
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jnz keep_2
L_130221:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_129485
.p2align 0x4
.long 0x1C40
L_130300:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_130301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1266
.p2align 0x4
.long 0x1C2E
L_130274:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movq 0x380(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0x380(%rbp)
	movq $0x101,0x388(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x380,%rbp
	leaq (L_130275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C27
L_130265:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movq 0x380(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_130266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x1C4B
L_131222:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movl 0xF8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xF8(%rbp)
	movq $0x3,0x100(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_131223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C0F
L_130373:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movl 0xF0(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xF0(%rbp)
	movq $0x3,0xF8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF0,%rbp
	leaq (L_130374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C1A
word_41:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131050
L_131051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_131052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131052
.p2align 0x4
.long 0x1C42
L_131052:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_131050:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C6F
L_131056:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0xE0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (word_41+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C20
L_130957:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0x100(%rbp)
	movq $0x3,0x108(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x100,%rbp
	leaq (L_130958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C78
L_130967:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xB8(%rbp),%r14
	jmp L_130955
.p2align 0x4
.long 0x1C6E
L_130881:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movl 0xF8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xF8(%rbp)
	movq $0x3,0x100(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_130882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C68
L_130822:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130823
L_130824:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_130825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130825
.p2align 0x4
.long 0x1C69
L_130825:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_130823:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C60
L_130754:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movl 0x108(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0x108(%rbp)
	movq $0x3,0x110(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x108,%rbp
	leaq (L_130755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C65
L_130764:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xB8(%rbp),%r14
	jmp L_130752
.p2align 0x4
.long 0x1C60
L_130705:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movl 0x108(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0x108(%rbp)
	movq $0x3,0x110(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x108,%rbp
	leaq (L_130706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C65
L_130715:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xB8(%rbp),%r14
	jmp L_130703
.p2align 0x4
.long 0x1C54
L_130571:
	addq $0xFFFFFFFFFFFFFDC8,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x238(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x240(%rbp)
	addq $0x238,%rbp
	leaq (L_130572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_0
.p2align 0x4
.long 0x1C59
L_130623:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	leaq L_130657(%rip),%r15
	movq %r15,0x28(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x228(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x230(%rbp)
	addq $0x228,%rbp
	leaq (L_130624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_1
.p2align 0x4
.long 0x1C50
L_130523:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movl 0x258(%rbp),%r15d
	movl %r15d,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130524
L_130532:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x258,%rbp
	leaq (L_130533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130533
.p2align 0x4
.long 0x1C52
L_130533:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
L_130524:
	movl 0xB8(%rbp),%r15d
	movl 0xAC(%rbp),%r14d
	subl %r14d,%r15d
	movq $0x343,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	addq $0x10,%r12
	movl %r14d,0x4(%r13)
	movq %r13,0x108(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x108,%rbp
	leaq (L_130525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp swap_0
.p2align 0x4
.long 0x1C50
L_130483:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movl 0x258(%rbp),%r15d
	movl %r15d,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130484
L_130492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x258,%rbp
	leaq (L_130493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130493
.p2align 0x4
.long 0x1C52
L_130493:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
L_130484:
	movl 0xB8(%rbp),%r15d
	movl 0xAC(%rbp),%r14d
	subl %r14d,%r15d
	movq $0x343,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x4(%r13)
	addq $0x10,%r12
	movl %r14d,0x0(%r13)
	movq %r13,0x108(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x108,%rbp
	leaq (L_130485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp swap_0
.p2align 0x4
.long 0x1C4B
L_130418:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movl 0xF8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xF8(%rbp)
	movq $0x3,0x100(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_130419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1BFE
L_129541:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129542
L_129545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_129546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129546
.p2align 0x4
.long 0x1BF7
L_129546:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_129542:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	cmpq $0x1,%r14
	je L_129478
L_129543:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	jmp L_129452
.p2align 0x4
.long 0x1C84
L_131571:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movq 0x380(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131572
L_131584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x380,%rbp
	leaq (L_131585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131585
.p2align 0x4
.long 0x1C87
L_131585:
	addq $0xFFFFFFFFFFFFFC80,%rbp
L_131572:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x388(%rbp)
	movl $0x1,0x380(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x390(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x398(%rbp)
	addq $0x380,%rbp
	leaq (L_131573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rshift_0
.p2align 0x4
.long 0x1C81
L_131504:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,0xF0(%rbp)
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_131505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C03
L_131362:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131363
L_131364:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_131365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131365
.p2align 0x4
.long 0x1C05
L_131365:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_131363:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x178(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BFD
L_131325:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq $0x1,0xE0(%rbp)
	movq 0xD8(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_131326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C28
L_130080:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130081
L_130084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_130085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130085
.p2align 0x4
.long 0x1BF7
L_130085:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_130081:
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jnz keep_2
L_130082:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_129485
.p2align 0x4
.long 0x1C35
L_130155:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0xD0(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_130156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1266
.p2align 0x4
.long 0x1C2E
L_130129:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movq 0x380(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0x380(%rbp)
	movq $0x101,0x388(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x380,%rbp
	leaq (L_130130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C27
L_130120:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movq 0x380(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_130121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x1C00
L_129884:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129885
L_129889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_129890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129890
.p2align 0x4
.long 0x1C11
L_129890:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_129885:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xD8(%rbp),%rsi
	movq 0xD0(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_129886:
	testl %eax,%eax
	jz keep_2
L_129888:
	movq 0xB8(%rbp),%r15
	jmp L_129450
.p2align 0x4
.long 0x1BFE
L_129673:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129674
L_129675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_129676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129676
.p2align 0x4
.long 0x1BF7
L_129676:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_129674:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C0C
L_129682:
	addq $0xFFFFFFFFFFFFFCC0,%rbp
	movq 0x340(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x348(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x340(%rbp)
	addq $0x340,%rbp
	leaq (L_129683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x1BFC
L_129830:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xD8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_129831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C22
L_129849:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq $0x3,0xE8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_129830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1BFC
L_129854:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq $0x1,0xE0(%rbp)
L_129855:
	movq 0xD8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_129856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C22
L_129874:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq $0x3,0xF8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_129875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1C00
L_129788:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129789
L_129793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_129794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129794
.p2align 0x4
.long 0x1C11
L_129794:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_129789:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xD0(%rbp),%rsi
	movq 0xD8(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_129790:
	testl %eax,%eax
	jz keep_2
L_129792:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_129485
.p2align 0x4
.long 0x1C14
L_129736:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
	movq 0x248(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r15,0x248(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x258(%rbp)
	addq $0x248,%rbp
	leaq (L_129737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C00
L_129724:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129725
L_129730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_129731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129731
.p2align 0x4
.long 0x1C11
L_129731:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_129725:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xD0(%rbp),%rsi
	movq 0xD8(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_129726:
	testl %eax,%eax
	jnz L_129729
	jmp keep_2
.p2align 0x4
.long 0x1C00
L_129707:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129708
L_129714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_129715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129715
.p2align 0x4
.long 0x1C11
L_129715:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_129708:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xD0(%rbp),%rsi
	movq 0xD8(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_129709:
	testl %eax,%eax
	jz keep_2
L_129711:
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jnz keep_2
L_129712:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_129485
.p2align 0x4
.long 0x1BFC
L_129600:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129601
L_129649:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_129650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129650
.p2align 0x4
.long 0x1C08
L_129650:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_129601:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xD8(%rbp),%rsi
	movq 0xE0(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_129602:
	testl %eax,%eax
	jz keep_2
L_129604:
	movq $0x2165,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0xC8(%rbp)
	movq $0x2657,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0xB8(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_129605
.p2align 0x4
.long 0x1BF8
L_129531:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129532
L_129533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_129534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129534
.p2align 0x4
.long 0x1BF7
L_129534:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_129532:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
L_129524:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129525
L_129526:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_129527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129527
.p2align 0x4
.long 0x1BF7
L_129527:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_129525:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
L_129517:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129518
L_129519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_129520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129520
.p2align 0x4
.long 0x1BF7
L_129520:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_129518:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
L_129510:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129511
L_129512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_129513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129513
.p2align 0x4
.long 0x1BF7
L_129513:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_129511:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BF8
L_129503:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129504
L_129505:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_129506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129506
.p2align 0x4
.long 0x1BF7
L_129506:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_129504:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C04
L_129571:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129572
L_129573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_129574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129574
.p2align 0x4
.long 0x1C05
L_129574:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_129572:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x178(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C01
L_129554:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD8(%rbp)
	movq 0xD0(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_129555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1B97
L_128849:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128850
L_129210:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_129211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129211
.p2align 0x4
.long 0x1BD9
L_129211:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_128850:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	movq $0x1147,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x262F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x262F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x148(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x118(%rbp),%r15
	cmpq $0x1,%r15
	je L_428750
L_128851:
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x118(%rbp)
	movq $0x1,0x130(%rbp)
	jmp L_128852
.p2align 0x4
L_428750:
L_129209:
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
	jmp L_128892
.p2align 0x4
.long 0xA1C
L_129213:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (bug_376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xA1C
bug_377:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129221
L_129222:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_129223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129223
.p2align 0x4
.long 0x7BA
L_129223:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_129221:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA1C
bug_369:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128865
L_128866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_128867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128867
.p2align 0x4
.long 0x7BA
L_128867:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_128865:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA1C
bug_370:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128878
L_128879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_128880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128880
.p2align 0x4
.long 0x7BA
L_128880:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_128878:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B9C
L_128895:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	movb $0x8,0x148(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x148,%rbp
	leaq (L_128896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1599
.p2align 0x4
.long 0x1BF8
L_130301:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130302
L_130303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130304
.p2align 0x4
.long 0x1C37
L_130304:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_130302:
	movq 0xB8(%rbp),%r15
	jmp L_129485
.p2align 0x4
.long 0x1C3B
L_130275:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movq 0x380(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130276
L_130291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x380,%rbp
	leaq (L_130292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130292
.p2align 0x4
.long 0x1C3E
L_130292:
	addq $0xFFFFFFFFFFFFFC80,%rbp
L_130276:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x168(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x388(%rbp)
	movl $0x0,0x380(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x390(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x398(%rbp)
	addq $0x380,%rbp
	leaq (L_130277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1479
.p2align 0x4
.long 0x1C28
L_130266:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130267
L_130270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_130271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130271
.p2align 0x4
.long 0x1BF7
L_130271:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_130267:
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jnz keep_2
L_130268:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_129485
.p2align 0x4
.long 0x1C4C
L_131223:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq %r15,0xF8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_131224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C10
L_130374:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,0xF0(%rbp)
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_130375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C74
L_130958:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq %r15,0x100(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x100,%rbp
	leaq (L_130959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C6F
L_130882:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xD0(%rbp),%r14
	movq %r14,0xF0(%rbp)
	movq 0xE8(%rbp),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_130883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C61
L_130755:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq %r15,0x108(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x108,%rbp
	leaq (L_130756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C61
L_130706:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq %r15,0x108(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x108,%rbp
	leaq (L_130707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C55
L_130572:
	addq $0xFFFFFFFFFFFFFDC8,%rbp
	movsd 0x238(%rbp),%xmm15
	movsd %xmm15,0xB8(%rbp)
	movb 0xAC(%rbp),%r15b
	movb %r15b,0x238(%rbp)
	addq $0x238,%rbp
	leaq (L_130573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x1C5A
L_130624:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	movss 0x228(%rbp),%xmm15
	movss %xmm15,0xB8(%rbp)
	leaq L_130640(%rip),%r15
	movq %r15,0x28(%rbp)
	movb 0xAC(%rbp),%r15b
	movb %r15b,0x228(%rbp)
	addq $0x228,%rbp
	leaq (L_130625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x1C51
L_130525:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xF8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_130526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C51
L_130485:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xF8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_130486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C4C
L_130419:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq %r15,0xF8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_130420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C85
L_131573:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movq 0x380(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131574
L_131582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x380,%rbp
	leaq (L_131583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131583
.p2align 0x4
.long 0x1C86
L_131583:
	addq $0xFFFFFFFFFFFFFC80,%rbp
L_131574:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x380(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x388(%rbp)
	addq $0x380,%rbp
	leaq (L_131575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1C1A
L_131505:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131506
L_131507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_131508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131508
.p2align 0x4
.long 0x1C42
L_131508:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_131506:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C28
L_131326:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131327
L_131328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_131329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131329
.p2align 0x4
.long 0x1C42
L_131329:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_131327:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C36
L_130156:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130157
L_130158:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_130159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130159
.p2align 0x4
.long 0x1C37
L_130159:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_130157:
	movq 0xB8(%rbp),%r15
	jmp L_129485
.p2align 0x4
.long 0x1C2F
L_130130:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movq 0x380(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130131
L_130146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x380,%rbp
	leaq (L_130147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130147
.p2align 0x4
.long 0x1C33
L_130147:
	addq $0xFFFFFFFFFFFFFC80,%rbp
L_130131:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x168(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x388(%rbp)
	movl $0x0,0x380(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x390(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x398(%rbp)
	addq $0x380,%rbp
	leaq (L_130132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1479
.p2align 0x4
.long 0x1C28
L_130121:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130122
L_130125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_130126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130126
.p2align 0x4
.long 0x1BF7
L_130126:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_130122:
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jnz keep_2
L_130123:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_129485
.p2align 0x4
.long 0x1C0D
L_129683:
	addq $0xFFFFFFFFFFFFFCC0,%rbp
	movl 0x340(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129684
L_129700:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x340,%rbp
	leaq (L_129701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129701
.p2align 0x4
.long 0x1C0E
L_129701:
	addq $0xFFFFFFFFFFFFFCC0,%rbp
L_129684:
	movl 0xAC(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_428764
L_129685:
	movq (globalObjptr+0x19C8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (bug_379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428764:
L_129689:
	movq 0xE0(%rbp),%r15
	movq %r15,%r14
	movq 0xD8(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_428765
L_129690:
	cmpq %r15,%r13
	jl keep_2
L_129691:
	movq 0xD0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	jmp zero_4
.p2align 0x4
L_428765:
L_129693:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129694
L_129698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x340,%rbp
	leaq (L_129699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129699
.p2align 0x4
.long 0x1C0E
L_129699:
	addq $0xFFFFFFFFFFFFFCC0,%rbp
L_129694:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xE0(%rbp),%rsi
	movq 0xD8(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_129695:
	cmpl $0x0,%eax
	jl keep_2
L_129696:
	movq 0xD0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	jmp zero_4
.p2align 0x4
.long 0x1C1F
L_129831:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0x100(%rbp)
	movq $0x3,0x108(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x100,%rbp
	leaq (L_129832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C1F
L_129856:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0x100(%rbp)
	movq $0x3,0x108(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x100,%rbp
	leaq (L_129857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C07
L_129875:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	jmp L_129855
.p2align 0x4
.long 0x1C15
L_129737:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
	movq 0x248(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x238(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_129738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x1BFE
L_129555:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129556
L_129557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_129558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129558
.p2align 0x4
.long 0x1BF7
L_129558:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_129556:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0xA1C
bug_376:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129214
L_129215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_129216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129216
.p2align 0x4
.long 0x7BA
L_129216:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_129214:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B9D
L_128896:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	movb $0x7,0x150(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x150,%rbp
	leaq (L_128897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1599
.p2align 0x4
.long 0x1C3C
L_130277:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movl 0x380(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130278
L_130289:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x380,%rbp
	leaq (L_130290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130290
.p2align 0x4
.long 0x1C3D
L_130290:
	addq $0xFFFFFFFFFFFFFC80,%rbp
L_130278:
	movl 0xAC(%rbp),%r15d
	testl %r15d,%r15d
	jz keep_2
L_130280:
	movq 0xE0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x380(%rbp)
	addq $0x380,%rbp
	leaq (L_130281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1C4D
L_131224:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131225
L_131226:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_131227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131227
.p2align 0x4
.long 0x1C4E
L_131227:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_131225:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C1A
L_130375:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130376
L_130377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_130378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130378
.p2align 0x4
.long 0x1C42
L_130378:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_130376:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C75
L_130959:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130960
L_130961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_130962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130962
.p2align 0x4
.long 0x1C76
L_130962:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_130960:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1BFB
L_130883:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130884
L_130885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_130886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130886
.p2align 0x4
.long 0x1C70
L_130886:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_130884:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C62
L_130756:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130757
L_130758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_130759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130759
.p2align 0x4
.long 0x1C63
L_130759:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_130757:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C62
L_130707:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130708
L_130709:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_130710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130710
.p2align 0x4
.long 0x1C63
L_130710:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_130708:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C55
L_130573:
	addq $0xFFFFFFFFFFFFFDC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130574
L_130586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x238,%rbp
	leaq (L_130587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130587
.p2align 0x4
.long 0x1C56
L_130587:
	addq $0xFFFFFFFFFFFFFDC8,%rbp
L_130574:
	movsd 0xB8(%rbp),%xmm15
	movsd 0xD0(%rbp),%xmm14
	ucomisd %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_428779
L_130575:
	ucomisd %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_428778
L_130576:
	ucomisd %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setz %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_428777
L_130577:
	xorb %dl,%dl
L_130578:
	cmpb $0x2,%dl
	jne keep_2
L_130580:
	movsd 0xD0(%rbp),%xmm15
	movd %xmm15,%r15
	movq 0x228(%rbp),%r14
	movq 0x10(%r14),%r13
	andq %r13,%r15
	cmpq %r15,%r13
	sete %al
	movzbl %al,%eax
	movsd 0xB8(%rbp),%xmm14
	movd %xmm14,%r15
	andq %r13,%r15
	cmpq %r15,%r13
	sete %bl
	movzbl %bl,%ebx
	cmpl %eax,%ebx
	jne keep_2
L_130582:
	movq $0x1C8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movsd %xmm15,%xmm14
	movsd %xmm14,0x0(%r15)
real_20:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
L_428777:
L_130583:
	movb $0x2,%dl
	jmp L_130578
.p2align 0x4
L_428778:
L_130584:
	movb $0x1,%dl
	jmp L_130578
.p2align 0x4
L_428779:
L_130585:
	movb $0x3,%dl
	jmp L_130578
.p2align 0x4
.long 0x1C5A
L_130625:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130626
L_130638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x228,%rbp
	leaq (L_130639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130639
.p2align 0x4
.long 0x1C5B
L_130639:
	addq $0xFFFFFFFFFFFFFDD8,%rbp
L_130626:
	movss 0xB8(%rbp),%xmm15
	movss 0xD0(%rbp),%xmm14
	ucomiss %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_428783
L_130627:
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_428782
L_130628:
	ucomiss %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setz %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_428781
L_130629:
	xorb %dl,%dl
L_130630:
	cmpb $0x2,%dl
	jne keep_2
L_130632:
	movss 0xD0(%rbp),%xmm15
	movd %xmm15,%r14d
	movq 0x218(%rbp),%r13
	movl 0xC(%r13),%r11d
	andl %r11d,%r14d
	cmpl %r11d,%r14d
	sete %al
	movzbl %al,%eax
	movss 0xB8(%rbp),%xmm14
	movd %xmm14,%r14d
	andl %r11d,%r14d
	cmpl %r11d,%r14d
	sete %bl
	movzbl %bl,%ebx
	cmpl %ebx,%eax
	jne keep_2
L_130634:
	movd %xmm15,%r14d
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp real_20
.p2align 0x4
L_428781:
L_130635:
	movb $0x2,%dl
	jmp L_130630
.p2align 0x4
L_428782:
L_130636:
	movb $0x1,%dl
	jmp L_130630
.p2align 0x4
L_428783:
L_130637:
	movb $0x3,%dl
	jmp L_130630
.p2align 0x4
.long 0x1C0F
L_130526:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movl 0xF0(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xF0(%rbp)
	movq $0x3,0xF8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF0,%rbp
	leaq (L_130527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C0F
L_130486:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movl 0xF0(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xF0(%rbp)
	movq $0x3,0xF8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF0,%rbp
	leaq (L_130487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C4D
L_130420:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130421
L_130422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_130423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130423
.p2align 0x4
.long 0x1C4E
L_130423:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_130421:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C27
L_131575:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movq 0x380(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_131576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x1C30
L_130132:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movl 0x380(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130133
L_130144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x380,%rbp
	leaq (L_130145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130145
.p2align 0x4
.long 0x1C32
L_130145:
	addq $0xFFFFFFFFFFFFFC80,%rbp
L_130133:
	movl 0xAC(%rbp),%r15d
	testl %r15d,%r15d
	jz keep_2
L_130135:
	movq 0xE8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x380(%rbp)
	addq $0x380,%rbp
	leaq (L_130136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0xA1C
bug_379:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129686
L_129687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_129688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129688
.p2align 0x4
.long 0x7BA
L_129688:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_129686:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C20
L_129832:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_129833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C20
L_129857:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_129858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C16
L_129738:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	testl %r15d,%r15d
	jnz L_428788
L_129739:
	movq (globalObjptr+0x1988)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (bug_380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_428788:
L_129743:
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_129744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x1B9E
L_128897:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0x148(%rbp)
	movb $0x6,0x158(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x158,%rbp
	leaq (L_128898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1599
.p2align 0x4
.long 0x1C31
L_130281:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movl 0x380(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0x380(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x388(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x380,%rbp
	leaq (L_130282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C10
L_130527:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,0xF0(%rbp)
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_130528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C10
L_130487:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,0xF0(%rbp)
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_130488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1C28
L_131576:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_131577
L_131580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_131581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_131581
.p2align 0x4
.long 0x1BF7
L_131581:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_131577:
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jnz keep_2
L_131578:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_129485
.p2align 0x4
.long 0x1C31
L_130136:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movl 0x380(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0x380(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x388(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x380,%rbp
	leaq (L_130137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1C00
L_129833:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_129834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x1C00
L_129858:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_129859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0xA1C
bug_380:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129740
L_129741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_129742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129742
.p2align 0x4
.long 0x7BA
L_129742:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_129740:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1C17
L_129744:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xE8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_129745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1B99
L_128898:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movb $0x5,0x160(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x160,%rbp
	leaq (L_128899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1599
.p2align 0x4
.long 0x1C27
L_130282:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movq 0x380(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_130283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x1C1A
L_130528:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130529
L_130530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_130531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130531
.p2align 0x4
.long 0x1C42
L_130531:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_130529:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C1A
L_130488:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130489
L_130490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_130491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130491
.p2align 0x4
.long 0x1C42
L_130491:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_130489:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_129485
.p2align 0x4
.long 0x1C27
L_130137:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movq 0x380(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_130138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x1BFD
L_129834:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129835
L_129844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_129845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129845
.p2align 0x4
.long 0x1BF3
L_129845:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_129835:
	movl 0xAC(%rbp),%r15d
	testl %r15d,%r15d
	jz keep_2
L_129837:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129838
L_129842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_129843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129843
.p2align 0x4
.long 0x1BF3
L_129843:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_129838:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xD8(%rbp),%rsi
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_129839:
	testl %eax,%eax
	jnz L_129567
	jmp keep_2
.p2align 0x4
.long 0x1BFD
L_129859:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129860
L_129869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_129870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129870
.p2align 0x4
.long 0x1BF3
L_129870:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_129860:
	movl 0xAC(%rbp),%r15d
	testl %r15d,%r15d
	jz keep_2
L_129862:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129863
L_129867:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_129868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129868
.p2align 0x4
.long 0x1BF3
L_129868:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_129863:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0xD8(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_129864:
	testl %eax,%eax
	jnz L_129567
	jmp keep_2
.p2align 0x4
.long 0x1C18
L_129745:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0x100(%rbp)
	movq $0x3,0x108(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x100,%rbp
	leaq (L_129746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1B98
L_128899:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	movb $0x4,0x168(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x168,%rbp
	leaq (L_128900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1599
.p2align 0x4
.long 0x1C28
L_130283:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130284
L_130287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_130288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130288
.p2align 0x4
.long 0x1BF7
L_130288:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_130284:
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jnz keep_2
L_130285:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_129485
.p2align 0x4
.long 0x1C28
L_130138:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_130139
L_130142:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_130143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_130143
.p2align 0x4
.long 0x1BF7
L_130143:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_130139:
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jnz keep_2
L_130140:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_129485
.p2align 0x4
.long 0x1C19
L_129746:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq %r15,0xE0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_129747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1B9F
L_128900:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x160(%rbp)
	movb $0x3,0x170(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x170,%rbp
	leaq (L_128901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1599
.p2align 0x4
.long 0x1C1A
L_129747:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129748
L_129751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_129752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129752
.p2align 0x4
.long 0x1C1B
L_129752:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_129748:
	cmpq $0x1,0xB8(%rbp)
	jne keep_2
L_129750:
	movq 0xD0(%rbp),%r15
	jmp L_129450
.p2align 0x4
.long 0x1BA0
L_128901:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x168(%rbp)
	movb $0x2,0x178(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x178,%rbp
	leaq (L_128902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1599
.p2align 0x4
.long 0x1BA1
L_128902:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x170(%rbp)
	movb $0x1,0x180(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x180,%rbp
	leaq (L_128903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1599
.p2align 0x4
.long 0x1BA2
L_128903:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x178(%rbp)
	movb $0x0,0x188(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x188,%rbp
	leaq (L_128904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1599
.p2align 0x4
.long 0x1BA3
L_128904:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128905
L_129166:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_129167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129167
.p2align 0x4
.long 0x1BD5
L_129167:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_128905:
	movq $0xD99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x168(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x178(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x170(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x48(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x50(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x58(%r15)
	movq 0x60(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_128906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp new_30
.p2align 0x4
.long 0x1BA4
L_128906:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128907
L_129164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129165
.p2align 0x4
.long 0x1BD4
L_129165:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_128907:
	movq $0xD9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0xD9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0xF0(%rbp),%r15
	cmpq $0x2,%r15
	je L_428804
L_128908:
	andq $0x3,%r15
	jnz L_128909
L_129156:
L_128909:
	movq 0x90(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_128910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1316
.p2align 0x4
L_428804:
L_129157:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_428805
L_129158:
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_129159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1316
.p2align 0x4
L_428805:
L_129163:
	movq (globalObjptr+0x5160)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1BA5
L_128910:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r13
	movq %r13,0x60(%rbp)
	movq 0x68(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_428808
L_128911:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_128912:
	cmpq $0x1,%r15
	je L_428807
L_128913:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_128912
.p2align 0x4
L_428807:
L_128914:
	movq %r14,0x138(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (alignWord32_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_428808:
L_129155:
	movq $0x1,0x68(%rbp)
alignWord32_1:
	movq 0xA0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x88(%rbp)
	movq $0x3,0x138(%rbp)
	movq $0x9,0x140(%rbp)
	movq %r14,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_128915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1BD2
L_129159:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129160
L_129161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129162
.p2align 0x4
.long 0x1BD3
L_129162:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_129160:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x138(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_128927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x1BA6
alignWord32_0:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp alignWord32_1
.p2align 0x4
.long 0x1BA7
L_128915:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128916
L_129153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129154
.p2align 0x4
.long 0x1BD1
L_129154:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_128916:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x138(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_128917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x1BAF
L_128927:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x60(%rbp)
L_128928:
	movq $0x9,0x138(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_128929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x1BA8
L_128917:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x9,0x138(%rbp)
	movq %r15,0x140(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_128918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x1BB0
L_128929:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128930
L_129146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129147
.p2align 0x4
.long 0x1BCE
L_129147:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_128930:
	cmpq $0x1,0x68(%rbp)
	je L_428811
L_128931:
	movq 0x60(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_128932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_428811:
L_128940:
	movq $0x3363,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x138(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_128941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x1BA9
L_128918:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0x138(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_128919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1BB1
L_128932:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_128933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1BB2
L_128941:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128942
L_129144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129145
.p2align 0x4
.long 0x1BCD
L_129145:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_128942:
	movq 0x120(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_128834
L_128944:
	movq %r11,0x140(%rbp)
	movq $0x4089,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_128945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0x1BAA
L_128919:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128920
L_129151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129152
.p2align 0x4
.long 0x1BD0
L_129152:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_128920:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x138(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_128921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x78B
L_128933:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128934
L_128938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_128939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128939
.p2align 0x4
.long 0x78C
L_128939:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_128934:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF368)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF370)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xF378)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (bug_371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1BB3
L_128945:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128946
L_129142:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129143
.p2align 0x4
.long 0x1BCC
L_129143:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_128946:
	movq $0x329B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x138(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_128947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0x1BAB
L_128921:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xA8(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jnz L_128928
L_128922:
	movq 0xB0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x80(%rbp)
	movq $0x3,0x138(%rbp)
	movq $0x11,0x140(%rbp)
	movq %r14,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_128923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0xA1C
bug_371:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128935
L_128936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_128937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128937
.p2align 0x4
.long 0x7BA
L_128937:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_128935:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1BB4
L_128947:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128948
L_129140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129141
.p2align 0x4
.long 0x1BCB
L_129141:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_128948:
	movq $0x2A29,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x14A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x5,0x0(%r14)
	movq $0x2,0x8(%r14)
	movq %r14,0x138(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_128949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x1BAC
L_128923:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128924
L_129148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129149
.p2align 0x4
.long 0x1BCF
L_129149:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_128924:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x138(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_128925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x1BB5
L_128949:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128950
L_129138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129139
.p2align 0x4
.long 0x1BC6
L_129139:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_128950:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_428830
L_128951:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x110(%rbp),%r15
	cmpq $0x1,%r15
	je L_428823
L_128952:
	movq $0x1EA9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_428822
L_128953:
	movq %r14,0x140(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_128954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_428822:
L_129129:
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_129130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_428823:
L_129134:
	movl 0x108(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_428828
L_129135:
	movq $0x1,%r14
	xchgq %r14,%r15
L_128957:
	movq $0x2635,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x905,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	cmpq $0x1,%r15
	je L_428827
L_128958:
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_128959:
	incl %ecx
	movl %ecx,0x68(%rbp)
	jo L_128791
L_128960:
	cmpq $0x1,%r15
	je L_428824
L_128961:
	movq 0x8(%r15),%r15
	jmp L_128959
.p2align 0x4
L_428824:
L_128962:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128963
L_129112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129113
.p2align 0x4
.long 0x1BB8
L_129113:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_128963:
	movl 0x68(%rbp),%ecx
L_128964:
	movslq %ecx,%r15
	movq %r15,0x140(%rbp)
	movq $0x408D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_128965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_428827:
L_129114:
	xorl %ecx,%ecx
	jmp L_128964
.p2align 0x4
L_428828:
L_129136:
	movq $0x1,0x78(%rbp)
L_129116:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_428829
L_129117:
	movq %r14,0x140(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_129118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_428829:
L_129122:
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_129123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_428830:
L_129137:
	movq 0x40(%rbp),%r14
	movq 0x68(%rbp),%r13
	xchgq %r13,%r15
L_129018:
	movq $0x1341,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x40(%rbp)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq 0x60(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0xD8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_128785
L_129019:
	movq %r15,0x0(%r11)
	movq 0x128(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_428841
L_129020:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_129022:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_428840
L_129035:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD73,%r11
	jne L_428839
L_129036:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x10)(%rip)
	je L_428836
L_129023:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_128791
L_129024:
	cmpq $0x1,%r15
	je L_428831
L_129025:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_129022
.p2align 0x4
L_428831:
L_129026:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129027
L_129033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129034
.p2align 0x4
.long 0x1BBC
L_129034:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_129027:
	movl 0x50(%rbp),%ecx
L_129028:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_128797
L_129029:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_129031
L_129032:
	movl %ecx,0x0(%r15)
L_129031:
	movq $0x1AE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x128(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_128807
.p2align 0x4
L_428836:
L_129038:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_128797
L_129039:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_128823
L_129041:
	movl %ecx,0x0(%r15)
	jmp L_128823
.p2align 0x4
L_428839:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_129023
.p2align 0x4
L_428840:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_129023
.p2align 0x4
L_428841:
L_129042:
	xorl %ecx,%ecx
	jmp L_129028
.p2align 0x4
.long 0x1BAD
L_128925:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x11,0x138(%rbp)
	movq %r15,0x140(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_128926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x1BB6
L_128954:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128955
L_129127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129128
.p2align 0x4
.long 0x1BCA
L_129128:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_128955:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1147,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2633,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movl 0x108(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_428844
L_128956:
	movq %r14,%r15
	jmp L_128957
.p2align 0x4
L_428844:
L_129115:
	movq %r14,0x78(%rbp)
	jmp L_129116
.p2align 0x4
.long 0xA1C
L_129130:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (bug_375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1BB7
L_128965:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq $0x1,0x78(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
.p2align 0x4,,0x7
L_128966:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428866
.p2align 0x4,,0x7
L_128967:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF57,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2985,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_428846
L_128968:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_128966
.p2align 0x4
L_428846:
L_128969:
	movq %r13,0x70(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_128970:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428865
.p2align 0x4,,0x7
L_128971:
	movq $0x2985,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_428847
L_128972:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_128970
.p2align 0x4
L_428847:
L_128973:
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_428863
L_128974:
	movq 0x70(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_128975:
	addq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r13
	je L_428848
L_128976:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_128975
.p2align 0x4
L_428848:
L_128977:
	testq %r15,%r15
	jz L_428862
L_128978:
	cmpq $0x7FFFFFFF,%r15
	ja L_129052
L_128979:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x141D,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_128980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_128980
.p2align 0x4
.long 0x1BB8
L_128980:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq %rax,0x80(%rbp)
L_128981:
	movq 0x78(%rbp),%r11
	movq 0x70(%rbp),%r13
	xorq %r14,%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1353:
	cmpq 0x68(%rbp),%r15
	jnl L_428851
.p2align 0x4,,0x7
loop_1356:
	cmpq 0x0(%r13),%r14
	jl L_428850
L_129093:
	cmpq $0x1,%r11
	je L_428849
L_129094:
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r11
	xorq %r14,%r14
	movq %r10,%r13
	jmp loop_1356
.p2align 0x4
L_428849:
L_129049:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_428850:
L_129096:
	movq 0x8(%r13),%r10
	movq 0x0(%r10,%r14,8),%r9
	incq %r14
	movq 0x80(%rbp),%r10
	movq %r10,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r9,0x0(%r10,%r15,8)
	incq %r15
	jmp loop_1353
.p2align 0x4
L_428851:
L_128982:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128983
L_129090:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129091
.p2align 0x4
.long 0x1BC4
L_129091:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_128983:
	movq 0x80(%rbp),%r14
	movq $0x903,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x48(%rbp),%r15
	movq %r14,0x48(%rbp)
L_128984:
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x110(%rbp),%r15
	cmpq $0x1,%r15
	je L_428853
L_128985:
	movq $0x1EA9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_428852
L_128986:
	movq %r14,0x140(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_128987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_428852:
L_129082:
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_129083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_428853:
L_129087:
	movl 0x108(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_428858
L_129088:
	movq $0x1,%r14
	xchgq %r14,%r15
L_128990:
	movq $0x2635,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x905,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	cmpq $0x1,%r15
	je L_428857
L_128991:
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_128992:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_128791
L_128993:
	cmpq $0x1,%r15
	je L_428854
L_128994:
	movq 0x8(%r15),%r15
	jmp L_128992
.p2align 0x4
L_428854:
L_128995:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128996
L_129065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129066
.p2align 0x4
.long 0x1BBB
L_129066:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_128996:
	movl 0x40(%rbp),%ecx
L_128997:
	movslq %ecx,%r15
	movq %r15,0x140(%rbp)
	movq $0x408D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_128998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_428857:
L_129067:
	xorl %ecx,%ecx
	jmp L_128997
.p2align 0x4
L_428858:
L_129089:
	movq $0x1,0x50(%rbp)
L_129069:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_428859
L_129070:
	movq %r14,0x140(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_129071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_428859:
L_129075:
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_129076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_428862:
L_129098:
	movq (globalObjptr+0x51B8)(%rip),%r14
	movq %r14,0x80(%rbp)
	jmp L_128981
.p2align 0x4
L_428863:
L_129099:
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	cmpq %r10,0xFFFFFFFFFFFFFFF0(%r11)
	je L_428864
L_129100:
	movq %r10,0x140(%rbp)
	movq $0x408F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x138(%rbp)
	addq $0x10,%r12
	addq $0x138,%rbp
	leaq (L_129101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_428864:
L_129107:
	movq 0x48(%rbp),%r15
	movq %r11,0x48(%rbp)
	jmp L_128984
.p2align 0x4
L_428865:
L_129108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129109
.p2align 0x4
.long 0x1BC7
L_129109:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	jmp L_128971
.p2align 0x4
L_428866:
L_129110:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129111
.p2align 0x4
.long 0x1BC7
L_129111:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	jmp L_128967
.p2align 0x4
.long 0x1BC8
L_129118:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129119
L_129120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129121
.p2align 0x4
.long 0x1BC9
L_129121:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_129119:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	movq $0x1147,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2633,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_128957
.p2align 0x4
.long 0xA1C
L_129123:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (bug_374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1BAE
L_128926:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x138(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_128927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0xA1C
bug_375:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129131
L_129132:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_129133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129133
.p2align 0x4
.long 0x7BA
L_129133:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_129131:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1BB9
L_128987:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_128988
L_129080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129081
.p2align 0x4
.long 0x1BC3
L_129081:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_128988:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1147,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2633,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movl 0x108(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_428869
L_128989:
	movq %r14,%r15
	jmp L_128990
.p2align 0x4
L_428869:
L_129068:
	movq %r14,0x50(%rbp)
	jmp L_129069
.p2align 0x4
.long 0xA1C
L_129083:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (bug_373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1BBA
L_128998:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq $0x1,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x50(%rbp)
.p2align 0x4,,0x7
L_128999:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428883
.p2align 0x4,,0x7
L_129000:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF57,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2985,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_428871
L_129001:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_128999
.p2align 0x4
L_428871:
L_129002:
	movq %r13,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_129003:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_428882
.p2align 0x4,,0x7
L_129004:
	movq $0x2985,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_428872
L_129005:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_129003
.p2align 0x4
L_428872:
L_129006:
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_428880
L_129007:
	movq 0x50(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_129008:
	addq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r13
	je L_428873
L_129009:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_129008
.p2align 0x4
L_428873:
L_129010:
	testq %r15,%r15
	jz L_428879
L_129011:
	cmpq $0x7FFFFFFF,%r15
	ja L_129052
L_129012:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x141D,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129013
.p2align 0x4
.long 0x1BBB
L_129013:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq %rax,0x68(%rbp)
L_129014:
	movq 0x58(%rbp),%r11
	movq 0x50(%rbp),%r13
	xorq %r14,%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1354:
	cmpq 0x40(%rbp),%r15
	jnl L_428876
.p2align 0x4,,0x7
loop_1355:
	cmpq 0x0(%r13),%r14
	jl L_428875
L_129046:
	cmpq $0x1,%r11
	je L_129049
L_129047:
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r11
	xorq %r14,%r14
	movq %r10,%r13
	jmp loop_1355
.p2align 0x4
L_428875:
L_129050:
	movq 0x8(%r13),%r10
	movq 0x0(%r10,%r14,8),%r9
	incq %r14
	movq 0x68(%rbp),%r10
	movq %r10,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r9,0x0(%r10,%r15,8)
	incq %r15
	jmp loop_1354
.p2align 0x4
L_428876:
L_129015:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129016
L_129043:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129044
.p2align 0x4
.long 0x1BBD
L_129044:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_129016:
	movq 0x68(%rbp),%r15
	movq $0x903,0xFFFFFFFFFFFFFFF8(%r15)
L_129017:
	movq 0x48(%rbp),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_129018
.p2align 0x4
L_428879:
L_129053:
	movq (globalObjptr+0x51B8)(%rip),%r14
	movq %r14,0x68(%rbp)
	jmp L_129014
.p2align 0x4
L_428880:
L_129054:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	cmpq %r10,0xFFFFFFFFFFFFFFF0(%r11)
	je L_428881
L_129055:
	movq %r10,0x140(%rbp)
	movq $0x408F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x138(%rbp)
	addq $0x10,%r12
	addq $0x138,%rbp
	leaq (L_129056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_428881:
L_129060:
	movq 0x48(%rbp),%r15
	xchgq %r11,%r14
	jmp L_129018
.p2align 0x4
L_428882:
L_129061:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129062
.p2align 0x4
.long 0x1BC0
L_129062:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	jmp L_129004
.p2align 0x4
L_428883:
L_129063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129064
.p2align 0x4
.long 0x1BC0
L_129064:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	jmp L_129000
.p2align 0x4
.long 0x1BC1
L_129071:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129072
L_129073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129074
.p2align 0x4
.long 0x1BC2
L_129074:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_129072:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	movq $0x1147,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2633,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_128990
.p2align 0x4
.long 0xA1C
L_129076:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (bug_372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1BC5
L_129101:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129102
L_129105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129106
.p2align 0x4
.long 0x1BC6
L_129106:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_129102:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_428885
L_129103:
	movq 0x68(%rbp),%r14
	movq %r14,0x48(%rbp)
	jmp L_128984
.p2align 0x4
L_428885:
L_129104:
	movq 0x40(%rbp),%r14
	movq 0x68(%rbp),%r13
	xchgq %r13,%r15
	jmp L_129018
.p2align 0x4
.long 0xA1C
bug_374:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129124
L_129125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_129126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129126
.p2align 0x4
.long 0x7BA
L_129126:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_129124:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA1C
bug_373:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129084
L_129085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_129086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129086
.p2align 0x4
.long 0x7BA
L_129086:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_129084:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1BBE
L_129056:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129057
L_129058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_129059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129059
.p2align 0x4
.long 0x1BBF
L_129059:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_129057:
	movq 0x40(%rbp),%r15
	jmp L_129017
.p2align 0x4
.long 0xA1C
bug_372:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_129077
L_129078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_129079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_129079
.p2align 0x4
.long 0x7BA
L_129079:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_129077:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
