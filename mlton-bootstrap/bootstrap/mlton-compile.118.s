/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:11:04 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl predict_1
.hidden predict_1
predict_1:
L_369554:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_369555
L_370085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_370086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370086
.p2align 0x4
.long 0x45B
L_370086:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_369555:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_369786
L_369556:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_369557:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1146,%r14
	jne L_529513
L_369558:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%dl
	cmpq $0x1,%r14
	je L_529504
	cmpq $0x2,%r14
	je L_529502
L_369559:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2208,%r15
	je L_529497
	cmpq $0x2209,%r15
	je L_529488
	cmpq $0x220A,%r15
	je L_529486
L_369560:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369783
L_369561:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369562:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529394
L_369790:
	cmpq $0x1,%r13
	je L_529392
L_369791:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369562
.p2align 0x4
L_529392:
L_369783:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_529393
L_369784:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369557
.p2align 0x4
L_529393:
L_369786:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_369787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp track_0
.p2align 0x4
L_529394:
L_369563:
	cmpl %r11d,%r10d
	jl L_369783
L_369565:
	cmpb $0x1,%dl
	je L_369582
	cmpb $0x3,%dl
	je sawCommit_5
sawRemove_1:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369580
L_369567:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_369568:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1146,%r14
	je L_529402
L_369643:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r14)
	jne L_529401
L_369656:
	cmpb $0x1,%r13b
	je L_369580
	cmpb $0x2,%r13b
	je L_369580
	cmpb $0x4,%r13b
	je L_529397
	cmpb $0x5,%r13b
	je L_369580
	cmpb $0x6,%r13b
	je L_529395
L_369582:
	movb $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529395:
L_369580:
	movb $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529397:
L_369661:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_369580
L_369662:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_369568
.p2align 0x4
L_529401:
L_369644:
	movq %r14,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_369645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mayAlias_1
.p2align 0x4
L_529402:
L_369569:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%dl
	cmpq $0x1,%r14
	je L_529430
	cmpq $0x2,%r14
	je L_529428
L_369570:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2208,%r15
	je L_529423
	cmpq $0x2209,%r15
	je L_529414
	cmpq $0x220A,%r15
	je L_529412
L_369571:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369586
L_369572:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369573:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529405
L_369589:
	cmpq $0x1,%r13
	je L_529403
L_369590:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369573
.p2align 0x4
L_529403:
L_369586:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_369580
L_369587:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_369568
.p2align 0x4
L_529405:
L_369574:
	cmpl %r11d,%r10d
	jl L_369586
L_369576:
	cmpb $0x1,%dl
	je L_369582
	cmpb $0x2,%dl
	je L_369580
	cmpb $0x3,%dl
	je L_369580
L_369577:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_369580
L_369578:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_369568
.p2align 0x4
L_529412:
L_369620:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq 0x28(%r13),%r11
	movq 0x0(%r14),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r11)
	jne L_369586
	jmp L_369576
.p2align 0x4
L_529414:
L_369603:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq 0x28(%r13),%r15
	movq 0x0(%r14),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r15)
	je L_369586
L_369604:
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_369612
	cmpb $0x3,%r15b
	je L_369612
	cmpb $0x4,%r15b
	je L_529419
	cmpb $0x5,%r15b
	je L_369616
	cmpb $0x6,%r15b
	je L_369616
	cmpb $0x7,%r15b
	je L_529416
L_369606:
	xorb %cl,%cl
L_369607:
	cmpb $0x2,%cl
	je L_369586
	jmp L_369576
.p2align 0x4
L_529416:
L_369616:
	movb $0x2,%cl
	jmp L_369607
.p2align 0x4
L_529419:
L_369612:
	movb $0x1,%cl
	jmp L_369607
.p2align 0x4
L_529423:
L_369593:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369586
L_369594:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369595:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529425
L_369599:
	cmpq $0x1,%r13
	je L_369586
L_369600:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369595
.p2align 0x4
L_529425:
L_369596:
	cmpl %r11d,%r10d
	jl L_369586
	jmp L_369576
.p2align 0x4
L_529428:
L_369640:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_369580
L_369641:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_369568
.p2align 0x4
L_529430:
L_369623:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_369633
	cmpb $0x3,%r15b
	je L_369633
	cmpb $0x4,%r15b
	je L_529436
	cmpb $0x5,%r15b
	je L_369637
	cmpb $0x6,%r15b
	je L_369637
	cmpb $0x7,%r15b
	je L_529433
L_369625:
	xorb %cl,%cl
L_369626:
	cmpb $0x2,%cl
	jne L_369576
L_369628:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_369580
L_369629:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_369568
.p2align 0x4
L_529433:
L_369637:
	movb $0x2,%cl
	jmp L_369626
.p2align 0x4
L_529436:
L_369633:
	movb $0x1,%cl
	jmp L_369626
.p2align 0x4
sawCommit_5:
sawCommit_1:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369580
L_369670:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_369671:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1146,%r14
	je L_529447
L_369744:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	jne L_529446
L_369759:
	cmpb $0x1,%r13b
	je L_369762
	cmpb $0x2,%r13b
	je L_369762
	cmpb $0x5,%r13b
	je L_529442
	cmpb $0x6,%r13b
	je L_529440
	jmp L_369580
.p2align 0x4
L_529440:
L_369762:
	movb $0x2,0x18(%rbp)
L_369763:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_529441
L_369764:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_369765:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_369766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp predict_1
.p2align 0x4
L_529441:
L_369770:
	movb 0x18(%rbp),%r15b
	movb %r15b,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529442:
L_369777:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_369580
L_369778:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_369671
.p2align 0x4
L_529446:
L_369745:
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_369746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mayAlias_1
.p2align 0x4
L_529447:
L_369672:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%dl
	cmpq $0x1,%r14
	je L_529473
	cmpq $0x2,%r14
	je L_529471
L_369673:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2208,%r15
	je L_529466
	cmpq $0x2209,%r15
	je L_529457
	cmpq $0x220A,%r15
	je L_529455
L_369674:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369687
L_369675:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369676:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529450
L_369690:
	cmpq $0x1,%r13
	je L_529448
L_369691:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369676
.p2align 0x4
L_529448:
L_369687:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_369580
L_369688:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_369671
.p2align 0x4
L_529450:
L_369677:
	cmpl %r11d,%r10d
	jl L_369687
L_369679:
	cmpb $0x3,%dl
	jne L_369580
L_369683:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_369580
L_369684:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_369671
.p2align 0x4
L_529455:
L_369721:
	movq 0x0(%r14),%r15
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq 0x28(%r11),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r15)
	jne L_369687
	jmp L_369679
.p2align 0x4
L_529457:
L_369704:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq 0x0(%r14),%r15
	movq 0x28(%r13),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r15)
	je L_369687
L_369705:
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_369713
	cmpb $0x3,%r15b
	je L_369713
	cmpb $0x4,%r15b
	je L_529462
	cmpb $0x5,%r15b
	je L_369717
	cmpb $0x6,%r15b
	je L_369717
	cmpb $0x7,%r15b
	je L_529459
L_369707:
	xorb %cl,%cl
L_369708:
	cmpb $0x2,%cl
	je L_369687
	jmp L_369679
.p2align 0x4
L_529459:
L_369717:
	movb $0x2,%cl
	jmp L_369708
.p2align 0x4
L_529462:
L_369713:
	movb $0x1,%cl
	jmp L_369708
.p2align 0x4
L_529466:
L_369694:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369687
L_369695:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369696:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529468
L_369700:
	cmpq $0x1,%r13
	je L_369687
L_369701:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369696
.p2align 0x4
L_529468:
L_369697:
	cmpl %r11d,%r10d
	jl L_369687
	jmp L_369679
.p2align 0x4
L_529471:
L_369741:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_369580
L_369742:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_369671
.p2align 0x4
L_529473:
L_369724:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_369734
	cmpb $0x3,%r15b
	je L_369734
	cmpb $0x4,%r15b
	je L_529479
	cmpb $0x5,%r15b
	je L_369738
	cmpb $0x6,%r15b
	je L_369738
	cmpb $0x7,%r15b
	je L_529476
L_369726:
	xorb %cl,%cl
L_369727:
	cmpb $0x2,%cl
	jne L_369679
L_369729:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_369580
L_369730:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_369671
.p2align 0x4
L_529476:
L_369738:
	movb $0x2,%cl
	jmp L_369727
.p2align 0x4
L_529479:
L_369734:
	movb $0x1,%cl
	jmp L_369727
.p2align 0x4
L_529486:
L_369821:
	movq 0x0(%r14),%r15
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq 0x28(%r11),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r15)
	je L_369565
	jmp L_369783
.p2align 0x4
L_529488:
L_369804:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq 0x28(%r13),%r15
	movq 0x0(%r14),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r15)
	je L_369783
L_369805:
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_369813
	cmpb $0x3,%r15b
	je L_369813
	cmpb $0x4,%r15b
	je L_529493
	cmpb $0x5,%r15b
	je L_369817
	cmpb $0x6,%r15b
	je L_369817
	cmpb $0x7,%r15b
	je L_529490
L_369807:
	xorb %cl,%cl
L_369808:
	cmpb $0x2,%cl
	jne L_369565
	jmp L_369783
.p2align 0x4
L_529490:
L_369817:
	movb $0x2,%cl
	jmp L_369808
.p2align 0x4
L_529493:
L_369813:
	movb $0x1,%cl
	jmp L_369808
.p2align 0x4
L_529497:
L_369794:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369783
L_369795:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369796:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529499
L_369800:
	cmpq $0x1,%r13
	je L_369783
L_369801:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369796
.p2align 0x4
L_529499:
L_369797:
	cmpl %r11d,%r10d
	jnl L_369565
	jmp L_369783
.p2align 0x4
L_529502:
L_369841:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369786
L_369842:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369557
.p2align 0x4
L_529504:
L_369824:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_369834
	cmpb $0x3,%r15b
	je L_369834
	cmpb $0x4,%r15b
	je L_529510
	cmpb $0x5,%r15b
	je L_369838
	cmpb $0x6,%r15b
	je L_369838
	cmpb $0x7,%r15b
	je L_529507
L_369826:
	xorb %cl,%cl
L_369827:
	cmpb $0x2,%cl
	jne L_369565
L_369829:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369786
L_369830:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369557
.p2align 0x4
L_529507:
L_369838:
	movb $0x2,%cl
	jmp L_369827
.p2align 0x4
L_529510:
L_369834:
	movb $0x1,%cl
	jmp L_369827
.p2align 0x4
L_529513:
L_369844:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x40(%rbp)
	cmpq 0x10(%r14),%r11
	je L_529517
L_369845:
	cmpb $0x1,%r13b
	je L_369861
L_369846:
	testb %r13b,%r13b
	jz L_529514
L_369848:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_369849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mayAlias_1
.p2align 0x4
L_529514:
L_369861:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_369848
L_369862:
	movq 0x8(%r13),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_369863:
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_369864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mayAlias_1
.p2align 0x4
L_529517:
L_369871:
	cmpb $0x1,%r13b
	je L_369874
	cmpb $0x2,%r13b
	je L_529519
	cmpb $0x4,%r13b
	je sawRemove_1
	cmpb $0x5,%r13b
	je sawCommit_1
	cmpb $0x6,%r13b
	je L_529518
	jmp L_369582
.p2align 0x4
L_529518:
L_369874:
	movb $0x3,0x18(%rbp)
	jmp L_369763
.p2align 0x4
L_529519:
L_369875:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369998
L_369876:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
.p2align 0x4,,0x7
L_369877:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1146,%r14
	je L_529565
L_370056:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x30(%rbp)
	movq 0x10(%r14),%r15
	cmpq %r15,0x40(%rbp)
	jne L_529564
L_370069:
	cmpb $0x2,%r13b
	je L_529562
	cmpb $0x5,%r13b
	je sawUseCommit_5
	jmp L_369874
.p2align 0x4
sawUseCommit_5:
sawUseCommit_1:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369906
L_369890:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
.p2align 0x4,,0x7
L_369891:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1146,%r14
	je L_529526
L_369968:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x30(%rbp)
	movq 0x10(%r14),%r15
	cmpq %r15,0x40(%rbp)
	jne L_529525
L_369983:
	cmpb $0x1,%r13b
	je L_369762
	cmpb $0x2,%r13b
	je L_369762
	cmpb $0x5,%r13b
	je L_529521
	cmpb $0x6,%r13b
	je L_369762
	jmp L_369874
.p2align 0x4
L_529521:
L_369989:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_529522
L_369990:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369891
.p2align 0x4
L_529522:
L_369906:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_369907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp track_0
.p2align 0x4
L_529525:
L_369969:
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_369970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mayAlias_1
.p2align 0x4
L_529526:
L_369892:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%dl
	cmpq $0x1,%r14
	je L_529552
	cmpq $0x2,%r14
	je L_529550
L_369893:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2208,%r15
	je L_529545
	cmpq $0x2209,%r15
	je L_529536
	cmpq $0x220A,%r15
	je L_529534
L_369894:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369911
L_369895:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369896:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529529
L_369914:
	cmpq $0x1,%r13
	je L_529527
L_369915:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369896
.p2align 0x4
L_529527:
L_369911:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369906
L_369912:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369891
.p2align 0x4
L_529529:
L_369897:
	cmpl %r11d,%r10d
	jl L_369911
L_369899:
	cmpb $0x3,%dl
	jne L_369874
L_369903:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369906
L_369904:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369891
.p2align 0x4
L_529534:
L_369945:
	movq 0x0(%r14),%r15
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq 0x28(%r11),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r15)
	jne L_369911
	jmp L_369899
.p2align 0x4
L_529536:
L_369928:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq 0x28(%r13),%r15
	movq 0x0(%r14),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r15)
	je L_369911
L_369929:
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_369937
	cmpb $0x3,%r15b
	je L_369937
	cmpb $0x4,%r15b
	je L_529541
	cmpb $0x5,%r15b
	je L_369941
	cmpb $0x6,%r15b
	je L_369941
	cmpb $0x7,%r15b
	je L_529538
L_369931:
	xorb %cl,%cl
L_369932:
	cmpb $0x2,%cl
	je L_369911
	jmp L_369899
.p2align 0x4
L_529538:
L_369941:
	movb $0x2,%cl
	jmp L_369932
.p2align 0x4
L_529541:
L_369937:
	movb $0x1,%cl
	jmp L_369932
.p2align 0x4
L_529545:
L_369918:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369911
L_369919:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369920:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529547
L_369924:
	cmpq $0x1,%r13
	je L_369911
L_369925:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369920
.p2align 0x4
L_529547:
L_369921:
	cmpl %r11d,%r10d
	jl L_369911
	jmp L_369899
.p2align 0x4
L_529550:
L_369965:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369906
L_369966:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369891
.p2align 0x4
L_529552:
L_369948:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_369958
	cmpb $0x3,%r15b
	je L_369958
	cmpb $0x4,%r15b
	je L_529558
	cmpb $0x5,%r15b
	je L_369962
	cmpb $0x6,%r15b
	je L_369962
	cmpb $0x7,%r15b
	je L_529555
L_369950:
	xorb %cl,%cl
L_369951:
	cmpb $0x2,%cl
	jne L_369899
L_369953:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369906
L_369954:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369891
.p2align 0x4
L_529555:
L_369962:
	movb $0x2,%cl
	jmp L_369951
.p2align 0x4
L_529558:
L_369958:
	movb $0x1,%cl
	jmp L_369951
.p2align 0x4
L_529562:
L_370072:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_529563
L_370073:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369877
.p2align 0x4
L_529563:
L_369998:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_369999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp track_0
.p2align 0x4
L_529564:
L_370057:
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_370058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mayAlias_1
.p2align 0x4
L_529565:
L_369878:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%dl
	cmpq $0x1,%r14
	je L_529589
	cmpq $0x2,%r14
	je L_529587
L_369879:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2208,%r15
	je L_529582
	cmpq $0x2209,%r15
	je L_529573
	cmpq $0x220A,%r15
	je L_529571
L_369880:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369995
L_369881:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_369882:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529568
L_370002:
	cmpq $0x1,%r13
	je L_529566
L_370003:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_369882
.p2align 0x4
L_529566:
L_369995:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369998
L_369996:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369877
.p2align 0x4
L_529568:
L_369883:
	cmpl %r11d,%r10d
	jl L_369995
L_369885:
	cmpb $0x3,%dl
	je sawUseCommit_1
	jmp L_369874
.p2align 0x4
L_529571:
L_370033:
	movq 0x0(%r14),%r15
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq 0x28(%r11),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r15)
	je L_369885
	jmp L_369995
.p2align 0x4
L_529573:
L_370016:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq 0x28(%r13),%r15
	movq 0x0(%r14),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r15)
	je L_369995
L_370017:
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_370025
	cmpb $0x3,%r15b
	je L_370025
	cmpb $0x4,%r15b
	je L_529578
	cmpb $0x5,%r15b
	je L_370029
	cmpb $0x6,%r15b
	je L_370029
	cmpb $0x7,%r15b
	je L_529575
L_370019:
	xorb %cl,%cl
L_370020:
	cmpb $0x2,%cl
	jne L_369885
	jmp L_369995
.p2align 0x4
L_529575:
L_370029:
	movb $0x2,%cl
	jmp L_370020
.p2align 0x4
L_529578:
L_370025:
	movb $0x1,%cl
	jmp L_370020
.p2align 0x4
L_529582:
L_370006:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r9
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_369995
L_370007:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_370008:
	movl 0x0(%r15),%r11d
	movl 0x0(%r14),%r10d
	cmpl %r10d,%r11d
	jnl L_529584
L_370012:
	cmpq $0x1,%r13
	je L_369995
L_370013:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_370008
.p2align 0x4
L_529584:
L_370009:
	cmpl %r11d,%r10d
	jnl L_369885
	jmp L_369995
.p2align 0x4
L_529587:
L_370053:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369998
L_370054:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369877
.p2align 0x4
L_529589:
L_370036:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x2,%r15b
	je L_370046
	cmpb $0x3,%r15b
	je L_370046
	cmpb $0x4,%r15b
	je L_529595
	cmpb $0x5,%r15b
	je L_370050
	cmpb $0x6,%r15b
	je L_370050
	cmpb $0x7,%r15b
	je L_529592
L_370038:
	xorb %cl,%cl
L_370039:
	cmpb $0x2,%cl
	jne L_369885
L_370041:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369998
L_370042:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369877
.p2align 0x4
L_529592:
L_370050:
	movb $0x2,%cl
	jmp L_370039
.p2align 0x4
L_529595:
L_370046:
	movb $0x1,%cl
	jmp L_370039
.p2align 0x4
.long 0x1
L_369787:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	testl %r15d,%r15d
	jnz L_369582
	jmp L_369580
.p2align 0x4
.long 0x456
L_369645:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r14d
	movl %r14d,0x14(%rbp)
	testl %r14d,%r14d
	jnz L_529604
L_369646:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_369580
L_369647:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_369568
.p2align 0x4
L_529604:
L_369649:
	movb 0x10(%rbp),%r14b
	cmpb $0x0,%r14b
	je L_369580
	cmpb $0x1,%r14b
	je L_369580
	cmpb $0x2,%r14b
	je L_369580
L_369650:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_369580
L_369651:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_369568
.p2align 0x4
.long 0x517
L_369766:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movb 0x30(%rbp),%r14b
	movb %r14b,0x19(%rbp)
	cmpb $0x0,%r14b
	je L_369580
	cmpb $0x1,%r14b
	je L_369580
L_369767:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_369770
L_369768:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_369765
.p2align 0x4
.long 0x1126
L_369746:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r14d
	movl %r14d,0x2C(%rbp)
	testl %r14d,%r14d
	jnz L_529613
L_369747:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_369580
L_369748:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_369671
.p2align 0x4
L_529613:
L_369750:
	movb 0x28(%rbp),%r14b
	cmpb $0x0,%r14b
	je L_369580
	cmpb $0x1,%r14b
	je L_369580
	cmpb $0x2,%r14b
	je L_529615
L_369751:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_369580
L_369752:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_369671
.p2align 0x4
L_529615:
L_369756:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_369580
L_369757:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_369671
.p2align 0x4
.long 0x19D0
L_369849:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r14d
	movl %r14d,0x30(%rbp)
	testl %r14d,%r14d
	jnz L_529620
L_369850:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369786
L_369851:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369557
.p2align 0x4
L_529620:
L_369853:
	movb 0x38(%rbp),%r14b
	cmpb $0x0,%r14b
	je L_369580
	cmpb $0x1,%r14b
	je L_369580
	cmpb $0x2,%r14b
	je sawCommit_1
L_369854:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369786
L_369855:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369557
.p2align 0x4
.long 0x1F56
L_369864:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r14d
	movl %r14d,0x3C(%rbp)
	testl %r14d,%r14d
	jnz L_369580
L_369865:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_369848
L_369866:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_369863
.p2align 0x4
.long 0x51E
L_369907:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	testl %r15d,%r15d
	jnz L_369874
	jmp L_369762
.p2align 0x4
.long 0x969
L_369970:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r14d
	movl %r14d,0x34(%rbp)
	testl %r14d,%r14d
	jnz L_529628
L_369971:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369906
L_369972:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369891
.p2align 0x4
L_529628:
L_369974:
	movb 0x30(%rbp),%r14b
	cmpb $0x0,%r14b
	je L_369874
	cmpb $0x1,%r14b
	je L_369874
	cmpb $0x2,%r14b
	je L_529630
L_369975:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369906
L_369976:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369891
.p2align 0x4
L_529630:
L_369980:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369906
L_369981:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369891
.p2align 0x4
.long 0x51E
L_369999:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	testl %r15d,%r15d
	jnz L_369874
	jmp L_369762
.p2align 0x4
.long 0x969
L_370058:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r14d
	movl %r14d,0x34(%rbp)
	testl %r14d,%r14d
	jnz L_529636
L_370059:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369998
L_370060:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369877
.p2align 0x4
L_529636:
L_370062:
	movb 0x30(%rbp),%r14b
	cmpb $0x0,%r14b
	je L_369874
	cmpb $0x1,%r14b
	je L_369874
	cmpb $0x2,%r14b
	je sawUseCommit_1
L_370063:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_369998
L_370064:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_369877
.text
.p2align 0x4
.globl layout_59
.hidden layout_59
layout_59:
L_370087:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_370088
L_370404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_370405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370405
.p2align 0x4
.long 0x45F
L_370405:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_370088:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112B,%r14
	je L_529651
	cmpq $0x112C,%r14
	je L_529642
	cmpq $0x112D,%r14
	je L_529641
	cmpq $0x112E,%r14
	je L_529640
L_370089:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xEDD8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_370090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529640:
L_370388:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xFC98)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_370389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529641:
L_370372:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0x114E0)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_370373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529642:
L_370127:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_529650
	cmpq $0x2,%r14
	je L_529649
	cmpq $0x3,%r14
	je L_529648
	cmpq $0x5,%r14
	je L_529647
L_370128:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1125,%r15
	je L_529646
	cmpq $0x1126,%r15
	je L_529645
	cmpq $0x1127,%r15
	je L_529644
	cmpq $0x1128,%r15
	je L_529643
L_370129:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x116B0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_370130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529643:
L_370299:
	movq 0x10(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x114C0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529644:
L_370255:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x114B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529645:
L_370234:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x114A8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_370235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529646:
L_370161:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x11498)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_370162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529647:
L_370371:
	movq (globalObjptr+0x114D8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529648:
L_370370:
	movq (globalObjptr+0x114D0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529649:
L_370369:
	movq (globalObjptr+0x116C0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529650:
L_370364:
	movq (globalObjptr+0x116B8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529651:
L_370105:
	movq 0x0(%r15),%r14
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_529652
L_370106:
	movq %r14,0x8(%rbp)
	movq %r13,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_370107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_529652:
L_370122:
	movq %r14,0x8(%rbp)
	movq %r13,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_370123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x4E0
L_370090:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_370091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_60
.p2align 0x4
.long 0x521
L_370389:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_370390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E5
L_370373:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_370374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_549
.p2align 0x4
.long 0x5F1
L_370130:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_529654
L_370131:
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_529654:
L_370156:
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1251
L_370300:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_370301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_43
.p2align 0x4
.long 0x7BF
L_370256:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370257
L_370297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370298
.p2align 0x4
.long 0x86A
L_370298:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_370257:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_529655
L_370258:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x48(%rbp)
L_370259:
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_370260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_43
.p2align 0x4
L_529655:
L_370296:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_370276:
	testl %ecx,%ecx
	jz L_529664
L_370277:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_370278:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370279:
	addl 0x0(%r14),%ecx
	movl %ecx,0x50(%rbp)
	jo L_370094
L_370280:
	cmpq $0x1,%r15
	je L_529656
L_370281:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_370279
.p2align 0x4
L_529656:
L_370282:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370283
L_370285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370286
.p2align 0x4
.long 0xA25
L_370286:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370283:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_529661
L_370284:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
L_370141:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x0(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
.p2align 0x4,,0x7
L_370142:
	addl 0x0(%r14),%ecx
	movl %ecx,0x8(%rbp)
	jo L_529660
L_370143:
	cmpq $0x1,%r15
	je L_529657
L_370144:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_370142
.p2align 0x4
L_529657:
L_370145:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370146
L_370149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_370150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370150
.p2align 0x4
.long 0x457
L_370150:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_370146:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jz L_529658
L_370147:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529658:
L_370148:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529660:
L_370094:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529661:
L_370151:
	movq (globalObjptr+0x9D0)(%rip),%r15
	jmp L_370141
.p2align 0x4
L_529664:
L_370287:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_370278
.p2align 0x4
.long 0x5F1
L_370235:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_529666
L_370236:
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_529666:
L_370250:
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x6FF
L_370162:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_529667
L_370163:
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_370164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_529667:
L_370229:
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_370230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1
L_370365:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370366
L_370367:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_370368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370368
.p2align 0x4
.long 0x451
L_370368:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_370366:
	movq 0x0(%rbp),%r15
	jmp L_370141
.p2align 0x4
.long 0x1
L_370107:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_370123:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370124
L_370125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_370126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370126
.p2align 0x4
.long 0x451
L_370126:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_370124:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2B
L_370091:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370092
L_370103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_370104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370104
.p2align 0x4
.long 0x2C
L_370104:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_370092:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370093:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_370094
L_370095:
	cmpq $0x1,%r14
	je L_529670
L_370096:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370093
.p2align 0x4
L_529670:
L_370097:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370098
L_370101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_370102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370102
.p2align 0x4
.long 0x4E6
L_370102:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_370098:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_529671
L_370099:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529671:
L_370100:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_370390:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xAEC0)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_370391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x48F
L_370374:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_370375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x78B
L_370132:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x78B
L_370157:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370158
L_370159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370160
.p2align 0x4
.long 0x78C
L_370160:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_370158:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x443B
L_370301:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370302
L_370362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370363
.p2align 0x4
.long 0x12D2
L_370363:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370302:
	cmpq $0x1,0x40(%rbp)
	je L_529677
L_370303:
	cmpq $0x1,0x38(%rbp)
	je L_529676
L_370304:
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_370305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529676:
L_370330:
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_370331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529677:
L_370345:
	cmpq $0x1,0x38(%rbp)
	je L_529678
L_370346:
	movq (globalObjptr+0x114C8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_370347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529678:
L_370361:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_370316:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_370317:
	addl 0x0(%r14),%ecx
	movl %ecx,0x60(%rbp)
	jo L_370094
L_370318:
	cmpq $0x1,%r15
	je L_529679
L_370319:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_370317
.p2align 0x4
L_529679:
L_370320:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370321
L_370323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_370324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370324
.p2align 0x4
.long 0x770
L_370324:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_370321:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jz L_370151
L_370322:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_370141
.p2align 0x4
.long 0x1251
L_370260:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370261
L_370294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370295
.p2align 0x4
.long 0x12D2
L_370295:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370261:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_529684
L_370262:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_370259
.p2align 0x4
L_529684:
L_370263:
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_370264:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529686
.p2align 0x4,,0x7
L_370265:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529685
L_370266:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_370264
.p2align 0x4
L_529685:
L_370267:
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_370268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529686:
L_370292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_370293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370293
.p2align 0x4
.long 0x839
L_370293:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_370265
.p2align 0x4
.long 0x78B
L_370237:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x78B
L_370251:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370252
L_370253:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370254
.p2align 0x4
.long 0x78C
L_370254:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_370252:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_370237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x852
L_370164:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x852
L_370230:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370231
L_370232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370233
.p2align 0x4
.long 0x4B5
L_370233:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_370231:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_370108:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDEC0)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_370109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x490
L_370391:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370392
L_370402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_370403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370403
.p2align 0x4
.long 0x4B1
L_370403:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_370392:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370393:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_370094
L_370394:
	cmpq $0x1,%r14
	je L_529690
L_370395:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370393
.p2align 0x4
L_529690:
L_370396:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370397
L_370400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_370401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370401
.p2align 0x4
.long 0x5E4
L_370401:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_370397:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_529691
L_370398:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529691:
L_370399:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_370375:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370376
L_370386:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_370387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370387
.p2align 0x4
.long 0x5E5
L_370387:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_370376:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370377:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_370094
L_370378:
	cmpq $0x1,%r14
	je L_529695
L_370379:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370377
.p2align 0x4
L_529695:
L_370380:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370381
L_370384:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_370385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370385
.p2align 0x4
.long 0x5E4
L_370385:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_370381:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_529696
L_370382:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529696:
L_370383:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x78B
L_370133:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370134
L_370154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370155
.p2align 0x4
.long 0x78C
L_370155:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_370134:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370135:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_370094
L_370136:
	cmpq $0x1,%r14
	je L_529700
L_370137:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370135
.p2align 0x4
L_529700:
L_370138:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370139
L_370152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370153
.p2align 0x4
.long 0xA25
L_370153:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370139:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_370151
L_370140:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_370141
.p2align 0x4
.long 0x4F9D
L_370305:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_370306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_43
.p2align 0x4
.long 0x76E
L_370331:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_370332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_43
.p2align 0x4
.long 0x4613
L_370347:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_370348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_43
.p2align 0x4
.long 0x4D71
L_370268:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_370269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x78B
L_370238:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370239
L_370248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370249
.p2align 0x4
.long 0x78C
L_370249:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_370239:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370240:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_370094
L_370241:
	cmpq $0x1,%r14
	je L_529705
L_370242:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370240
.p2align 0x4
L_529705:
L_370243:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370244
L_370246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370247
.p2align 0x4
.long 0xA25
L_370247:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370244:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_370151
L_370245:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_370141
.p2align 0x4
.long 0x852
L_370165:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370166
L_370227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370228
.p2align 0x4
.long 0x4B5
L_370228:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_370166:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370167:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_370094
L_370168:
	cmpq $0x1,%r14
	je L_529710
L_370169:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370167
.p2align 0x4
L_529710:
L_370170:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370171
L_370225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370226
.p2align 0x4
.long 0x4F9C
L_370226:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370171:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_529711
L_370172:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_370173:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x114A0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529711:
L_370224:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_370173
.p2align 0x4
.long 0x4AF
L_370109:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370110
L_370120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_370121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370121
.p2align 0x4
.long 0x45F
L_370121:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_370110:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	addq $0x18,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370111:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_370094
L_370112:
	cmpq $0x1,%r14
	je L_529715
L_370113:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370111
.p2align 0x4
L_529715:
L_370114:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370115
L_370118:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_370119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370119
.p2align 0x4
.long 0x4A4
L_370119:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_370115:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_529716
L_370116:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529716:
L_370117:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F9E
L_370306:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_370307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2122
L_370332:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370333
L_370343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370344
.p2align 0x4
.long 0x9B1
L_370344:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370333:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370334:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_370094
L_370335:
	cmpq $0x1,%r14
	je L_529720
L_370336:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370334
.p2align 0x4
L_529720:
L_370337:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370338
L_370341:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_370342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370342
.p2align 0x4
.long 0x4FA0
L_370342:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_370338:
	movl 0x60(%rbp),%ecx
	testl %ecx,%ecx
	jz L_529721
L_370339:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_370316
.p2align 0x4
L_529721:
L_370340:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_370316
.p2align 0x4
.long 0x76F
L_370348:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370349
L_370359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_370360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370360
.p2align 0x4
.long 0x839
L_370360:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_370349:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370350:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_370094
L_370351:
	cmpq $0x1,%r14
	je L_529725
L_370352:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370350
.p2align 0x4
L_529725:
L_370353:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370354
L_370357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_370358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370358
.p2align 0x4
.long 0x4ECF
L_370358:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_370354:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_529726
L_370355:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_370316
.p2align 0x4
L_529726:
L_370356:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_370316
.p2align 0x4
.long 0x837
L_370269:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370270
L_370290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370291
.p2align 0x4
.long 0x780
L_370291:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370270:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370271:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_370094
L_370272:
	cmpq $0x1,%r14
	je L_529730
L_370273:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370271
.p2align 0x4
L_529730:
L_370274:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370275
L_370288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_370289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370289
.p2align 0x4
.long 0x781
L_370289:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_370275:
	movq 0x58(%rbp),%r15
	movl 0x48(%rbp),%ecx
	jmp L_370276
.p2align 0x4
.long 0x9AE
L_370174:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_529734
L_370175:
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_370176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_529734:
L_370219:
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_370220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x76B
L_370307:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_370308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_43
.p2align 0x4
.long 0x767
L_370176:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x767
L_370220:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370221
L_370222:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370223
.p2align 0x4
.long 0x7AC
L_370223:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370221:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xB76
L_370308:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370309
L_370328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_370329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370329
.p2align 0x4
.long 0xB74
L_370329:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_370309:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_370310:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_370094
L_370311:
	cmpq $0x1,%r14
	je L_529736
L_370312:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370310
.p2align 0x4
L_529736:
L_370313:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370314
L_370326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_370327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370327
.p2align 0x4
.long 0x4F9F
L_370327:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_370314:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_529737
L_370315:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_370316
.p2align 0x4
L_529737:
L_370325:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_370316
.p2align 0x4
.long 0x767
L_370177:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370178
L_370217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370218
.p2align 0x4
.long 0x7AC
L_370218:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370178:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370179:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_370094
L_370180:
	cmpq $0x1,%r14
	je L_529741
L_370181:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370179
.p2align 0x4
L_529741:
L_370182:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370183
L_370215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_370216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370216
.p2align 0x4
.long 0x4F9B
L_370216:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_370183:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_529742
L_370184:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_370185:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xFC98)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_529742:
L_370214:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_370185
.p2align 0x4
.long 0x767
L_370186:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x11498)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_370187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4B3
L_370187:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_529746
L_370188:
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_370189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_529746:
L_370209:
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_370210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x4F98
L_370189:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_370190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4F98
L_370210:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370211
L_370212:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_370213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370213
.p2align 0x4
.long 0x4F9A
L_370213:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_370211:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_370189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4F98
L_370190:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xAEC0)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_370191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4F99
L_370191:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370192
L_370207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_370208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370208
.p2align 0x4
.long 0x1D8C
L_370208:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_370192:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_370193:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_370094
L_370194:
	cmpq $0x1,%r14
	je L_529748
L_370195:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370193
.p2align 0x4
L_529748:
L_370196:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370197
L_370205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370206
.p2align 0x4
.long 0xFA8
L_370206:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_370197:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_529752
L_370198:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_370199:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x20(%rbp),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x3,%r13b
	je L_529751
	cmpb $0x8,%r13b
	je L_529750
	cmpb $0x9,%r13b
	je L_529749
L_370200:
	movq 0x28(%rbp),%r15
	jmp L_370141
.p2align 0x4
L_529749:
L_370203:
	movq %r14,%r15
	jmp L_370141
.p2align 0x4
L_529750:
L_370202:
	movq 0x38(%rbp),%r15
	jmp L_370141
.p2align 0x4
L_529751:
L_370201:
	movq %r14,%r15
	jmp L_370141
.p2align 0x4
L_529752:
L_370204:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_370199
.text
.p2align 0x4
.globl getProfileInfo_0
.hidden getProfileInfo_0
getProfileInfo_0:
L_370406:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_370407
L_370612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_370613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370613
.p2align 0x4
.long 0x451
L_370613:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_370407:
	movq 0x0(%rbp),%r14
	movq 0x38(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x10(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x18(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x20(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_529823
L_370408:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370409:
	incl %ecx
	jo L_370410
L_370411:
	cmpq $0x1,%r15
	je L_529756
L_370412:
	movq 0x8(%r15),%r15
	jmp L_370409
.p2align 0x4
L_529756:
L_370413:
L_370414:
	movslq %ecx,%rdx
	movq %rdx,0x48(%rbp)
	testq %rdx,%rdx
	jz L_529821
L_370415:
	cmpq $0x7FFFFFFF,%rdx
	ja L_370487
L_370416:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370417
.p2align 0x4
.long 0xA9D
L_370417:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_370418:
	movq 0x40(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3663:
	cmpq 0x48(%rbp),%r15
	jnl L_529758
L_370606:
	cmpq $0x1,%r14
	je L_529757
L_370607:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x50(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3663
.p2align 0x4
L_529757:
L_370509:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529758:
L_370419:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370420
L_370604:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370605
.p2align 0x4
.long 0x2343
L_370605:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370420:
	movq 0x50(%rbp),%r15
	movq $0xAFB,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2715,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x10(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_370421:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529818
.p2align 0x4,,0x7
L_370422:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF3F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x299B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_529759
L_370423:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_370421
.p2align 0x4
L_529759:
L_370424:
	movq %r13,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_370425:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529817
.p2align 0x4,,0x7
L_370426:
	movq $0x299B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_529760
L_370427:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_370425
.p2align 0x4
L_529760:
L_370428:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_529812
L_370429:
	movq 0x40(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_370430:
	addq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r13
	je L_529761
L_370431:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_370430
.p2align 0x4
L_529761:
L_370432:
	testq %r15,%r15
	jz L_529811
L_370433:
	cmpq $0x7FFFFFFF,%r15
	ja L_370487
L_370434:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370435
.p2align 0x4
.long 0x2460
L_370435:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,%r15
L_370436:
	movq 0x48(%rbp),%r10
	movq 0x40(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3664:
	cmpq 0x10(%rbp),%r14
	jnl L_529764
.p2align 0x4,,0x7
loop_3672:
	cmpq 0x0(%r11),%r13
	jl L_529763
L_370583:
	cmpq $0x1,%r10
	je L_529762
L_370584:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_3672
.p2align 0x4
L_529762:
L_370484:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529763:
L_370586:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3664
.p2align 0x4
L_529764:
L_370437:
	movq $0xAFB,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
L_370438:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x40(%rbp)
	cmpq %r14,%r11
	je L_529765
L_370439:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529765:
L_370440:
	movq 0x40(%rbp),%rdx
	testq %rdx,%rdx
	jz L_529809
L_370441:
	cmpq $0x7FFFFFFF,%rdx
	ja L_370487
L_370442:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1575,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370443
.p2align 0x4
.long 0x67D
L_370443:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_370444:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3665:
	cmpq 0x40(%rbp),%r15
	jnl L_529778
L_370520:
	movl %r15d,%esp
	movslq %esp,%r14
	movq 0x10(%rbp),%rsp
	movq 0x0(%rsp,%r14,8),%r11
	movq 0x8(%r11),%r9
	movq 0x18(%rbp),%rsp
	movq 0x8(%rsp),%r10
	movq 0x0(%rsp),%r8
	movq 0x8(%r9),%r14
	movq (globalObjptr+0x1068)(%rip),%rsp
	movq 0x0(%rsp),%r13
	incq %r13
	jo L_529777
L_370522:
	movq %r13,0x0(%rsp)
	movq 0x0(%r14),%rsp
	cmpq $0x1,%rsp
	je L_529776
L_370523:
	movq 0x8(%rsp),%r13
	movq 0x0(%rsp),%rsp
	xorl %esi,%esi
	movq %rsp,%r14
	xchgl %esi,%ecx
	movl %esi,(localWord32+0x0)(%rip)
.p2align 0x4,,0x7
L_370525:
	movq %r14,%rsp
	andq $0x3,%rsp
	jnz L_529775
L_370568:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rsp
	shrq $0x1,%rsp
	cmpq $0xCAE,%rsp
	jne L_529774
L_370569:
	movq 0x8(%r14),%rsp
	cmpq %r8,0x0(%r14)
	movq %r8,(localObjptr+0x18)(%rip)
	je L_529769
	movq %r15,(localWord64+0x0)(%rip)
	movq %r11,(localObjptr+0x0)(%rip)
L_370526:
	incl %ecx
	jo L_529768
L_370527:
	cmpq $0x1,%r13
	je L_529766
L_370528:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq (localWord64+0x0)(%rip),%r15
	movq (localObjptr+0x0)(%rip),%r11
	movq (localObjptr+0x18)(%rip),%r8
	jmp L_370525
.p2align 0x4
L_529766:
L_370529:
L_370530:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_529767
L_370532:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_1144
L_370567:
	movl %ecx,0x0(%r15)
x_1144:
	movq %r10,0x10(%rbp)
	movl 0x0(%r9),%r15d
	movl %r15d,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_529767:
L_370531:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529768:
L_370410:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529769:
L_370571:
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_370531
L_370572:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_529772
L_370578:
	movl %ecx,0x0(%r14)
	xchgq %rsp,%r15
	movq %r11,(localObjptr+0x0)(%rip)
	movq %rsp,(localWord64+0x0)(%rip)
x_1145:
	cmpl $0xFFFFFFFF,0x0(%r15)
	je L_529771
L_370574:
	movl (localWord32+0x0)(%rip),%r14d
	incl %r14d
	jo L_370410
L_370575:
	movl %r14d,(localWord32+0x0)(%rip)
	movq (localObjptr+0x0)(%rip),%r15
L_370576:
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq (localWord64+0x0)(%rip),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,%r15
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_3665
.p2align 0x4
L_529771:
L_370577:
	movq $0x1,%r15
	jmp L_370576
.p2align 0x4
L_529772:
L_370573:
	xchgq %rsp,%r15
	movq %r11,(localObjptr+0x0)(%rip)
	movq %rsp,(localWord64+0x0)(%rip)
	jmp x_1145
.p2align 0x4
L_529774:
	movq %r15,(localWord64+0x0)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_370526
.p2align 0x4
L_529775:
	movq %r15,(localWord64+0x0)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_370526
.p2align 0x4
L_529776:
L_370579:
	xorl %ecx,%ecx
	jmp L_370530
.p2align 0x4
L_529777:
L_370521:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529778:
L_370445:
	movq 0x48(%rbp),%r15
	movq $0x18E1,0xFFFFFFFFFFFFFFF8(%r15)
	movslq %ecx,%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_529807
L_370446:
	cmpq $0x7FFFFFFF,%rdx
	ja L_370487
L_370447:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370448
.p2align 0x4
.long 0x4461
L_370448:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x18(%rbp)
L_370449:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3666:
	cmpq 0x10(%rbp),%r15
	jnl L_529782
.p2align 0x4,,0x7
loop_3671:
	movslq %ecx,%r14
	movq 0x48(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_529780
L_370516:
	incl %ecx
	jo L_370410
L_370517:
	jmp loop_3671
.p2align 0x4
L_529780:
L_370514:
	incl %ecx
	jo L_370410
L_370515:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3666
.p2align 0x4
L_529782:
L_370450:
	movq 0x18(%rbp),%r14
	movq $0xAFB,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	cmpq $0x1,%r13
	je L_529805
L_370451:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_370452:
	incl %ecx
	jo L_370410
L_370453:
	cmpq $0x1,%r15
	je L_529783
L_370454:
	movq 0x8(%r15),%r15
	jmp L_370452
.p2align 0x4
L_529783:
L_370455:
L_370456:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_529803
L_370457:
	cmpq $0x7FFFFFFF,%rdx
	ja L_370487
L_370458:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370459
.p2align 0x4
.long 0x516
L_370459:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_370460:
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3667:
	cmpq 0x40(%rbp),%r15
	jnl L_529785
L_370506:
	cmpq $0x1,%r14
	je L_370509
L_370507:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x48(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3667
.p2align 0x4
L_529785:
L_370461:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370462
L_370504:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370505
.p2align 0x4
.long 0xA80
L_370505:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_370462:
	movq 0x48(%rbp),%r15
	movq $0xAFB,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2715,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_370463:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529800
.p2align 0x4,,0x7
L_370464:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF3F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x299B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_529786
L_370465:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_370463
.p2align 0x4
L_529786:
L_370466:
	movq %r13,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_370467:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529799
.p2align 0x4,,0x7
L_370468:
	movq $0x299B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_529787
L_370469:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_370467
.p2align 0x4
L_529787:
L_370470:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_529794
L_370471:
	movq 0x48(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_370472:
	addq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r13
	je L_529788
L_370473:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_370472
.p2align 0x4
L_529788:
L_370474:
	testq %r15,%r15
	jz L_529793
L_370475:
	cmpq $0x7FFFFFFF,%r15
	ja L_529792
L_370476:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370477
.p2align 0x4
.long 0x828
L_370477:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,%r15
L_370478:
	movq 0x50(%rbp),%r10
	movq 0x48(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3668:
	cmpq 0x40(%rbp),%r14
	jnl L_529791
.p2align 0x4,,0x7
loop_3669:
	cmpq 0x0(%r11),%r13
	jl L_529790
L_370481:
	cmpq $0x1,%r10
	je L_370484
L_370482:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_3669
.p2align 0x4
L_529790:
L_370485:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3668
.p2align 0x4
L_529791:
L_370479:
	movq $0xAFB,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529792:
L_370487:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529793:
L_370488:
	movq (globalObjptr+0x5D8)(%rip),%r14
	xchgq %r14,%r15
	jmp L_370478
.p2align 0x4
L_529794:
L_370489:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r14,0x40(%rbp)
	je L_529798
L_370490:
	testq %r13,%r13
	jz L_529797
L_370491:
	cmpq $0x7FFFFFFF,%r13
	ja L_370487
L_370492:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370493
.p2align 0x4
.long 0x7B2
L_370493:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,%r15
L_370494:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3670:
	cmpq 0x50(%rbp),%r14
	jnl L_529795
L_370496:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3670
.p2align 0x4
L_529795:
L_370495:
	movq $0xAFB,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529797:
L_370498:
	movq (globalObjptr+0x5E0)(%rip),%r15
	jmp L_370494
.p2align 0x4
L_529798:
L_370499:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529799:
L_370500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370501
.p2align 0x4
.long 0x7AC
L_370501:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_370468
.p2align 0x4
L_529800:
L_370502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370503
.p2align 0x4
.long 0x7AC
L_370503:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_370464
.p2align 0x4
L_529803:
L_370511:
	movq (globalObjptr+0xD38)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_370460
.p2align 0x4
L_529805:
L_370512:
	xorl %ecx,%ecx
	jmp L_370456
.p2align 0x4
L_529807:
L_370519:
	movq (globalObjptr+0x2570)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_370449
.p2align 0x4
L_529809:
L_370581:
	movq (globalObjptr+0x2568)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_370444
.p2align 0x4
L_529811:
L_370588:
	movq (globalObjptr+0x5D8)(%rip),%r14
	xchgq %r14,%r15
	jmp L_370436
.p2align 0x4
L_529812:
L_370589:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r14)
	movq %r14,0x10(%rbp)
	je L_370438
L_370590:
	testq %r13,%r13
	jz L_529815
L_370591:
	cmpq $0x7FFFFFFF,%r13
	ja L_370487
L_370592:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370593
.p2align 0x4
.long 0x1DC8
L_370593:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,%r15
L_370594:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3673:
	cmpq 0x48(%rbp),%r14
	jnl L_529813
L_370596:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3673
.p2align 0x4
L_529813:
L_370595:
	movq $0xAFB,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
	jmp L_370438
.p2align 0x4
L_529815:
L_370598:
	movq (globalObjptr+0x5E0)(%rip),%r15
	jmp L_370594
.p2align 0x4
L_529817:
L_370600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370601
.p2align 0x4
.long 0x8A7
L_370601:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_370426
.p2align 0x4
L_529818:
L_370602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370603
.p2align 0x4
.long 0x8A7
L_370603:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_370422
.p2align 0x4
L_529821:
L_370610:
	movq (globalObjptr+0xD38)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_370418
.p2align 0x4
L_529823:
L_370611:
	xorl %ecx,%ecx
	jmp L_370414
.p2align 0x4
.long 0x1
L_370534:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370535
L_370565:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_370566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370566
.p2align 0x4
.long 0x451
L_370566:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_370535:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE020)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_370536:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_370537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_370537:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_370538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_370538:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x11178)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_370539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_370539:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_370540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_370540:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370541
L_370563:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_370564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370564
.p2align 0x4
.long 0x4AE
L_370564:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_370541:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_370542:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_370410
L_370543:
	cmpq $0x1,%r14
	je L_529826
L_370544:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370542
.p2align 0x4
L_529826:
L_370545:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370546
L_370561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_370562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370562
.p2align 0x4
.long 0x4E6
L_370562:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_370546:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_529827
L_370547:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_536:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_529827:
L_370560:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_536
.p2align 0x4
.long 0x1
rev_539:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_529833
L_370548:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_370549:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529832
.p2align 0x4,,0x7
L_370550:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_529831
L_370551:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_370549
.p2align 0x4
L_529831:
L_370553:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_529832:
L_370557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_370558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370558
.p2align 0x4
.long 0x45B
L_370558:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_370550
.p2align 0x4
L_529833:
L_370559:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_370553
.p2align 0x4
.long 0x1
bug_694:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370554
L_370555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_370556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370556
.p2align 0x4
.long 0x451
L_370556:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_370554:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl ssa2PassesSet_0
.hidden ssa2PassesSet_0
ssa2PassesSet_0:
L_370614:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_370699
L_370615:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529843
L_370616:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	cmpq (globalObjptr+0x116C8)(%rip),%r14
	je L_370697
L_370617:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x8(%rbp)
	cmpq $0x7,%r13
	sete %al
	movzbl %al,%eax
	movl %eax,0x38(%rbp)
	jne vectorEqual_93
L_370689:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_254:
	cmpq 0x8(%rbp),%r15
	je L_529841
L_370690:
	movq (globalObjptr+0x116C8)(%rip),%r14
	movq 0x0(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_529835
L_370695:
	incq %r15
	jmp vectorEqualLoop_254
.p2align 0x4
L_529835:
L_370691:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_93
L_370693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_370694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370694
.p2align 0x4
.long 0x5514
L_370694:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
vectorEqual_93:
	movq 0x0(%rbp),%r14
	cmpq %r14,(globalObjptr+0xCAD0)(%rip)
	je L_370687
L_370619:
	movl 0x38(%rbp),%r14d
	testl %r14d,%r14d
	jz L_370621
L_370679:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_253:
	cmpq 0x8(%rbp),%r15
	je L_529838
L_370680:
	movq 0x0(%rbp),%r14
	movq (globalObjptr+0xCAD0)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_529836
L_370685:
	incq %r15
	jmp vectorEqualLoop_253
.p2align 0x4
L_529836:
L_370681:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370621
L_370683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_370684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370684
.p2align 0x4
.long 0x5513
L_370684:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_370621:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	leaq L_370667(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x3A,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_370622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_529838:
L_370687:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529841:
L_370697:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529843:
L_370699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_370700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370700
.p2align 0x4
.long 0x97B
L_370700:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_370616
.p2align 0x4
.long 0x5511
L_370622:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370623
L_370677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_370678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370678
.p2align 0x4
.long 0x5FD
L_370678:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_370623:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_529856
L_370624:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
L_370625:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_370633
L_370626:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_370627:
	movq 0x18(%r15),%r9
	movq %r9,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r9
	movq 0x0(%r15),%r8
	movq %r8,0x50(%rbp)
	movq 0x38(%rbp),%rsp
	cmpq %r8,%rsp
	je L_529854
L_370628:
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r11
	cmpq %r11,0xFFFFFFFFFFFFFFF0(%r8)
	jne L_529851
L_370639:
	xorq %r10,%r10
	movq %r9,%r15
.p2align 0x4,,0x7
vectorEqualLoop_252:
	cmpq %r11,%r10
	je L_529849
L_370640:
	movq 0x38(%rbp),%r9
	movq 0x50(%rbp),%rsp
	movb 0x0(%rsp,%r10,1),%r8b
	cmpb %r8b,0x0(%r9,%r10,1)
	jne L_529845
L_370647:
	incq %r10
	jmp vectorEqualLoop_252
.p2align 0x4
L_529845:
L_370641:
	cmpq $0x1,%r14
	je L_529846
L_370642:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370627
.p2align 0x4
L_529846:
L_370643:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370633
L_370645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_370646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370646
.p2align 0x4
.long 0x2570
L_370646:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_370633:
	movq $0x1AAB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
L_370634:
	cmpq 0x8(%rbp),%r14
	je L_529847
L_370635:
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529847:
L_370636:
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529849:
	movq %r13,%r14
L_370649:
	movl 0x0(%r15),%r13d
	movl %r13d,%r11d
	incl %r13d
	jo L_529850
L_370651:
	movl %r13d,0x0(%r15)
	movl %r11d,0x60(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_370652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_529850:
L_370650:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529851:
L_370629:
	cmpq $0x1,%r14
	je L_529852
L_370630:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_370627
.p2align 0x4
L_529852:
L_370631:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370633
L_370637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_370638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370638
.p2align 0x4
.long 0x2570
L_370638:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_370633
.p2align 0x4
L_529854:
	movq %r9,%r15
	movq %r13,%r14
	jmp L_370649
.p2align 0x4
L_529856:
L_370676:
	movq $0x1,%r14
	xchgq %r14,%r15
L_370662:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
L_370667:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r13
L_370668:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_529859
L_370670:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xD55,%r15
	jne L_529858
L_370671:
	movq 0x0(%r13),%r14
	movq %r13,%r11
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r11,%r13
	jmp L_370634
.p2align 0x4
L_529858:
	movq %r13,%r15
L_370669:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529859:
	movq %r13,%r15
	jmp L_370669
.p2align 0x4
.long 0x5512
L_370652:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370653
L_370672:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370673
.p2align 0x4
.long 0xBBB
L_370673:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370653:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD0A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x39C7
L_370654:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370655
L_370665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_370666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370666
.p2align 0x4
.long 0x1A1E
L_370666:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_370655:
	movq $0x12A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1E9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_529861
L_370656:
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_370625
.p2align 0x4
L_529861:
L_370657:
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_370658:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529863
.p2align 0x4,,0x7
L_370659:
	movq $0x1E9D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_370662
L_370660:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_370658
.p2align 0x4
L_529863:
L_370663:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_370664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370664
.p2align 0x4
.long 0x64C
L_370664:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_370659
.text
.p2align 0x4
.globl sxmlPassesSet_0
.hidden sxmlPassesSet_0
sxmlPassesSet_0:
L_370701:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_370848
L_370702:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529876
L_370703:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	cmpq (globalObjptr+0xCEA0)(%rip),%r14
	je L_370846
L_370704:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x8(%rbp)
	cmpq $0xC,%r13
	jne vectorEqual_94
L_370838:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_259:
	cmpq %r15,0x8(%rbp)
	je L_529874
L_370839:
	movq 0x0(%rbp),%r14
	movq (globalObjptr+0xCEA0)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_529865
L_370844:
	incq %r15
	jmp vectorEqualLoop_259
.p2align 0x4
L_529865:
L_370840:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_94
L_370842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370843
.p2align 0x4
.long 0x5520
L_370843:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
vectorEqual_94:
	movq 0x0(%rbp),%r14
	cmpq %r14,(globalObjptr+0x116C8)(%rip)
	je L_370836
L_370706:
	cmpq $0x7,0x8(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x18(%rbp)
	jne vectorEqual_95
L_370828:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_258:
	cmpq %r15,0x8(%rbp)
	je L_529872
L_370829:
	movq 0x0(%rbp),%r14
	movq (globalObjptr+0x116C8)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_529866
L_370834:
	incq %r15
	jmp vectorEqualLoop_258
.p2align 0x4
L_529866:
L_370830:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_95
L_370832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370833
.p2align 0x4
.long 0x551F
L_370833:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
vectorEqual_95:
	movq 0x0(%rbp),%r14
	cmpq %r14,(globalObjptr+0xCAD0)(%rip)
	je L_370826
L_370708:
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jz L_370710
L_370818:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_257:
	cmpq %r15,0x8(%rbp)
	je L_529869
L_370819:
	movq 0x0(%rbp),%r14
	movq (globalObjptr+0xCAD0)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_529867
L_370824:
	incq %r15
	jmp vectorEqualLoop_257
.p2align 0x4
L_529867:
L_370820:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370710
L_370822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370823
.p2align 0x4
.long 0x551E
L_370823:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_370710:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	leaq L_370740(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x3A,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_370711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_529869:
L_370826:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529872:
L_370836:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529874:
L_370846:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529876:
L_370848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370849
.p2align 0x4
.long 0xC02
L_370849:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_370703
.p2align 0x4
.long 0x5515
L_370711:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370712
L_370816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370817
.p2align 0x4
.long 0x551D
L_370817:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_370712:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_529899
L_370713:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
L_370714:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_370734
L_370715:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_370716:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23AE,%r14
	je L_529888
	cmpq $0x23AF,%r14
	je L_529878
L_370717:
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp polyvariancePassGen_0
.p2align 0x4
L_529878:
L_370783:
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r10
	movq %r10,0x50(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x60(%rbp)
	movq 0x20(%rbp),%r10
	cmpq %r10,%r11
	je L_529887
L_370784:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r14
	cmpq %r14,0xFFFFFFFFFFFFFFF0(%r11)
	jne L_529884
L_370791:
	xorq %r13,%r13
	movq %r11,%r15
.p2align 0x4,,0x7
vectorEqualLoop_256:
	cmpq %r14,%r13
	je L_529883
L_370792:
	movq 0x20(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	cmpb %r11b,0x0(%r15,%r13,1)
	jne L_529879
L_370799:
	incq %r13
	jmp vectorEqualLoop_256
.p2align 0x4
L_529879:
L_370793:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529880
L_370794:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_370716
.p2align 0x4
L_529880:
L_370795:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370734
L_370797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370798
.p2align 0x4
.long 0x5517
L_370798:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_370734:
	movq $0x1937,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r13)
L_370735:
	cmpq 0x8(%rbp),%r14
	je L_529881
L_370736:
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x40(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529881:
L_370737:
	movq %r15,0x0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529883:
L_370801:
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xD0A8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_370802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_529884:
L_370785:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529885
L_370786:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_370716
.p2align 0x4
L_529885:
L_370787:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370734
L_370789:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370790
.p2align 0x4
.long 0x5517
L_370790:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_370734
.p2align 0x4
L_529887:
	movq %r11,%r15
	jmp L_370801
.p2align 0x4
L_529888:
L_370745:
	movq 0x18(%r15),%r10
	movq %r10,0x50(%rbp)
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r8
	movq %r8,0x58(%rbp)
	movq 0x20(%rbp),%r8
	cmpq %r8,%r10
	je L_529897
L_370746:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r10),%r13
	jne L_529894
L_370753:
	xorq %r11,%r11
	movq %r9,%r15
.p2align 0x4,,0x7
vectorEqualLoop_255:
	cmpq %r11,%r13
	je L_529892
L_370754:
	movq 0x50(%rbp),%r10
	movq 0x20(%rbp),%r8
	movb 0x0(%r8,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_529889
L_370761:
	incq %r11
	jmp vectorEqualLoop_255
.p2align 0x4
L_529889:
L_370755:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529890
L_370756:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_370716
.p2align 0x4
L_529890:
L_370757:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370734
L_370759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370760
.p2align 0x4
.long 0x5517
L_370760:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_370734
.p2align 0x4
L_529892:
L_370763:
	movl 0x0(%r15),%r13d
	movl %r13d,%r11d
	incl %r13d
	jo L_529893
L_370765:
	movl %r13d,0x0(%r15)
	movl %r11d,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_370766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_529893:
L_370764:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529894:
L_370747:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529895
L_370748:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_370716
.p2align 0x4
L_529895:
L_370749:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370734
L_370751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370752
.p2align 0x4
.long 0x5517
L_370752:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_370734
.p2align 0x4
L_529897:
	movq %r9,%r15
	jmp L_370763
.p2align 0x4
L_529899:
L_370815:
	movq $0x1,%r14
	xchgq %r14,%r15
L_370728:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA1C
L_370740:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r13
L_370741:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_529902
L_370743:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xC9B,%r15
	jne L_529901
L_370744:
	movq 0x0(%r13),%r14
	movq %r13,%r11
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r11,%r13
	jmp L_370735
.p2align 0x4
L_529901:
	movq %r13,%r15
L_370742:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529902:
	movq %r13,%r15
	jmp L_370742
.p2align 0x4
.long 0xFA9
L_370718:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370719
L_370738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370739
.p2align 0x4
.long 0x5516
L_370739:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370719:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_529906
L_370720:
	movq 0x0(%r14),%r13
	movl 0xC(%r13),%r11d
	movl 0x8(%r13),%r10d
	movl 0x4(%r13),%r9d
	movl 0x0(%r13),%r8d
	movq 0x18(%r13),%r15
	movq 0x10(%r13),%rsp
	movq 0x8(%r14),%r13
	movq $0x476B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r8d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movl %r10d,0x8(%r14)
	movl %r11d,0xC(%r14)
	movq %rsp,0x10(%r14)
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movq %r13,%r15
L_370721:
	movq $0x12C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x1D57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_529903
L_370722:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_370714
.p2align 0x4
L_529903:
L_370723:
	movq %r13,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_370724:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529905
.p2align 0x4,,0x7
L_370725:
	movq $0x1D57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_370728
L_370726:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_370724
.p2align 0x4
L_529905:
L_370729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_370730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370730
.p2align 0x4
.long 0x1114
L_370730:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_370725
.p2align 0x4
L_529906:
L_370731:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_370734
L_370732:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	jmp L_370716
.p2align 0x4
.long 0x551B
L_370802:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_370764
L_370803:
	movl %r14d,0x0(%r15)
	movl %r13d,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_370804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x5518
L_370766:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370767
L_370780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_370781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370781
.p2align 0x4
.long 0x551A
L_370781:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_370767:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD0A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_370768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1958
L_370804:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_370805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x11DC
L_370768:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370769
L_370778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_370779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370779
.p2align 0x4
.long 0x5519
L_370779:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_370769:
	movq 0x58(%rbp),%rsp
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r15
	shrq $0x1,%r15
	cmpq $0x23B2,%r15
	je L_529913
	cmpq $0x23B3,%r15
	je L_529912
	cmpq $0x23B4,%r15
	je L_529911
L_370770:
	movq 0xF8(%rsp),%rax
	movq %rax,(localObjptr+0x0)(%rip)
	movq 0xF0(%rsp),%rax
	movq %rax,(localObjptr+0x8)(%rip)
	movq 0xE8(%rsp),%rax
	movq %rax,(localObjptr+0x10)(%rip)
	movq 0xE0(%rsp),%rax
	movq %rax,(localObjptr+0x18)(%rip)
	movq 0xD8(%rsp),%rax
	movq %rax,(localObjptr+0x20)(%rip)
	movq 0xD0(%rsp),%rax
	movq %rax,(localObjptr+0x28)(%rip)
	movq 0xC8(%rsp),%rax
	movq %rax,(localObjptr+0x30)(%rip)
	movq 0xC0(%rsp),%rax
	movq %rax,(localObjptr+0x38)(%rip)
	movq 0xB8(%rsp),%rax
	movq %rax,(localObjptr+0x40)(%rip)
	movq 0xB0(%rsp),%rax
	movq %rax,(localObjptr+0x48)(%rip)
	movq 0xA8(%rsp),%rax
	movq %rax,(localObjptr+0x50)(%rip)
	movq 0xA0(%rsp),%rax
	movq %rax,(localObjptr+0x58)(%rip)
	movq 0x98(%rsp),%rax
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x90(%rsp),%rax
	movq %rax,(localObjptr+0x68)(%rip)
	movq 0x88(%rsp),%rax
	movq %rax,(localObjptr+0x70)(%rip)
	movq 0x80(%rsp),%rax
	movq %rax,(localObjptr+0x78)(%rip)
	movq 0x78(%rsp),%rax
	movq %rax,(localObjptr+0x80)(%rip)
	movq 0x70(%rsp),%rax
	movq %rax,(localObjptr+0x88)(%rip)
	movq 0x68(%rsp),%rax
	movq %rax,(localObjptr+0x90)(%rip)
	movq 0x60(%rsp),%rax
	movq %rax,(localObjptr+0x98)(%rip)
	movq 0x58(%rsp),%rbx
	movq 0x50(%rsp),%rcx
	movq 0x48(%rsp),%rdx
	movq 0x40(%rsp),%rdi
	movq 0x38(%rsp),%rsi
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r9
	movq 0x20(%rsp),%r10
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x20(%rbp),%rsp
	movq %rsp,(localObjptr+0x100)(%rip)
L_370771:
	movq $0x4775,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r14,0x8(%rsp)
	movq %r13,0x10(%rsp)
	movq %r11,0x18(%rsp)
	movq %r10,0x20(%rsp)
	movq %r9,0x28(%rsp)
	movq %r8,0x30(%rsp)
	movq %rsi,0x38(%rsp)
	movq %rdi,0x40(%rsp)
	movq %rdx,0x48(%rsp)
	movq %rcx,0x50(%rsp)
	movq %rbx,0x58(%rsp)
	movq (localObjptr+0x98)(%rip),%r15
	movq %r15,0x60(%rsp)
	movq (localObjptr+0x90)(%rip),%r15
	movq %r15,0x68(%rsp)
	movq (localObjptr+0x88)(%rip),%r15
	movq %r15,0x70(%rsp)
	movq (localObjptr+0x80)(%rip),%r15
	movq %r15,0x78(%rsp)
	movq (localObjptr+0x78)(%rip),%r15
	movq %r15,0x80(%rsp)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0x88(%rsp)
	movq (localObjptr+0x68)(%rip),%r15
	movq %r15,0x90(%rsp)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0x98(%rsp)
	movq (localObjptr+0x58)(%rip),%r15
	movq %r15,0xA0(%rsp)
	movq (localObjptr+0x50)(%rip),%r15
	movq %r15,0xA8(%rsp)
	movq (localObjptr+0x48)(%rip),%r15
	movq %r15,0xB0(%rsp)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0xB8(%rsp)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0xC0(%rsp)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0xC8(%rsp)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0xD0(%rsp)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0xD8(%rsp)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0xE0(%rsp)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0xE8(%rsp)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0xF0(%rsp)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0xF8(%rsp)
	movq (localObjptr+0x100)(%rip),%r15
	addq $0x108,%r12
	movq %rsp,%r14
	jmp L_370721
.p2align 0x4
L_529911:
L_370776:
	movq 0x40(%rsp),%rdx
	movq 0x38(%rsp),%rdi
	movq 0x30(%rsp),%rsi
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r10
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x20(%rbp),%r9
L_370777:
	movq $0x476D,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r14,0x8(%rsp)
	movq %r13,0x10(%rsp)
	movq %r11,0x18(%rsp)
	movq %r10,0x20(%rsp)
	movq %r8,0x28(%rsp)
	movq %rsi,0x30(%rsp)
	movq %rdi,0x38(%rsp)
	movq %rdx,0x40(%rsp)
	addq $0x50,%r12
	movq %r9,%r15
	movq %rsp,%r14
	jmp L_370721
.p2align 0x4
L_529912:
L_370774:
	movq 0x38(%rsp),%rdi
	movq 0x30(%rsp),%rsi
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r9
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x20(%rbp),%r10
L_370775:
	movq $0x4771,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r14,0x8(%rsp)
	movq %r13,0x10(%rsp)
	movq %r11,0x18(%rsp)
	movq %r9,0x20(%rsp)
	movq %r8,0x28(%rsp)
	movq %rsi,0x30(%rsp)
	movq %rdi,0x38(%rsp)
	addq $0x48,%r12
	movq %r10,%r15
	movq %rsp,%r14
	jmp L_370721
.p2align 0x4
L_529913:
L_370772:
	movq 0x50(%rsp),%rbx
	movl 0x0(%rsp),%ecx
	movq 0x48(%rsp),%rdx
	movq 0x40(%rsp),%rdi
	movq 0x38(%rsp),%rsi
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r10
	movq 0x20(%rsp),%r11
	movq 0x18(%rsp),%r13
	movq 0x10(%rsp),%r14
	movq 0x8(%rsp),%r15
	movq 0x20(%rbp),%r9
L_370773:
	movq $0x4773,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %ecx,0x0(%rsp)
	movq %r15,0x8(%rsp)
	movq %r14,0x10(%rsp)
	movq %r13,0x18(%rsp)
	movq %r11,0x20(%rsp)
	movq %r10,0x28(%rsp)
	movq %r8,0x30(%rsp)
	movq %rsi,0x38(%rsp)
	movq %rdi,0x40(%rsp)
	movq %rdx,0x48(%rsp)
	movq %rbx,0x50(%rsp)
	addq $0x60,%r12
	movl $0x0,0x4(%rsp)
	movq %r9,%r15
	movq %rsp,%r14
	jmp L_370721
.p2align 0x4
.long 0x551C
L_370805:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370806
L_370811:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_370812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370812
.p2align 0x4
.long 0x195F
L_370812:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_370806:
	movq 0x60(%rbp),%rsp
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r15
	shrq $0x1,%r15
	cmpq $0x23B2,%r15
	je L_529917
	cmpq $0x23B3,%r15
	je L_529916
	cmpq $0x23B4,%r15
	je L_529915
L_370807:
	movq 0xF8(%rsp),%rax
	movq %rax,(localObjptr+0x0)(%rip)
	movq 0xF0(%rsp),%rax
	movq %rax,(localObjptr+0x8)(%rip)
	movq 0xE8(%rsp),%rax
	movq %rax,(localObjptr+0x10)(%rip)
	movq 0xE0(%rsp),%rax
	movq %rax,(localObjptr+0x18)(%rip)
	movq 0xD8(%rsp),%rax
	movq %rax,(localObjptr+0x20)(%rip)
	movq 0xD0(%rsp),%rax
	movq %rax,(localObjptr+0x28)(%rip)
	movq 0xC8(%rsp),%rax
	movq %rax,(localObjptr+0x30)(%rip)
	movq 0xC0(%rsp),%rax
	movq %rax,(localObjptr+0x38)(%rip)
	movq 0xB8(%rsp),%rax
	movq %rax,(localObjptr+0x40)(%rip)
	movq 0xB0(%rsp),%rax
	movq %rax,(localObjptr+0x48)(%rip)
	movq 0xA8(%rsp),%rax
	movq %rax,(localObjptr+0x50)(%rip)
	movq 0xA0(%rsp),%rax
	movq %rax,(localObjptr+0x58)(%rip)
	movq 0x98(%rsp),%rax
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x90(%rsp),%rax
	movq %rax,(localObjptr+0x68)(%rip)
	movq 0x88(%rsp),%rax
	movq %rax,(localObjptr+0x70)(%rip)
	movq 0x80(%rsp),%rax
	movq %rax,(localObjptr+0x78)(%rip)
	movq 0x78(%rsp),%rax
	movq %rax,(localObjptr+0x80)(%rip)
	movq 0x70(%rsp),%rax
	movq %rax,(localObjptr+0x88)(%rip)
	movq 0x68(%rsp),%rax
	movq %rax,(localObjptr+0x90)(%rip)
	movq 0x60(%rsp),%rax
	movq %rax,(localObjptr+0x98)(%rip)
	movq 0x58(%rsp),%rbx
	movq 0x50(%rsp),%rcx
	movq 0x48(%rsp),%rdx
	movq 0x40(%rsp),%rdi
	movq 0x38(%rsp),%rsi
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r9
	movq 0x20(%rsp),%r10
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x20(%rbp),%rsp
	movq %rsp,(localObjptr+0x100)(%rip)
	jmp L_370771
.p2align 0x4
L_529915:
L_370810:
	movq 0x40(%rsp),%rdx
	movq 0x38(%rsp),%rdi
	movq 0x30(%rsp),%rsi
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r10
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x20(%rbp),%r9
	jmp L_370777
.p2align 0x4
L_529916:
L_370809:
	movq 0x38(%rsp),%rdi
	movq 0x30(%rsp),%rsi
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r9
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x20(%rbp),%r10
	jmp L_370775
.p2align 0x4
L_529917:
L_370808:
	movq 0x50(%rsp),%rbx
	movl 0x0(%rsp),%ecx
	movq 0x48(%rsp),%rdx
	movq 0x40(%rsp),%rdi
	movq 0x38(%rsp),%rsi
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r10
	movq 0x20(%rsp),%r11
	movq 0x18(%rsp),%r13
	movq 0x10(%rsp),%r14
	movq 0x8(%rsp),%r15
	movq 0x20(%rbp),%r9
	jmp L_370773
.text
.p2align 0x4
.globl polyvariancePassGen_0
.hidden polyvariancePassGen_0
polyvariancePassGen_0:
L_370850:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_370851
L_370937:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_370938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370938
.p2align 0x4
.long 0x63C
L_370938:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_370851:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	cmpq $0xC,%r15
	jl L_370867
L_370852:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3674:
	cmpq $0xC,%r14
	jnl L_529920
L_370933:
	movq (globalObjptr+0xCC50)(%rip),%r13
	movq 0x0(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_529919
L_370935:
	incq %r14
	jmp loop_3674
.p2align 0x4
L_529919:
L_370867:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529920:
L_370853:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_529922
L_370856:
	subl $0xC,%r14d
	jo L_529921
L_370858:
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x30(%rbp)
	movl $0xC,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_370859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_529921:
L_370857:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529922:
L_370855:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A5
L_370859:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	cmpq %r13,(globalObjptr+0xA058)(%rip)
	je L_529934
L_370860:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz L_370862
L_370927:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_260:
	cmpq %r15,%r14
	je L_529932
L_370928:
	movq (globalObjptr+0xA058)(%rip),%r13
	movq 0x28(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_529925
L_370930:
	incq %r14
	jmp vectorEqualLoop_260
.p2align 0x4
L_529925:
L_370862:
	cmpq $0x0,%r15
	jna L_370864
L_370865:
	movq 0x28(%rbp),%r14
	cmpb $0x28,0x0(%r14)
	jne L_370867
L_370868:
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_370855
L_370870:
	decl %r13d
	jo L_370857
L_370871:
	movslq %r13d,%r11
	cmpq %r15,%r11
	jnb L_529927
L_370873:
	cmpb $0x29,0x0(%r14,%r11,1)
	jne L_370867
L_370875:
	movl %r13d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x30(%rbp)
	movl $0x0,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_370876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_529927:
L_370864:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529932:
L_370931:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x20(%rbp)
	movl $0x12C,0x28(%rbp)
	movl $0x1E,0x2C(%rbp)
	movl $0x2,0x30(%rbp)
	movl $0x1,0x34(%rbp)
L_370905:
	movl 0x30(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_370906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_529934:
L_370932:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x20(%rbp)
	movl $0x12C,0x28(%rbp)
	movl $0x1E,0x2C(%rbp)
	movl $0x2,0x30(%rbp)
	movl $0x1,0x34(%rbp)
	jmp L_370905
.p2align 0x4
.long 0x4A5
L_370876:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_370855
L_370878:
	decl %r13d
	jo L_370857
L_370879:
	movl %r13d,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x30(%rbp)
	movl $0x1,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_370880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
.long 0x1B8C
L_370906:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_370907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4A5
L_370880:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb $0x2C,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_370881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
.long 0xA24
L_370907:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_370908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4A5
L_370881:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	cmpq $0x1,%r13
	je L_370867
L_370882:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq (globalObjptr+0x1E20)(%rip),%r15
.p2align 0x4,,0x7
L_370883:
	cmpq $0x1,%r15
	jne L_529938
L_370923:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_370867
L_370924:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_370883
.p2align 0x4
L_529938:
L_370884:
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_370885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1206
.p2align 0x4
.long 0x8EC
L_370908:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1E18)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_370857
L_370909:
	movl %r14d,0x0(%r15)
	movl %r13d,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_370910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4EC
L_370885:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370886
L_370921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_370922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370922
.p2align 0x4
.long 0x73D
L_370922:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_370886:
	movq 0x38(%rbp),%r15
	andq $0x1,%r15
	jnz L_529942
L_370887:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_370867
L_370888:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,%r15
	jmp L_370883
.p2align 0x4
L_529942:
L_370890:
	movq 0x38(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r13d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2801,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq 0x28(%rbp),%r10
	cmpq $0x1,%r10
	je L_529943
L_370891:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	movq %r10,0x28(%rbp)
	movq %r11,%r15
	jmp L_370883
.p2align 0x4
L_529943:
L_370892:
	movl %r13d,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_370893:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529950
.p2align 0x4,,0x7
L_370894:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_529944
L_370895:
	movq %r15,0x30(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movl %r15d,0x28(%rbp)
	jmp L_370893
.p2align 0x4
L_529944:
L_370897:
	movq 0x30(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_370867
L_370898:
	movq 0x8(%r15),%r13
	movl 0x0(%r15),%r11d
L_370899:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_370867
L_370900:
	movq 0x8(%r13),%r15
	movl 0x0(%r13),%r10d
L_370901:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_370867
L_370902:
	movl 0x0(%r15),%r13d
	cmpq $0x1,0x8(%r15)
	jne L_370867
L_370903:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_529945
L_370904:
	movl %r13d,0x28(%rbp)
	movl %r10d,0x2C(%rbp)
	movl %r11d,0x30(%rbp)
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x20(%rbp)
	movl $0x1,0x34(%rbp)
	jmp L_370905
.p2align 0x4
L_529945:
L_370918:
	movl %r13d,0x28(%rbp)
	movl %r10d,0x2C(%rbp)
	movl %r11d,0x30(%rbp)
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x20(%rbp)
	movl $0x0,0x34(%rbp)
	jmp L_370905
.p2align 0x4
L_529950:
L_370919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_370920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370920
.p2align 0x4
.long 0xA27
L_370920:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_370894
.p2align 0x4
.long 0x1A11
L_370910:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370911
L_370916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370917
.p2align 0x4
.long 0x3A6D
L_370917:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370911:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x116D0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x116D8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_370912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x964
L_370912:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370913
L_370914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_370915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370915
.p2align 0x4
.long 0x1CCD
L_370915:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_370913:
	movq $0x4761,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x2C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x30(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movl 0x28(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl 0x34(%rbp),%r14d
	movl %r14d,0xC(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x1D5B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl xmlPassesSet_0
.hidden xmlPassesSet_0
xmlPassesSet_0:
L_370939:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_371074
L_370940:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529962
L_370941:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	cmpq (globalObjptr+0x116C8)(%rip),%r14
	je L_371072
L_370942:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x8(%rbp)
	cmpq $0x7,%r13
	sete %al
	movzbl %al,%eax
	movl %eax,0x38(%rbp)
	jne vectorEqual_96
L_371064:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_264:
	cmpq 0x8(%rbp),%r15
	je L_529960
L_371065:
	movq (globalObjptr+0x116C8)(%rip),%r14
	movq 0x0(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_529954
L_371070:
	incq %r15
	jmp vectorEqualLoop_264
.p2align 0x4
L_529954:
L_371066:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_96
L_371068:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371069
.p2align 0x4
.long 0x5514
L_371069:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
vectorEqual_96:
	movq 0x0(%rbp),%r14
	cmpq %r14,(globalObjptr+0xCAD0)(%rip)
	je L_371062
L_370944:
	movl 0x38(%rbp),%r14d
	testl %r14d,%r14d
	jz L_370946
L_371054:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_263:
	cmpq 0x8(%rbp),%r15
	je L_529957
L_371055:
	movq (globalObjptr+0xCAD0)(%rip),%r14
	movq 0x0(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_529955
L_371060:
	incq %r15
	jmp vectorEqualLoop_263
.p2align 0x4
L_529955:
L_371056:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370946
L_371058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_371059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371059
.p2align 0x4
.long 0x5513
L_371059:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_370946:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	leaq L_370976(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x3A,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_370947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_529957:
L_371062:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529960:
L_371072:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529962:
L_371074:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_371075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371075
.p2align 0x4
.long 0x97B
L_371075:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_370941
.p2align 0x4
.long 0x5511
L_370947:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370948
L_371052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_371053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371053
.p2align 0x4
.long 0x5FD
L_371053:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_370948:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_529985
L_370949:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
L_370950:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_370970
L_370951:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_370952:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23AE,%r14
	je L_529974
	cmpq $0x23AF,%r14
	je L_529964
L_370953:
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_370954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp polyvariancePassGen_0
.p2align 0x4
L_529964:
L_371019:
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r10
	movq %r10,0x50(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x60(%rbp)
	movq 0x38(%rbp),%r10
	cmpq %r10,%r11
	je L_529973
L_371020:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jne L_529970
L_371027:
	xorq %r13,%r13
	movq %r11,%r15
.p2align 0x4,,0x7
vectorEqualLoop_262:
	cmpq %r13,%r14
	je L_529969
L_371028:
	movq 0x38(%rbp),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_529965
L_371035:
	incq %r13
	jmp vectorEqualLoop_262
.p2align 0x4
L_529965:
L_371029:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529966
L_371030:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_370952
.p2align 0x4
L_529966:
L_371031:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370970
L_371033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371034
.p2align 0x4
.long 0x2570
L_371034:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_370970:
	movq $0x1937,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
L_370971:
	cmpq %r14,0x8(%rbp)
	je L_529967
L_370972:
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529967:
L_370973:
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529969:
L_371037:
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xD0A8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_371038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_529970:
L_371021:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529971
L_371022:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_370952
.p2align 0x4
L_529971:
L_371023:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370970
L_371025:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371026
.p2align 0x4
.long 0x2570
L_371026:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_370970
.p2align 0x4
L_529973:
	movq %r11,%r15
	jmp L_371037
.p2align 0x4
L_529974:
L_370981:
	movq 0x18(%r15),%r10
	movq %r10,0x50(%rbp)
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r8
	movq %r8,0x58(%rbp)
	movq 0x38(%rbp),%r8
	cmpq %r8,%r10
	je L_529983
L_370982:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r10),%r13
	jne L_529980
L_370989:
	xorq %r11,%r11
	movq %r9,%r15
.p2align 0x4,,0x7
vectorEqualLoop_261:
	cmpq %r13,%r11
	je L_529978
L_370990:
	movq 0x50(%rbp),%r10
	movq 0x38(%rbp),%r8
	movb 0x0(%r8,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_529975
L_370997:
	incq %r11
	jmp vectorEqualLoop_261
.p2align 0x4
L_529975:
L_370991:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529976
L_370992:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_370952
.p2align 0x4
L_529976:
L_370993:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370970
L_370995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_370996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370996
.p2align 0x4
.long 0x2570
L_370996:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_370970
.p2align 0x4
L_529978:
L_370999:
	movl 0x0(%r15),%r13d
	movl %r13d,%r11d
	incl %r13d
	jo L_529979
L_371001:
	movl %r13d,0x0(%r15)
	movl %r11d,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_371002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_529979:
L_371000:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529980:
L_370983:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_529981
L_370984:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_370952
.p2align 0x4
L_529981:
L_370985:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370970
L_370987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_370988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370988
.p2align 0x4
.long 0x2570
L_370988:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_370970
.p2align 0x4
L_529983:
	movq %r9,%r15
	jmp L_370999
.p2align 0x4
L_529985:
L_371051:
	movq $0x1,%r14
	xchgq %r14,%r15
L_370964:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
L_370976:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r13
L_370977:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_529988
L_370979:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xC9B,%r15
	jne L_529987
L_370980:
	movq 0x0(%r13),%r14
	movq %r13,%r11
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r11,%r13
	jmp L_370971
.p2align 0x4
L_529987:
	movq %r13,%r15
L_370978:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_529988:
	movq %r13,%r15
	jmp L_370978
.p2align 0x4
.long 0xBB9
L_370954:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_370955
L_370974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_370975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370975
.p2align 0x4
.long 0xBBB
L_370975:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_370955:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_529992
L_370956:
	movq 0x0(%r14),%r13
	movl 0xC(%r13),%r11d
	movl 0x8(%r13),%r10d
	movl 0x4(%r13),%r9d
	movl 0x0(%r13),%r8d
	movq 0x18(%r13),%r15
	movq 0x10(%r13),%rsp
	movq 0x8(%r14),%r13
	movq $0x476B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r8d,0x0(%r14)
	movl %r9d,0x4(%r14)
	movl %r10d,0x8(%r14)
	movl %r11d,0xC(%r14)
	movq %rsp,0x10(%r14)
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movq %r13,%r15
L_370957:
	movq $0x12C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x1D57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_529989
L_370958:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_370950
.p2align 0x4
L_529989:
L_370959:
	movq %r13,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_370960:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_529991
.p2align 0x4,,0x7
L_370961:
	movq $0x1D57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_370964
L_370962:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_370960
.p2align 0x4
L_529991:
L_370965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_370966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_370966
.p2align 0x4
.long 0x64C
L_370966:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_370961
.p2align 0x4
L_529992:
L_370967:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_370970
L_370968:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	jmp L_370952
.p2align 0x4
.long 0x5525
L_371038:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_371000
L_371039:
	movl %r14d,0x0(%r15)
	movl %r13d,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_371040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x5521
L_371002:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371003
L_371016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_371017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371017
.p2align 0x4
.long 0x5524
L_371017:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_371003:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD0A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_371004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5526
L_371040:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_371041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x5522
L_371004:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371005
L_371014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_371015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371015
.p2align 0x4
.long 0x5523
L_371015:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_371005:
	movq 0x58(%rbp),%rsp
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r15
	shrq $0x1,%r15
	cmpq $0x23B2,%r15
	je L_529999
	cmpq $0x23B3,%r15
	je L_529998
	cmpq $0x23B4,%r15
	je L_529997
L_371006:
	movq 0xF8(%rsp),%rax
	movq %rax,(localObjptr+0x0)(%rip)
	movq 0xF0(%rsp),%rax
	movq %rax,(localObjptr+0x8)(%rip)
	movq 0xE8(%rsp),%rax
	movq %rax,(localObjptr+0x10)(%rip)
	movq 0xE0(%rsp),%rax
	movq %rax,(localObjptr+0x18)(%rip)
	movq 0xD8(%rsp),%rax
	movq %rax,(localObjptr+0x20)(%rip)
	movq 0xD0(%rsp),%rax
	movq %rax,(localObjptr+0x28)(%rip)
	movq 0xC8(%rsp),%rax
	movq %rax,(localObjptr+0x30)(%rip)
	movq 0xC0(%rsp),%rax
	movq %rax,(localObjptr+0x38)(%rip)
	movq 0xB8(%rsp),%rax
	movq %rax,(localObjptr+0x40)(%rip)
	movq 0xB0(%rsp),%rax
	movq %rax,(localObjptr+0x48)(%rip)
	movq 0xA8(%rsp),%rax
	movq %rax,(localObjptr+0x50)(%rip)
	movq 0xA0(%rsp),%rax
	movq %rax,(localObjptr+0x58)(%rip)
	movq 0x98(%rsp),%rax
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x90(%rsp),%rax
	movq %rax,(localObjptr+0x68)(%rip)
	movq 0x88(%rsp),%rax
	movq %rax,(localObjptr+0x70)(%rip)
	movq 0x80(%rsp),%rax
	movq %rax,(localObjptr+0x78)(%rip)
	movq 0x78(%rsp),%rax
	movq %rax,(localObjptr+0x80)(%rip)
	movq 0x70(%rsp),%rax
	movq %rax,(localObjptr+0x88)(%rip)
	movq 0x68(%rsp),%rax
	movq %rax,(localObjptr+0x90)(%rip)
	movq 0x60(%rsp),%rax
	movq %rax,(localObjptr+0x98)(%rip)
	movq 0x58(%rsp),%rbx
	movq 0x50(%rsp),%rcx
	movq 0x48(%rsp),%rdx
	movq 0x40(%rsp),%rdi
	movq 0x38(%rsp),%rsi
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r9
	movq 0x20(%rsp),%r10
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x38(%rbp),%rsp
	movq %rsp,(localObjptr+0x100)(%rip)
L_371007:
	movq $0x4775,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r14,0x8(%rsp)
	movq %r13,0x10(%rsp)
	movq %r11,0x18(%rsp)
	movq %r10,0x20(%rsp)
	movq %r9,0x28(%rsp)
	movq %r8,0x30(%rsp)
	movq %rsi,0x38(%rsp)
	movq %rdi,0x40(%rsp)
	movq %rdx,0x48(%rsp)
	movq %rcx,0x50(%rsp)
	movq %rbx,0x58(%rsp)
	movq (localObjptr+0x98)(%rip),%r15
	movq %r15,0x60(%rsp)
	movq (localObjptr+0x90)(%rip),%r15
	movq %r15,0x68(%rsp)
	movq (localObjptr+0x88)(%rip),%r15
	movq %r15,0x70(%rsp)
	movq (localObjptr+0x80)(%rip),%r15
	movq %r15,0x78(%rsp)
	movq (localObjptr+0x78)(%rip),%r15
	movq %r15,0x80(%rsp)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0x88(%rsp)
	movq (localObjptr+0x68)(%rip),%r15
	movq %r15,0x90(%rsp)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0x98(%rsp)
	movq (localObjptr+0x58)(%rip),%r15
	movq %r15,0xA0(%rsp)
	movq (localObjptr+0x50)(%rip),%r15
	movq %r15,0xA8(%rsp)
	movq (localObjptr+0x48)(%rip),%r15
	movq %r15,0xB0(%rsp)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0xB8(%rsp)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0xC0(%rsp)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0xC8(%rsp)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0xD0(%rsp)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0xD8(%rsp)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0xE0(%rsp)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0xE8(%rsp)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0xF0(%rsp)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0xF8(%rsp)
	movq (localObjptr+0x100)(%rip),%r15
	addq $0x108,%r12
	movq %rsp,%r14
	jmp L_370957
.p2align 0x4
L_529997:
L_371012:
	movq 0x40(%rsp),%rdx
	movq 0x38(%rsp),%rdi
	movq 0x30(%rsp),%rsi
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r10
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x38(%rbp),%r9
L_371013:
	movq $0x476D,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r14,0x8(%rsp)
	movq %r13,0x10(%rsp)
	movq %r11,0x18(%rsp)
	movq %r10,0x20(%rsp)
	movq %r8,0x28(%rsp)
	movq %rsi,0x30(%rsp)
	movq %rdi,0x38(%rsp)
	movq %rdx,0x40(%rsp)
	addq $0x50,%r12
	movq %r9,%r15
	movq %rsp,%r14
	jmp L_370957
.p2align 0x4
L_529998:
L_371010:
	movq 0x38(%rsp),%rdi
	movq 0x30(%rsp),%rsi
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r9
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x38(%rbp),%r10
L_371011:
	movq $0x4771,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r14,0x8(%rsp)
	movq %r13,0x10(%rsp)
	movq %r11,0x18(%rsp)
	movq %r9,0x20(%rsp)
	movq %r8,0x28(%rsp)
	movq %rsi,0x30(%rsp)
	movq %rdi,0x38(%rsp)
	addq $0x48,%r12
	movq %r10,%r15
	movq %rsp,%r14
	jmp L_370957
.p2align 0x4
L_529999:
L_371008:
	movq 0x50(%rsp),%rbx
	movl 0x0(%rsp),%ecx
	movq 0x48(%rsp),%rdx
	movq 0x40(%rsp),%rdi
	movq 0x38(%rsp),%rsi
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r10
	movq 0x20(%rsp),%r11
	movq 0x18(%rsp),%r13
	movq 0x10(%rsp),%r14
	movq 0x8(%rsp),%r15
	movq 0x38(%rbp),%r9
L_371009:
	movq $0x4773,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %ecx,0x0(%rsp)
	movq %r15,0x8(%rsp)
	movq %r14,0x10(%rsp)
	movq %r13,0x18(%rsp)
	movq %r11,0x20(%rsp)
	movq %r10,0x28(%rsp)
	movq %r8,0x30(%rsp)
	movq %rsi,0x38(%rsp)
	movq %rdi,0x40(%rsp)
	movq %rdx,0x48(%rsp)
	movq %rbx,0x50(%rsp)
	addq $0x60,%r12
	movl $0x0,0x4(%rsp)
	movq %r9,%r15
	movq %rsp,%r14
	jmp L_370957
.p2align 0x4
.long 0x5527
L_371041:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371042
L_371047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_371048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371048
.p2align 0x4
.long 0x5528
L_371048:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_371042:
	movq 0x60(%rbp),%rsp
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r15
	shrq $0x1,%r15
	cmpq $0x23B2,%r15
	je L_530003
	cmpq $0x23B3,%r15
	je L_530002
	cmpq $0x23B4,%r15
	je L_530001
L_371043:
	movq 0xF8(%rsp),%rax
	movq %rax,(localObjptr+0x0)(%rip)
	movq 0xF0(%rsp),%rax
	movq %rax,(localObjptr+0x8)(%rip)
	movq 0xE8(%rsp),%rax
	movq %rax,(localObjptr+0x10)(%rip)
	movq 0xE0(%rsp),%rax
	movq %rax,(localObjptr+0x18)(%rip)
	movq 0xD8(%rsp),%rax
	movq %rax,(localObjptr+0x20)(%rip)
	movq 0xD0(%rsp),%rax
	movq %rax,(localObjptr+0x28)(%rip)
	movq 0xC8(%rsp),%rax
	movq %rax,(localObjptr+0x30)(%rip)
	movq 0xC0(%rsp),%rax
	movq %rax,(localObjptr+0x38)(%rip)
	movq 0xB8(%rsp),%rax
	movq %rax,(localObjptr+0x40)(%rip)
	movq 0xB0(%rsp),%rax
	movq %rax,(localObjptr+0x48)(%rip)
	movq 0xA8(%rsp),%rax
	movq %rax,(localObjptr+0x50)(%rip)
	movq 0xA0(%rsp),%rax
	movq %rax,(localObjptr+0x58)(%rip)
	movq 0x98(%rsp),%rax
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x90(%rsp),%rax
	movq %rax,(localObjptr+0x68)(%rip)
	movq 0x88(%rsp),%rax
	movq %rax,(localObjptr+0x70)(%rip)
	movq 0x80(%rsp),%rax
	movq %rax,(localObjptr+0x78)(%rip)
	movq 0x78(%rsp),%rax
	movq %rax,(localObjptr+0x80)(%rip)
	movq 0x70(%rsp),%rax
	movq %rax,(localObjptr+0x88)(%rip)
	movq 0x68(%rsp),%rax
	movq %rax,(localObjptr+0x90)(%rip)
	movq 0x60(%rsp),%rax
	movq %rax,(localObjptr+0x98)(%rip)
	movq 0x58(%rsp),%rbx
	movq 0x50(%rsp),%rcx
	movq 0x48(%rsp),%rdx
	movq 0x40(%rsp),%rdi
	movq 0x38(%rsp),%rsi
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r9
	movq 0x20(%rsp),%r10
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x38(%rbp),%rsp
	movq %rsp,(localObjptr+0x100)(%rip)
	jmp L_371007
.p2align 0x4
L_530001:
L_371046:
	movq 0x40(%rsp),%rdx
	movq 0x38(%rsp),%rdi
	movq 0x30(%rsp),%rsi
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r10
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x38(%rbp),%r9
	jmp L_371013
.p2align 0x4
L_530002:
L_371045:
	movq 0x38(%rsp),%rdi
	movq 0x30(%rsp),%rsi
	movq 0x28(%rsp),%r8
	movq 0x20(%rsp),%r9
	movq 0x18(%rsp),%r11
	movq 0x10(%rsp),%r13
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
	movq 0x38(%rbp),%r10
	jmp L_371011
.p2align 0x4
L_530003:
L_371044:
	movq 0x50(%rsp),%rbx
	movl 0x0(%rsp),%ecx
	movq 0x48(%rsp),%rdx
	movq 0x40(%rsp),%rdi
	movq 0x38(%rsp),%rsi
	movq 0x30(%rsp),%r8
	movq 0x28(%rsp),%r10
	movq 0x20(%rsp),%r11
	movq 0x18(%rsp),%r13
	movq 0x10(%rsp),%r14
	movq 0x8(%rsp),%r15
	movq 0x38(%rbp),%r9
	jmp L_371009
.text
.p2align 0x4
.globl ssaPassesSet_0
.hidden ssaPassesSet_0
ssaPassesSet_0:
L_371076:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_371344
L_371077:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530013
L_371078:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	cmpq (globalObjptr+0x116C8)(%rip),%r14
	je L_371342
L_371079:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x8(%rbp)
	cmpq $0x7,%r13
	sete %al
	movzbl %al,%eax
	movl %eax,0x40(%rbp)
	jne vectorEqual_97
L_371334:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_267:
	cmpq %r15,0x8(%rbp)
	je L_530011
L_371335:
	movq 0x0(%rbp),%r14
	movq (globalObjptr+0x116C8)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_530005
L_371340:
	incq %r15
	jmp vectorEqualLoop_267
.p2align 0x4
L_530005:
L_371336:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_97
L_371338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_371339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371339
.p2align 0x4
.long 0x553F
L_371339:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
vectorEqual_97:
	movq (globalObjptr+0xCAD0)(%rip),%r14
	cmpq %r14,0x0(%rbp)
	je L_371332
L_371081:
	movl 0x40(%rbp),%r14d
	testl %r14d,%r14d
	jz L_371083
L_371324:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_266:
	cmpq 0x8(%rbp),%r15
	je L_530008
L_371325:
	movq (globalObjptr+0xCAD0)(%rip),%r14
	movq 0x0(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_530006
L_371330:
	incq %r15
	jmp vectorEqualLoop_266
.p2align 0x4
L_530006:
L_371326:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371083
L_371328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371329
.p2align 0x4
.long 0x1FC1
L_371329:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_371083:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	leaq L_371161(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x3A,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_371084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_530008:
L_371332:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530011:
L_371342:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530013:
L_371344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371345
.p2align 0x4
.long 0x976
L_371345:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_371078
.p2align 0x4
.long 0x5529
L_371084:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371085
L_371322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371323
.p2align 0x4
.long 0x553E
L_371323:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_371085:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_530041
L_371086:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x40(%rbp)
L_371087:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_371105
L_371088:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_371089:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2364,%r14
	je L_530025
L_371264:
	movq 0x18(%r15),%r10
	movq %r10,0x50(%rbp)
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r8
	movq %r8,0x58(%rbp)
	movq 0x20(%rbp),%r8
	cmpq %r10,%r8
	je L_530024
L_371265:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r10),%r13
	jne L_530021
L_371272:
	xorq %r11,%r11
	movq %r9,%r15
.p2align 0x4,,0x7
vectorEqualLoop_265:
	cmpq %r11,%r13
	je L_530019
L_371273:
	movq 0x20(%rbp),%r10
	movq 0x50(%rbp),%r8
	movb 0x0(%r8,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_530015
L_371280:
	incq %r11
	jmp vectorEqualLoop_265
.p2align 0x4
L_530015:
L_371274:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_530016
L_371275:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530016:
L_371276:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371105
L_371278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371279
.p2align 0x4
.long 0x5539
L_371279:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_371105:
	movq $0x1A6F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r13)
L_371106:
	cmpq 0x8(%rbp),%r14
	je L_530017
L_371107:
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x38(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530017:
L_371108:
	movq %r15,0x0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530019:
L_371282:
	movl 0x0(%r15),%r13d
	movl %r13d,%r11d
	incl %r13d
	jo L_530020
L_371283:
	movl %r13d,0x0(%r15)
	movl %r11d,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_371284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_530020:
L_371096:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530021:
L_371266:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_530022
L_371267:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530022:
L_371268:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371105
L_371270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371271
.p2align 0x4
.long 0x5539
L_371271:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_371105
.p2align 0x4
L_530024:
	movq %r9,%r15
	jmp L_371282
.p2align 0x4
L_530025:
L_371090:
	movq 0x18(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x20(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	cmpq $0x12,%r15
	jl L_371172
L_371091:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3675:
	cmpq $0x12,%r14
	jnl L_530036
L_371170:
	movq 0x20(%rbp),%r13
	movq (globalObjptr+0xCF38)(%rip),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_530026
L_371262:
	incq %r14
	jmp loop_3675
.p2align 0x4
L_530026:
L_371172:
	cmpq $0xA,%r15
	jl L_530033
L_371173:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3676:
	cmpq $0xA,%r14
	jnl L_530030
L_371248:
	movq 0x20(%rbp),%r13
	movq (globalObjptr+0x116F0)(%rip),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_530027
L_371255:
	incq %r14
	jmp loop_3676
.p2align 0x4
L_530027:
L_371249:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_530028
L_371250:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530028:
L_371251:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371105
L_371253:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371254
.p2align 0x4
.long 0x5539
L_371254:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_371105
.p2align 0x4
L_530030:
L_371174:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_530032
L_371176:
	subl $0xA,%r14d
	jo L_371096
L_371177:
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x78(%rbp)
	movl $0xA,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_371178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_530032:
L_371094:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530033:
L_371256:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_530034
L_371257:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530034:
L_371258:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371105
L_371260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371261
.p2align 0x4
.long 0x5539
L_371261:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_371105
.p2align 0x4
L_530036:
L_371092:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_371094
L_371095:
	subl $0x12,%r14d
	jo L_371096
L_371097:
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x70(%rbp)
	movl $0x12,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_371098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_530041:
L_371321:
	movq $0x1,%r14
	xchgq %r14,%r15
L_371156:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x651
L_371161:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r13
L_371162:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_530044
L_371164:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xD37,%r15
	jne L_530043
L_371165:
	movq 0x0(%r13),%r14
	movq %r13,%r11
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r11,%r13
	jmp L_371106
.p2align 0x4
L_530043:
	movq %r13,%r15
L_371163:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530044:
	movq %r13,%r15
	jmp L_371163
.p2align 0x4
.long 0x553A
L_371284:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371285
L_371317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_371318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371318
.p2align 0x4
.long 0x553D
L_371318:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_371285:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD0A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_371286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5533
L_371178:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_371179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nums_0
.p2align 0x4
.long 0xAA3
L_371098:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_371099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nums_0
.p2align 0x4
.long 0x553B
L_371286:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371287
L_371315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_371316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371316
.p2align 0x4
.long 0x553C
L_371316:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_371287:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_530074
L_371288:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x2367,%rax
	cmpq $0x17,%rax
	ja L_530046
	leaq jumpTable_876(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_876:
.quad L_530073,L_530072,L_530071,L_530070,L_530069,L_530068,L_530067,L_530066,L_530065,L_530064,L_530063,L_530062,L_530061,L_530060,L_530059,L_530058,L_530057,L_530056,L_530055,L_530054,L_530053,L_530052,L_530051,L_530050
.text
.p2align 0x4
L_530046:
L_371289:
	movq 0x58(%rbp),%r13
	movq 0x20(%r13),%r15
	movq 0x18(%r13),%r14
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq $0x46FF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	movq %r10,0x8(%r13)
	movq %r11,0x10(%r13)
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	addq $0x30,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
L_371149:
	movq $0x12B1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x1E41,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_530047
L_371150:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_371087
.p2align 0x4
L_530047:
L_371151:
	movq %r13,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_371152:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530049
.p2align 0x4,,0x7
L_371153:
	movq $0x1E41,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_371156
L_371154:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_371152
.p2align 0x4
L_530049:
L_371157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371158
.p2align 0x4
.long 0x552F
L_371158:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_371153
.p2align 0x4
L_530050:
L_371313:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x472B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	jmp L_371149
.p2align 0x4
L_530051:
L_371312:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x471F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	jmp L_371149
.p2align 0x4
L_530052:
L_371311:
	movq 0x58(%rbp),%r13
	movq 0x138(%r13),%r15
	movq 0x130(%r13),%r14
	movq 0x128(%r13),%r11
	movq 0x120(%r13),%r10
	movl 0x0(%r13),%r9d
	movq 0x118(%r13),%r8
	movq 0x110(%r13),%rsp
	movq 0x108(%r13),%rsi
	movq 0x100(%r13),%rdi
	movq 0xF8(%r13),%rdx
	movq 0xF0(%r13),%rcx
	movq 0xE8(%r13),%rbx
	movq 0xE0(%r13),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0xD8(%r13),%r15
	movq %r14,(localObjptr+0x8)(%rip)
	movq 0xD0(%r13),%r14
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0xC8(%r13),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0xC0(%r13),%r10
	movq %r8,(localObjptr+0x20)(%rip)
	movq 0xB8(%r13),%r8
	movq %rsp,(localObjptr+0x28)(%rip)
	movq 0xB0(%r13),%rsp
	movq %rsi,(localObjptr+0x30)(%rip)
	movq 0xA8(%r13),%rsi
	movq %rdi,(localObjptr+0x38)(%rip)
	movq 0xA0(%r13),%rdi
	movq %rdx,(localObjptr+0x40)(%rip)
	movq 0x98(%r13),%rdx
	movq %rcx,(localObjptr+0x48)(%rip)
	movq 0x90(%r13),%rcx
	movq %rbx,(localObjptr+0x50)(%rip)
	movq 0x88(%r13),%rbx
	movq %rax,(localObjptr+0x58)(%rip)
	movq 0x80(%r13),%rax
	movq %r15,(localObjptr+0x60)(%rip)
	movq 0x78(%r13),%r15
	movq %r14,(localObjptr+0x68)(%rip)
	movq 0x70(%r13),%r14
	movq %r11,(localObjptr+0x70)(%rip)
	movq 0x68(%r13),%r11
	movq %r10,(localObjptr+0x78)(%rip)
	movq 0x60(%r13),%r10
	movq %r8,(localObjptr+0x80)(%rip)
	movq 0x58(%r13),%r8
	movq %rsp,(localObjptr+0x88)(%rip)
	movq 0x50(%r13),%rsp
	movq %rsi,(localObjptr+0x90)(%rip)
	movq 0x48(%r13),%rsi
	movq %rdi,(localObjptr+0x98)(%rip)
	movq 0x40(%r13),%rdi
	movq %rdx,(localObjptr+0xA0)(%rip)
	movq 0x38(%r13),%rdx
	movq %rcx,(localObjptr+0xA8)(%rip)
	movq 0x30(%r13),%rcx
	movq %rbx,(localObjptr+0xB0)(%rip)
	movq 0x28(%r13),%rbx
	movq %rax,(localObjptr+0xB8)(%rip)
	movq 0x20(%r13),%rax
	movq %r15,(localObjptr+0xC0)(%rip)
	movq 0x18(%r13),%r15
	movq %r14,(localObjptr+0xC8)(%rip)
	movq 0x10(%r13),%r14
	movq %r11,(localObjptr+0xD0)(%rip)
	movq 0x8(%r13),%r11
	movq $0x4737,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r9d,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r15,0x18(%r13)
	movq %rax,0x20(%r13)
	movq %rbx,0x28(%r13)
	movq %rcx,0x30(%r13)
	movq %rdx,0x38(%r13)
	movq %rdi,0x40(%r13)
	movq %rsi,0x48(%r13)
	movq %rsp,0x50(%r13)
	movq %r8,0x58(%r13)
	movq %r10,0x60(%r13)
	movq (localObjptr+0xD0)(%rip),%r15
	movq %r15,0x68(%r13)
	movq (localObjptr+0xC8)(%rip),%r15
	movq %r15,0x70(%r13)
	movq (localObjptr+0xC0)(%rip),%r15
	movq %r15,0x78(%r13)
	movq (localObjptr+0xB8)(%rip),%r15
	movq %r15,0x80(%r13)
	movq (localObjptr+0xB0)(%rip),%r15
	movq %r15,0x88(%r13)
	movq (localObjptr+0xA8)(%rip),%r15
	movq %r15,0x90(%r13)
	movq (localObjptr+0xA0)(%rip),%r15
	movq %r15,0x98(%r13)
	movq (localObjptr+0x98)(%rip),%r15
	movq %r15,0xA0(%r13)
	movq (localObjptr+0x90)(%rip),%r15
	movq %r15,0xA8(%r13)
	movq (localObjptr+0x88)(%rip),%r15
	movq %r15,0xB0(%r13)
	movq (localObjptr+0x80)(%rip),%r15
	movq %r15,0xB8(%r13)
	movq (localObjptr+0x78)(%rip),%r15
	movq %r15,0xC0(%r13)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0xC8(%r13)
	movq (localObjptr+0x68)(%rip),%r15
	movq %r15,0xD0(%r13)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0xD8(%r13)
	movq (localObjptr+0x58)(%rip),%r15
	movq %r15,0xE0(%r13)
	movq (localObjptr+0x50)(%rip),%r15
	movq %r15,0xE8(%r13)
	movq (localObjptr+0x48)(%rip),%r15
	movq %r15,0xF0(%r13)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0xF8(%r13)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0x100(%r13)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0x108(%r13)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0x110(%r13)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0x118(%r13)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0x120(%r13)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0x128(%r13)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x130(%r13)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0x138(%r13)
	addq $0x148,%r12
	movl $0x0,0x4(%r13)
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371149
.p2align 0x4
L_530053:
L_371310:
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x4709,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	jmp L_371149
.p2align 0x4
L_530054:
L_371309:
	movq 0x58(%rbp),%r14
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq $0x4717,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movq 0x20(%rbp),%r15
	jmp L_371149
.p2align 0x4
L_530055:
L_371308:
	movq 0x58(%rbp),%r13
	movq 0x20(%r13),%r15
	movq 0x18(%r13),%r14
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq $0x471B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	movq %r10,0x8(%r13)
	movq %r11,0x10(%r13)
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	addq $0x30,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371149
.p2align 0x4
L_530056:
L_371307:
	movq 0x58(%rbp),%r13
	movq 0x20(%r13),%r15
	movq 0x18(%r13),%r14
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq $0x472F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	movq %r10,0x8(%r13)
	movq %r11,0x10(%r13)
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	addq $0x30,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371149
.p2align 0x4
L_530057:
L_371306:
	movq 0x58(%rbp),%r14
	movq 0xD8(%r14),%r15
	movq 0xD0(%r14),%r13
	movq 0xC8(%r14),%r11
	movq 0xC0(%r14),%r10
	movq 0xB8(%r14),%r9
	movq 0xB0(%r14),%r8
	movq 0xA8(%r14),%rsp
	movq 0xA0(%r14),%rsi
	movq 0x98(%r14),%rdi
	movq 0x90(%r14),%rdx
	movq 0x88(%r14),%rcx
	movq 0x80(%r14),%rbx
	movq 0x78(%r14),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x70(%r14),%r15
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x68(%r14),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x60(%r14),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x58(%r14),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x50(%r14),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x48(%r14),%r8
	movq %rsp,(localObjptr+0x30)(%rip)
	movq 0x40(%r14),%rsp
	movq %rsi,(localObjptr+0x38)(%rip)
	movq 0x38(%r14),%rsi
	movq %rdi,(localObjptr+0x40)(%rip)
	movq 0x30(%r14),%rdi
	movq %rdx,(localObjptr+0x48)(%rip)
	movq 0x28(%r14),%rdx
	movq %rcx,(localObjptr+0x50)(%rip)
	movq 0x20(%r14),%rcx
	movq %rbx,(localObjptr+0x58)(%rip)
	movq 0x18(%r14),%rbx
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x10(%r14),%rax
	movq %r15,(localObjptr+0x68)(%rip)
	movq 0x8(%r14),%r15
	movq %r13,(localObjptr+0x70)(%rip)
	movq 0x0(%r14),%r13
	movq $0x4733,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %rax,0x10(%r14)
	movq %rbx,0x18(%r14)
	movq %rcx,0x20(%r14)
	movq %rdx,0x28(%r14)
	movq %rdi,0x30(%r14)
	movq %rsi,0x38(%r14)
	movq %rsp,0x40(%r14)
	movq %r8,0x48(%r14)
	movq %r9,0x50(%r14)
	movq %r10,0x58(%r14)
	movq %r11,0x60(%r14)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0x68(%r14)
	movq (localObjptr+0x68)(%rip),%r15
	movq %r15,0x70(%r14)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0x78(%r14)
	movq (localObjptr+0x58)(%rip),%r15
	movq %r15,0x80(%r14)
	movq (localObjptr+0x50)(%rip),%r15
	movq %r15,0x88(%r14)
	movq (localObjptr+0x48)(%rip),%r15
	movq %r15,0x90(%r14)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0x98(%r14)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0xA0(%r14)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0xA8(%r14)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0xB0(%r14)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0xB8(%r14)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0xC0(%r14)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0xC8(%r14)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0xD0(%r14)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0xD8(%r14)
	addq $0xE8,%r12
	movq 0x20(%rbp),%r15
	jmp L_371149
.p2align 0x4
L_530058:
L_371305:
	movq 0x58(%rbp),%r14
	movq 0xA8(%r14),%r15
	movq 0xA0(%r14),%r13
	movq 0x98(%r14),%r11
	movq 0x90(%r14),%r10
	movq 0x88(%r14),%r9
	movq 0x80(%r14),%r8
	movq 0x78(%r14),%rsp
	movq 0x70(%r14),%rsi
	movq 0x68(%r14),%rdi
	movq 0x60(%r14),%rdx
	movq 0x58(%r14),%rcx
	movq 0x50(%r14),%rbx
	movq 0x48(%r14),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x40(%r14),%r15
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x38(%r14),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x30(%r14),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x28(%r14),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x20(%r14),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x18(%r14),%r8
	movq %rsp,(localObjptr+0x30)(%rip)
	movq 0x10(%r14),%rsp
	movq %rsi,(localObjptr+0x38)(%rip)
	movq 0x8(%r14),%rsi
	movq %rdi,(localObjptr+0x40)(%rip)
	movq 0x0(%r14),%rdi
	movq $0x4727,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rdi,0x0(%r14)
	movq %rsi,0x8(%r14)
	movq %rsp,0x10(%r14)
	movq %r8,0x18(%r14)
	movq %r9,0x20(%r14)
	movq %r10,0x28(%r14)
	movq %r11,0x30(%r14)
	movq %r13,0x38(%r14)
	movq %r15,0x40(%r14)
	movq %rax,0x48(%r14)
	movq %rbx,0x50(%r14)
	movq %rcx,0x58(%r14)
	movq %rdx,0x60(%r14)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0x68(%r14)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0x70(%r14)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0x78(%r14)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0x80(%r14)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0x88(%r14)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0x90(%r14)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0x98(%r14)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0xA0(%r14)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0xA8(%r14)
	addq $0xB8,%r12
	movq 0x20(%rbp),%r15
	jmp L_371149
.p2align 0x4
L_530059:
L_371304:
	movq 0x58(%rbp),%r14
	movq 0xA8(%r14),%r15
	movq 0xA0(%r14),%r13
	movq 0x98(%r14),%r11
	movq 0x90(%r14),%r10
	movq 0x88(%r14),%r9
	movq 0x80(%r14),%r8
	movq 0x78(%r14),%rsp
	movq 0x70(%r14),%rsi
	movq 0x68(%r14),%rdi
	movq 0x60(%r14),%rdx
	movq 0x58(%r14),%rcx
	movq 0x50(%r14),%rbx
	movq 0x48(%r14),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x40(%r14),%r15
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x38(%r14),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x30(%r14),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x28(%r14),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x20(%r14),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x18(%r14),%r8
	movq %rsp,(localObjptr+0x30)(%rip)
	movq 0x10(%r14),%rsp
	movq %rsi,(localObjptr+0x38)(%rip)
	movq 0x8(%r14),%rsi
	movq %rdi,(localObjptr+0x40)(%rip)
	movq 0x0(%r14),%rdi
	movq $0x4735,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rdi,0x0(%r14)
	movq %rsi,0x8(%r14)
	movq %rsp,0x10(%r14)
	movq %r8,0x18(%r14)
	movq %r9,0x20(%r14)
	movq %r10,0x28(%r14)
	movq %r11,0x30(%r14)
	movq %r13,0x38(%r14)
	movq %r15,0x40(%r14)
	movq %rax,0x48(%r14)
	movq %rbx,0x50(%r14)
	movq %rcx,0x58(%r14)
	movq %rdx,0x60(%r14)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0x68(%r14)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0x70(%r14)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0x78(%r14)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0x80(%r14)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0x88(%r14)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0x90(%r14)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0x98(%r14)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0xA0(%r14)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0xA8(%r14)
	addq $0xB8,%r12
	movq 0x20(%rbp),%r15
	jmp L_371149
.p2align 0x4
L_530060:
L_371303:
	movq 0x58(%rbp),%r13
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq $0x4707,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371149
.p2align 0x4
L_530061:
L_371302:
	movq 0x58(%rbp),%r13
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq $0x4705,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371149
.p2align 0x4
L_530062:
L_371301:
	movq 0x58(%rbp),%r14
	movq 0xE0(%r14),%r15
	movq 0xD8(%r14),%r13
	movq 0xD0(%r14),%r11
	movq 0xC8(%r14),%r10
	movq 0xC0(%r14),%r9
	movq 0xB8(%r14),%r8
	movq 0xB0(%r14),%rsp
	movq 0xA8(%r14),%rsi
	movl 0x14(%r14),%edi
	movq 0xA0(%r14),%rdx
	movq 0x98(%r14),%rcx
	movq 0x90(%r14),%rbx
	movq 0x88(%r14),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x80(%r14),%r15
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x78(%r14),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x70(%r14),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x68(%r14),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x60(%r14),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x58(%r14),%r8
	movq %rsp,(localObjptr+0x30)(%rip)
	movq 0x50(%r14),%rsp
	movq %rsi,(localObjptr+0x38)(%rip)
	movq 0x48(%r14),%rsi
	movq %rdx,(localObjptr+0x40)(%rip)
	movq 0x40(%r14),%rdx
	movq %rcx,(localObjptr+0x48)(%rip)
	movq 0x38(%r14),%rcx
	movq %rbx,(localObjptr+0x50)(%rip)
	movq 0x30(%r14),%rbx
	movq %rax,(localObjptr+0x58)(%rip)
	movl 0x10(%r14),%eax
	movq %r15,(localObjptr+0x60)(%rip)
	movq 0x8(%r14),%r15
	movq %r13,(localObjptr+0x68)(%rip)
	movq 0x0(%r14),%r13
	movq %r11,(localObjptr+0x70)(%rip)
	movq 0x28(%r14),%r11
	movq %r10,(localObjptr+0x78)(%rip)
	movq 0x20(%r14),%r10
	movq %r9,(localObjptr+0x80)(%rip)
	movq 0x18(%r14),%r9
	movq $0x4703,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movl %eax,0x10(%r14)
	movl %edi,0x14(%r14)
	movq %r9,0x18(%r14)
	movq %r10,0x20(%r14)
	movq %r11,0x28(%r14)
	movq %rbx,0x30(%r14)
	movq %rcx,0x38(%r14)
	movq %rdx,0x40(%r14)
	movq %rsi,0x48(%r14)
	movq %rsp,0x50(%r14)
	movq %r8,0x58(%r14)
	movq (localObjptr+0x80)(%rip),%r15
	movq %r15,0x60(%r14)
	movq (localObjptr+0x78)(%rip),%r15
	movq %r15,0x68(%r14)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0x70(%r14)
	movq (localObjptr+0x68)(%rip),%r15
	movq %r15,0x78(%r14)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0x80(%r14)
	movq (localObjptr+0x58)(%rip),%r15
	movq %r15,0x88(%r14)
	movq (localObjptr+0x50)(%rip),%r15
	movq %r15,0x90(%r14)
	movq (localObjptr+0x48)(%rip),%r15
	movq %r15,0x98(%r14)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0xA0(%r14)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0xA8(%r14)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0xB0(%r14)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0xB8(%r14)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0xC0(%r14)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0xC8(%r14)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0xD0(%r14)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0xD8(%r14)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0xE0(%r14)
	addq $0xF0,%r12
	movq 0x20(%rbp),%r15
	jmp L_371149
.p2align 0x4
L_530063:
L_371300:
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq $0x4701,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	jmp L_371149
.p2align 0x4
L_530064:
L_371299:
	movq 0x58(%rbp),%r13
	movq 0xF0(%r13),%r15
	movq 0xE8(%r13),%r14
	movq 0xE0(%r13),%r11
	movq 0xD8(%r13),%r10
	movq 0xD0(%r13),%r9
	movq 0xC8(%r13),%r8
	movq 0xC0(%r13),%rsp
	movq 0xB8(%r13),%rsi
	movq 0xB0(%r13),%rdi
	movq 0xA8(%r13),%rdx
	movq 0xA0(%r13),%rcx
	movq 0x98(%r13),%rbx
	movq 0x90(%r13),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x88(%r13),%r15
	movq %r14,(localObjptr+0x8)(%rip)
	movq 0x80(%r13),%r14
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x78(%r13),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x70(%r13),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x68(%r13),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x60(%r13),%r8
	movq %rsp,(localObjptr+0x30)(%rip)
	movq 0x58(%r13),%rsp
	movq %rsi,(localObjptr+0x38)(%rip)
	movq 0x50(%r13),%rsi
	movq %rdi,(localObjptr+0x40)(%rip)
	movq 0x48(%r13),%rdi
	movq %rdx,(localObjptr+0x48)(%rip)
	movq 0x40(%r13),%rdx
	movq %rcx,(localObjptr+0x50)(%rip)
	movq 0x38(%r13),%rcx
	movq %rbx,(localObjptr+0x58)(%rip)
	movq 0x30(%r13),%rbx
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x28(%r13),%rax
	movq %r15,(localObjptr+0x68)(%rip)
	movq 0x20(%r13),%r15
	movq %r14,(localObjptr+0x70)(%rip)
	movq 0x18(%r13),%r14
	movq %r11,(localObjptr+0x78)(%rip)
	movq 0x10(%r13),%r11
	movq %r10,(localObjptr+0x80)(%rip)
	movq 0x8(%r13),%r10
	movq %r9,(localObjptr+0x88)(%rip)
	movq 0x0(%r13),%r9
	movq $0x4711,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	movq %r10,0x8(%r13)
	movq %r11,0x10(%r13)
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %rax,0x28(%r13)
	movq %rbx,0x30(%r13)
	movq %rcx,0x38(%r13)
	movq %rdx,0x40(%r13)
	movq %rdi,0x48(%r13)
	movq %rsi,0x50(%r13)
	movq %rsp,0x58(%r13)
	movq %r8,0x60(%r13)
	movq (localObjptr+0x88)(%rip),%r15
	movq %r15,0x68(%r13)
	movq (localObjptr+0x80)(%rip),%r15
	movq %r15,0x70(%r13)
	movq (localObjptr+0x78)(%rip),%r15
	movq %r15,0x78(%r13)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0x80(%r13)
	movq (localObjptr+0x68)(%rip),%r15
	movq %r15,0x88(%r13)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0x90(%r13)
	movq (localObjptr+0x58)(%rip),%r15
	movq %r15,0x98(%r13)
	movq (localObjptr+0x50)(%rip),%r15
	movq %r15,0xA0(%r13)
	movq (localObjptr+0x48)(%rip),%r15
	movq %r15,0xA8(%r13)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0xB0(%r13)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0xB8(%r13)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0xC0(%r13)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0xC8(%r13)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0xD0(%r13)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0xD8(%r13)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0xE0(%r13)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0xE8(%r13)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0xF0(%r13)
	addq $0x100,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371149
.p2align 0x4
L_530065:
L_371298:
	movq 0x58(%rbp),%r13
	movq 0x80(%r13),%r15
	movq 0x78(%r13),%r14
	movq 0x70(%r13),%r11
	movq 0x68(%r13),%r10
	movq 0x60(%r13),%r9
	movq 0x58(%r13),%r8
	movq 0x50(%r13),%rsp
	movq 0x48(%r13),%rsi
	movq 0x40(%r13),%rdi
	movq 0x38(%r13),%rdx
	movq 0x30(%r13),%rcx
	movq 0x28(%r13),%rbx
	movq 0x20(%r13),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x18(%r13),%r15
	movq %r14,(localObjptr+0x8)(%rip)
	movq 0x10(%r13),%r14
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x8(%r13),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x0(%r13),%r10
	movq $0x4723,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r15,0x18(%r13)
	movq %rax,0x20(%r13)
	movq %rbx,0x28(%r13)
	movq %rcx,0x30(%r13)
	movq %rdx,0x38(%r13)
	movq %rdi,0x40(%r13)
	movq %rsi,0x48(%r13)
	movq %rsp,0x50(%r13)
	movq %r8,0x58(%r13)
	movq %r9,0x60(%r13)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0x68(%r13)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0x70(%r13)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x78(%r13)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0x80(%r13)
	addq $0x90,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371149
.p2align 0x4
L_530066:
L_371297:
	movq 0x58(%rbp),%r13
	movq 0x30(%r13),%r15
	movq 0x28(%r13),%r14
	movq 0x20(%r13),%r11
	movq 0x18(%r13),%r10
	movq 0x10(%r13),%r9
	movq 0x8(%r13),%r8
	movq 0x0(%r13),%rsp
	movq $0x4721,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %rsp,0x0(%r13)
	movq %r8,0x8(%r13)
	movq %r9,0x10(%r13)
	movq %r10,0x18(%r13)
	movq %r11,0x20(%r13)
	movq %r14,0x28(%r13)
	movq %r15,0x30(%r13)
	addq $0x40,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371149
.p2align 0x4
L_530067:
L_371296:
	movq 0x58(%rbp),%r14
	movq 0xB8(%r14),%r15
	movq 0xB0(%r14),%r13
	movq 0xA8(%r14),%r11
	movq 0xA0(%r14),%r10
	movq 0x98(%r14),%r9
	movq 0x90(%r14),%r8
	movq 0x88(%r14),%rsp
	movq 0x80(%r14),%rsi
	movq 0x78(%r14),%rdi
	movq 0x70(%r14),%rdx
	movq 0x68(%r14),%rcx
	movq 0x60(%r14),%rbx
	movq 0x58(%r14),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x50(%r14),%r15
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x48(%r14),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x40(%r14),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x38(%r14),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x30(%r14),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x28(%r14),%r8
	movq %rsp,(localObjptr+0x30)(%rip)
	movq 0x20(%r14),%rsp
	movq %rsi,(localObjptr+0x38)(%rip)
	movq 0x18(%r14),%rsi
	movq %rdi,(localObjptr+0x40)(%rip)
	movq 0x10(%r14),%rdi
	movq %rdx,(localObjptr+0x48)(%rip)
	movq 0x8(%r14),%rdx
	movq %rcx,(localObjptr+0x50)(%rip)
	movq 0x0(%r14),%rcx
	movq $0x4713,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rcx,0x0(%r14)
	movq %rdx,0x8(%r14)
	movq %rdi,0x10(%r14)
	movq %rsi,0x18(%r14)
	movq %rsp,0x20(%r14)
	movq %r8,0x28(%r14)
	movq %r9,0x30(%r14)
	movq %r10,0x38(%r14)
	movq %r11,0x40(%r14)
	movq %r13,0x48(%r14)
	movq %r15,0x50(%r14)
	movq %rax,0x58(%r14)
	movq %rbx,0x60(%r14)
	movq (localObjptr+0x50)(%rip),%r15
	movq %r15,0x68(%r14)
	movq (localObjptr+0x48)(%rip),%r15
	movq %r15,0x70(%r14)
	movq (localObjptr+0x40)(%rip),%r15
	movq %r15,0x78(%r14)
	movq (localObjptr+0x38)(%rip),%r15
	movq %r15,0x80(%r14)
	movq (localObjptr+0x30)(%rip),%r15
	movq %r15,0x88(%r14)
	movq (localObjptr+0x28)(%rip),%r15
	movq %r15,0x90(%r14)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0x98(%r14)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0xA0(%r14)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0xA8(%r14)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0xB0(%r14)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0xB8(%r14)
	addq $0xC8,%r12
	movq 0x20(%rbp),%r15
	jmp L_371149
.p2align 0x4
L_530068:
L_371295:
	movq 0x58(%rbp),%r13
	movq 0x80(%r13),%r15
	movq 0x78(%r13),%r14
	movq 0x70(%r13),%r11
	movq 0x68(%r13),%r10
	movq 0x60(%r13),%r9
	movq 0x58(%r13),%r8
	movq 0x50(%r13),%rsp
	movq 0x48(%r13),%rsi
	movq 0x40(%r13),%rdi
	movq 0x38(%r13),%rdx
	movq 0x30(%r13),%rcx
	movq 0x28(%r13),%rbx
	movq 0x20(%r13),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x18(%r13),%r15
	movq %r14,(localObjptr+0x8)(%rip)
	movq 0x10(%r13),%r14
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x8(%r13),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x0(%r13),%r10
	movq $0x4719,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r15,0x18(%r13)
	movq %rax,0x20(%r13)
	movq %rbx,0x28(%r13)
	movq %rcx,0x30(%r13)
	movq %rdx,0x38(%r13)
	movq %rdi,0x40(%r13)
	movq %rsi,0x48(%r13)
	movq %rsp,0x50(%r13)
	movq %r8,0x58(%r13)
	movq %r9,0x60(%r13)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0x68(%r13)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0x70(%r13)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x78(%r13)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0x80(%r13)
	addq $0x90,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371149
.p2align 0x4
L_530069:
L_371294:
	movq 0x58(%rbp),%r13
	movq 0x88(%r13),%r15
	movq 0x80(%r13),%r14
	movq 0x78(%r13),%r11
	movq 0x70(%r13),%r10
	movq 0x68(%r13),%r9
	movq 0x60(%r13),%r8
	movq 0x58(%r13),%rsp
	movq 0x50(%r13),%rsi
	movq 0x48(%r13),%rdi
	movl 0x0(%r13),%edx
	movq 0x40(%r13),%rcx
	movq 0x38(%r13),%rbx
	movq 0x30(%r13),%rax
	movq %r15,(localObjptr+0x0)(%rip)
	movq 0x28(%r13),%r15
	movq %r14,(localObjptr+0x8)(%rip)
	movq 0x20(%r13),%r14
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x18(%r13),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x10(%r13),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x8(%r13),%r9
	movq $0x4725,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %edx,0x0(%r13)
	movq %r9,0x8(%r13)
	movq %r10,0x10(%r13)
	movq %r11,0x18(%r13)
	movq %r14,0x20(%r13)
	movq %r15,0x28(%r13)
	movq %rax,0x30(%r13)
	movq %rbx,0x38(%r13)
	movq %rcx,0x40(%r13)
	movq %rdi,0x48(%r13)
	movq %rsi,0x50(%r13)
	movq %rsp,0x58(%r13)
	movq %r8,0x60(%r13)
	movq (localObjptr+0x20)(%rip),%r15
	movq %r15,0x68(%r13)
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0x70(%r13)
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0x78(%r13)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x80(%r13)
	movq (localObjptr+0x0)(%rip),%r15
	movq %r15,0x88(%r13)
	addq $0x98,%r12
	movl $0x0,0x4(%r13)
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371149
.p2align 0x4
L_530070:
L_371293:
	movq 0x58(%rbp),%r14
	movq 0x38(%r14),%r15
	movq 0x30(%r14),%r13
	movq 0x28(%r14),%r11
	movq 0x20(%r14),%r10
	movq 0x18(%r14),%r9
	movq 0x10(%r14),%r8
	movq 0x8(%r14),%rsp
	movq 0x0(%r14),%rsi
	movq $0x472D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rsi,0x0(%r14)
	movq %rsp,0x8(%r14)
	movq %r8,0x10(%r14)
	movq %r9,0x18(%r14)
	movq %r10,0x20(%r14)
	movq %r11,0x28(%r14)
	movq %r13,0x30(%r14)
	movq %r15,0x38(%r14)
	addq $0x48,%r12
	movq 0x20(%rbp),%r15
	jmp L_371149
.p2align 0x4
L_530071:
L_371292:
	movq 0x58(%rbp),%r13
	movq 0x30(%r13),%r15
	movq 0x28(%r13),%r14
	movq 0x20(%r13),%r11
	movq 0x18(%r13),%r10
	movq 0x10(%r13),%r9
	movq 0x8(%r13),%r8
	movq 0x0(%r13),%rsp
	movq $0x4731,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %rsp,0x0(%r13)
	movq %r8,0x8(%r13)
	movq %r9,0x10(%r13)
	movq %r10,0x18(%r13)
	movq %r11,0x20(%r13)
	movq %r14,0x28(%r13)
	movq %r15,0x30(%r13)
	addq $0x40,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371149
.p2align 0x4
L_530072:
L_371291:
	movq 0x58(%rbp),%r13
	movq 0x38(%r13),%r15
	movq 0x30(%r13),%r14
	movq 0x28(%r13),%r11
	movq 0x20(%r13),%r10
	movq 0x18(%r13),%r9
	movq 0x10(%r13),%r8
	movl 0x0(%r13),%esp
	movq 0x8(%r13),%rsi
	movq $0x4729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %esp,0x0(%r13)
	movq %rsi,0x8(%r13)
	movq %r8,0x10(%r13)
	movq %r9,0x18(%r13)
	movq %r10,0x20(%r13)
	movq %r11,0x28(%r13)
	movq %r14,0x30(%r13)
	movq %r15,0x38(%r13)
	addq $0x48,%r12
	movl $0x0,0x4(%r13)
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371149
.p2align 0x4
L_530073:
L_371290:
	movq 0x58(%rbp),%r13
	movq 0x40(%r13),%r15
	movq 0x38(%r13),%r14
	movq 0x30(%r13),%r11
	movq 0x28(%r13),%r10
	movq 0x20(%r13),%r9
	movq 0x18(%r13),%r8
	movq 0x10(%r13),%rsp
	movq 0x8(%r13),%rsi
	movq 0x0(%r13),%rdi
	movq $0x471D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %rdi,0x0(%r13)
	movq %rsi,0x8(%r13)
	movq %rsp,0x10(%r13)
	movq %r8,0x18(%r13)
	movq %r9,0x20(%r13)
	movq %r10,0x28(%r13)
	movq %r11,0x30(%r13)
	movq %r14,0x38(%r13)
	movq %r15,0x40(%r13)
	addq $0x50,%r12
	movq 0x20(%rbp),%r15
	movq %r13,%r14
	jmp L_371149
.p2align 0x4
L_530074:
L_371314:
	movq $0x1,%r14
	movq 0x20(%rbp),%r13
	xchgq %r13,%r15
	jmp L_371149
.p2align 0x4
.long 0x5534
L_371179:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371181
L_371246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_371247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371247
.p2align 0x4
.long 0x5538
L_371247:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_371181:
	movq 0x50(%rbp),%r15
	andq $0x3,%r15
	jz L_530077
L_371182:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371105
L_371183:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530077:
L_371185:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
L_371186:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_530096
L_371190:
	movq 0x8(%r15),%r14
	movq %r14,%r13
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_530094
L_371194:
	shrq $0x1,%r14
	movl %r14d,0x50(%rbp)
L_371195:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_530092
L_371199:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_530090
L_371203:
	shrq $0x1,%r14
	movl %r14d,0x54(%rbp)
L_371204:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_530088
L_371208:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_371209:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_530086
L_371213:
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	cmpq $0x1,%r14
	je L_530079
L_371214:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371105
L_371215:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530079:
L_371217:
	movl 0x50(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_530084
L_371218:
	movl 0x54(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_530082
L_371219:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_371220:
	movq 0x60(%rbp),%r14
	andq $0x1,%r14
	jnz L_530081
L_371221:
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x70(%rbp)
L_371222:
	movq (globalObjptr+0x21D0)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_371096
L_371223:
	movl %r14d,0x0(%r15)
	movl %r13d,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_371224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_530081:
L_371232:
	movq %r15,0x20(%rbp)
	movq 0x60(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x48(%rbp)
L_371233:
	movl %ecx,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_371234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_530082:
L_371239:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_371240:
	movq 0x60(%rbp),%r14
	andq $0x1,%r14
	jnz L_530083
L_371241:
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_371222
.p2align 0x4
L_530083:
L_371242:
	movq %r15,0x20(%rbp)
	movq 0x60(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_371233
.p2align 0x4
L_530084:
L_371243:
	movl 0x54(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_530085
L_371244:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_371220
.p2align 0x4
L_530085:
L_371245:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_371240
.p2align 0x4
L_530086:
L_371210:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371105
L_371211:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530088:
L_371205:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371105
L_371206:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530090:
L_371200:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371105
L_371201:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530092:
L_371196:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371105
L_371197:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530094:
L_371191:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371105
L_371192:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530096:
L_371187:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371105
L_371188:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
.long 0x552A
L_371099:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371101
L_371168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_371169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371169
.p2align 0x4
.long 0x5532
L_371169:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_371101:
	movq 0x50(%rbp),%r15
	andq $0x3,%r15
	jz L_530100
L_371102:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371105
L_371103:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530100:
L_371109:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
L_371110:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_530113
L_371114:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_371115:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_530111
L_371119:
	movq 0x0(%r13),%r15
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_530109
L_371123:
	shrq $0x1,%r15
	movl %r15d,0x50(%rbp)
L_371124:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_530107
L_371128:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
L_371129:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_530105
L_371133:
	movq 0x0(%r13),%r14
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_530103
L_371137:
	shrq $0x1,%r14
	movl %r14d,0x54(%rbp)
	cmpq $0x1,%r15
	je L_530102
L_371138:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371105
L_371139:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530102:
L_371141:
	movl 0x50(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_371142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_530103:
L_371134:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371105
L_371135:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530105:
L_371130:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371105
L_371131:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530107:
L_371125:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371105
L_371126:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530109:
L_371120:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371105
L_371121:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530111:
L_371116:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371105
L_371117:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
L_530113:
L_371111:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_371105
L_371112:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_371089
.p2align 0x4
.long 0x5535
L_371224:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371225
L_371230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_371231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371231
.p2align 0x4
.long 0x5537
L_371231:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_371225:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x116D0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x116E8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_371226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5534
L_371234:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371235
L_371237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_371238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371238
.p2align 0x4
.long 0x5537
L_371238:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_371235:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_371236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x552B
L_371142:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x54(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_371143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x5536
L_371226:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371227
L_371228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_371229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371229
.p2align 0x4
.long 0x4F5B
L_371229:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_371227:
	movq $0x470D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x54(%rbp),%r13d
	movl %r13d,0x8(%r14)
	movl 0x50(%rbp),%r13d
	movl %r13d,0xC(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x20(%rbp),%r15
	jmp L_371149
.p2align 0x4
.long 0x5534
L_371236:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq 0x48(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_371222
.p2align 0x4
.long 0x552C
L_371143:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x21D0)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_371096
L_371144:
	movl %r14d,0x0(%r15)
	movl %r13d,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_371145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x552D
L_371145:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371146
L_371166:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_371167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371167
.p2align 0x4
.long 0x5531
L_371167:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_371146:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x116D0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x116E0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_371147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x552E
L_371147:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371148
L_371159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_371160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371160
.p2align 0x4
.long 0x5530
L_371160:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_371148:
	movq $0x470B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl 0x54(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl 0x50(%rbp),%r13d
	movl %r13d,0x4(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r15
	jmp L_371149
.text
.p2align 0x4
.globl nums_0
.hidden nums_0
nums_0:
L_371346:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_371464
L_371347:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530134
L_371348:
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x0(%rbp),%r13
	cmpq (globalObjptr+0xA058)(%rip),%r13
	je L_371462
L_371349:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz length_50
L_371457:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_271:
	cmpq %r15,%r14
	je L_530132
L_371458:
	movq 0x0(%rbp),%r13
	movq (globalObjptr+0xA058)(%rip),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne length_77
L_371460:
	incq %r14
	jmp vectorEqualLoop_271
.p2align 0x4
length_77:
length_50:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movl %r14d,(localWord32+0x0)(%rip)
	cmpq %r15,%r13
	jne L_530131
L_371353:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3677:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_530124
L_371453:
	movl %ebx,%r14d
	incl %r14d
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_530123
L_371455:
	incl %ecx
	jo L_530122
L_371456:
	movl %r14d,%ebx
	jmp loop_3677
.p2align 0x4
L_530122:
L_371361:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530123:
L_371356:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530124:
L_371354:
	cmpq $0x0,%r15
	jna L_371356
L_371357:
	movq 0x0(%rbp),%r14
	cmpb $0x28,0x0(%r14)
	jne L_371359
L_371360:
	decl %ecx
	jo L_371361
L_371362:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_371356
L_371364:
	cmpb $0x29,0x0(%r14,%r13,1)
	jne L_530126
L_371366:
	decl %ecx
	jo L_371361
L_371367:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x30(%rbp)
	leaq L_371420(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_371368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_530126:
L_371359:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530131:
L_371352:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530132:
L_371462:
	movq (globalObjptr+0x21C8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530134:
L_371464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_371465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371465
.p2align 0x4
.long 0x45C
L_371465:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_371348
.p2align 0x4
.long 0x496
L_371368:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb $0x2C,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_371369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
.long 0x25
L_371420:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r14
L_371421:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_530138
L_371423:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xD35,%r15
	jne L_530137
L_371424:
	movq %r14,%r13
	movq 0x0(%r14),%r14
	movq %r14,%r15
	movq %r13,%r14
L_371391:
	cmpq 0x20(%rbp),%r15
	je L_371359
L_371392:
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530137:
	movq %r14,%r15
L_371422:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530138:
	movq %r14,%r15
	jmp L_371422
.p2align 0x4
.long 0x496
L_371369:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371370
L_371451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_371452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371452
.p2align 0x4
.long 0x497
L_371452:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_371370:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_530161
L_371371:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_371372:
	cmpq (globalObjptr+0xCDC0)(%rip),%r15
	je L_371448
L_371373:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq $0x4,%r14
	jne vectorEqual_98
L_371443:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_270:
	cmpq %r13,%r14
	je L_530159
L_371444:
	movq (globalObjptr+0xCDC0)(%rip),%r10
	movb 0x0(%r10,%r13,1),%r11b
	cmpb %r11b,0x0(%r15,%r13,1)
	jne vectorEqual_292
L_371446:
	incq %r13
	jmp vectorEqualLoop_270
.p2align 0x4
vectorEqual_292:
vectorEqual_98:
	cmpq %r15,(globalObjptr+0xCDB0)(%rip)
	je L_371441
L_371375:
	cmpq $0x5,%r14
	jne vectorEqual_99
L_371436:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_269:
	cmpq %r13,%r14
	je L_530157
L_371437:
	movq (globalObjptr+0xCDB0)(%rip),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne vectorEqual_293
L_371439:
	incq %r13
	jmp vectorEqualLoop_269
.p2align 0x4
vectorEqual_293:
vectorEqual_99:
	cmpq (globalObjptr+0xD5F8)(%rip),%r15
	je L_371434
L_371377:
	cmpq $0x3,%r14
	jne length_51
L_371429:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_268:
	cmpq %r13,%r14
	je L_530150
L_371430:
	movq (globalObjptr+0xD5F8)(%rip),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne length_79
L_371432:
	incq %r13
	jmp vectorEqualLoop_268
.p2align 0x4
length_79:
length_51:
	movl %r14d,%r13d
	movslq %r13d,%r11
	movl %r13d,(localWord32+0x0)(%rip)
	cmpq %r14,%r11
	jne L_371352
L_371380:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3678:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_530141
L_371425:
	movl %ebx,%r13d
	incl %r13d
	movslq %ebx,%r11
	cmpq %r14,%r11
	jnb L_371356
L_371427:
	incl %ecx
	jo L_371361
L_371428:
	movl %r13d,%ebx
	jmp loop_3678
.p2align 0x4
L_530141:
L_371381:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3679:
	cmpl %ecx,%ebx
	je L_530148
L_371382:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_371356
L_371384:
	movb 0x0(%r15,%r13,1),%r11b
	cmpb $0x39,%r11b
	ja L_530145
L_371385:
	cmpb $0x30,%r11b
	jb L_530143
L_371386:
	incl %ebx
	jo L_371361
L_371387:
	jmp loop_3679
.p2align 0x4
L_530143:
L_371388:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371390
L_371394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_371395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371395
.p2align 0x4
.long 0x49D
L_371395:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_371390:
	movq $0x1A6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp L_371391
.p2align 0x4
L_530145:
L_371396:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371390
L_371398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_371399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371399
.p2align 0x4
.long 0x49D
L_371399:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_371390
.p2align 0x4
L_530148:
L_371400:
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_371401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1206
.p2align 0x4
L_530150:
L_371434:
	movq (globalObjptr+0x21C0)(%rip),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_371403:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530155
.p2align 0x4,,0x7
L_371404:
	movq $0x277B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_530151
L_371405:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_371372
.p2align 0x4
L_530151:
L_371406:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_371407:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530154
.p2align 0x4,,0x7
L_371408:
	movq $0x277B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_530152
L_371409:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_371407
.p2align 0x4
L_530152:
L_371412:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_371359
L_371413:
	movq $0x277D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530154:
L_371414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_371415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371415
.p2align 0x4
.long 0x4FC
L_371415:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_371408
.p2align 0x4
L_530155:
L_371416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371417
.p2align 0x4
.long 0x986
L_371417:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_371404
.p2align 0x4
L_530157:
L_371441:
	movq (globalWord64+0x1C8)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_371403
.p2align 0x4
L_530159:
L_371448:
	movq (globalWord64+0x1D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_371403
.p2align 0x4
L_530161:
L_371450:
	movq $0x1,%r15
	jmp L_371412
.p2align 0x4
.long 0x7BE
L_371401:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371402
L_371418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371419
.p2align 0x4
.long 0x4467
L_371419:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_371402:
	movq $0x2779,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	jmp L_371403
.text
.p2align 0x4
.globl x_1207
.hidden x_1207
x_1207:
L_371466:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_371467
L_372083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_372084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372084
.p2align 0x4
.long 0x452
L_372084:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_371467:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
loop_3680:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530441
.p2align 0x4,,0x7
L_371468:
	movq 0x20(%rbp),%r15
	cmpq $0x0,%r15
	jl L_530164
L_371469:
	movq %r15,%r14
	decq %r14
	movq 0x0(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r11b
	movq %r14,0x20(%rbp)
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r11b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	jmp loop_3680
.p2align 0x4
L_530164:
L_371470:
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
Re_0:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530440
.p2align 0x4,,0x7
L_371471:
	movq $0x318B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
Br_0:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530439
.p2align 0x4,,0x7
L_371472:
	movq $0x3187,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
P_0:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530438
.p2align 0x4,,0x7
L_371473:
	movq $0x3181,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
L_371474:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_371475
L_371476:
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x20(%rbp)
L_371477:
	movb 0x20(%rbp),%r15b
	cmpb $0x24,%r15b
	je L_530436
	cmpb $0x28,%r15b
	je L_530435
	cmpb $0x2E,%r15b
	je L_530434
	cmpb $0x5B,%r15b
	je L_530217
	cmpb $0x5C,%r15b
	je L_530215
	cmpb $0x5E,%r15b
	je L_530165
x_1146:
	leaq L_371547(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb 0x20(%rbp),%r15b
	movb %r15b,0x38(%rbp)
	movq (globalObjptr+0x116F8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_371478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contains_0
.p2align 0x4
L_530165:
L_372074:
	movq $0x1,%r14
	movq 0x18(%rbp),%r15
finishR_0:
	movq (globalObjptr+0x14E8)(%rip),%r13
	movq $0xF6F,0xFFFFFFFFFFFFFFF8(%r13)
	movq 0x28(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0x18C0,%r10
	je L_530213
L_371674:
	movq 0x10(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r11),%r8
	cmpq $0x1,%r15
	je L_530212
L_371675:
	movq %r8,0x28(%rbp)
	movq %r9,0x30(%rbp)
	movq %r10,0x38(%rbp)
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x20(%rbp)
	movq %r15,0x50(%rbp)
	movq %r13,0x40(%rbp)
.p2align 0x4,,0x7
L_371483:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530211
.p2align 0x4,,0x7
L_371484:
	movb 0x20(%rbp),%r15b
	cmpb $0x29,%r15b
	je L_530210
	cmpb $0x2A,%r15b
	je L_530209
	cmpb $0x2B,%r15b
	je L_530208
	cmpb $0x3F,%r15b
	je L_530207
	cmpb $0x7B,%r15b
	je L_530171
	cmpb $0x7C,%r15b
	je L_530166
default_31:
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x28BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x3183,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x28(%rbp)
	jmp L_371477
.p2align 0x4
L_530166:
L_371670:
	movq 0x48(%rbp),%r14
	movq 0x50(%rbp),%r13
	movq %r13,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r13
	movq %r13,0x30(%rbp)
finish_1:
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_371486:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530170
.p2align 0x4,,0x7
L_371487:
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_530167
L_371488:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_371486
.p2align 0x4
L_530167:
L_371489:
	movq $0x1B85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_371490:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530169
.p2align 0x4,,0x7
L_371491:
	movq $0x28BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_530168
L_371492:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_371490
.p2align 0x4
L_530168:
L_371493:
	movq %r15,0x48(%rbp)
	leaq L_371547(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_371494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_12
.p2align 0x4
L_530169:
L_371582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_371583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371583
.p2align 0x4
.long 0x5EB
L_371583:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_371491
.p2align 0x4
L_530170:
L_371584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_371585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371585
.p2align 0x4
.long 0x4AD
L_371585:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_371487
.p2align 0x4
L_530171:
L_371590:
	movq 0x18(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz default_31
L_371591:
	movq 0x8(%r13),%r14
	movb 0x0(%r13),%r11b
	cmpb $0x39,%r11b
	ja default_31
L_371592:
	cmpb $0x30,%r11b
	jb default_31
L_371593:
	movzbl %r11b,%ecx
	subl $0x30,%ecx
	jo L_371594
L_371595:
	cmpq $0x1,%r14
	je L_530205
L_371596:
	movb 0x0(%r14),%dl
	movq %r14,%r13
	movq 0x8(%r14),%r14
	movq %r14,%r15
	movq %r13,%r14
.p2align 0x4,,0x7
L_371597:
	cmpb $0x39,%dl
	ja finish_9
L_371598:
	cmpb $0x30,%dl
	jb finish_13
L_371599:
	movzbl %dl,%r13d
	subl $0x30,%r13d
	jo L_371594
L_371600:
	imull $0xA,%ecx
	jo L_371594
L_371601:
	addl %ecx,%r13d
	jo L_371594
L_371602:
	cmpq $0x1,%r15
	je L_530172
L_371603:
	movb 0x0(%r15),%dl
	movq %r15,%r14
	movq 0x8(%r15),%r15
	movl %r13d,%ecx
	jmp L_371597
.p2align 0x4
L_530172:
L_371604:
	movl %r13d,0x18(%rbp)
L_371605:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_371475
L_371606:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movb 0x0(%r15),%r14b
	cmpb $0x2C,%r14b
	je L_530178
	cmpb $0x7D,%r14b
	je L_530173
L_371475:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530173:
L_371656:
	cmpb $0x7D,%r14b
	jne L_371475
L_371657:
	movl 0x18(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_530176
L_371658:
	decl %r15d
	movl %r15d,0x50(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
loop_3684:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530175
.p2align 0x4,,0x7
L_371659:
	movl 0x50(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_530174
L_371660:
	decl %r15d
	movl %r15d,0x50(%rbp)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	jmp loop_3684
.p2align 0x4
L_530174:
L_371661:
	movq $0x1B85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x18(%rbp)
	movq 0x28(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x40(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq %r13,%r15
	jmp finish_1
.p2align 0x4
L_530175:
L_371662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_371663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371663
.p2align 0x4
.long 0x9A4
L_371663:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_371659
.p2align 0x4
L_530176:
L_371639:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1490)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530178:
L_371607:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_371475
L_371608:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movb 0x0(%r15),%r14b
	cmpb $0x7D,%r14b
	jne L_530183
L_371646:
	cmpb $0x7D,%r14b
	jne L_371475
L_371647:
	movl 0x18(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_371639
L_371648:
	decl %r15d
	movl %r15d,0x20(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
loop_3683:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530180
.p2align 0x4,,0x7
L_371649:
	movl 0x20(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_530179
L_371650:
	decl %r15d
	movl %r15d,0x20(%rbp)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	jmp loop_3683
.p2align 0x4
L_530179:
L_371651:
	movq $0x1B85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B81,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x48(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x18(%rbp)
	movq 0x28(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x40(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq %r13,%r15
	jmp finish_1
.p2align 0x4
L_530180:
L_371652:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_371653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371653
.p2align 0x4
.long 0x2E11
L_371653:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_371649
.p2align 0x4
L_530183:
L_371609:
	movq 0x20(%rbp),%r13
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371610:
	movq 0x8(%r13),%r14
	movb 0x0(%r13),%r11b
	cmpb $0x39,%r11b
	ja L_371475
L_371611:
	cmpb $0x30,%r11b
	jb L_371475
L_371612:
	movzbl %r11b,%ecx
	subl $0x30,%ecx
	jo L_371594
L_371613:
	cmpq $0x1,%r14
	je L_530195
L_371614:
	movb 0x0(%r14),%dl
	movq %r14,%r15
	movq 0x8(%r14),%r14
	xchgq %r14,%r15
.p2align 0x4,,0x7
L_371615:
	cmpb $0x39,%dl
	ja finish_8
L_371616:
	cmpb $0x30,%dl
	jb finish_11
L_371617:
	movzbl %dl,%r13d
	subl $0x30,%r13d
	jo L_371594
L_371618:
	imull $0xA,%ecx
	jo L_371594
L_371619:
	addl %ecx,%r13d
	jo L_371594
L_371620:
	cmpq $0x1,%r15
	je L_530184
L_371621:
	movb 0x0(%r15),%dl
	movq %r15,%r14
	movq 0x8(%r15),%r15
	movl %r13d,%ecx
	jmp L_371615
.p2align 0x4
L_530184:
L_371622:
	movl %r13d,0x1C(%rbp)
finish_7:
	movl 0x18(%rbp),%r14d
	cmpl %r14d,0x1C(%rbp)
	jl L_371475
L_371624:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371625:
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	cmpb $0x7D,0x0(%r15)
	jne L_371475
L_371626:
	cmpl $0x0,%r14d
	jl L_371639
L_371627:
	decl %r14d
	movl %r14d,0x58(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
loop_3682:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530187
.p2align 0x4,,0x7
L_371628:
	movl 0x58(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_530185
L_371629:
	decl %r15d
	movl %r15d,0x58(%rbp)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	jmp loop_3682
.p2align 0x4
L_530185:
L_371630:
	movq $0x1B85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x1C(%rbp),%r14d
	subl 0x18(%rbp),%r14d
	jo L_530186
L_371631:
	movl %r14d,0x68(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_371632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp upper_0
.p2align 0x4
L_530186:
L_371594:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530187:
L_371636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_371637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371637
.p2align 0x4
.long 0x1357
L_371637:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_371628
.p2align 0x4
finish_11:
finish_8:
	movl %ecx,0x1C(%rbp)
	movq %r14,%r15
	jmp finish_7
.p2align 0x4
L_530195:
L_371643:
	movl %ecx,0x1C(%rbp)
	movq %r14,%r15
	jmp finish_7
.p2align 0x4
finish_13:
finish_9:
	movl %ecx,0x18(%rbp)
	movq %r14,%r15
	jmp L_371605
.p2align 0x4
L_530205:
L_371667:
	movl %ecx,0x18(%rbp)
	movq %r14,%r15
	jmp L_371605
.p2align 0x4
L_530207:
L_371588:
	movq $0x1B97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x1498)(%rip),%r11
	movq %r11,0x0(%r13)
	movq $0x1B87,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x40(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq %r13,%r15
	jmp finish_1
.p2align 0x4
L_530208:
L_371587:
	movq $0x1B81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq $0x1B85,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x38(%rbp),%r11
	movq 0x40(%rbp),%r10
	movq %r10,0x30(%rbp)
	movq %r11,%r15
	movq %r13,%r14
	jmp finish_1
.p2align 0x4
L_530209:
L_371586:
	movq $0x1B81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x40(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq %r13,%r15
	jmp finish_1
.p2align 0x4
L_530210:
L_371485:
	movq 0x48(%rbp),%r14
	movq 0x50(%rbp),%r13
	movq %r13,0x18(%rbp)
	movq 0x28(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x40(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq %r13,%r15
	jmp finish_1
.p2align 0x4
L_530211:
L_371671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_371672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371672
.p2align 0x4
.long 0x2E11
L_371672:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_371484
.p2align 0x4
L_530212:
L_371676:
	movq %r15,%r11
	movq %r9,%r15
	movq %r14,%r9
	movq %r8,%r14
	xchgq %r10,%r13
L_371543:
	movq %r11,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq %r10,0x30(%rbp)
	movq %r13,%r15
	movq %r9,%r14
	jmp finish_1
.p2align 0x4
L_530213:
L_371481:
	movq 0x0(%r11),%r10
	cmpq $0x1,%r15
	je L_530214
L_371482:
	movq %r10,0x28(%rbp)
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x20(%rbp)
	movq %r15,0x50(%rbp)
	movq $0x1,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movq %r13,0x40(%rbp)
	jmp L_371483
.p2align 0x4
L_530214:
L_371673:
	movq $0x1,%r8
	movq $0x1,%rsp
	movq %r15,%r11
	movq %r8,%r15
	movq %r14,%r9
	movq %r10,%r14
	movq %r13,%r10
	movq %rsp,%r13
	jmp L_371543
.p2align 0x4
L_530215:
L_372072:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz x_1146
L_372073:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movb 0x0(%r14),%r13b
	movb %r13b,0x18(%rbp)
.p2align 0x4,,0x7
finishC_0:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530216
.p2align 0x4,,0x7
L_371480:
	movzbq 0x18(%rbp),%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x1B89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	jmp finishR_0
.p2align 0x4
L_530216:
L_371677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_371678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371678
.p2align 0x4
.long 0x508
L_371678:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_371480
.p2align 0x4
L_530217:
L_371686:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_371475
L_371687:
	movq 0x8(%r14),%r13
	cmpb $0x5E,0x0(%r14)
	jne x_2260
L_372054:
	cmpq $0x1,%r13
	je L_371475
L_372055:
	movq 0x8(%r13),%r14
	movq %r14,%r11
	movb 0x0(%r13),%r10b
	cmpb $0x5D,%r10b
	je L_530421
x_1153:
	cmpq $0x1,%r13
	je L_371475
L_372056:
	cmpb $0x2D,%r10b
	je L_530418
L_372057:
	movq %r14,0x18(%rbp)
	movb %r10b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	movq $0x1,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movl $0x1,0x24(%rbp)
	movq $0x1,0x40(%rbp)
L_371691:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530417
.p2align 0x4,,0x7
L_371692:
	movb 0x20(%rbp),%r14b
	cmpb $0x2D,%r14b
	je L_530414
	cmpb $0x5B,%r14b
	je L_530241
	cmpb $0x5D,%r14b
	je L_530220
L_371694:
	movq 0x18(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz x_1151
L_371697:
	movq 0x8(%r14),%r13
	cmpb $0x2D,0x0(%r14)
	jne x_1151
L_371699:
	movq %r13,%r15
	andq $0x3,%r15
	jnz x_2255
L_371700:
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	movq %r13,%r15
x_1152:
	movzbl 0x20(%rbp),%r14d
	movzbl %dl,%r13d
	movq $0x4113,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r13d,0x0(%r11)
	movl %r14d,0x4(%r11)
	addq $0x10,%r12
	movq $0x28BF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
L_371701:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371702:
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x20(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_371691
.p2align 0x4
x_2255:
x_1151:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_371695:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_371475
L_371696:
	movq %r15,0x38(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x20(%rbp)
	movq %r14,0x48(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_371691
.p2align 0x4
L_530220:
L_372037:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_530240
L_372038:
	movq 0x8(%r13),%r15
	movq 0x48(%rbp),%r14
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_371707:
	incl %ecx
	cmpq $0x1,%r15
	je L_530221
L_371708:
	movq 0x8(%r15),%r15
	jmp L_371707
.p2align 0x4
L_530221:
L_371709:
	movq %r13,0x18(%rbp)
	movq %r14,0x38(%rbp)
L_371710:
	movslq %ecx,%r15
	movq %r15,0x48(%rbp)
	testq %r15,%r15
	jnz L_530238
L_371754:
	movq (globalObjptr+0x598)(%rip),%r15
	movq %r15,0x50(%rbp)
.p2align 0x4,,0x7
L_371714:
	movq 0x18(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3685:
	cmpq 0x48(%rbp),%r15
	jnl L_530223
L_371748:
	cmpq $0x1,%r14
	je L_530222
L_371749:
	movq 0x8(%r14),%r13
	movq 0x50(%rbp),%r11
	movb 0x0(%r14),%r10b
	movb %r10b,0x0(%r11,%r15,1)
	incq %r15
	movq %r13,%r14
	jmp loop_3685
.p2align 0x4
L_530222:
L_371751:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530223:
L_371715:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530237
.p2align 0x4,,0x7
L_371716:
	movq 0x50(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x24(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_530234
L_371717:
	movq $0x4955,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x4951,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1B89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1B97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1B87,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_530233
L_371718:
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x30(%rbp)
L_371719:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530232
.p2align 0x4,,0x7
L_371720:
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x48(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_530231
L_371722:
	decl %r15d
	jo L_371594
L_371723:
	movl %r15d,0x50(%rbp)
	movq $0x1,0x30(%rbp)
loop_3686:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530229
.p2align 0x4,,0x7
L_371724:
	movl 0x50(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_530225
L_371725:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	cmpq 0x48(%rbp),%r13
	jnb L_530224
L_371727:
	movl %r14d,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movzbq 0x0(%r15,%r13,1),%r14
	shlq $0x2,%r14
	orq $0x2,%r14
	movq $0x1B89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1B97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x30(%rbp)
	jmp loop_3686
.p2align 0x4
L_530224:
L_371726:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530225:
L_371728:
	movq $0x1B85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r13)
	movq $0x1B87,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_530226
L_371729:
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_371719
.p2align 0x4
L_530226:
L_371730:
	movq %r14,%r15
L_371732:
	movq 0x38(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_371475
L_371733:
	movq 0x8(%r13),%r14
	movb 0x0(%r13),%dl
L_371734:
	cmpb $0x5D,%dl
	jne L_371475
L_371735:
	xchgq %r14,%r15
	jmp finishR_0
.p2align 0x4
L_530229:
L_371736:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_371737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371737
.p2align 0x4
.long 0x5541
L_371737:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_371724
.p2align 0x4
L_530231:
L_371721:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530232:
L_371738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371739
.p2align 0x4
.long 0x5E7
L_371739:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_371720
.p2align 0x4
L_530233:
L_371740:
	xchgq %r14,%r15
	jmp L_371732
.p2align 0x4
L_530234:
L_371741:
	cmpq $0x1,0x30(%rbp)
	jne L_530236
L_371743:
	movq $0x4953,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
L_371744:
	movq 0x38(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_371475
L_371745:
	movq 0x8(%r13),%r14
	movb 0x0(%r13),%dl
	jmp L_371734
.p2align 0x4
L_530236:
L_371742:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x14D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530237:
L_371746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_371747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371747
.p2align 0x4
.long 0xBB0
L_371747:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_371716
.p2align 0x4
L_530238:
L_371711:
	movq 0x48(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_530239
L_371712:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_371713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371713
.p2align 0x4
.long 0xC47
L_371713:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
	jmp L_371714
.p2align 0x4
L_530239:
L_371753:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530240:
L_372039:
	movq %r13,0x18(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	xorl %ecx,%ecx
	jmp L_371710
.p2align 0x4
L_530241:
L_371756:
	movq 0x18(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz x_1151
L_371757:
	movq 0x8(%r15),%r13
	movb 0x0(%r15),%r11b
	cmpb $0x2D,%r11b
	je L_530413
	cmpb $0x2E,%r11b
	je L_530394
	cmpb $0x3A,%r11b
	je L_530242
	jmp x_1151
.p2align 0x4
L_530242:
L_371807:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371808:
	movq 0x8(%r13),%r15
	movb 0x0(%r13),%r11b
	cmpb $0x61,%r11b
	je L_530369
	cmpb $0x62,%r11b
	je L_530362
	cmpb $0x63,%r11b
	je L_530348
	cmpb $0x64,%r11b
	je L_530334
	cmpb $0x67,%r11b
	je L_530320
	cmpb $0x6C,%r11b
	je L_530306
	cmpb $0x70,%r11b
	je L_530287
	cmpb $0x73,%r11b
	je L_530273
	cmpb $0x75,%r11b
	je L_530259
	cmpb $0x78,%r11b
	je L_530243
	jmp L_371475
.p2align 0x4
L_530243:
L_372014:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_372015:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x64,0x0(%r15)
	jne L_371475
L_372017:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_372018:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x69,0x0(%r11)
	jne L_371475
L_372020:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_372021:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x67,0x0(%r13)
	jne L_371475
L_372023:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_372024:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x69,0x0(%r11)
	jne L_371475
L_372026:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_372027:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x74,0x0(%r13)
	jne L_371475
L_372029:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_372030:
	movq 0x8(%r11),%r15
	cmpb $0x3A,0x0(%r11)
	jne L_371475
L_372032:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_372033:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371475
L_372034:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0xB,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_372035:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371475
L_372036:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371691
.p2align 0x4
L_530259:
L_371993:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371994:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x70,0x0(%r15)
	jne L_371475
L_371996:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_371997:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x70,0x0(%r11)
	jne L_371475
L_371999:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_372000:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x65,0x0(%r13)
	jne L_371475
L_372002:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_372003:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x72,0x0(%r11)
	jne L_371475
L_372005:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_372006:
	movq 0x8(%r13),%r15
	cmpb $0x3A,0x0(%r13)
	jne L_371475
L_372008:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_372009:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371475
L_372010:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x3,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_372011:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371475
L_372012:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371691
.p2align 0x4
L_530273:
L_371972:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371973:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x70,0x0(%r15)
	jne L_371475
L_371975:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_371976:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x61,0x0(%r11)
	jne L_371475
L_371978:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371979:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x63,0x0(%r13)
	jne L_371475
L_371981:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_371982:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x65,0x0(%r11)
	jne L_371475
L_371984:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371985:
	movq 0x8(%r13),%r15
	cmpb $0x3A,0x0(%r13)
	jne L_371475
L_371987:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371988:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371475
L_371989:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x2,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_371990:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371475
L_371991:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371691
.p2align 0x4
L_530287:
L_371942:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371943:
	movq 0x8(%r15),%r13
	movb 0x0(%r15),%r11b
	cmpb $0x72,%r11b
	je L_530293
	cmpb $0x75,%r11b
	je L_530288
	jmp L_371475
.p2align 0x4
L_530288:
L_371963:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371964:
	movq 0x8(%r13),%r15
	cmpb $0x6E,0x0(%r13)
	jne L_371475
L_371966:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371967:
	movq 0x8(%r15),%r13
	movq %r13,(localObjptr+0x0)(%rip)
	cmpb $0x63,0x0(%r15)
	jne L_371475
L_371969:
	jmp L_371475
.p2align 0x4
L_530293:
L_371945:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371946:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x69,0x0(%r13)
	jne L_371475
L_371948:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_371949:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x6E,0x0(%r11)
	jne L_371475
L_371951:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371952:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x74,0x0(%r13)
	jne L_371475
L_371954:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_371955:
	movq 0x8(%r11),%r15
	cmpb $0x3A,0x0(%r11)
	jne L_371475
L_371957:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371958:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371475
L_371959:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0xA,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_371960:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371475
L_371961:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371691
.p2align 0x4
L_530306:
L_371921:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371922:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x6F,0x0(%r15)
	jne L_371475
L_371924:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_371925:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x77,0x0(%r11)
	jne L_371475
L_371927:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371928:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x65,0x0(%r13)
	jne L_371475
L_371930:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_371931:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x72,0x0(%r11)
	jne L_371475
L_371933:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371934:
	movq 0x8(%r13),%r15
	cmpb $0x3A,0x0(%r13)
	jne L_371475
L_371936:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371937:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371475
L_371938:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0xD,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_371939:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371475
L_371940:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371691
.p2align 0x4
L_530320:
L_371900:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371901:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x72,0x0(%r15)
	jne L_371475
L_371903:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_371904:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x61,0x0(%r11)
	jne L_371475
L_371906:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371907:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x70,0x0(%r13)
	jne L_371475
L_371909:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_371910:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x68,0x0(%r11)
	jne L_371475
L_371912:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371913:
	movq 0x8(%r13),%r15
	cmpb $0x3A,0x0(%r13)
	jne L_371475
L_371915:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371916:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371475
L_371917:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x5,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_371918:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371475
L_371919:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371691
.p2align 0x4
L_530334:
L_371879:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371880:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x69,0x0(%r15)
	jne L_371475
L_371882:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_371883:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x67,0x0(%r11)
	jne L_371475
L_371885:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371886:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x69,0x0(%r13)
	jne L_371475
L_371888:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_371889:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x74,0x0(%r11)
	jne L_371475
L_371891:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371892:
	movq 0x8(%r13),%r15
	cmpb $0x3A,0x0(%r13)
	jne L_371475
L_371894:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371895:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371475
L_371896:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_371897:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371475
L_371898:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371691
.p2align 0x4
L_530348:
L_371858:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371859:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x6E,0x0(%r15)
	jne L_371475
L_371861:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_371862:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x74,0x0(%r11)
	jne L_371475
L_371864:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371865:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	cmpb $0x72,0x0(%r13)
	jne L_371475
L_371867:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_371868:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x6C,0x0(%r11)
	jne L_371475
L_371870:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371871:
	movq 0x8(%r13),%r15
	cmpb $0x3A,0x0(%r13)
	jne L_371475
L_371873:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371874:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371475
L_371875:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x9,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_371876:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371475
L_371877:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371691
.p2align 0x4
L_530362:
L_371846:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371847:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x6C,0x0(%r15)
	jne L_371475
L_371849:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_371850:
	movq 0x8(%r11),%r15
	cmpb $0x61,0x0(%r11)
	jne L_371475
L_371852:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371853:
	movq 0x8(%r15),%r13
	movq %r13,(localObjptr+0x0)(%rip)
	cmpb $0x6E,0x0(%r15)
	jne L_371475
L_371855:
	jmp L_371475
.p2align 0x4
L_530369:
L_371810:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371811:
	movq 0x8(%r15),%r13
	cmpb $0x6C,0x0(%r15)
	jne L_371475
L_371813:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371814:
	movq 0x8(%r13),%r15
	movb 0x0(%r13),%r11b
	cmpb $0x6E,%r11b
	je L_530380
	cmpb $0x70,%r11b
	je L_530370
	jmp L_371475
.p2align 0x4
L_530370:
L_371831:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371832:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x68,0x0(%r15)
	jne L_371475
L_371834:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_371835:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x61,0x0(%r11)
	jne L_371475
L_371837:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371838:
	movq 0x8(%r13),%r15
	cmpb $0x3A,0x0(%r13)
	jne L_371475
L_371840:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371841:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371475
L_371842:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x6,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_371843:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371475
L_371844:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371691
.p2align 0x4
L_530380:
L_371816:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371817:
	movq 0x8(%r15),%r13
	movq %r13,%r11
	cmpb $0x75,0x0(%r15)
	jne L_371475
L_371819:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_371820:
	movq 0x8(%r11),%r15
	movq %r15,%r13
	cmpb $0x6D,0x0(%r11)
	jne L_371475
L_371822:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371823:
	movq 0x8(%r13),%r15
	cmpb $0x3A,0x0(%r13)
	jne L_371475
L_371825:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371826:
	movq 0x8(%r15),%r13
	cmpb $0x5D,0x0(%r15)
	jne L_371475
L_371827:
	movq $0x28BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x7,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
L_371828:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371475
L_371829:
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371691
.p2align 0x4
L_530394:
L_371762:
	movq %r13,%r10
	andq $0x3,%r10
	jnz L_371475
L_371763:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq $0x1,0x48(%rbp)
L_371764:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530411
.p2align 0x4,,0x7
L_371765:
	movb 0x20(%rbp),%r15b
	cmpb $0x2E,%r15b
	je L_530396
L_371766:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
L_371767:
	movq 0x18(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_371475
L_371768:
	movq %r14,0x48(%rbp)
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movb %r14b,0x20(%rbp)
	jmp L_371764
.p2align 0x4
L_530396:
L_371769:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_530410
L_371770:
	movb 0x0(%r14),%r13b
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movb %r13b,0x21(%rbp)
	movq $0x1,0x50(%rbp)
L_371771:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530409
.p2align 0x4,,0x7
L_371772:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x21(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_530397
L_371773:
	movq %r15,0x50(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movb %r15b,0x21(%rbp)
	jmp L_371771
.p2align 0x4
L_530397:
L_371774:
	movq %r15,0x48(%rbp)
L_371775:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_530408
L_371776:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_371777:
	incl %ecx
	cmpq $0x1,%r15
	je L_530398
L_371778:
	movq 0x8(%r15),%r15
	jmp L_371777
.p2align 0x4
L_530398:
L_371779:
L_371780:
	movslq %ecx,%r15
	movq %r15,0x50(%rbp)
	testq %r15,%r15
	jnz L_530406
L_371799:
	movq (globalObjptr+0x598)(%rip),%r15
	movq %r15,0x58(%rbp)
.p2align 0x4,,0x7
L_371784:
	movq 0x48(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3687:
	cmpq 0x50(%rbp),%r15
	jnl L_530400
L_371795:
	cmpq $0x1,%r14
	je L_371751
L_371796:
	movq 0x8(%r14),%r13
	movq 0x58(%rbp),%r11
	movb 0x0(%r14),%r10b
	movb %r10b,0x0(%r11,%r15,1)
	incq %r15
	movq %r13,%r14
	jmp loop_3687
.p2align 0x4
L_530400:
L_371785:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530405
.p2align 0x4,,0x7
L_371786:
	movq 0x58(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	cmpb $0x2E,0x20(%rbp)
	jne L_371475
L_371788:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_371475
L_371789:
	movq 0x8(%r14),%r13
	cmpb $0x5D,0x0(%r14)
	jne L_371475
L_371790:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
L_371791:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_371475
L_371792:
	movq %r14,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_371691
.p2align 0x4
L_530405:
L_371793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_371794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371794
.p2align 0x4
.long 0x1A33
L_371794:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_371786
.p2align 0x4
L_530406:
L_371781:
	movq 0x50(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_371753
L_371782:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_371783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371783
.p2align 0x4
.long 0x5542
L_371783:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
	jmp L_371784
.p2align 0x4
L_530408:
L_371800:
	xorl %ecx,%ecx
	jmp L_371780
.p2align 0x4
L_530409:
L_371801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_371802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371802
.p2align 0x4
.long 0x2E11
L_371802:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_371772
.p2align 0x4
L_530410:
L_371803:
	movq $0x1,0x48(%rbp)
	jmp L_371775
.p2align 0x4
L_530411:
L_371804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_371805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371805
.p2align 0x4
.long 0x706
L_371805:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_371765
.p2align 0x4
L_530413:
L_371759:
	movq %r13,%r10
	andq $0x3,%r10
	jnz x_1151
L_371760:
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	xchgq %r13,%r15
	jmp x_1152
.p2align 0x4
L_530414:
L_371704:
	movq 0x18(%rbp),%r11
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_371475
L_371705:
	cmpb $0x5D,0x0(%r11)
	jne L_371475
L_371706:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x2D,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
	xorl %ecx,%ecx
	movq %r11,%r14
	jmp L_371707
.p2align 0x4
L_530417:
L_372040:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_372041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372041
.p2align 0x4
.long 0x706
L_372041:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_371692
.p2align 0x4
L_530418:
L_372059:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_371475
L_372060:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x20(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x30(%rbp)
	movq (globalObjptr+0x14C0)(%rip),%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x24(%rbp)
	movq $0x1,0x40(%rbp)
	jmp L_371691
.p2align 0x4
L_530421:
L_372062:
	cmpq $0x1,%r11
	je L_371475
L_372063:
	movq 0x8(%r11),%r14
	movb 0x0(%r11),%r13b
	cmpb $0x2D,%r13b
	je L_530422
L_372064:
	movq %r14,0x18(%rbp)
	movb %r13b,0x20(%rbp)
	movq %r11,0x48(%rbp)
	movq $0x1,0x30(%rbp)
	movq (globalObjptr+0x14C8)(%rip),%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x24(%rbp)
	movq $0x1,0x40(%rbp)
	jmp L_371691
.p2align 0x4
L_530422:
L_372066:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_371475
L_372067:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x20(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x30(%rbp)
	movq (globalObjptr+0x14D0)(%rip),%r15
	movq %r15,0x38(%rbp)
	movl $0x1,0x24(%rbp)
	movq $0x1,0x40(%rbp)
	jmp L_371691
.p2align 0x4
x_2260:
x_1149:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_371475
L_371688:
	movq 0x8(%r14),%r13
	cmpb $0x5D,0x0(%r14)
	jne x_2261
L_372046:
	cmpq $0x1,%r13
	je L_371475
L_372047:
	movq 0x8(%r13),%r14
	movb 0x0(%r13),%r11b
	cmpb $0x2D,%r11b
	je L_530426
L_372048:
	movq %r14,0x18(%rbp)
	movb %r11b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	movq $0x1,0x30(%rbp)
	movq (globalObjptr+0x14C8)(%rip),%r15
	movq %r15,0x38(%rbp)
	movl $0x0,0x24(%rbp)
	movq $0x1,0x40(%rbp)
	jmp L_371691
.p2align 0x4
L_530426:
L_372050:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_371475
L_372051:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x20(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x30(%rbp)
	movq (globalObjptr+0x14D0)(%rip),%r15
	movq %r15,0x38(%rbp)
	movl $0x0,0x24(%rbp)
	movq $0x1,0x40(%rbp)
	jmp L_371691
.p2align 0x4
x_2261:
x_1150:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_371475
L_371689:
	movq 0x8(%r14),%r13
	movb 0x0(%r14),%r11b
	cmpb $0x2D,%r11b
	je L_530429
L_371690:
	movb %r11b,0x20(%rbp)
	movq $0x1,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movl $0x0,0x24(%rbp)
	movq $0x1,0x40(%rbp)
	movq %r14,0x48(%rbp)
	movq %r13,0x18(%rbp)
	jmp L_371691
.p2align 0x4
L_530429:
L_372043:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_371475
L_372044:
	movq 0x8(%r13),%r14
	movq %r14,0x18(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x20(%rbp)
	movq %r13,0x48(%rbp)
	movq $0x1,0x30(%rbp)
	movq (globalObjptr+0x14C0)(%rip),%r15
	movq %r15,0x38(%rbp)
	movl $0x0,0x24(%rbp)
	movq $0x1,0x40(%rbp)
	jmp L_371691
.p2align 0x4
L_530434:
L_371685:
	movq (globalObjptr+0x14E0)(%rip),%r14
	movq 0x18(%rbp),%r13
	movq %r13,%r15
	jmp finishR_0
.p2align 0x4
L_530435:
L_371682:
	movq 0x18(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz x_1148
L_371683:
	movq 0x8(%r13),%r14
	cmpb $0x29,0x0(%r13)
	jne x_2262
L_371684:
	movq (globalObjptr+0x1498)(%rip),%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp finishR_0
.p2align 0x4
x_2262:
x_1148:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x318D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x18(%rbp)
	jmp Re_0
.p2align 0x4
L_530436:
L_371680:
	movq $0x2,%r14
	movq 0x18(%rbp),%r13
	movq %r13,%r15
	jmp finishR_0
.p2align 0x4
L_530438:
L_372075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_372076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372076
.p2align 0x4
.long 0x5E5
L_372076:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_371473
.p2align 0x4
L_530439:
L_372077:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_372078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372078
.p2align 0x4
.long 0x5E5
L_372078:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_371472
.p2align 0x4
L_530440:
L_372079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_372080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372080
.p2align 0x4
.long 0x5E5
L_372080:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_371471
.p2align 0x4
L_530441:
L_372081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_372082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372082
.p2align 0x4
.long 0x965
L_372082:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_371468
.p2align 0x4
.long 0x71E
L_371478:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x24(%rbp)
	jnz L_371475
L_371479:
	movb 0x20(%rbp),%r15b
	movq 0x18(%rbp),%r14
	movq %r14,0x20(%rbp)
	movb %r15b,0x18(%rbp)
	jmp finishC_0
.p2align 0x4
.long 0x72E
L_371547:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5E3
L_371494:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371495
L_371580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_371581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371581
.p2align 0x4
.long 0x5E6
L_371581:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_371495:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x18C2,%r14
	je L_530451
L_371577:
	movq 0x0(%r15),%r14
	movq $0x1B97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x28BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x18(%rbp),%r11
	cmpq $0x1,%r11
	je L_530450
L_371578:
	movb 0x0(%r11),%dl
L_371498:
	cmpb $0x29,%dl
	je finish_2
	cmpb $0x7C,%dl
	je finish_15
L_371499:
	movq $0x3185,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x20,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r11,0x18(%rbp)
	jmp P_0
.p2align 0x4
finish_15:
finish_2:
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq %r13,%r15
finish_3:
	cmpq $0x1,%r15
	je L_530449
L_371500:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_371501:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530448
.p2align 0x4,,0x7
L_371502:
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_530444
L_371503:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_371501
.p2align 0x4
L_530444:
L_371505:
	movq $0x1B85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_530447
L_371506:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_371507:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530446
.p2align 0x4,,0x7
L_371508:
	movq $0x28BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_530445
L_371509:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_371507
.p2align 0x4
L_530445:
L_371511:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_371512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_12
.p2align 0x4
L_530446:
L_371570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_371571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371571
.p2align 0x4
.long 0x5EB
L_371571:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_371508
.p2align 0x4
L_530447:
L_371572:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_371511
.p2align 0x4
L_530448:
L_371573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_371574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371574
.p2align 0x4
.long 0x5EB
L_371574:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_371502
.p2align 0x4
L_530449:
L_371575:
	movq $0x1,%r15
	jmp L_371505
.p2align 0x4
L_530450:
L_371579:
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq %r13,%r15
	jmp finish_3
.p2align 0x4
L_530451:
L_371496:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r10
	movq %r10,0x0(%r15)
	movq $0x28BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r14)
	movq 0x18(%rbp),%r10
	cmpq $0x1,%r10
	je L_530452
L_371497:
	movb 0x0(%r10),%dl
	movq %r15,%r13
	movq %r14,%r15
	movq %r11,%r14
	jmp L_371498
.p2align 0x4
L_530452:
L_371576:
	movq %r11,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp finish_3
.p2align 0x4
.long 0x7AF
L_371632:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371633
L_371634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_371635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371635
.p2align 0x4
.long 0x448E
L_371635:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_371633:
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B85,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x40(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq %r15,%r14
	movq %r13,%r15
	jmp finish_1
.p2align 0x4
.long 0x80C
L_371512:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371513
L_371568:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_371569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371569
.p2align 0x4
.long 0x71F
L_371569:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_371513:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x18C4,%r15
	je L_530463
L_371565:
	movq 0x0(%r14),%r11
	movq $0x1B97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x30(%rbp),%r10
	movq %r10,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x28BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq 0x18(%rbp),%r10
	cmpq $0x1,%r10
	je L_530462
L_371566:
	movq 0x8(%r10),%r15
	movb 0x0(%r10),%dl
L_371516:
	cmpb $0x29,%dl
	je finish_17
	cmpb $0x7C,%dl
	je L_530455
	jmp L_371475
.p2align 0x4
L_530455:
L_371563:
	movq %r15,0x20(%rbp)
	movq $0x3189,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq %r15,0x18(%rbp)
	addq $0x20,%r12
	jmp Br_0
.p2align 0x4
finish_17:
finish_4:
	movq %r11,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq %r13,%r15
finish_5:
	cmpq $0x1,%r15
	je L_530461
L_371517:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_371518:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530460
.p2align 0x4,,0x7
L_371519:
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_530456
L_371520:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_371518
.p2align 0x4
L_530456:
L_371522:
	movq $0x1B87,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_530459
L_371523:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_371524:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530458
.p2align 0x4,,0x7
L_371525:
	movq $0x28BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_530457
L_371526:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_371524
.p2align 0x4
L_530457:
L_371528:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_371529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_12
.p2align 0x4
L_530458:
L_371557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_371558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371558
.p2align 0x4
.long 0x5EB
L_371558:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_371525
.p2align 0x4
L_530459:
L_371559:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_371528
.p2align 0x4
L_530460:
L_371560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_371561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371561
.p2align 0x4
.long 0x5EB
L_371561:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_371519
.p2align 0x4
L_530461:
L_371562:
	movq $0x1,%r15
	jmp L_371522
.p2align 0x4
L_530462:
L_371567:
	movq %r11,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq %r13,%r15
	jmp finish_5
.p2align 0x4
L_530463:
L_371514:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x1B97,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq 0x30(%rbp),%r9
	movq %r9,0x0(%r10)
	movq $0x28BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r9
	movq %r9,0x0(%r14)
	movq 0x18(%rbp),%r9
	cmpq $0x1,%r9
	je L_530464
L_371515:
	movq 0x8(%r9),%r15
	movb 0x0(%r9),%dl
	movq %r10,%r13
	jmp L_371516
.p2align 0x4
L_530464:
L_371564:
	movq %r11,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq %r10,%r15
	jmp finish_5
.p2align 0x4
.long 0x80C
L_371529:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371530
L_371555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_371556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371556
.p2align 0x4
.long 0x71F
L_371556:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_371530:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_530471
L_371531:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
L_371532:
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_371475
L_371533:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	cmpb $0x29,0x0(%r15)
	jne L_371475
L_371534:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371535
L_371551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_371552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371552
.p2align 0x4
.long 0x4B7
L_371552:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_371535:
	movq $0x1B83,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movq $0x28BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x48(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1441,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_371536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371536
.p2align 0x4
.long 0x361B
L_371536:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3681:
	cmpq $0x1,%r15
	jnl L_530466
L_371550:
	incq %r15
	jmp loop_3681
.p2align 0x4
L_530466:
L_371537:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_371538
L_371548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_371549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_371549
.p2align 0x4
.long 0x5540
L_371549:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_371538:
	movq 0x28(%rbp),%r15
	movq $0xF6F,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x28BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_371539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_12
.p2align 0x4
L_530471:
L_371553:
	cmpq $0x1,0x18(%rbp)
	jne L_371475
L_371554:
	movq $0x1B99,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x842
L_371539:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x18C0,%r13
	je L_530475
L_371544:
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_530474
L_371545:
	movq %r11,0x30(%rbp)
	movq %r13,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq %r10,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x20(%rbp)
	jmp L_371483
.p2align 0x4
L_530474:
L_371546:
	movq 0x18(%rbp),%r9
	xchgq %r11,%r15
	xchgq %r10,%r14
	xchgq %r10,%r11
	jmp L_371543
.p2align 0x4
L_530475:
L_371540:
	movq 0x0(%r14),%r13
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_530476
L_371541:
	movq $0x1,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x20(%rbp)
	jmp L_371483
.p2align 0x4
L_530476:
L_371542:
	movq $0x1,%r8
	movq $0x1,%rsp
	movq 0x18(%rbp),%r9
	movq %r14,%r11
	movq %r13,%r14
	movq %rsp,%r13
	movq %r15,%r10
	movq %r8,%r15
	jmp L_371543
.text
.p2align 0x4
.globl concat_12
.hidden concat_12
concat_12:
L_372085:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_372086
L_372129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_372130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372130
.p2align 0x4
.long 0x451
L_372130:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_372086:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_530492
L_372087:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_372088:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530491
.p2align 0x4,,0x7
L_372089:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x296D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_530477
L_372090:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_372088
.p2align 0x4
L_530477:
L_372091:
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_372092:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530490
.p2align 0x4,,0x7
L_372093:
	movq $0x296D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_530478
L_372094:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_372092
.p2align 0x4
L_530478:
L_372095:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_530485
L_372096:
	movq 0x8(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_372097:
	addq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	je L_530479
L_372098:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_372097
.p2align 0x4
L_530479:
L_372099:
	testq %r15,%r15
	jz L_530484
L_372100:
	cmpq $0x7FFFFFFF,%r15
	ja L_530483
L_372101:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1441,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_372102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372102
.p2align 0x4
.long 0x49B
L_372102:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_372103:
	movq 0x10(%rbp),%r10
	movq 0x8(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3688:
	cmpq 0x18(%rbp),%r14
	jnl L_530482
	movq %r15,(localObjptr+0x0)(%rip)
.p2align 0x4,,0x7
loop_3689:
	cmpq 0x0(%r11),%r13
	jl L_530481
L_372106:
	cmpq $0x1,%r10
	je L_530480
L_372107:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r15,%r11
	jmp loop_3689
.p2align 0x4
L_530480:
L_372108:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530481:
L_372109:
	incq %r13
	incq %r14
	movq (localObjptr+0x0)(%rip),%r15
	jmp loop_3688
.p2align 0x4
L_530482:
L_372104:
	movq $0xF6F,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530483:
L_372111:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530484:
L_372112:
	movq (globalObjptr+0x6B8)(%rip),%r14
	xchgq %r14,%r15
	jmp L_372103
.p2align 0x4
L_530485:
L_372113:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r11)
	jne L_530486
L_372123:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530486:
L_372114:
	movq 0x10(%rbp),%rdx
	testq %rdx,%rdx
	jz L_530489
L_372115:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372111
L_372116:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1441,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_372117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372117
.p2align 0x4
.long 0x47A
L_372117:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,%r15
L_372118:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3690:
	cmpq 0x10(%rbp),%r14
	jnl L_530487
L_372120:
	incq %r14
	jmp loop_3690
.p2align 0x4
L_530487:
L_372119:
	movq $0xF6F,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530489:
L_372122:
	movq (globalObjptr+0x6C0)(%rip),%r15
	jmp L_372118
.p2align 0x4
L_530490:
L_372124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_372125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372125
.p2align 0x4
.long 0x45B
L_372125:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_372093
.p2align 0x4
L_530491:
L_372126:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_372127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372127
.p2align 0x4
.long 0x45B
L_372127:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_372089
.p2align 0x4
L_530492:
L_372128:
	movq (globalObjptr+0x6C8)(%rip),%r14
	movq $0xF6F,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl upper_0
.hidden upper_0
upper_0:
L_372131:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_372132
L_372139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_372140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372140
.p2align 0x4
.long 0x494
L_372140:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_372132:
	cmpl $0x0,0x0(%rbp)
	jg L_530494
L_372133:
	movq (globalObjptr+0x1498)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530494:
L_372134:
	movl 0x0(%rbp),%r15d
	decl %r15d
	movl %r15d,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_372135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp upper_0
.p2align 0x4
.long 0x521
L_372135:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372136
L_372137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_372138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372138
.p2align 0x4
.long 0x4E8
L_372138:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_372136:
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B85,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1B97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x1498)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B87,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1209
.hidden x_1209
x_1209:
L_372141:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_372142
L_372897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_372898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372898
.p2align 0x4
.long 0x452
L_372898:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_372142:
	movq (globalObjptr+0x1478)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_372143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_4794
.p2align 0x4
.long 0x1058
L_372143:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	cmpq $0x1,%r13
	je L_530530
L_372144:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_372145:
	incl %ecx
	jo L_372146
L_372147:
	cmpq $0x1,%r15
	je L_530498
L_372148:
	movq 0x8(%r15),%r15
	jmp L_372145
.p2align 0x4
L_530498:
L_372149:
L_372150:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	testq %rdx,%rdx
	jz L_530528
L_372151:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372152:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_372153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372153
.p2align 0x4
.long 0x799
L_372153:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
L_372154:
	movq 0x28(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3691:
	cmpq 0x18(%rbp),%r15
	jnl L_530500
L_372891:
	cmpq $0x1,%r14
	je L_530499
L_372892:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x30(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3691
.p2align 0x4
L_530499:
L_372517:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530500:
L_372155:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372156
L_372889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_372890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372890
.p2align 0x4
.long 0x2A46
L_372890:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_372156:
	movq 0x30(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x20(%rbp),%r15d
	incl %r15d
	movl %r15d,0x18(%rbp)
	jo L_530525
L_372157:
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x28(%rbp)
	movslq %r15d,%r14
	movq %r14,0x38(%rbp)
	cmpq $0x0,%r14
	jl L_372159
L_372158:
	imulq %r14,%r14
	movq %r14,0x40(%rbp)
	jo L_372159
L_372160:
	cmpq $0x7FFFFFFF,%r14
	ja L_372159
L_372161:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372162
L_372885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_372886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372886
.p2align 0x4
.long 0x5581
L_372886:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_372162:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAAB,%rcx
	movq 0x40(%rbp),%rdx
	movq $0x20,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_372163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372163
.p2align 0x4
.long 0x5543
L_372163:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
	movq $0xAAD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x20,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %rax,0x10(%r14)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3692:
	cmpq 0x38(%rbp),%r15
	jnl L_530506
L_372874:
	movq %r15,%r13
	incq %r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3749:
	movq 0x38(%rbp),%r11
	cmpq %r11,%r14
	jnl L_530505
L_372876:
	movq %r14,%r10
	incq %r10
	cmpq %r11,%r15
	jnb L_372246
L_372878:
	cmpq %r11,%r14
	jnb L_372246
L_372880:
	movl %r15d,%r9d
	movl %r14d,%r8d
	movslq %r9d,%r14
	movslq %r8d,%r9
	cmpq %r11,%r14
	jnb L_372246
L_372882:
	cmpq %r11,%r9
	jnb L_530501
L_372884:
	imulq %r11,%r14
	addq %r9,%r14
	movq 0x40(%rbp),%r11
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq $0x1,0x0(%r11,%r14,8)
	movq %r10,%r14
	jmp loop_3749
.p2align 0x4
L_530501:
L_372246:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530505:
L_372875:
	movq %r13,%r15
	jmp loop_3692
.p2align 0x4
L_530506:
L_372164:
	movslq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x0,%r15
	jl L_372159
L_372165:
	imulq $0x100,%r15
	movq %r15,0x58(%rbp)
	jo L_372159
L_372166:
	cmpq $0x7FFFFFFF,%r15
	ja L_372159
L_372167:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372168
L_372870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_372871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372871
.p2align 0x4
.long 0x5580
L_372871:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_372168:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0x58(%rbp),%rdx
	movq $0x20,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_372169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372169
.p2align 0x4
.long 0x5544
L_372169:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq $0xAAF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x20,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x100,0x8(%r13)
	movq %rax,0x10(%r13)
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3693:
	cmpq 0x50(%rbp),%r15
	jnl L_530512
L_372859:
	movq %r15,%r11
	incq %r11
	xorq %r10,%r10
	movq %r14,%r13
	movq %r10,%r14
.p2align 0x4,,0x7
loop_3748:
	cmpq $0x100,%r14
	jnl L_530511
L_372861:
	movq %r14,%r10
	incq %r10
	movq 0x50(%rbp),%r9
	cmpq %r9,%r15
	jnb L_372246
L_372863:
	cmpq $0x100,%r14
	jnb L_372246
L_372865:
	movl %r15d,%r8d
	movl %r14d,%esp
	movslq %r8d,%r14
	movslq %esp,%r8
	cmpq %r9,%r14
	jnb L_372246
L_372867:
	cmpq $0x100,%r8
	jnb L_372246
L_372869:
	salq $0x8,%r14
	addq %r14,%r8
	movl $0x0,0x0(%r13,%r8,4)
	movq %r10,%r14
	jmp loop_3748
.p2align 0x4
L_530511:
L_372860:
	movq %r11,%r15
	movq %r13,%r14
	jmp loop_3693
.p2align 0x4
L_530512:
L_372170:
	movq 0x50(%rbp),%rdx
	testq %rdx,%rdx
	jz L_530516
L_372171:
	cmpq $0x7FFFFFFF,%rdx
	ja L_530515
L_372172:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAAB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_372173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372173
.p2align 0x4
.long 0x5545
L_372173:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
L_372174:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3694:
	cmpq 0x50(%rbp),%r15
	jnl L_530513
L_372856:
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3694
.p2align 0x4
L_530513:
L_372175:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372176
L_372854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_372855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372855
.p2align 0x4
.long 0x557F
L_372855:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_372176:
	movq 0x60(%rbp),%r15
	movq $0x191D,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0xC59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x68(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xC59,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x191F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movl 0x20(%rbp),%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x28(%rbp),%r9
	movq %r9,0x8(%r11)
	movq %r11,0xC0(%rbp)
	movq 0x0(%rbp),%r11
	movq %r11,0x80(%rbp)
	movq %r13,0x88(%rbp)
	movl %r10d,0x90(%rbp)
	movq %r15,0x98(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq %r9,0xB0(%rbp)
	movq %r14,0xB8(%rbp)
	addq $0x80,%rbp
	leaq (L_372177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_4795
.p2align 0x4
L_530515:
L_372159:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530516:
L_372858:
	movq (globalObjptr+0x1488)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_372174
.p2align 0x4
L_530525:
L_372146:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530528:
L_372895:
	movq (globalObjptr+0x1480)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_372154
.p2align 0x4
L_530530:
L_372896:
	xorl %ecx,%ecx
	jmp L_372150
.p2align 0x4
.long 0x5546
L_372177:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	cmpq $0x1,%r13
	je L_530606
L_372178:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_372179:
	incl %ecx
	jo L_372146
L_372180:
	cmpq $0x1,%r15
	je L_530531
L_372181:
	movq 0x8(%r15),%r15
	jmp L_372179
.p2align 0x4
L_530531:
L_372182:
L_372183:
	movslq %ecx,%rdx
	movq %rdx,0x70(%rbp)
	testq %rdx,%rdx
	jz L_530604
L_372184:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372185:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_372186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372186
.p2align 0x4
.long 0x5547
L_372186:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x88(%rbp)
L_372187:
	movq $0x0,0x90(%rbp)
.p2align 0x4,,0x7
loop_3695:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530602
.p2align 0x4,,0x7
L_372188:
	movq 0x70(%rbp),%r13
	cmpq %r13,0x90(%rbp)
	jnl L_530535
L_372841:
	movq 0x80(%rbp),%r13
	cmpq $0x1,%r13
	je L_372517
L_372842:
	movq 0x8(%r13),%r14
	movl 0x0(%r13),%r11d
	movslq %r11d,%r15
	movq 0x78(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_372246
L_372844:
	movq 0x0(%r13,%r15,8),%r10
	cmpq $0x1,%r10
	je L_530532
L_372845:
	movq $0x28CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
L_372846:
	movq %r14,0x80(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x90(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x90(%rbp)
	jmp loop_3695
.p2align 0x4
L_530532:
L_372847:
	movq $0x1,%r15
	jmp L_372846
.p2align 0x4
L_530535:
L_372189:
	movq 0x88(%rbp),%r15
	movq $0x1921,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x70(%rbp)
	cmpq %r14,%rdx
	jne L_372191
L_372192:
	testq %rdx,%rdx
	jz L_530600
L_372193:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372194:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372195
.p2align 0x4
.long 0x5548
L_372195:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x80(%rbp)
L_372196:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3696:
	cmpq 0x70(%rbp),%r15
	jnl L_530538
L_372834:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq 0x88(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	je L_530537
L_372835:
	incl %ecx
	jo L_372146
L_372836:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r11,%r14
L_372837:
	movq 0x80(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_3696
.p2align 0x4
L_530537:
	movq %r11,%r14
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_372837
.p2align 0x4
L_530538:
L_372197:
	movq 0x80(%rbp),%r15
	movq $0x1921,0xFFFFFFFFFFFFFFF8(%r15)
	movslq %ecx,%rdx
	movq %rdx,0x70(%rbp)
	testq %rdx,%rdx
	jz L_530598
L_372198:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372199:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_372200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372200
.p2align 0x4
.long 0x5547
L_372200:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x88(%rbp)
L_372201:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3697:
	cmpq 0x70(%rbp),%r15
	jnl L_530542
.p2align 0x4,,0x7
loop_3747:
	movslq %ecx,%r14
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_530540
L_372830:
	incl %ecx
	jo L_372146
L_372831:
	jmp loop_3747
.p2align 0x4
L_530540:
L_372828:
	movq 0x8(%r11),%r14
	movl 0x0(%r11),%r13d
	incl %ecx
	jo L_372146
L_372829:
	movq %r15,%r11
	movq %r15,%r10
	movq 0x88(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r11
	movq %r14,0x8(%r9,%r11,1)
	salq $0x4,%r10
	movl %r13d,0x0(%r9,%r10,1)
	incq %r15
	jmp loop_3697
.p2align 0x4
L_530542:
L_372202:
	movq 0x88(%rbp),%r14
	movq $0x1923,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	cmpq $0x1,%r13
	je L_530596
L_372203:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_372204:
	incl %ecx
	jo L_372146
L_372205:
	cmpq $0x1,%r15
	je L_530543
L_372206:
	movq 0x8(%r15),%r15
	jmp L_372204
.p2align 0x4
L_530543:
L_372207:
L_372208:
	movslq %ecx,%rdx
	movq %rdx,0x68(%rbp)
	testq %rdx,%rdx
	jz L_530594
L_372209:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372210:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372211
.p2align 0x4
.long 0x5549
L_372211:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x80(%rbp)
L_372212:
	movq $0x0,0x90(%rbp)
.p2align 0x4,,0x7
loop_3698:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530592
.p2align 0x4,,0x7
L_372213:
	movq 0x68(%rbp),%r13
	cmpq %r13,0x90(%rbp)
	jnl L_530547
L_372814:
	movq 0x70(%rbp),%r13
	cmpq $0x1,%r13
	je L_372517
L_372815:
	movq 0x8(%r13),%r14
	movl 0x0(%r13),%r11d
	movslq %r11d,%r15
	movq 0x60(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_372246
L_372817:
	movq 0x0(%r13,%r15,8),%r10
	cmpq $0x1,%r10
	je L_530544
L_372818:
	movq $0x28CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
L_372819:
	movq %r14,0x70(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x90(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x90(%rbp)
	jmp loop_3698
.p2align 0x4
L_530544:
L_372820:
	movq $0x1,%r15
	jmp L_372819
.p2align 0x4
L_530547:
L_372214:
	movq 0x80(%rbp),%r15
	movq $0x1921,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x68(%rbp)
	cmpq %r14,%rdx
	jne L_372191
L_372216:
	testq %rdx,%rdx
	jz L_530590
L_372217:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372218:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372219
.p2align 0x4
.long 0x554A
L_372219:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x70(%rbp)
L_372220:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3699:
	cmpq 0x68(%rbp),%r15
	jnl L_530550
L_372807:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	je L_530549
L_372808:
	incl %ecx
	jo L_372146
L_372809:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r11,%r14
L_372810:
	movq 0x70(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_3699
.p2align 0x4
L_530549:
	movq %r11,%r14
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_372810
.p2align 0x4
L_530550:
L_372221:
	movq 0x70(%rbp),%r15
	movq $0x1921,0xFFFFFFFFFFFFFFF8(%r15)
	movslq %ecx,%rdx
	movq %rdx,0x68(%rbp)
	testq %rdx,%rdx
	jz L_530588
L_372222:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372223:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372224
.p2align 0x4
.long 0x5549
L_372224:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x80(%rbp)
L_372225:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3700:
	cmpq 0x68(%rbp),%r15
	jnl L_530554
.p2align 0x4,,0x7
loop_3746:
	movslq %ecx,%r14
	movq 0x70(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_530552
L_372803:
	incl %ecx
	jo L_372146
L_372804:
	jmp loop_3746
.p2align 0x4
L_530552:
L_372801:
	movq 0x8(%r11),%r14
	movl 0x0(%r11),%r13d
	incl %ecx
	jo L_372146
L_372802:
	movq %r15,%r11
	movq %r15,%r10
	movq 0x80(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r11
	movq %r14,0x8(%r9,%r11,1)
	salq $0x4,%r10
	movl %r13d,0x0(%r9,%r10,1)
	incq %r15
	jmp loop_3700
.p2align 0x4
L_530554:
L_372226:
	movq 0x80(%rbp),%r15
	movq $0x1923,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_372191
L_372228:
	cmpl $0x0,%ecx
	jl L_372449
L_372229:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3701:
	cmpl %ecx,%ebx
	jnl L_530558
L_372791:
	movslq %ebx,%r15
	movq 0x78(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_372797
L_372792:
	movq 0x50(%rbp),%r14
	movq 0x38(%rbp),%r11
	cmpq %r11,%r14
	jnb L_372246
L_372794:
	cmpq %r11,%r15
	jnb L_372246
L_372796:
	imulq %r14,%r11
	addq %r11,%r15
	movq 0x40(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
L_372797:
	incl %ebx
	jmp loop_3701
.p2align 0x4
L_530558:
L_372230:
	movq 0x38(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372231:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xABF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372232
.p2align 0x4
.long 0x554B
L_372232:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3702:
	cmpq 0x38(%rbp),%r15
	jnl L_530559
L_372789:
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3702
.p2align 0x4
L_530559:
L_372233:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372234
L_372787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372788
.p2align 0x4
.long 0x557C
L_372788:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372234:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x1C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_372191
L_372236:
	cmpl $0x0,%r13d
	jl L_372449
L_372237:
	movl $0x0,0x24(%rbp)
loop_3703:
	movl 0x1C(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_530580
L_372238:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x1C(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_530579
L_372240:
	cmpl $0x0,%r13d
	jl L_530578
L_372241:
	movl $0x0,0x24(%rbp)
.p2align 0x4,,0x7
loop_3704:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530577
.p2align 0x4,,0x7
L_372242:
	movl 0x24(%rbp),%r15d
	cmpl 0x1C(%rbp),%r15d
	jnl L_530562
L_372772:
	movslq %r15d,%r14
	movq 0x60(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_372776
L_372773:
	movq $0x28C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	cmpq 0x38(%rbp),%r14
	jnb L_372246
L_372775:
	movq 0x40(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13,%r14,8)
L_372776:
	incl 0x24(%rbp)
	jmp loop_3704
.p2align 0x4
L_530562:
L_372243:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_372248
L_372244:
	movq $0x28C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r14,0x8(%r13)
	movq 0x50(%rbp),%r14
	cmpq 0x38(%rbp),%r14
	jnb L_372246
L_372247:
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r14,8)
L_372248:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAAB,%rcx
	movq 0x38(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372249
.p2align 0x4
.long 0x554C
L_372249:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3705:
	cmpq 0x38(%rbp),%r15
	jnl L_530563
L_372770:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3705
.p2align 0x4
L_530563:
L_372250:
	movq 0x38(%rbp),%r15
	imulq $0x100,%r15
	movq %r15,0x50(%rbp)
	jo L_372159
L_372251:
	cmpq $0x7FFFFFFF,%r15
	ja L_372159
L_372252:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372253
L_372767:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372768
.p2align 0x4
.long 0x554D
L_372768:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372253:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAA5,%rcx
	movq 0x50(%rbp),%rdx
	movq $0x20,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372254
.p2align 0x4
.long 0x554D
L_372254:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x50(%rbp)
	movq $0xAA7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x100,0x8(%r15)
	movq %rax,0x10(%r15)
	movq $0x0,0x68(%rbp)
.p2align 0x4,,0x7
loop_3706:
	movq 0x68(%rbp),%r15
	cmpq 0x38(%rbp),%r15
	jnl L_530568
L_372725:
	incq %r15
	movq %r15,0x70(%rbp)
	movq $0x0,0x78(%rbp)
.p2align 0x4,,0x7
loop_3742:
	cmpq $0x100,0x78(%rbp)
	jl L_530564
L_372726:
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp loop_3706
.p2align 0x4
L_530564:
L_372727:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372728
L_372765:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372766
.p2align 0x4
.long 0x5575
L_372766:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372728:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	incq %r14
	movq %r14,0x80(%rbp)
	movq 0x68(%rbp),%r14
	cmpq 0x38(%rbp),%r14
	jnb L_372246
L_372730:
	cmpq $0x100,%r15
	jnb L_372246
L_372732:
	movl %r14d,%r13d
	movl %r13d,0x1C(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x24(%rbp)
	movq $0x3D0F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl %r14d,0x0(%r15)
	movl %r13d,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x98(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movl $0x0,0xA4(%rbp)
	addq $0x98,%rbp
	leaq (L_372733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_530568:
L_372255:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372256
L_372723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372724
.p2align 0x4
.long 0x5573
L_372724:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372256:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x28(%rbp)
	movq $0xAC1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq $0x1,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	movq $0x100,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372257
.p2align 0x4
.long 0x554E
L_372257:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x50(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3707:
	cmpq $0x100,%r15
	jnl L_530569
L_372722:
	movq 0x50(%rbp),%r14
	movl $0xFFFFFFFF,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_3707
.p2align 0x4
L_530569:
L_372258:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372259
L_372720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372721
.p2align 0x4
.long 0x5551
L_372721:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372259:
	movq $0x3CF9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x98(%rbp)
	movl $0x100,0xA0(%rbp)
	movl $0x0,0xA4(%rbp)
	addq $0x98,%rbp
	leaq (L_372260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_530577:
L_372778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372779
.p2align 0x4
.long 0x557A
L_372779:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_372242
.p2align 0x4
L_530578:
L_372449:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530579:
L_372191:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530580:
L_372781:
	movslq 0x24(%rbp),%r15
	salq $0x4,%r15
	movq 0x80(%rbp),%r14
	movl 0x0(%r14,%r15,1),%r13d
	movq $0x3CFD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x20,%r12
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x98(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movl $0x0,0xA4(%rbp)
	addq $0x98,%rbp
	leaq (L_372782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_530588:
L_372806:
	movq (globalObjptr+0x1470)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_372225
.p2align 0x4
L_530590:
L_372813:
	movq (globalObjptr+0x1468)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_372220
.p2align 0x4
L_530592:
L_372822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_372823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372823
.p2align 0x4
.long 0x557D
L_372823:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_372213
.p2align 0x4
L_530594:
L_372825:
	movq (globalObjptr+0x1460)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_372212
.p2align 0x4
L_530596:
L_372826:
	xorl %ecx,%ecx
	jmp L_372208
.p2align 0x4
L_530598:
L_372833:
	movq (globalObjptr+0x1470)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_372201
.p2align 0x4
L_530600:
L_372840:
	movq (globalObjptr+0x1468)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_372196
.p2align 0x4
L_530602:
L_372849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_372850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372850
.p2align 0x4
.long 0x557E
L_372850:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_372188
.p2align 0x4
L_530604:
L_372852:
	movq (globalObjptr+0x1460)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_372187
.p2align 0x4
L_530606:
L_372853:
	xorl %ecx,%ecx
	jmp L_372183
.p2align 0x4
.long 0x5574
L_372733:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x38(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x78(%rbp)
	cmpq %rdx,%r15
	jne L_372191
L_372735:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372736:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372737
.p2align 0x4
.long 0x5575
L_372737:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	movq $0x0,0xA0(%rbp)
.p2align 0x4,,0x7
loop_3743:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530616
.p2align 0x4,,0x7
L_372738:
	movq 0xA0(%rbp),%r14
	cmpq 0x78(%rbp),%r14
	jnl L_530609
L_372757:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	cmpq $0x1,%r11
	je L_530608
L_372758:
	movq $0x28CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movl 0x98(%rbp),%ecx
	incl %ecx
	jo L_372146
L_372759:
L_372760:
	movl %ecx,0x98(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xA0(%rbp)
	jmp loop_3743
.p2align 0x4
L_530608:
L_372761:
	movl 0x98(%rbp),%ecx
	movq $0x1,%r15
	jmp L_372760
.p2align 0x4
L_530609:
L_372739:
	movslq 0x98(%rbp),%rdx
	movq %rdx,0x78(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372740:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_372741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372741
.p2align 0x4
.long 0x5576
L_372741:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x98(%rbp)
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3744:
	cmpq 0x78(%rbp),%r15
	jnl L_530613
.p2align 0x4,,0x7
loop_3745:
	movslq %ecx,%r14
	movq 0x90(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_530611
L_372754:
	incl %ecx
	jo L_372146
L_372755:
	jmp loop_3745
.p2align 0x4
L_530611:
L_372752:
	movq 0x8(%r11),%r14
	movl 0x0(%r11),%r13d
	incl %ecx
	jo L_372146
L_372753:
	movq %r15,%r11
	movq %r15,%r10
	movq 0x98(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r11
	movq %r14,0x8(%r9,%r11,1)
	salq $0x4,%r10
	movl %r13d,0x0(%r9,%r10,1)
	incq %r15
	jmp loop_3744
.p2align 0x4
L_530613:
L_372742:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372743
L_372749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_372750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372750
.p2align 0x4
.long 0x5578
L_372750:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_372743:
	movq $0x3CFB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0xB0(%rbp)
	movl $0x0,0xB4(%rbp)
	addq $0xA8,%rbp
	leaq (L_372744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_530616:
L_372762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_372763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372763
.p2align 0x4
.long 0x5579
L_372763:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_372738
.p2align 0x4
.long 0x554F
L_372260:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	movl %r14d,0x1C(%rbp)
	jo L_372146
L_372261:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E7,%rcx
	xorq %rdx,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372262
.p2align 0x4
.long 0x5550
L_372262:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x28(%rbp)
	movslq 0x1C(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x0,%r15
	jl L_372159
L_372263:
	movq 0x38(%rbp),%r14
	imulq %r15,%r14
	movq %r14,0x68(%rbp)
	jo L_372159
L_372264:
	cmpq $0x7FFFFFFF,%r14
	ja L_372159
L_372265:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372266
L_372716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372717
.p2align 0x4
.long 0x5551
L_372717:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372266:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAA5,%rcx
	movq 0x68(%rbp),%rdx
	movq $0x20,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372267
.p2align 0x4
.long 0x5551
L_372267:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x68(%rbp)
	movq $0xAA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x20,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %rax,0x10(%r14)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3708:
	cmpq 0x38(%rbp),%r15
	jnl L_530624
L_372705:
	movq %r15,%r13
	incq %r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3741:
	movq 0x58(%rbp),%r11
	cmpq %r11,%r14
	jnl L_530623
L_372707:
	movq %r14,%r10
	incq %r10
	movq 0x38(%rbp),%r9
	cmpq %r9,%r15
	jnb L_372246
L_372709:
	cmpq %r11,%r14
	jnb L_372246
L_372711:
	movl %r15d,%r8d
	movl %r14d,%esp
	movslq %r8d,%r14
	movslq %esp,%r8
	cmpq %r9,%r14
	jnb L_372246
L_372713:
	cmpq %r11,%r8
	jnb L_372246
L_372715:
	imulq %r11,%r14
	addq %r14,%r8
	movq 0x68(%rbp),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r14,1)
	movq 0x28(%rbp),%r9
	movq %r9,0x0(%r11,%r8,8)
	movq %r10,%r14
	jmp loop_3741
.p2align 0x4
L_530623:
L_372706:
	movq %r13,%r15
	jmp loop_3708
.p2align 0x4
L_530624:
L_372268:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372269
L_372703:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372704
.p2align 0x4
.long 0x5572
L_372704:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372269:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_530625
L_372270:
	movq 0x8(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_372271:
	movl 0x0(%r15),%r14d
	movl 0x4(%r15),%r13d
	movq $0x3D13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movl %r13d,0x4(%r15)
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x98(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movl $0x0,0xA4(%rbp)
	addq $0x98,%rbp
	leaq (L_372272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_530625:
L_372276:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0x38(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372277
.p2align 0x4
.long 0x5553
L_372277:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3709:
	cmpq 0x38(%rbp),%r15
	jnl L_530626
L_372699:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_3709
.p2align 0x4
L_530626:
L_372278:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1925,%rcx
	movq 0x38(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372279
.p2align 0x4
.long 0x5553
L_372279:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3710:
	cmpq 0x38(%rbp),%r15
	jnl L_530627
L_372698:
	movq %r15,%r13
	movq %r15,%r11
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq $0x1,0x8(%r14,%r13,1)
	salq $0x4,%r11
	movl $0xFFFFFFFF,0x0(%r14,%r11,1)
	incq %r15
	jmp loop_3710
.p2align 0x4
L_530627:
L_372280:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1925,%rcx
	movq 0x38(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372281
.p2align 0x4
.long 0x5553
L_372281:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3711:
	cmpq 0x38(%rbp),%r15
	jnl L_530628
L_372697:
	movq %r15,%r13
	movq %r15,%r11
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq $0x1,0x8(%r14,%r13,1)
	salq $0x4,%r11
	movl $0xFFFFFFFF,0x0(%r14,%r11,1)
	incq %r15
	jmp loop_3711
.p2align 0x4
L_530628:
L_372282:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0x38(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372283
.p2align 0x4
.long 0x5553
L_372283:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3712:
	cmpq 0x38(%rbp),%r15
	jnl L_530629
L_372696:
	movq 0x28(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_3712
.p2align 0x4
L_530629:
L_372284:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372285
L_372694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372695
.p2align 0x4
.long 0x5570
L_372695:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372285:
	movq $0xAA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x20,%r12
	movl 0x1C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x60(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_372191
L_372287:
	cmpl $0x0,%r15d
	jl L_372449
L_372288:
	movl $0x0,0x78(%rbp)
.p2align 0x4,,0x7
loop_3713:
	movl 0x78(%rbp),%r15d
	cmpl 0x24(%rbp),%r15d
	jnl L_530635
L_372679:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	salq $0x4,%r14
	movq 0x88(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	movl %r11d,0x7C(%rbp)
	movq 0x8(%r13,%r15,1),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_372191
L_372681:
	testl %r9d,%r9d
	jz L_372688
L_372682:
	movslq %r11d,%r15
	movq %r15,0x80(%rbp)
	cmpq 0x38(%rbp),%r15
	jnb L_372246
L_372684:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jz L_530630
.p2align 0x4,,0x7
L_372688:
	incl 0x78(%rbp)
	jmp loop_3713
.p2align 0x4
L_530630:
L_372685:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372686
L_372689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372690
.p2align 0x4
.long 0x556D
L_372690:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372686:
	movq 0x28(%rbp),%r15
	movq 0x80(%rbp),%r14
	movl $0x1,0x0(%r15,%r14,4)
	movq $0x3D15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x7C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x98(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movl $0x0,0xA4(%rbp)
	addq $0x98,%rbp
	leaq (L_372687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_530635:
L_372289:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372290
L_372677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372678
.p2align 0x4
.long 0x556D
L_372678:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372290:
	movq $0x3D17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x1C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x98(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movl $0x0,0xA4(%rbp)
	addq $0x98,%rbp
	leaq (L_372291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x557B
L_372782:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372783
L_372784:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372785
.p2align 0x4
.long 0x557C
L_372785:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372783:
	incl 0x24(%rbp)
	jmp loop_3703
.p2align 0x4
.long 0x5577
L_372744:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movslq 0x1C(%rbp),%r15
	movslq 0x24(%rbp),%r14
	cmpq 0x38(%rbp),%r15
	jnb L_372246
L_372746:
	cmpq $0x100,%r14
	jnb L_372246
L_372748:
	salq $0x8,%r15
	addq %r14,%r15
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	jmp loop_3742
.p2align 0x4
.long 0x5552
L_372272:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372273
L_372700:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372701
.p2align 0x4
.long 0x5571
L_372701:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372273:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_372276
L_372274:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_372271
.p2align 0x4
.long 0x556F
L_372687:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_372688
.p2align 0x4
.long 0x5554
L_372291:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372292
L_372675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372676
.p2align 0x4
.long 0x556E
L_372676:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372292:
	movq $0x1927,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq $0x1,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1929,%rcx
	movq 0x38(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372293
.p2align 0x4
.long 0x5555
L_372293:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3714:
	cmpq 0x38(%rbp),%r15
	jnl L_530651
L_372674:
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3714
.p2align 0x4
L_530651:
L_372294:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372295
L_372672:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372673
.p2align 0x4
.long 0x556D
L_372673:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_372295:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	addq $0x18,%r12
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_372296:
	incl %ecx
	jo L_372146
L_372297:
	cmpq $0x1,%r15
	je L_530652
L_372298:
	movq 0x8(%r15),%r15
	jmp L_372296
.p2align 0x4
L_530652:
L_372299:
	movslq %ecx,%rdx
	movq %rdx,0x80(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372300:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_372301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372301
.p2align 0x4
.long 0x5556
L_372301:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
	movq 0x78(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3715:
	cmpq 0x80(%rbp),%r15
	jnl L_530654
L_372668:
	cmpq $0x1,%r14
	je L_372517
L_372669:
	movq 0x8(%r14),%r13
	movq 0x90(%rbp),%r11
	movl 0x0(%r14),%r10d
	movl %r10d,0x0(%r11,%r15,4)
	incq %r15
	movq %r13,%r14
	jmp loop_3715
.p2align 0x4
L_530654:
L_372302:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372303
L_372666:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_372667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372667
.p2align 0x4
.long 0x556C
L_372667:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_372303:
	movq 0x80(%rbp),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_372191
L_372305:
	cmpl $0x0,%ecx
	jg L_530803
L_372306:
	movl $0x0,0x18(%rbp)
x_1154:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_372315
L_372307:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_372308:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%ebx
	movslq %ebx,%r14
	cmpq %r14,%r11
	jne L_372191
L_372310:
	cmpl %ecx,%ebx
	jne L_530798
L_372651:
	xorl %ebx,%ebx
	movq %r13,%r14
.p2align 0x4,,0x7
loop_3740:
	cmpl %ebx,%ecx
	je L_530797
L_372652:
	movslq %ebx,%r13
	cmpq 0x80(%rbp),%r13
	jnb L_372246
L_372654:
	movq 0x90(%rbp),%r11
	movl 0x0(%r14,%r13,4),%r10d
	cmpl %r10d,0x0(%r11,%r13,4)
	jne L_530656
L_372661:
	incl %ebx
	jo L_372146
L_372662:
	jmp loop_3740
.p2align 0x4
L_530656:
L_372655:
	cmpq $0x1,%r15
	je L_530657
L_372656:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_372308
.p2align 0x4
L_530657:
L_372657:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372315
L_372659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_372660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372660
.p2align 0x4
.long 0x556C
L_372660:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_372315:
	movq $0xFD1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28C5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	movq $0x28C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x80(%rbp)
	movl $0x0,0x90(%rbp)
L_372316:
	movq (globalObjptr+0xF50)(%rip),%r15
	movq $0xF47,0xFFFFFFFFFFFFFFF8(%r15)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14EB,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_372317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372317
.p2align 0x4
.long 0x5557
L_372317:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3716:
	cmpq $0x1,%r15
	jnl L_530658
L_372648:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq (globalObjptr+0xF50)(%rip),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3716
.p2align 0x4
L_530658:
L_372318:
	movl 0x24(%rbp),%r15d
	decl %r15d
	movl %r15d,0x94(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
loop_3717:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530794
.p2align 0x4,,0x7
L_372319:
	movl 0x94(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_530659
L_372320:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x94(%rbp)
	salq $0x4,%r13
	movq 0x88(%rbp),%r15
	movl 0x0(%r15,%r13,1),%r14d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	jmp loop_3717
.p2align 0x4
L_530659:
L_372321:
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_530793
L_372322:
	movl 0x0(%r14),%r15d
	movl %r15d,0x94(%rbp)
	movq $0x1,0xA0(%rbp)
	movq %r14,0xA8(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
.p2align 0x4,,0x7
L_372323:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530792
.p2align 0x4,,0x7
L_372324:
	movl 0x94(%rbp),%r15d
	cmpl 0x20(%rbp),%r15d
	jnl L_530787
L_372631:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_530660
L_372632:
	movq %r14,0xA0(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x94(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	jmp L_372323
.p2align 0x4
L_530660:
L_372633:
	movl 0x94(%rbp),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x78(%rbp)
.p2align 0x4,,0x7
L_372634:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530786
.p2align 0x4,,0x7
L_372635:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_530661
L_372636:
	movq %r15,0x98(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movl %r15d,0x20(%rbp)
	jmp L_372634
.p2align 0x4
L_530661:
L_372638:
	cmpq $0x1,%r15
	je L_530785
L_372639:
	movq %r15,%r14
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_372333:
	incl %ecx
	jo L_372146
L_372334:
	cmpq $0x1,%r15
	je L_530662
L_372335:
	movq 0x8(%r15),%r15
	jmp L_372333
.p2align 0x4
L_530662:
L_372336:
	movq %r14,0x78(%rbp)
L_372337:
	movslq %ecx,%rdx
	movq %rdx,0x98(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372338:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_372339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372339
.p2align 0x4
.long 0x5558
L_372339:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0xA0(%rbp)
	movq 0x78(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3718:
	cmpq 0x98(%rbp),%r15
	jnl L_530664
L_372623:
	cmpq $0x1,%r14
	je L_372517
L_372624:
	movq 0x8(%r14),%r13
	movq 0xA0(%rbp),%r11
	movl 0x0(%r14),%r10d
	movl %r10d,0x0(%r11,%r15,4)
	incq %r15
	movq %r13,%r14
	jmp loop_3718
.p2align 0x4
L_530664:
L_372340:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372341
L_372621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_372622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372622
.p2align 0x4
.long 0x5559
L_372622:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_372341:
	movq 0x98(%rbp),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	movq %r14,0x78(%rbp)
	cmpq %r15,%r14
	jne L_372191
L_372343:
	cmpl %ecx,0x18(%rbp)
	jnl x_1155
L_372620:
	movl %ecx,0x18(%rbp)
x_1155:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_372353
L_372345:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_372346:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%ebx
	movslq %ebx,%r10
	cmpq %r10,%r11
	jne L_372191
L_372348:
	cmpl %ecx,%ebx
	jne L_530776
L_372606:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3739:
	cmpl %ecx,%ebx
	je L_530775
L_372607:
	movslq %ebx,%r11
	cmpq 0x98(%rbp),%r11
	jnb L_372246
L_372609:
	movq 0xA0(%rbp),%r10
	movl 0x0(%r13,%r11,4),%r9d
	cmpl %r9d,0x0(%r10,%r11,4)
	jne L_530666
L_372616:
	incl %ebx
	jo L_372146
L_372617:
	jmp loop_3739
.p2align 0x4
L_530666:
L_372610:
	cmpq $0x1,%r15
	je L_530667
L_372611:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_372346
.p2align 0x4
L_530667:
L_372612:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372353
L_372614:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_372615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372615
.p2align 0x4
.long 0x5559
L_372615:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_372353:
	movl 0x90(%rbp),%r15d
	incl %r15d
	jo L_372146
L_372354:
	movq $0xFD1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xFD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x10(%r13)
	movl %r15d,0x20(%rbp)
	movl %r15d,0x90(%rbp)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28C5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq $0x28C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x80(%rbp)
L_372355:
	movq 0x78(%rbp),%rdx
	testq %rdx,%rdx
	jz L_530771
L_372356:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372357:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14EB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_372358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372358
.p2align 0x4
.long 0x5559
L_372358:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0xA8(%rbp)
L_372359:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3719:
	cmpq 0x78(%rbp),%r15
	jnl L_530673
L_372591:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0x98(%rbp),%r13
	jnb L_372246
L_372593:
	movq 0xA0(%rbp),%r14
	movl 0x0(%r14,%r13,4),%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_3738:
	cmpl 0x24(%rbp),%ecx
	je L_530671
L_372594:
	movslq %ecx,%r14
	cmpq 0x60(%rbp),%r14
	jnb L_372246
L_372596:
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x88(%rbp),%r11
	movq 0x8(%r11,%r13,1),%r10
	salq $0x4,%r14
	cmpl 0x0(%r11,%r14,1),%ebx
	je L_530669
L_372597:
	incl %ecx
	jo L_372146
L_372598:
	jmp loop_3738
.p2align 0x4
L_530669:
	movq %r10,%r14
L_372600:
	movq 0xA8(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_3719
.p2align 0x4
L_530671:
L_372601:
	movq (globalObjptr+0xF50)(%rip),%r14
	movq $0xF47,0xFFFFFFFFFFFFFFF8(%r14)
	jmp L_372600
.p2align 0x4
L_530673:
L_372360:
	movq 0xA8(%rbp),%r14
	movq $0xFDB,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_530769
L_372361:
	movl 0x18(%rbp),%r13d
	movl %r13d,0x60(%rbp)
	movl 0x20(%rbp),%r13d
	movl %r13d,0x18(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_372362:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x58(%rbp),%r15
	testq %r15,%r15
	jnz L_530767
L_372589:
	movq (globalObjptr+0x14A8)(%rip),%r15
	movq %r15,0x88(%rbp)
.p2align 0x4,,0x7
L_372366:
	movq $0x0,0x98(%rbp)
.p2align 0x4,,0x7
loop_3720:
	movq 0x58(%rbp),%r14
	cmpq %r14,0x98(%rbp)
	jl L_530714
L_372367:
	movq 0x88(%rbp),%r14
	movq $0xFD5,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_530674
L_372368:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_372362
.p2align 0x4
L_530674:
L_372369:
	movl 0x18(%rbp),%ecx
	movl 0x60(%rbp),%r15d
	movl %r15d,0x18(%rbp)
L_372370:
	incl %ecx
	jo L_372146
L_372371:
	movq (globalObjptr+0x14B8)(%rip),%r15
	movq $0x16F9,0xFFFFFFFFFFFFFFF8(%r15)
	movslq %ecx,%r15
	movq %r15,0x20(%rbp)
	cmpq $0x0,%r15
	jl L_372159
L_372372:
	movq 0x58(%rbp),%r14
	imulq %r14,%r15
	movq %r15,0x28(%rbp)
	jo L_372159
L_372373:
	cmpq $0x7FFFFFFF,%r15
	ja L_372159
L_372374:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372375
L_372465:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372466
.p2align 0x4
.long 0x555B
L_372466:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_372375:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC3,%rcx
	movq 0x28(%rbp),%rdx
	movq $0x20,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372376
.p2align 0x4
.long 0x555B
L_372376:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0x28(%rbp)
	movq $0xAC5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	addq $0x20,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %rax,0x10(%r14)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3721:
	cmpq 0x20(%rbp),%r15
	jnl L_530680
L_372454:
	movq %r15,%r13
	incq %r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3728:
	movq 0x58(%rbp),%r11
	cmpq %r11,%r14
	jnl L_530679
L_372456:
	movq %r14,%r10
	incq %r10
	movq 0x20(%rbp),%r9
	cmpq %r9,%r15
	jnb L_372246
L_372458:
	cmpq %r11,%r14
	jnb L_372246
L_372460:
	movl %r15d,%r8d
	movl %r14d,%esp
	movslq %r8d,%r14
	movslq %esp,%r8
	cmpq %r9,%r14
	jnb L_372246
L_372462:
	cmpq %r11,%r8
	jnb L_372246
L_372464:
	imulq %r11,%r14
	addq %r8,%r14
	movq %r14,%r11
	movq 0x28(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r11
	movq (globalObjptr+0x14B8)(%rip),%r8
	movq %r8,0x8(%r9,%r11,1)
	salq $0x4,%r14
	movl $0xFFFFFFFF,0x0(%r9,%r14,1)
	movq %r10,%r14
	jmp loop_3728
.p2align 0x4
L_530679:
L_372455:
	movq %r13,%r15
	jmp loop_3721
.p2align 0x4
L_530680:
L_372377:
	movq 0x20(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372378:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xFD9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372379
.p2align 0x4
.long 0x555C
L_372379:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0x68(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3722:
	cmpq 0x20(%rbp),%r15
	jnl L_530681
L_372452:
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3722
.p2align 0x4
L_530681:
L_372380:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_372402
L_372381:
	movq 0x8(%r13),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_372382:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movl %r13d,(localWord32+0x0)(%rip)
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_530706
L_372383:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ebx
	movslq %ebx,%r15
	cmpq %r15,%r13
	jne L_372191
L_372385:
	cmpl $0x0,%ebx
	jl L_372449
L_372386:
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
loop_3723:
	cmpl %ebx,%ecx
	jnl L_530684
L_372443:
	movslq %ecx,%r13
	movq %r13,%r11
	salq $0x4,%r11
	movq 0x8(%r15,%r11,1),%r10
	movq %r13,%r11
	salq $0x4,%r11
	movl 0x0(%r15,%r11,1),%r9d
	movslq (localWord32+0x0)(%rip),%r11
	cmpq 0x20(%rbp),%r11
	jnb L_372246
L_372445:
	movq 0x58(%rbp),%r8
	cmpq %r8,%r13
	jnb L_372246
L_372447:
	imulq %r8,%r11
	addq %r11,%r13
	movq %r13,%r11
	movq 0x28(%rbp),%r8
	movq %r8,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r11
	movq %r10,0x8(%r8,%r11,1)
	salq $0x4,%r13
	movl %r9d,0x0(%r8,%r13,1)
	incl %ecx
	jmp loop_3723
.p2align 0x4
L_530684:
L_372387:
	movslq (localWord32+0x0)(%rip),%r15
	movq %r15,0x70(%rbp)
	cmpq 0x20(%rbp),%r15
	jnb L_372246
L_372389:
	movq 0x68(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
L_372390:
	movq %r11,%r15
	andq $0x3,%r15
	jnz x_1156
L_372441:
	movl 0x0(%r11),%r15d
	testl %r15d,%r15d
	jz L_372438
x_1156:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_372191
L_372392:
	movl $0x0,0x78(%rbp)
.p2align 0x4,,0x7
loop_3724:
	movl 0x78(%rbp),%r13d
	cmpl %r13d,%ecx
	je L_530699
L_372393:
	movslq %r13d,%r11
	cmpq %r15,%r11
	jnb L_372246
L_372395:
	movslq 0x0(%r14,%r11,4),%r10
	cmpq 0x38(%rbp),%r10
	jnb L_372246
L_372397:
	movq 0x40(%rbp),%r11
	movq 0x0(%r11,%r10,8),%r9
	movq %r9,0x80(%rbp)
	cmpq $0x1,%r9
	jne L_530686
L_372435:
	incl %r13d
	jo L_372146
L_372436:
	movl %r13d,0x78(%rbp)
	jmp loop_3724
.p2align 0x4
L_530686:
L_372398:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530696
.p2align 0x4,,0x7
L_372399:
	movq 0x80(%rbp),%r14
	movl 0x0(%r14),%r13d
	movq 0x8(%r14),%r15
	movq $0x28C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x78(%rbp),%r13d
	movl %r13d,0x4(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x70(%rbp),%r11
	movq %r14,0x0(%r13,%r11,8)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_530687
L_372400:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_372382
.p2align 0x4
L_530687:
L_372402:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0x20(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372403
.p2align 0x4
.long 0x555D
L_372403:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0x28(%rbp)
	movq $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_3725:
	movq 0x38(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq %r14,%r15
	jnl L_530691
L_372416:
	movl %r15d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r15
	cmpq %r14,%r15
	jnb L_372246
L_372418:
	movq 0x68(%rbp),%r14
	cmpq $0x1,0x0(%r14,%r15,8)
	je L_530688
L_372419:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_372420:
	movq 0x28(%rbp),%r15
	movq 0x38(%rbp),%r14
	movl %ecx,0x0(%r15,%r14,4)
	incq %r14
	movq %r14,0x38(%rbp)
	jmp loop_3725
.p2align 0x4
L_530688:
L_372421:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372422
L_372431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372432
.p2align 0x4
.long 0x555E
L_372432:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_372422:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x3CF5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movl 0x40(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0xB8(%rbp)
	leaq L_372424(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0xC0(%rbp)
	movl $0x0,0xC4(%rbp)
	addq $0xB8,%rbp
	leaq (L_372423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_530691:
L_372404:
	movslq 0x18(%rbp),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x7FFFFFFF,%r14
	ja L_372159
L_372405:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xFD7,%rcx
	movq %r14,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372406
.p2align 0x4
.long 0x555E
L_372406:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3726:
	cmpq 0x20(%rbp),%r15
	jnl L_530692
L_372414:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3726
.p2align 0x4
L_530692:
L_372407:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xFD7,%rcx
	movq 0x20(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372408
.p2align 0x4
.long 0x555F
L_372408:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3727:
	cmpq 0x20(%rbp),%r15
	jnl L_530693
L_372413:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3727
.p2align 0x4
L_530693:
L_372409:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372410
L_372411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372412
.p2align 0x4
.long 0x5560
L_372412:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_372410:
	movq $0x28C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x50,%r12
	movl 0x90(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x40(%r15)
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530696:
L_372433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372434
.p2align 0x4
.long 0x5562
L_372434:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_372399
.p2align 0x4
L_530699:
L_372438:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_372402
L_372439:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_372382
.p2align 0x4
L_530706:
L_372450:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530714:
L_372469:
	movq 0x98(%rbp),%r15
	movl %r15d,0x64(%rbp)
	movq 0x38(%rbp),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	movq %r14,0xA0(%rbp)
	cmpq %r15,%r14
	jne L_372191
L_372471:
	cmpl $0x0,%ecx
	jl L_372449
L_372472:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3729:
	cmpl %ecx,%ebx
	jnl L_530715
L_372586:
	movslq %ebx,%r15
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incl %ebx
	jmp loop_3729
.p2align 0x4
L_530715:
L_372473:
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x94(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_372191
L_372475:
	cmpl $0x0,%r13d
	jl L_372449
L_372476:
	movl $0x0,0xB0(%rbp)
.p2align 0x4,,0x7
loop_3730:
	movl 0xB0(%rbp),%r15d
	cmpl 0x94(%rbp),%r15d
	jnl L_530724
L_372566:
	movslq %r15d,%r14
	movq 0x78(%rbp),%r15
	movl 0x0(%r15,%r14,4),%r13d
	movl %r13d,0xB4(%rbp)
	movslq %r13d,%r15
	movslq 0x64(%rbp),%r14
	cmpq 0x38(%rbp),%r15
	jnb L_372246
L_372568:
	movq 0x58(%rbp),%r13
	cmpq %r13,%r14
	jnb L_372246
L_372570:
	imulq %r13,%r15
	addq %r15,%r14
	movq 0x68(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0xB8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0xC0(%rbp)
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_372191
L_372572:
	cmpl $0x0,%r14d
	jl L_372449
L_372573:
	movl $0x0,0xC4(%rbp)
loop_3737:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530719
.p2align 0x4,,0x7
L_372574:
	movl 0xC0(%rbp),%r15d
	cmpl %r15d,0xC4(%rbp)
	jl L_530716
L_372575:
	incl 0xB0(%rbp)
	jmp loop_3730
.p2align 0x4
L_530716:
L_372576:
	movslq 0xC4(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xB8(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	salq $0x4,%r15
	movl 0x0(%r13,%r15,1),%r14d
	movslq %r14d,%r15
	cmpq 0x38(%rbp),%r15
	jnb L_372246
L_372578:
	movq 0x70(%rbp),%r13
	cmpq $0x1,0x0(%r13,%r15,8)
	jne L_372580
L_372581:
	movq $0x28C7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movl %r14d,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movl 0xB0(%rbp),%r14d
	movl %r14d,0x0(%r10)
	movl 0xB4(%rbp),%r14d
	movl %r14d,0x4(%r10)
	movl $0x0,0xC(%r10)
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13,%r15,8)
L_372580:
	incl 0xC4(%rbp)
	jmp loop_3737
.p2align 0x4
L_530719:
L_372582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_372583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372583
.p2align 0x4
.long 0x5569
L_372583:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_372574
.p2align 0x4
L_530724:
L_372477:
	movq 0xA0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372478:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1929,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372479
.p2align 0x4
.long 0x5563
L_372479:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0xB0(%rbp)
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3731:
	cmpq 0xA0(%rbp),%r15
	jnl L_530727
L_372560:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq 0x70(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	je L_530726
L_372561:
	incl %ecx
	jo L_372146
L_372562:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r11,%r14
L_372563:
	movq 0xB0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_3731
.p2align 0x4
L_530726:
	movq %r11,%r14
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_372563
.p2align 0x4
L_530727:
L_372480:
	movslq %ecx,%rdx
	movq %rdx,0xA0(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372481:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x192B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_372482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372482
.p2align 0x4
.long 0x5564
L_372482:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0xB8(%rbp)
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3732:
	cmpq 0xA0(%rbp),%r15
	jnl L_530731
.p2align 0x4,,0x7
loop_3736:
	movslq %ecx,%r14
	movq 0xB0(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_530729
L_372557:
	incl %ecx
	jo L_372146
L_372558:
	jmp loop_3736
.p2align 0x4
L_530729:
L_372555:
	movl 0x8(%r11),%r14d
	movl 0x4(%r11),%r13d
	movl 0x0(%r11),%r10d
	movq 0x10(%r11),%r9
	incl %ecx
	jo L_372146
L_372556:
	movq %r15,%r11
	movq %r15,%r8
	movq %r15,%rsp
	movq %r15,%rsi
	imulq $0x18,%r11
	movq 0xB8(%rbp),%rdi
	movl %r14d,0x0(%rdi,%r11,1)
	imulq $0x18,%r8
	movl %r13d,0x4(%rdi,%r8,1)
	imulq $0x18,%rsp
	movq %rsp,%rax
	movl %r10d,0x8(%rdi,%rax,1)
	movq %rdi,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	imulq $0x18,%rsi
	movq %r9,0x10(%rdi,%rsi,1)
	incq %r15
	jmp loop_3732
.p2align 0x4
L_530731:
L_372483:
	movq 0xA0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0xB0(%rbp)
	cmpq %r15,%rdx
	jne L_372191
L_372485:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372486:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_372487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372487
.p2align 0x4
.long 0x5565
L_372487:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0xA0(%rbp)
	movq $0x1,0xC0(%rbp)
	movq $0x0,0xC8(%rbp)
.p2align 0x4,,0x7
loop_3733:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530758
.p2align 0x4,,0x7
L_372488:
	movq 0xC8(%rbp),%r15
	cmpq 0xB0(%rbp),%r15
	jnl L_530736
L_372540:
	movl %r15d,%r13d
	movslq %r13d,%r15
	movq %r15,%r14
	movq %r15,%r11
	movq %r15,%r10
	imulq $0x18,%r14
	movq 0xB8(%rbp),%r9
	movl 0x0(%r9,%r14,1),%ecx
	imulq $0x18,%r11
	movl 0x4(%r9,%r11,1),%r8d
	imulq $0x18,%r10
	movl 0x8(%r9,%r10,1),%r11d
	imulq $0x18,%r15
	movq 0x10(%r9,%r15,1),%r14
	movslq %ecx,%r15
	movq 0x38(%rbp),%r10
	cmpq %r10,%r15
	jnb L_372246
L_372542:
	movq 0x28(%rbp),%r9
	movl 0x0(%r9,%r15,4),%esp
	testl %esp,%esp
	jz L_530734
L_372545:
	movslq %r8d,%r15
	cmpq %r10,%r15
	jnb L_372246
L_372547:
	movl 0x0(%r9,%r15,4),%r10d
	testl %r10d,%r10d
	jz L_530732
L_372550:
	movq $0x1B93,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movl %r13d,0x4(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r15,%r14
L_372549:
	movq $0x28CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
L_372544:
	movq 0xA0(%rbp),%r14
	movq 0xC8(%rbp),%r13
	movl %ecx,0x0(%r14,%r13,4)
	movq %r15,0xC0(%rbp)
	incq %r13
	movq %r13,0xC8(%rbp)
	jmp loop_3733
.p2align 0x4
L_530732:
L_372548:
	movq $0x1B91,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,%r14
	jmp L_372549
.p2align 0x4
L_530734:
L_372543:
	movq 0xC0(%rbp),%r15
	jmp L_372544
.p2align 0x4
L_530736:
L_372489:
	movq 0xB0(%rbp),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_372191
L_372491:
	cmpl %ecx,0x60(%rbp)
	jnl x_1157
L_372539:
	movl %ecx,0x60(%rbp)
x_1157:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_372501
L_372493:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_372494:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%ebx
	movslq %ebx,%r10
	cmpq %r11,%r10
	jne L_372191
L_372496:
	cmpl %ebx,%ecx
	jne L_530752
L_372523:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3735:
	cmpl %ecx,%ebx
	je L_530750
L_372524:
	movslq %ebx,%r11
	cmpq 0xB0(%rbp),%r11
	jnb L_372246
L_372526:
	movq 0xA0(%rbp),%r10
	movl 0x0(%r10,%r11,4),%r9d
	cmpl %r9d,0x0(%r13,%r11,4)
	jne L_530738
L_372533:
	incl %ebx
	jo L_372146
L_372534:
	jmp loop_3735
.p2align 0x4
L_530738:
L_372527:
	cmpq $0x1,%r15
	je L_530739
L_372528:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_372494
.p2align 0x4
L_530739:
L_372529:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372501
L_372531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_372532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372532
.p2align 0x4
.long 0x5567
L_372532:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_372501:
	movl 0x18(%rbp),%ecx
	incl %ecx
	jo L_372146
L_372502:
	movq $0xFD1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xA0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x28C5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq $0x28C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0xC0(%rbp),%r13
	cmpq $0x1,%r13
	je L_530746
L_372503:
	movq 0x8(%r13),%r11
	movl %ecx,(localWord32+0x4)(%rip)
	xorl %ebx,%ebx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_372504:
	incl %ebx
	jo L_372146
L_372505:
	cmpq $0x1,%r15
	je L_530740
L_372506:
	movq 0x8(%r15),%r15
	jmp L_372504
.p2align 0x4
L_530740:
L_372507:
	movq %r14,0x20(%rbp)
	movl %ecx,0x18(%rbp)
	movl (localWord32+0x4)(%rip),%r15d
	movl %r15d,0x64(%rbp)
	movl %ebx,%ecx
L_372508:
	movslq %ecx,%rdx
	movq %rdx,0xA0(%rbp)
	testq %rdx,%rdx
	jz L_530744
L_372509:
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372510:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14ED,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_372511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372511
.p2align 0x4
.long 0x5566
L_372511:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq %rax,%r15
L_372512:
	movq 0xC0(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3734:
	cmpq 0xA0(%rbp),%r14
	jnl L_530742
L_372514:
	cmpq $0x1,%r13
	je L_372517
L_372515:
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r13
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3734
.p2align 0x4
L_530742:
L_372513:
	movq $0x16F9,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x98(%rbp),%r13
	movq %r13,%r11
	salq $0x4,%r11
	movq %r15,0x8(%r14,%r11,1)
	movq %r13,%r15
	salq $0x4,%r15
	movl 0x64(%rbp),%r11d
	movl %r11d,0x0(%r14,%r15,1)
	incq %r13
	movq %r13,0x98(%rbp)
	jmp loop_3720
.p2align 0x4
L_530744:
L_372519:
	movq (globalObjptr+0x14B0)(%rip),%r15
	jmp L_372512
.p2align 0x4
L_530746:
L_372520:
	movq %r15,0x20(%rbp)
	movl %ecx,0x18(%rbp)
	movl %ecx,0x64(%rbp)
	xorl %ecx,%ecx
	jmp L_372508
.p2align 0x4
L_530750:
L_372535:
	movl 0x0(%r14),%r13d
	movq 0xC0(%rbp),%r11
	cmpq $0x1,%r11
	je L_530751
L_372536:
	movl %r13d,(localWord32+0x4)(%rip)
	movq 0x8(%r11),%r15
	movq 0x20(%rbp),%r14
	xorl %ebx,%ebx
	movl 0x18(%rbp),%ecx
	jmp L_372504
.p2align 0x4
L_530751:
L_372537:
	movl %r13d,0x64(%rbp)
	xorl %ecx,%ecx
	jmp L_372508
.p2align 0x4
L_530752:
L_372497:
	cmpq $0x1,%r15
	je L_530753
L_372498:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_372494
.p2align 0x4
L_530753:
L_372499:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372501
L_372521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_372522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372522
.p2align 0x4
.long 0x5567
L_372522:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_372501
.p2align 0x4
L_530758:
L_372551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_372552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372552
.p2align 0x4
.long 0x5568
L_372552:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_372488
.p2align 0x4
L_530767:
L_372363:
	movq 0x58(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_372159
L_372364:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372365
.p2align 0x4
.long 0x555A
L_372365:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0x88(%rbp)
	jmp L_372366
.p2align 0x4
L_530769:
L_372590:
	movl 0x20(%rbp),%ecx
	jmp L_372370
.p2align 0x4
L_530771:
L_372603:
	movq (globalObjptr+0x14A0)(%rip),%r15
	movq %r15,0xA8(%rbp)
	jmp L_372359
.p2align 0x4
L_530775:
L_372618:
	movl 0x90(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x90(%rbp)
	jmp L_372355
.p2align 0x4
L_530776:
L_372349:
	cmpq $0x1,%r15
	je L_530777
L_372350:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_372346
.p2align 0x4
L_530777:
L_372351:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372353
L_372604:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_372605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372605
.p2align 0x4
.long 0x5559
L_372605:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_372353
.p2align 0x4
L_530785:
L_372640:
	movq %r15,0x78(%rbp)
	xorl %ecx,%ecx
	jmp L_372337
.p2align 0x4
L_530786:
L_372641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_372642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372642
.p2align 0x4
.long 0x556A
L_372642:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_372635
.p2align 0x4
L_530787:
L_372325:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xA8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xA0(%rbp),%r13
	cmpq $0x1,%r13
	je L_530791
L_372326:
	movq %r14,0x98(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x78(%rbp)
	movl 0x0(%r13),%r14d
	movl %r14d,0x20(%rbp)
.p2align 0x4,,0x7
L_372327:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_530790
.p2align 0x4,,0x7
L_372328:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_530788
L_372329:
	movq %r15,0x98(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movl %r15d,0x20(%rbp)
	jmp L_372327
.p2align 0x4
L_530788:
L_372331:
	cmpq $0x1,%r15
	je L_530789
L_372332:
	movq %r15,%r14
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
	jmp L_372333
.p2align 0x4
L_530789:
L_372627:
	movq %r15,0x78(%rbp)
	xorl %ecx,%ecx
	jmp L_372337
.p2align 0x4
L_530790:
L_372628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_372629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372629
.p2align 0x4
.long 0x556A
L_372629:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_372328
.p2align 0x4
L_530791:
	movq %r14,%r15
	jmp L_372331
.p2align 0x4
L_530792:
L_372643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_372644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372644
.p2align 0x4
.long 0x556B
L_372644:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_372324
.p2align 0x4
L_530793:
L_372645:
	movq 0x78(%rbp),%r13
	movq %r13,%r15
	jmp L_372638
.p2align 0x4
L_530794:
L_372646:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_372647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372647
.p2align 0x4
.long 0x556A
L_372647:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_372319
.p2align 0x4
L_530797:
L_372663:
	movq $0x1,0x80(%rbp)
	movl $0xFFFFFFFF,0x90(%rbp)
	jmp L_372316
.p2align 0x4
L_530798:
L_372311:
	cmpq $0x1,%r15
	je L_530799
L_372312:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_372308
.p2align 0x4
L_530799:
L_372313:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_372315
L_372649:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_372650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_372650
.p2align 0x4
.long 0x556C
L_372650:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_372315
.p2align 0x4
L_530803:
L_372665:
	movl %ecx,0x18(%rbp)
	jmp x_1154
.p2align 0x4
.long 0x5561
L_372423:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl $0x1,%ecx
	jmp L_372420
.p2align 0x4
.long 0x72E
L_372424:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
L_372425:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_372426
L_372427:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xC9D,%r14
	jne L_530811
L_372428:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	cmpq %r13,0x48(%rbp)
	je L_530810
L_372429:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_530810:
	movl %r14d,%ecx
	jmp L_372420
.p2align 0x4
L_530811:
L_372426:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
