/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:09:37 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl maybeSaveToFile_0
.hidden maybeSaveToFile_0
maybeSaveToFile_0:
L_190910:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_190911
L_190932:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_190933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_190933
.p2align 0x4
.long 0x4AE
L_190933:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_190911:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_458648
L_190912:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_190913:
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_190914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1608
.p2align 0x4
L_458648:
L_190919:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x103B
L_190914:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_190915
L_190929:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_190930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_190930
.p2align 0x4
.long 0x103C
L_190930:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_190915:
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_458651
L_190916:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_190919
L_190917:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_190913
.p2align 0x4
L_458651:
L_190920:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_190921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x456
L_190921:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_190922
L_190927:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_190928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_190928
.p2align 0x4
.long 0xFED
L_190928:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_190922:
	movq 0x20(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r15),%r13
	movq 0x20(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	addq $0x70,%rbp
	leaq (L_190923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2804
L_190923:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_190924
L_190925:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_190926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_190926
.p2align 0x4
.long 0x2805
L_190926:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_190924:
	movq $0x31B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0x1638)(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb $0x6,0x48(%rbp)
	jmp x_1832
.text
.p2align 0x4
.globl passTypeCheck_2
.hidden passTypeCheck_2
passTypeCheck_2:
L_190934:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_191176
L_190935:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x380,%r15
	jb L_458672
L_190936:
	movq 0x30(%rbp),%r14
	movq 0x60(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x58(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x48(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x40(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x38(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x70(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_458655
L_190937:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_190938:
	movq %r15,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_190939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1608
.p2align 0x4
L_458655:
L_190944:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20C1,%r14
	je L_458671
	cmpq $0x20C2,%r14
	je L_458670
	cmpq $0x20C3,%r14
	je L_458669
	cmpq $0x20C4,%r14
	je L_458668
	cmpq $0x20C5,%r14
	je L_458667
	cmpq $0x20C6,%r14
	je L_458666
L_190945:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x309B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x8(%rbp)
	addq $0x20,%r12
L_190946:
	movq 0x58(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je L_191082
	cmpb $0x1,%r15b
	je L_458664
L_190947:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x184E,%r14
	je L_458662
	cmpq $0x184F,%r14
	je L_458661
	cmpq $0x1850,%r14
	je L_458660
	cmpq $0x1851,%r14
	je L_458659
	cmpq $0x1852,%r14
	je L_458658
	cmpq $0x1853,%r14
	je L_458657
	cmpq $0x1854,%r14
	je L_458656
L_190948:
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_190949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1846
.p2align 0x4
L_458656:
L_191080:
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_190949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrink_0
.p2align 0x4
L_458657:
L_191079:
	movq 0x48(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	addq $0xB8,%rbp
	leaq (L_190949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1847
.p2align 0x4
L_458658:
L_191078:
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_190949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrink_0
.p2align 0x4
L_458659:
L_191067:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq $0x899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x1640)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_191068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_458660:
L_191066:
	movq 0x348(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x340(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x338(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x330(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x328(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x320(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x318(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x310(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x308(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x300(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x2F8(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x2F0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x2E8(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x2E0(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x2D8(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x2D0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x2C8(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x2C0(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x2B8(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x2B0(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x2A8(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x2A0(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x298(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x290(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x288(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x280(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x278(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x270(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x268(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x260(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x258(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x250(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x248(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x240(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x238(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x230(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x228(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x220(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x218(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x210(%r15),%r14
	movq %r14,0x1F0(%rbp)
	movq 0x208(%r15),%r14
	movq %r14,0x1F8(%rbp)
	movq 0x200(%r15),%r14
	movq %r14,0x200(%rbp)
	movq 0x1F8(%r15),%r14
	movq %r14,0x208(%rbp)
	movq 0x1F0(%r15),%r14
	movq %r14,0x210(%rbp)
	movq 0x1E8(%r15),%r14
	movq %r14,0x218(%rbp)
	movq 0x1E0(%r15),%r14
	movq %r14,0x220(%rbp)
	movq 0x1D8(%r15),%r14
	movq %r14,0x228(%rbp)
	movq 0x1D0(%r15),%r14
	movq %r14,0x230(%rbp)
	movq 0x1C8(%r15),%r14
	movq %r14,0x238(%rbp)
	movq 0x1C0(%r15),%r14
	movq %r14,0x240(%rbp)
	movq 0x1B8(%r15),%r14
	movq %r14,0x248(%rbp)
	movq 0x1B0(%r15),%r14
	movq %r14,0x250(%rbp)
	movq 0x1A8(%r15),%r14
	movq %r14,0x258(%rbp)
	movq 0x1A0(%r15),%r14
	movq %r14,0x260(%rbp)
	movq 0x198(%r15),%r14
	movq %r14,0x268(%rbp)
	movq 0x190(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x188(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x180(%r15),%r14
	movq %r14,0x280(%rbp)
	movq 0x178(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x170(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0x168(%r15),%r14
	movq %r14,0x298(%rbp)
	movq 0x160(%r15),%r14
	movq %r14,0x2A0(%rbp)
	movq 0x158(%r15),%r14
	movq %r14,0x2A8(%rbp)
	movq 0x150(%r15),%r14
	movq %r14,0x2B0(%rbp)
	movq 0x148(%r15),%r14
	movq %r14,0x2B8(%rbp)
	movq 0x140(%r15),%r14
	movq %r14,0x2C0(%rbp)
	movq 0x138(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq 0x130(%r15),%r14
	movq %r14,0x2D0(%rbp)
	movq 0x128(%r15),%r14
	movq %r14,0x2D8(%rbp)
	movq 0x120(%r15),%r14
	movq %r14,0x2E0(%rbp)
	movq 0x118(%r15),%r14
	movq %r14,0x2E8(%rbp)
	movq 0x110(%r15),%r14
	movq %r14,0x2F0(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x2F8(%rbp)
	movq 0x108(%r15),%r14
	movq %r14,0x300(%rbp)
	movq 0x100(%r15),%r14
	movq %r14,0x308(%rbp)
	movq 0xF8(%r15),%r14
	movq %r14,0x310(%rbp)
	movq 0xF0(%r15),%r14
	movq %r14,0x318(%rbp)
	movq 0xE8(%r15),%r14
	movq %r14,0x320(%rbp)
	movq 0xE0(%r15),%r14
	movq %r14,0x328(%rbp)
	movq 0xD8(%r15),%r14
	movq %r14,0x330(%rbp)
	movq 0xD0(%r15),%r14
	movq %r14,0x338(%rbp)
	movq 0xC8(%r15),%r14
	movq %r14,0x340(%rbp)
	movq 0xC0(%r15),%r14
	movq %r14,0x348(%rbp)
	movq 0xB8(%r15),%r14
	movq %r14,0x350(%rbp)
	movq 0xB0(%r15),%r14
	movq %r14,0x358(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x360(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x368(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x370(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x378(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x380(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x388(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x390(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x398(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x3A0(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x3A8(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x3B0(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x3B8(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x3C0(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x3C8(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x3D0(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x3D8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x3E0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x3E8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x3F0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x3F8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x400(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x408(%rbp)
	addq $0xB8,%rbp
	leaq (L_190949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1848
.p2align 0x4
L_458661:
L_191065:
	movq 0x90(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x148(%rbp)
	addq $0xB8,%rbp
	leaq (L_190949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1849
.p2align 0x4
L_458662:
L_191050:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0xB0(%rbp)
	movq 0x18(%r14),%r13
	cmpq $0x1,%r13
	je L_458663
L_191051:
	movq 0x8(%r13),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq $0x1,0xB8(%rbp)
L_191052:
	movq %r15,0xC8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_191053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flow_0
.p2align 0x4
L_458663:
L_191064:
	movq $0x1,0x8(%rbp)
L_191057:
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_191058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flow_0
.p2align 0x4
L_458664:
L_191082:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1600)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_191083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_458666:
L_191171:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x30A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	jmp L_190946
.p2align 0x4
L_458667:
L_191170:
	movq 0x48(%r15),%r14
	movq 0x40(%r15),%r13
	movq 0x38(%r15),%r11
	movq 0x30(%r15),%r10
	movq 0x28(%r15),%r9
	movq 0x20(%r15),%r8
	movq 0x18(%r15),%rsp
	movq 0x10(%r15),%rsi
	movq 0x8(%r15),%rdi
	movq 0x0(%r15),%rdx
	movq $0x30A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rdx,0x0(%r15)
	movq %rdi,0x8(%r15)
	movq %rsi,0x10(%r15)
	movq %rsp,0x18(%r15)
	movq %r8,0x20(%r15)
	movq %r9,0x28(%r15)
	movq %r10,0x30(%r15)
	movq %r11,0x38(%r15)
	movq %r13,0x40(%r15)
	movq %r14,0x48(%r15)
	movq %r15,0x8(%rbp)
	addq $0x58,%r12
	jmp L_190946
.p2align 0x4
L_458668:
L_191169:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x30A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	jmp L_190946
.p2align 0x4
L_458669:
L_191168:
	movq 0x348(%r15),%r14
	movq 0x340(%r15),%r13
	movq 0x338(%r15),%r11
	movq 0x330(%r15),%r10
	movq 0x328(%r15),%r9
	movq 0x320(%r15),%r8
	movq 0x318(%r15),%rsp
	movq 0x310(%r15),%rsi
	movq 0x308(%r15),%rdi
	movq 0x300(%r15),%rdx
	movq 0x2F8(%r15),%rcx
	movq 0x2F0(%r15),%rbx
	movq 0x2E8(%r15),%rax
	movq %r14,(localObjptr+0x0)(%rip)
	movq 0x2E0(%r15),%r14
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x2D8(%r15),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x2D0(%r15),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x2C8(%r15),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x2C0(%r15),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x2B8(%r15),%r8
	movq %rsp,(localObjptr+0x30)(%rip)
	movq 0x2B0(%r15),%rsp
	movq %rsi,(localObjptr+0x38)(%rip)
	movq 0x2A8(%r15),%rsi
	movq %rdi,(localObjptr+0x40)(%rip)
	movq 0x2A0(%r15),%rdi
	movq %rdx,(localObjptr+0x48)(%rip)
	movq 0x298(%r15),%rdx
	movq %rcx,(localObjptr+0x50)(%rip)
	movq 0x290(%r15),%rcx
	movq %rbx,(localObjptr+0x58)(%rip)
	movq 0x288(%r15),%rbx
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x280(%r15),%rax
	movq %r14,(localObjptr+0x68)(%rip)
	movq 0x278(%r15),%r14
	movq %r13,(localObjptr+0x70)(%rip)
	movq 0x270(%r15),%r13
	movq %r11,(localObjptr+0x78)(%rip)
	movq 0x268(%r15),%r11
	movq %r10,(localObjptr+0x80)(%rip)
	movq 0x260(%r15),%r10
	movq %r9,(localObjptr+0x88)(%rip)
	movq 0x258(%r15),%r9
	movq %r8,(localObjptr+0x90)(%rip)
	movq 0x250(%r15),%r8
	movq %rsp,(localObjptr+0x98)(%rip)
	movq 0x248(%r15),%rsp
	movq %rsi,(localObjptr+0xA0)(%rip)
	movq 0x240(%r15),%rsi
	movq %rdi,(localObjptr+0xA8)(%rip)
	movq 0x238(%r15),%rdi
	movq %rdx,(localObjptr+0xB0)(%rip)
	movq 0x230(%r15),%rdx
	movq %rcx,(localObjptr+0xB8)(%rip)
	movq 0x228(%r15),%rcx
	movq %rbx,(localObjptr+0xC0)(%rip)
	movq 0x220(%r15),%rbx
	movq %rax,(localObjptr+0xC8)(%rip)
	movq 0x218(%r15),%rax
	movq %r14,(localObjptr+0xD0)(%rip)
	movq 0x210(%r15),%r14
	movq %r13,(localObjptr+0xD8)(%rip)
	movq 0x208(%r15),%r13
	movq %r11,(localObjptr+0xE0)(%rip)
	movq 0x200(%r15),%r11
	movq %r10,(localObjptr+0xE8)(%rip)
	movq 0x1F8(%r15),%r10
	movq %r9,(localObjptr+0xF0)(%rip)
	movq 0x1F0(%r15),%r9
	movq %r8,(localObjptr+0xF8)(%rip)
	movq 0x1E8(%r15),%r8
	movq %rsp,(localObjptr+0x100)(%rip)
	movq 0x1E0(%r15),%rsp
	movq %rsi,(localObjptr+0x108)(%rip)
	movq 0x1D8(%r15),%rsi
	movq %rdi,(localObjptr+0x110)(%rip)
	movq 0x1D0(%r15),%rdi
	movq %rdx,(localObjptr+0x118)(%rip)
	movq 0x1C8(%r15),%rdx
	movq %rcx,(localObjptr+0x120)(%rip)
	movq 0x1C0(%r15),%rcx
	movq %rbx,(localObjptr+0x128)(%rip)
	movq 0x1B8(%r15),%rbx
	movq %rax,(localObjptr+0x130)(%rip)
	movq 0x1B0(%r15),%rax
	movq %r14,(localObjptr+0x138)(%rip)
	movq 0x1A8(%r15),%r14
	movq %r13,(localObjptr+0x140)(%rip)
	movq 0x1A0(%r15),%r13
	movq %r11,(localObjptr+0x148)(%rip)
	movq 0x198(%r15),%r11
	movq %r10,(localObjptr+0x150)(%rip)
	movq 0x190(%r15),%r10
	movq %r9,(localObjptr+0x158)(%rip)
	movq 0x188(%r15),%r9
	movq %r8,(localObjptr+0x160)(%rip)
	movq 0x180(%r15),%r8
	movq %rsp,(localObjptr+0x168)(%rip)
	movq 0x178(%r15),%rsp
	movq %rsi,(localObjptr+0x170)(%rip)
	movq 0x170(%r15),%rsi
	movq %rdi,(localObjptr+0x178)(%rip)
	movq 0x168(%r15),%rdi
	movq %rdx,(localObjptr+0x180)(%rip)
	movq 0x160(%r15),%rdx
	movq %rcx,(localObjptr+0x188)(%rip)
	movq 0x158(%r15),%rcx
	movq %rbx,(localObjptr+0x190)(%rip)
	movq 0x150(%r15),%rbx
	movq %rax,(localObjptr+0x198)(%rip)
	movq 0x148(%r15),%rax
	movq %r14,(localObjptr+0x1A0)(%rip)
	movq 0x140(%r15),%r14
	movq %r13,(localObjptr+0x1A8)(%rip)
	movq 0x138(%r15),%r13
	movq %r11,(localObjptr+0x1B0)(%rip)
	movq 0x130(%r15),%r11
	movq %r10,(localObjptr+0x1B8)(%rip)
	movq 0x128(%r15),%r10
	movq %r9,(localObjptr+0x1C0)(%rip)
	movq 0x120(%r15),%r9
	movq %r8,(localObjptr+0x1C8)(%rip)
	movq 0x118(%r15),%r8
	movq %rsp,(localObjptr+0x1D0)(%rip)
	movq 0x110(%r15),%rsp
	movq %rsi,(localObjptr+0x1D8)(%rip)
	movb 0x1(%r15),%sil
	movb %sil,(localWord8+0x0)(%rip)
	movq 0x108(%r15),%rsi
	movq %rdi,(localObjptr+0x1E0)(%rip)
	movq 0x100(%r15),%rdi
	movq %rdx,(localObjptr+0x1E8)(%rip)
	movq 0xF8(%r15),%rdx
	movq %rcx,(localObjptr+0x1F0)(%rip)
	movq 0xF0(%r15),%rcx
	movq %rbx,(localObjptr+0x1F8)(%rip)
	movq 0xE8(%r15),%rbx
	movq %rax,(localObjptr+0x200)(%rip)
	movq 0xE0(%r15),%rax
	movq %r14,(localObjptr+0x208)(%rip)
	movq 0xD8(%r15),%r14
	movq %r13,(localObjptr+0x210)(%rip)
	movq 0xD0(%r15),%r13
	movq %r11,(localObjptr+0x218)(%rip)
	movq 0xC8(%r15),%r11
	movq %r10,(localObjptr+0x220)(%rip)
	movq 0xC0(%r15),%r10
	movq %r9,(localObjptr+0x228)(%rip)
	movq 0xB8(%r15),%r9
	movq %r8,(localObjptr+0x230)(%rip)
	movq 0xB0(%r15),%r8
	movq %rsp,(localObjptr+0x238)(%rip)
	movq 0xA8(%r15),%rsp
	movq %rsi,(localObjptr+0x240)(%rip)
	movq 0xA0(%r15),%rsi
	movq %rdi,(localObjptr+0x248)(%rip)
	movq 0x98(%r15),%rdi
	movq %rdx,(localObjptr+0x250)(%rip)
	movq 0x90(%r15),%rdx
	movq %rcx,(localObjptr+0x258)(%rip)
	movq 0x88(%r15),%rcx
	movq %rbx,(localObjptr+0x260)(%rip)
	movq 0x80(%r15),%rbx
	movq %rax,(localObjptr+0x268)(%rip)
	movq 0x78(%r15),%rax
	movq %r14,(localObjptr+0x270)(%rip)
	movq 0x70(%r15),%r14
	movq %r13,(localObjptr+0x278)(%rip)
	movq 0x68(%r15),%r13
	movq %r11,(localObjptr+0x280)(%rip)
	movq 0x60(%r15),%r11
	movq %r10,(localObjptr+0x288)(%rip)
	movq 0x58(%r15),%r10
	movq %r9,(localObjptr+0x290)(%rip)
	movq 0x50(%r15),%r9
	movq %r8,(localObjptr+0x298)(%rip)
	movq 0x48(%r15),%r8
	movq %rsp,(localObjptr+0x2A0)(%rip)
	movq 0x40(%r15),%rsp
	movq %rsi,(localObjptr+0x2A8)(%rip)
	movq 0x38(%r15),%rsi
	movq %rdi,(localObjptr+0x2B0)(%rip)
	movb 0x0(%r15),%dil
	movb %dil,(localWord8+0x1)(%rip)
	movq 0x30(%r15),%rdi
	movq %rdx,(localObjptr+0x2B8)(%rip)
	movq 0x28(%r15),%rdx
	movq %rcx,(localObjptr+0x2C0)(%rip)
	movq 0x20(%r15),%rcx
	movq %rbx,(localObjptr+0x2C8)(%rip)
	movq 0x18(%r15),%rbx
	movq %rax,(localObjptr+0x2D0)(%rip)
	movq 0x10(%r15),%rax
	movq %r14,(localObjptr+0x2D8)(%rip)
	movq 0x8(%r15),%r14
	movq $0x30A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %rax,0x10(%r15)
	movq %rbx,0x18(%r15)
	movq %rcx,0x20(%r15)
	movq %rdx,0x28(%r15)
	movq %rdi,0x30(%r15)
	movq %rsi,0x38(%r15)
	movq %rsp,0x40(%r15)
	movq %r8,0x48(%r15)
	movq %r9,0x50(%r15)
	movq %r10,0x58(%r15)
	movq %r11,0x60(%r15)
	movq %r13,0x68(%r15)
	movq (localObjptr+0x2D8)(%rip),%r14
	movq %r14,0x70(%r15)
	movq (localObjptr+0x2D0)(%rip),%r14
	movq %r14,0x78(%r15)
	movq (localObjptr+0x2C8)(%rip),%r14
	movq %r14,0x80(%r15)
	movq (localObjptr+0x2C0)(%rip),%r14
	movq %r14,0x88(%r15)
	movq (localObjptr+0x2B8)(%rip),%r14
	movq %r14,0x90(%r15)
	movq (localObjptr+0x2B0)(%rip),%r14
	movq %r14,0x98(%r15)
	movq (localObjptr+0x2A8)(%rip),%r14
	movq %r14,0xA0(%r15)
	movq (localObjptr+0x2A0)(%rip),%r14
	movq %r14,0xA8(%r15)
	movq (localObjptr+0x298)(%rip),%r14
	movq %r14,0xB0(%r15)
	movq (localObjptr+0x290)(%rip),%r14
	movq %r14,0xB8(%r15)
	movq (localObjptr+0x288)(%rip),%r14
	movq %r14,0xC0(%r15)
	movq (localObjptr+0x280)(%rip),%r14
	movq %r14,0xC8(%r15)
	movq (localObjptr+0x278)(%rip),%r14
	movq %r14,0xD0(%r15)
	movq (localObjptr+0x270)(%rip),%r14
	movq %r14,0xD8(%r15)
	movq (localObjptr+0x268)(%rip),%r14
	movq %r14,0xE0(%r15)
	movq (localObjptr+0x260)(%rip),%r14
	movq %r14,0xE8(%r15)
	movq (localObjptr+0x258)(%rip),%r14
	movq %r14,0xF0(%r15)
	movq (localObjptr+0x250)(%rip),%r14
	movq %r14,0xF8(%r15)
	movq (localObjptr+0x248)(%rip),%r14
	movq %r14,0x100(%r15)
	movq (localObjptr+0x240)(%rip),%r14
	movq %r14,0x108(%r15)
	movq (localObjptr+0x238)(%rip),%r14
	movq %r14,0x110(%r15)
	movq (localObjptr+0x230)(%rip),%r14
	movq %r14,0x118(%r15)
	movq (localObjptr+0x228)(%rip),%r14
	movq %r14,0x120(%r15)
	movq (localObjptr+0x220)(%rip),%r14
	movq %r14,0x128(%r15)
	movq (localObjptr+0x218)(%rip),%r14
	movq %r14,0x130(%r15)
	movq (localObjptr+0x210)(%rip),%r14
	movq %r14,0x138(%r15)
	movq (localObjptr+0x208)(%rip),%r14
	movq %r14,0x140(%r15)
	movq (localObjptr+0x200)(%rip),%r14
	movq %r14,0x148(%r15)
	movq (localObjptr+0x1F8)(%rip),%r14
	movq %r14,0x150(%r15)
	movq (localObjptr+0x1F0)(%rip),%r14
	movq %r14,0x158(%r15)
	movq (localObjptr+0x1E8)(%rip),%r14
	movq %r14,0x160(%r15)
	movq (localObjptr+0x1E0)(%rip),%r14
	movq %r14,0x168(%r15)
	movq (localObjptr+0x1D8)(%rip),%r14
	movq %r14,0x170(%r15)
	movq (localObjptr+0x1D0)(%rip),%r14
	movq %r14,0x178(%r15)
	movq (localObjptr+0x1C8)(%rip),%r14
	movq %r14,0x180(%r15)
	movq (localObjptr+0x1C0)(%rip),%r14
	movq %r14,0x188(%r15)
	movq (localObjptr+0x1B8)(%rip),%r14
	movq %r14,0x190(%r15)
	movq (localObjptr+0x1B0)(%rip),%r14
	movq %r14,0x198(%r15)
	movq (localObjptr+0x1A8)(%rip),%r14
	movq %r14,0x1A0(%r15)
	movq (localObjptr+0x1A0)(%rip),%r14
	movq %r14,0x1A8(%r15)
	movq (localObjptr+0x198)(%rip),%r14
	movq %r14,0x1B0(%r15)
	movq (localObjptr+0x190)(%rip),%r14
	movq %r14,0x1B8(%r15)
	movq (localObjptr+0x188)(%rip),%r14
	movq %r14,0x1C0(%r15)
	movq (localObjptr+0x180)(%rip),%r14
	movq %r14,0x1C8(%r15)
	movq (localObjptr+0x178)(%rip),%r14
	movq %r14,0x1D0(%r15)
	movq (localObjptr+0x170)(%rip),%r14
	movq %r14,0x1D8(%r15)
	movq (localObjptr+0x168)(%rip),%r14
	movq %r14,0x1E0(%r15)
	movq (localObjptr+0x160)(%rip),%r14
	movq %r14,0x1E8(%r15)
	movq (localObjptr+0x158)(%rip),%r14
	movq %r14,0x1F0(%r15)
	movq (localObjptr+0x150)(%rip),%r14
	movq %r14,0x1F8(%r15)
	movq (localObjptr+0x148)(%rip),%r14
	movq %r14,0x200(%r15)
	movq (localObjptr+0x140)(%rip),%r14
	movq %r14,0x208(%r15)
	movq (localObjptr+0x138)(%rip),%r14
	movq %r14,0x210(%r15)
	movq (localObjptr+0x130)(%rip),%r14
	movq %r14,0x218(%r15)
	movq (localObjptr+0x128)(%rip),%r14
	movq %r14,0x220(%r15)
	movq (localObjptr+0x120)(%rip),%r14
	movq %r14,0x228(%r15)
	movq (localObjptr+0x118)(%rip),%r14
	movq %r14,0x230(%r15)
	movq (localObjptr+0x110)(%rip),%r14
	movq %r14,0x238(%r15)
	movq (localObjptr+0x108)(%rip),%r14
	movq %r14,0x240(%r15)
	movq (localObjptr+0x100)(%rip),%r14
	movq %r14,0x248(%r15)
	movq (localObjptr+0xF8)(%rip),%r14
	movq %r14,0x250(%r15)
	movq (localObjptr+0xF0)(%rip),%r14
	movq %r14,0x258(%r15)
	movq (localObjptr+0xE8)(%rip),%r14
	movq %r14,0x260(%r15)
	movq (localObjptr+0xE0)(%rip),%r14
	movq %r14,0x268(%r15)
	movq (localObjptr+0xD8)(%rip),%r14
	movq %r14,0x270(%r15)
	movq (localObjptr+0xD0)(%rip),%r14
	movq %r14,0x278(%r15)
	movq (localObjptr+0xC8)(%rip),%r14
	movq %r14,0x280(%r15)
	movq (localObjptr+0xC0)(%rip),%r14
	movq %r14,0x288(%r15)
	movq (localObjptr+0xB8)(%rip),%r14
	movq %r14,0x290(%r15)
	movq (localObjptr+0xB0)(%rip),%r14
	movq %r14,0x298(%r15)
	movq (localObjptr+0xA8)(%rip),%r14
	movq %r14,0x2A0(%r15)
	movq (localObjptr+0xA0)(%rip),%r14
	movq %r14,0x2A8(%r15)
	movq (localObjptr+0x98)(%rip),%r14
	movq %r14,0x2B0(%r15)
	movq (localObjptr+0x90)(%rip),%r14
	movq %r14,0x2B8(%r15)
	movq (localObjptr+0x88)(%rip),%r14
	movq %r14,0x2C0(%r15)
	movq (localObjptr+0x80)(%rip),%r14
	movq %r14,0x2C8(%r15)
	movq (localObjptr+0x78)(%rip),%r14
	movq %r14,0x2D0(%r15)
	movq (localObjptr+0x70)(%rip),%r14
	movq %r14,0x2D8(%r15)
	movq (localObjptr+0x68)(%rip),%r14
	movq %r14,0x2E0(%r15)
	movq (localObjptr+0x60)(%rip),%r14
	movq %r14,0x2E8(%r15)
	movq (localObjptr+0x58)(%rip),%r14
	movq %r14,0x2F0(%r15)
	movq (localObjptr+0x50)(%rip),%r14
	movq %r14,0x2F8(%r15)
	movq (localObjptr+0x48)(%rip),%r14
	movq %r14,0x300(%r15)
	movq (localObjptr+0x40)(%rip),%r14
	movq %r14,0x308(%r15)
	movq (localObjptr+0x38)(%rip),%r14
	movq %r14,0x310(%r15)
	movq (localObjptr+0x30)(%rip),%r14
	movq %r14,0x318(%r15)
	movq (localObjptr+0x28)(%rip),%r14
	movq %r14,0x320(%r15)
	movq (localObjptr+0x20)(%rip),%r14
	movq %r14,0x328(%r15)
	movq (localObjptr+0x18)(%rip),%r14
	movq %r14,0x330(%r15)
	movq (localObjptr+0x10)(%rip),%r14
	movq %r14,0x338(%r15)
	movq (localObjptr+0x8)(%rip),%r14
	movq %r14,0x340(%r15)
	movq (localObjptr+0x0)(%rip),%r14
	movq %r14,0x348(%r15)
	addq $0x358,%r12
	movzbl (localWord8+0x1)(%rip),%r14d
	movzbl (localWord8+0x0)(%rip),%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x8(%rbp)
	jmp L_190946
.p2align 0x4
L_458670:
L_191167:
	movq 0x90(%r15),%r14
	movq 0x88(%r15),%r13
	movq 0x80(%r15),%r11
	movq 0x78(%r15),%r10
	movq 0x70(%r15),%r9
	movq 0x68(%r15),%r8
	movq 0x60(%r15),%rsp
	movq 0x58(%r15),%rsi
	movq 0x50(%r15),%rdi
	movq 0x48(%r15),%rdx
	movq 0x40(%r15),%rcx
	movq 0x38(%r15),%rbx
	movq 0x30(%r15),%rax
	movq %r14,(localObjptr+0x0)(%rip)
	movq 0x28(%r15),%r14
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x20(%r15),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x18(%r15),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x10(%r15),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x8(%r15),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x0(%r15),%r8
	movq $0x309F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x0(%r15)
	movq %r9,0x8(%r15)
	movq %r10,0x10(%r15)
	movq %r11,0x18(%r15)
	movq %r13,0x20(%r15)
	movq %r14,0x28(%r15)
	movq %rax,0x30(%r15)
	movq %rbx,0x38(%r15)
	movq %rcx,0x40(%r15)
	movq %rdx,0x48(%r15)
	movq %rdi,0x50(%r15)
	movq %rsi,0x58(%r15)
	movq %rsp,0x60(%r15)
	movq (localObjptr+0x28)(%rip),%r14
	movq %r14,0x68(%r15)
	movq (localObjptr+0x20)(%rip),%r14
	movq %r14,0x70(%r15)
	movq (localObjptr+0x18)(%rip),%r14
	movq %r14,0x78(%r15)
	movq (localObjptr+0x10)(%rip),%r14
	movq %r14,0x80(%r15)
	movq (localObjptr+0x8)(%rip),%r14
	movq %r14,0x88(%r15)
	movq (localObjptr+0x0)(%rip),%r14
	movq %r14,0x90(%r15)
	movq %r15,0x8(%rbp)
	addq $0xA0,%r12
	jmp L_190946
.p2align 0x4
L_458671:
L_191166:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x309D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	jmp L_190946
.p2align 0x4
L_458672:
L_191176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x380,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_191177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191177
.p2align 0x4
.long 0xC02
L_191177:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_190936
.p2align 0x4
.long 0x2806
L_190939:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0xB0(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x380,%r15
	jnb L_190940
L_191173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x380,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_191174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191174
.p2align 0x4
.long 0x283B
L_191174:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_190940:
	movl 0xB0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_458675
L_190941:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_190944
L_190942:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_190938
.p2align 0x4
L_458675:
L_191172:
	movq $0x30A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	jmp L_190946
.p2align 0x4
.long 0x2807
L_190949:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_190951
L_191048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_191049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191049
.p2align 0x4
.long 0x2820
L_191049:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_190951:
	movq $0x3127,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x0,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_190952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2825
L_191068:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191069
L_191076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_191077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191077
.p2align 0x4
.long 0x2828
L_191077:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_191069:
	movq $0x4139,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2763,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xC0(%rbp)
	addq $0x10,%r12
	movb $0x4,0xC8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (L_191070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp saveToFile_0
.p2align 0x4
.long 0x2821
L_191053:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191054
L_191062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_191063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191063
.p2align 0x4
.long 0x2824
L_191063:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_191054:
	movq $0x23A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_458679
L_191055:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_191052
.p2align 0x4
L_458679:
L_191056:
	movq %r15,0x8(%rbp)
	jmp L_191057
.p2align 0x4
.long 0x2822
L_191058:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191059
L_191060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_191061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191061
.p2align 0x4
.long 0x2823
L_191061:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_191059:
	movq $0x77F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0xB0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	jmp L_190951
.p2align 0x4
.long 0x2808
L_191083:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191084
L_191163:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_191164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191164
.p2align 0x4
.long 0x283A
L_191164:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_191084:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movb $0x1,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_191085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2808
L_190952:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_190953
L_191046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_191047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191047
.p2align 0x4
.long 0x2820
L_191047:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_190953:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	addl $0x3,%r14d
	jo L_458683
L_190955:
	movl %r14d,0x0(%r15)
	movq $0x3109,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xB8(%rbp)
	movb $0x0,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_190956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
L_458683:
L_190954:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2826
L_191070:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191071
L_191074:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_191075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191075
.p2align 0x4
.long 0x2827
L_191075:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_191071:
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_458685
L_191072:
	movq %r14,0x8(%rbp)
	jmp L_190951
.p2align 0x4
L_458685:
L_191073:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2808
L_191085:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_191086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x2809
L_190956:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_190957
L_191044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_191045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191045
.p2align 0x4
.long 0x281F
L_191045:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_190957:
	movq $0x3129,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movb $0x0,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_190958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2808
L_191086:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191087
L_191161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_191162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191162
.p2align 0x4
.long 0x2839
L_191162:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_191087:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	addl $0x3,%r14d
	jo L_190954
L_191088:
	movl %r14d,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x184E,%r14
	je L_458694
	cmpq $0x184F,%r14
	je L_458693
	cmpq $0x1850,%r14
	je L_458692
	cmpq $0x1851,%r14
	je L_458691
	cmpq $0x1852,%r14
	je L_458690
	cmpq $0x1853,%r14
	je L_458689
	cmpq $0x1854,%r14
	je L_458688
L_191089:
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	leaq L_191128(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xB8,%rbp
	leaq (L_191090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1846
.p2align 0x4
L_458688:
L_191160:
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	leaq L_191128(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xB8,%rbp
	leaq (L_191090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrink_0
.p2align 0x4
L_458689:
L_191159:
	movq 0x48(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	leaq L_191128(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xB8,%rbp
	leaq (L_191090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1847
.p2align 0x4
L_458690:
L_191158:
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	leaq L_191128(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xB8,%rbp
	leaq (L_191090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrink_0
.p2align 0x4
L_458691:
L_191150:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xB0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xB8(%rbp)
	movq $0x899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x1640)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	leaq L_191128(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xD0,%rbp
	leaq (L_191151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_458692:
L_191149:
	movq 0x348(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x340(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x338(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x330(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x328(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x320(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x318(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x310(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x308(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x300(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x2F8(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x2F0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x2E8(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x2E0(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x2D8(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x2D0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x2C8(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x2C0(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x2B8(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x2B0(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x2A8(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x2A0(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x298(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x290(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x288(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x280(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x278(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x270(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x268(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x260(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x258(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x250(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x248(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x240(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x238(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x230(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x228(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x220(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x218(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x210(%r15),%r14
	movq %r14,0x1F0(%rbp)
	movq 0x208(%r15),%r14
	movq %r14,0x1F8(%rbp)
	movq 0x200(%r15),%r14
	movq %r14,0x200(%rbp)
	movq 0x1F8(%r15),%r14
	movq %r14,0x208(%rbp)
	movq 0x1F0(%r15),%r14
	movq %r14,0x210(%rbp)
	movq 0x1E8(%r15),%r14
	movq %r14,0x218(%rbp)
	movq 0x1E0(%r15),%r14
	movq %r14,0x220(%rbp)
	movq 0x1D8(%r15),%r14
	movq %r14,0x228(%rbp)
	movq 0x1D0(%r15),%r14
	movq %r14,0x230(%rbp)
	movq 0x1C8(%r15),%r14
	movq %r14,0x238(%rbp)
	movq 0x1C0(%r15),%r14
	movq %r14,0x240(%rbp)
	movq 0x1B8(%r15),%r14
	movq %r14,0x248(%rbp)
	movq 0x1B0(%r15),%r14
	movq %r14,0x250(%rbp)
	movq 0x1A8(%r15),%r14
	movq %r14,0x258(%rbp)
	movq 0x1A0(%r15),%r14
	movq %r14,0x260(%rbp)
	movq 0x198(%r15),%r14
	movq %r14,0x268(%rbp)
	movq 0x190(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x188(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x180(%r15),%r14
	movq %r14,0x280(%rbp)
	movq 0x178(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x170(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0x168(%r15),%r14
	movq %r14,0x298(%rbp)
	movq 0x160(%r15),%r14
	movq %r14,0x2A0(%rbp)
	movq 0x158(%r15),%r14
	movq %r14,0x2A8(%rbp)
	movq 0x150(%r15),%r14
	movq %r14,0x2B0(%rbp)
	movq 0x148(%r15),%r14
	movq %r14,0x2B8(%rbp)
	movq 0x140(%r15),%r14
	movq %r14,0x2C0(%rbp)
	movq 0x138(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq 0x130(%r15),%r14
	movq %r14,0x2D0(%rbp)
	movq 0x128(%r15),%r14
	movq %r14,0x2D8(%rbp)
	movq 0x120(%r15),%r14
	movq %r14,0x2E0(%rbp)
	movq 0x118(%r15),%r14
	movq %r14,0x2E8(%rbp)
	movq 0x110(%r15),%r14
	movq %r14,0x2F0(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x2F8(%rbp)
	movq 0x108(%r15),%r14
	movq %r14,0x300(%rbp)
	movq 0x100(%r15),%r14
	movq %r14,0x308(%rbp)
	movq 0xF8(%r15),%r14
	movq %r14,0x310(%rbp)
	movq 0xF0(%r15),%r14
	movq %r14,0x318(%rbp)
	movq 0xE8(%r15),%r14
	movq %r14,0x320(%rbp)
	movq 0xE0(%r15),%r14
	movq %r14,0x328(%rbp)
	movq 0xD8(%r15),%r14
	movq %r14,0x330(%rbp)
	movq 0xD0(%r15),%r14
	movq %r14,0x338(%rbp)
	movq 0xC8(%r15),%r14
	movq %r14,0x340(%rbp)
	movq 0xC0(%r15),%r14
	movq %r14,0x348(%rbp)
	movq 0xB8(%r15),%r14
	movq %r14,0x350(%rbp)
	movq 0xB0(%r15),%r14
	movq %r14,0x358(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x360(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x368(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x370(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x378(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x380(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x388(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x390(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x398(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x3A0(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x3A8(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x3B0(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x3B8(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x3C0(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x3C8(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x3D0(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x3D8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x3E0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x3E8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x3F0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x3F8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x400(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x408(%rbp)
	leaq L_191128(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xB8,%rbp
	leaq (L_191090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1848
.p2align 0x4
L_458693:
L_191148:
	movq 0x90(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x148(%rbp)
	leaq L_191128(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xB8,%rbp
	leaq (L_191090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1849
.p2align 0x4
L_458694:
L_191133:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0xB8(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0xC0(%rbp)
	movq 0x18(%r14),%r13
	cmpq $0x1,%r13
	je L_458695
L_191134:
	movq 0x8(%r13),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq $0x1,0xC8(%rbp)
L_191135:
	movq %r15,0xD8(%rbp)
	leaq L_191128(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x50(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_191136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flow_0
.p2align 0x4
L_458695:
L_191147:
	movq $0x1,0x8(%rbp)
L_191140:
	leaq L_191128(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_191141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flow_0
.p2align 0x4
.long 0x280A
L_190958:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_190959
L_191042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_191043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191043
.p2align 0x4
.long 0x281E
L_191043:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_190959:
	movq $0x3113,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movb $0x0,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_190960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2829
L_191090:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x8(%rbp)
L_191091:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_458699
L_191116:
	movl %r14d,0x0(%r15)
	movq 0x68(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_191117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_458699:
L_191092:
	movq $0x3,0x28(%rbp)
L_191093:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_190954
L_191094:
	movl %r14d,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_191095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0xA1C
L_191128:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_191093
.p2align 0x4
.long 0x2836
L_191151:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191152
L_191156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_191157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191157
.p2align 0x4
.long 0x2838
L_191157:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_191152:
	movq $0x4139,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2763,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xD0(%rbp)
	addq $0x10,%r12
	movb $0x4,0xD8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_191153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp saveToFile_0
.p2align 0x4
.long 0x2832
L_191136:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191137
L_191145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_191146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191146
.p2align 0x4
.long 0x2835
L_191146:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_191137:
	movq $0x23A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_458702
L_191138:
	movq %r15,0xC8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_191135
.p2align 0x4
L_458702:
L_191139:
	movq %r15,0x8(%rbp)
	jmp L_191140
.p2align 0x4
.long 0x2833
L_191141:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191142
L_191143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_191144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191144
.p2align 0x4
.long 0x2834
L_191144:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_191142:
	movq $0x77F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0xC0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	jmp L_191091
.p2align 0x4
.long 0x280B
L_190960:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_190961
L_191040:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_191041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191041
.p2align 0x4
.long 0x281D
L_191041:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_190961:
	movq $0x311D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movb $0x0,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_190962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x282F
L_191117:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_191118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x282A
L_191095:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_191096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2837
L_191153:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_458706
L_191154:
	movq %r14,0x8(%rbp)
	jmp L_191091
.p2align 0x4
L_458706:
L_191155:
	movq $0x9,0x28(%rbp)
	jmp L_191093
.p2align 0x4
.long 0x280C
L_190962:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_190963
L_191038:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_191039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191039
.p2align 0x4
.long 0x281C
L_191039:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_190963:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_190954
L_190964:
	movl %r14d,0x0(%r15)
	movq (globalObjptr+0x1608)(%rip),%r15
	cmpl $0x0,0x0(%r15)
	jg L_458707
L_190965:
	movq $0xDE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xC8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB8,%rbp
	leaq (L_190966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maybeSaveToFile_0
.p2align 0x4
L_458707:
L_191034:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1620)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xFC58)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (fail_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2806
L_191118:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_191119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x282B
L_191096:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_191097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x280D
L_190966:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xA8(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_458710
L_190967:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458710:
L_190968:
	movq 0x58(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je L_190979
	cmpb $0x1,%r15b
	je L_458717
L_190969:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1856,%r14
	je L_458716
	cmpq $0x1857,%r14
	je L_458715
	cmpq $0x1858,%r14
	je L_458714
	cmpq $0x1859,%r14
	je L_458713
	cmpq $0x185A,%r14
	je L_458712
	cmpq $0x185B,%r14
	je L_458711
L_190970:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_190971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
L_458711:
L_190977:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_190971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
L_458712:
L_190976:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_190971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
L_458713:
L_190975:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_190971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
L_458714:
L_190974:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_190971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
L_458715:
L_190973:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_190971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
L_458716:
L_190972:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_190971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
L_458717:
L_190979:
	movq (globalObjptr+0x1650)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_190980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x281B
fail_3:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191035
L_191036:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_191037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191037
.p2align 0x4
.long 0x477
L_191037:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_191035:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2830
L_191119:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0xB0(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_191120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp timeToString_0
.p2align 0x4
.long 0x282C
L_191097:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_191098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp timeToString_0
.p2align 0x4
.long 0x280E
L_190971:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x280F
L_190980:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_190981
L_191031:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_191032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191032
.p2align 0x4
.long 0x281A
L_191032:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_190981:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movb $0x1,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_190982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x282F
L_191120:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191121
L_191131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_191132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191132
.p2align 0x4
.long 0x2831
L_191132:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_191121:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4B0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_191122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x282D
L_191098:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191099
L_191114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_191115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191115
.p2align 0x4
.long 0x282E
L_191115:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_191099:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4A0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_191100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x280F
L_190982:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_190983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x282F
L_191122:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191123
L_191129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_191130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191130
.p2align 0x4
.long 0x2831
L_191130:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_191123:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movb $0x1,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_191124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x282D
L_191100:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191101
L_191112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_191113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191113
.p2align 0x4
.long 0x282E
L_191113:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_191101:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movb $0x1,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_191102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x280F
L_190983:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	addl $0x3,%r14d
	jo L_190954
L_190984:
	movl %r14d,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1856,%r14
	je L_458730
	cmpq $0x1857,%r14
	je L_458729
	cmpq $0x1858,%r14
	je L_458728
	cmpq $0x1859,%r14
	je L_458727
	cmpq $0x185A,%r14
	je L_458726
	cmpq $0x185B,%r14
	je L_458725
L_190985:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_191020(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_190986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
L_458725:
L_191030:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_191020(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_190986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
L_458726:
L_191029:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_191020(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_190986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
L_458727:
L_191028:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_191020(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_190986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
L_458728:
L_191027:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_191020(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_190986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
L_458729:
L_191026:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_191020(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_190986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
L_458730:
L_191025:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_191020(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_190986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
.long 0x282F
L_191124:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_190951
L_191126:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_191127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191127
.p2align 0x4
.long 0x2820
L_191127:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_190951
.p2align 0x4
.long 0x282D
L_191102:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_191103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp name_0
.p2align 0x4
.long 0x2810
L_190986:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_458733
L_191011:
	movl %r14d,0x0(%r15)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_191012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_458733:
L_190987:
	movq $0x3,0x20(%rbp)
L_190988:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_190954
L_190989:
	movl %r14d,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_190990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0xA1C
L_191020:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_190988
.p2align 0x4
.long 0x282D
L_191103:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191104
L_191110:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_191111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191111
.p2align 0x4
.long 0x282E
L_191111:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_191104:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_191105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2810
L_191012:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_191013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2811
L_190990:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_190991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x925
L_191105:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191106
L_191108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_191109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191109
.p2align 0x4
.long 0x926
L_191109:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_191106:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x1,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_191107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2817
L_191013:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_191014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2812
L_190991:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_190992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x90A
L_191107:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2818
L_191014:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_191015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp timeToString_0
.p2align 0x4
.long 0x2813
L_190992:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_190993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp timeToString_0
.p2align 0x4
.long 0x2810
L_191015:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191016
L_191023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_191024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191024
.p2align 0x4
.long 0x2819
L_191024:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_191016:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4B0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA3F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_191017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2814
L_190993:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_190994
L_191009:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_191010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191010
.p2align 0x4
.long 0x2816
L_191010:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_190994:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4A0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA3F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_190995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2810
L_191017:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191018
L_191021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_191022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191022
.p2align 0x4
.long 0x2819
L_191022:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_191018:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movb $0x1,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_191019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2814
L_190995:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_190996
L_191007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_191008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191008
.p2align 0x4
.long 0x2816
L_191008:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_190996:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movb $0x1,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_190997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2810
L_191019:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2814
L_190997:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_190998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp name_0
.p2align 0x4
.long 0x2814
L_190998:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_190999
L_191005:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_191006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191006
.p2align 0x4
.long 0x2816
L_191006:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_190999:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA3F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_191000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2814
L_191000:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191001
L_191003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_191004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191004
.p2align 0x4
.long 0x2816
L_191004:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_191001:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x1,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_191002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2815
L_191002:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1846
.hidden x_1846
x_1846:
L_191178:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_191235
L_191179:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_458755
L_191180:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x20(%rbp)
	movq $0x92B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r15
	movq $0x23A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_191181:
	incl %ecx
	jo L_458754
L_191183:
	cmpq $0x1,%r15
	je L_458743
L_191184:
	movq 0x8(%r15),%r15
	jmp L_191181
.p2align 0x4
L_458743:
L_191185:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_458753
L_191186:
	cmpq $0x7FFFFFFF,%rdx
	ja L_191219
L_191187:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_191188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191188
.p2align 0x4
.long 0x283C
L_191188:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_191189:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1987:
	cmpq 0x40(%rbp),%r15
	jnl L_458745
L_191230:
	cmpq $0x1,%r14
	je L_458744
L_191231:
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movq %r15,%r8
	movq %r15,%rsp
	movq 0x0(%r14),%rsi
	movq 0x8(%r14),%r14
	movq 0x0(%rsi),%rdi
	movq 0x8(%rsi),%rdx
	movq 0x10(%rsi),%rcx
	movq 0x18(%rsi),%rbx
	movq 0x20(%rsi),%rax
	movq %r14,(localObjptr+0x0)(%rip)
	movq 0x28(%rsi),%r14
	movq 0x48(%rbp),%rsi
	movq %r12,(gcState+0x0)(%rip)
	movq %rsi,%r12
	shrq $0x8,%r12
	movq %r15,(localWord64+0x68)(%rip)
	movq (gcState+0x3C8)(%rip),%r15
	movb $0x1,0x0(%r15,%r12,1)
	imulq $0x30,%r13
	movq %rdi,0x0(%rsi,%r13,1)
	movq %rsi,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r15,%r13,1)
	imulq $0x30,%r11
	movq %rdx,0x8(%rsi,%r11,1)
	movq %rsi,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r15,%r13,1)
	imulq $0x30,%r10
	movq %rcx,0x10(%rsi,%r10,1)
	movq %rsi,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r15,%r13,1)
	imulq $0x30,%r9
	movq %rbx,0x18(%rsi,%r9,1)
	movq %rsi,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r15,%r13,1)
	imulq $0x30,%r8
	movq %rax,0x20(%rsi,%r8,1)
	movq %rsi,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r15,%r13,1)
	imulq $0x30,%rsp
	movq %rsp,%rax
	movq %r14,0x28(%rsi,%rax,1)
	movq (localWord64+0x68)(%rip),%r15
	incq %r15
	movq (gcState+0x0)(%rip),%r12
	movq (localObjptr+0x0)(%rip),%r14
	jmp loop_1987
.p2align 0x4
L_458744:
L_191232:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458745:
L_191190:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191191
L_191228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_191229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191229
.p2align 0x4
.long 0x103E
L_191229:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_191191:
	movq 0x48(%rbp),%r15
	movq $0xC8B,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	movq %r11,0x38(%rbp)
	cmpq %r11,%r14
	je L_458746
L_191192:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458746:
L_191193:
	movq $0x4361,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	cmpl $0x0,0x24(%rbp)
	jl L_458750
L_191194:
	movl $0x0,0x58(%rbp)
loop_1988:
	movl 0x24(%rbp),%r15d
	cmpl %r15d,0x58(%rbp)
	jl L_458749
L_191195:
	movq 0x38(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_458748
L_191196:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_191197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191197
.p2align 0x4
.long 0x283D
L_191197:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1989:
	cmpq 0x38(%rbp),%r15
	jnl L_458747
L_191217:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_1989
.p2align 0x4
L_458747:
L_191198:
	movq %r14,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x58,%rbp
	leaq (L_191199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_12
.p2align 0x4
L_458748:
L_191219:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458749:
L_191220:
	movslq 0x58(%rbp),%r15
	imulq $0x30,%r15
	movq 0x48(%rbp),%r14
	movq 0x18(%r14,%r15,1),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x60(%rbp)
	movq %r11,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_191221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_458750:
L_191227:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458753:
L_191234:
	movq (globalObjptr+0x74E8)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_191189
.p2align 0x4
L_458754:
L_191182:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458755:
L_191235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_191236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191236
.p2align 0x4
.long 0x45B
L_191236:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_191180
.p2align 0x4
.long 0x283E
L_191199:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191200
L_191215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_191216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191216
.p2align 0x4
.long 0x2840
L_191216:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_191200:
	movl $0x0,0x30(%rbp)
loop_1990:
	movl 0x24(%rbp),%r15d
	cmpl %r15d,0x30(%rbp)
	jl L_458760
L_191201:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_458759
L_191202:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_191203:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_458758
.p2align 0x4,,0x7
L_191204:
	movq $0x23A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_458757
L_191205:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_191203
.p2align 0x4
L_458757:
L_191206:
	movq $0x77F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x18(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458758:
L_191207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_191208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191208
.p2align 0x4
.long 0x605
L_191208:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_191204
.p2align 0x4
L_458759:
L_191209:
	movq (globalObjptr+0x74F0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458760:
L_191210:
	movslq 0x30(%rbp),%r15
	imulq $0x30,%r15
	movq 0x48(%rbp),%r14
	movq 0x18(%r14,%r15,1),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x60(%rbp)
	movq $0x3DC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_191211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
.long 0x2841
L_191221:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191222
L_191225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_191226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191226
.p2align 0x4
.long 0x2842
L_191226:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_191222:
	movq 0x68(%rbp),%r15
	andq $0x1,%r15
	jnz L_458762
L_191223:
	movq $0x1955,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x58(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	incl %r14d
	movl %r14d,0x58(%rbp)
	jmp loop_1988
.p2align 0x4
L_458762:
L_191224:
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xC1D
L_191211:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191212
L_191213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_191214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191214
.p2align 0x4
.long 0x283F
L_191214:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_191212:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	incl 0x30(%rbp)
	jmp loop_1990
.text
.p2align 0x4
.globl typeCheck_0
.hidden typeCheck_0
typeCheck_0:
L_191237:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_191403
L_191238:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_458769
L_191239:
	movq 0x8(%rbp),%r15
	movq 0x108(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x100(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xF8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0xF0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xE8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xE0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0xD8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0xD0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0xC8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0xC0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0xB8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0xB0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x138(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x140(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x148(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_458768
L_191242:
	cmpl $0x0,%r13d
	jl L_458767
L_191243:
	movl $0x0,0x14C(%rbp)
loop_1991:
	movl 0x148(%rbp),%r14d
	cmpl %r14d,0x14C(%rbp)
	jl L_458766
L_191244:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0xD31,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq 0x38(%rbp),%r13
	movq 0x8(%r13),%r10
	movq %r10,0x28(%rbp)
	movq 0x40(%rbp),%r13
	movq 0x30(%r13),%r15
	movq 0x28(%r13),%r10
	movq 0x20(%r13),%r9
	movq 0x38(%r13),%r8
	movq 0x8(%r8),%rsp
	movq $0x3D5B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	movq $0xCDF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x148(%rbp)
	movq %r13,0x8(%r8)
	addq $0x30,%r12
	movq %rsp,0x0(%r8)
	movq %r15,0x10(%r8)
	movq %r10,0x18(%r8)
	movq %r9,0x20(%r8)
	movq $0x3D57,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0xCDF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x150(%rbp)
	movq %rsp,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r10,0x18(%r14)
	movq %r9,0x20(%r14)
	addq $0x30,%r12
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0xD31,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x158(%rbp)
	movq %r14,0x0(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq %r11,0x8(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0xD31,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x160(%rbp)
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq $0xCBD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x168(%rbp)
	addq $0x18,%r12
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0xD33,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x170(%rbp)
	movq %r14,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	cmpq $0x1,%r14
	je L_458765
L_191245:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r15
L_191246:
	movq 0x18(%r15),%r14
	movq %r14,0x188(%rbp)
	leaq L_191332(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x180(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_191247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_0
.p2align 0x4
L_458765:
L_191250:
	leaq L_191332(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x180(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x180,%rbp
	leaq (L_191251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopFunc_0
.p2align 0x4
L_458766:
L_191397:
	movslq 0x14C(%rbp),%r15
	movq 0x130(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq $0x3081,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq $0x3061,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x158(%rbp)
	leaq L_191332(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xFF18)(%rip),%r15
	movq %r15,0x168(%rbp)
	addq $0x158,%rbp
	leaq (L_191398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_1
.p2align 0x4
L_458767:
L_191402:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458768:
L_191241:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458769:
L_191403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_191404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191404
.p2align 0x4
.long 0x45C
L_191404:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_191239
.p2align 0x4
.long 0x2843
L_191247:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_191250
L_191248:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_191246
.p2align 0x4
.long 0x25
L_191332:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
L_191333:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_191334
L_191335:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xCCD,%r14
	jne L_458772
L_191336:
	movq 0x0(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x138,%rbp
	leaq (L_191337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_51
.p2align 0x4
L_458772:
L_191334:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2844
L_191251:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x140(%rbp),%r14
	cmpq $0x1,%r14
	je L_458774
L_191252:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r15
L_191253:
	movq %r15,0x188(%rbp)
	movl $0x0,0x180(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	addq $0x180,%rbp
	leaq (L_191254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopFunc_0
.p2align 0x4
L_458774:
L_191257:
	movq 0x140(%rbp),%r14
	cmpq $0x1,%r14
	je L_458775
L_191258:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
L_191259:
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x18(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	movq $0x1,0x150(%rbp)
	addq $0x150,%rbp
	leaq (L_191260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_458775:
L_191264:
	movq 0x138(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r11)
	movq $0x1,0x150(%rbp)
	movq %r14,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_191265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x2862
L_191398:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191399
L_191400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_191401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191401
.p2align 0x4
.long 0x2863
L_191401:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_191399:
	incl 0x14C(%rbp)
	jmp loop_1991
.p2align 0x4
.long 0x2854
L_191337:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x140(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191338
L_191341:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_191342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191342
.p2align 0x4
.long 0x2855
L_191342:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_191338:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x140(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x148(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_191339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x2845
L_191254:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_191257
L_191255:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_191253
.p2align 0x4
.long 0x2846
L_191260:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq $0x2,0x150(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_191261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x2848
L_191265:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq $0x2,0x150(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_191266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x2854
L_191339:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_191340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x2847
L_191261:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_191264
L_191262:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_191259
.p2align 0x4
.long 0x2848
L_191266:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191267
L_191392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_191393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191393
.p2align 0x4
.long 0x2861
L_191393:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_191267:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x148(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x47B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x150(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x158(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r15,0x8(%r11)
	movq $0x8DB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x160(%rbp)
	movq %r11,0x8(%r10)
	addq $0x30,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r10)
	movq 0x58(%rbp),%r9
	movq %r9,0x10(%r10)
	movq 0x50(%rbp),%r8
	movq %r8,0x18(%r10)
	movq 0x48(%rbp),%rsp
	movq %rsp,0x20(%r10)
	movq $0xD35,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x28(%r10)
	addq $0x78,%r12
	movq 0xB0(%rbp),%r15
	movq %r15,0x0(%r10)
	movq 0xA8(%rbp),%r15
	movq %r15,0x8(%r10)
	movq 0xA0(%rbp),%r15
	movq %r15,0x10(%r10)
	movq 0x98(%rbp),%r15
	movq %r15,0x18(%r10)
	movq %r13,0x20(%r10)
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%r10)
	movq 0x88(%rbp),%r15
	movq %r15,0x38(%r10)
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%r10)
	movq 0x130(%rbp),%r15
	movq %r15,0x48(%r10)
	movq 0x78(%rbp),%r13
	movq %r13,0x50(%r10)
	movq 0x70(%rbp),%r13
	movq %r13,0x58(%r10)
	movq 0x68(%rbp),%rsi
	movq %rsi,0x60(%r10)
	movq 0x60(%rbp),%rsi
	movq %rsi,0x68(%r10)
	movq $0xD37,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x168(%rbp)
	movq %r10,0x8(%rdi)
	addq $0x30,%r12
	movq %r11,0x0(%rdi)
	movq %r9,0x10(%rdi)
	movq %r8,0x18(%rdi)
	movq %rsp,0x20(%rdi)
	movq $0xD39,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x170(%rbp)
	addq $0x60,%r12
	movq 0xE0(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r14,0x8(%r11)
	movq 0xD8(%rbp),%r14
	movq %r14,0x10(%r11)
	movq %r13,0x18(%r11)
	movq 0xD0(%rbp),%r14
	movq %r14,0x20(%r11)
	movq %r15,0x28(%r11)
	movq 0xC8(%rbp),%r15
	movq %r15,0x30(%r11)
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%r11)
	movq 0xB8(%rbp),%r15
	movq %r15,0x40(%r11)
	movq %rsi,0x48(%r11)
	movq %rdi,0x50(%r11)
	movq 0x140(%rbp),%r15
	cmpq $0x1,%r15
	je L_191289
L_191268:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
.p2align 0x4,,0x7
L_191269:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_458793
.p2align 0x4,,0x7
L_191270:
	movq 0x70(%rbp),%r13
	movq 0x18(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x78(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_458792
L_191272:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_458791
L_191273:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_191275:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_191276
L_191381:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD6D,%r13
	jne L_191276
L_191382:
	movq 0x0(%r14),%r13
	cmpq %r13,0x158(%rbp)
	je L_458786
L_191276:
	incl %ecx
	movl %ecx,0x80(%rbp)
	jo L_458785
L_191278:
	cmpq $0x1,%r15
	je L_458780
L_191279:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_191275
.p2align 0x4
L_458780:
L_191280:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_458784
.p2align 0x4,,0x7
L_191281:
	movl 0x80(%rbp),%ecx
L_191282:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_458783
L_191284:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_191286
L_191378:
	movl %ecx,0x0(%r15)
L_191286:
	movq $0x1ADB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x158(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_458781
L_191287:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	jmp L_191269
.p2align 0x4
L_458781:
L_191289:
	movq 0x138(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x3351,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x180(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_191290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_458783:
L_191283:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1080)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458784:
L_191379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_191380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191380
.p2align 0x4
.long 0x285F
L_191380:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	jmp L_191281
.p2align 0x4
L_458785:
L_191277:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458786:
L_191384:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_191283
L_191385:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_458787
L_191387:
	movl %ecx,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458787:
L_191386:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (globalObjptr+0x578)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458791:
L_191388:
	xorl %ecx,%ecx
	jmp L_191282
.p2align 0x4
L_458792:
L_191271:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1088)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458793:
L_191389:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_191390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191390
.p2align 0x4
.long 0x2860
L_191390:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	jmp L_191270
.p2align 0x4
.long 0x473
L_191340:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptr+0x51B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2849
L_191290:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191291
L_191376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_191377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191377
.p2align 0x4
.long 0x285E
L_191377:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_191291:
	movq $0x35DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x20,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x180(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_191292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x284A
L_191292:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq $0x1,0x180(%rbp)
	movl $0x0,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_191293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x284A
L_191293:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_191294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_105
.p2align 0x4
.long 0x284B
L_191294:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191295
L_191374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_191375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191375
.p2align 0x4
.long 0x285D
L_191375:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_191295:
	movq 0x68(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movq %r13,0xA0(%rbp)
	movl %r13d,%r15d
	movl %r15d,0xA8(%rbp)
	movslq %r15d,%r11
	cmpq %r13,%r11
	jne L_191241
L_191297:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_191241
L_191299:
	cmpl %r11d,%r15d
	jne L_191301
L_191363:
	movl $0x0,0x68(%rbp)
loop_1993:
	movl 0x68(%rbp),%r15d
	cmpl %r15d,0xA8(%rbp)
	je L_458798
L_191364:
	movslq %r15d,%r14
	cmpq 0xA0(%rbp),%r14
	jnb L_458797
L_191366:
	movq 0x90(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x188(%rbp)
	movq 0x98(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x180(%rbp)
	addq $0x180,%rbp
	leaq (not_48+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1593
.p2align 0x4
L_458797:
L_191349:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458798:
L_191301:
	movq $0xD3B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x78,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0xF0(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0xE8(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x168(%rbp),%r13
	movq %r13,0x20(%r15)
	movq %r14,0x28(%r15)
	movq 0x70(%rbp),%r11
	movq %r11,0x30(%r15)
	movq 0x78(%rbp),%r11
	movq %r11,0x38(%r15)
	movq 0x30(%rbp),%r11
	movq %r11,0x40(%r15)
	movq 0x158(%rbp),%r11
	movq %r11,0x48(%r15)
	movq 0xE0(%rbp),%r11
	movq %r11,0x50(%r15)
	movq 0x60(%rbp),%r11
	movq %r11,0x58(%r15)
	movq %r14,0x60(%r15)
	movq %r13,0x68(%r15)
	movq $0xD3D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x60,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x110(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x108(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x20(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x28(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x30(%r14)
	movq 0x170(%rbp),%r13
	movq %r13,0x38(%r14)
	movq %r15,0x40(%r14)
	movq 0x100(%rbp),%r15
	movq %r15,0x48(%r14)
	movq 0xF8(%rbp),%r15
	movq %r15,0x50(%r14)
	movq $0x35C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x180(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_191302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x285B
not_48:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191367
L_191371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_191372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191372
.p2align 0x4
.long 0x285C
L_191372:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_191367:
	movl 0x6C(%rbp),%r15d
	testl %r15d,%r15d
	jz L_191301
L_191369:
	movl 0x68(%rbp),%r15d
	incl %r15d
	jo L_191277
L_191370:
	movl %r15d,0x68(%rbp)
	jmp loop_1993
.p2align 0x4
.long 0x284C
L_191302:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191303
L_191361:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_191362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191362
.p2align 0x4
.long 0x285A
L_191362:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_191303:
	movq 0x140(%rbp),%r14
	cmpq $0x1,%r14
	je L_458806
L_191304:
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r15
L_191305:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_191306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_458806:
L_191321:
	movq $0x3087,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x158(%rbp)
	movq $0x3067,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x118(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x120(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x150(%rbp)
	movq (globalObjptr+0xFF10)(%rip),%r15
	movq %r15,0x160(%rbp)
	addq $0x150,%rbp
	leaq (L_191322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_1
.p2align 0x4
.long 0x284D
L_191306:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_191307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x2850
L_191322:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x140(%rbp),%r14
	cmpq $0x1,%r14
	je L_458808
L_191323:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
L_191324:
	movq 0x20(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x18(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	movq $0x1,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_191325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_458808:
L_191329:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x1,0x138(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_191330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x284D
L_191307:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq $0x1,0x180(%rbp)
	movl $0x0,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_191308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x2851
L_191325:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq $0x2,0x138(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_191326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x2853
L_191330:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq $0x2,0x138(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_191331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x284D
L_191308:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_191309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_105
.p2align 0x4
.long 0x2852
L_191326:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_191329
L_191327:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_191324
.p2align 0x4
.long 0x2854
L_191331:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x284E
L_191309:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191310
L_191358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_191359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191359
.p2align 0x4
.long 0x2859
L_191359:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_191310:
	movq 0x70(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movq %r13,0xB0(%rbp)
	movl %r13d,%r15d
	movl %r15d,0xB8(%rbp)
	movslq %r15d,%r11
	cmpq %r13,%r11
	jne L_191241
L_191312:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_191241
L_191314:
	cmpl %r15d,%r11d
	jne L_191316
L_191346:
	movl $0x0,0x70(%rbp)
loop_1992:
	movl 0x70(%rbp),%r15d
	cmpl 0xB8(%rbp),%r15d
	je L_458811
L_191347:
	movslq %r15d,%r14
	cmpq 0xB0(%rbp),%r14
	jnb L_191349
L_191350:
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x188(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x180(%rbp)
	addq $0x180,%rbp
	leaq (not_47+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1593
.p2align 0x4
L_458811:
L_191316:
	movq $0xD3B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x78,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0xF0(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0xE8(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x168(%rbp),%r13
	movq %r13,0x20(%r15)
	movq %r14,0x28(%r15)
	movq 0x78(%rbp),%r11
	movq %r11,0x30(%r15)
	movq 0x90(%rbp),%r11
	movq %r11,0x38(%r15)
	movq 0x30(%rbp),%r11
	movq %r11,0x40(%r15)
	movq 0x158(%rbp),%r11
	movq %r11,0x48(%r15)
	movq 0xE0(%rbp),%r11
	movq %r11,0x50(%r15)
	movq 0x60(%rbp),%r11
	movq %r11,0x58(%r15)
	movq %r14,0x60(%r15)
	movq %r13,0x68(%r15)
	movq $0xD3D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x60,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x110(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x108(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x20(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x28(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x30(%r14)
	movq 0x170(%rbp),%r13
	movq %r13,0x38(%r14)
	movq %r15,0x40(%r14)
	movq 0x100(%rbp),%r15
	movq %r15,0x48(%r14)
	movq 0xF8(%rbp),%r15
	movq %r15,0x50(%r14)
	movq $0x35C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x180(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_191317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x2857
not_47:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movl 0x180(%rbp),%r15d
	movl %r15d,0x74(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191351
L_191355:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_191356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191356
.p2align 0x4
.long 0x2858
L_191356:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_191351:
	movl 0x74(%rbp),%r15d
	testl %r15d,%r15d
	jz L_191316
L_191353:
	movl 0x70(%rbp),%r15d
	incl %r15d
	jo L_191277
L_191354:
	movl %r15d,0x70(%rbp)
	jmp loop_1992
.p2align 0x4
.long 0x284F
L_191317:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191318
L_191344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_191345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191345
.p2align 0x4
.long 0x2856
L_191345:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_191318:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_191321
L_191319:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_191305
.text
.p2align 0x4
.globl loopFunc_0
.hidden loopFunc_0
loopFunc_0:
L_191405:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_191546
L_191406:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_458821
L_191407:
	movq $0xD9F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x38,%r12
	movl 0x0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x48(%rbp),%r11
	movq %r11,0x18(%r15)
	movq 0x50(%rbp),%r11
	movq %r11,0x20(%r15)
	movq 0x58(%rbp),%r11
	movq %r11,0x28(%r15)
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r11
	movq %r11,0x68(%rbp)
	movq 0x28(%r15),%r11
	movq %r11,0x70(%rbp)
	movq $0x3355,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x80(%rbp)
	movq %r11,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_191408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_458821:
L_191546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_191547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191547
.p2align 0x4
.long 0x9E0
L_191547:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_191407
.p2align 0x4
.long 0x2864
L_191408:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191409
L_191544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_191545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191545
.p2align 0x4
.long 0x2870
L_191545:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_191409:
	movq $0x35C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_191410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x2865
L_191410:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191411
L_191542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_191543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191543
.p2align 0x4
.long 0x286F
L_191543:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_191411:
	movq $0x35DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_191412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x2866
L_191412:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191413
L_191540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_191541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191541
.p2align 0x4
.long 0x286E
L_191541:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_191413:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x9C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xCBF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x35C5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_191414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x27B5
L_191414:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191415
L_191538:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_191539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191539
.p2align 0x4
.long 0x286D
L_191539:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_191415:
	movq $0x35DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_191416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x27B5
L_191416:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq %r14,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_191417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x2867
L_191417:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191418
L_191536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_191537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191537
.p2align 0x4
.long 0x1984
L_191537:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_191418:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_458827
L_191419:
	movq %r15,0x8(%rbp)
L_191420:
	movq 0x8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_191421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp dominators_0
.p2align 0x4
L_458827:
L_191535:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r11,0x8(%r14)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	movq %r11,0x8(%rbp)
	jmp L_191420
.p2align 0x4
.long 0x2868
L_191421:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191422
L_191533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_191534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191534
.p2align 0x4
.long 0x286C
L_191534:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_191422:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_458829
L_191423:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
L_191424:
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_191425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_20
.p2align 0x4
L_458829:
L_191496:
	movq 0x8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_191497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp treeAt_0
.p2align 0x4
.long 0x194A
L_191425:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191426
L_191530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_191531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191531
.p2align 0x4
.long 0x2335
L_191531:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_191426:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_458859
	cmpq $0x2,%r13
	je L_458857
L_191427:
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_191428
L_191429:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_458855
L_191430:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x4(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_191432:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_191433
L_191513:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD6C,%r13
	jne L_191433
L_191514:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x38(%rbp)
	je L_458849
L_191433:
	movl 0x4(%rbp),%r13d
	incl %r13d
	movl %r13d,0x50(%rbp)
	jo L_191434
L_191435:
	cmpq $0x1,%r15
	je L_458831
L_191436:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x4(%rbp)
	jmp L_191432
.p2align 0x4
L_458831:
L_191437:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191438
L_191511:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_191512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191512
.p2align 0x4
.long 0x1F75
L_191512:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_191438:
	movl 0x50(%rbp),%ecx
L_191439:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_191440
L_191441:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_191443
L_191510:
	movl %ecx,0x0(%r15)
L_191443:
	movq $0x9C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_458844
L_191444:
	movq %r15,0x0(%r13)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_458843
L_191445:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x4(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_191447:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_191448
L_191485:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xC9E,%r13
	jne L_191448
L_191486:
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x40(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_458836
L_191448:
	movl 0x4(%rbp),%r13d
	incl %r13d
	jo L_458835
L_191449:
	cmpq $0x1,%r15
	je L_458832
L_191450:
	movl %r13d,0x4(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_191447
.p2align 0x4
L_458832:
	movl %r13d,%ecx
L_191452:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_458834
L_191453:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_191455
L_191484:
	movl %ecx,0x0(%r15)
L_191455:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_191456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_458834:
L_191440:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458835:
L_191434:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458836:
L_191488:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191489
L_191507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_191508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191508
.p2align 0x4
.long 0xC17
L_191508:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_191489:
	movl 0x4(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_191440
L_191490:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_458838
L_191491:
	movq 0x78(%rbp),%r15
L_191492:
	movq $0x134D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1AD9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
L_191493:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_191496
L_191494:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_191424
.p2align 0x4
L_458838:
L_191506:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x4(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x78(%rbp),%r15
	jmp L_191492
.p2align 0x4
L_458843:
L_191509:
	xorl %ecx,%ecx
	jmp L_191452
.p2align 0x4
L_458844:
L_191428:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458849:
L_191516:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191517
L_191521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_191522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191522
.p2align 0x4
.long 0x2335
L_191522:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_191517:
	movl 0x4(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_191440
L_191518:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_458850
L_191519:
	movq 0x50(%rbp),%r15
	jmp L_191493
.p2align 0x4
L_458850:
L_191520:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x4(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x50(%rbp),%r15
	jmp L_191493
.p2align 0x4
L_458855:
L_191523:
	xorl %ecx,%ecx
	jmp L_191439
.p2align 0x4
L_458857:
L_191527:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_191496
L_191528:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_191424
.p2align 0x4
L_458859:
L_191524:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_191496
L_191525:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_191424
.p2align 0x4
.long 0x2869
L_191497:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x80(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x80,%rbp
	leaq (L_191498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3902
.p2align 0x4
.long 0x1
L_191456:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_191457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1DE5
L_191498:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191499
L_191504:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_191505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191505
.p2align 0x4
.long 0x1DCF
L_191505:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_191499:
	movq $0x35C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_191500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x4AF
L_191457:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_191458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x286A
L_191500:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191501
L_191502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_191503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191503
.p2align 0x4
.long 0x286B
L_191503:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_191501:
	movq $0x335B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x5AF
L_191458:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_191459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_191459:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191460
L_191482:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_191483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191483
.p2align 0x4
.long 0x4AE
L_191483:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_191460:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_191461:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_191434
L_191462:
	cmpq $0x1,%r14
	je L_458864
L_191463:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_191461
.p2align 0x4
L_458864:
L_191464:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191465
L_191480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_191481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191481
.p2align 0x4
.long 0x4E6
L_191481:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_191465:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_458865
L_191466:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_279:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_458865:
L_191479:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_279
.p2align 0x4
.long 0x1
rev_277:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_458871
L_191467:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_191468:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_458870
.p2align 0x4,,0x7
L_191469:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_458869
L_191470:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_191468
.p2align 0x4
L_458869:
L_191472:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_458870:
L_191476:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_191477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191477
.p2align 0x4
.long 0x45B
L_191477:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_191469
.p2align 0x4
L_458871:
L_191478:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_191472
.p2align 0x4
.long 0x1
bug_472:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191473
L_191474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_191475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191475
.p2align 0x4
.long 0x451
L_191475:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_191473:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl dominators_0
.hidden dominators_0
dominators_0:
L_191548:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_191658
L_191549:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_458878
L_191550:
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_458877
L_191551:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_191552:
	incl %ecx
	jo L_458876
L_191554:
	cmpq $0x1,%r15
	je L_458873
L_191555:
	movq 0x8(%r15),%r15
	jmp L_191552
.p2align 0x4
L_458873:
L_191556:
L_191557:
	movslq %ecx,%rdx
	movq %rdx,0x8(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_458875
L_191558:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_191559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191559
.p2align 0x4
.long 0x798
L_191559:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1994:
	cmpq 0x8(%rbp),%r15
	jnl L_458874
L_191655:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1994
.p2align 0x4
L_458874:
L_191560:
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl $0x0,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_191561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp dfs_0
.p2align 0x4
L_458875:
L_191654:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458876:
L_191553:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458877:
L_191657:
	xorl %ecx,%ecx
	jmp L_191557
.p2align 0x4
L_458878:
L_191658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_191659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191659
.p2align 0x4
.long 0x45F
L_191659:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_191550
.p2align 0x4
.long 0x65C
L_191561:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movslq %r15d,%rdx
	movq %rdx,0x30(%rbp)
	movl %r15d,0x28(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_191654
L_191562:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_191563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191563
.p2align 0x4
.long 0x2871
L_191563:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1995:
	cmpq 0x30(%rbp),%r15
	jnl L_458880
L_191652:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1995
.p2align 0x4
L_458880:
L_191564:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191565
L_191650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_191651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191651
.p2align 0x4
.long 0x5DD
L_191651:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_191565:
	movq $0x3D05,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x48(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movl $0x0,0x54(%rbp)
	addq $0x48,%rbp
	leaq (L_191566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x2872
L_191566:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191567
L_191648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_191649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191649
.p2align 0x4
.long 0x2876
L_191649:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_191567:
	movq 0x8(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x18(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	je L_458883
L_191568:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458883:
L_191569:
	cmpl $0x0,0x18(%rbp)
	jl L_458914
L_191570:
	movl $0x0,0x8(%rbp)
loop_1996:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x8(%rbp)
	jl L_458913
L_191571:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	movq 0x30(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_191572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191572
.p2align 0x4
.long 0x2873
L_191572:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1997:
	cmpq 0x30(%rbp),%r15
	jnl L_458884
L_191641:
	movq 0x8(%rbp),%r14
	movl $0xFFFFFFFE,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_1997
.p2align 0x4
L_458884:
L_191573:
	movl 0x28(%rbp),%r15d
	decl %r15d
	movl %r15d,0x10(%rbp)
	jo L_191553
L_191574:
	movslq %r15d,%r14
	cmpq 0x30(%rbp),%r14
	jnb L_191576
L_191577:
	movq 0x8(%rbp),%r13
	movl %r15d,0x0(%r13,%r14,4)
.p2align 0x4,,0x7
loop_1998:
	movl 0x10(%rbp),%ecx
	decl %ecx
	jo L_191553
L_191578:
	xorl %r15d,%r15d
	movl %ecx,%ebx
	movl %r15d,%ecx
.p2align 0x4,,0x7
loop_1999:
	cmpl $0x0,%ebx
	jl L_458896
L_191579:
	movl %ebx,%r13d
	decl %r13d
	movslq %ebx,%r15
	cmpq 0x30(%rbp),%r15
	jnb L_191576
L_191581:
	movq 0x38(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r14
	cmpq $0x1,%r14
	je L_458894
L_191582:
	movq 0x8(%r14),%r11
	movl 0x0(%r14),%r10d
	cmpq $0x1,%r11
	je L_458893
L_191583:
	movq 0x8(%r11),%r14
	movl 0x0(%r11),%ebx
	xchgl %r10d,%ecx
	movl %r13d,(localWord32+0x8)(%rip)
	movl %r10d,(localWord32+0x0)(%rip)
.p2align 0x4,,0x7
L_191584:
	movslq %ebx,%r13
	cmpq 0x30(%rbp),%r13
	jnb L_191576
L_191586:
	movq 0x8(%rbp),%r11
	cmpl $0xFFFFFFFE,0x0(%r11,%r13,4)
	je L_458890
	movq %r15,(localWord64+0x0)(%rip)
.p2align 0x4,,0x7
loop_2000:
	cmpl %ecx,%ebx
	je L_458887
	movq %r14,(localObjptr+0x0)(%rip)
.p2align 0x4,,0x7
loop_2001:
	cmpl %ebx,%ecx
	jnl loop_3903
L_191594:
	movslq %ecx,%r15
	cmpq 0x30(%rbp),%r15
	jnb L_458885
L_191596:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14,%r15,4),%ecx
	jmp loop_2001
.p2align 0x4
L_458885:
L_191576:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
loop_3903:
.p2align 0x4,,0x7
loop_2002:
	cmpl %ecx,%ebx
	jnl loop_3904
L_191591:
	movslq %ebx,%r15
	cmpq 0x30(%rbp),%r15
	jnb L_191576
L_191593:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14,%r15,4),%ebx
	jmp loop_2002
.p2align 0x4
loop_3904:
	movq (localObjptr+0x0)(%rip),%r14
	jmp loop_2000
.p2align 0x4
L_458887:
L_191597:
	cmpq $0x1,%r14
	je L_458888
L_191598:
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r14
	movq (localWord64+0x0)(%rip),%r15
	jmp L_191584
.p2align 0x4
L_458888:
L_191599:
	movl %ecx,%ebx
	movq (localWord64+0x0)(%rip),%r15
	movl (localWord32+0x8)(%rip),%ecx
L_191600:
	movq 0x8(%rbp),%r14
	cmpl 0x0(%r14,%r15,4),%ebx
	je L_458889
L_191601:
	movl %ebx,0x0(%r14,%r15,4)
	movl $0x1,%r15d
	movl %ecx,%ebx
	movl %r15d,%ecx
	jmp loop_1999
.p2align 0x4
L_458889:
L_191602:
	movl %ecx,%ebx
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_1999
.p2align 0x4
L_458890:
L_191603:
	cmpq $0x1,%r14
	je L_458891
L_191604:
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r14
	jmp L_191584
.p2align 0x4
L_458891:
L_191605:
	movl %ecx,%ebx
	movl (localWord32+0x8)(%rip),%ecx
	jmp L_191600
.p2align 0x4
L_458893:
	xchgl %r13d,%ecx
	movl %r10d,%ebx
	movl %r13d,(localWord32+0x0)(%rip)
	jmp L_191600
.p2align 0x4
L_458894:
L_191607:
	movq (globalObjptr+0x1418)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458896:
L_191608:
	testl %ecx,%ecx
	jnz loop_1998
L_191609:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191610
L_191638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_191639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191639
.p2align 0x4
.long 0x52C
L_191639:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_191610:
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x89,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x28(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r13,0x8(%r11)
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_458908
L_191612:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_458907
L_191613:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_191615:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_191616
L_191630:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCC9,%r13
	jne L_191616
L_191631:
	movq 0x0(%r14),%r13
	cmpq %r13,0x18(%rbp)
	je L_458902
L_191616:
	incl %ecx
	movl %ecx,0x14(%rbp)
	jo L_191553
L_191617:
	cmpq $0x1,%r15
	je L_458897
L_191618:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_191615
.p2align 0x4
L_458897:
L_191619:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191620
L_191628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_191629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191629
.p2align 0x4
.long 0xB63
L_191629:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_191620:
	movl 0x14(%rbp),%ecx
L_191621:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_458899
L_191623:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_191625
L_191627:
	movl %ecx,0x0(%r15)
L_191625:
	movq $0x1993,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x3D07,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x28(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl $0x0,0x34(%rbp)
	addq $0x28,%rbp
	leaq (L_191626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_458899:
L_191622:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458902:
L_191633:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_191622
L_191634:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_458903
L_191636:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458903:
L_191635:
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458907:
L_191637:
	xorl %ecx,%ecx
	jmp L_191621
.p2align 0x4
L_458908:
L_191611:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458913:
L_191642:
	movslq 0x8(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x58(%rbp)
	movq $0x3DCB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_191643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_458914:
L_191647:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_191626:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2874
L_191643:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191644
L_191645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_191646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191646
.p2align 0x4
.long 0x2875
L_191646:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_191644:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	incl 0x8(%rbp)
	jmp loop_1996
.text
.p2align 0x4
.globl dfs_0
.hidden dfs_0
dfs_0:
L_191660:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_191768
L_191661:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_458961
L_191662:
	movq 0x18(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_191663
L_191664:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_458959
L_191665:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0xC(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_191667:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_191668
L_191756:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCAE,%r13
	jne L_191668
L_191757:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x28(%rbp)
	je L_458953
L_191668:
	movl 0xC(%rbp),%r13d
	incl %r13d
	movl %r13d,0x38(%rbp)
	jo L_191669
L_191670:
	cmpq $0x1,%r15
	je L_458917
L_191671:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0xC(%rbp)
	jmp L_191667
.p2align 0x4
L_458917:
L_191672:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191673
L_191754:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_191755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191755
.p2align 0x4
.long 0x2879
L_191755:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_191673:
	movl 0x38(%rbp),%ecx
L_191674:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_191675
L_191676:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_191678
L_191753:
	movl %ecx,0x0(%r15)
L_191678:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x195D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_191679:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_191699
L_191680:
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movl 0x8(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x8(%rbp)
.p2align 0x4,,0x7
L_191681:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_458947
.p2align 0x4,,0x7
L_191682:
	movq 0x38(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r9
	movq %r9,0x50(%rbp)
	movq 0x0(%r11),%r14
	movq 0x8(%r10),%r11
	movq %r11,0x58(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_191663
L_191683:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_458945
L_191684:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x38(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_191686:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_458944
L_191739:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCAE,%r11
	jne L_458943
L_191740:
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_458939
L_191687:
	movl 0x38(%rbp),%r11d
	incl %r11d
	movl %r11d,0x3C(%rbp)
	jo L_191669
L_191688:
	cmpq $0x1,%r15
	je L_458918
L_191689:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x38(%rbp)
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_191686
.p2align 0x4
L_458918:
L_191690:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_458937
.p2align 0x4,,0x7
L_191691:
	movl 0x3C(%rbp),%ecx
L_191692:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_191675
L_191693:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_191695
L_191736:
	movl %ecx,0x0(%r15)
L_191695:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0xFFFFFFFE,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x195D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_602:
	cmpl $0xFFFFFFFE,0x0(%r15)
	je L_458934
L_191696:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_458919
L_191697:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_191681
.p2align 0x4
L_458919:
L_191698:
	movl 0x40(%rbp),%r14d
	movl %r14d,0x8(%rbp)
L_191699:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_458933
L_191700:
	movq %r15,0x0(%r13)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_458932
L_191701:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_191703:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_191704
L_191720:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCAE,%r13
	jne L_191704
L_191721:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x28(%rbp)
	je L_458927
L_191704:
	incl %ecx
	movl %ecx,0xC(%rbp)
	jo L_191669
L_191705:
	cmpq $0x1,%r15
	je L_458920
L_191706:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_191703
.p2align 0x4
L_458920:
L_191707:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191708
L_191718:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_191719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191719
.p2align 0x4
.long 0x2877
L_191719:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_191708:
	movl 0xC(%rbp),%ecx
L_191709:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_458924
L_191710:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_191712
L_191717:
	movl %ecx,0x0(%r15)
L_191712:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x195D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_191713:
	movl 0x8(%rbp),%r15d
	movslq %r15d,%r14
	movq 0x10(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_458922
L_191715:
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13,%r14,8)
	incl %r15d
	jo L_458921
L_191716:
	movl %r15d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458921:
L_191669:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458922:
L_191714:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458924:
L_191675:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458927:
L_191723:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_191675
L_191724:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_458928
L_191727:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_191726:
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	jmp L_191713
.p2align 0x4
L_458928:
L_191725:
	movq %r13,%r15
	jmp L_191726
.p2align 0x4
L_458932:
L_191728:
	xorl %ecx,%ecx
	jmp L_191709
.p2align 0x4
L_458933:
L_191663:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458934:
L_191729:
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0x40(%rbp),%r15d
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_191730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp dfs_0
.p2align 0x4
L_458937:
L_191737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_191738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191738
.p2align 0x4
.long 0x2527
L_191738:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_191691
.p2align 0x4
L_458939:
L_191742:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_458942
.p2align 0x4,,0x7
L_191743:
	movl 0x38(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_191675
L_191744:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_458940
L_191745:
	movq 0x60(%rbp),%r15
	jmp x_602
.p2align 0x4
L_458940:
L_191746:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x38(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x60(%rbp),%r15
	jmp x_602
.p2align 0x4
L_458942:
L_191747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_191748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191748
.p2align 0x4
.long 0x2878
L_191748:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_191743
.p2align 0x4
L_458943:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_191687
.p2align 0x4
L_458944:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_191687
.p2align 0x4
L_458945:
L_191749:
	xorl %ecx,%ecx
	jmp L_191692
.p2align 0x4
L_458947:
L_191750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_191751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191751
.p2align 0x4
.long 0x795
L_191751:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_191682
.p2align 0x4
L_458953:
L_191759:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191760
L_191765:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_191766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191766
.p2align 0x4
.long 0x1EE2
L_191766:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_191760:
	movl 0xC(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_191675
L_191761:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_458954
L_191762:
	movq 0x38(%rbp),%r15
L_191763:
	movl $0xFFFFFFFF,0x0(%r15)
	jmp L_191679
.p2align 0x4
L_458954:
L_191764:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0xC(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp L_191763
.p2align 0x4
L_458959:
L_191767:
	xorl %ecx,%ecx
	jmp L_191674
.p2align 0x4
L_458961:
L_191768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_191769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191769
.p2align 0x4
.long 0x798
L_191769:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_191662
.p2align 0x4
.long 0x655
L_191730:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191731
L_191734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_191735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191735
.p2align 0x4
.long 0x634
L_191735:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_191731:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_458963
L_191732:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_191681
.p2align 0x4
L_458963:
L_191733:
	movl 0x38(%rbp),%r14d
	movl %r14d,0x8(%rbp)
	jmp L_191699
.text
.p2align 0x4
.globl treeAt_0
.hidden treeAt_0
treeAt_0:
L_191770:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_191884
L_191771:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_458999
L_191772:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_191773
L_191774:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_458997
L_191775:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x20(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_191777:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_191778
L_191873:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD6C,%r13
	jne L_191778
L_191874:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_458991
L_191778:
	movl 0x20(%rbp),%r13d
	incl %r13d
	movl %r13d,0x24(%rbp)
	jo L_191779
L_191780:
	cmpq $0x1,%r15
	je L_458965
L_191781:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x20(%rbp)
	jmp L_191777
.p2align 0x4
L_458965:
L_191782:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191783
L_191871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_191872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191872
.p2align 0x4
.long 0x4E1
L_191872:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_191783:
	movl 0x24(%rbp),%ecx
L_191784:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_191785
L_191786:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_191788
L_191870:
	movl %ecx,0x0(%r15)
L_191788:
	movq $0x9C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_458986
L_191789:
	movq %r15,0x0(%r13)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_458985
L_191790:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x28(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_191792:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_191793
L_191830:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xC9E,%r13
	jne L_191793
L_191831:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_458970
L_191793:
	movl 0x28(%rbp),%r13d
	incl %r13d
	jo L_458969
L_191794:
	cmpq $0x1,%r15
	je L_458966
L_191795:
	movl %r13d,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_191792
.p2align 0x4
L_458966:
	movl %r13d,%ecx
L_191797:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_458968
L_191798:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_191800
L_191829:
	movl %ecx,0x0(%r15)
L_191800:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_191801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_458968:
L_191785:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458969:
L_191779:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458970:
L_191833:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191834
L_191867:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_191868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191868
.p2align 0x4
.long 0xA27
L_191868:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_191834:
	movl 0x28(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_191785
L_191835:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_458980
L_191836:
	movq 0x30(%rbp),%r15
L_191837:
	movq $0x134D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1AD9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
L_191838:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	cmpq $0x1,%r13
	je L_458979
L_191839:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_191840:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_191779
L_191841:
	cmpq $0x1,%r15
	je L_458971
L_191842:
	movq 0x8(%r15),%r15
	jmp L_191840
.p2align 0x4
L_458971:
L_191843:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191844
L_191863:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_191864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191864
.p2align 0x4
.long 0x764
L_191864:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_191844:
	movl 0x28(%rbp),%ecx
L_191845:
	movslq %ecx,%r15
	movq %r15,0x28(%rbp)
	testq %r15,%r15
	jz L_458976
L_191846:
	cmpq $0x7FFFFFFF,%r15
	ja L_458975
L_191847:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191848
L_191859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_191860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191860
.p2align 0x4
.long 0x764
L_191860:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_191848:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15F5,%rcx
	movq 0x28(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_191849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191849
.p2align 0x4
.long 0x764
L_191849:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
L_191850:
	movq 0x20(%rbp),%r15
	movq $0x0,0x20(%rbp)
loop_2003:
	movq 0x28(%rbp),%r14
	cmpq %r14,0x20(%rbp)
	jnl L_458973
L_191852:
	cmpq $0x1,%r15
	je L_458972
L_191853:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_191854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp treeAt_0
.p2align 0x4
L_458972:
L_191858:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458973:
L_191851:
	movq 0x30(%rbp),%r15
	movq $0x2F,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x533B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458975:
L_191861:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458976:
L_191862:
	movq (globalObjptr+0x51A8)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_191850
.p2align 0x4
L_458979:
L_191865:
	xorl %ecx,%ecx
	jmp L_191845
.p2align 0x4
L_458980:
L_191866:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r15
	jmp L_191837
.p2align 0x4
L_458985:
L_191869:
	xorl %ecx,%ecx
	jmp L_191797
.p2align 0x4
L_458986:
L_191773:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_458991:
L_191876:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191877
L_191881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_191882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191882
.p2align 0x4
.long 0x463
L_191882:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_191877:
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_191785
L_191878:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_458992
L_191879:
	movq 0x28(%rbp),%r15
	jmp L_191838
.p2align 0x4
L_458992:
L_191880:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r15
	jmp L_191838
.p2align 0x4
L_458997:
L_191883:
	xorl %ecx,%ecx
	jmp L_191784
.p2align 0x4
L_458999:
L_191884:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_191885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191885
.p2align 0x4
.long 0x45B
L_191885:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_191772
.p2align 0x4
.long 0x1
L_191801:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_191802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB29
L_191854:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191855
L_191856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_191857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191857
.p2align 0x4
.long 0x287A
L_191857:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_191855:
	movq 0x30(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x20(%rbp),%r13
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x20(%rbp)
	movq 0x38(%rbp),%r15
	jmp loop_2003
.p2align 0x4
.long 0x4AF
L_191802:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_191803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_191803:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_191804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_191804:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191805
L_191827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_191828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191828
.p2align 0x4
.long 0x4AE
L_191828:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_191805:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_191806:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_191779
L_191807:
	cmpq $0x1,%r14
	je L_459002
L_191808:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_191806
.p2align 0x4
L_459002:
L_191809:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191810
L_191825:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_191826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191826
.p2align 0x4
.long 0x4E6
L_191826:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_191810:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_459003
L_191811:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_280:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_459003:
L_191824:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_280
.p2align 0x4
.long 0x1
rev_278:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_459009
L_191812:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_191813:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459008
.p2align 0x4,,0x7
L_191814:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_459007
L_191815:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_191813
.p2align 0x4
L_459007:
L_191817:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_459008:
L_191821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_191822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191822
.p2align 0x4
.long 0x45B
L_191822:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_191814
.p2align 0x4
L_459009:
L_191823:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_191817
.p2align 0x4
.long 0x1
bug_473:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191818
L_191819:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_191820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191820
.p2align 0x4
.long 0x451
L_191820:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_191818:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3902
.hidden loop_3902
loop_3902:
L_191886:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_191925
L_191887:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459011
L_191888:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x40(%rbp)
	movq $0x3359,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq %r13,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_191889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_459011:
L_191925:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_191926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191926
.p2align 0x4
.long 0x659
L_191926:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_191888
.p2align 0x4
.long 0x8BA
L_191889:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191890
L_191923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_191924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191924
.p2align 0x4
.long 0x86E
L_191924:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_191890:
	movq $0x3293,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_191891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0x8BA
L_191891:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191892
L_191921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_191922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191922
.p2align 0x4
.long 0x86E
L_191922:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_191892:
	movq $0x2A51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x14A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq $0x9,0x8(%r14)
	movq $0xA,0x10(%r14)
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_191893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x8BA
L_191893:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191894
L_191919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_191920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191920
.p2align 0x4
.long 0x86E
L_191920:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_191894:
	movq $0x2A2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x14A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x7,0x0(%r14)
	movq $0x5,0x8(%r14)
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_191895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x8BA
L_191895:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191896
L_191917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_191918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191918
.p2align 0x4
.long 0x86E
L_191918:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_191896:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xC(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_459016
L_191897:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459016:
L_191898:
	cmpl $0x0,0xC(%rbp)
	jl L_459019
L_191899:
	movl $0x0,0x48(%rbp)
loop_2004:
	movl 0xC(%rbp),%r15d
	cmpl %r15d,0x48(%rbp)
	jl L_459018
L_191900:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_459017
L_191901:
	movq $0x3295,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_191902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
L_459017:
L_191910:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459018:
L_191911:
	movslq 0x48(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x58(%rbp)
	movl 0x8(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_191912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3902
.p2align 0x4
L_459019:
L_191916:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x287B
L_191902:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191903
L_191908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_191909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191909
.p2align 0x4
.long 0x287D
L_191909:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_191903:
	movq $0x2A33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x14A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x11,0x0(%r14)
	movq $0xA,0x8(%r14)
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_191904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x287E
L_191912:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191913
L_191914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_191915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191915
.p2align 0x4
.long 0x15BA
L_191915:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_191913:
	incl 0x48(%rbp)
	jmp loop_2004
.p2align 0x4
.long 0x1A69
L_191904:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191905
L_191906:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_191907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191907
.p2align 0x4
.long 0x287C
L_191907:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_191905:
	movq $0x3353,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreach_3
.text
.p2align 0x4
.globl layout_51
.hidden layout_51
layout_51:
L_191927:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_191960
L_191928:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459025
L_191929:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_459024
L_191930:
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_191931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_51
.p2align 0x4
L_459024:
L_191959:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_191933:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xA18)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xFF20)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_191934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_459025:
L_191960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_191961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191961
.p2align 0x4
.long 0x451
L_191961:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_191929
.p2align 0x4
.long 0x4E5
L_191931:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191932
L_191957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_191958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191958
.p2align 0x4
.long 0x4E1
L_191958:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_191932:
	movq 0x18(%rbp),%r15
	movl 0x20(%rbp),%ecx
	jmp L_191933
.p2align 0x4
.long 0x519
L_191934:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_191935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x519
L_191935:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191936
L_191955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_191956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191956
.p2align 0x4
.long 0x51C
L_191956:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_191936:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_191937:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_459031
L_191939:
	cmpq $0x1,%r14
	je L_459028
L_191940:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_191937
.p2align 0x4
L_459028:
L_191941:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191942
L_191953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_191954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191954
.p2align 0x4
.long 0x607
L_191954:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_191942:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_459029
L_191943:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_191944:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_191945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_459029:
L_191952:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_191944
.p2align 0x4
L_459031:
L_191938:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_191945:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191946
L_191950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_191951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191951
.p2align 0x4
.long 0x494
L_191951:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_191946:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_459034
L_191947:
	decl %r15d
	jo L_191938
L_191948:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459034:
L_191949:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl timeToString_0
.hidden timeToString_0
timeToString_0:
L_191962:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_191963
L_191989:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_191990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191990
.p2align 0x4
.long 0x45B
L_191990:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_191963:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x8(%r15),%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_191964:
	testl %eax,%eax
	jnz L_459036
L_191965:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r13,0x48(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_191966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_459036:
L_191988:
	movq (globalObjptr+0xD808)(%rip),%r15
	movq %r15,0x10(%rbp)
L_191972:
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_191973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x636
L_191966:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_191967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_0
.p2align 0x4
.long 0x4E3
L_191973:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x40(%rbp)
	movq %r11,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_191974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x636
L_191967:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movsd 0x48(%rbp),%xmm15
	movsd %xmm15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_191968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x8EC
L_191974:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_191975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_0
.p2align 0x4
.long 0x287F
L_191968:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_191969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_0
.p2align 0x4
.long 0x8EC
L_191975:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movsd 0x50(%rbp),%xmm15
	movsd %xmm15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191976
L_191984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_191985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191985
.p2align 0x4
.long 0x2881
L_191985:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_191976:
	movsd 0x28(%rbp),%xmm15
	divsd (globalReal64+0x40)(%rip),%xmm15
	movsd %xmm15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x30(%rbp)
	movq $0x5331,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x2,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_191977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1185
.p2align 0x4
.long 0x287F
L_191969:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movsd 0x50(%rbp),%xmm15
	movsd %xmm15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191970
L_191986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_191987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191987
.p2align 0x4
.long 0x15CA
L_191987:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_191970:
	movsd 0x40(%rbp),%xmm15
	divsd 0x10(%rbp),%xmm15
	mulsd (globalReal64+0x38)(%rip),%xmm15
	movsd %xmm15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x48(%rbp)
	movq $0x5331,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_191971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1185
.p2align 0x4
.long 0x10E2
L_191977:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_191978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x526
L_191971:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_191972
.p2align 0x4
.long 0xF9B
L_191978:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_191979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_0
.p2align 0x4
.long 0x2880
L_191979:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movsd 0x58(%rbp),%xmm15
	movsd %xmm15,0x20(%rbp)
	divsd (globalReal64+0x40)(%rip),%xmm15
	movsd %xmm15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_191980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1185
.p2align 0x4
.long 0x490
L_191980:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_191981
L_191982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_191983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_191983
.p2align 0x4
.long 0x4B1
L_191983:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_191981:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x15F8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED68)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xFF28)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.text
.p2align 0x4
.globl flow_0
.hidden flow_0
flow_0:
L_191991:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_191992
L_192103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_192104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192104
.p2align 0x4
.long 0x45F
L_192104:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_191992:
	movq 0x8(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	movq %r14,0x38(%rbp)
	cmpq %r15,%r14
	jne L_459048
L_191994:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2005:
	cmpl %ebx,%ecx
	je L_459047
L_191995:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_459046
L_191997:
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x0(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0x109D,%r14
	jne L_191998
L_192001:
	movq 0x10(%r10),%r14
L_192002:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_191998
L_192003:
	movq 0x8(%r14),%r13
L_192004:
	andq $0x3,%r13
	jz L_459042
L_191998:
	incl %ebx
	jo L_459041
L_192000:
	jmp loop_2005
.p2align 0x4
L_459041:
L_191999:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459042:
L_192005:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192006
L_192100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_192101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192101
.p2align 0x4
.long 0x2879
L_192101:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_192006:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x58(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x35E9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x30,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x10(%r13)
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %r13,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_192007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_459046:
L_191996:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459047:
L_192102:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459048:
L_191993:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2882
L_192007:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x38(%rbp),%rdx
	testq %rdx,%rdx
	jz L_459052
L_192008:
	cmpq $0x7FFFFFFF,%rdx
	ja L_459051
L_192009:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_192010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192010
.p2align 0x4
.long 0x2883
L_192010:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x10(%rbp)
L_192011:
	movq $0x0,0x18(%rbp)
loop_2006:
	movq 0x38(%rbp),%r15
	cmpq %r15,0x18(%rbp)
	jl L_459050
L_192012:
	movq 0x10(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_192013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_459050:
L_192037:
	movq 0x18(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x18(%r13),%r10
	movq %r10,0x78(%rbp)
	movq 0x20(%r13),%r10
	movq %r10,0x80(%rbp)
	movq %r11,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_192038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_34
.p2align 0x4
L_459051:
L_192098:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459052:
L_192099:
	movq (globalObjptr+0x51C8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_192011
.p2align 0x4
.long 0x2884
L_192013:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192014
L_192035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_192036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192036
.p2align 0x4
.long 0x288D
L_192036:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_192014:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x20(%rbp)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_192015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192015
.p2align 0x4
.long 0x2885
L_192015:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2007:
	cmpq $0x1,%r15
	jnl L_459053
L_192034:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2007
.p2align 0x4
L_459053:
L_192016:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192017
L_192032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_192033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192033
.p2align 0x4
.long 0x288C
L_192033:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_192017:
	movq 0x18(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF40)(%rip),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2139,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x30,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq %r15,0x20(%r14)
	movq %r14,0x28(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_192018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192018
.p2align 0x4
.long 0x2886
L_192018:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2008:
	cmpq $0x1,%r15
	jnl L_459054
L_192031:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2008
.p2align 0x4
L_459054:
L_192019:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192020
L_192029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_192030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192030
.p2align 0x4
.long 0x288B
L_192030:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_192020:
	movq 0x18(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x25F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x25F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_192021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_5
.p2align 0x4
.long 0x288E
L_192038:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192039
L_192096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_192097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192097
.p2align 0x4
.long 0x2891
L_192097:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_192039:
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq %r11,0x90(%rbp)
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x109A,%r15
	je L_192047
	cmpq $0x109B,%r15
	je L_192047
	cmpq $0x109D,%r15
	je L_459058
L_192040:
	movq (globalObjptr+0xF48)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
L_192041:
	movq $0x2621,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2621,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_192042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_4
.p2align 0x4
L_459058:
L_192059:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_192047
	cmpq $0x2,%r14
	je L_459074
L_192060:
	movq 0x8(%r14),%r15
	movq %r15,0x88(%rbp)
	cmpq $0x1,%r15
	je L_459073
	cmpq $0x2,%r15
	je L_459068
L_192061:
	movq 0x0(%r13),%r14
	movq 0x0(%r14),%r11
L_192062:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_192063
L_192089:
	movq 0x10(%r15),%r14
	cmpq %r14,0x10(%r11)
	jne L_459063
L_192091:
	movq (globalObjptr+0xF48)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x88(%rbp)
L_192068:
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movw 0x0(%r13),%r11w
	movw %r11w,%r14w
	andw $0x3,%r14w
	cmpw $0x2,%r14w
	jne L_192069
L_192081:
	shrw $0x2,%r11w
	movb %r11b,%r14b
	cmpb $0x1,%r14b
	jne L_459059
L_192083:
	movq (globalObjptr+0xF48)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
L_192073:
	movq $0x2621,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2621,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_192074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_4
.p2align 0x4
L_459059:
L_192069:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_192070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192070
.p2align 0x4
.long 0x2891
L_192070:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2011:
	cmpq $0x1,%r15
	jnl L_459060
L_192080:
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x3,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2011
.p2align 0x4
L_459060:
L_192071:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192072
L_192078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_192079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192079
.p2align 0x4
.long 0x2893
L_192079:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_192072:
	movq 0x90(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_192073
.p2align 0x4
L_459063:
L_192063:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192064
L_192087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_192088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192088
.p2align 0x4
.long 0x2893
L_192088:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_192064:
	movq $0x2121,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_192065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192065
.p2align 0x4
.long 0x2892
L_192065:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x88(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2010:
	cmpq $0x1,%r15
	jnl L_459064
L_192086:
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2010
.p2align 0x4
L_459064:
L_192066:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192067
L_192084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_192085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192085
.p2align 0x4
.long 0x2893
L_192085:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_192067:
	movq 0x88(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_192068
.p2align 0x4
L_459068:
L_192047:
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movw 0x0(%r13),%r11w
	movw %r11w,%r14w
	andw $0x3,%r14w
	cmpw $0x2,%r14w
	jne L_192048
L_192055:
	shrw $0x2,%r11w
	movb %r11b,%r14b
	testb %r14b,%r14b
	jnz L_459069
L_192057:
	movq (globalObjptr+0xF48)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_192041
.p2align 0x4
L_459069:
L_192048:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_192049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192049
.p2align 0x4
.long 0x2890
L_192049:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x88(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2009:
	cmpq $0x1,%r15
	jnl L_459070
L_192054:
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x2,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2009
.p2align 0x4
L_459070:
L_192050:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192051
L_192052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_192053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192053
.p2align 0x4
.long 0x2891
L_192053:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_192051:
	movq 0x88(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_192041
.p2align 0x4
L_459073:
L_192092:
	movq (globalObjptr+0xF48)(%rip),%r14
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	xchgq %r14,%r15
	jmp L_192041
.p2align 0x4
L_459074:
L_192095:
	movq (globalObjptr+0xF48)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_192041
.p2align 0x4
.long 0x2887
L_192021:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192022
L_192027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_192028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192028
.p2align 0x4
.long 0x288A
L_192028:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_192022:
	movq $0x35B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_192023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x288F
L_192042:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192043
L_192044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_192045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192045
.p2align 0x4
.long 0x2890
L_192045:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_192043:
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_2006
.p2align 0x4
.long 0x288E
L_192074:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192075
L_192076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_192077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192077
.p2align 0x4
.long 0x2891
L_192077:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_192075:
	movq 0x88(%rbp),%r15
	jmp L_192041
.p2align 0x4
.long 0x2888
L_192023:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192024
L_192025:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_192026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192026
.p2align 0x4
.long 0x2889
L_192026:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_192024:
	movq $0x77B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl concat_5
.hidden concat_5
concat_5:
L_192105:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_192106
L_192149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_192150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192150
.p2align 0x4
.long 0x451
L_192150:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_192106:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_459098
L_192107:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_192108:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459097
.p2align 0x4,,0x7
L_192109:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2991,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_459083
L_192110:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_192108
.p2align 0x4
L_459083:
L_192111:
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_192112:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459096
.p2align 0x4,,0x7
L_192113:
	movq $0x2991,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_459084
L_192114:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_192112
.p2align 0x4
L_459084:
L_192115:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_459091
L_192116:
	movq 0x8(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_192117:
	addq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	je L_459085
L_192118:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_192117
.p2align 0x4
L_459085:
L_192119:
	testq %r15,%r15
	jz L_459090
L_192120:
	cmpq $0x7FFFFFFF,%r15
	ja L_459089
L_192121:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_192122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192122
.p2align 0x4
.long 0x49B
L_192122:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_192123:
	movq 0x10(%rbp),%r10
	movq 0x8(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2012:
	cmpq 0x18(%rbp),%r14
	jnl L_459088
.p2align 0x4,,0x7
loop_2013:
	cmpq 0x0(%r11),%r13
	jl L_459087
L_192126:
	cmpq $0x1,%r10
	je L_459086
L_192127:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_2013
.p2align 0x4
L_459086:
L_192128:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459087:
L_192129:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2012
.p2align 0x4
L_459088:
L_192124:
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459089:
L_192131:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459090:
L_192132:
	movq (globalObjptr+0x648)(%rip),%r14
	xchgq %r14,%r15
	jmp L_192123
.p2align 0x4
L_459091:
L_192133:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%rdx
	movq %rdx,0x18(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%rdx
	movq %r13,0x10(%rbp)
	je L_459095
L_192134:
	testq %rdx,%rdx
	jz L_459094
L_192135:
	cmpq $0x7FFFFFFF,%rdx
	ja L_192131
L_192136:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_192137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192137
.p2align 0x4
.long 0x4A4
L_192137:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_192138:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2014:
	cmpq 0x18(%rbp),%r14
	jnl L_459092
L_192140:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2014
.p2align 0x4
L_459092:
L_192139:
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459094:
L_192142:
	movq (globalObjptr+0x650)(%rip),%r15
	jmp L_192138
.p2align 0x4
L_459095:
L_192143:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459096:
L_192144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_192145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192145
.p2align 0x4
.long 0x45B
L_192145:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_192113
.p2align 0x4
L_459097:
L_192146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_192147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192147
.p2align 0x4
.long 0x45B
L_192147:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_192109
.p2align 0x4
L_459098:
L_192148:
	movq (globalObjptr+0x658)(%rip),%r14
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1849
.hidden x_1849
x_1849:
L_192151:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_192152
L_192228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_192229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192229
.p2align 0x4
.long 0x1E2E
L_192229:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_192152:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xA8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	cmpq $0x1,%r14
	je L_459100
L_192153:
	movq (globalObjptr+0xFF30)(%rip),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_192154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_459100:
L_192158:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_459101
L_192159:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
L_192160:
	movq %r15,0xC8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movl 0xA8(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0xC8,%rbp
	leaq (L_192161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp insert_1
.p2align 0x4
L_459101:
L_192224:
	movq $0x1,0xB0(%rbp)
L_192165:
	movq 0xA0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movl 0xA8(%rbp),%r15d
	movl %r15d,0xD8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0xC0,%rbp
	leaq (L_192166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp insert_1
.p2align 0x4
.long 0x2894
L_192154:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192155
L_192225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_192226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192226
.p2align 0x4
.long 0x28A5
L_192226:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_192155:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD8(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_192156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x2894
L_192161:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192162
L_192222:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_192223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192223
.p2align 0x4
.long 0x28A4
L_192223:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_192162:
	movq $0x77B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x23A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xB0(%rbp),%r13
	cmpq $0x1,%r13
	je L_459104
L_192163:
	movq %r14,0xB8(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0xB0(%rbp)
	jmp L_192160
.p2align 0x4
L_459104:
L_192164:
	movq %r14,0xB0(%rbp)
	jmp L_192165
.p2align 0x4
.long 0x2895
L_192166:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_192167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2894
L_192156:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0xC0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_192157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x2896
L_192167:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192168
L_192220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_192221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192221
.p2align 0x4
.long 0x28A3
L_192221:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_192168:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x48(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r14
	movq %r14,0x18(%r13)
	movq (globalObjptr+0xF20)(%rip),%r14
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	cmpq $0x1,%r13
	je L_459117
L_192169:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_192170:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_459116
L_192172:
	cmpq $0x1,%r15
	je L_459106
L_192173:
	movq 0x8(%r15),%r15
	jmp L_192170
.p2align 0x4
L_459106:
L_192174:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192175
L_192217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_192218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192218
.p2align 0x4
.long 0x2897
L_192218:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_192175:
	movl 0x48(%rbp),%ecx
L_192176:
	movslq %ecx,%r15
	movq %r15,0x48(%rbp)
	testq %r15,%r15
	jz L_459114
L_192177:
	cmpq $0x7FFFFFFF,%r15
	ja L_459113
L_192178:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192179
L_192213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_192214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192214
.p2align 0x4
.long 0x2897
L_192214:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_192179:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq 0x48(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_192180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192180
.p2align 0x4
.long 0x2897
L_192180:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0x60(%rbp)
L_192181:
	movq 0x58(%rbp),%r15
	movq $0x0,0x58(%rbp)
loop_2015:
	movq 0x48(%rbp),%r14
	cmpq %r14,0x58(%rbp)
	jnl L_459108
L_192196:
	cmpq $0x1,%r15
	je L_459107
L_192197:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq $0x127B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xB8(%rbp)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_192198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_459107:
L_192212:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459108:
L_192182:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192183
L_192194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_192195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192195
.p2align 0x4
.long 0x289C
L_192195:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_192183:
	movq 0x60(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF40)(%rip),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2139,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x30,%r12
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq %r15,0x20(%r14)
	movq %r14,0x48(%rbp)
	movq $0x25F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x58(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_192184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192184
.p2align 0x4
.long 0x2898
L_192184:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2016:
	cmpq $0x1,%r15
	jnl L_459109
L_192193:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2016
.p2align 0x4
L_459109:
L_192185:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192186
L_192191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_192192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192192
.p2align 0x4
.long 0x289B
L_192192:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_192186:
	movq 0x38(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x25F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_192187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_5
.p2align 0x4
L_459113:
L_192215:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459114:
L_192216:
	movq (globalObjptr+0x7450)(%rip),%r14
	movq %r14,0x60(%rbp)
	jmp L_192181
.p2align 0x4
L_459116:
L_192171:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459117:
L_192219:
	xorl %ecx,%ecx
	jmp L_192176
.p2align 0x4
.long 0x2214
L_192157:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_192158
.p2align 0x4
.long 0x289D
L_192198:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movl %r15d,0xC8(%rbp)
	movq $0x3,0xD0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC8,%rbp
	leaq (L_192199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2899
L_192187:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192188
L_192189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_192190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192190
.p2align 0x4
.long 0x289A
L_192190:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_192188:
	movq $0x77B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x77F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x98(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0xB0(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x289E
L_192199:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_192200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x289F
L_192200:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192201
L_192210:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_192211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192211
.p2align 0x4
.long 0x28A2
L_192211:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_192201:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_192202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x28A0
L_192202:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_192203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x28A0
L_192203:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192204
L_192208:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_192209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192209
.p2align 0x4
.long 0x28A1
L_192209:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_192204:
	movl 0x78(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_459121
L_192205:
	movq $0x211D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
L_192206:
	movq $0x212D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x58(%rbp),%r11
	movq %r14,0x0(%r13,%r11,8)
	incq %r11
	movq %r11,0x58(%rbp)
	movq 0x68(%rbp),%r15
	jmp loop_2015
.p2align 0x4
L_459121:
L_192207:
	movq 0xB8(%rbp),%r15
	jmp L_192206
.text
.p2align 0x4
.globl insert_1
.hidden insert_1
insert_1:
L_192230:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_192551
L_192231:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459123
L_192232:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq $0x797,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x35B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_192233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_459123:
L_192551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_192552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192552
.p2align 0x4
.long 0x28C2
L_192552:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_192232
.p2align 0x4
.long 0x28A6
L_192233:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xA8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	cmpq $0x1,%r13
	je L_459139
L_192234:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_192235:
	incl %ecx
	jo L_192236
L_192237:
	cmpq $0x1,%r15
	je L_459125
L_192238:
	movq 0x8(%r15),%r15
	jmp L_192235
.p2align 0x4
L_459125:
L_192239:
L_192240:
	movslq %ecx,%rdx
	movq %rdx,0xA8(%rbp)
	testq %rdx,%rdx
	jz L_459137
L_192241:
	cmpq $0x7FFFFFFF,%rdx
	ja L_192443
L_192242:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_192243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192243
.p2align 0x4
.long 0x28A7
L_192243:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0xB0(%rbp)
L_192244:
	movq 0x78(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2017:
	cmpq 0xA8(%rbp),%r15
	jnl L_459127
L_192545:
	cmpq $0x1,%r14
	je L_459126
L_192546:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0xB0(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2017
.p2align 0x4
L_459126:
L_192441:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459127:
L_192245:
	movq 0xB0(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x78(%rbp)
	cmpq %r14,%rdx
	jne L_192247
L_192248:
	decl %r13d
	movl %r13d,0x1C(%rbp)
	jo L_192236
L_192249:
	testq %rdx,%rdx
	jz L_459133
L_192250:
	cmpq $0x7FFFFFFF,%rdx
	ja L_459132
L_192251:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_192252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192252
.p2align 0x4
.long 0x28A8
L_192252:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0xA8(%rbp)
L_192253:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2018:
	cmpq 0x78(%rbp),%r15
	jnl L_459129
L_192541:
	movl %r15d,%r14d
	movl 0x1C(%rbp),%r13d
	subl %r14d,%r13d
	jo L_459128
L_192542:
	movslq %r13d,%r14
	movq 0xB0(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0xA8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2018
.p2align 0x4
L_459128:
L_192236:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459129:
L_192254:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192255
L_192539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_192540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192540
.p2align 0x4
.long 0x28C1
L_192540:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_192255:
	movq 0xA8(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x78(%rbp)
	movl %r14d,%r13d
	movl %r13d,0x1C(%rbp)
	movslq %r13d,%r11
	movq %r11,0xB0(%rbp)
	cmpq %r14,%r11
	jne L_459130
L_192257:
	movq $0x437D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xB8(%rbp)
	movq %r14,0x0(%r11)
	addq $0x18,%r12
	movq %r13,0x8(%r11)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x35ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xD0(%rbp)
	addq $0x18,%r12
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_192258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_459130:
L_192247:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459132:
L_192443:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459133:
L_192544:
	movq (globalObjptr+0xF90)(%rip),%r15
	movq %r15,0xA8(%rbp)
	jmp L_192253
.p2align 0x4
L_459137:
L_192549:
	movq (globalObjptr+0xD50)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_192244
.p2align 0x4
L_459139:
L_192550:
	xorl %ecx,%ecx
	jmp L_192240
.p2align 0x4
.long 0x28A9
L_192258:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192259
L_192537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_192538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192538
.p2align 0x4
.long 0x28C0
L_192538:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_192259:
	movq $0x9C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0xC8(%rbp)
	movq 0xB0(%rbp),%r15
	testq %r15,%r15
	jz L_459146
L_192260:
	cmpq $0x7FFFFFFF,%r15
	ja L_192443
L_192261:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192262
L_192533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_192534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192534
.p2align 0x4
.long 0x28AA
L_192534:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_192262:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB5,%rcx
	movq 0xB0(%rbp),%rdx
	movq $0x50,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_192263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192263
.p2align 0x4
.long 0x28AA
L_192263:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq %rax,0xD0(%rbp)
L_192264:
	movq $0x0,0xD8(%rbp)
loop_2019:
	movq 0xB0(%rbp),%rdx
	cmpq %rdx,0xD8(%rbp)
	jl L_459143
L_192265:
	movq 0xD0(%rbp),%r15
	movq $0xCB1,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r15,0xD8(%rbp)
	movq %r14,0x8(%r13)
	movq %r14,0xE0(%rbp)
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r13,0xE8(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	cmpq $0x7FFFFFFF,%rdx
	ja L_192443
L_192266:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_192267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192267
.p2align 0x4
.long 0x28AB
L_192267:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0xF0(%rbp)
	movq $0x0,0xF8(%rbp)
loop_2020:
	movq 0xB0(%rbp),%r15
	cmpq %r15,0xF8(%rbp)
	jl L_459140
L_192268:
	movq 0x80(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_192269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_459140:
L_192492:
	movq 0xF8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	cmpq 0x78(%rbp),%r15
	jnb L_459141
L_192494:
	movq 0xA8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x100(%rbp)
	movq 0x18(%r13),%r10
	movq %r10,0x108(%rbp)
	movq %r11,0x118(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x118,%rbp
	leaq (L_192495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bytesAllocated_0
.p2align 0x4
L_459141:
L_192271:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459143:
L_192526:
	movq 0xD8(%rbp),%r15
	movl %r15d,0xE0(%rbp)
	movq $0x45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xE8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xF0(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r11
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r15)
	movq %r14,0x100(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_192527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_459146:
L_192536:
	movq (globalObjptr+0x7448)(%rip),%r14
	movq %r14,0xD0(%rbp)
	jmp L_192264
.p2align 0x4
.long 0x28AC
L_192269:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movslq %r15d,%r14
	cmpq 0xB0(%rbp),%r14
	jnb L_192271
L_192272:
	movq 0xF0(%rbp),%r15
	movl $0x1,0x0(%r15,%r14,4)
	movq 0x80(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_192273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x28BD
L_192495:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x130E,%r14
	je L_459159
L_192519:
	movq 0x108(%rbp),%r15
	cmpq $0x1,%r15
	je L_459153
	cmpq $0x2,%r15
	je L_192504
L_192520:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1097,%r14
	je L_459149
L_192522:
	movl $0x1,%ecx
L_192501:
	movq 0xF0(%rbp),%r15
	movq 0xF8(%rbp),%r14
	movl %ecx,0x0(%r15,%r14,4)
	incq %r14
	movq %r14,0xF8(%rbp)
	jmp loop_2020
.p2align 0x4
L_459149:
L_192521:
	movq 0x108(%rbp),%r15
	movl 0xC(%r15),%ecx
	movl 0x8(%r15),%r14d
	movl %r14d,(localWord32+0x4)(%rip)
	movl $0x1,%ebx
L_192499:
	testl %ecx,%ecx
	jz L_459151
L_192502:
	movl (localWord32+0x4)(%rip),%r15d
	testl %r15d,%r15d
	jz L_459150
L_192505:
	movl %ebx,%ecx
	jmp L_192501
.p2align 0x4
L_459150:
L_192504:
	movl $0x1,%ecx
	jmp L_192501
.p2align 0x4
L_459151:
L_192500:
	movl %ebx,%ecx
	jmp L_192501
.p2align 0x4
L_459153:
L_192523:
	movl $0x1,%ecx
L_192508:
	movq 0x100(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x109E,%r14
	jne L_192501
L_192510:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,%r15
	andq $0x1,%r15
	jz L_192504
L_192512:
	shrq $0x1,%r11
	movl %r11d,%r15d
	movslq %r15d,%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	jnb L_192271
L_192514:
	movq 0x0(%r14,%r13,8),%r15
L_192515:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_192504
L_192516:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x108D,%r14
	jne L_192504
	jmp L_192501
.p2align 0x4
L_459159:
L_192496:
	movq 0x108(%rbp),%r15
	cmpq $0x1,%r15
	je L_459162
	cmpq $0x2,%r15
	je L_192504
L_192497:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1097,%r14
	je L_459160
L_192506:
	movl $0x1,%ecx
	jmp L_192501
.p2align 0x4
L_459160:
L_192498:
	movq 0x108(%rbp),%r15
	movl 0xC(%r15),%ecx
	movl 0x8(%r15),%r14d
	movl %r14d,(localWord32+0x4)(%rip)
	xorl %ebx,%ebx
	jmp L_192499
.p2align 0x4
L_459162:
L_192507:
	xorl %ecx,%ecx
	jmp L_192508
.p2align 0x4
.long 0x28BE
L_192527:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192528
L_192531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_192532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192532
.p2align 0x4
.long 0x28BF
L_192532:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_192528:
	movq 0xF8(%rbp),%r15
	andq $0x1,%r15
	jnz L_459163
L_192529:
	movq $0x1955,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0xE0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0xD0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xD8(%rbp),%r14
	movq 0xF0(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0xD8(%rbp)
	jmp loop_2019
.p2align 0x4
L_459163:
L_192530:
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x28AC
L_192273:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192274
L_192490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_192491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192491
.p2align 0x4
.long 0x28BC
L_192491:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_192274:
	movslq 0x70(%rbp),%r15
	movq 0xD0(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_192271
L_192276:
	movq 0x0(%r14,%r15,8),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x114D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x20,%r12
	movq 0xE8(%rbp),%r15
	movq %r15,0x10(%r11)
	movq 0xD8(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x261B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	movq $0x35B3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x28,%r12
	movq 0xB8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0xF0(%rbp),%r11
	movq %r11,0x8(%r13)
	movq %r15,0x10(%r13)
	movq %r14,0x18(%r13)
	movq %r13,0x100(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_192277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x28AD
L_192277:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192278
L_192488:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_192489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192489
.p2align 0x4
.long 0x28AF
L_192489:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_192278:
	movq $0x378F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x100(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_192279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_1
.p2align 0x4
.long 0x28AE
L_192279:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	movq 0xB0(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_192280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192280
.p2align 0x4
.long 0x28AF
L_192280:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2021:
	cmpq 0xB0(%rbp),%r15
	jnl L_459168
L_192487:
	movq 0x70(%rbp),%r14
	movl $0xFFFFFFFF,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2021
.p2align 0x4
L_459168:
L_192281:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192282
L_192485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_192486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192486
.p2align 0x4
.long 0x28BB
L_192486:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_192282:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xE8(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_192283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopForestSteensgaard_0
.p2align 0x4
.long 0x28B0
L_192283:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq %r15,0x100(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x128(%rbp)
	addq $0x100,%rbp
	leaq (L_192284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setClass_0
.p2align 0x4
.long 0x28B1
L_192284:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x78(%rbp),%r15
	movslq 0x0(%r15),%rdx
	movq %rdx,0xD8(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_192443
L_192285:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_192286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192286
.p2align 0x4
.long 0x28B2
L_192286:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,0x78(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2022:
	cmpq 0xD8(%rbp),%r15
	jnl L_459170
L_192483:
	movq 0x78(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2022
.p2align 0x4
L_459170:
L_192287:
	movq 0xC8(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_192329
L_192288:
	movq 0x8(%r13),%r14
	movq %r14,0xE8(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_192289:
	movq 0x8(%r15),%r14
	cmpq %r14,0xE0(%rbp)
	jne L_459178
L_192479:
	movq 0xE8(%rbp),%r13
	cmpq $0x1,%r13
	je L_459171
L_192480:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0xE8(%rbp)
	movq %r14,%r15
	jmp L_192289
.p2align 0x4
L_459171:
L_192329:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_192410
L_192330:
	movq 0x8(%r14),%r15
	movq %r15,0xC8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xE8(%rbp)
.p2align 0x4,,0x7
L_192331:
	movq 0xE8(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq %r14,0xE0(%rbp)
	jne L_459176
L_192463:
	movq 0xC8(%rbp),%r15
	cmpq $0x1,%r15
	je L_459172
L_192464:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0xC8(%rbp)
	movq %r13,0xE8(%rbp)
	jmp L_192331
.p2align 0x4
L_459172:
L_192410:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xD21,%rcx
	movq 0xB0(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_192411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192411
.p2align 0x4
.long 0x28B3
L_192411:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2023:
	cmpq 0xB0(%rbp),%r15
	jnl L_459173
L_192455:
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2023
.p2align 0x4
L_459173:
L_192412:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192413
L_192453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_192454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192454
.p2align 0x4
.long 0x28BA
L_192454:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_192413:
	movq $0xD23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x48(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x50(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x58(%r15)
	movq $0xD29,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0xD25,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC8(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x10(%rbp),%r15
	movq 0x70(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x68(%r15),%r13
	movq %r13,0xE0(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0xE8(%rbp)
	movq 0x58(%r15),%r13
	movq %r13,0xF8(%rbp)
	movq 0x50(%r15),%r13
	movq %r13,0x100(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x108(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x110(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x118(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x120(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x128(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x130(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x138(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x140(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x148(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x150(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_459174
L_192414:
	movq %r15,0x168(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_192415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_459174:
L_192448:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_192449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_459176:
L_192332:
	movq %r14,0x100(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_192333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_459178:
L_192290:
	movq %r14,0x100(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_192291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
.long 0x28B4
L_192415:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192416
L_192446:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_192447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192447
.p2align 0x4
.long 0x28B9
L_192447:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_192416:
	movq $0x216F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x797,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0xD27,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x10(%r11)
	addq $0x20,%r12
	movq %r14,0x0(%r11)
	movq 0xE0(%rbp),%r13
	movq %r13,0x8(%r11)
	movq $0x35EB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x30(%r10)
	movq %r11,0x40(%r10)
	addq $0xB8,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0xE8(%rbp),%r15
	movq %r15,0x8(%r10)
	movq 0xF8(%rbp),%r15
	movq %r15,0x10(%r10)
	movq 0xB0(%rbp),%r15
	movq %r15,0x18(%r10)
	movq 0x100(%rbp),%r15
	movq %r15,0x20(%r10)
	movq 0x108(%rbp),%r15
	movq %r15,0x28(%r10)
	movq 0x110(%rbp),%r15
	movq %r15,0x38(%r10)
	movq 0x118(%rbp),%r15
	movq %r15,0x48(%r10)
	movq 0x120(%rbp),%r15
	movq %r15,0x50(%r10)
	movq %r14,0x58(%r10)
	movq 0x128(%rbp),%r15
	movq %r15,0x60(%r10)
	movq 0x130(%rbp),%r15
	movq %r15,0x68(%r10)
	movq 0x138(%rbp),%r15
	movq %r15,0x70(%r10)
	movq 0x140(%rbp),%r15
	movq %r15,0x78(%r10)
	movq 0x148(%rbp),%r15
	movq %r15,0x80(%r10)
	movq %r13,0x88(%r10)
	movq 0x80(%rbp),%r15
	movq %r15,0x90(%r10)
	movq 0x150(%rbp),%r15
	movq %r15,0x98(%r10)
	movq 0xD8(%rbp),%r15
	movq %r15,0xA0(%r10)
	movq 0xC8(%rbp),%r15
	movq %r15,0xA8(%r10)
	movq %r10,0xC8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_192417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x1
L_192449:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x28B0
L_192333:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	andq $0x1,%r15
	jnz L_459182
L_192334:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_192335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_459182:
L_192363:
	movq 0xF8(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	cmpq 0xB0(%rbp),%r15
	jnb L_192271
L_192365:
	movq 0x70(%rbp),%r14
	movl 0x0(%r14,%r15,4),%r13d
	movl %r13d,0x1C(%rbp)
	movslq %r13d,%r15
	cmpq 0xD8(%rbp),%r15
	jnb L_192271
L_192367:
	movq 0x78(%rbp),%r14
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_459185
L_192368:
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_459183
L_192369:
	movq 0x8(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_192370:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x100(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_192371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_459183:
L_192407:
	movq 0xC8(%rbp),%r15
	cmpq $0x1,%r15
	je L_192410
L_192408:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xC8(%rbp)
	movq %r14,0xE8(%rbp)
	jmp L_192331
.p2align 0x4
L_459185:
L_192460:
	movq 0xC8(%rbp),%r15
	cmpq $0x1,%r15
	je L_192410
L_192461:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xC8(%rbp)
	movq %r14,0xE8(%rbp)
	jmp L_192331
.p2align 0x4
.long 0x28B0
L_192291:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	andq $0x1,%r15
	jnz L_459189
L_192292:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_192293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_459189:
L_192321:
	movq 0xF8(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x60(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_192271
L_192323:
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,%r14
	andq $0x1,%r14
	andq $0x1,%r14
	jz L_459195
L_192324:
	cmpq $0x1,%r13
	jng L_459193
L_192468:
	cmpq 0xB0(%rbp),%r15
	jnb L_192271
L_192470:
	movq 0x70(%rbp),%r14
	movslq 0x0(%r14,%r15,4),%r13
	cmpq 0xD8(%rbp),%r13
	jnb L_192271
L_192472:
	movq 0x78(%rbp),%r14
	movl $0x1,0x0(%r14,%r13,4)
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_192329
L_192473:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xE8(%rbp)
	jmp L_192289
.p2align 0x4
L_459193:
L_192326:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_192329
L_192327:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xE8(%rbp)
	jmp L_192289
.p2align 0x4
L_459195:
L_192475:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq $0x1,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_192476:
	cmpl $0x0,%eax
	jnl L_192326
	jmp L_192468
.p2align 0x4
.long 0x28B5
L_192417:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	cmpq $0x1,%r13
	je L_459206
L_192418:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_192419:
	incl %ecx
	jo L_192236
L_192420:
	cmpq $0x1,%r15
	je L_459198
L_192421:
	movq 0x8(%r15),%r15
	jmp L_192419
.p2align 0x4
L_459198:
L_192422:
L_192423:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	testq %rdx,%rdx
	jz L_459204
L_192424:
	cmpq $0x7FFFFFFF,%rdx
	ja L_192443
L_192425:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_192426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192426
.p2align 0x4
.long 0x28B6
L_192426:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0x20(%rbp)
L_192427:
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2024:
	cmpq 0x18(%rbp),%r15
	jnl L_459200
L_192438:
	cmpq $0x1,%r14
	je L_192441
L_192439:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x20(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2024
.p2align 0x4
L_459200:
L_192428:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192429
L_192436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_192437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192437
.p2align 0x4
.long 0x28B8
L_192437:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_192429:
	movq 0x20(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_459201
L_192430:
	movq $0x35EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x30,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0xB0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_192431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_459201:
L_192432:
	movq 0x98(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq $0x1,0xB0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_192433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_459204:
L_192444:
	movq (globalObjptr+0xD50)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_192427
.p2align 0x4
L_459206:
L_192445:
	xorl %ecx,%ecx
	jmp L_192423
.p2align 0x4
.long 0x1
bug_477:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192450
L_192451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_192452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192452
.p2align 0x4
.long 0x451
L_192452:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_192450:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_192335:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_192336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x28B0
L_192371:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	andq $0x1,%r15
	jnz L_459208
L_192372:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_192373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_459208:
L_192401:
	movq 0xF8(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	cmpq 0xB0(%rbp),%r15
	jnb L_192271
L_192403:
	movq 0x70(%rbp),%r14
	movl 0x0(%r14,%r15,4),%r13d
	cmpl %r13d,0x1C(%rbp)
	je L_459210
L_192404:
	movq 0xF0(%rbp),%r14
	movl $0x1,0x0(%r14,%r15,4)
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_192407
L_192405:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xE8(%rbp)
	jmp L_192370
.p2align 0x4
L_459210:
L_192456:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_192407
L_192457:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xE8(%rbp)
	jmp L_192370
.p2align 0x4
.long 0x1
L_192293:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_192294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x28B7
L_192431:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_192432
.p2align 0x4
.long 0x28B7
L_192433:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq $0x2,0xB0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_192434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x4AF
L_192336:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF3D8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_192337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_192373:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_192374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_192294:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF3D8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_192295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x28B7
L_192434:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5AF
L_192337:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_192338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_192374:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF3D8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_192375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_192295:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_192296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_192338:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192339
L_192361:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_192362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192362
.p2align 0x4
.long 0x4AE
L_192362:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_192339:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_192340:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_192236
L_192341:
	cmpq $0x1,%r14
	je L_459213
L_192342:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_192340
.p2align 0x4
L_459213:
L_192343:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192344
L_192359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_192360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192360
.p2align 0x4
.long 0x4E6
L_192360:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_192344:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_459214
L_192345:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_282:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_459214:
L_192358:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_282
.p2align 0x4
.long 0x5AF
L_192375:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_192376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_192296:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192297
L_192319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_192320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192320
.p2align 0x4
.long 0x4AE
L_192320:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_192297:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_192298:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_192236
L_192299:
	cmpq $0x1,%r14
	je L_459218
L_192300:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_192298
.p2align 0x4
L_459218:
L_192301:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192302
L_192317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_192318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192318
.p2align 0x4
.long 0x4E6
L_192318:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_192302:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_459219
L_192303:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_281:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_459219:
L_192316:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_281
.p2align 0x4
.long 0x1
rev_280:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_459225
L_192346:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_192347:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459224
.p2align 0x4,,0x7
L_192348:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_459223
L_192349:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_192347
.p2align 0x4
L_459223:
L_192351:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_459224:
L_192355:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_192356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192356
.p2align 0x4
.long 0x45B
L_192356:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_192348
.p2align 0x4
L_459225:
L_192357:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_192351
.p2align 0x4
.long 0x51E
L_192376:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192377
L_192399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_192400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192400
.p2align 0x4
.long 0x4AE
L_192400:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_192377:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_192378:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_192236
L_192379:
	cmpq $0x1,%r14
	je L_459226
L_192380:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_192378
.p2align 0x4
L_459226:
L_192381:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192382
L_192397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_192398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192398
.p2align 0x4
.long 0x4E6
L_192398:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_192382:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_459227
L_192383:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_283:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_459227:
L_192396:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_283
.p2align 0x4
.long 0x1
rev_279:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_459233
L_192304:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_192305:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459232
.p2align 0x4,,0x7
L_192306:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_459231
L_192307:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_192305
.p2align 0x4
L_459231:
L_192309:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_459232:
L_192313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_192314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192314
.p2align 0x4
.long 0x45B
L_192314:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_192306
.p2align 0x4
L_459233:
L_192315:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_192309
.p2align 0x4
.long 0x1
bug_475:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192352
L_192353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_192354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192354
.p2align 0x4
.long 0x451
L_192354:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_192352:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
rev_281:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_459237
L_192384:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_192385:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459236
.p2align 0x4,,0x7
L_192386:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_459235
L_192387:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_192385
.p2align 0x4
L_459235:
L_192389:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_459236:
L_192393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_192394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192394
.p2align 0x4
.long 0x45B
L_192394:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_192386
.p2align 0x4
L_459237:
L_192395:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_192389
.p2align 0x4
.long 0x1
bug_474:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192310
L_192311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_192312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192312
.p2align 0x4
.long 0x451
L_192312:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_192310:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_476:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192390
L_192391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_192392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192392
.p2align 0x4
.long 0x451
L_192392:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_192390:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loopForestSteensgaard_0
.hidden loopForestSteensgaard_0
loopForestSteensgaard_0:
L_192553:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_192596
L_192554:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459256
L_192555:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_192577
L_192556:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_192557:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459254
.p2align 0x4,,0x7
L_192558:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x108D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x13FF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x30(%rbp)
	movq %r13,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r15,0x18(%r11)
	addq $0x28,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r11)
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_459253
L_192560:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_459252
L_192561:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_192563:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_192564
L_192582:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCCC,%r13
	jne L_192564
L_192583:
	movq 0x0(%r14),%r13
	cmpq %r13,0x10(%rbp)
	je L_459246
L_192564:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_459245
L_192566:
	cmpq $0x1,%r15
	je L_459240
L_192567:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_192563
.p2align 0x4
L_459240:
L_192568:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459244
.p2align 0x4,,0x7
L_192569:
	movl 0x28(%rbp),%ecx
L_192570:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_459243
L_192572:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_192574
L_192579:
	movl %ecx,0x0(%r15)
L_192574:
	movq $0x1999,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_459241
L_192575:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_192557
.p2align 0x4
L_459241:
L_192577:
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_192578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1868
.p2align 0x4
L_459243:
L_192571:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459244:
L_192580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_192581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192581
.p2align 0x4
.long 0x1129
L_192581:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_192569
.p2align 0x4
L_459245:
L_192565:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459246:
L_192585:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_192571
L_192586:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %ecx,0x0(%r13)
	jnl L_459248
L_192591:
	movl %ecx,0x0(%r13)
	movq %r14,%r15
L_192588:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_192577
L_192589:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_192557
.p2align 0x4
L_459248:
L_192587:
	movq %r14,%r15
	jmp L_192588
.p2align 0x4
L_459252:
L_192592:
	xorl %ecx,%ecx
	jmp L_192570
.p2align 0x4
L_459253:
L_192559:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459254:
L_192593:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_192594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192594
.p2align 0x4
.long 0x4DE
L_192594:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_192558
.p2align 0x4
L_459256:
L_192596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_192597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192597
.p2align 0x4
.long 0x45F
L_192597:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_192555
.p2align 0x4
.long 0x5EF
L_192578:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp treeFor_0
.text
.p2align 0x4
.globl x_1868
.hidden x_1868
x_1868:
L_192598:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_192599
L_192654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_192655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192655
.p2align 0x4
.long 0x45F
L_192655:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_192599:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_459268
L_192601:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_459267
L_192602:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_192604:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_192605
L_192645:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xCCC,%r13
	jne L_192605
L_192646:
	movq 0x8(%rbp),%r13
	cmpq %r13,0x0(%r15)
	je L_459262
L_192605:
	incl %ecx
	jo L_459261
L_192607:
	cmpq $0x1,%r14
	je L_459258
L_192608:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_192604
.p2align 0x4
L_459258:
L_192609:
L_192610:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_459260
L_192612:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_192614
L_192644:
	movl %ecx,0x0(%r15)
L_192614:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_192615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_459260:
L_192611:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459261:
L_192606:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459262:
L_192648:
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_192611
L_192649:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_192651
L_192652:
	movl %ecx,0x0(%r14)
L_192651:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459267:
L_192653:
	xorl %ecx,%ecx
	jmp L_192610
.p2align 0x4
L_459268:
L_192600:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_192615:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_192616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_192616:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xFF38)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_192617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_192617:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_192618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_192618:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192619
L_192642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_192643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192643
.p2align 0x4
.long 0x4AE
L_192643:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_192619:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_192620:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_192606
L_192621:
	cmpq $0x1,%r14
	je L_459270
L_192622:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_192620
.p2align 0x4
L_459270:
L_192623:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192624
L_192640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_192641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192641
.p2align 0x4
.long 0x4E6
L_192641:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_192624:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_459271
L_192625:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_284:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_459271:
L_192639:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_284
.p2align 0x4
.long 0x1
rev_282:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_459277
L_192626:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_192627:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459276
.p2align 0x4,,0x7
L_192628:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_459275
L_192629:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_192627
.p2align 0x4
L_459275:
L_192631:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_192632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_459276:
L_192636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_192637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192637
.p2align 0x4
.long 0x45B
L_192637:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_192628
.p2align 0x4
L_459277:
L_192638:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_192631
.p2align 0x4
.long 0x1
L_192632:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192633
L_192634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_192635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192635
.p2align 0x4
.long 0x451
L_192635:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_192633:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl treeFor_0
.hidden treeFor_0
treeFor_0:
L_192656:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_192657
L_192889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_192890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192890
.p2align 0x4
.long 0x45B
L_192890:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_192657:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_192658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp stronglyConnectedComponents_0
.p2align 0x4
.long 0x51E
L_192658:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192659
L_192887:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_192888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192888
.p2align 0x4
.long 0x4AE
L_192888:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_192659:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_192673
L_192660:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movl $0x0,0x28(%rbp)
.p2align 0x4,,0x7
L_192661:
	cmpq $0x1,%r15
	jne L_459310
.p2align 0x4,,0x7
L_192667:
	movl 0x28(%rbp),%r14d
	incl %r14d
	jo L_192668
L_192669:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_459280
L_192670:
	movl %r14d,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_192661
.p2align 0x4
L_459280:
L_192671:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192673
L_192883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_192884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192884
.p2align 0x4
.long 0x4AE
L_192884:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_192673:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_459281
L_192674:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
L_192675:
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_192676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1868
.p2align 0x4
L_459281:
L_192688:
	movq $0x187D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_459292
L_192689:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
L_192691:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz x_603
L_192843:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,0x8(%r15)
	jne x_1869
L_192844:
	movq %r14,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_192845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1868
.p2align 0x4
x_1869:
x_603:
	movq $0x9C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_459282
L_192692:
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r15
L_192693:
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_192694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1868
.p2align 0x4
L_459282:
L_192713:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_459283
L_192714:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
L_192715:
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_192716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1868
.p2align 0x4
L_459283:
L_192822:
	movq $0x1,0x40(%rbp)
L_192731:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_459284
L_192732:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
L_192733:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq $0x3DA7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_192734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_459284:
L_192738:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_459291
L_192739:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_192740:
	incl %ecx
	jo L_459290
L_192741:
	cmpq $0x1,%r15
	je L_459285
L_192742:
	movq 0x8(%r15),%r15
	jmp L_192740
.p2align 0x4
L_459285:
L_192743:
L_192744:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	testq %rdx,%rdx
	jz L_459289
L_192745:
	cmpq $0x7FFFFFFF,%rdx
	ja L_459288
L_192746:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_192747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192747
.p2align 0x4
.long 0x1E33
L_192747:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_192748:
	movq 0x40(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2025:
	cmpq 0x28(%rbp),%r15
	jnl L_459287
L_192796:
	cmpq $0x1,%r14
	je L_459286
L_192797:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x48(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2025
.p2align 0x4
L_459286:
L_192783:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459287:
L_192749:
	movq 0x48(%rbp),%r15
	movq $0x2B,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_192750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp treeFor_0
.p2align 0x4
L_459288:
L_192785:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459289:
L_192800:
	movq (globalObjptr+0xD78)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_192748
.p2align 0x4
L_459290:
L_192668:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459291:
L_192801:
	xorl %ecx,%ecx
	jmp L_192744
.p2align 0x4
L_459292:
L_192873:
	movq $0x1,0x28(%rbp)
L_192754:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,%r13
	je L_459307
L_192755:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_192756:
	incl %ecx
	jo L_192668
L_192757:
	cmpq $0x1,%r15
	je L_459293
L_192758:
	movq 0x8(%r15),%r15
	jmp L_192756
.p2align 0x4
L_459293:
L_192759:
L_192760:
	movslq %ecx,%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_459305
L_192761:
	cmpq $0x7FFFFFFF,%rdx
	ja L_192785
L_192762:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_192763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192763
.p2align 0x4
.long 0x782
L_192763:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_192764:
	movq 0x30(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2026:
	cmpq 0x38(%rbp),%r15
	jnl L_459295
L_192788:
	cmpq $0x1,%r14
	je L_192783
L_192789:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x40(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2026
.p2align 0x4
L_459295:
L_192765:
	movq 0x40(%rbp),%r14
	movq $0x2D,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_459303
L_192766:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_192767:
	incl %ecx
	jo L_192668
L_192768:
	cmpq $0x1,%r15
	je L_459296
L_192769:
	movq 0x8(%r15),%r15
	jmp L_192767
.p2align 0x4
L_459296:
L_192770:
L_192771:
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	testq %rdx,%rdx
	jz L_459301
L_192772:
	cmpq $0x7FFFFFFF,%rdx
	ja L_192785
L_192773:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_192774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192774
.p2align 0x4
.long 0x6F7
L_192774:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x38(%rbp)
L_192775:
	movq 0x28(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2027:
	cmpq 0x30(%rbp),%r15
	jnl L_459298
L_192780:
	cmpq $0x1,%r14
	je L_192783
L_192781:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x38(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2027
.p2align 0x4
L_459298:
L_192776:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192777
L_192778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_192779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192779
.p2align 0x4
.long 0x78C
L_192779:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_192777:
	movq 0x38(%rbp),%r15
	movq $0x2B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x533D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459301:
L_192786:
	movq (globalObjptr+0xD78)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_192775
.p2align 0x4
L_459303:
L_192787:
	xorl %ecx,%ecx
	jmp L_192771
.p2align 0x4
L_459305:
L_192792:
	movq (globalObjptr+0x1438)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_192764
.p2align 0x4
L_459307:
L_192793:
	xorl %ecx,%ecx
	jmp L_192760
.p2align 0x4
L_459310:
L_192662:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r15
L_192663:
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_192664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1868
.p2align 0x4
.long 0x4E3
L_192676:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192677
L_192880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_192881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192881
.p2align 0x4
.long 0x4F0
L_192881:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_192677:
	movq 0x30(%rbp),%r14
	movq 0x18(%r14),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_459313
L_192678:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_192679:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_192680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1868
.p2align 0x4
L_459313:
L_192685:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_192688
L_192686:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_192675
.p2align 0x4
.long 0x4E4
L_192845:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192846
L_192871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_192872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192872
.p2align 0x4
.long 0x4EB
L_192872:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_192846:
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_192853
L_192847:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_192848:
	movq 0x0(%r15),%r13
	movq 0x38(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	je L_459319
L_192849:
	cmpq $0x1,%r14
	je L_459316
L_192850:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_192848
.p2align 0x4
L_459316:
L_192851:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192853
L_192856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_192857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192857
.p2align 0x4
.long 0x19D4
L_192857:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_192853:
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_459317
L_192854:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_192691
.p2align 0x4
L_459317:
L_192855:
	movq %r15,0x28(%rbp)
	jmp L_192754
.p2align 0x4
L_459319:
L_192858:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A3,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_192859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192859
.p2align 0x4
.long 0x19D4
L_192859:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2028:
	cmpq $0x1,%r15
	jnl L_459320
L_192869:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x28(%rbp),%r11
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r14
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	salq $0x4,%r13
	movq %r9,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_2028
.p2align 0x4
L_459320:
L_192860:
	movq 0x28(%rbp),%r15
	movq $0x2B,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0x1430)(%rip),%r15
	movq $0x2D,0xFFFFFFFFFFFFFFF8(%r15)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A3,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_192861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192861
.p2align 0x4
.long 0xAA4
L_192861:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2029:
	cmpq $0x1,%r15
	jnl L_459321
L_192868:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x38(%rbp),%r11
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r14
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	salq $0x4,%r13
	movq %r9,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_2029
.p2align 0x4
L_459321:
L_192862:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192863
L_192866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_192867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192867
.p2align 0x4
.long 0x4EB
L_192867:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_192863:
	movq 0x38(%rbp),%r15
	movq $0x2B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x533D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq (globalObjptr+0x1430)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0xFCF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28D3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_459322
L_192864:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_192691
.p2align 0x4
L_459322:
L_192865:
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_192754
.p2align 0x4
.long 0x67A
L_192694:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192695
L_192840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_192841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192841
.p2align 0x4
.long 0x8A7
L_192841:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_192695:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq $0x45,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x50(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x47,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	addq $0x18,%r12
	movq %r11,0x8(%r10)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r9
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r10,0x0(%r8)
	movq %r13,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r13)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r10,0x0(%r14)
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r10
	movq %r10,0x58(%rbp)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x53,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x108D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq $0x1,0x0(%r9)
	movq $0x13FF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x60(%rbp)
	movq %r15,0x0(%r8)
	movq %r9,0x8(%r8)
	movq %r10,0x10(%r8)
	movq %r13,0x18(%r8)
	addq $0x28,%r12
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_459340
L_192697:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_459339
L_192698:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x48(%rbp)
	movl $0x0,0x68(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_192700:
	movq 0x48(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_459338
L_192826:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCCC,%r11
	jne L_459337
L_192827:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x30)(%rip)
	je L_459332
L_192701:
	movl 0x68(%rbp),%r13d
	incl %r13d
	movl %r13d,0x48(%rbp)
	jo L_192668
L_192702:
	cmpq $0x1,%r15
	je L_459326
L_192703:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x68(%rbp)
	movq %r14,0x48(%rbp)
	movq (localObjptr+0x30)(%rip),%r14
	jmp L_192700
.p2align 0x4
L_459326:
L_192704:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192705
L_192824:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_192825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192825
.p2align 0x4
.long 0x85F
L_192825:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_192705:
	movl 0x48(%rbp),%ecx
L_192706:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_459329
L_192708:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_192710
L_192823:
	movl %ecx,0x0(%r15)
L_192710:
	movq $0x1999,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_192713
L_192711:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_192693
.p2align 0x4
L_459329:
L_192707:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459332:
L_192829:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192830
L_192837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_192838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192838
.p2align 0x4
.long 0x28C5
L_192838:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_192830:
	movl 0x68(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_192707
L_192831:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_459334
L_192832:
	movq 0x48(%rbp),%r15
L_192833:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_192713
L_192834:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_192693
.p2align 0x4
L_459334:
L_192836:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x68(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x48(%rbp),%r15
	jmp L_192833
.p2align 0x4
L_459337:
	movq %r14,(localObjptr+0x30)(%rip)
	jmp L_192701
.p2align 0x4
L_459338:
	movq %r14,(localObjptr+0x30)(%rip)
	jmp L_192701
.p2align 0x4
L_459339:
L_192839:
	xorl %ecx,%ecx
	jmp L_192706
.p2align 0x4
L_459340:
L_192696:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8A6
L_192716:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192717
L_192820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_192821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192821
.p2align 0x4
.long 0x9E0
L_192821:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_192717:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x18(%r15),%r11
	movl 0x0(%r11),%r10d
	movl %r10d,0x60(%rbp)
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x68(%rbp)
	cmpq $0x1,%r10
	je L_459345
L_192718:
	movl 0x0(%r13),%r15d
	testl %r15d,%r15d
	jz L_192720
L_192818:
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
L_192720:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_459342
L_192721:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_192722:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_192723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1868
.p2align 0x4
L_459342:
L_192728:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_459343
L_192729:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_192715
.p2align 0x4
L_459343:
L_192730:
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_192731
.p2align 0x4
L_459345:
L_192811:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB65
L_192734:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192735
L_192802:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_192803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192803
.p2align 0x4
.long 0x85C
L_192803:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_192735:
	movq 0x48(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_192738
L_192736:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_192733
.p2align 0x4
.long 0x1576
L_192750:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192751
L_192794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_192795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192795
.p2align 0x4
.long 0x180C
L_192795:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_192751:
	movq $0xFCF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28D3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_459349
L_192752:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_192691
.p2align 0x4
L_459349:
L_192753:
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_192754
.p2align 0x4
.long 0x1125
L_192664:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r14),%r13
	movl 0x28(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_192667
L_192665:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_192663
.p2align 0x4
.long 0x28C3
L_192680:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192681
L_192877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_192878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192878
.p2align 0x4
.long 0x73D
L_192878:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_192681:
	movq 0x30(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x18(%r14),%r13
	movl 0x38(%rbp),%r11d
	cmpl %r11d,0x0(%r13)
	je L_459353
L_192682:
	movl $0x1,0x0(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_192685
L_192683:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_192679
.p2align 0x4
L_459353:
L_192874:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_192685
L_192875:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_192679
.p2align 0x4
.long 0x28C4
L_192723:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192724
L_192815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_192816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192816
.p2align 0x4
.long 0x10D4
L_192816:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_192724:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x10(%r14),%r13
	movq 0x18(%r14),%r11
	movl 0x60(%rbp),%r10d
	cmpl %r10d,0x0(%r11)
	jne L_459360
L_192805:
	movl 0x0(%r13),%r14d
	testl %r14d,%r14d
	jnz L_459358
L_192806:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_192811
L_192807:
	movq 0x68(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r13,0x10(%r10)
	movq 0x0(%r15),%r14
	movq $0x261B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_192728
L_192808:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_192722
.p2align 0x4
L_459358:
L_192812:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_192728
L_192813:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_192722
.p2align 0x4
L_459360:
L_192725:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_192728
L_192726:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_192722
.text
.p2align 0x4
.globl setClass_0
.hidden setClass_0
setClass_0:
L_192891:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_192892
L_192986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_192987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192987
.p2align 0x4
.long 0x4DE
L_192987:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_192892:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r13d
	movl %r13d,0x40(%rbp)
	incl %r13d
	jo L_459373
L_192894:
	movl %r13d,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x44(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_192896
L_192897:
	cmpl $0x0,%r13d
	jl L_192946
L_192898:
	movl $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_2030:
	movl 0x48(%rbp),%r15d
	cmpl 0x44(%rbp),%r15d
	jnl L_459364
L_192948:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x30(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq 0x20(%rbp),%r15
	cmpq 0x8(%r15),%r13
	jne L_459363
.p2align 0x4,,0x7
L_192983:
	incl 0x48(%rbp)
	jmp loop_2030
.p2align 0x4
L_459363:
L_192949:
	movq %r13,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_192950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_459364:
L_192899:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x30(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_192896
L_192901:
	cmpl $0x0,%r11d
	jl L_192946
L_192902:
	movl $0x0,0x34(%rbp)
loop_2031:
	movl 0x30(%rbp),%r15d
	cmpl %r15d,0x34(%rbp)
	jl L_459365
L_192903:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459365:
L_192904:
	movslq 0x34(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x40(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movl %r14d,0x50(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_459368
L_192906:
	cmpl $0x0,%r14d
	jl L_459367
L_192907:
	movl $0x0,0x54(%rbp)
loop_2032:
	movl 0x50(%rbp),%r15d
	cmpl %r15d,0x54(%rbp)
	jl L_459366
L_192908:
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x48,%rbp
	leaq (L_192909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setClass_0
.p2align 0x4
L_459366:
L_192910:
	movslq 0x54(%rbp),%r15
	salq $0x4,%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_192911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_459367:
L_192946:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459368:
L_192896:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459373:
L_192893:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1DC7
L_192950:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	andq $0x1,%r15
	jnz L_459375
L_192951:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_192952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_459375:
L_192980:
	movq 0x50(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x10(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_459376
L_192982:
	movl 0x40(%rbp),%r13d
	movl %r13d,0x0(%r14,%r15,4)
	jmp L_192983
.p2align 0x4
L_459376:
L_192943:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8A4
L_192909:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	incl 0x34(%rbp)
	jmp loop_2031
.p2align 0x4
.long 0x28C6
L_192911:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	andq $0x1,%r15
	jnz L_459377
L_192912:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_192913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_459377:
L_192941:
	movq 0x58(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x8(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_192943
L_192944:
	movl $0x1,0x0(%r14,%r15,4)
	incl 0x54(%rbp)
	jmp loop_2032
.p2align 0x4
.long 0x1
L_192952:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_192953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_192913:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_192914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_192953:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF3D8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_192954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_192914:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF3D8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_192915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_192954:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_192955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_192915:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_192916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_192955:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192956
L_192978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_192979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192979
.p2align 0x4
.long 0x4AE
L_192979:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_192956:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_192957:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_192893
L_192958:
	cmpq $0x1,%r14
	je L_459379
L_192959:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_192957
.p2align 0x4
L_459379:
L_192960:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192961
L_192976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_192977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192977
.p2align 0x4
.long 0x4E6
L_192977:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_192961:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_459380
L_192962:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_286:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_459380:
L_192975:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_286
.p2align 0x4
.long 0x51E
L_192916:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192917
L_192939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_192940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192940
.p2align 0x4
.long 0x4AE
L_192940:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_192917:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_192918:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_192893
L_192919:
	cmpq $0x1,%r14
	je L_459384
L_192920:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_192918
.p2align 0x4
L_459384:
L_192921:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192922
L_192937:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_192938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192938
.p2align 0x4
.long 0x4E6
L_192938:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_192922:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_459385
L_192923:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_285:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_459385:
L_192936:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_285
.p2align 0x4
.long 0x1
rev_284:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_459391
L_192963:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_192964:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459390
.p2align 0x4,,0x7
L_192965:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_459389
L_192966:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_192964
.p2align 0x4
L_459389:
L_192968:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_459390:
L_192972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_192973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192973
.p2align 0x4
.long 0x45B
L_192973:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_192965
.p2align 0x4
L_459391:
L_192974:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_192968
.p2align 0x4
.long 0x1
rev_283:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_459394
L_192924:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_192925:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459393
.p2align 0x4,,0x7
L_192926:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_459392
L_192927:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_192925
.p2align 0x4
L_459392:
L_192929:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_459393:
L_192933:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_192934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192934
.p2align 0x4
.long 0x45B
L_192934:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_192926
.p2align 0x4
L_459394:
L_192935:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_192929
.p2align 0x4
.long 0x1
bug_479:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192969
L_192970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_192971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192971
.p2align 0x4
.long 0x451
L_192971:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_192969:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_478:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_192930
L_192931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_192932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192932
.p2align 0x4
.long 0x451
L_192932:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_192930:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1848
.hidden x_1848
x_1848:
L_192988:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x360(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_195295
L_192989:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459437
L_192990:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x368(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x370(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x378(%rbp)
	movq 0x18(%r15),%r14
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x47B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x390(%rbp)
	movq %r15,0x388(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x187F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x398(%rbp)
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r10
	movq $0x47D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x58,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r10,0x8(%r15)
	movq %r10,0x3A0(%rbp)
	movq 0x48(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x20(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x28(%r15)
	movq %r11,0x30(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x38(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x40(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x48(%r15)
	movq $0x491,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r15,0x3A8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r13,0x3B0(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x47B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x3C0(%rbp)
	movq %r15,0x3B8(%rbp)
	movq $0x4D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x3D0(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x380(%rbp)
	jne L_192992
L_192993:
	testq %rdx,%rdx
	jz L_459435
L_192994:
	cmpq $0x7FFFFFFF,%rdx
	ja L_193090
L_192995:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1691,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3E0,%rbp
	leaq (L_192996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_192996
.p2align 0x4
.long 0x28C7
L_192996:
	addq $0xFFFFFFFFFFFFFC20,%rbp
	movq %rax,0x18(%rbp)
L_192997:
	movq $0x0,0x3D8(%rbp)
.p2align 0x4,,0x7
loop_2033:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459433
.p2align 0x4,,0x7
L_192998:
	movq 0x3D8(%rbp),%r15
	cmpq 0x3D0(%rbp),%r15
	jnl L_459432
L_195216:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x380(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x3E0(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x3E8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x3F0(%rbp)
	cmpq %r15,%r11
	jne L_192992
L_195218:
	testq %r11,%r11
	jnz L_459429
L_195290:
	movq (globalObjptr+0x7440)(%rip),%r15
	movq %r15,0x3F8(%rbp)
.p2align 0x4,,0x7
L_195222:
	movq $0x0,0x400(%rbp)
loop_2091:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459428
.p2align 0x4,,0x7
L_195223:
	movq 0x3F0(%rbp),%r15
	cmpq %r15,0x400(%rbp)
	jl L_459426
L_195224:
	movq 0x3F8(%rbp),%r15
	movq $0x4D3,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF18)(%rip),%r14
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x4D1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x48F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x4453,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x30,%r12
	movq 0x390(%rbp),%r9
	movq %r9,0x0(%r10)
	movq 0x70(%rbp),%r9
	movq %r9,0x8(%r10)
	movq 0x3C8(%rbp),%r9
	movq %r9,0x10(%r10)
	movq %r15,0x18(%r10)
	movq %r13,0x20(%r10)
	movq $0x4C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq %r11,0x0(%r15)
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_459425
L_195225:
	movq 0x50(%rbp),%r10
	movq 0x0(%r10),%r14
	movq $0x21B5,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x8(%r9)
	addq $0x18,%r12
	movq %r15,0x0(%r9)
	movq %r10,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r14,1)
	movq %r9,0x0(%r10)
	movl $0x1,0x0(%r11)
	movq %r13,%r14
L_195226:
	movq $0x4E7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x3E8(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x3E0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x3F0(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_194420
L_195227:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_459423
L_195228:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_195230:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_195231
L_195276:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD99,%r13
	jne L_195231
L_195277:
	movq 0x0(%r14),%r13
	cmpq %r13,0x3B8(%rbp)
	je L_459418
L_195231:
	incl %ecx
	movl %ecx,0x244(%rbp)
	jo L_193140
L_195232:
	cmpq $0x1,%r15
	je L_459397
L_195233:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_195230
.p2align 0x4
L_459397:
L_195234:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459416
.p2align 0x4,,0x7
L_195235:
	movl 0x244(%rbp),%ecx
L_195236:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_194430
L_195237:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_195239
L_195273:
	movl %ecx,0x0(%r15)
L_195239:
	movq $0x1B33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x3B8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x3E8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x3F0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x3F8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x244(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_459413
L_195241:
	cmpl $0x0,%r13d
	jl L_459412
L_195242:
	movl $0x0,0x324(%rbp)
loop_2092:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459411
.p2align 0x4,,0x7
L_195243:
	movl 0x244(%rbp),%r15d
	cmpl %r15d,0x324(%rbp)
	jl L_459398
L_195244:
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x3D8(%rbp),%r14
	movq %r14,%r11
	imulq $0x18,%r11
	movq 0x3E0(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x18,%r11
	movq 0x3E8(%rbp),%r10
	movq %r10,0x8(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	imulq $0x18,%r13
	movq 0x3F8(%rbp),%r11
	movq %r11,0x10(%r15,%r13,1)
	incq %r14
	movq %r14,0x3D8(%rbp)
	jmp loop_2033
.p2align 0x4
L_459398:
L_195245:
	movslq 0x324(%rbp),%r15
	imulq $0x18,%r15
	movq 0x3F8(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r14
	movq $0x4CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1309,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x3F0(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x3E8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x10(%r14),%r13
	movq %r13,0x400(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_459410
L_195246:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_459409
L_195247:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_195249:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_195250
L_195262:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD97,%r13
	jne L_195250
L_195263:
	movq 0x388(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_459404
L_195250:
	incl %ecx
	movl %ecx,0x408(%rbp)
	jo L_459403
L_195251:
	cmpq $0x1,%r15
	je L_459399
L_195252:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_195249
.p2align 0x4
L_459399:
L_195253:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459402
.p2align 0x4,,0x7
L_195254:
	movl 0x408(%rbp),%ecx
L_195255:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_459401
L_195256:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_195258
L_195259:
	movl %ecx,0x0(%r15)
L_195258:
	movq $0x1B2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x388(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x3F0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x400(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	incl 0x324(%rbp)
	jmp loop_2092
.p2align 0x4
L_459401:
L_194430:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459402:
L_195260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x418,%rbp
	leaq (L_195261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195261
.p2align 0x4
.long 0x2A3F
L_195261:
	addq $0xFFFFFFFFFFFFFBE8,%rbp
	jmp L_195254
.p2align 0x4
L_459403:
L_193140:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459404:
L_195265:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_194430
L_195266:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_195136
L_195268:
	movl %ecx,0x0(%r15)
L_195136:
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459409:
L_195269:
	xorl %ecx,%ecx
	jmp L_195255
.p2align 0x4
L_459410:
L_194420:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459411:
L_195270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x408,%rbp
	leaq (L_195271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195271
.p2align 0x4
.long 0x2A40
L_195271:
	addq $0xFFFFFFFFFFFFFBF8,%rbp
	jmp L_195243
.p2align 0x4
L_459412:
L_193477:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4F8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459413:
L_192992:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459416:
L_195274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x408,%rbp
	leaq (L_195275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195275
.p2align 0x4
.long 0x2A41
L_195275:
	addq $0xFFFFFFFFFFFFFBF8,%rbp
	jmp L_195235
.p2align 0x4
L_459418:
L_195279:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_194430
L_195280:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_195136
L_195282:
	movl %ecx,0x0(%r15)
	jmp L_195136
.p2align 0x4
L_459423:
L_195283:
	xorl %ecx,%ecx
	jmp L_195236
.p2align 0x4
L_459425:
	movq %r13,%r14
	jmp L_195226
.p2align 0x4
L_459426:
L_195285:
	movq 0x400(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x3E8(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq (globalObjptr+0x7340)(%rip),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,%r9d
	incl %r11d
	jo L_193140
L_195286:
	movl %r11d,0x0(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r9d,0x0(%r13)
	addq $0x10,%r12
	movl $0x0,0x4(%r13)
	movq 0x3F8(%rbp),%r11
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r15,%r9
	imulq $0x18,%r9
	movq %r13,0x0(%r11,%r9,1)
	movq %r11,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r15,%r13
	imulq $0x18,%r13
	movq %r10,0x8(%r11,%r13,1)
	movq %r11,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r15,%r13
	imulq $0x18,%r13
	movq %r14,0x10(%r11,%r13,1)
	incq %r15
	movq %r15,0x400(%rbp)
	jmp loop_2091
.p2align 0x4
L_459428:
L_195287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x410,%rbp
	leaq (L_195288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195288
.p2align 0x4
.long 0x2A42
L_195288:
	addq $0xFFFFFFFFFFFFFBF0,%rbp
	jmp L_195223
.p2align 0x4
L_459429:
L_195219:
	movq 0x3F0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_459430
L_195220:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1697,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x400,%rbp
	leaq (L_195221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195221
.p2align 0x4
.long 0x2A3E
L_195221:
	addq $0xFFFFFFFFFFFFFC00,%rbp
	movq %rax,0x3F8(%rbp)
	jmp L_195222
.p2align 0x4
L_459430:
L_193090:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459432:
L_192999:
	movq 0x18(%rbp),%r14
	movq $0x1881,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x4B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x5C1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x78(%rbp)
	addq $0xE0,%r12
	movq $0x7FFFFFFF,0x0(%r11)
	movl $0x0,0x8(%r11)
	movl $0x0,0xC(%r11)
	movq 0x3C0(%rbp),%r10
	movq %r10,0x10(%r11)
	movq 0x3A8(%rbp),%r9
	movq %r9,0x18(%r11)
	movq 0xC0(%rbp),%r8
	movq %r8,0x20(%r11)
	movq 0xB8(%rbp),%rsp
	movq %rsp,0x28(%r11)
	movq 0x20(%rbp),%rsi
	movq %rsi,0x30(%r11)
	movq 0x28(%rbp),%rdi
	movq %rdi,0x38(%r11)
	movq 0x30(%rbp),%rdx
	movq %rdx,0x40(%r11)
	movq 0x10(%rbp),%rcx
	movq %rcx,0x48(%r11)
	movq 0xB0(%rbp),%rbx
	movq %rbx,0x50(%r11)
	movq 0x38(%rbp),%rax
	movq %rax,0x58(%r11)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%r11)
	movq 0x48(%rbp),%r10
	movq %r10,0x68(%r11)
	movq 0x3B0(%rbp),%r9
	movq %r9,0x70(%r11)
	movq 0x3A0(%rbp),%r8
	movq %r8,0x78(%r11)
	movq 0xA8(%rbp),%rsp
	movq %rsp,0x80(%r11)
	movq 0x390(%rbp),%rsi
	movq %rsi,0x88(%r11)
	movq 0xA0(%rbp),%rdi
	movq %rdi,0x90(%r11)
	movq %r14,0x98(%r11)
	movq 0x50(%rbp),%rdx
	movq %rdx,0xA0(%r11)
	movq (globalObjptr+0x5290)(%rip),%rcx
	movq %rcx,0xA8(%r11)
	movq 0x98(%rbp),%rbx
	movq %rbx,0xB0(%r11)
	movq 0x90(%rbp),%rax
	movq %rax,0xB8(%r11)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%r11)
	movq 0x80(%rbp),%r10
	movq %r10,0xC8(%r11)
	movq %r13,0xD0(%r11)
	movq $0x4459,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x10(%r11)
	addq $0xE0,%r12
	movq $0x7FFFFFFF,0x0(%r11)
	movl $0x0,0x8(%r11)
	movl $0x0,0xC(%r11)
	movq %r10,0x18(%r11)
	movq %r15,0x20(%r11)
	movq %rax,0x28(%r11)
	movq %rbx,0x30(%r11)
	movq %rcx,0x38(%r11)
	movq %rdx,0x40(%r11)
	movq %r14,0x48(%r11)
	movq %rdi,0x50(%r11)
	movq %rsi,0x58(%r11)
	movq %rsp,0x60(%r11)
	movq %r8,0x68(%r11)
	movq %r9,0x70(%r11)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%r11)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%r11)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%r11)
	movq 0xB0(%rbp),%r15
	movq %r15,0x90(%r11)
	movq 0x10(%rbp),%r15
	movq %r15,0x98(%r11)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%r11)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%r11)
	movq 0x20(%rbp),%r15
	movq %r15,0xB0(%r11)
	movq 0xB8(%rbp),%r15
	movq %r15,0xB8(%r11)
	movq 0xC0(%rbp),%r15
	movq %r15,0xC0(%r11)
	movq 0x3A8(%rbp),%r15
	movq %r15,0xC8(%r11)
	movq 0x3C0(%rbp),%r15
	movq %r15,0xD0(%r11)
	movq 0x3C8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0xC8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x380(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x388(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (L_193000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_459433:
L_195291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3E8,%rbp
	leaq (L_195292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195292
.p2align 0x4
.long 0x2A43
L_195292:
	addq $0xFFFFFFFFFFFFFC18,%rbp
	jmp L_192998
.p2align 0x4
L_459435:
L_195294:
	movq (globalObjptr+0x73F0)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_192997
.p2align 0x4
L_459437:
L_195295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x370,%rbp
	leaq (L_195296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195296
.p2align 0x4
.long 0x2A44
L_195296:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	jmp L_192990
.p2align 0x4
.long 0x28C8
L_193000:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193001
L_195214:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_195215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195215
.p2align 0x4
.long 0x2A3D
L_195215:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_193001:
	movslq 0x10(%rbp),%r15
	movq 0x388(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_459440
L_193004:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_459439
L_193005:
	movl 0x0(%r13),%r15d
	movl %r15d,0x3D8(%rbp)
	movq $0x1E47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3D0(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3D0,%rbp
	leaq (L_193006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_459439:
L_193521:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459440:
L_193003:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x28C9
L_193006:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_193007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1382
.p2align 0x4
.long 0x28CA
L_193007:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_193008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x28CA
L_193008:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_192992
L_193010:
	cmpl $0x0,%r13d
	jl L_193477
L_193011:
	movl $0x0,0x10(%rbp)
.p2align 0x4,,0x7
loop_2034:
	movl 0x10(%rbp),%r15d
	cmpl 0x20(%rbp),%r15d
	jnl L_459448
L_195192:
	movslq %r15d,%r14
	movq %r14,%r15
	imulq $0x18,%r15
	movq 0x18(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	movq %r11,0x28(%rbp)
	imulq $0x18,%r14
	movq 0x10(%r13,%r14,1),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x14(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_192992
L_195194:
	cmpl $0x0,%r13d
	jl L_193477
L_195195:
	movl $0x0,0x24(%rbp)
loop_2089:
	movl 0x14(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_459442
L_195196:
	incl 0x10(%rbp)
	jmp loop_2034
.p2align 0x4
L_459442:
L_195197:
	movslq 0x24(%rbp),%r15
	imulq $0x18,%r15
	movq 0x30(%rbp),%r14
	movq 0x10(%r14,%r15,1),%r13
	movq %r13,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x88(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_192992
L_195199:
	cmpl $0x0,%r14d
	jl L_193477
L_195200:
	movl $0x0,0x8C(%rbp)
.p2align 0x4,,0x7
loop_2090:
	movl 0x88(%rbp),%r15d
	cmpl %r15d,0x8C(%rbp)
	jl L_459443
L_195201:
	incl 0x24(%rbp)
	jmp loop_2089
.p2align 0x4
L_459443:
L_195202:
	movslq 0x8C(%rbp),%r15
	salq $0x4,%r15
	movq 0x50(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x3D0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_195203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_459448:
L_193012:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193013
L_195190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_195191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195191
.p2align 0x4
.long 0x2A3A
L_195191:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_193013:
	movq $0xC37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x40,%r12
	movq 0x3A0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x20(%r15)
	movq 0x68(%rbp),%r13
	movq %r13,0x28(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x30(%r15)
	movq $0x3265,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x3D0(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_193014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x2A3B
L_195203:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_195204
L_195208:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_195209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195209
.p2align 0x4
.long 0x2A3C
L_195209:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_195204:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x12FE,%r14
	jne L_195206
L_195205:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r11
	movq 0x0(%r11),%r15
	movq $0x21B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r14,0x0(%r11)
L_195206:
	incl 0x8C(%rbp)
	jmp loop_2090
.p2align 0x4
.long 0x28CB
L_193014:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193015
L_195188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_195189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195189
.p2align 0x4
.long 0x2A39
L_195189:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_193015:
	movq 0x378(%rbp),%r14
	cmpq $0x1,%r14
	je loop_3906
L_193016:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
L_193017:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x3D8(%rbp)
	movq $0x3507,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (L_193018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
loop_3906:
.p2align 0x4,,0x7
loop_2035:
	movq 0xE0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_459745
L_193024:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x10(%r11),%r8
	movq %r8,0x50(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movl $0x0,0x0(%r10)
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	movq %r9,0x30(%rbp)
	shrq $0x1,%r15
	cmpq $0x2226,%r15
	je L_459736
	cmpq $0x2227,%r15
	je L_459732
	cmpq $0x2228,%r15
	je L_459723
	cmpq $0x2229,%r15
	je L_459473
	cmpq $0x222A,%r15
	je L_459467
	cmpq $0x222B,%r15
	je L_459463
L_193025:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193026
L_193055:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_193056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193056
.p2align 0x4
.long 0x28CF
L_193056:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_193026:
	movq 0x30(%rbp),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r11),%r10
	movq 0x0(%r10),%r9
	movq 0x8(%r9),%r13
	cmpq $0x1,%r13
	je L_459461
L_193027:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x10D5,%r11
	je L_459460
	cmpq $0x10D6,%r11
	je L_459459
	cmpq $0x10D7,%r11
	je L_459458
	cmpq $0x10D8,%r11
	je L_459457
	cmpq $0x10D9,%r11
	je L_459454
L_193028:
	movq 0x8(%r13),%r11
	movq %r11,%r13
L_193029:
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq 0x8(%r14),%r15
	movq %r15,0x3D8(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_49+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_459454:
L_193049:
	movq 0x8(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0x10CE,%r13
	je L_459456
L_193051:
	movq 0x0(%r11),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x10C6,%r11
	je L_459455
L_193053:
	movq 0x8(%r13),%r11
	movq %r11,%r13
	jmp L_193029
.p2align 0x4
L_459455:
L_193052:
	movq 0x8(%r13),%r11
	movq %r11,%r13
	jmp L_193029
.p2align 0x4
L_459456:
L_193050:
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r13
	movq $0x4BB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq (globalWord64+0xFF0)(%rip),%r10
	movq %r10,0x0(%r11)
	movq %r11,%r13
	jmp L_193029
.p2align 0x4
L_459457:
L_193048:
	movq 0x0(%r13),%r11
	movq %r11,%r13
	jmp L_193029
.p2align 0x4
L_459458:
L_193047:
	movq 0x8(%r13),%r11
	movq %r11,%r13
	jmp L_193029
.p2align 0x4
L_459459:
L_193046:
	movq 0x8(%r13),%r11
	movq %r11,%r13
	jmp L_193029
.p2align 0x4
L_459460:
L_193045:
	movq 0x8(%r13),%r11
	movq %r11,%r13
	jmp L_193029
.p2align 0x4
L_459461:
L_193054:
	movq (globalObjptr+0x5290)(%rip),%r13
	jmp L_193029
.p2align 0x4
L_459463:
L_194080:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194081
L_194089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_194090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194090
.p2align 0x4
.long 0x28CF
L_194090:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_194081:
	movq 0x30(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r11),%r10
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0x10CE,%r11
	je L_459465
L_194086:
	movq 0x0(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_459464
L_194088:
	movq 0x8(%r11),%r11
	movq %r11,%r15
L_194083:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r14)
	movq 0x8(%r13),%r14
	movq %r14,0x3D8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_55+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_459464:
L_194087:
	movq 0x8(%r11),%r11
	movq %r11,%r15
	jmp L_194083
.p2align 0x4
L_459465:
L_194082:
	movq 0x0(%r15),%r11
	movq 0x8(%r11),%r10
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movq (globalWord64+0xFF0)(%rip),%r11
	movq %r11,0x0(%r15)
	jmp L_194083
.p2align 0x4
L_459467:
L_194066:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194067
L_194078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_194079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194079
.p2align 0x4
.long 0x28CF
L_194079:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_194067:
	movq 0x30(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r11),%r10
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x10D1,%r10
	je L_459471
	cmpq $0x10D2,%r10
	je L_459470
L_194068:
	movq 0x0(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	je L_459469
L_194073:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0x10C6,%r11
	je L_459468
L_194075:
	movq 0x8(%r15),%r11
	movq %r11,%r15
L_194070:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r14)
	movq 0x8(%r13),%r14
	movq %r14,0x3D8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_54+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_459468:
L_194074:
	movq 0x8(%r15),%r11
	movq %r11,%r15
	jmp L_194070
.p2align 0x4
L_459469:
L_194069:
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	movq $0x4BB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq (globalWord64+0xFF0)(%rip),%r10
	movq %r10,0x0(%r11)
	movq %r11,%r15
	jmp L_194070
.p2align 0x4
L_459470:
L_194077:
	movq 0x18(%r15),%r11
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x0,0x0(%r15)
	jmp L_194070
.p2align 0x4
L_459471:
L_194076:
	movq 0x8(%r15),%r11
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x0,0x0(%r15)
	jmp L_194070
.p2align 0x4
L_459473:
L_193114:
	movq 0x30(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq %r11,0x90(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x98(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq %r14,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0xC8(%rbp)
	cmpq %r15,%rdx
	movq %r13,0x88(%rbp)
	jne L_192992
L_193116:
	testq %rdx,%rdx
	jz L_459721
L_193117:
	cmpq $0x7FFFFFFF,%rdx
	ja L_193090
L_193118:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1693,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_193119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193119
.p2align 0x4
.long 0x28D3
L_193119:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,0x30(%rbp)
L_193120:
	movq $0x0,0xD0(%rbp)
.p2align 0x4,,0x7
loop_2037:
	movq 0xD0(%rbp),%r15
	cmpq 0xC8(%rbp),%r15
	jnl L_459480
L_194042:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x88(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0xD8(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x380(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq %r14,0x388(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x3A8(%rbp)
	cmpq %r11,%r15
	jne L_192992
L_194044:
	testq %r11,%r11
	jnz L_459477
L_194063:
	movq (globalObjptr+0x7408)(%rip),%r15
	movq %r15,0x3B0(%rbp)
.p2align 0x4,,0x7
L_194048:
	movq $0x0,0x3C8(%rbp)
.p2align 0x4,,0x7
loop_2069:
	movq 0x3A8(%rbp),%r15
	cmpq %r15,0x3C8(%rbp)
	jl L_459474
L_194049:
	movq 0x3B0(%rbp),%r15
	movq $0x171F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xD0(%rbp),%r13
	movq %r13,%r10
	imulq $0x18,%r10
	movq 0xD8(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x18,%r10
	movq 0x380(%rbp),%r9
	movq %r9,0x8(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	imulq $0x18,%r11
	movq %r15,0x10(%r14,%r11,1)
	incq %r13
	movq %r13,0xD0(%rbp)
	jmp loop_2037
.p2align 0x4
L_459474:
L_194050:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194051
L_194060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D8,%rbp
	leaq (L_194061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194061
.p2align 0x4
.long 0x2946
L_194061:
	addq $0xFFFFFFFFFFFFFC28,%rbp
L_194051:
	movq 0x3C8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x388(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	movl %r11d,0x24(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x3D0(%rbp)
	movq 0x90(%rbp),%r15
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_459475
L_194052:
	movq 0xD0(%r13),%r15
	movq 0xC8(%r13),%r11
	movq 0xC0(%r13),%r10
	movq 0xB8(%r13),%r9
	movq 0xB0(%r13),%r8
	movq 0xA8(%r13),%rsp
	movq 0xA0(%r13),%rsi
	movq 0x98(%r13),%rdi
	movq 0x90(%r13),%rdx
	movq 0x88(%r13),%rcx
	movq 0x80(%r13),%rbx
	movq 0x78(%r13),%rax
	movq 0x70(%r13),%r14
	movq %rbp,(gcState+0x10)(%rip)
	movl 0x8(%r13),%ebp
	movq %r14,(localObjptr+0x68)(%rip)
	movq 0x68(%r13),%r14
	movq %r14,(localObjptr+0x70)(%rip)
	movq 0x60(%r13),%r14
	movq %r14,(localObjptr+0x78)(%rip)
	movq 0x0(%r13),%r14
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x58(%r13),%rax
	movq %rax,(localObjptr+0x80)(%rip)
	movq 0x50(%r13),%rax
	movq %rax,(localObjptr+0x88)(%rip)
	movq 0x48(%r13),%rax
	movq %rax,(localObjptr+0x90)(%rip)
	movq 0x40(%r13),%rax
	movq %rax,(localObjptr+0x98)(%rip)
	movq 0x38(%r13),%rax
	movq %rax,(localObjptr+0xA0)(%rip)
	movq 0x30(%r13),%rax
	movq %rax,(localObjptr+0xA8)(%rip)
	movq 0x28(%r13),%rax
	movq %rax,(localObjptr+0xB0)(%rip)
	movq 0x20(%r13),%rax
	movq %rax,(localObjptr+0xB8)(%rip)
	movq 0x18(%r13),%rax
	movq %rax,(localObjptr+0xC0)(%rip)
	movq 0x10(%r13),%rax
	movq $0x5C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movl %ebp,0x8(%r13)
	movq %r15,0x10(%r13)
	movq %r11,0x18(%r13)
	movq %r10,0x20(%r13)
	movq %r9,0x28(%r13)
	movq %r8,0x30(%r13)
	movq %rsp,0x38(%r13)
	movq %rsi,0x40(%r13)
	movq %rdi,0x48(%r13)
	movq %rdx,0x50(%r13)
	movq %rcx,0x58(%r13)
	movq %rbx,0x60(%r13)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0x68(%r13)
	movq (localObjptr+0x68)(%rip),%r15
	movq %r15,0x70(%r13)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0x78(%r13)
	movq (localObjptr+0x78)(%rip),%r15
	movq %r15,0x80(%r13)
	movq (localObjptr+0x80)(%rip),%r15
	movq %r15,0x88(%r13)
	movq (localObjptr+0x88)(%rip),%r15
	movq %r15,0x90(%r13)
	movq (localObjptr+0x90)(%rip),%r15
	movq %r15,0x98(%r13)
	movq (localObjptr+0x98)(%rip),%r15
	movq %r15,0xA0(%r13)
	movq (localObjptr+0xA0)(%rip),%r15
	movq %r15,0xA8(%r13)
	movq (localObjptr+0xA8)(%rip),%r15
	movq %r15,0xB0(%r13)
	movq (localObjptr+0xB0)(%rip),%r15
	movq %r15,0xB8(%r13)
	movq (localObjptr+0xB8)(%rip),%r15
	movq %r15,0xC0(%r13)
	movq (localObjptr+0xC0)(%rip),%r15
	movq %r15,0xC8(%r13)
	movq %rax,0xD0(%r13)
	addq $0xE0,%r12
	movl $0x0,0xC(%r13)
	movq (gcState+0x10)(%rip),%rbp
	movq %r13,0x3E8(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3E0,%rbp
	leaq (x_604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_459475:
L_194059:
	movq (globalObjptr+0x7410)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459477:
L_194045:
	movq 0x3A8(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_193090
L_194046:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1685,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_194047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194047
.p2align 0x4
.long 0x2943
L_194047:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,0x3B0(%rbp)
	jmp L_194048
.p2align 0x4
L_459480:
L_193121:
	movq 0x30(%rbp),%r14
	movq $0x189B,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x98(%rbp),%r13
	movq 0x110(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x108(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x100(%r13),%r10
	movq %r10,0xC8(%rbp)
	movq 0xF8(%r13),%r15
	movq %r15,0xD0(%rbp)
	movq 0xF0(%r13),%r15
	movq %r15,0xD8(%rbp)
	movq 0xE8(%r13),%r15
	movq %r15,0x380(%rbp)
	movq 0xE0(%r13),%r15
	movq %r15,0x388(%rbp)
	movq 0xD8(%r13),%r15
	movq %r15,0x3A8(%rbp)
	movq 0xC8(%r13),%r15
	movq %r15,0x3B0(%rbp)
	movq 0x70(%r13),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x60(%r13),%r15
	movq %r15,0x3D0(%rbp)
	movq 0x58(%r13),%r15
	movq %r15,0x3D8(%rbp)
	movq 0x50(%r13),%r15
	movq %r15,0x3E0(%rbp)
	movq 0x48(%r13),%r15
	movq %r15,0x3E8(%rbp)
	movq 0x40(%r13),%r15
	movq %r15,0x3F0(%rbp)
	movq 0x38(%r13),%r15
	movq %r15,0x3F8(%rbp)
	movq 0x30(%r13),%r15
	movq %r15,0x400(%rbp)
	movq 0x28(%r13),%r15
	movq %r15,0x408(%rbp)
	movq 0x20(%r13),%r15
	movq %r15,0x410(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x418(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r9
	cmpq %r15,%r9
	jne L_192992
L_193123:
	testl %r13d,%r13d
	jz L_459718
L_193124:
	cmpl $0x1,%r13d
	je L_459716
L_193125:
	cmpl $0x2,%r13d
	jne L_193127
L_194016:
	cmpq $0x0,%r15
	jna L_193003
L_194018:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r11)
	je L_194022
L_194019:
	cmpq %r13,0x10(%r10)
	je L_459709
L_193127:
	movq 0x388(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_193804
	cmpq $0x2,%r13
	je L_459481
L_193128:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	leaq L_194013(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_193129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1872
.p2align 0x4
L_459481:
L_194015:
	shrq $0x2,%r14
	movl %r14d,%ecx
fromIntForLength_1:
	movslq %ecx,%rdx
	movq %rdx,0x90(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_193090
L_193131:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x189D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193132
.p2align 0x4
.long 0x28D5
L_193132:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq %rax,0x98(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2038:
	cmpq 0x90(%rbp),%r15
	jnl L_459482
L_194011:
	movq 0x98(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2038
.p2align 0x4
L_459482:
L_193133:
	cmpl $0x0,0x24(%rbp)
	jl L_193477
L_193134:
	movq $0x1,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
	movl $0x0,0xD8(%rbp)
loop_2039:
	movl 0x24(%rbp),%r15d
	cmpl %r15d,0xD8(%rbp)
	jl L_459705
L_193135:
	movq 0x388(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_193804
	cmpq $0x2,%r13
	je L_459483
L_193136:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	leaq L_193967(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_193137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1872
.p2align 0x4
L_459483:
L_193969:
	shrq $0x2,%r14
	movl %r14d,%ecx
L_193139:
	decl %ecx
	jo L_193140
L_193141:
	cmpq $0x1,0xD0(%rbp)
	je L_459702
L_193142:
	movq 0xC8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl %ecx,0xC8(%rbp)
	movl $0x1,0x24(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
loop_2040:
	cmpq $0x1,0x30(%rbp)
	je L_459700
L_193143:
	movl 0xC8(%rbp),%r15d
	movslq %r15d,%r14
	cmpq 0x90(%rbp),%r14
	jnb L_193003
L_193145:
	movq 0x98(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0xD8(%rbp)
	cmpq $0x1,%r11
	jne L_459485
L_193960:
	decl %r15d
	jo L_193140
L_193961:
	movl %r15d,0xC8(%rbp)
	jmp loop_2040
.p2align 0x4
L_459485:
L_193146:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193147
L_193958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193959
.p2align 0x4
.long 0x2938
L_193959:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193147:
	movq 0xD8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x380(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x3A8(%rbp)
	movq 0x388(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x420(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_193804
	cmpq $0x2,%r13
	je L_459486
L_193148:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	leaq L_193955(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x430(%rbp)
	addq $0x430,%rbp
	leaq (L_193149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1872
.p2align 0x4
L_459486:
L_193957:
	shrq $0x2,%r14
	movl %r14d,%ecx
L_193152:
	subl 0xC8(%rbp),%ecx
	movl %ecx,0xCC(%rbp)
	jo L_193140
L_193153:
	movq 0x3B0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x420(%rbp)
	movq 0x0(%r15),%r14
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_459487
L_193154:
	movq %r14,0x428(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x428,%rbp
	leaq (L_193155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1873
.p2align 0x4
L_459487:
L_193901:
	movq 0x420(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_193804
L_193902:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x149C,%r13
	je L_459694
L_193904:
	movq 0x0(%r14),%r13
	movq %r13,0x428(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x206A,%r15
	je L_459693
L_193916:
	movq 0x8(%r13),%r15
	movq %r15,0x430(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x438(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x440(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_459692
	cmpq $0x2,%r13
	je L_459488
L_193917:
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	leaq L_193946(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x450(%rbp)
	addq $0x450,%rbp
	leaq (L_193918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1872
.p2align 0x4
L_459488:
L_193951:
	shrq $0x2,%r14
	movl %r14d,%ecx
L_193921:
	incl %ecx
	jo L_459691
L_193923:
	movslq %ecx,%rdx
	movq %rdx,0x430(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_459690
L_193924:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xABB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x448,%rbp
	leaq (L_193925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193925
.p2align 0x4
.long 0x2930
L_193925:
	addq $0xFFFFFFFFFFFFFBB8,%rbp
	movq %rax,0x440(%rbp)
	movq $0x0,0x448(%rbp)
.p2align 0x4,,0x7
loop_2066:
	movq 0x448(%rbp),%r14
	cmpq 0x430(%rbp),%r14
	jnl L_459490
L_193930:
	movl %r14d,%r13d
	movq 0x438(%rbp),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x450(%rbp)
	testl %r13d,%r13d
	jnz L_459489
L_193942:
	movq $0x3,%r15
.p2align 0x4,,0x7
L_193940:
	movq 0x440(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x448(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x448(%rbp)
	jmp loop_2066
.p2align 0x4
L_459489:
L_193931:
	movl %r13d,0x24(%rbp)
	movq $0x5,0x458(%rbp)
	movq $0x3,0x460(%rbp)
next_16:
	leaq L_193911(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x2,0x470(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x474(%rbp)
	addq $0x470,%rbp
	leaq (L_193932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_459490:
L_193926:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193927
L_193928:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x450,%rbp
	leaq (L_193929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193929
.p2align 0x4
.long 0x2931
L_193929:
	addq $0xFFFFFFFFFFFFFBB0,%rbp
L_193927:
	movq 0x440(%rbp),%r15
L_193908:
	movq $0x2939,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x420(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
L_193156:
	movslq 0xCC(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_193003
L_193158:
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x420(%rbp)
	movq %r13,%r15
	movq 0x30(%rbp),%r14
	andq %r14,%r15
	andq $0x1,%r15
	jz L_459686
L_193159:
	cmpq %r14,%r13
	jnl L_459493
L_193820:
	movq 0x380(%rbp),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_193821:
	incl %ecx
	jo L_193140
L_193822:
	cmpq $0x1,%r15
	je L_459491
L_193823:
	movq 0x8(%r15),%r15
	jmp L_193821
.p2align 0x4
L_459491:
L_193824:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x430(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x438(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x440(%rbp)
	addq $0x430,%rbp
	leaq (L_193825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_459493:
L_193161:
	movl 0xC8(%rbp),%ecx
	decl %ecx
	jo L_193140
L_193162:
	movq 0xD8(%rbp),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
loop_2041:
	cmpl $0x0,%ecx
	jl L_459498
L_193163:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %ecx,%r15
	cmpq 0x90(%rbp),%r15
	jnb L_193003
L_193165:
	movq 0x98(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_459496
L_193166:
	movq 0x0(%r13),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x380(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
L_193167:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459495
.p2align 0x4,,0x7
L_193168:
	movq $0x2603,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x380(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_459494
L_193169:
	movq %r15,0x380(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0xD8(%rbp)
	jmp L_193167
.p2align 0x4
L_459494:
L_193170:
	movq %r15,0x30(%rbp)
	movl 0x24(%rbp),%ecx
	jmp loop_2041
.p2align 0x4
L_459495:
L_193171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193172
.p2align 0x4
.long 0x28D9
L_193172:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_193168
.p2align 0x4
L_459496:
L_193173:
	movl 0x24(%rbp),%ecx
	jmp loop_2041
.p2align 0x4
L_459498:
L_193174:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193176
L_193818:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193819
.p2align 0x4
.long 0x2926
L_193819:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193176:
	movslq 0xC8(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x90(%rbp)
	cmpq $0x1,0xD0(%rbp)
	je L_459680
L_193177:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_459679
L_193178:
	movq 0x8(%r14),%r15
	movl $0x1,0x24(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_193179:
	incl %ecx
	movl %ecx,0x98(%rbp)
	jo L_193140
L_193180:
	cmpq $0x1,%r15
	je L_459499
L_193181:
	movq 0x8(%r15),%r15
	jmp L_193179
.p2align 0x4
L_459499:
L_193182:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193183
L_193808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193809
.p2align 0x4
.long 0x2926
L_193809:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193183:
	movl 0x98(%rbp),%ecx
L_193184:
	testl %ecx,%ecx
	jz L_459535
L_193185:
	movq 0x3D0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0xC8(%rbp)
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_459500
L_193186:
	movq %r14,0x428(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x428,%rbp
	leaq (L_193187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1873
.p2align 0x4
L_459500:
L_193752:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_459534
L_193753:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x149C,%r13
	je L_459533
L_193755:
	movq 0x0(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x206A,%r15
	je L_459532
L_193767:
	movq 0x8(%r13),%r15
	movq %r15,0x380(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x388(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x3A8(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_459531
	cmpq $0x2,%r13
	je L_459501
L_193768:
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	leaq L_193797(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_193769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1872
.p2align 0x4
L_459501:
L_193802:
	shrq $0x2,%r14
	movl %r14d,%ecx
L_193772:
	incl %ecx
	jo L_459530
L_193774:
	movslq %ecx,%rdx
	movq %rdx,0x380(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_459529
L_193775:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xABB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193776
.p2align 0x4
.long 0x291F
L_193776:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq %rax,0x3A8(%rbp)
	movq $0x0,0x3B0(%rbp)
.p2align 0x4,,0x7
loop_2063:
	movq 0x3B0(%rbp),%r14
	cmpq 0x380(%rbp),%r14
	jnl L_459503
L_193781:
	movl %r14d,%r13d
	movq 0x388(%rbp),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x3C8(%rbp)
	testl %r13d,%r13d
	jnz L_459502
L_193793:
	movq $0x3,%r15
.p2align 0x4,,0x7
L_193791:
	movq 0x3A8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x3B0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x3B0(%rbp)
	jmp loop_2063
.p2align 0x4
L_459502:
L_193782:
	movl %r13d,0x244(%rbp)
	movq $0x5,0x3D0(%rbp)
	movq $0x3,0x420(%rbp)
next_15:
	leaq L_193762(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x2,0x430(%rbp)
	movl 0x244(%rbp),%r15d
	movl %r15d,0x434(%rbp)
	addq $0x430,%rbp
	leaq (L_193783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_459503:
L_193777:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193778
L_193779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193780
.p2align 0x4
.long 0x2920
L_193780:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193778:
	movq 0x3A8(%rbp),%r15
L_193759:
	movq $0x2939,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x98(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
L_193188:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_192992
L_193190:
	decl %ecx
	jo L_193140
L_193191:
	movq $0x0,0x98(%rbp)
	xorl %r13d,%r13d
	movl %ecx,%ebx
	movl %r13d,%ecx
.p2align 0x4,,0x7
loop_2042:
	cmpl %ecx,%ebx
	jl L_459511
L_193192:
	movl %ebx,%r13d
	addl %ecx,%r13d
	jo L_193140
L_193193:
	movl %r13d,%r11d
	shrl $0x1F,%r11d
	addl %r11d,%r13d
	sarl $0x1,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jnb L_193003
L_193195:
	movq 0x0(%r15,%r11,8),%r10
	movq %r10,%r11
	movq 0xC8(%rbp),%r9
	andq %r9,%r11
	andq $0x1,%r11
	jz L_459507
L_193196:
	cmpq %r9,%r10
	jl L_459505
	xchgl %r13d,%ebx
L_193198:
	movl %ebx,%r13d
	decl %r13d
	jo L_193140
L_193199:
	movl %ebx,%r11d
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x98(%rbp)
	movl %r13d,%ebx
	jmp loop_2042
.p2align 0x4
L_459505:
	movl %ebx,%ecx
	movl %r13d,%ebx
L_193201:
	incl %ebx
	jo L_193140
	xchgl %ebx,%ecx
	jmp loop_2042
.p2align 0x4
L_459507:
L_193203:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r10,%rsi
	movq %r9,%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	movl %ecx,%r12d
	call IntInf_compare
L_193204:
	cmpl $0x0,%eax
	jg L_459508
	movq (gcState+0x0)(%rip),%r11
	movl %r12d,(localWord32+0x4)(%rip)
	movq %r11,%r12
	xchgl %r13d,%ebx
	movl (localWord32+0x4)(%rip),%ecx
	jmp L_193198
.p2align 0x4
L_459508:
	movq (gcState+0x0)(%rip),%r12
	movl %ebx,%ecx
	movl %r13d,%ebx
	jmp L_193201
.p2align 0x4
L_459511:
L_193207:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193208
L_193750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193751
.p2align 0x4
.long 0x28DB
L_193751:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193208:
	movq 0x98(%rbp),%r15
	andq $0x1,%r15
	jnz L_459512
L_193209:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5298)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459512:
L_193210:
	movq 0x98(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0xC8(%rbp)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_459524
L_193211:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_193212:
	incl %ecx
	movl %ecx,0x98(%rbp)
	jo L_193140
L_193213:
	cmpq $0x1,%r15
	je L_459513
L_193214:
	movq 0x8(%r15),%r15
	jmp L_193212
.p2align 0x4
L_459513:
L_193215:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193216
L_193747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193748
.p2align 0x4
.long 0x28DB
L_193748:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193216:
	movl 0x98(%rbp),%ecx
L_193217:
	movslq %ecx,%r15
	movq %r15,0x98(%rbp)
	testq %r15,%r15
	jz L_459521
L_193218:
	cmpq $0x7FFFFFFF,%r15
	ja L_193090
L_193219:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193220
L_193743:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193744
.p2align 0x4
.long 0x28DB
L_193744:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193220:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1601,%rcx
	movq 0x98(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193221
.p2align 0x4
.long 0x28DB
L_193221:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq %rax,0xD8(%rbp)
L_193222:
	xorl %ecx,%ecx
	movq 0x30(%rbp),%r15
	movq $0x0,0x30(%rbp)
loop_2043:
	movq 0x98(%rbp),%r14
	cmpq %r14,0x30(%rbp)
	jnl L_459517
L_193685:
	cmpq $0x1,%r15
	je L_459516
L_193686:
	movq 0x8(%r15),%r14
	movq %r14,0x380(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x388(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x3A8(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x3B0(%rbp)
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jz L_193689
L_193739:
	movl %ecx,%r15d
	andl $0x3,%r15d
	jnz L_193689
L_193741:
	incl %ecx
L_193689:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x244(%rbp)
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x3C8(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xC8(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x430(%rbp)
	addq $0x428,%rbp
	leaq (L_193690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_459516:
L_193587:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4B0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459517:
L_193223:
	movq 0xD8(%rbp),%r15
	movq $0xC3B,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x30(%rbp)
	cmpq %r14,%r11
	jne L_192992
L_193225:
	movl %r13d,0x430(%rbp)
	movq $0x37DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x428(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x428,%rbp
	leaq (L_193226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_459521:
L_193746:
	movq (globalObjptr+0x52A8)(%rip),%r14
	movq %r14,0xD8(%rbp)
	jmp L_193222
.p2align 0x4
L_459524:
L_193749:
	xorl %ecx,%ecx
	jmp L_193217
.p2align 0x4
L_459529:
L_193794:
	movq $0x5,%r15
L_193764:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x293B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459530:
L_193773:
	movq $0x3,%r15
	jmp L_193764
.p2align 0x4
L_459531:
L_193801:
	movq $0x12,%r13
	xchgq %r13,%r15
	jmp L_193764
.p2align 0x4
L_459532:
L_193756:
	movq 0x18(%r13),%r15
	movq %r15,0x428(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x430(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x438(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x440(%rbp)
	leaq L_193762(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x428,%rbp
	leaq (L_193757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1874
.p2align 0x4
L_459533:
L_193754:
	movq 0x0(%r14),%r14
	xchgq %r14,%r15
	jmp L_193188
.p2align 0x4
L_459534:
L_193804:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459535:
L_193805:
	movq (globalObjptr+0xF18)(%rip),%r14
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x88(%rbp),%r11
	cmpq $0x1,%r11
	je L_459584
L_193806:
	movq 0x8(%r11),%r15
	xorl %ecx,%ecx
	movq $0x1,%r13
.p2align 0x4,,0x7
L_193246:
	incl %ecx
	jo L_193140
L_193247:
	cmpq $0x1,%r15
	je L_459536
L_193248:
	movq 0x8(%r15),%r15
	jmp L_193246
.p2align 0x4
L_459536:
L_193249:
	movq %r14,0x30(%rbp)
	movq %r13,0x90(%rbp)
L_193250:
	movslq %ecx,%rdx
	movq %rdx,0x98(%rbp)
	testq %rdx,%rdx
	jz L_459582
L_193251:
	cmpq $0x7FFFFFFF,%rdx
	ja L_193090
L_193252:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1603,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193253
.p2align 0x4
.long 0x28DF
L_193253:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq %rax,0xC8(%rbp)
L_193254:
	movq 0x88(%rbp),%r15
	movq $0x0,0x88(%rbp)
loop_2046:
	movq 0x98(%rbp),%r14
	cmpq %r14,0x88(%rbp)
	jnl L_459538
L_193593:
	cmpq $0x1,%r15
	je L_193587
L_193594:
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x380(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x388(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x3A8(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x3B0(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x400(%rbp),%r15
	movq %r15,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_193595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1872
.p2align 0x4
L_459538:
L_193255:
	movq 0xC8(%rbp),%r14
	movq $0xAE5,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_459580
L_193256:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_193257:
	incl %ecx
	jo L_193140
L_193258:
	cmpq $0x1,%r15
	je L_459539
L_193259:
	movq 0x8(%r15),%r15
	jmp L_193257
.p2align 0x4
L_459539:
L_193260:
L_193261:
	movslq %ecx,%rdx
	movq %rdx,0x88(%rbp)
	testq %rdx,%rdx
	jz L_459578
L_193262:
	cmpq $0x7FFFFFFF,%rdx
	ja L_193090
L_193263:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1603,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193264
.p2align 0x4
.long 0x28E0
L_193264:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq %rax,0x98(%rbp)
L_193265:
	movq $0x0,0xD8(%rbp)
.p2align 0x4,,0x7
loop_2047:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459576
.p2align 0x4,,0x7
L_193266:
	movq 0x88(%rbp),%r15
	cmpq %r15,0xD8(%rbp)
	jnl L_459554
L_193549:
	movq 0xD0(%rbp),%r15
	cmpq $0x1,%r15
	je L_193587
L_193550:
	movq 0x8(%r15),%r14
	movq %r14,0x380(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq %r11,0x388(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x3A8(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	jne L_459541
L_193551:
	movq 0x0(%r13),%r15
	movq %r15,0xD0(%rbp)
.p2align 0x4,,0x7
L_193552:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459540
.p2align 0x4,,0x7
L_193553:
	movq $0x1275,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x3A8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xD8(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xD8(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0xD0(%rbp)
	jmp loop_2047
.p2align 0x4
L_459540:
L_193554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193555
.p2align 0x4
.long 0x28F7
L_193555:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_193553
.p2align 0x4
L_459541:
L_193556:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x3B0(%rbp)
	movq 0x418(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x3C8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x3D0(%rbp)
	cmpq %r14,%rdx
	movq %r15,0xD0(%rbp)
	jne L_192992
L_193558:
	testq %rdx,%rdx
	jz L_459551
L_193559:
	cmpq $0x7FFFFFFF,%rdx
	ja L_193090
L_193560:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193561
.p2align 0x4
.long 0x28F8
L_193561:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq %rax,0x3D8(%rbp)
L_193562:
	movq $0x0,0x3E0(%rbp)
.p2align 0x4,,0x7
loop_2057:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459549
.p2align 0x4,,0x7
L_193563:
	movq 0x3E0(%rbp),%r15
	cmpq 0x3D0(%rbp),%r15
	jnl L_459546
L_193572:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xD0(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	cmpq $0x1,%r11
	je L_459545
L_193573:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10C8,%r15
	je L_459543
	cmpq $0x10CB,%r15
	je L_459542
L_193574:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5260)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459542:
L_193580:
	movq 0x0(%r11),%r15
	movq $0x2195,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1,0x0(%r13)
	movq %r14,%r15
	movq %r13,%r14
L_193578:
	movq 0x3D8(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x3E0(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r14,0x0(%r13,%r9,1)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,%r14
	salq $0x4,%r14
	movq %r15,0x8(%r13,%r14,1)
	incq %r11
	movq %r11,0x3E0(%rbp)
	jmp loop_2057
.p2align 0x4
L_459543:
L_193575:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r13
	movq $0x1147,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x3B0(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_459544
L_193579:
	movq 0x8(%r10),%r13
	movq %r11,%r15
L_193577:
	movq 0x8(%r13),%r11
	movq $0x2193,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movq $0x1,0x0(%r13)
	movq %r14,%r15
	movq %r13,%r14
	jmp L_193578
.p2align 0x4
L_459544:
L_193576:
	movq 0x8(%r10),%r13
	movq %r11,%r15
	jmp L_193577
.p2align 0x4
L_459545:
L_193581:
	movq $0x1,%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_193578
.p2align 0x4
L_459546:
L_193564:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193565
L_193570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193571
.p2align 0x4
.long 0x28FB
L_193571:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193565:
	movq 0x3D8(%rbp),%r15
	movq $0xAE7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x114F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq $0x1,0x0(%r15)
	movq 0x3B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FB,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193566
.p2align 0x4
.long 0x28F9
L_193566:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2058:
	cmpq $0x1,%r15
	jnl L_459547
L_193569:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xD0(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2058
.p2align 0x4
L_459547:
L_193567:
	movq $0xB41,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x440(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x388(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x430(%rbp)
	movl $0x0,0x438(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x448(%rbp)
	addq $0x428,%rbp
	leaq (L_193568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1290
.p2align 0x4
L_459549:
L_193582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193583
.p2align 0x4
.long 0x28FC
L_193583:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_193563
.p2align 0x4
L_459551:
L_193585:
	movq (globalObjptr+0x5258)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	jmp L_193562
.p2align 0x4
L_459554:
L_193267:
	movq 0x98(%rbp),%r15
	movq $0xAE5,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x260B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x88(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq $0x1,0xC8(%rbp)
.p2align 0x4,,0x7
L_193268:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459575
.p2align 0x4,,0x7
L_193269:
	movq 0x98(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF75,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2969,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_459555
L_193270:
	movq %r15,0xC8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_193268
.p2align 0x4
L_459555:
L_193271:
	movq %r13,0x98(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq $0x1,0xC8(%rbp)
.p2align 0x4,,0x7
L_193272:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459574
.p2align 0x4,,0x7
L_193273:
	movq $0x2969,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_459556
L_193274:
	movq %r15,0xC8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_193272
.p2align 0x4
L_459556:
L_193275:
	movq 0xC8(%rbp),%r13
	cmpq $0x1,%r13
	je L_459568
L_193276:
	movq 0x98(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_193277:
	addq 0x0(%r14),%r15
	movq %r15,0x88(%rbp)
	cmpq $0x1,%r13
	je L_459557
L_193278:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_193277
.p2align 0x4
L_459557:
L_193279:
	testq %r15,%r15
	jz L_459567
L_193280:
	cmpq $0x7FFFFFFF,%r15
	ja L_193090
L_193281:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1603,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x420,%rbp
	leaq (L_193282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193282
.p2align 0x4
.long 0x28E1
L_193282:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	movq %rax,0xD0(%rbp)
L_193283:
	movq 0xC8(%rbp),%r11
	movq 0x98(%rbp),%r13
	xorq %r14,%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2048:
	cmpq 0x88(%rbp),%r15
	jnl L_459560
.p2align 0x4,,0x7
loop_2055:
	cmpq 0x0(%r13),%r14
	jl L_459559
L_193525:
	cmpq $0x1,%r11
	je L_459558
L_193526:
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r11
	xorq %r14,%r14
	movq %r10,%r13
	jmp loop_2055
.p2align 0x4
L_459558:
L_193482:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5B8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459559:
L_193528:
	movq 0x8(%r13),%r10
	movq 0x0(%r10,%r14,8),%r9
	incq %r14
	movq 0xD0(%rbp),%r10
	movq %r10,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r9,0x0(%r10,%r15,8)
	incq %r15
	jmp loop_2048
.p2align 0x4
L_459560:
L_193284:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193285
L_193522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x420,%rbp
	leaq (L_193523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193523
.p2align 0x4
.long 0x28F3
L_193523:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
L_193285:
	movq 0xD0(%rbp),%r15
	movq $0xAE5,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x88(%rbp)
L_193286:
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x98(%rbp)
	cmpq %r11,%r14
	jne L_192992
L_193288:
	cmpl $0x1,%r13d
	je L_459561
L_193289:
	movl %r13d,0x428(%rbp)
	movq $0x37C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x420(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x420,%rbp
	leaq (L_193290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_459561:
L_193511:
	cmpq $0x0,%r14
	jna L_193003
L_193513:
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_193521
L_193514:
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movl 0x0(%r15),%r9d
	movq $0x1271,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	movl %r9d,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x28,%r12
	movl $0x0,0x4(%r15)
	movq %r10,0x18(%r15)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x8(%r10),%r15
	movq $0x37D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x420(%rbp)
	addq $0x18,%r12
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x2,0x428(%rbp)
	addq $0x420,%rbp
	leaq (L_193515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_459567:
L_193530:
	movq (globalObjptr+0x52D8)(%rip),%r14
	movq %r14,0xD0(%rbp)
	jmp L_193283
.p2align 0x4
L_459568:
L_193531:
	movq 0x98(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0xC8(%rbp)
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r14)
	movq %r14,0x88(%rbp)
	je L_193286
L_193532:
	testq %r13,%r13
	jz L_459572
L_193533:
	cmpq $0x7FFFFFFF,%r13
	ja L_193090
L_193534:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1603,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x420,%rbp
	leaq (L_193535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193535
.p2align 0x4
.long 0x28F4
L_193535:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	movq %rax,0x98(%rbp)
L_193536:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2056:
	cmpq 0xC8(%rbp),%r15
	jnl L_459569
L_193541:
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x98(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2056
.p2align 0x4
L_459569:
L_193537:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193538
L_193539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x420,%rbp
	leaq (L_193540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193540
.p2align 0x4
.long 0x28F5
L_193540:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
L_193538:
	movq 0x98(%rbp),%r15
	movq $0xAE5,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x88(%rbp)
	jmp L_193286
.p2align 0x4
L_459572:
L_193543:
	movq (globalObjptr+0x52E0)(%rip),%r15
	movq %r15,0x98(%rbp)
	jmp L_193536
.p2align 0x4
L_459574:
L_193545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x420,%rbp
	leaq (L_193546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193546
.p2align 0x4
.long 0x28F6
L_193546:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	jmp L_193273
.p2align 0x4
L_459575:
L_193547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x420,%rbp
	leaq (L_193548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193548
.p2align 0x4
.long 0x28F6
L_193548:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	jmp L_193269
.p2align 0x4
L_459576:
L_193588:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193589
.p2align 0x4
.long 0x28FD
L_193589:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_193266
.p2align 0x4
L_459578:
L_193591:
	movq (globalObjptr+0x52D0)(%rip),%r15
	movq %r15,0x98(%rbp)
	jmp L_193265
.p2align 0x4
L_459580:
L_193592:
	xorl %ecx,%ecx
	jmp L_193261
.p2align 0x4
L_459582:
L_193630:
	movq (globalObjptr+0x52C8)(%rip),%r15
	movq %r15,0xC8(%rbp)
	jmp L_193254
.p2align 0x4
L_459584:
L_193807:
	movq %r14,0x30(%rbp)
	movq $0x1,%r15
L_193632:
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_459593
L_193633:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x98(%rbp)
	cmpq $0x1,0x8(%r14)
	je L_459585
L_193634:
	movq %r15,0x90(%rbp)
	xorl %ecx,%ecx
	jmp L_193250
.p2align 0x4
L_459585:
L_193635:
	movq 0x90(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10CF,%r13
	je L_459586
L_193636:
	movq %r15,0x90(%rbp)
	xorl %ecx,%ecx
	jmp L_193250
.p2align 0x4
L_459586:
L_193637:
	movq 0x90(%rbp),%r11
	movq 0x0(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10C6,%r13
	je L_459591
L_193659:
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r10
	movq %r10,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	jne L_459590
L_193661:
	shrq $0x1,%r10
	movl %r10d,%ecx
L_193641:
	testl %ecx,%ecx
	jz L_459588
L_193645:
	cmpq $0x1,%r15
	je L_193521
L_193646:
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r10
	movq 0x8(%r15),%r9
	movl 0x0(%r15),%r8d
	movq $0x1271,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	movl %r8d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r10,0x10(%r15)
	addq $0x28,%r12
	movl $0x0,0x4(%r15)
	movq %r9,0x18(%r15)
	movq $0x1277,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%r9),%r15
	movq $0x37D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x420(%rbp)
	addq $0x18,%r12
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x2,0x428(%rbp)
	addq $0x420,%rbp
	leaq (L_193647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_459588:
L_193642:
	movq 0x88(%rbp),%r11
	cmpq $0x1,%r11
	je L_459589
L_193643:
	movq 0x8(%r11),%r10
	xorl %ecx,%ecx
	movq 0x30(%rbp),%r14
	movq %r15,%r13
	movq %r10,%r15
	jmp L_193246
.p2align 0x4
L_459589:
L_193644:
	movq %r15,0x90(%rbp)
	xorl %ecx,%ecx
	jmp L_193250
.p2align 0x4
L_459590:
L_193660:
	movq %r15,0x90(%rbp)
	xorl %ecx,%ecx
	jmp L_193250
.p2align 0x4
L_459591:
L_193638:
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r10
	movq %r10,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	jne L_459592
L_193640:
	shrq $0x1,%r10
	movl %r10d,%ecx
	jmp L_193641
.p2align 0x4
L_459592:
L_193639:
	movq %r15,0x90(%rbp)
	xorl %ecx,%ecx
	jmp L_193250
.p2align 0x4
L_459593:
L_193662:
	cmpq $0x1,%r15
	je L_193521
L_193663:
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movl 0x0(%r15),%r9d
	movq $0x21AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r9d,0x0(%r15)
	movq %r10,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF18)(%rip),%r13
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r13)
	movq 0x30(%rbp),%r11
	movq %r15,0x30(%rbp)
	movq %r13,%r15
	xchgq %r11,%r14
L_193304:
	movq %r14,0x90(%rbp)
	movq $0x2609,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x88(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_193305:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459675
.p2align 0x4,,0x7
L_193306:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF67,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2975,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_459594
L_193307:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_193305
.p2align 0x4
L_459594:
L_193308:
	movq %r13,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_193309:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459674
.p2align 0x4,,0x7
L_193310:
	movq $0x2975,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_459595
L_193311:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_193309
.p2align 0x4
L_459595:
L_193312:
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_459669
L_193313:
	movq 0x90(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_193314:
	addq 0x0(%r14),%r15
	movq %r15,0x88(%rbp)
	cmpq $0x1,%r13
	je L_459596
L_193315:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_193314
.p2align 0x4
L_459596:
L_193316:
	testq %r15,%r15
	jz L_459668
L_193317:
	cmpq $0x7FFFFFFF,%r15
	ja L_193090
L_193318:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C5,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_193319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193319
.p2align 0x4
.long 0x28E6
L_193319:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,%r15
L_193320:
	movq 0x98(%rbp),%r10
	movq 0x90(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2050:
	cmpq 0x88(%rbp),%r14
	jnl L_459599
.p2align 0x4,,0x7
loop_2053:
	cmpq 0x0(%r11),%r13
	jl L_459598
L_193479:
	cmpq $0x1,%r10
	je L_193482
L_193480:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_2053
.p2align 0x4
L_459598:
L_193483:
	movq %r13,%r9
	movq %r13,%r8
	movq %r14,%rsp
	movq %r14,%rsi
	salq $0x4,%r9
	movq 0x8(%r11),%rdi
	movq 0x0(%rdi,%r9,1),%rdx
	salq $0x4,%r8
	movq 0x8(%rdi,%r8,1),%r9
	incq %r13
	movq %r15,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%r8,1)
	salq $0x4,%rsp
	movq %rsp,%rax
	movq %rdx,0x0(%r15,%rax,1)
	movq %r15,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%rdi,%r8,1)
	salq $0x4,%rsi
	movq %r9,0x8(%r15,%rsi,1)
	incq %r14
	jmp loop_2050
.p2align 0x4
L_459599:
L_193321:
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x30(%rbp)
L_193322:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_192992
L_193324:
	cmpl $0x0,%r13d
	jl L_193477
L_193325:
	movl $0x0,0x90(%rbp)
loop_2051:
	movl 0x24(%rbp),%r13d
	cmpl %r13d,0x90(%rbp)
	jl L_459664
L_193326:
	movq 0x78(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x30(%rbp),%r10
	movq %r10,0x0(%r13)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x88(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0xC0(%rbp),%r13
	cmpq $0x1,%r13
	je L_459657
L_193327:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_459650
	cmpq $0x10D6,%r15
	je L_459643
	cmpq $0x10D7,%r15
	je L_459636
	cmpq $0x10D8,%r15
	je L_459629
	cmpq $0x10D9,%r15
	je L_459608
L_193328:
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r14
	cmpq $0x1,%r11
	je L_459607
L_193329:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_459606
	cmpq $0x10D6,%r15
	je L_459605
	cmpq $0x10D7,%r15
	je L_459604
	cmpq $0x10D8,%r15
	je L_459603
	cmpq $0x10D9,%r15
	je L_459600
L_193330:
	movq 0x8(%r11),%r15
L_193331:
	movq 0x8(%r15),%r15
L_193332:
	movq %r15,0x3D0(%rbp)
	movq %r14,0x3D8(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x3D0,%rbp
	leaq (L_193333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_459600:
L_193393:
	movq 0x8(%r11),%r15
L_193394:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10CE,%r13
	je L_459602
L_193396:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_459601
L_193398:
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r11
	movq %r11,%r15
	jmp L_193332
.p2align 0x4
L_459601:
L_193397:
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r11
	movq %r11,%r15
	jmp L_193332
.p2align 0x4
L_459602:
L_193395:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r15
	jmp L_193332
.p2align 0x4
L_459603:
L_193391:
	movq 0x0(%r11),%r15
L_193392:
	movq 0x8(%r15),%r15
	jmp L_193332
.p2align 0x4
L_459604:
L_193389:
	movq 0x8(%r11),%r15
L_193390:
	movq 0x8(%r15),%r15
	jmp L_193332
.p2align 0x4
L_459605:
L_193387:
	movq 0x8(%r11),%r15
L_193388:
	movq 0x8(%r15),%r15
	jmp L_193332
.p2align 0x4
L_459606:
L_193385:
	movq 0x8(%r11),%r15
L_193386:
	movq 0x8(%r15),%r15
	jmp L_193332
.p2align 0x4
L_459607:
L_193399:
	movq (globalObjptr+0xC68)(%rip),%r15
	jmp L_193332
.p2align 0x4
L_459608:
L_193436:
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10CE,%r14
	je L_459622
L_193446:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_459615
L_193456:
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r11
	je L_459614
L_193457:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x10D5,%r14
	je L_459613
	cmpq $0x10D6,%r14
	je L_459612
	cmpq $0x10D7,%r14
	je L_459611
	cmpq $0x10D8,%r14
	je L_459610
	cmpq $0x10D9,%r14
	je L_459609
L_193458:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_193331
.p2align 0x4
L_459609:
L_193463:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_193394
.p2align 0x4
L_459610:
L_193462:
	movq 0x0(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_193392
.p2align 0x4
L_459611:
L_193461:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_193390
.p2align 0x4
L_459612:
L_193460:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_193388
.p2align 0x4
L_459613:
L_193459:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_193386
.p2align 0x4
L_459614:
L_193464:
	movq (globalObjptr+0xC68)(%rip),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_193332
.p2align 0x4
L_459615:
L_193447:
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r11
	je L_459621
L_193448:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x10D5,%r14
	je L_459620
	cmpq $0x10D6,%r14
	je L_459619
	cmpq $0x10D7,%r14
	je L_459618
	cmpq $0x10D8,%r14
	je L_459617
	cmpq $0x10D9,%r14
	je L_459616
L_193449:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_193331
.p2align 0x4
L_459616:
L_193454:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_193394
.p2align 0x4
L_459617:
L_193453:
	movq 0x0(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_193392
.p2align 0x4
L_459618:
L_193452:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_193390
.p2align 0x4
L_459619:
L_193451:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_193388
.p2align 0x4
L_459620:
L_193450:
	movq 0x8(%r11),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_193386
.p2align 0x4
L_459621:
L_193455:
	movq (globalObjptr+0xC68)(%rip),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_193332
.p2align 0x4
L_459622:
L_193437:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r14
	cmpq $0x1,%r11
	je L_459628
L_193438:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_459627
	cmpq $0x10D6,%r15
	je L_459626
	cmpq $0x10D7,%r15
	je L_459625
	cmpq $0x10D8,%r15
	je L_459624
	cmpq $0x10D9,%r15
	je L_459623
L_193439:
	movq 0x8(%r11),%r15
	jmp L_193331
.p2align 0x4
L_459623:
L_193444:
	movq 0x8(%r11),%r15
	jmp L_193394
.p2align 0x4
L_459624:
L_193443:
	movq 0x0(%r11),%r15
	jmp L_193392
.p2align 0x4
L_459625:
L_193442:
	movq 0x8(%r11),%r15
	jmp L_193390
.p2align 0x4
L_459626:
L_193441:
	movq 0x8(%r11),%r15
	jmp L_193388
.p2align 0x4
L_459627:
L_193440:
	movq 0x8(%r11),%r15
	jmp L_193386
.p2align 0x4
L_459628:
L_193445:
	movq (globalObjptr+0xC68)(%rip),%r15
	jmp L_193332
.p2align 0x4
L_459629:
L_193427:
	movq 0x0(%r13),%r10
	movq 0x8(%r10),%r14
	cmpq $0x1,%r11
	je L_459635
L_193428:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_459634
	cmpq $0x10D6,%r15
	je L_459633
	cmpq $0x10D7,%r15
	je L_459632
	cmpq $0x10D8,%r15
	je L_459631
	cmpq $0x10D9,%r15
	je L_459630
L_193429:
	movq 0x8(%r11),%r15
	jmp L_193331
.p2align 0x4
L_459630:
L_193434:
	movq 0x8(%r11),%r15
	jmp L_193394
.p2align 0x4
L_459631:
L_193433:
	movq 0x0(%r11),%r15
	jmp L_193392
.p2align 0x4
L_459632:
L_193432:
	movq 0x8(%r11),%r15
	jmp L_193390
.p2align 0x4
L_459633:
L_193431:
	movq 0x8(%r11),%r15
	jmp L_193388
.p2align 0x4
L_459634:
L_193430:
	movq 0x8(%r11),%r15
	jmp L_193386
.p2align 0x4
L_459635:
L_193435:
	movq (globalObjptr+0xC68)(%rip),%r15
	jmp L_193332
.p2align 0x4
L_459636:
L_193418:
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r14
	cmpq $0x1,%r11
	je L_459642
L_193419:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_459641
	cmpq $0x10D6,%r15
	je L_459640
	cmpq $0x10D7,%r15
	je L_459639
	cmpq $0x10D8,%r15
	je L_459638
	cmpq $0x10D9,%r15
	je L_459637
L_193420:
	movq 0x8(%r11),%r15
	jmp L_193331
.p2align 0x4
L_459637:
L_193425:
	movq 0x8(%r11),%r15
	jmp L_193394
.p2align 0x4
L_459638:
L_193424:
	movq 0x0(%r11),%r15
	jmp L_193392
.p2align 0x4
L_459639:
L_193423:
	movq 0x8(%r11),%r15
	jmp L_193390
.p2align 0x4
L_459640:
L_193422:
	movq 0x8(%r11),%r15
	jmp L_193388
.p2align 0x4
L_459641:
L_193421:
	movq 0x8(%r11),%r15
	jmp L_193386
.p2align 0x4
L_459642:
L_193426:
	movq (globalObjptr+0xC68)(%rip),%r15
	jmp L_193332
.p2align 0x4
L_459643:
L_193409:
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r14
	cmpq $0x1,%r11
	je L_459649
L_193410:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_459648
	cmpq $0x10D6,%r15
	je L_459647
	cmpq $0x10D7,%r15
	je L_459646
	cmpq $0x10D8,%r15
	je L_459645
	cmpq $0x10D9,%r15
	je L_459644
L_193411:
	movq 0x8(%r11),%r15
	jmp L_193331
.p2align 0x4
L_459644:
L_193416:
	movq 0x8(%r11),%r15
	jmp L_193394
.p2align 0x4
L_459645:
L_193415:
	movq 0x0(%r11),%r15
	jmp L_193392
.p2align 0x4
L_459646:
L_193414:
	movq 0x8(%r11),%r15
	jmp L_193390
.p2align 0x4
L_459647:
L_193413:
	movq 0x8(%r11),%r15
	jmp L_193388
.p2align 0x4
L_459648:
L_193412:
	movq 0x8(%r11),%r15
	jmp L_193386
.p2align 0x4
L_459649:
L_193417:
	movq (globalObjptr+0xC68)(%rip),%r15
	jmp L_193332
.p2align 0x4
L_459650:
L_193400:
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r14
	cmpq $0x1,%r11
	je L_459656
L_193401:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_459655
	cmpq $0x10D6,%r15
	je L_459654
	cmpq $0x10D7,%r15
	je L_459653
	cmpq $0x10D8,%r15
	je L_459652
	cmpq $0x10D9,%r15
	je L_459651
L_193402:
	movq 0x8(%r11),%r15
	jmp L_193331
.p2align 0x4
L_459651:
L_193407:
	movq 0x8(%r11),%r15
	jmp L_193394
.p2align 0x4
L_459652:
L_193406:
	movq 0x0(%r11),%r15
	jmp L_193392
.p2align 0x4
L_459653:
L_193405:
	movq 0x8(%r11),%r15
	jmp L_193390
.p2align 0x4
L_459654:
L_193404:
	movq 0x8(%r11),%r15
	jmp L_193388
.p2align 0x4
L_459655:
L_193403:
	movq 0x8(%r11),%r15
	jmp L_193386
.p2align 0x4
L_459656:
L_193408:
	movq (globalObjptr+0xC68)(%rip),%r15
	jmp L_193332
.p2align 0x4
L_459657:
L_193465:
	cmpq $0x1,%r11
	je L_459663
L_193466:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_459662
	cmpq $0x10D6,%r15
	je L_459661
	cmpq $0x10D7,%r15
	je L_459660
	cmpq $0x10D8,%r15
	je L_459659
	cmpq $0x10D9,%r15
	je L_459658
L_193467:
	movq 0x8(%r11),%r15
	movq (globalObjptr+0xC68)(%rip),%r14
	jmp L_193331
.p2align 0x4
L_459658:
L_193472:
	movq 0x8(%r11),%r15
	movq (globalObjptr+0xC68)(%rip),%r14
	jmp L_193394
.p2align 0x4
L_459659:
L_193471:
	movq 0x0(%r11),%r15
	movq (globalObjptr+0xC68)(%rip),%r14
	jmp L_193392
.p2align 0x4
L_459660:
L_193470:
	movq 0x8(%r11),%r15
	movq (globalObjptr+0xC68)(%rip),%r14
	jmp L_193390
.p2align 0x4
L_459661:
L_193469:
	movq 0x8(%r11),%r15
	movq (globalObjptr+0xC68)(%rip),%r14
	jmp L_193388
.p2align 0x4
L_459662:
L_193468:
	movq 0x8(%r11),%r15
	movq (globalObjptr+0xC68)(%rip),%r14
	jmp L_193386
.p2align 0x4
L_459663:
L_193473:
	movq (globalObjptr+0xC68)(%rip),%r15
	movq %r15,%r10
	movq %r15,%r14
	movq %r10,%r15
	jmp L_193332
.p2align 0x4
L_459664:
L_193474:
	movslq 0x90(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x98(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x3D0(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xA8(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_193475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_16
.p2align 0x4
L_459668:
L_193485:
	movq (globalObjptr+0x52F0)(%rip),%r14
	xchgq %r14,%r15
	jmp L_193320
.p2align 0x4
L_459669:
L_193486:
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x98(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r14,0x88(%rbp)
	je L_459673
L_193487:
	testq %r13,%r13
	jz L_459672
L_193488:
	cmpq $0x7FFFFFFF,%r13
	ja L_193090
L_193489:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C5,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_193490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193490
.p2align 0x4
.long 0x28EB
L_193490:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,%r15
L_193491:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2054:
	cmpq 0x98(%rbp),%r14
	jnl L_459670
L_193493:
	movq %r14,%r13
	movq %r14,%r11
	movq %r14,%r10
	movq %r14,%r9
	salq $0x4,%r13
	movq 0x88(%rbp),%r8
	movq 0x0(%r8,%r13,1),%rsp
	salq $0x4,%r11
	movq 0x8(%r8,%r11,1),%r13
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r10
	movq %rsp,0x0(%r15,%r10,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r9
	movq %r13,0x8(%r15,%r9,1)
	incq %r14
	jmp loop_2054
.p2align 0x4
L_459670:
L_193492:
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_193322
.p2align 0x4
L_459672:
L_193495:
	movq (globalObjptr+0x52F8)(%rip),%r15
	jmp L_193491
.p2align 0x4
L_459673:
L_193496:
	movq 0x88(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_193322
.p2align 0x4
L_459674:
L_193497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_193498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193498
.p2align 0x4
.long 0x28EC
L_193498:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	jmp L_193310
.p2align 0x4
L_459675:
L_193499:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_193500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193500
.p2align 0x4
.long 0x28EC
L_193500:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	jmp L_193306
.p2align 0x4
L_459679:
L_193810:
	movl $0x1,0x24(%rbp)
	xorl %ecx,%ecx
	jmp L_193184
.p2align 0x4
L_459680:
L_193811:
	cmpq $0x1,0x88(%rbp)
	je L_459682
L_193812:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_459681
L_193813:
	movq 0x8(%r14),%r15
	movl $0x1,0x24(%rbp)
	xorl %ecx,%ecx
	jmp L_193179
.p2align 0x4
L_459681:
L_193814:
	movl $0x1,0x24(%rbp)
	xorl %ecx,%ecx
	jmp L_193184
.p2align 0x4
L_459682:
L_193815:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_459683
L_193816:
	movq 0x8(%r14),%r15
	movl $0x0,0x24(%rbp)
	xorl %ecx,%ecx
	jmp L_193179
.p2align 0x4
L_459683:
L_193817:
	movl $0x0,0x24(%rbp)
	xorl %ecx,%ecx
	jmp L_193184
.p2align 0x4
L_459686:
L_193897:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_193898:
	cmpl $0x0,%eax
	jng L_193161
L_193900:
	movq 0x380(%rbp),%r15
	xorl %ecx,%ecx
	jmp L_193821
.p2align 0x4
L_459690:
L_193943:
	movq $0x5,%r15
L_193913:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x293B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x428(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x420(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459691:
L_193922:
	movq $0x3,%r15
	jmp L_193913
.p2align 0x4
L_459692:
L_193950:
	movq $0x12,%r13
	xchgq %r13,%r15
	jmp L_193913
.p2align 0x4
L_459693:
L_193905:
	movq 0x18(%r13),%r15
	movq %r15,0x438(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x440(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x448(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x450(%rbp)
	leaq L_193911(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x438,%rbp
	leaq (L_193906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1874
.p2align 0x4
L_459694:
L_193903:
	movq 0x0(%r14),%r14
	xchgq %r14,%r15
	jmp L_193156
.p2align 0x4
L_459700:
L_193962:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193963
L_193964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193965
.p2align 0x4
.long 0x2939
L_193965:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193963:
	movq $0x1,0x30(%rbp)
	jmp L_193176
.p2align 0x4
L_459702:
L_193966:
	movq 0xC8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl %ecx,0xC8(%rbp)
	movl $0x0,0x24(%rbp)
	movq $0x1,0x88(%rbp)
	jmp loop_2040
.p2align 0x4
L_459705:
L_193970:
	movslq 0xD8(%rbp),%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x30(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x380(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x420(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq %r14,0x438(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4AF0)(%rip),%r15
	movq %r15,0x430(%rbp)
	movq %r10,0x440(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x448(%rbp)
	addq $0x430,%rbp
	leaq (L_193971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1288
.p2align 0x4
L_459709:
L_194022:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C5,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_194023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194023
.p2align 0x4
.long 0x2940
L_194023:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2067:
	cmpq $0x2,%r15
	jnl L_459712
L_194025:
	movl %r15d,%r13d
	cmpl $0x0,%r13d
	je L_459711
	cmpl $0x1,%r13d
	je L_459710
L_194026:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459710:
L_194029:
	movq 0xD8(%rbp),%r13
	movq 0xC8(%rbp),%r11
L_194028:
	movq %r15,%r10
	movq %r15,%r9
	movq %r14,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r10
	movq %r13,0x0(%r14,%r10,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r9
	movq %r11,0x8(%r14,%r9,1)
	incq %r15
	jmp loop_2067
.p2align 0x4
L_459711:
L_194027:
	movq 0xD0(%rbp),%r13
	movq 0x90(%rbp),%r11
	jmp L_194028
.p2align 0x4
L_459712:
L_194024:
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x88(%rbp)
	jmp L_193322
.p2align 0x4
L_459716:
L_194031:
	cmpq $0x0,%r15
	jna L_193003
L_194033:
	movq 0x0(%r14),%r15
	movq %r15,0x3E0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x90(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0x4AF0)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x3E8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_194034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1288
.p2align 0x4
L_459718:
L_194041:
	movq (globalObjptr+0xF18)(%rip),%r15
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x30(%rbp)
	movq $0x1,0x88(%rbp)
	jmp L_193322
.p2align 0x4
L_459721:
L_194065:
	movq (globalObjptr+0x7400)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_193120
.p2align 0x4
L_459723:
L_193101:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r15
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	movq %r14,%r11
	shrq $0x1,%r11
	cmpq $0x10CE,%r11
	je L_459730
L_193106:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10CF,%r15
	jne L_193031
L_193107:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10C6,%r13
	je L_459727
L_193112:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10C7,%r14
	je L_459726
.p2align 0x4,,0x7
L_193031:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je loop_2035
L_193032:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
L_193033:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459725
.p2align 0x4,,0x7
L_193034:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_459724
L_193035:
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x21B5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movl $0x1,0x0(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je loop_2035
L_193036:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_193033
.p2align 0x4
L_459724:
L_193038:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je loop_2035
L_193039:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r13,0x50(%rbp)
	jmp L_193033
.p2align 0x4
L_459725:
L_193041:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_193042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193042
.p2align 0x4
.long 0x28CF
L_193042:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	jmp L_193034
.p2align 0x4
L_459726:
L_193113:
	movq 0x8(%r13),%r14
	movq %r14,0x3D8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_459727:
L_193108:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10C6,%r14
	jne L_193031
L_193109:
	movq 0x8(%r13),%r14
	movq %r14,0x3D8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_459730:
L_193102:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	jne L_193031
L_193103:
	movq 0x0(%r14),%r15
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r15)
	je loop_2035
	jmp L_193031
.p2align 0x4
L_459732:
L_193092:
	movq 0x30(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq 0x0(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0x12FE,%r10
	je L_459734
L_193099:
	movq 0x0(%r15),%r10
	andq $0x1,%r10
	cmpq $0x1,%r10
	jne L_459733
L_193100:
	movq %r11,%r15
	movq %r14,%r11
L_193095:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r15,0x0(%r13)
	movq 0x8(%r11),%r14
	movq %r14,0x3D8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_51+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_459733:
	movq %r14,%r11
L_193094:
	movq (globalObjptr+0x5290)(%rip),%r15
	jmp L_193095
.p2align 0x4
L_459734:
L_193093:
	movq 0x8(%r15),%r10
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r8
	andq $0x1,%r8
	cmpq $0x1,%r8
	jne L_459735
L_193098:
	movq %r11,%r15
	movq %r14,%r11
	jmp L_193095
.p2align 0x4
L_459735:
	movq %r14,%r11
	jmp L_193094
.p2align 0x4
L_459736:
L_193057:
	movq 0x30(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x90(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x98(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r10
	movq %r10,0xC0(%rbp)
	cmpq %r10,%r15
	jne L_192992
L_193059:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_192992
L_193061:
	cmpl %r14d,%r11d
	je L_459737
L_193062:
	movq (globalObjptr+0x4E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459737:
L_193063:
	movq 0xC0(%rbp),%rdx
	testq %rdx,%rdx
	jz L_459742
L_193064:
	cmpq $0x7FFFFFFF,%rdx
	ja L_193090
L_193065:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1685,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_193066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193066
.p2align 0x4
.long 0x28D0
L_193066:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,0x30(%rbp)
L_193067:
	movq $0x0,0xC8(%rbp)
.p2align 0x4,,0x7
loop_2036:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459740
.p2align 0x4,,0x7
L_193068:
	movq 0xC8(%rbp),%r15
	cmpq 0xC0(%rbp),%r15
	jnl L_459739
L_193083:
	movl %r15d,%r13d
	movslq %r13d,%r15
	movq 0x90(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r14
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x88(%rbp),%r11
	movl 0x0(%r11,%r13,1),%ecx
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_459738
L_193086:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq $0x4BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r13,%r14
L_193085:
	movq 0x30(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0xC8(%rbp),%r11
	movq %r11,%r9
	imulq $0x18,%r9
	movq %r14,0x8(%r13,%r9,1)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,%r14
	imulq $0x18,%r14
	movq %r15,0x10(%r13,%r14,1)
	movq %r11,%r15
	imulq $0x18,%r15
	movl %ecx,0x0(%r13,%r15,1)
	incq %r11
	movq %r11,0xC8(%rbp)
	jmp loop_2036
.p2align 0x4
L_459738:
L_193084:
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r14
	movq %r14,%r15
	movq %r13,%r14
	jmp L_193085
.p2align 0x4
L_459739:
L_193069:
	movq 0x30(%rbp),%r14
	movq $0x171F,0xFFFFFFFFFFFFFFF8(%r14)
	movq (globalObjptr+0x4AF0)(%rip),%r13
	movq %r13,0x3D0(%rbp)
	movq %r14,0x3D8(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,0x3E0(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,0x3E8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_193070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1288
.p2align 0x4
L_459740:
L_193087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_193088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193088
.p2align 0x4
.long 0x28D2
L_193088:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	jmp L_193068
.p2align 0x4
L_459742:
L_193091:
	movq (globalObjptr+0x73F8)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_193067
.p2align 0x4
L_459745:
L_194091:
	movq $0x1,%r15
	movl $0x0,0x24(%rbp)
.p2align 0x4,,0x7
loop_2070:
	movl 0x24(%rbp),%r14d
	cmpl 0x20(%rbp),%r14d
	jnl L_459749
L_195154:
	movslq %r14d,%r13
	imulq $0x18,%r13
	movq 0x18(%rbp),%r14
	movq 0x10(%r14,%r13,1),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r10
	cmpq %r14,%r10
	jne L_192992
L_195156:
	cmpl $0x0,%r13d
	jl L_193477
L_195157:
	movq %r15,0x50(%rbp)
	movl $0x0,0x34(%rbp)
.p2align 0x4,,0x7
loop_2087:
	movl 0x30(%rbp),%r14d
	cmpl %r14d,0x34(%rbp)
	jl L_459746
L_195158:
	incl 0x24(%rbp)
	movq 0x50(%rbp),%r15
	jmp loop_2070
.p2align 0x4
L_459746:
L_195159:
	movslq 0x34(%rbp),%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x28(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x78(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x3D0(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq %r14,0x88(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_195160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_16
.p2align 0x4
L_459749:
L_194092:
	movq 0x70(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_459774
L_194093:
	movq %r15,0x50(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_194094:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459773
.p2align 0x4,,0x7
L_194095:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x21AE,%r14
	je L_459769
	cmpq $0x21AF,%r14
	je L_459764
L_194096:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r10),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	jne L_459762
L_195081:
	movq %r13,0x70(%rbp)
	movq 0x0(%r9),%r15
	movq 0x18(%r15),%r13
	movq $0x1EAD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_195082:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459761
.p2align 0x4,,0x7
L_195083:
	movq $0x115D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_459750
L_195084:
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_194094
.p2align 0x4
L_459750:
L_195085:
	movq %r14,0x28(%rbp)
L_194100:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_459760
L_194101:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_194102:
	incl %ecx
	jo L_193140
L_194103:
	cmpq $0x1,%r15
	je L_459751
L_194104:
	movq 0x8(%r15),%r15
	jmp L_194102
.p2align 0x4
L_459751:
L_194105:
L_194106:
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	testq %rdx,%rdx
	jz L_459758
L_194107:
	cmpq $0x7FFFFFFF,%rdx
	ja L_193090
L_194108:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1495,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_194109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194109
.p2align 0x4
.long 0x2947
L_194109:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,0x50(%rbp)
L_194110:
	movq 0x28(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2071:
	cmpq 0x30(%rbp),%r15
	jnl L_459753
L_195075:
	cmpq $0x1,%r14
	je L_193587
L_195076:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x50(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2071
.p2align 0x4
L_459753:
L_194111:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194112
L_195073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_195074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195074
.p2align 0x4
.long 0x2A2C
L_195074:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_194112:
	movq 0x50(%rbp),%r15
	movq $0xF35,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0xC39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x18,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1883,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x50,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x68(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x38(%rbp),%r10
	movq %r10,0x10(%r14)
	movq 0x40(%rbp),%r9
	movq %r9,0x18(%r14)
	movq 0x48(%rbp),%r8
	movq %r8,0x20(%r14)
	movq 0x110(%rbp),%rsp
	movq %rsp,0x28(%r14)
	movq 0x108(%rbp),%rsp
	movq %rsp,0x30(%r14)
	movq 0x390(%rbp),%rsp
	movq %rsp,0x38(%r14)
	movq 0x3C0(%rbp),%rsi
	movq %rsi,0x40(%r14)
	movq $0x1885,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x40,%r12
	movq 0x3A0(%rbp),%rsi
	movq %rsi,0x0(%r14)
	movq 0x398(%rbp),%rsi
	movq %rsi,0x8(%r14)
	movq %r8,0x10(%r14)
	movq %r9,0x18(%r14)
	movq %r10,0x20(%r14)
	movq %r11,0x28(%r14)
	movq %r13,0x30(%r14)
	movq $0x1887,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x90,%r12
	movq %r10,0x0(%r13)
	movq %r9,0x8(%r13)
	movq %r8,0x10(%r13)
	movq 0x178(%rbp),%r11
	movq %r11,0x18(%r13)
	movq 0x170(%rbp),%r11
	movq %r11,0x20(%r13)
	movq 0x168(%rbp),%r11
	movq %r11,0x28(%r13)
	movq 0x160(%rbp),%r11
	movq %r11,0x30(%r13)
	movq 0x158(%rbp),%r11
	movq %r11,0x38(%r13)
	movq 0x150(%rbp),%r11
	movq %r11,0x40(%r13)
	movq 0x148(%rbp),%r11
	movq %r11,0x48(%r13)
	movq 0x140(%rbp),%r11
	movq %r11,0x50(%r13)
	movq 0x138(%rbp),%r11
	movq %r11,0x58(%r13)
	movq 0x130(%rbp),%r11
	movq %r11,0x60(%r13)
	movq 0x128(%rbp),%r11
	movq %r11,0x68(%r13)
	movq %rsp,0x70(%r13)
	movq 0x120(%rbp),%r11
	movq %r11,0x78(%r13)
	movq %r14,0x80(%r13)
	movq $0x1889,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x28,%r12
	movq 0x180(%rbp),%r14
	movq %r14,0x8(%r13)
	movq %rsi,0x10(%r13)
	movq %rsp,0x18(%r13)
	movq $0x188B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	addq $0x38,%r12
	movq %r10,0x0(%r14)
	movq %r9,0x8(%r14)
	movq %r8,0x10(%r14)
	movq 0x190(%rbp),%r11
	movq %r11,0x18(%r14)
	movq 0x188(%rbp),%r11
	movq %r11,0x20(%r14)
	movq %r13,0x28(%r14)
	movq $0x188D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x88(%rbp)
	movq %r13,0x28(%r14)
	addq $0x38,%r12
	movq %r10,0x0(%r14)
	movq %r9,0x8(%r14)
	movq %r8,0x10(%r14)
	movq 0x1A0(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x198(%rbp),%r13
	movq %r13,0x20(%r14)
	movq $0x25EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x115D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x1A8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1B0(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jnz L_459755
L_194113:
	movq $0x11,0x10(%rbp)
L_194114:
	movq 0x1B8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_459754
L_194115:
	movq 0x0(%r11),%r15
	movq %r15,0x50(%rbp)
	movq 0x1C0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xA8(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0xB0(%rbp)
	movq $0x11,0x3C8(%rbp)
	movq %r15,0x3D0(%rbp)
	movq %r11,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_459754:
L_195067:
	movq %r14,0x370(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_195068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_459755:
L_195072:
	movq $0x9,0x10(%rbp)
	jmp L_194114
.p2align 0x4
L_459758:
L_195079:
	movq (globalObjptr+0xD18)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_194110
.p2align 0x4
L_459760:
L_195080:
	xorl %ecx,%ecx
	jmp L_194106
.p2align 0x4
L_459761:
L_195086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_195087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195087
.p2align 0x4
.long 0x2A2D
L_195087:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	jmp L_195083
.p2align 0x4
L_459762:
L_194097:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_459763
L_194098:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_194094
.p2align 0x4
L_459763:
L_194099:
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_194100
.p2align 0x4
L_459764:
L_195094:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x24(%rbp)
	movq 0x10(%r15),%r14
	movq 0x78(%r14),%r13
	movq 0x70(%r14),%r11
	movq %r11,0x88(%rbp)
	movq 0x68(%r14),%r11
	movq %r11,0x90(%rbp)
	movq 0x60(%r14),%r11
	movq %r11,0x98(%rbp)
	movq 0x50(%r14),%r11
	movq %r11,0xA8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0xB0(%rbp)
	cmpq %rdx,%r15
	movq %r13,0x78(%rbp)
	jne L_192992
L_195096:
	testq %rdx,%rdx
	jz L_459767
L_195097:
	cmpq $0x7FFFFFFF,%rdx
	ja L_193090
L_195098:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1685,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_195099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195099
.p2align 0x4
.long 0x2A2E
L_195099:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,0x30(%rbp)
L_195100:
	movq $0x0,0xC0(%rbp)
loop_2086:
	movq 0xB0(%rbp),%r15
	cmpq %r15,0xC0(%rbp)
	jl L_459765
L_195101:
	movq 0x30(%rbp),%r15
	movq $0x171F,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0x5F18)(%rip),%r14
	movq %r14,0x3D0(%rbp)
	movq %r15,0x3D8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x3E0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x3E8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_195102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1288
.p2align 0x4
L_459765:
L_195142:
	movq 0xC0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x78(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	movl %r11d,0xC8(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0xD0(%rbp)
	movq %r14,0x3D0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (x_607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_459767:
L_195150:
	movq (globalObjptr+0x7338)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_195100
.p2align 0x4
L_459769:
L_195088:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_459771
L_195092:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	jne L_194097
L_195093:
	movq %r13,%r14
L_195091:
	movq %r14,0x70(%rbp)
	movq $0x1EAB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	jmp L_195082
.p2align 0x4
L_459771:
L_195089:
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r9
	andq $0x1,%r9
	cmpq $0x1,%r9
	jne L_194097
L_195090:
	movq %r13,%r14
	jmp L_195091
.p2align 0x4
L_459773:
L_195151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_195152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195152
.p2align 0x4
.long 0x2A34
L_195152:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	jmp L_194095
.p2align 0x4
L_459774:
L_195153:
	movq %r15,0x28(%rbp)
	jmp L_194100
.p2align 0x4
.long 0x28CC
L_193018:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193019
L_195185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_195186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195186
.p2align 0x4
.long 0x2A38
L_195186:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_193019:
	movq $0x3493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3D0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_193020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x28CE
not_49:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	testl %r15d,%r15d
	jnz loop_2035
	jmp L_193031
.p2align 0x4
.long 0x28CE
not_55:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	testl %r15d,%r15d
	jnz loop_2035
	jmp L_193031
.p2align 0x4
.long 0x28CE
not_54:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	testl %r15d,%r15d
	jnz loop_2035
	jmp L_193031
.p2align 0x4
.long 0x2944
x_604:
	addq $0xFFFFFFFFFFFFFC20,%rbp
	movq 0x3E0(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194053
L_194057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3E8,%rbp
	leaq (L_194058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194058
.p2align 0x4
.long 0x2945
L_194058:
	addq $0xFFFFFFFFFFFFFC18,%rbp
L_194053:
	movq 0x3D8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x12FE,%r14
	je L_459777
L_194056:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
L_194055:
	movq 0x3B0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x3C8(%rbp),%r13
	movq %r13,%r10
	imulq $0x18,%r10
	movq 0x3D0(%rbp),%r9
	movq %r9,0x8(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	imulq $0x18,%r11
	movq %r15,0x10(%r14,%r11,1)
	movq %r13,%r15
	imulq $0x18,%r15
	movl 0x24(%rbp),%r11d
	movl %r11d,0x0(%r14,%r15,1)
	incq %r13
	movq %r13,0x3C8(%rbp)
	jmp loop_2069
.p2align 0x4
L_459777:
L_194054:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_194055
.p2align 0x4
.long 0x28D4
L_193129:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq %r15,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_193130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x291C
L_194013:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x28D6
L_193137:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq %r15,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_193138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x291C
L_193967:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x28D7
L_193149:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movq 0x430(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq %r15,0x430(%rbp)
	addq $0x430,%rbp
	leaq (L_193150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x291C
L_193955:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x420(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x28D8
L_193155:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x420(%rbp)
	jmp L_193156
.p2align 0x4
.long 0x292F
L_193918:
	addq $0xFFFFFFFFFFFFFBB0,%rbp
	movq 0x450(%rbp),%r15
	movq %r15,0x448(%rbp)
	movq %r15,0x450(%rbp)
	addq $0x450,%rbp
	leaq (L_193919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x291C
L_193946:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193947
L_193948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x450,%rbp
	leaq (L_193949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193949
.p2align 0x4
.long 0x2936
L_193949:
	addq $0xFFFFFFFFFFFFFBB0,%rbp
L_193947:
	movq 0x430(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x440(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x368(%rbp),%r15
	jmp L_193913
.p2align 0x4
.long 0x2932
L_193932:
	addq $0xFFFFFFFFFFFFFB90,%rbp
	movl 0x470(%rbp),%r15d
	movl %r15d,0x244(%rbp)
	movl $0x2,0x470(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x474(%rbp)
	addq $0x470,%rbp
	leaq (L_193933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x291C
L_193911:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193912
L_193914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x438,%rbp
	leaq (L_193915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193915
.p2align 0x4
.long 0x292E
L_193915:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
L_193912:
	movq 0x368(%rbp),%r15
	jmp L_193913
.p2align 0x4
.long 0x28D7
L_193825:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movq 0x430(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq 0x420(%rbp),%r14
	movq %r14,%r13
	andq %r15,%r13
	andq $0x1,%r13
	jz L_459788
L_193826:
	cmpq %r15,%r14
	jl L_459781
L_193828:
	movq 0x420(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x430(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x438(%rbp)
	addq $0x428,%rbp
	leaq (L_193829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_459781:
L_193877:
	movl 0xC8(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	jo L_193140
L_193878:
	cmpq $0x1,0x88(%rbp)
	je L_459786
L_193879:
	movq 0x380(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD8(%rbp)
.p2align 0x4,,0x7
L_193880:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459785
.p2align 0x4,,0x7
L_193881:
	movq $0x2603,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_459782
L_193882:
	movq %r15,0xD8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0xC8(%rbp)
	jmp L_193880
.p2align 0x4
L_459782:
L_193883:
	movq 0xD8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x88(%rbp),%r15
	movq 0xC8(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0xC8(%rbp)
.p2align 0x4,,0x7
L_193884:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459784
.p2align 0x4,,0x7
L_193885:
	movq $0x2603,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_459783
L_193886:
	movq %r15,0xC8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_193884
.p2align 0x4
L_459783:
L_193887:
	movq %r15,0x88(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	movl $0x1,0x24(%rbp)
	jmp loop_2040
.p2align 0x4
L_459784:
L_193888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x438,%rbp
	leaq (L_193889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193889
.p2align 0x4
.long 0x292A
L_193889:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	jmp L_193885
.p2align 0x4
L_459785:
L_193890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x438,%rbp
	leaq (L_193891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193891
.p2align 0x4
.long 0x292B
L_193891:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	jmp L_193881
.p2align 0x4
L_459786:
L_193892:
	movq 0x428(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	movl $0x1,0x24(%rbp)
	jmp loop_2040
.p2align 0x4
L_459788:
L_193893:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r14,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_193894:
	cmpl $0x0,%eax
	jg L_193877
	jmp L_193828
.p2align 0x4
.long 0x28DA
L_193187:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x98(%rbp)
	jmp L_193188
.p2align 0x4
.long 0x291E
L_193769:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x3B0(%rbp)
	movq %r15,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_193770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x291C
L_193797:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193798
L_193799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3B8,%rbp
	leaq (L_193800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193800
.p2align 0x4
.long 0x2925
L_193800:
	addq $0xFFFFFFFFFFFFFC48,%rbp
L_193798:
	movq 0x380(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x3A8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xA0(%rbp),%r15
	jmp L_193764
.p2align 0x4
.long 0x2921
L_193783:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movl 0x430(%rbp),%r15d
	movl %r15d,0x324(%rbp)
	movl $0x2,0x430(%rbp)
	movl 0x244(%rbp),%r15d
	movl %r15d,0x434(%rbp)
	addq $0x430,%rbp
	leaq (L_193784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x291C
L_193762:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193763
L_193765:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x370,%rbp
	leaq (L_193766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193766
.p2align 0x4
.long 0x291D
L_193766:
	addq $0xFFFFFFFFFFFFFC90,%rbp
L_193763:
	movq 0xA0(%rbp),%r15
	jmp L_193764
.p2align 0x4
.long 0x290E
L_193690:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq 0x3E0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x420(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x428(%rbp)
	movq %r15,0x438(%rbp)
	addq $0x438,%rbp
	leaq (L_193691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x28DC
L_193226:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq %r15,0x428(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x430(%rbp)
	addq $0x428,%rbp
	leaq (L_193227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1285
.p2align 0x4
.long 0x291A
L_193757:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x380(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193758
L_193760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193761
.p2align 0x4
.long 0x291B
L_193761:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193758:
	movq 0x380(%rbp),%r15
	jmp L_193759
.p2align 0x4
.long 0x28FE
L_193595:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq %r15,0x428(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x430(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x438(%rbp)
	addq $0x428,%rbp
	leaq (L_193596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp padToWidth_0
.p2align 0x4
.long 0x28FA
L_193568:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0xD0(%rbp)
	jmp L_193552
.p2align 0x4
.long 0x28E2
L_193290:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	movq 0x420(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq %r15,0x420(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x428(%rbp)
	addq $0x420,%rbp
	leaq (L_193291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1285
.p2align 0x4
.long 0x28F0
L_193515:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	movq 0x420(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_193516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1285
.p2align 0x4
.long 0x2906
L_193647:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	movq 0x420(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_193648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1285
.p2align 0x4
.long 0x28E7
L_193333:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x78(%rbp)
	jz L_193031
L_193335:
	movq 0xB0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x78(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x88(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_192992
L_193337:
	cmpl %r15d,0x24(%rbp)
	jne L_193031
L_193339:
	movl $0x0,0x24(%rbp)
.p2align 0x4,,0x7
loop_2052:
	movl 0x24(%rbp),%r15d
	cmpl 0x88(%rbp),%r15d
	je loop_2035
L_193340:
	movslq %r15d,%r14
	cmpq 0x78(%rbp),%r14
	jnb L_193003
L_193342:
	movq %r14,%r15
	movq %r14,%r13
	movq %r14,%r11
	salq $0x4,%r15
	movq 0xB0(%rbp),%r10
	movq 0x0(%r10,%r15,1),%r9
	salq $0x4,%r13
	salq $0x4,%r11
	movq 0x30(%rbp),%r15
	movq 0x0(%r15,%r11,1),%r8
	salq $0x4,%r14
	movq 0x8(%r15,%r14,1),%r11
	movq 0x8(%r10,%r13,1),%rsp
	movq 0x10(%rsp),%rsi
	cmpq %rsi,0x10(%r11)
	jne L_193031
L_193344:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	movq %r15,%r14
	shrq $0x1,%r14
	cmpq $0x10D1,%r14
	je L_459807
	cmpq $0x10D2,%r14
	je L_459802
L_193345:
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r8),%r14
	shrq $0x1,%r14
	cmpq $0x10D0,%r14
	jne L_193031
L_193346:
	movq 0x0(%r8),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10CE,%r13
	jne L_459796
L_193347:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	jne L_193031
L_193348:
	movq 0x0(%r13),%r15
	movq 0x0(%r14),%r11
	movq 0x0(%r11),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r15)
	jne L_193031
.p2align 0x4,,0x7
L_193351:
	movl 0x24(%rbp),%r15d
	incl %r15d
	jo L_193140
L_193352:
	movl %r15d,0x24(%rbp)
	jmp loop_2052
.p2align 0x4
L_459796:
L_193353:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10CF,%r15
	jne L_193031
L_193354:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10C6,%r14
	je L_459798
L_193359:
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10C7,%r13
	jne L_193031
L_193360:
	movq 0x8(%r14),%r13
	movq %r13,0x3D8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_53+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_459798:
L_193355:
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10C6,%r13
	jne L_193031
L_193356:
	movq 0x8(%r14),%r13
	movq %r13,0x3D8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_53+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_459802:
L_193369:
	movq 0x10(%r9),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r8),%r14
	shrq $0x1,%r14
	cmpq $0x10D2,%r14
	jne L_193031
L_193370:
	movq 0x10(%r8),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r8),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10C6,%r13
	je L_459804
L_193382:
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C7,%r15
	jne L_193031
L_193383:
	movq 0x8(%r13),%r15
	movq %r15,0x3D8(%rbp)
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (L_193373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_459804:
L_193371:
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	jne L_193031
L_193372:
	movq 0x8(%r13),%r15
	movq %r15,0x3D8(%rbp)
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (L_193373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_459807:
L_193361:
	movq 0x8(%r9),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x98(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r8),%r14
	shrq $0x1,%r14
	cmpq $0x10D1,%r14
	jne L_193031
L_193362:
	movq 0x8(%r8),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r8),%r14
	movq %r14,0xC0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x3D8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (L_193363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x28EA
L_193475:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x98(%rbp),%r15
	movq %r15,0x0(%r14)
	incl 0x90(%rbp)
	jmp loop_2051
.p2align 0x4
.long 0x292C
L_193906:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	movq 0x438(%rbp),%r15
	movq %r15,0x430(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193907
L_193909:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x440,%rbp
	leaq (L_193910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193910
.p2align 0x4
.long 0x292D
L_193910:
	addq $0xFFFFFFFFFFFFFBC0,%rbp
L_193907:
	movq 0x430(%rbp),%r15
	jmp L_193908
.p2align 0x4
.long 0x293A
L_193971:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movq 0x430(%rbp),%r15
	movq %r15,0x428(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193972
L_194008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x438,%rbp
	leaq (L_194009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194009
.p2align 0x4
.long 0x293F
L_194009:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
L_193972:
	movq 0x428(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	je L_193974
L_193976:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10C6,%r14
	je L_459816
L_194005:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	andq $0x1,%r11
	jnz L_459815
L_194006:
	movq %r13,%r15
L_193979:
	movq 0x0(%r15),%r14
	movq %r14,0x438(%rbp)
	addq $0x438,%rbp
	leaq (L_193980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_459815:
L_193974:
	movq $0x1155,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x428(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x380(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x420(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2605,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xC8(%rbp),%r15
L_193975:
	movq %r15,0xC8(%rbp)
	movq %r14,0xD0(%rbp)
	incl 0xD8(%rbp)
	jmp loop_2039
.p2align 0x4
L_459816:
L_193977:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	andq $0x1,%r11
	jnz L_193974
L_193978:
	movq %r13,%r15
	jmp L_193979
.p2align 0x4
.long 0x2941
L_194034:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194035
L_194039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_194040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194040
.p2align 0x4
.long 0x2942
L_194040:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_194035:
	movq $0x21A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movq $0x21B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C5,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_194036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194036
.p2align 0x4
.long 0x28D3
L_194036:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2068:
	cmpq $0x1,%r15
	jnl L_459820
L_194038:
	movq %r15,%r13
	movq %r15,%r11
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq 0x88(%rbp),%r10
	movq %r10,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq 0x90(%rbp),%r13
	movq %r13,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_2068
.p2align 0x4
L_459820:
L_194037:
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x88(%rbp)
	jmp L_193322
.p2align 0x4
.long 0x28CE
not_52:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	testl %r15d,%r15d
	jnz loop_2035
	jmp L_193031
.p2align 0x4
.long 0x28CE
not_51:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	testl %r15d,%r15d
	jnz loop_2035
	jmp L_193031
.p2align 0x4
.long 0x28D1
L_193070:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0xB0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10CE,%r13
	je L_459826
L_193075:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10CF,%r14
	jne L_193031
L_193076:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_459823
L_193081:
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10C7,%r13
	jne L_193031
L_193082:
	movq 0x8(%r15),%r13
	movq %r13,0x3D8(%rbp)
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_50+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_459823:
L_193077:
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10C6,%r13
	jne L_193031
L_193078:
	movq 0x8(%r15),%r13
	movq %r13,0x3D8(%rbp)
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (not_50+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_459826:
L_193071:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10CE,%r14
	jne L_193031
L_193072:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r11
	movq 0x0(%r13),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r11)
	je loop_2035
	jmp L_193031
.p2align 0x4
.long 0x2A35
L_195160:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	movq %r14,0x90(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10D0,%r14
	jne L_459836
L_195163:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	jne L_459835
L_195165:
	movq 0x0(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x88(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_192992
L_195167:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2088:
	cmpl %ecx,%ebx
	je L_459832
L_195168:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_193003
L_195170:
	salq $0x4,%r14
	movq 0x88(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	testl %r11d,%r11d
	jnz L_459829
L_195171:
	incl %ebx
	jo L_193140
L_195172:
	jmp loop_2088
.p2align 0x4
L_459829:
L_195173:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_195174
L_195176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_195177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195177
.p2align 0x4
.long 0x2A36
L_195177:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_195174:
	movl $0x1,%ecx
L_195175:
	movq 0x90(%rbp),%r14
	movq 0x18(%r14),%r15
	movq $0x1EAD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x115D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
L_195162:
	movq %r15,0x50(%rbp)
	incl 0x34(%rbp)
	jmp loop_2087
.p2align 0x4
L_459832:
L_195178:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_195179
L_195180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_195181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195181
.p2align 0x4
.long 0x2A36
L_195181:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_195179:
	xorl %ecx,%ecx
	jmp L_195175
.p2align 0x4
L_459835:
L_195164:
	movq 0x50(%rbp),%r15
	jmp L_195162
.p2align 0x4
L_459836:
L_195161:
	movq 0x50(%rbp),%r15
	jmp L_195162
.p2align 0x4
.long 0x2948
L_194116:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq $0x1,%r15
	jne L_459837
L_194119:
	movq $0x11,0x3C8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_459837:
L_194118:
	movq (globalObjptr+0x1510)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x299E
L_195068:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x370(%rbp)
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (bug_486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2A2F
L_195102:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_195103
L_195140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_195141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195141
.p2align 0x4
.long 0x2A31
L_195141:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_195103:
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x4C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x48F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x53,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movl $0x0,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x4451,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq %r11,0x0(%r8)
	movq %r15,0x8(%r8)
	movq $0x4C7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r8,0x8(%r11)
	movq %r10,0x10(%r11)
	addq $0x20,%r12
	movq %r9,0x0(%r11)
	movl 0x0(%r9),%r10d
	testl %r10d,%r10d
	jnz L_459853
L_195104:
	movq 0x0(%r14),%r10
	movq $0x21B5,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,0x0(%r8)
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r10,1)
	movq %r8,0x0(%r14)
	movl $0x1,0x0(%r9)
	movq %r15,%r14
	movq %r11,%r15
L_195105:
	movq $0x4CB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x78(%rbp)
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x10(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x88(%rbp)
	movq 0x0(%r11),%r14
	movq 0x98(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x90(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_194420
L_195106:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_459851
L_195107:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_195109:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_459850
L_195130:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD98,%r11
	jne L_459849
L_195131:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x18)(%rip)
	je L_459846
L_195110:
	incl %ecx
	movl %ecx,0x98(%rbp)
	jo L_193140
L_195111:
	cmpq $0x1,%r15
	je L_459838
L_195112:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_195109
.p2align 0x4
L_459838:
L_195113:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_195114
L_195128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_195129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195129
.p2align 0x4
.long 0x2A30
L_195129:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_195114:
	movl 0x98(%rbp),%ecx
L_195115:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_194430
L_195116:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_195118
L_195127:
	movl %ecx,0x0(%r15)
L_195118:
	movq $0x1B31,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10CE,%r15
	je L_459841
L_195124:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_459840
L_195126:
	movq 0x8(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
L_195120:
	cmpq $0x1,0x0(%r15)
	jne L_195122
L_195123:
	movq (globalObjptr+0x7418)(%rip),%r15
L_195122:
	movq $0x1EAF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x24(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	jmp L_195082
.p2align 0x4
L_459840:
L_195125:
	movq 0x8(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_195120
.p2align 0x4
L_459841:
L_195119:
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r13
	movq %r13,%r15
	jmp L_195120
.p2align 0x4
L_459846:
L_195133:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_194430
L_195134:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_195136
L_195137:
	movl %ecx,0x0(%r15)
	jmp L_195136
.p2align 0x4
L_459849:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_195110
.p2align 0x4
L_459850:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_195110
.p2align 0x4
L_459851:
L_195138:
	xorl %ecx,%ecx
	jmp L_195115
.p2align 0x4
L_459853:
	movq %r15,%r14
	movq %r11,%r15
	jmp L_195105
.p2align 0x4
.long 0x2A32
x_607:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_195143
L_195147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_195148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195148
.p2align 0x4
.long 0x2A33
L_195148:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_195143:
	movq 0xD8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x12FE,%r14
	je L_459855
L_195146:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
L_195145:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xC0(%rbp),%r13
	movq %r13,%r10
	imulq $0x18,%r10
	movq 0xD0(%rbp),%r9
	movq %r9,0x8(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	imulq $0x18,%r11
	movq %r15,0x10(%r14,%r11,1)
	movq %r13,%r15
	imulq $0x18,%r15
	movl 0xC8(%rbp),%r11d
	movl %r11d,0x0(%r14,%r15,1)
	incq %r13
	movq %r13,0xC0(%rbp)
	jmp loop_2086
.p2align 0x4
L_459855:
L_195144:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_195145
.p2align 0x4
.long 0x28CD
L_193020:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193021
L_195183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_195184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195184
.p2align 0x4
.long 0x2A37
L_195184:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_193021:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je loop_2035
L_193022:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_193017
.p2align 0x4
.long 0x28D4
L_193130:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movl 0x428(%rbp),%ecx
	movl %ecx,0x98(%rbp)
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x388(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp fromIntForLength_1
.p2align 0x4
.long 0x28D6
L_193138:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movl 0x428(%rbp),%ecx
	movl %ecx,0x24(%rbp)
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x388(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_193139
.p2align 0x4
.long 0x28D7
L_193150:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movl 0x430(%rbp),%r15d
	movl %r15d,0xCC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193151
L_193953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193954
.p2align 0x4
.long 0x2937
L_193954:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193151:
	movl 0xCC(%rbp),%ecx
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x388(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_193152
.p2align 0x4
.long 0x292F
L_193919:
	addq $0xFFFFFFFFFFFFFBB0,%rbp
	movl 0x450(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193920
L_193944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x448,%rbp
	leaq (L_193945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193945
.p2align 0x4
.long 0x2935
L_193945:
	addq $0xFFFFFFFFFFFFFBB8,%rbp
L_193920:
	movl 0x24(%rbp),%ecx
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x430(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_193921
.p2align 0x4
.long 0x2932
L_193933:
	addq $0xFFFFFFFFFFFFFB90,%rbp
	movl 0x470(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	testl %r15d,%r15d
	jz L_459860
L_193934:
	movq 0x458(%rbp),%r15
	movq %r15,0x468(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x470(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x478(%rbp)
	addq $0x468,%rbp
	leaq (L_193935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_459860:
L_193936:
	movl 0x244(%rbp),%r15d
	testl %r15d,%r15d
	jz L_459861
L_193937:
	movq 0x458(%rbp),%r15
	movq %r15,0x470(%rbp)
	movq %r15,0x478(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x480(%rbp)
	addq $0x470,%rbp
	leaq (L_193938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_459861:
L_193939:
	movq 0x460(%rbp),%r15
	jmp L_193940
.p2align 0x4
.long 0x2927
L_193829:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_193830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x291E
L_193770:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movl 0x428(%rbp),%r15d
	movl %r15d,0x244(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193771
L_193795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193796
.p2align 0x4
.long 0x2924
L_193796:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193771:
	movl 0x244(%rbp),%ecx
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x380(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_193772
.p2align 0x4
.long 0x2921
L_193784:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movl 0x430(%rbp),%r15d
	movl %r15d,0x244(%rbp)
	testl %r15d,%r15d
	jz L_459863
L_193785:
	movq 0x3D0(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x430(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x438(%rbp)
	addq $0x428,%rbp
	leaq (L_193786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_459863:
L_193787:
	movl 0x324(%rbp),%r15d
	testl %r15d,%r15d
	jz L_459864
L_193788:
	movq 0x3D0(%rbp),%r15
	movq %r15,0x430(%rbp)
	movq %r15,0x438(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x440(%rbp)
	addq $0x430,%rbp
	leaq (L_193789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_459864:
L_193790:
	movq 0x420(%rbp),%r15
	jmp L_193791
.p2align 0x4
.long 0x290F
L_193691:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	movl 0x438(%rbp),%r15d
	movl %r15d,0x324(%rbp)
	movl %r15d,0x438(%rbp)
	movq $0x3,0x440(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x448(%rbp)
	addq $0x438,%rbp
	leaq (L_193692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x28DC
L_193227:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193228
L_193683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193684
.p2align 0x4
.long 0x290D
L_193684:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193228:
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x0,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%rdx
	testq %rdx,%rdx
	jz L_459876
L_193229:
	cmpq $0x7FFFFFFF,%rdx
	ja L_193090
L_193230:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193231
.p2align 0x4
.long 0x28DD
L_193231:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq %rax,0x90(%rbp)
L_193232:
	movq $0x0,0x380(%rbp)
.p2align 0x4,,0x7
loop_2044:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459874
.p2align 0x4,,0x7
L_193233:
	movq 0x380(%rbp),%r15
	cmpq 0x30(%rbp),%r15
	jnl L_459866
L_193675:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	imulq $0x30,%r14
	movq 0xD8(%rbp),%r8
	movq 0x8(%r8,%r14,1),%rsp
	imulq $0x30,%r13
	movq 0x10(%r8,%r13,1),%r14
	imulq $0x30,%r11
	movq 0x18(%r8,%r11,1),%r13
	imulq $0x30,%r10
	imulq $0x30,%r9
	movq 0x20(%r8,%r9,1),%r11
	imulq $0x30,%r15
	movq 0x28(%r8,%r15,1),%r9
	movl 0x0(%r8,%r10,1),%r15d
	testl %r15d,%r15d
	jnz L_459865
L_193676:
	movq $0x21A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %rsp,0x18(%r15)
	addq $0x28,%r12
	movq %r15,%r14
	movq %r11,%r13
L_193677:
	movq 0x90(%rbp),%r15
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x380(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r14,0x0(%r15,%r9,1)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,%r14
	salq $0x4,%r14
	movq %r13,0x8(%r15,%r14,1)
	incq %r11
	movq %r11,0x380(%rbp)
	jmp loop_2044
.p2align 0x4
L_459865:
L_193678:
	movq $0x21A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x18,%r12
	movq %r15,%r14
	movq %r11,%r13
	jmp L_193677
.p2align 0x4
L_459866:
L_193234:
	movq 0x90(%rbp),%r14
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r14d
	movl %r14d,0x24(%rbp)
	movslq %r14d,%r11
	cmpq %r11,%r13
	jne L_192992
L_193236:
	xorl %ecx,%ecx
	xchgq %r13,%r15
.p2align 0x4,,0x7
loop_2045:
	cmpl 0x24(%rbp),%ecx
	je L_459871
L_193237:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_193003
L_193239:
	salq $0x4,%r14
	movq 0x90(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0x10D1,%r10
	jne L_459868
L_193669:
	incl %ecx
	jo L_193140
L_193670:
	jmp loop_2045
.p2align 0x4
L_459868:
L_193240:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193241
L_193667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193668
.p2align 0x4
.long 0x290C
L_193668:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193241:
	movl $0x0,0x30(%rbp)
L_193242:
	movq $0x37F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x428(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x430(%rbp)
	addq $0x428,%rbp
	leaq (L_193243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_11
.p2align 0x4
L_459871:
L_193671:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193672
L_193673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193674
.p2align 0x4
.long 0x290C
L_193674:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193672:
	movl $0x1,0x30(%rbp)
	jmp L_193242
.p2align 0x4
L_459874:
L_193679:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193680
.p2align 0x4
.long 0x290B
L_193680:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_193233
.p2align 0x4
L_459876:
L_193682:
	movq (globalObjptr+0x52B0)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_193232
.p2align 0x4
.long 0x28FF
L_193596:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x3B0(%rbp)
	movq 0x418(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x3C8(%rbp)
	movq 0x380(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x3D0(%rbp)
	cmpq %r14,%rdx
	jne L_192992
L_193598:
	testq %rdx,%rdx
	jz L_459887
L_193599:
	cmpq $0x7FFFFFFF,%rdx
	ja L_193090
L_193600:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193601
.p2align 0x4
.long 0x2900
L_193601:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq %rax,0x3D8(%rbp)
L_193602:
	movq $0x0,0x3E0(%rbp)
.p2align 0x4,,0x7
loop_2059:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459885
.p2align 0x4,,0x7
L_193603:
	movq 0x3E0(%rbp),%r15
	cmpq 0x3D0(%rbp),%r15
	jnl L_459882
L_193615:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x380(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	cmpq $0x1,%r11
	je L_459881
L_193616:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10C8,%r15
	je L_459879
	cmpq $0x10CB,%r15
	je L_459878
	jmp L_193574
.p2align 0x4
L_459878:
L_193622:
	movq 0x0(%r11),%r15
	movq $0x2195,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1,0x0(%r13)
	movq %r14,%r15
	movq %r13,%r14
L_193620:
	movq 0x3D8(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x3E0(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r14,0x0(%r13,%r9,1)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,%r14
	salq $0x4,%r14
	movq %r15,0x8(%r13,%r14,1)
	incq %r11
	movq %r11,0x3E0(%rbp)
	jmp loop_2059
.p2align 0x4
L_459879:
L_193617:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r13
	movq $0x1147,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x3B0(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_459880
L_193621:
	movq 0x8(%r10),%r13
	movq %r11,%r15
L_193619:
	movq 0x8(%r13),%r11
	movq $0x2193,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movq $0x1,0x0(%r13)
	movq %r14,%r15
	movq %r13,%r14
	jmp L_193620
.p2align 0x4
L_459880:
L_193618:
	movq 0x8(%r10),%r13
	movq %r11,%r15
	jmp L_193619
.p2align 0x4
L_459881:
L_193623:
	movq $0x1,%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_193620
.p2align 0x4
L_459882:
L_193604:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193605
L_193613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193614
.p2align 0x4
.long 0x2904
L_193614:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193605:
	movq 0x3D8(%rbp),%r15
	movq $0xAE7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x114F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq $0x1,0x0(%r15)
	movq 0x3B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x380(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FB,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193606
.p2align 0x4
.long 0x2901
L_193606:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2060:
	cmpq $0x1,%r15
	jnl L_459883
L_193612:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x380(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2060
.p2align 0x4
L_459883:
L_193607:
	movq $0xB41,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x440(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x430(%rbp)
	movl $0x0,0x438(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x448(%rbp)
	addq $0x428,%rbp
	leaq (L_193608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1290
.p2align 0x4
L_459885:
L_193624:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193625
.p2align 0x4
.long 0x2905
L_193625:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_193603
.p2align 0x4
L_459887:
L_193627:
	movq (globalObjptr+0x5258)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	jmp L_193602
.p2align 0x4
.long 0x28E2
L_193291:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	movq 0x420(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193292
L_193509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x420,%rbp
	leaq (L_193510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193510
.p2align 0x4
.long 0x28EF
L_193510:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
L_193292:
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalWord64+0xFF0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1279,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD0(%rbp)
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	cmpq $0x1,0x90(%rbp)
	jne L_459893
L_193508:
	movq $0x21B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq %r13,0x8(%r14)
	movq %r14,0x90(%rbp)
L_193297:
	movq 0x98(%rbp),%rdx
	testq %rdx,%rdx
	jz L_459892
L_193298:
	cmpq $0x7FFFFFFF,%rdx
	ja L_193090
L_193299:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_193300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193300
.p2align 0x4
.long 0x28E5
L_193300:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,0xC8(%rbp)
L_193301:
	movq $0x0,0xD0(%rbp)
.p2align 0x4,,0x7
loop_2049:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459890
.p2align 0x4,,0x7
L_193302:
	movq 0xD0(%rbp),%r15
	cmpq 0x98(%rbp),%r15
	jnl L_459889
L_193501:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq $0x219D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	addq $0x10,%r12
	movq $0x21A1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,%r11
	salq $0x4,%r11
	movq %r13,0x0(%r14,%r11,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,%r13
	salq $0x4,%r13
	movq %r9,0x8(%r14,%r13,1)
	incq %r15
	movq %r15,0xD0(%rbp)
	jmp loop_2049
.p2align 0x4
L_459889:
L_193303:
	movq 0xC8(%rbp),%r13
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r13)
	movq 0x30(%rbp),%r14
	movq 0x90(%rbp),%r11
	movq %r11,0x30(%rbp)
	xchgq %r13,%r15
	jmp L_193304
.p2align 0x4
L_459890:
L_193502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_193503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193503
.p2align 0x4
.long 0x28ED
L_193503:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	jmp L_193302
.p2align 0x4
L_459892:
L_193505:
	movq (globalObjptr+0x52E8)(%rip),%r15
	movq %r15,0xC8(%rbp)
	jmp L_193301
.p2align 0x4
L_459893:
L_193293:
	movq 0x90(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movl 0x0(%r15),%r9d
	movq $0x1271,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	movl %r9d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x28,%r12
	movl $0x0,0x4(%r15)
	movq %r10,0x18(%r15)
	movq 0x8(%r10),%r15
	movq $0x37D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x420(%rbp)
	movl $0x2,0x428(%rbp)
	addq $0x420,%rbp
	leaq (L_193294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x28F1
L_193516:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193517
L_193518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_193519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193519
.p2align 0x4
.long 0x28F2
L_193519:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_193517:
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalWord64+0x1000)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0xC8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xD0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x90(%rbp)
	jmp L_193297
.p2align 0x4
.long 0x2907
L_193648:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193649
L_193656:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_193657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193657
.p2align 0x4
.long 0x290A
L_193657:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_193649:
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalWord64+0x1000)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21AB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0xC8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0xD8(%rbp)
	movq $0x21A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x380(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C5,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_193650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193650
.p2align 0x4
.long 0x2908
L_193650:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq %rax,0x88(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2061:
	cmpq $0x1,%r15
	jnl L_459896
L_193655:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x88(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r14
	movq 0x380(%rbp),%r10
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	salq $0x4,%r13
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_2061
.p2align 0x4
L_459896:
L_193651:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193652
L_193653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_193654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193654
.p2align 0x4
.long 0x2909
L_193654:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_193652:
	movq 0x88(%rbp),%r15
	movq $0x4CF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r14
	movq 0xD8(%rbp),%r13
	movq %r13,0x30(%rbp)
	jmp L_193304
.p2align 0x4
.long 0x28E7
not_53:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x8C(%rbp)
	testl %r15d,%r15d
	jnz L_193351
	jmp L_193031
.p2align 0x4
.long 0x28E9
L_193373:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x8C(%rbp)
	testl %r15d,%r15d
	jz L_193031
L_193375:
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x3D8(%rbp)
	movq 0x98(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x3D0(%rbp)
	addq $0x3D0,%rbp
	leaq (L_193376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x28E8
L_193363:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x8C(%rbp)
	testl %r15d,%r15d
	jz L_193031
L_193365:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_193366:
	testl %eax,%eax
	jz L_193031
L_193368:
	movq 0xA8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (not_53+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x293B
L_193980:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	movl 0x438(%rbp),%r15d
	movl %r15d,0xDC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193981
L_194002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x438,%rbp
	leaq (L_194003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194003
.p2align 0x4
.long 0x293F
L_194003:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
L_193981:
	movq 0x388(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x430(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_193804
	cmpq $0x2,%r13
	je L_459903
L_193982:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	leaq L_193999(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x440(%rbp)
	addq $0x440,%rbp
	leaq (L_193983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1872
.p2align 0x4
L_459903:
L_194001:
	shrq $0x2,%r14
	movl %r14d,%ecx
L_193986:
	cmpl %ecx,0xDC(%rbp)
	jl L_459904
L_193987:
	movq $0x1155,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x428(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x380(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x420(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2605,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xC8(%rbp),%r15
	jmp L_193975
.p2align 0x4
L_459904:
L_193988:
	movq 0x428(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10CE,%r14
	je L_459905
L_193990:
	movq 0x8(%r15),%r14
	movq %r14,0x430(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x438(%rbp)
	movq 0x3A8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x450(%rbp)
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x3,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x448(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x448,%rbp
	leaq (L_193991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_459905:
L_193989:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5300)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x28CE
not_50:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	testl %r15d,%r15d
	jnz loop_2035
	jmp L_193031
.p2align 0x4
.long 0x2949
L_194120:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x1C8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_459908
L_194121:
	movq 0x0(%r11),%r15
	movq %r15,0xC0(%rbp)
	movq $0x11,0x3C8(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_459908:
L_195062:
	movq %r14,0x370(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_195063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x299E
bug_486:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_195069
L_195070:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x378,%rbp
	leaq (L_195071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195071
.p2align 0x4
.long 0x29A2
L_195071:
	addq $0xFFFFFFFFFFFFFC88,%rbp
L_195069:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x368(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2933
L_193935:
	addq $0xFFFFFFFFFFFFFB98,%rbp
	movq 0x468(%rbp),%r15
	movq %r15,0x460(%rbp)
	jmp L_193936
.p2align 0x4
.long 0x2934
L_193938:
	addq $0xFFFFFFFFFFFFFB90,%rbp
	movq 0x470(%rbp),%r15
	movq %r15,0x458(%rbp)
	movl 0x244(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	jmp next_16
.p2align 0x4
.long 0x2927
L_193830:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movl 0x428(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0xD8(%rbp)
.p2align 0x4,,0x7
loop_2064:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459927
.p2align 0x4,,0x7
L_193831:
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jz L_459912
L_193832:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_459911
L_193833:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	decl %r15d
	jo L_193140
L_193834:
	movq %r13,0x30(%rbp)
	movl %r15d,0x24(%rbp)
	movq $0x2603,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD8(%rbp)
	jmp loop_2064
.p2align 0x4
L_459911:
L_193835:
	movq (globalObjptr+0x52A0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459912:
L_193836:
	movq 0xD8(%rbp),%r14
	cmpq $0x1,%r14
	je L_193850
L_193837:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0xD8(%rbp)
	movq %r13,0x380(%rbp)
	movq $0x1,0x388(%rbp)
.p2align 0x4,,0x7
L_193838:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459925
.p2align 0x4,,0x7
L_193839:
	movq $0x2603,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x380(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x388(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD8(%rbp),%r14
	cmpq $0x1,%r14
	je L_459913
L_193840:
	movq %r15,0x388(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0x380(%rbp)
	jmp L_193838
.p2align 0x4
L_459913:
L_193841:
	movq 0x388(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq $0x1,0x388(%rbp)
.p2align 0x4,,0x7
L_193842:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459924
.p2align 0x4,,0x7
L_193843:
	movq $0x2603,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x380(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x388(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD8(%rbp),%r14
	cmpq $0x1,%r14
	je L_459914
L_193844:
	movq %r15,0x388(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0x380(%rbp)
	jmp L_193842
.p2align 0x4
L_459914:
L_193845:
	movq 0x380(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x380(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x88(%rbp)
.p2align 0x4,,0x7
L_193846:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459923
.p2align 0x4,,0x7
L_193847:
	movq $0x2603,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x380(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_459915
L_193848:
	movq %r15,0x380(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0xD8(%rbp)
	jmp L_193846
.p2align 0x4
L_459915:
L_193849:
	movq %r15,0x88(%rbp)
L_193850:
	movl 0xC8(%rbp),%ecx
	decl %ecx
	jo L_193140
.p2align 0x4,,0x7
loop_2065:
	cmpl $0x0,%ecx
	jl L_459920
L_193852:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %ecx,%r15
	cmpq 0x90(%rbp),%r15
	jnb L_193003
L_193854:
	movq 0x98(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_459918
L_193855:
	movq 0x0(%r13),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x380(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
L_193856:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459917
.p2align 0x4,,0x7
L_193857:
	movq $0x2603,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x380(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_459916
L_193858:
	movq %r15,0x380(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0xD8(%rbp)
	jmp L_193856
.p2align 0x4
L_459916:
L_193859:
	movq %r15,0x30(%rbp)
	movl 0x24(%rbp),%ecx
	jmp loop_2065
.p2align 0x4
L_459917:
L_193860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193861
.p2align 0x4
.long 0x28D9
L_193861:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_193857
.p2align 0x4
L_459918:
L_193862:
	movl 0x24(%rbp),%ecx
	jmp loop_2065
.p2align 0x4
L_459920:
L_193863:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193176
L_193865:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193866
.p2align 0x4
.long 0x2926
L_193866:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_193176
.p2align 0x4
L_459923:
L_193867:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193868
.p2align 0x4
.long 0x28D9
L_193868:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_193847
.p2align 0x4
L_459924:
L_193869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193870
.p2align 0x4
.long 0x2928
L_193870:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_193843
.p2align 0x4
L_459925:
L_193871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193872
.p2align 0x4
.long 0x2928
L_193872:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_193839
.p2align 0x4
L_459927:
L_193874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193875
.p2align 0x4
.long 0x2929
L_193875:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	jmp L_193831
.p2align 0x4
.long 0x2922
L_193786:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x420(%rbp)
	jmp L_193787
.p2align 0x4
.long 0x2923
L_193789:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movq 0x430(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movl 0x324(%rbp),%r15d
	movl %r15d,0x244(%rbp)
	jmp next_15
.p2align 0x4
.long 0x2910
L_193692:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	movq 0x438(%rbp),%r15
	movq %r15,0x420(%rbp)
	movq 0x3C8(%rbp),%r14
	movq %r14,0x430(%rbp)
	movq 0x428(%rbp),%r14
	movq %r14,0x438(%rbp)
	movq %r15,0x428(%rbp)
	addq $0x428,%rbp
	leaq (L_193693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x28DE
L_193243:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193244
L_193665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193666
.p2align 0x4
.long 0x290B
L_193666:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193244:
	movq $0x2607,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x28,%r12
	movl 0x30(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x98(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0xC8(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0xD8(%rbp),%r11
	movq %r11,0x18(%r13)
	movq 0x88(%rbp),%r11
	cmpq $0x1,%r11
	je L_459928
L_193245:
	movq 0x8(%r11),%r15
	xorl %ecx,%ecx
	movq 0x90(%rbp),%r14
	jmp L_193246
.p2align 0x4
L_459928:
L_193631:
	movq 0x90(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r13,%r15
	jmp L_193632
.p2align 0x4
.long 0x2902
L_193608:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x380(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193609
L_193610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193611
.p2align 0x4
.long 0x2903
L_193611:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193609:
	movq $0x1275,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x380(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x3A8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x88(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x88(%rbp)
	movq 0xD8(%rbp),%r15
	jmp loop_2046
.p2align 0x4
.long 0x28E3
L_193294:
	addq $0xFFFFFFFFFFFFFBE0,%rbp
	movq 0x420(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3D0,%rbp
	leaq (L_193295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1285
.p2align 0x4
.long 0x28E9
L_193376:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x8C(%rbp)
	testl %r15d,%r15d
	jz L_193031
L_193378:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x90(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_193379:
	testl %eax,%eax
	jnz L_193351
	jmp L_193031
.p2align 0x4
.long 0x293C
L_193983:
	addq $0xFFFFFFFFFFFFFBC0,%rbp
	movq 0x440(%rbp),%r15
	movq %r15,0x438(%rbp)
	movq %r15,0x440(%rbp)
	addq $0x440,%rbp
	leaq (L_193984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x291C
L_193999:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x430(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x293D
L_193991:
	addq $0xFFFFFFFFFFFFFBB8,%rbp
	movq 0x448(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193992
L_193995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x448,%rbp
	leaq (L_193996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193996
.p2align 0x4
.long 0x293E
L_193996:
	addq $0xFFFFFFFFFFFFFBB8,%rbp
L_193992:
	movq $0x1157,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x430(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x380(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x420(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x438(%rbp),%r13
	movq %r13,0x18(%r15)
	movslq 0xDC(%rbp),%r14
	cmpq 0x90(%rbp),%r14
	jnb L_193003
L_193994:
	movq 0x98(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq $0x2603,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13,%r14,8)
	movq 0xC8(%rbp),%r15
	movq 0xD0(%rbp),%r14
	jmp L_193975
.p2align 0x4
.long 0x294A
L_194122:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq $0x1,%r15
	jne L_194118
L_194124:
	movq $0x11,0x3C8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x299E
L_195063:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x370(%rbp)
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (bug_485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2911
L_193693:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
	movq 0x428(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193694
L_193737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x428,%rbp
	leaq (L_193738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193738
.p2align 0x4
.long 0x2919
L_193738:
	addq $0xFFFFFFFFFFFFFBD8,%rbp
L_193694:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x420(%rbp)
	addq $0x18,%r12
	movq 0x3C8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x3D0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x3B0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_459936
L_193736:
	movq 0x8(%r14),%r15
L_193696:
	movq 0x8(%r15),%r14
	cmpq $0x1,0x0(%r14)
	sete %al
	movzbl %al,%eax
	movl %eax,0x324(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x430(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x438(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x440(%rbp)
	addq $0x430,%rbp
	leaq (L_193697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp padToWidth_0
.p2align 0x4
L_459936:
L_193695:
	movq 0x8(%r14),%r15
	jmp L_193696
.p2align 0x4
.long 0x28E4
L_193295:
	addq $0xFFFFFFFFFFFFFC30,%rbp
	movq 0x3D0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193296
L_193506:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3D0,%rbp
	leaq (L_193507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193507
.p2align 0x4
.long 0x28EE
L_193507:
	addq $0xFFFFFFFFFFFFFC30,%rbp
L_193296:
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalWord64+0x1000)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0xD0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x90(%rbp)
	jmp L_193297
.p2align 0x4
.long 0x293C
L_193984:
	addq $0xFFFFFFFFFFFFFBC0,%rbp
	movl 0x440(%rbp),%r15d
	movl %r15d,0x244(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193985
L_193997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x438,%rbp
	leaq (L_193998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193998
.p2align 0x4
.long 0x293F
L_193998:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
L_193985:
	movl 0x244(%rbp),%ecx
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x388(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_193986
.p2align 0x4
.long 0x294B
L_194125:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xD0(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0xD8(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_459940
L_194126:
	movq 0x0(%r15),%r13
	movq %r13,0x3C8(%rbp)
	movq %r14,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_459940:
L_195057:
	movq 0xD8(%rbp),%r15
	movq %r15,0x370(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_195058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x299E
bug_485:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_195064
L_195065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x378,%rbp
	leaq (L_195066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195066
.p2align 0x4
.long 0x29A2
L_195066:
	addq $0xFFFFFFFFFFFFFC88,%rbp
L_195064:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x368(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2912
L_193697:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movq 0x430(%rbp),%r15
	movq %r15,0x3B0(%rbp)
	movq 0x388(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x3C8(%rbp)
	cmpq %r14,%rdx
	jne L_192992
L_193699:
	testq %rdx,%rdx
	jz L_459949
L_193700:
	cmpq $0x7FFFFFFF,%rdx
	ja L_193090
L_193701:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x430,%rbp
	leaq (L_193702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193702
.p2align 0x4
.long 0x2913
L_193702:
	addq $0xFFFFFFFFFFFFFBD0,%rbp
	movq %rax,0x428(%rbp)
L_193703:
	movq $0x0,0x430(%rbp)
.p2align 0x4,,0x7
loop_2062:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_459947
.p2align 0x4,,0x7
L_193704:
	movq 0x430(%rbp),%r15
	cmpq 0x3C8(%rbp),%r15
	jnl L_459945
L_193721:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x388(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x438(%rbp)
	cmpq $0x1,%r11
	je L_459944
L_193722:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10C8,%r15
	je L_459943
	cmpq $0x10CB,%r15
	je L_459942
L_193723:
	movq (globalObjptr+0x52C0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459942:
L_193730:
	movq 0x0(%r11),%r15
	movq $0x2191,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
.p2align 0x4,,0x7
L_193727:
	movq 0x428(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x430(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x4,%r15
	movq 0x438(%rbp),%r11
	movq %r11,0x8(%r14,%r15,1)
	incq %r13
	movq %r13,0x430(%rbp)
	jmp loop_2062
.p2align 0x4
L_459943:
L_193724:
	movq 0x8(%r11),%r15
	movq %r15,0x440(%rbp)
	movq 0x0(%r11),%r15
	movq $0x2D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x450(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x458(%rbp)
	addq $0x450,%rbp
	leaq (L_193725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_459944:
L_193731:
	movq $0x1,%r15
	jmp L_193727
.p2align 0x4
L_459945:
L_193705:
	movq 0x428(%rbp),%r13
	movq $0xAE7,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x3D0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x493,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq 0x3B0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10C6,%r14
	je L_459946
L_193720:
	movq 0x8(%r13),%r14
	xchgq %r11,%r15
L_193707:
	movq 0x8(%r14),%r13
	movq $0x37D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x438(%rbp)
	addq $0x18,%r12
	movl $0x2,0x440(%rbp)
	addq $0x438,%rbp
	leaq (L_193708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_459946:
L_193706:
	movq 0x8(%r13),%r14
	xchgq %r11,%r15
	jmp L_193707
.p2align 0x4
L_459947:
L_193732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x440,%rbp
	leaq (L_193733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193733
.p2align 0x4
.long 0x2918
L_193733:
	addq $0xFFFFFFFFFFFFFBC0,%rbp
	jmp L_193704
.p2align 0x4
L_459949:
L_193735:
	movq (globalObjptr+0x52B8)(%rip),%r15
	movq %r15,0x428(%rbp)
	jmp L_193703
.p2align 0x4
.long 0x294C
L_194127:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq $0x11,0x3C8(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x299E
L_195058:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x370(%rbp)
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (bug_484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2916
L_193725:
	addq $0xFFFFFFFFFFFFFBB0,%rbp
	movq 0x450(%rbp),%r15
	movq %r15,0x448(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193726
L_193728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x458,%rbp
	leaq (L_193729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193729
.p2align 0x4
.long 0x2917
L_193729:
	addq $0xFFFFFFFFFFFFFBA8,%rbp
L_193726:
	movq $0x2191,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x448(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x440(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_193727
.p2align 0x4
.long 0x2914
L_193708:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	movq 0x438(%rbp),%r15
	movq %r15,0x388(%rbp)
	movq %r15,0x438(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x440(%rbp)
	addq $0x438,%rbp
	leaq (L_193709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0x294D
L_194128:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq $0x1,%r15
	jne L_194118
L_194130:
	movq $0x11,0x3C8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x299E
bug_484:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_195059
L_195060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x378,%rbp
	leaq (L_195061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195061
.p2align 0x4
.long 0x29A2
L_195061:
	addq $0xFFFFFFFFFFFFFC88,%rbp
L_195059:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x368(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2914
L_193709:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	movq 0x438(%rbp),%r15
	movq %r15,0x388(%rbp)
	movl 0x24(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_459954
L_193710:
	movq %r15,0x438(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x440(%rbp)
	addq $0x438,%rbp
	leaq (L_193711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_459954:
L_193716:
	movq 0x400(%rbp),%r14
	movq %r14,0x438(%rbp)
	addq $0x438,%rbp
	leaq (bits_19+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1872
.p2align 0x4
.long 0x294C
L_194131:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x1D8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x108(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194132
.p2align 0x4
.long 0x294E
L_194132:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2072:
	cmpq $0x1,%r15
	jnl L_459955
L_195056:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2072
.p2align 0x4
L_459955:
L_194133:
	movq 0x108(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x120(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x128(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_459956
L_194134:
	movq 0x0(%r15),%r13
	movq %r13,0x3C8(%rbp)
	movq %r14,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_459956:
L_195051:
	movq 0x128(%rbp),%r15
	movq %r15,0x370(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_195052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2914
L_193711:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	movq 0x438(%rbp),%r15
	movq %r15,0x388(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193712
L_193714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x438,%rbp
	leaq (L_193715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193715
.p2align 0x4
.long 0x2915
L_193715:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
L_193712:
	movq 0x388(%rbp),%r15
L_193713:
	movq 0xD8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,%r10
	imulq $0x30,%r10
	movq %r15,0x8(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	imulq $0x30,%r15
	movq 0x420(%rbp),%r10
	movq %r10,0x10(%r14,%r15,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	imulq $0x30,%r15
	movq 0x428(%rbp),%r10
	movq %r10,0x18(%r14,%r15,1)
	movq %r13,%r15
	imulq $0x30,%r15
	movl 0x324(%rbp),%r10d
	movl %r10d,0x0(%r14,%r15,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	imulq $0x30,%r15
	movq 0x3A8(%rbp),%r10
	movq %r10,0x20(%r14,%r15,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	imulq $0x30,%r15
	movq 0x3B0(%rbp),%r11
	movq %r11,0x28(%r14,%r15,1)
	incq %r13
	movq %r13,0x30(%rbp)
	movl 0x244(%rbp),%ecx
	movq 0x380(%rbp),%r15
	jmp loop_2043
.p2align 0x4
.long 0x2914
bits_19:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
	movq 0x438(%rbp),%r15
	movq %r15,0x388(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_193717
L_193718:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x438,%rbp
	leaq (L_193719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_193719
.p2align 0x4
.long 0x2915
L_193719:
	addq $0xFFFFFFFFFFFFFBC8,%rbp
L_193717:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x388(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	jmp L_193713
.p2align 0x4
.long 0x294F
L_194135:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq $0x11,0x3C8(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x299E
L_195052:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x370(%rbp)
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (bug_483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2950
L_194136:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq $0x1,%r15
	jne L_194118
L_194138:
	movq $0x11,0x3C8(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x299E
bug_483:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_195053
L_195054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x378,%rbp
	leaq (L_195055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195055
.p2align 0x4
.long 0x29A2
L_195055:
	addq $0xFFFFFFFFFFFFFC88,%rbp
L_195053:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x368(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2951
L_194139:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194140
L_195049:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_195050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195050
.p2align 0x4
.long 0x2A2B
L_195050:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194140:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x3C8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x2952
L_194141:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194142
L_195047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_195048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195048
.p2align 0x4
.long 0x2A2A
L_195048:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194142:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x3C8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x2953
L_194143:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194144
L_195045:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_195046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195046
.p2align 0x4
.long 0x2A29
L_195046:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194144:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x3C8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x2954
L_194145:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x1E8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xB0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xC0(%rbp)
	movq $0x3,0x3C8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq %r14,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2955
L_194146:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194147
L_195043:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_195044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195044
.p2align 0x4
.long 0x2A28
L_195044:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194147:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x3C8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x2956
L_194148:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x3C8(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x2957
L_194149:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x3C8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2958
L_194150:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x3C8(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2959
L_194151:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x11,0x3C8(%rbp)
	movq %r15,0x3D0(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (bits_20+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x295A
bits_20:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194152
L_195041:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_195042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195042
.p2align 0x4
.long 0x2A27
L_195042:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194152:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x200(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_459965
L_194153:
	movq %r14,0x3D0(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (word_53+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_459965:
L_195036:
	movq %r11,0x370(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_195037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x295B
word_53:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194154
L_195034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_195035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195035
.p2align 0x4
.long 0x2A26
L_195035:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194154:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA8(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_459967
L_194155:
	movq 0x0(%r14),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_459967:
L_195029:
	movq 0xD8(%rbp),%r15
	movq %r15,0x370(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_195030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x299E
L_195037:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x370(%rbp)
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (bug_482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x295C
L_194156:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194157
L_195027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_195028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195028
.p2align 0x4
.long 0x2A25
L_195028:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194157:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194158
.p2align 0x4
.long 0x295D
L_194158:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq %rax,0x10(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2073:
	cmpq $0x1,%r15
	jnl L_459969
L_195026:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2073
.p2align 0x4
L_459969:
L_194159:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194160
L_195024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_195025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195025
.p2align 0x4
.long 0x2A24
L_195025:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194160:
	movq 0x10(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC0(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x120(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_459970
L_194161:
	movq 0x0(%r14),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_459970:
L_195019:
	movq 0x128(%rbp),%r15
	movq %r15,0x370(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_195020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x299E
L_195030:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x370(%rbp)
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (bug_481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x299E
bug_482:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_195038
L_195039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x378,%rbp
	leaq (L_195040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195040
.p2align 0x4
.long 0x29A2
L_195040:
	addq $0xFFFFFFFFFFFFFC88,%rbp
L_195038:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x368(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x295E
L_194162:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194163
L_195017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_195018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195018
.p2align 0x4
.long 0x2A23
L_195018:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194163:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x37D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x28,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xB0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x3C8(%rbp)
	movl $0x4,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x299E
L_195020:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x370(%rbp)
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (bug_480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x299E
bug_481:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_195031
L_195032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x378,%rbp
	leaq (L_195033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195033
.p2align 0x4
.long 0x29A2
L_195033:
	addq $0xFFFFFFFFFFFFFC88,%rbp
L_195031:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x368(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x295F
L_194164:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x3C8(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0x299E
bug_480:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_195021
L_195022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x378,%rbp
	leaq (L_195023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195023
.p2align 0x4
.long 0x29A2
L_195023:
	addq $0xFFFFFFFFFFFFFC88,%rbp
L_195021:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x368(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2960
L_194165:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194166
L_195015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_195016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195016
.p2align 0x4
.long 0x2A22
L_195016:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194166:
	movq $0x1EAD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x115D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x210(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x115D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x18,%r12
	movq (globalObjptr+0x7420)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x218(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq $0x11,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x2961
L_194167:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movl 0x3C8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpl $0x8,%r15d
	je L_459981
	cmpl $0x10,%r15d
	je L_459980
	cmpl $0x20,%r15d
	je L_459979
	cmpl $0x40,%r15d
	je L_459978
L_194168:
	movq (globalObjptr+0x2440)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_459978:
L_195014:
	movq 0xC8(%rbp),%r15
	movq %r15,0x10(%rbp)
L_194170:
	movq $0x11,0x3C8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (word_54+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_459979:
L_195013:
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_194170
.p2align 0x4
L_459980:
L_195012:
	movq 0xD0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_194170
.p2align 0x4
L_459981:
L_194169:
	movq 0xB0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_194170
.p2align 0x4
.long 0x2962
word_54:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194171
L_195010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_195011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195011
.p2align 0x4
.long 0x2A21
L_195011:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194171:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1EAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x115D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x41,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x2963
L_194172:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movl 0x3C8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpl $0x8,%r15d
	je L_459986
	cmpl $0x10,%r15d
	je L_459985
	cmpl $0x20,%r15d
	je L_459984
	cmpl $0x40,%r15d
	je L_459983
	jmp L_194168
.p2align 0x4
L_459983:
L_195009:
	movq 0xC8(%rbp),%r15
	movq %r15,0x10(%rbp)
L_194174:
	movq $0x41,0x3C8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (word_55+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_459984:
L_195008:
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_194174
.p2align 0x4
L_459985:
L_195007:
	movq 0xD0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_194174
.p2align 0x4
L_459986:
L_194173:
	movq 0xB0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_194174
.p2align 0x4
.long 0x2964
word_55:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194175
L_195005:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_195006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195006
.p2align 0x4
.long 0x29C0
L_195006:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194175:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1EAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x115D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xE0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x21,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x2965
L_194176:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movl 0x3C8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpl $0x8,%r15d
	je L_459991
	cmpl $0x10,%r15d
	je L_459990
	cmpl $0x20,%r15d
	je L_459989
	cmpl $0x40,%r15d
	je L_459988
	jmp L_194168
.p2align 0x4
L_459988:
L_195004:
	movq 0xC8(%rbp),%r15
	movq %r15,0x10(%rbp)
L_194178:
	movq $0x21,0x3C8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (word_56+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_459989:
L_195003:
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_194178
.p2align 0x4
L_459990:
L_195002:
	movq 0xD0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_194178
.p2align 0x4
L_459991:
L_194177:
	movq 0xB0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_194178
.p2align 0x4
.long 0x2966
word_56:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194179
L_195000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_195001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_195001
.p2align 0x4
.long 0x29C1
L_195001:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194179:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1EAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x115D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x100(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x81,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x2967
L_194180:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movl 0x3C8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpl $0x8,%r15d
	je L_459996
	cmpl $0x10,%r15d
	je L_459995
	cmpl $0x20,%r15d
	je L_459994
	cmpl $0x40,%r15d
	je L_459993
	jmp L_194168
.p2align 0x4
L_459993:
L_194999:
	movq 0xC8(%rbp),%r15
	movq %r15,0x10(%rbp)
L_194182:
	movq $0x81,0x3C8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (word_57+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_459994:
L_194998:
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_194182
.p2align 0x4
L_459995:
L_194997:
	movq 0xD0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_194182
.p2align 0x4
L_459996:
L_194181:
	movq 0xB0(%rbp),%r14
	movq %r14,0x10(%rbp)
	jmp L_194182
.p2align 0x4
.long 0x2968
word_57:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194183
L_194995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194996
.p2align 0x4
.long 0x2A20
L_194996:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194183:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1EAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x115D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x25F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB8(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x98(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
.p2align 0x4,,0x7
L_194184:
	incl %ecx
	jo L_193140
L_194185:
	cmpq $0x1,%r15
	je L_459997
L_194186:
	movq 0x8(%r15),%r15
	jmp L_194184
.p2align 0x4
L_459997:
L_194187:
	movslq %ecx,%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_460024
L_194188:
	cmpq $0x7FFFFFFF,%rdx
	ja L_193090
L_194189:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1495,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194190
.p2align 0x4
.long 0x2969
L_194190:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq %rax,%r15
L_194191:
	movq 0xB8(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2074:
	cmpq 0x10(%rbp),%r14
	jnl L_459999
L_194990:
	cmpq $0x1,%r13
	je L_193587
L_194991:
	movq %r14,%r11
	movq %r14,%r10
	movq 0x0(%r13),%r9
	movq 0x8(%r13),%r13
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsi
	movb $0x1,0x0(%rsi,%r9,1)
	salq $0x4,%r11
	movq %r8,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%rsi,%r11,1)
	salq $0x4,%r10
	movq %rsp,0x8(%r15,%r10,1)
	incq %r14
	jmp loop_2074
.p2align 0x4
L_459999:
L_194192:
	movq $0xF35,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_194193:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_460022
.p2align 0x4,,0x7
L_194194:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF37,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x29A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_460000
L_194195:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_194193
.p2align 0x4
L_460000:
L_194196:
	movq %r13,0x50(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_194197:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_460021
.p2align 0x4,,0x7
L_194198:
	movq $0x29A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_460001
L_194199:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_194197
.p2align 0x4
L_460001:
L_194200:
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_460016
L_194201:
	movq 0x50(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_194202:
	addq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r13
	je L_460002
L_194203:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_194202
.p2align 0x4
L_460002:
L_194204:
	testq %r15,%r15
	jz L_460015
L_194205:
	cmpq $0x7FFFFFFF,%r15
	ja L_193090
L_194206:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1495,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194207
.p2align 0x4
.long 0x296A
L_194207:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq %rax,%r15
L_194208:
	movq 0x90(%rbp),%r10
	movq 0x50(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2075:
	cmpq 0x10(%rbp),%r14
	jnl L_460005
.p2align 0x4,,0x7
loop_2084:
	cmpq 0x0(%r11),%r13
	jl L_460004
L_194969:
	cmpq $0x1,%r10
	je L_193482
L_194970:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_2084
.p2align 0x4
L_460004:
L_194972:
	movq %r13,%r9
	movq %r13,%r8
	movq %r14,%rsp
	movq %r14,%rsi
	salq $0x4,%r9
	movq 0x8(%r11),%rdi
	movq 0x0(%rdi,%r9,1),%rdx
	salq $0x4,%r8
	movq 0x8(%rdi,%r8,1),%r9
	incq %r13
	movq %r15,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%r8,1)
	salq $0x4,%rsp
	movq %rsp,%rax
	movq %rdx,0x0(%r15,%rax,1)
	movq %r15,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%rdi,%r8,1)
	salq $0x4,%rsi
	movq %r9,0x8(%r15,%rsi,1)
	incq %r14
	jmp loop_2075
.p2align 0x4
L_460005:
L_194209:
	movq $0xF35,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
L_194210:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	movq %r13,0x50(%rbp)
	cmpq %r14,%r13
	jne L_192992
L_194212:
	cmpl $0x0,%ecx
	jl L_193477
L_194213:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2076:
	cmpl %ecx,%ebx
	jnl L_460006
L_194966:
	movslq %ebx,%r15
	salq $0x4,%r15
	movq 0x10(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movl %ebx,0x0(%r13)
	incl %ebx
	jmp loop_2076
.p2align 0x4
L_460006:
L_194214:
	movq 0x50(%rbp),%rdx
	testq %rdx,%rdx
	jz L_460011
L_194215:
	cmpq $0x7FFFFFFF,%rdx
	ja L_193090
L_194216:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1695,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194217
.p2align 0x4
.long 0x296B
L_194217:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq %rax,0x90(%rbp)
L_194218:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2077:
	cmpq 0x50(%rbp),%r15
	jnl L_460007
L_194963:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r13,1),%r11
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2077
.p2align 0x4
L_460007:
L_194219:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194220
L_194961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194962
.p2align 0x4
.long 0x2A1E
L_194962:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194220:
	movq 0x90(%rbp),%r15
	movq $0x77D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xE8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	cmpq $0x1,%r14
	je L_460008
L_194221:
	movq (globalObjptr+0xFF40)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460008:
L_194228:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x981,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x188F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x1891,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x98(%rbp)
	movq %r13,0x8(%r10)
	addq $0x40,%r12
	movq 0x3A0(%rbp),%r13
	movq %r13,0x0(%r10)
	movq 0x48(%rbp),%r13
	movq %r13,0x10(%r10)
	movq 0x40(%rbp),%r13
	movq %r13,0x18(%r10)
	movq 0x38(%rbp),%r13
	movq %r13,0x20(%r10)
	movq 0x68(%rbp),%r13
	movq %r13,0x28(%r10)
	movq 0x60(%rbp),%r13
	movq %r13,0x30(%r10)
	movq $0x797,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x799,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0xB0(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r9)
	movq 0x220(%rbp),%r8
	movq %r8,0x8(%r9)
	movq $0x71,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0xB8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x47B,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0xC0(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r8)
	movq %r9,0x8(%r8)
	movq $0x1893,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	addq $0x28,%r12
	movq %r13,0x0(%r15)
	movq 0x228(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r8,0x18(%r15)
	movq $0x1895,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xD0(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r8,0x8(%r13)
	movq $0x1897,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	addq $0x20,%r12
	movq %r10,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r14,0x10(%r15)
	movq $0x1899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE0(%rbp)
	addq $0x20,%r12
	movq 0x238(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x230(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x168(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x3267,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x388(%rbp)
	leaq L_194405(%rip),%r15
	movq %r15,0x358(%rbp)
	movq %rbp,%r15
	addq $0x360,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x370(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_194229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
L_460011:
L_194965:
	movq (globalObjptr+0x7438)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_194218
.p2align 0x4
L_460015:
L_194974:
	movq (globalObjptr+0x7428)(%rip),%r14
	xchgq %r14,%r15
	jmp L_194208
.p2align 0x4
L_460016:
L_194975:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x90(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r14,0x10(%rbp)
	je L_194210
L_194976:
	testq %r13,%r13
	jz L_460019
L_194977:
	cmpq $0x7FFFFFFF,%r13
	ja L_193090
L_194978:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1495,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194979
.p2align 0x4
.long 0x296B
L_194979:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq %rax,%r15
L_194980:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2085:
	cmpq 0x90(%rbp),%r14
	jnl L_460017
L_194982:
	movq %r14,%r13
	movq %r14,%r11
	movq %r14,%r10
	movq %r14,%r9
	salq $0x4,%r13
	movq 0x10(%rbp),%r8
	movq 0x0(%r8,%r13,1),%rsp
	salq $0x4,%r11
	movq 0x8(%r8,%r11,1),%r13
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r10
	movq %rsp,0x0(%r15,%r10,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r9
	movq %r13,0x8(%r15,%r9,1)
	incq %r14
	jmp loop_2085
.p2align 0x4
L_460017:
L_194981:
	movq $0xF35,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
	jmp L_194210
.p2align 0x4
L_460019:
L_194984:
	movq (globalObjptr+0x7430)(%rip),%r15
	jmp L_194980
.p2align 0x4
L_460021:
L_194986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194987
.p2align 0x4
.long 0x2A1F
L_194987:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	jmp L_194198
.p2align 0x4
L_460022:
L_194988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194989
.p2align 0x4
.long 0x2A1F
L_194989:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	jmp L_194194
.p2align 0x4
L_460024:
L_194994:
	movq (globalObjptr+0xD18)(%rip),%r15
	jmp L_194191
.p2align 0x4
.long 0x296C
L_194222:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194223
L_194958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194959
.p2align 0x4
.long 0x2A1D
L_194959:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194223:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x9D8)(%rip),%r14
	movq %r14,0x3C8(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x3D0(%rbp)
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x296E
L_194229:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194230
L_194413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194414
.p2align 0x4
.long 0x299B
L_194414:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_194230:
	movq 0x378(%rbp),%r14
	cmpq $0x1,%r14
	je L_460028
L_194231:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r15
L_194232:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x390(%rbp)
	movq $0x3441,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_194233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_460028:
L_194237:
	movl $0x0,0x38(%rbp)
L_194238:
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x220(%rbp),%r15
	movq %r15,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_194239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x291C
L_194405:
	addq $0xFFFFFFFFFFFFFCA0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
L_194406:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_194407
L_194408:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xC9D,%r14
	jne L_460031
L_194409:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	cmpq %r13,0xE8(%rbp)
	je L_460030
L_194410:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_460030:
L_194411:
	movl %r14d,0x38(%rbp)
	jmp L_194238
.p2align 0x4
L_460031:
L_194407:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x360(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x296D
L_194224:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x296F
L_194233:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194234
L_194403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194404
.p2align 0x4
.long 0x299A
L_194404:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_194234:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_194237
L_194235:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_194232
.p2align 0x4
.long 0x2970
L_194239:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movl 0x388(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194240
L_194401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194402
.p2align 0x4
.long 0x2999
L_194402:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_194240:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	addq $0x28,%r12
	movl 0x3C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r14,0x10(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x220(%rbp),%r15
	movq %r15,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_194241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x296D
L_194225:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194226
L_194956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194957
.p2align 0x4
.long 0x29B3
L_194957:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194226:
	movl $0x0,0x24(%rbp)
loop_2078:
	movl 0x24(%rbp),%r15d
	cmpl 0x20(%rbp),%r15d
	jnl L_194228
L_194415:
	movslq %r15d,%r14
	movq %r14,%r15
	imulq $0x18,%r15
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x50(%rbp)
	imulq $0x18,%r14
	movq 0x10(%r13,%r14,1),%r15
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%r11),%r13
	movq %r13,0xC0(%rbp)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	jne L_460036
L_194954:
	movq %r13,0x3C8(%rbp)
	movq %r14,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_460036:
	movq %r11,%r15
L_194417:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2971
L_194241:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movl 0x388(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194242
L_194399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194400
.p2align 0x4
.long 0x2998
L_194400:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_194242:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x3C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1,0x388(%rbp)
	movl $0x0,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_194243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
.long 0x299C
L_194955:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_194417
.p2align 0x4
.long 0x299C
L_194418:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2972
L_194243:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x388(%rbp)
	movl $0x0,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_194244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
.long 0x299D
L_194419:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r13
	movq %r13,0xD0(%rbp)
	movq 0x50(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_194420
L_194421:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_460056
L_194422:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movl $0x0,0x50(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_194424:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_194425
L_194467:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xD99,%r13
	jne L_194425
L_194468:
	movq 0x8(%r15),%r13
	movq %r13,0xD8(%rbp)
	movq 0x0(%r15),%r13
	cmpq %r13,0x3B8(%rbp)
	je L_460044
L_194425:
	movl 0x50(%rbp),%r13d
	incl %r13d
	jo L_193140
L_194426:
	cmpq $0x1,%r14
	je L_460040
L_194427:
	movl %r13d,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_194424
.p2align 0x4
L_460040:
	movl %r13d,%ecx
L_194429:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_194430
L_194431:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_605
L_194466:
	movl %ecx,0x0(%r15)
x_605:
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_460041
L_194464:
	movq 0xC0(%rbp),%r15
	movq %r15,0x370(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_194465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_460041:
	movq %r14,%r15
L_194434:
	movq %r15,0x370(%rbp)
	addq $0x370,%rbp
	leaq (L_194435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460044:
L_194470:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194471
L_194951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194952
.p2align 0x4
.long 0x2A1C
L_194952:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194471:
	movl 0x50(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_194430
L_194472:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_460051
L_194473:
	movq 0xD8(%rbp),%r15
L_194474:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0xF0(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	cmpq $0x1,%r13
	je L_460050
L_194475:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10D5,%r15
	je L_460049
	cmpq $0x10D6,%r15
	je L_460048
	cmpq $0x10D7,%r15
	je L_460047
	cmpq $0x10D8,%r15
	je L_460046
	cmpq $0x10D9,%r15
	je L_460045
L_194476:
	movq 0x10(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0xB0(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0xFF50)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460045:
L_194847:
	movq 0x8(%r13),%r15
	movq %r15,0xB8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0xFF90)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460046:
L_194790:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0xB0(%rbp)
	movq (globalObjptr+0xFF88)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460047:
L_194776:
	movq 0x18(%r13),%r15
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq $0x1271,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movl %r10d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r11,0x18(%r13)
	addq $0x28,%r12
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xFF80)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460048:
L_194675:
	movq 0x10(%r13),%r15
	movq %r15,0xB0(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0xC0(%rbp)
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq (globalObjptr+0xFF70)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460049:
L_194605:
	movq 0x10(%r13),%r15
	movq %r15,0xB0(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0xE0(%rbp)
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq (globalObjptr+0xFF68)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460050:
L_194945:
	movq (globalObjptr+0xFFA0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460051:
L_194950:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x50(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0xD8(%rbp),%r15
	jmp L_194474
.p2align 0x4
L_460056:
L_194953:
	xorl %ecx,%ecx
	jmp L_194429
.p2align 0x4
.long 0x2973
L_194244:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq $0x1,0x388(%rbp)
	movl $0x0,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_194245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x29A6
L_194465:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_194434
.p2align 0x4
.long 0x299E
L_194435:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x378(%rbp)
	addq $0x378,%rbp
	leaq (L_194436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x29A7
L_194477:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0xE0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x128(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,%r15
	andq $0x1,%r15
	jz L_460058
L_194583:
	shrq $0x1,%r13
	movl %r13d,0xC0(%rbp)
	movq (globalObjptr+0xDDF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460058:
L_194478:
	movq (globalObjptr+0xDEF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2A01
L_194848:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xC0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xE0(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_460059
L_194943:
	movq %r11,0x3C8(%rbp)
	movq %r14,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194944+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_460059:
L_194849:
L_194850:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x29F7
L_194791:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xE0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0xB0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_460060
L_194825:
	shrq $0x1,%r14
	movl %r14d,0xB0(%rbp)
	movq (globalObjptr+0xDDF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460060:
L_194792:
	movq (globalObjptr+0xDEF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x29F3
L_194777:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_52
.p2align 0x4
.long 0x29C8
L_194676:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x100(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x110(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_460061
L_194774:
	movq %r11,0x3C8(%rbp)
	movq %r14,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194775+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_460061:
L_194677:
L_194678:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x29C8
L_194606:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_24
.p2align 0x4
.long 0x2A1A
L_194946:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194947
L_194948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194949
.p2align 0x4
.long 0x2A1B
L_194949:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194947:
	movq 0x50(%rbp),%r15
L_194511:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_194512:
	addl 0x0(%r14),%ecx
	movl %ecx,0xB0(%rbp)
	jo L_193140
L_194513:
	cmpq $0x1,%r15
	je L_460062
L_194514:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_194512
.p2align 0x4
L_460062:
L_194515:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194516
L_194536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194537
.p2align 0x4
.long 0x29B6
L_194537:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194516:
	movl 0xB0(%rbp),%ecx
	testl %ecx,%ecx
	jz L_460063
L_194517:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
x_606:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x3D0(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_460063:
L_194535:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_606
.p2align 0x4
.long 0x2974
L_194245:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194246
L_194397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194398
.p2align 0x4
.long 0x2997
L_194398:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_194246:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1E6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0xF0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x368(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1,0x388(%rbp)
	movl $0x0,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_194247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
.long 0x299F
L_194436:
	addq $0xFFFFFFFFFFFFFC88,%rbp
	movq 0x378(%rbp),%r15
	movq %r15,0x370(%rbp)
	movq (globalObjptr+0xEA28)(%rip),%r15
	movq %r15,0x380(%rbp)
	addq $0x380,%rbp
	leaq (L_194437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x29A8
L_194584:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movl 0xC0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_460068
L_194585:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_194586:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460068:
L_194604:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_194586
.p2align 0x4
.long 0x29A8
L_194479:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194480
L_194581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194582
.p2align 0x4
.long 0x29C4
L_194582:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194480:
	movq 0xC0(%rbp),%r15
L_194481:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE80)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x128(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x2A19
L_194944:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_194850
.p2align 0x4
.long 0x2A02
L_194851:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194852
L_194941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194942
.p2align 0x4
.long 0x2A18
L_194942:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194852:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE40)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10CE,%r14
	je L_460070
L_194915:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq (globalObjptr+0xDE88)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460070:
L_194853:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xDE48)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x29F8
L_194826:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movl 0xB0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_460072
L_194827:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_194828:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460072:
L_194846:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_194828
.p2align 0x4
.long 0x29F8
L_194793:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194794
L_194823:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194824
.p2align 0x4
.long 0x29FF
L_194824:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194794:
	movq 0xB0(%rbp),%r15
L_194795:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE80)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x100(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x29F4
L_194778:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194779
L_194788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194789
.p2align 0x4
.long 0x29F6
L_194789:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194779:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB8(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_194780:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_193140
L_194781:
	cmpq $0x1,%r14
	je L_460074
L_194782:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_194780
.p2align 0x4
L_460074:
L_194783:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194784
L_194786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194787
.p2align 0x4
.long 0x29F5
L_194787:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194784:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_460075
L_194785:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_194511
.p2align 0x4
L_460075:
L_194538:
	movq (globalObjptr+0x9D0)(%rip),%r15
	jmp L_194511
.p2align 0x4
.long 0x29F2
L_194775:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x110(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_194678
.p2align 0x4
.long 0x29D6
L_194679:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194680
L_194772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194773
.p2align 0x4
.long 0x29D8
L_194773:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194680:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x100(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE40)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xE8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq %r11,0x110(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x120(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x128(%rbp)
	movq 0xE0(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x148(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x150(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x158(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x170(%rbp)
	movq 0x20(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r10d
	movslq %r10d,%r9
	cmpq %r15,%r9
	jne L_192992
L_194682:
	movl %r10d,0x3D0(%rbp)
	movq $0x3B29,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x20,%r12
	addq $0x3C8,%rbp
	leaq (L_194683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x29C9
L_194607:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194608
L_194673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194674
.p2align 0x4
.long 0x29D8
L_194674:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194608:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x100(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE90)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xE8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x120(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_460081
L_194671:
	movq %r11,0x3C8(%rbp)
	movq %r14,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194672+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_460081:
L_194609:
L_194610:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x29B2
L_194518:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x2975
L_194247:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq (globalObjptr+0xF70)(%rip),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194248
.p2align 0x4
.long 0x2976
L_194248:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq %rax,0x100(%rbp)
	movq $0x0,0x108(%rbp)
.p2align 0x4,,0x7
loop_2079:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_460086
.p2align 0x4,,0x7
L_194249:
	movq 0x108(%rbp),%r15
	cmpq $0x2,%r15
	jnl L_460085
L_194391:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_460084
	cmpl $0x1,%r14d
	je L_460083
	jmp L_194026
.p2align 0x4
L_460083:
L_194394:
	movq $0x1,%r11
	movq (globalObjptr+0xF70)(%rip),%r13
	movq 0x60(%rbp),%r14
	movq 0xF0(%rbp),%r15
L_194393:
	movq $0x23,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r14,0x10(%r10)
	movq %r15,0x18(%r10)
	addq $0x28,%r12
	movq 0x100(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x108(%rbp),%r14
	movq %r10,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x108(%rbp)
	jmp loop_2079
.p2align 0x4
L_460084:
L_194392:
	movq 0xF8(%rbp),%r11
	movq 0x370(%rbp),%r13
	movq 0x48(%rbp),%r14
	movq 0xE8(%rbp),%r15
	jmp L_194393
.p2align 0x4
L_460085:
L_194250:
	movq 0x100(%rbp),%r14
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x340(%rbp),%r14
	movq %r14,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_194251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_460086:
L_194395:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194396
.p2align 0x4
.long 0x2996
L_194396:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	jmp L_194249
.p2align 0x4
.long 0x29A0
L_194437:
	addq $0xFFFFFFFFFFFFFC80,%rbp
	movq 0x380(%rbp),%r15
	movq %r15,0x378(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_194438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x29C5
L_194587:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194588
L_194602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194603
.p2align 0x4
.long 0x29C7
L_194603:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194588:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x29A9
L_194482:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194483
L_194579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194580
.p2align 0x4
.long 0x29C3
L_194580:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194483:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x2966
L_194916:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_24
.p2align 0x4
.long 0x2A03
L_194854:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194855
L_194913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194914
.p2align 0x4
.long 0x2A11
L_194914:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194855:
	movq 0x100(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq %r11,0xB8(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0xE0(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0xE8(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x108(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x110(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x120(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x128(%rbp)
	movq 0x20(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r15
	jne L_192992
L_194857:
	movl %r10d,0x3D0(%rbp)
	movq $0x3B29,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x20,%r12
	addq $0x3C8,%rbp
	leaq (L_194858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x29BD
L_194829:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194830
L_194844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194845
.p2align 0x4
.long 0x29BF
L_194845:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194830:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x29AC
L_194796:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194797
L_194821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194822
.p2align 0x4
.long 0x29C0
L_194822:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194797:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x29DC
L_194683:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x29DB
L_194672:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x120(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_194610
.p2align 0x4
.long 0x29CA
L_194611:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194612
L_194669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194670
.p2align 0x4
.long 0x29DA
L_194670:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194612:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE40)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x29B2
L_194519:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194520
L_194533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194534
.p2align 0x4
.long 0x29B5
L_194534:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194520:
	movq 0xA8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_192992
L_194522:
	movl %r13d,0x3D0(%rbp)
	movq $0x3B17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x390(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x2977
L_194251:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movl 0x388(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194252
L_194389:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194390
.p2align 0x4
.long 0x2995
L_194390:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_194252:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x3C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xFF48)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0xF7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq %r13,0x18(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x2947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq 0x350(%rbp),%r13
	movq 0x30(%r13),%r11
	movq 0x28(%r13),%r10
	movq %r10,0xE8(%rbp)
	movq 0x20(%r13),%r9
	movq %r9,0xF0(%rbp)
	movq 0x38(%r13),%r8
	cmpb $0x7,0x0(%r8)
	je L_194255
L_194253:
	cmpb $0x2,0x0(%r11)
	jne L_460097
L_194281:
	movq 0x0(%r10),%r13
	movq %r13,0xF8(%rbp)
	cmpq $0x1,%r13
	je L_460096
L_194282:
	movq %r15,0x388(%rbp)
	movq %r9,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_194283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_53
.p2align 0x4
L_460096:
L_194288:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xF8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x3469,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x388(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_194289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_460097:
L_194255:
	xchgq %r14,%r15
L_194256:
	movq $0x11F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x388(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x390(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x398(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x3A0(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x3A8(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x3B0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x3B8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x3C0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movb 0x320(%rbp),%r15b
	movb %r15b,0x3D0(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x3E0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x3E8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x3F0(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x3F8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x400(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x408(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x410(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x418(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x420(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x430(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x438(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x440(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x448(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x450(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x458(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x460(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x468(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x470(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x478(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x480(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x488(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x490(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x498(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x4A0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x4A8(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x4B0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x4B8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x4C0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x4C8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x4D0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x4D8(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x4E0(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x4E8(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x4F0(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x538(%rbp)
	movb 0x240(%rbp),%r15b
	movb %r15b,0x540(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x560(%rbp)
	addq $0x388,%rbp
	leaq (L_194257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateFunction_0
.p2align 0x4
.long 0x29A1
L_194438:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x380(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194439
L_194462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x390,%rbp
	leaq (L_194463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194463
.p2align 0x4
.long 0x29A5
L_194463:
	addq $0xFFFFFFFFFFFFFC70,%rbp
L_194439:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x380(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x378(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x370(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x388(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x368(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_194440:
	addl 0x0(%r15),%ecx
	movl %ecx,0x368(%rbp)
	jo L_193140
L_194441:
	cmpq $0x1,%r14
	je L_460100
L_194442:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_194440
.p2align 0x4
L_460100:
L_194443:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194444
L_194460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x398,%rbp
	leaq (L_194461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194461
.p2align 0x4
.long 0x29A4
L_194461:
	addq $0xFFFFFFFFFFFFFC68,%rbp
L_194444:
	movl 0x368(%rbp),%ecx
	testl %ecx,%ecx
	jz L_460101
L_194445:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x388(%rbp),%r14
	movq %r14,0x0(%r15)
toString_287:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x378(%rbp)
	movq $0x1,0x370(%rbp)
	addq $0x370,%rbp
	leaq (rev_285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_460101:
L_194459:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_287
.p2align 0x4
.long 0x29C5
L_194589:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194590
L_194600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194601
.p2align 0x4
.long 0x29C7
L_194601:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194590:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x148(%rbp)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_194591:
	addl 0x0(%r15),%ecx
	movl %ecx,0xC0(%rbp)
	jo L_193140
L_194592:
	cmpq $0x1,%r14
	je L_460105
L_194593:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_194591
.p2align 0x4
L_460105:
L_194594:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194595
L_194598:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194599
.p2align 0x4
.long 0x29C6
L_194599:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194595:
	movl 0xC0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_460106
L_194596:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x148(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_194481
.p2align 0x4
L_460106:
L_194597:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_194481
.p2align 0x4
.long 0x29AA
L_194484:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194485
L_194577:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194578
.p2align 0x4
.long 0x29C2
L_194578:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194485:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE0(%rbp)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x120(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_192992
L_194487:
	movl %r13d,0x3D0(%rbp)
	movq $0x3CB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x110(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x2A12
L_194917:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movl 0x3D0(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194918
L_194939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194940
.p2align 0x4
.long 0x29C0
L_194940:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194918:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0xE0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x100(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE90)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_192992
L_194920:
	movl %r13d,0x3D0(%rbp)
	movq $0x3CAF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xE8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x2A04
L_194858:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x29BD
L_194831:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194832
L_194842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194843
.p2align 0x4
.long 0x29BF
L_194843:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194832:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x108(%rbp)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_194833:
	addl 0x0(%r15),%ecx
	movl %ecx,0xB0(%rbp)
	jo L_193140
L_194834:
	cmpq $0x1,%r14
	je L_460114
L_194835:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_194833
.p2align 0x4
L_460114:
L_194836:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194837
L_194840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194841
.p2align 0x4
.long 0x2A00
L_194841:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194837:
	movl 0xB0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_460115
L_194838:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_194795
.p2align 0x4
L_460115:
L_194839:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_194795
.p2align 0x4
.long 0x29F9
L_194798:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194799
L_194819:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194820
.p2align 0x4
.long 0x29FE
L_194820:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194799:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_192992
L_194801:
	movl %r13d,0x3D0(%rbp)
	movq $0x3CB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0xD8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xE8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x29DC
L_194684:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194685
L_194770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194771
.p2align 0x4
.long 0x29F1
L_194771:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194685:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE0(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE50)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x170(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x29CB
L_194613:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194614
L_194667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194668
.p2align 0x4
.long 0x29D9
L_194668:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194614:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xD3A8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xE0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_460122
L_194645:
	shrq $0x1,%r14
	movl %r14d,0x50(%rbp)
	movq (globalObjptr+0xDDF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460122:
L_194615:
	movq (globalObjptr+0xDEF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x296D
L_194523:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x2980
L_194283:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x108(%rbp)
	movl 0x390(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194284
L_194385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194386
.p2align 0x4
.long 0x2994
L_194386:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_194284:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x390(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x398(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_194285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x2980
L_194289:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194290
.p2align 0x4
.long 0x2982
L_194290:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq %rax,0x108(%rbp)
	movq $0x1,0x110(%rbp)
	movq $0x0,0x118(%rbp)
.p2align 0x4,,0x7
loop_2080:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_460141
.p2align 0x4,,0x7
L_194291:
	movq 0x118(%rbp),%r15
	cmpq $0x2,%r15
	jnl L_460140
L_194332:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x100(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x120(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x128(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0x148(%rbp)
	movq 0x18(%r13),%r9
	movq %r9,0x150(%rbp)
	movq 0x10(%r10),%r15
	cmpq %r15,0x40(%rbp)
	je L_460136
L_194334:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_194336
L_194340:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xF31,%r15
	je addLeave_1
	cmpq $0xF32,%r15
	je addLeave_1
	cmpq $0xF35,%r15
	je L_460126
.p2align 0x4,,0x7
L_194336:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_460125
.p2align 0x4,,0x7
L_194337:
	movq $0x23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x118(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x118(%rbp)
	jmp loop_2080
.p2align 0x4
L_460125:
L_194338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194339
.p2align 0x4
.long 0x298C
L_194339:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	jmp L_194337
.p2align 0x4
L_460126:
L_194353:
	movq 0x120(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x128(%rbp),%r14
	movq %r14,0x178(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x128(%rbp)
.p2align 0x4,,0x7
L_194354:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_460134
.p2align 0x4,,0x7
L_194355:
	movq 0x128(%rbp),%r15
	cmpq $0x1,%r15
	je L_460130
	cmpq $0x2,%r15
	je L_460129
L_194356:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_460128
	cmpq $0x2,%r13
	je L_460127
L_194357:
	movq 0x178(%rbp),%r15
	movq %r15,0x128(%rbp)
	jmp L_194336
.p2align 0x4
L_460127:
L_194359:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x2,0x8(%r15)
	movq $0x1E6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x170(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x158(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x120(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x128(%rbp)
	jmp L_194336
.p2align 0x4
L_460128:
L_194358:
	movq 0x178(%rbp),%r15
	movq %r15,0x128(%rbp)
	jmp L_194336
.p2align 0x4
L_460129:
L_194361:
	movq 0x178(%rbp),%r15
	movq %r15,0x128(%rbp)
	jmp L_194336
.p2align 0x4
L_460130:
L_194360:
	movq 0x178(%rbp),%r15
	movq %r15,0x128(%rbp)
addLeave_1:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194342
L_194350:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194351
.p2align 0x4
.long 0x298C
L_194351:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_194342:
	movq $0x1C85,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x348(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1E5D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x158(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194343
.p2align 0x4
.long 0x298D
L_194343:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq %rax,0x170(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2082:
	cmpq $0x1,%r15
	jnl L_460131
L_194349:
	movq 0x170(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x158(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2082
.p2align 0x4
L_460131:
L_194344:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194345
L_194347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194348
.p2align 0x4
.long 0x298F
L_194348:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_194345:
	movq 0x170(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x271F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x271F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_194346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_6
.p2align 0x4
L_460134:
L_194362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194363
.p2align 0x4
.long 0x2990
L_194363:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	jmp L_194355
.p2align 0x4
L_460136:
L_194364:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194365
L_194379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194380
.p2align 0x4
.long 0x298C
L_194380:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_194365:
	movq $0x271F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x158(%rbp)
	movq $0x1C87,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x348(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1E5D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194366
.p2align 0x4
.long 0x2991
L_194366:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq %rax,0x128(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2083:
	cmpq $0x1,%r15
	jnl L_460137
L_194378:
	movq 0x128(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x170(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2083
.p2align 0x4
L_460137:
L_194367:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194368
L_194376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194377
.p2align 0x4
.long 0x298D
L_194377:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_194368:
	movq 0x128(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x271F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x158(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_194369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_6
.p2align 0x4
L_460140:
L_194292:
	movq 0x108(%rbp),%r14
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x346D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0xF8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x388(%rbp)
	movq %r14,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_194293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_460141:
L_194381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194382
.p2align 0x4
.long 0x2992
L_194382:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	jmp L_194291
.p2align 0x4
.long 0x2978
L_194257:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194258
L_194279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194280
.p2align 0x4
.long 0x297F
L_194280:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_194258:
	movq $0x77B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xF8(%rbp)
	addq $0x38,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0xE8(%rbp),%r13
	movq %r13,0x20(%r14)
	movq 0xF0(%rbp),%r13
	movq %r13,0x28(%r14)
	movq 0x378(%rbp),%r14
	cmpq $0x1,%r14
	je L_460142
L_194259:
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x48(%rbp)
L_194260:
	movq %r15,0x370(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x378(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x380(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x388(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x390(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x398(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x3A0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x3A8(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x3B0(%rbp)
	movb 0x320(%rbp),%r15b
	movb %r15b,0x3B8(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x3C0(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x3E0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x3E8(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x3F0(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x3F8(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x400(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x408(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x410(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x418(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x420(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x428(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x430(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x438(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x440(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x448(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x450(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x458(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x460(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x468(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x470(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x478(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x480(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x488(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x490(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x498(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x4A0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x4A8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x4B0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x4B8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x4C0(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x4C8(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x4D0(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x4D8(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x4E0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x4E8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x4F0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x520(%rbp)
	movb 0x240(%rbp),%r15b
	movb %r15b,0x528(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x548(%rbp)
	addq $0x370,%rbp
	leaq (L_194261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateFunction_0
.p2align 0x4
L_460142:
L_194278:
	movq $0x1,%r15
L_194265:
	movq $0x77F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x28,%r12
	movl 0x38(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x90(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xF8(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	cmpq $0x1,%r15
	je L_460143
L_194266:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r15
L_194267:
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x378(%rbp)
	movq 0x18(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	movq $0x1,0x370(%rbp)
	addq $0x370,%rbp
	leaq (L_194268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_460143:
L_194272:
	movq 0x68(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq $0x1,0x370(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_194273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x299E
rev_285:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq $0x1,%r15
	je L_460147
L_194446:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x368(%rbp)
	movq %r14,0x370(%rbp)
	movq $0x1,0x378(%rbp)
.p2align 0x4,,0x7
L_194447:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_460146
.p2align 0x4,,0x7
L_194448:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x370(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x378(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x368(%rbp),%r14
	cmpq $0x1,%r14
	je L_460145
L_194449:
	movq %r15,0x378(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x368(%rbp)
	movq %r15,0x370(%rbp)
	jmp L_194447
.p2align 0x4
L_460145:
L_194451:
	movq %r15,0x370(%rbp)
	addq $0x370,%rbp
	leaq (L_194452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_460146:
L_194456:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194457
.p2align 0x4
.long 0x29A3
L_194457:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	jmp L_194448
.p2align 0x4
L_460147:
L_194458:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_194451
.p2align 0x4
.long 0x29AB
L_194488:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq %r15,0x3C8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x2A13
L_194921:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x2A04
L_194859:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194860
L_194911:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194912
.p2align 0x4
.long 0x2A10
L_194912:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194860:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x100(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE50)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x128(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x29FA
L_194802:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x29DD
L_194686:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194687
L_194768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194769
.p2align 0x4
.long 0x29F0
L_194769:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194687:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE8(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE58)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x158(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_192992
L_194689:
	movl %r13d,0x3D0(%rbp)
	movq $0x3CAF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x120(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x29CC
L_194646:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movl 0x50(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_460151
L_194647:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_194648:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460151:
L_194666:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_194648
.p2align 0x4
.long 0x29CC
L_194616:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194617
L_194643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194644
.p2align 0x4
.long 0x29D5
L_194644:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194617:
	movq 0x50(%rbp),%r15
L_194618:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE80)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0xE8(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x296D
L_194524:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194525
L_194531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194532
.p2align 0x4
.long 0x29B4
L_194532:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194525:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x2,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x3D8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x2980
L_194285:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x388(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_194286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x298E
L_194346:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x128(%rbp)
	jmp L_194336
.p2align 0x4
.long 0x298E
L_194369:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x128(%rbp)
L_194370:
	movq 0x120(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_194336
L_194372:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF31,%r14
	je addLeave_1
	cmpq $0xF32,%r14
	je addLeave_1
	cmpq $0xF35,%r14
	je L_460154
	jmp L_194336
.p2align 0x4
L_460154:
L_194375:
	movq 0x120(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x128(%rbp),%r14
	movq %r14,0x178(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x128(%rbp)
	jmp L_194354
.p2align 0x4
.long 0x2983
L_194293:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194294
L_194330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194331
.p2align 0x4
.long 0x298B
L_194331:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_194294:
	movq $0x23C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq 0x110(%rbp),%r14
	cmpq $0x1,%r14
	je L_460163
L_194295:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_194296:
	incl %ecx
	jo L_193140
L_194297:
	cmpq $0x1,%r15
	je L_460156
L_194298:
	movq 0x8(%r15),%r15
	jmp L_194296
.p2align 0x4
L_460156:
L_194299:
L_194300:
	movslq %ecx,%rdx
	movq %rdx,0xF8(%rbp)
	testq %rdx,%rdx
	jz L_460161
L_194301:
	cmpq $0x7FFFFFFF,%rdx
	ja L_193090
L_194302:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194303
.p2align 0x4
.long 0x2984
L_194303:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq %rax,0x100(%rbp)
L_194304:
	movq 0x110(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2081:
	cmpq 0xF8(%rbp),%r15
	jnl L_460158
L_194324:
	cmpq $0x1,%r14
	je L_193587
L_194325:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x100(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2081
.p2align 0x4
L_460158:
L_194305:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194306
L_194322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194323
.p2align 0x4
.long 0x298A
L_194323:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_194306:
	movq 0x100(%rbp),%r15
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_194307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_7
.p2align 0x4
L_460161:
L_194328:
	movq (globalObjptr+0xD40)(%rip),%r15
	movq %r15,0x100(%rbp)
	jmp L_194304
.p2align 0x4
L_460163:
L_194329:
	xorl %ecx,%ecx
	jmp L_194300
.p2align 0x4
.long 0x2979
L_194261:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x120(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194262
L_194276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x370,%rbp
	leaq (L_194277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194277
.p2align 0x4
.long 0x297E
L_194277:
	addq $0xFFFFFFFFFFFFFC90,%rbp
L_194262:
	movq $0x77B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x118(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x23A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_460165
L_194263:
	movq %r14,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x40(%rbp)
	jmp L_194260
.p2align 0x4
L_460165:
L_194264:
	movq %r14,%r15
	jmp L_194265
.p2align 0x4
.long 0x297A
L_194268:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq $0x2,0x370(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_194269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x297C
L_194273:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq $0x2,0x370(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x378(%rbp)
	addq $0x370,%rbp
	leaq (L_194274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x299E
L_194452:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x370(%rbp),%r15
	movq %r15,0x368(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194453
L_194454:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x378,%rbp
	leaq (L_194455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194455
.p2align 0x4
.long 0x29A2
L_194455:
	addq $0xFFFFFFFFFFFFFC88,%rbp
L_194453:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x368(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x29AB
L_194489:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194490
L_194575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194576
.p2align 0x4
.long 0x29C1
L_194576:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194490:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xFF58)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x2A13
L_194922:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194923
L_194937:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194938
.p2align 0x4
.long 0x2A17
L_194938:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194923:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE60)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x29E0
L_194861:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194862
L_194909:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194910
.p2align 0x4
.long 0x29ED
L_194910:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194862:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x128(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE58)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x120(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_192992
L_194864:
	movl %r13d,0x3D0(%rbp)
	movq $0x3CAF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xE0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x29FA
L_194803:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194804
L_194817:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194818
.p2align 0x4
.long 0x29FD
L_194818:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194804:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xFF58)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x29DE
L_194690:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x29D6
L_194649:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194650
L_194664:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194665
.p2align 0x4
.long 0x29D8
L_194665:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194650:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x29CD
L_194619:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194620
L_194641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194642
.p2align 0x4
.long 0x29D4
L_194642:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194620:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x296D
L_194526:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x2981
L_194286:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194288
L_194383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194384
.p2align 0x4
.long 0x2993
L_194384:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	jmp L_194288
.p2align 0x4
.long 0x2985
L_194307:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194308
L_194320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194321
.p2align 0x4
.long 0x297F
L_194321:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_194308:
	movq $0xF7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xF8(%rbp)
	addq $0x38,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x10(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x2947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x100(%rbp)
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x108(%rbp)
	cmpq $0x1,%r13
	je L_460176
L_194309:
	movq %r15,0x388(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_194310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_53
.p2align 0x4
L_460176:
L_194319:
	movq 0x100(%rbp),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_194256
.p2align 0x4
.long 0x297B
L_194269:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_194272
L_194270:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_194267
.p2align 0x4
.long 0x297D
L_194274:
	addq $0xFFFFFFFFFFFFFC90,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x29AC
L_194491:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194492
L_194573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194574
.p2align 0x4
.long 0x29C0
L_194574:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194492:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE0(%rbp)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xFF60)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_460179
L_194551:
	shrq $0x1,%r14
	movl %r14d,0xB0(%rbp)
	movq (globalObjptr+0xDDF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460179:
L_194493:
	movq (globalObjptr+0xDEF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2A14
L_194924:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194925
L_194935:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194936
.p2align 0x4
.long 0x2A16
L_194936:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194925:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_194926:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_193140
L_194927:
	cmpq $0x1,%r14
	je L_460181
L_194928:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_194926
.p2align 0x4
L_460181:
L_194929:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194930
L_194933:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194934
.p2align 0x4
.long 0x2A15
L_194934:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194930:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_460182
L_194931:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
L_194883:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xFF98)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
L_460182:
L_194932:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_194883
.p2align 0x4
.long 0x2A05
L_194865:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x3D0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x3D8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x3E0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x29FB
L_194805:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194806
L_194815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194816
.p2align 0x4
.long 0x29FC
L_194816:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194806:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_194807:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_193140
L_194808:
	cmpq $0x1,%r14
	je L_460186
L_194809:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_194807
.p2align 0x4
L_460186:
L_194810:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194811
L_194813:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194814
.p2align 0x4
.long 0x29B7
L_194814:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194811:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_194538
L_194812:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_194511
.p2align 0x4
.long 0x29DE
L_194691:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194692
L_194766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194767
.p2align 0x4
.long 0x29EF
L_194767:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194692:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x120(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE60)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x150(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x29D6
L_194651:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194652
L_194662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194663
.p2align 0x4
.long 0x29D8
L_194663:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194652:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x100(%rbp)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_194653:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_193140
L_194654:
	cmpq $0x1,%r14
	je L_460192
L_194655:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_194653
.p2align 0x4
L_460192:
L_194656:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194657
L_194660:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194661
.p2align 0x4
.long 0x29D7
L_194661:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194657:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_460193
L_194658:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_194618
.p2align 0x4
L_460193:
L_194659:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_194618
.p2align 0x4
.long 0x29CE
L_194621:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194622
L_194639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194640
.p2align 0x4
.long 0x29D3
L_194640:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194622:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_52
.p2align 0x4
.long 0x296D
L_194527:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194528
L_194529:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194530
.p2align 0x4
.long 0x29B3
L_194530:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194528:
	incl 0x24(%rbp)
	jmp loop_2078
.p2align 0x4
.long 0x2986
L_194310:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x390(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194311
L_194317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194318
.p2align 0x4
.long 0x2989
L_194318:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_194311:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x390(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x398(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x388(%rbp)
	addq $0x388,%rbp
	leaq (L_194312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x29AD
L_194552:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movl 0xB0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_460200
L_194553:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_194554:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460200:
L_194572:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_194554
.p2align 0x4
.long 0x29AD
L_194494:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194495
L_194549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194550
.p2align 0x4
.long 0x29BC
L_194550:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194495:
	movq 0xB0(%rbp),%r15
L_194496:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE80)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x100(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x2A09
L_194884:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194885
L_194894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194895
.p2align 0x4
.long 0x2A0A
L_194895:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194885:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_194886:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_193140
L_194887:
	cmpq $0x1,%r14
	je L_460202
L_194888:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_194886
.p2align 0x4
L_460202:
L_194889:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194890
L_194892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194893
.p2align 0x4
.long 0x29B7
L_194893:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194890:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_194538
L_194891:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_194511
.p2align 0x4
.long 0x2A05
L_194866:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194867
L_194907:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194908
.p2align 0x4
.long 0x2A0F
L_194908:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194867:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE0(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE60)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x110(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x29DF
L_194693:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194694
L_194764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194765
.p2align 0x4
.long 0x29EE
L_194765:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194694:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x110(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x3C8(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x29CF
L_194623:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194624
L_194637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194638
.p2align 0x4
.long 0x29D2
L_194638:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194624:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE528)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x2986
L_194312:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	movq 0x388(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x388(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x390(%rbp)
	addq $0x388,%rbp
	leaq (L_194313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x29BD
L_194555:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194556
L_194570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194571
.p2align 0x4
.long 0x29BF
L_194571:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194556:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x29AE
L_194497:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194498
L_194547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194548
.p2align 0x4
.long 0x29BB
L_194548:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194498:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x2A06
L_194868:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194869
L_194905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194906
.p2align 0x4
.long 0x2A0E
L_194906:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194869:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x108(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x3C8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x29E0
L_194695:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194696
L_194762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194763
.p2align 0x4
.long 0x29ED
L_194763:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194696:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE70)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x29D0
L_194625:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194626
L_194635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194636
.p2align 0x4
.long 0x29D1
L_194636:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194626:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_194627:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_193140
L_194628:
	cmpq $0x1,%r14
	je L_460214
L_194629:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_194627
.p2align 0x4
L_460214:
L_194630:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194631
L_194633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194634
.p2align 0x4
.long 0x29B7
L_194634:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194631:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_194538
L_194632:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_194511
.p2align 0x4
.long 0x2987
L_194313:
	addq $0xFFFFFFFFFFFFFC78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194314
L_194315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x388,%rbp
	leaq (L_194316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194316
.p2align 0x4
.long 0x2988
L_194316:
	addq $0xFFFFFFFFFFFFFC78,%rbp
L_194314:
	movq 0xF8(%rbp),%r14
	movq 0x100(%rbp),%r15
	jmp L_194256
.p2align 0x4
.long 0x29BD
L_194557:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194558
L_194568:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194569
.p2align 0x4
.long 0x29BF
L_194569:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194558:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x108(%rbp)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_194559:
	addl 0x0(%r15),%ecx
	movl %ecx,0xB0(%rbp)
	jo L_193140
L_194560:
	cmpq $0x1,%r14
	je L_460220
L_194561:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_194559
.p2align 0x4
L_460220:
L_194562:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194563
L_194566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194567
.p2align 0x4
.long 0x29BE
L_194567:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194563:
	movl 0xB0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_460221
L_194564:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_194496
.p2align 0x4
L_460221:
L_194565:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_194496
.p2align 0x4
.long 0x29AF
L_194499:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194500
L_194545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194546
.p2align 0x4
.long 0x29BA
L_194546:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194500:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_52
.p2align 0x4
.long 0x2A07
L_194870:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194871
L_194903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194904
.p2align 0x4
.long 0x2A0D
L_194904:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194871:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE70)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x29E0
L_194697:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x29B0
L_194501:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194502
L_194543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194544
.p2align 0x4
.long 0x29B9
L_194544:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194502:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE528)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x2A07
L_194872:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x29E0
L_194698:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194699
L_194760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194761
.p2align 0x4
.long 0x29ED
L_194761:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194699:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE78)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x120(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x29B1
L_194503:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194504
L_194541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194542
.p2align 0x4
.long 0x29B8
L_194542:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194504:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x18,%r12
	movq 0xE8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_194505:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_193140
L_194506:
	cmpq $0x1,%r14
	je L_460229
L_194507:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_194505
.p2align 0x4
L_460229:
L_194508:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194509
L_194539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194540
.p2align 0x4
.long 0x29B7
L_194540:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194509:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_194538
L_194510:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_194511
.p2align 0x4
.long 0x2A07
L_194873:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194874
L_194901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194902
.p2align 0x4
.long 0x2A0D
L_194902:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194874:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE78)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x100(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x29E1
L_194700:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194701
L_194758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194759
.p2align 0x4
.long 0x29EC
L_194759:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194701:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xD3A8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x2A08
L_194875:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194876
L_194899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194900
.p2align 0x4
.long 0x2A0C
L_194900:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194876:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB8(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_194877:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_193140
L_194878:
	cmpq $0x1,%r14
	je L_460236
L_194879:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_194877
.p2align 0x4
L_460236:
L_194880:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194881
L_194897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194898
.p2align 0x4
.long 0x2A0B
L_194898:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194881:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_460237
L_194882:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_194883
.p2align 0x4
L_460237:
L_194896:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_194883
.p2align 0x4
.long 0x29E2
L_194702:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194703
L_194756:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194757
.p2align 0x4
.long 0x29D4
L_194757:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194703:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE0(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xFF78)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_460241
L_194734:
	shrq $0x1,%r14
	movl %r14d,0x50(%rbp)
	movq (globalObjptr+0xDDF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460241:
L_194704:
	movq (globalObjptr+0xDEF0)(%rip),%r15
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x29E3
L_194735:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movl 0x50(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_460243
L_194736:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_194737:
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_460243:
L_194755:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_194737
.p2align 0x4
.long 0x29E3
L_194705:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194706
L_194732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194733
.p2align 0x4
.long 0x29EA
L_194733:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194706:
	movq 0x50(%rbp),%r15
L_194707:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE80)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0xE8(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x29D6
L_194738:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194739
L_194753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194754
.p2align 0x4
.long 0x29D8
L_194754:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194739:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDEF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x29E4
L_194708:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194709
L_194730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194731
.p2align 0x4
.long 0x29E9
L_194731:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194709:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x29D6
L_194740:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194741
L_194751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194752
.p2align 0x4
.long 0x29D8
L_194752:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194741:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x100(%rbp)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_194742:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_193140
L_194743:
	cmpq $0x1,%r14
	je L_460247
L_194744:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_194742
.p2align 0x4
L_460247:
L_194745:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194746
L_194749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194750
.p2align 0x4
.long 0x29EB
L_194750:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194746:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_460248
L_194747:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_194707
.p2align 0x4
L_460248:
L_194748:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_194707
.p2align 0x4
.long 0x29E5
L_194710:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194711
L_194728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194729
.p2align 0x4
.long 0x29E8
L_194729:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194711:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r15
	movq %r15,0x3C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x3D0(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_52
.p2align 0x4
.long 0x29E6
L_194712:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194713
L_194726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194727
.p2align 0x4
.long 0x29E7
L_194727:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194713:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE528)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xE0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x3C8(%rbp)
	addq $0x3C8,%rbp
	leaq (L_194714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x29D0
L_194714:
	addq $0xFFFFFFFFFFFFFC38,%rbp
	movq 0x3C8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194715
L_194724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194725
.p2align 0x4
.long 0x29D1
L_194725:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194715:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x18,%r12
	movq 0x108(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_194716:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_193140
L_194717:
	cmpq $0x1,%r14
	je L_460254
L_194718:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_194716
.p2align 0x4
L_460254:
L_194719:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_194720
L_194722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x3C8,%rbp
	leaq (L_194723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_194723
.p2align 0x4
.long 0x29B7
L_194723:
	addq $0xFFFFFFFFFFFFFC38,%rbp
L_194720:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_194538
L_194721:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_194511
