/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:09:15 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl loopLambda_0
.hidden loopLambda_0
loopLambda_0:
L_143757:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_143848
L_143758:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433571
L_143759:
	movq 0x10(%rbp),%r15
	movq 0xD8(%r15),%r14
	movq 0xD0(%r15),%r13
	movq 0xC8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0xC0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xB8(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xB0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0xA8(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0xA0(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x40(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq $0x2415,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r11)
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r14)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1093,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_143760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_433571:
L_143848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_143849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143849
.p2align 0x4
.long 0x45B
L_143849:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_143759
.p2align 0x4
.long 0x8C2
L_143760:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143761
L_143846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_143847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143847
.p2align 0x4
.long 0x8DF
L_143847:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_143761:
	movq $0x1061,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_143762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1EF1
L_143762:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143763
L_143844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_143845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143845
.p2align 0x4
.long 0x1EF8
L_143845:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_143763:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%r13)
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_143764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1EF2
L_143764:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143765
L_143842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_143843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143843
.p2align 0x4
.long 0x803
L_143843:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_143765:
	movq $0x1061,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0xFE5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x130D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x30,%r12
	movq 0x78(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x80(%rbp),%r11
	movq %r11,0x18(%r13)
	movq 0x70(%rbp),%r11
	movq %r11,0x20(%r13)
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x90(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_433586
L_143767:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_433585
L_143768:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_143770:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_143771
L_143834:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD93,%r13
	jne L_143771
L_143835:
	movq 0x20(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_433580
L_143771:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_433579
L_143773:
	cmpq $0x1,%r15
	je L_433575
L_143774:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_143770
.p2align 0x4
L_433575:
L_143775:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143776
L_143832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_143833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143833
.p2align 0x4
.long 0x1EF7
L_143833:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_143776:
	movl 0x18(%rbp),%ecx
L_143777:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_433577
L_143779:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_143781
L_143831:
	movl %ecx,0x0(%r15)
L_143781:
	movq $0x1B27,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_143782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
L_433577:
L_143778:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433579:
L_143772:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433580:
L_143837:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143778
L_143838:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_143821
L_143840:
	movl %ecx,0x0(%r15)
L_143821:
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433585:
L_143841:
	xorl %ecx,%ecx
	jmp L_143777
.p2align 0x4
L_433586:
L_143766:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1EF3
L_143782:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143783
L_143829:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_143830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143830
.p2align 0x4
.long 0x1EF6
L_143830:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_143783:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433602
	cmpq $0x298D,%r15
	je L_433601
	cmpq $0x298E,%r15
	je L_433588
L_143784:
	movq 0x8(%r14),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_143785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433588:
L_143828:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_143787:
	movq 0x48(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x10(%r10),%r14
	movq 0x8(%r10),%r9
	movq 0x0(%r10),%r8
	movq %r8,0x18(%rbp)
	movq $0x113D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1093,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x68(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x113F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movb $0x1,%spl
	movzbl %spl,%ecx
	movl %ecx,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq $0x130F,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x20(%rbp)
	movq %r15,0x0(%rsp)
	movq %r8,0x8(%rsp)
	movq %r11,0x10(%rsp)
	movq %r14,0x20(%rsp)
	movq %r13,0x28(%rsp)
	addq $0x38,%r12
	movq $0x1,0x18(%rsp)
	movq 0x10(%r10),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_143766
L_143788:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_433599
L_143789:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_143791:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_433598
L_143815:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD92,%r11
	jne L_433597
L_143816:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x18)(%rip)
	je L_433594
L_143792:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_143772
L_143793:
	cmpq $0x1,%r15
	je L_433589
L_143794:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_143791
.p2align 0x4
L_433589:
L_143795:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143796
L_143813:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_143814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143814
.p2align 0x4
.long 0x4D1
L_143814:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_143796:
	movl 0x48(%rbp),%ecx
L_143797:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143778
L_143798:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_143800
L_143812:
	movl %ecx,0x0(%r15)
L_143800:
	movq $0x1B25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (x_517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_3
.p2align 0x4
L_433594:
L_143818:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_143778
L_143819:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_143821
L_143822:
	movl %ecx,0x0(%r15)
	jmp L_143821
.p2align 0x4
L_433597:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_143792
.p2align 0x4
L_433598:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_143792
.p2align 0x4
L_433599:
L_143823:
	xorl %ecx,%ecx
	jmp L_143797
.p2align 0x4
L_433601:
L_143827:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_143787
.p2align 0x4
L_433602:
L_143826:
	movq 0x10(%r14),%r15
	movq %r15,0x78(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_143785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1EF3
L_143785:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143786
L_143824:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_143825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143825
.p2align 0x4
.long 0x1EF6
L_143825:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_143786:
	movq 0x18(%rbp),%r15
	jmp L_143787
.p2align 0x4
.long 0x1EF4
x_517:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_143801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x1EF4
L_143801:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_433605
L_143803:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_143804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1611
.p2align 0x4
L_433605:
L_143802:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1EF5
L_143804:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_143805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0xAA6
L_143805:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143806
L_143810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_143811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143811
.p2align 0x4
.long 0xAA8
L_143811:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_143806:
	movq $0x127D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2105,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (newSet_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromList_38
.p2align 0x4
.long 0x2B
newSet_0:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143807
L_143808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_143809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143809
.p2align 0x4
.long 0x4B1
L_143809:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_143807:
	movq $0x9D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loopExp_3
.hidden loopExp_3
loopExp_3:
L_143850:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_144596
L_143851:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433665
L_143852:
	movq 0x8(%rbp),%r14
	movq 0x48(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_433664
L_143853:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_143854:
	movq 0x8(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE99,%r14
	je L_433609
	cmpq $0xE9A,%r14
	je L_433608
L_143855:
	movq (globalObjptr+0x7090)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433608:
L_144590:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x34C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_144591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
L_433609:
L_143856:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%rbp),%r15
	movq 0x98(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x90(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x88(%r15),%r13
	movq 0x80(%r15),%r11
	movq %r11,0x60(%rbp)
	movq 0x78(%r15),%r11
	movq %r11,0x68(%rbp)
	movq 0x70(%r15),%r11
	movq %r11,0x70(%rbp)
	movq 0x68(%r15),%r11
	movq %r11,0x78(%rbp)
	movq 0x60(%r15),%r11
	movq %r11,0x80(%rbp)
	movq 0x58(%r15),%r11
	movq %r11,0x88(%rbp)
	movq 0x50(%r15),%r11
	movq %r11,0x90(%rbp)
	movq 0x40(%r15),%r11
	movq %r11,0x98(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_433610
	leaq jumpTable_307(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_307:
.quad L_433663,L_433662,new_7,new_7,L_433616,L_433615,L_433614,new_32,L_433613,L_433612,L_433611
.text
.p2align 0x4
L_433610:
L_143857:
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_143858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_433611:
L_144552:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_433612:
L_144473:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
L_433613:
L_144464:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_64
.p2align 0x4
new_32:
new_7:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_143899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
L_433614:
L_144410:
	movq 0x10(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
L_433615:
L_144408:
	movq 0x20(%r14),%r15
	movl 0x0(%r14),%r13d
	movq 0x18(%r14),%r11
	movq 0x10(%r14),%r10
	movq 0x8(%r14),%r9
	movq $0x104D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r10,0x18(%r14)
	movq %r9,0x20(%r14)
	addq $0x30,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0xB0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopLambda_0
.p2align 0x4
L_433616:
L_143946:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %rdx,%r14
	movq %r15,0x50(%rbp)
	jne L_143873
L_143948:
	testq %rdx,%rdx
	jz L_433660
L_143949:
	cmpq $0x7FFFFFFF,%rdx
	ja L_433659
L_143950:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15EB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_143951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143951
.p2align 0x4
.long 0x1F04
L_143951:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x80(%rbp)
L_143952:
	movq $0x0,0x90(%rbp)
loop_1537:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x90(%rbp)
	jl L_433658
L_143953:
	movq 0x80(%rbp),%r15
	movq $0x999,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x50(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x58(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_433657
L_143955:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x5,%r14
	je L_433653
	cmpq $0x6,%r14
	je L_433652
	cmpq $0x7,%r14
	je L_433647
	cmpq $0x37,%r14
	je L_433637
	cmpq $0x41,%r14
	je L_433634
	cmpq $0x46,%r14
	je L_433630
	cmpq $0x47,%r14
	je L_433627
	cmpq $0x49,%r14
	je L_433626
	cmpq $0x5B,%r14
	je L_433622
	cmpq $0x5E,%r14
	je L_433619
	cmpq $0x5F,%r14
	je L_433618
L_143956:
	andq $0x3,%r15
	jnz L_143957
L_143968:
L_143957:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_143958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
L_433618:
L_144370:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
L_433619:
L_144339:
	cmpl $0x1,0x58(%rbp)
	jne L_433621
L_144341:
	cmpq $0x0,0x50(%rbp)
	jna L_433620
L_144343:
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433620:
L_143929:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433621:
L_144011:
	movq (globalObjptr+0x7040)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433622:
L_144306:
	cmpl $0x2,0x58(%rbp)
	jne L_433625
L_144308:
	movq 0x50(%rbp),%r14
	cmpq $0x0,%r14
	jna L_143929
L_144310:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r14
	jna L_143929
L_144312:
	movq %r11,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433625:
L_143971:
	movq (globalObjptr+0x7048)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433626:
L_144272:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
L_433627:
L_144241:
	cmpl $0x1,0x58(%rbp)
	jne L_144011
L_144243:
	cmpq $0x0,0x50(%rbp)
	jna L_143929
L_144245:
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433630:
L_144208:
	cmpl $0x2,0x58(%rbp)
	jne L_143971
L_144210:
	movq 0x50(%rbp),%r14
	cmpq $0x0,%r14
	jna L_143929
L_144212:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r14
	jna L_143929
L_144214:
	movq %r11,0xA8(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x30(%rbp)
	addq $0xA8,%rbp
	leaq (L_144215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433634:
L_144160:
	cmpl $0x1,0x58(%rbp)
	jne L_144011
L_144162:
	cmpq $0x0,0x50(%rbp)
	jna L_143929
L_144164:
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq %r13,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433637:
L_144125:
	movq 0x48(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_433646
L_144127:
	movq %r14,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_433645
L_144128:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	xchgq %r13,%r15
.p2align 0x4,,0x7
L_144130:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_144131
L_144154:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD68,%r13
	je L_433641
L_144131:
	incl %ecx
	jo L_433640
L_144133:
	cmpq $0x1,%r15
	je L_433638
L_144134:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_144130
.p2align 0x4
L_433638:
L_144135:
L_144136:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_433639
L_144138:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_518
L_144153:
	movl %ecx,0x0(%r15)
x_518:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
L_433639:
L_144137:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433640:
L_144132:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433641:
L_144155:
	movq 0x0(%r14),%r15
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_144137
L_144156:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_143962
L_144158:
	movl %ecx,0x0(%r14)
L_143962:
	movq %r15,0x30(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_143859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
L_433645:
L_144159:
	xorl %ecx,%ecx
	jmp L_144136
.p2align 0x4
L_433646:
L_144126:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433647:
L_144090:
	cmpl $0x3,0x58(%rbp)
	je L_433648
L_144091:
	movq (globalObjptr+0x7070)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433648:
L_144092:
	movq 0x50(%rbp),%r14
	cmpq $0x0,%r14
	jna L_143929
L_144094:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r14
	jna L_143929
L_144096:
	cmpq $0x2,%r14
	jna L_143929
L_144098:
	movq %r11,0xA8(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x30(%rbp)
	addq $0xA8,%rbp
	leaq (L_144099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433652:
L_144004:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
L_433653:
L_143969:
	cmpl $0x2,0x58(%rbp)
	jne L_143971
L_143972:
	movq 0x50(%rbp),%r14
	cmpq $0x0,%r14
	jna L_143929
L_143974:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r14
	jna L_143929
L_143976:
	movq %r11,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_143977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433657:
L_143873:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433658:
L_144404:
	movq 0x90(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_433659:
L_143896:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433660:
L_144407:
	movq (globalObjptr+0x7068)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_143952
.p2align 0x4
L_433662:
L_143917:
	movl 0x0(%r14),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_143918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_433663:
L_143868:
	movq %r13,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_143869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
L_433664:
L_143864:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_143865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_433665:
L_144596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_144597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144597
.p2align 0x4
.long 0x45F
L_144597:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_143852
.p2align 0x4
.long 0x1F39
L_144591:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144592
L_144593:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_144594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144594
.p2align 0x4
.long 0x1E33
L_144594:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_144592:
	movq $0x3497,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_143859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
.long 0x1EF9
L_143858:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_143859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
.long 0x1F2E
L_144553:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
.long 0x1F22
L_144474:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144475
L_144550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144551
.p2align 0x4
.long 0x1F2D
L_144551:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144475:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433670
	cmpq $0x298D,%r15
	je L_433669
	cmpq $0x298E,%r15
	je L_433668
L_144476:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433668:
L_144549:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
L_144478:
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
L_433669:
L_144548:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	jmp L_144478
.p2align 0x4
L_433670:
L_144547:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1F20
L_144465:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_433673
L_144467:
	andq $0x3,%r15
	jnz L_433672
L_144469:
	movq 0x0(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_433672:
L_144468:
	movq (globalObjptr+0x7080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433673:
L_144471:
	cmpq $0x1,%r15
	je new_7
	jmp L_144468
.p2align 0x4
.long 0x1EF9
L_143899:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143900
L_143913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_143914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143914
.p2align 0x4
.long 0x1F01
L_143914:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_143900:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433676
	cmpq $0x298D,%r15
	je L_433675
	cmpq $0x298E,%r15
	je L_433674
L_143901:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_143902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433674:
L_143912:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_143903:
	movq %r15,0x30(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_143904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
L_433675:
L_143911:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_143903
.p2align 0x4
L_433676:
L_143910:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_143902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1F19
L_144411:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144412
L_144461:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144462
.p2align 0x4
.long 0x1F1F
L_144462:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144412:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433680
	cmpq $0x298D,%r15
	je L_433679
	cmpq $0x298E,%r15
	je L_433678
L_144413:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433678:
L_144460:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
L_144415:
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
L_433679:
L_144459:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	jmp L_144415
.p2align 0x4
L_433680:
L_144458:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1EF9
L_144409:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_143859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
.long 0x1EF9
L_143958:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143959
L_143966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_143967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143967
.p2align 0x4
.long 0x1F01
L_143967:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_143959:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433684
	cmpq $0x298D,%r15
	je L_433683
	cmpq $0x298E,%r15
	je L_433682
L_143960:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_143961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433682:
L_143965:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_143962
.p2align 0x4
L_433683:
L_143964:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_143962
.p2align 0x4
L_433684:
L_143963:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_143961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1F14
L_144371:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144372
L_144402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144403
.p2align 0x4
.long 0x1F17
L_144403:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144372:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433688
	cmpq $0x298D,%r15
	je L_433687
	cmpq $0x298E,%r15
	je L_433686
L_144373:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433686:
L_144401:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
L_144375:
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433687:
L_144400:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	jmp L_144375
.p2align 0x4
L_433688:
L_144399:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1F05
L_144344:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144345
L_144368:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144369
.p2align 0x4
.long 0x1F08
L_144369:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144345:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1456,%r14
	jne L_433692
L_144346:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_433691
	cmpq $0x1085,%r15
	je typeError_0
	cmpq $0x1086,%r15
	je L_433690
L_144347:
	movq 0x8(%r13),%r15
	movb 0x0(%r13),%r14b
	cmpb $0x1,%r14b
	je typeError_0
	cmpb $0x2,%r14b
	je typeError_0
	cmpb $0x3,%r14b
	je typeError_2
	jmp L_143962
.p2align 0x4
typeError_2:
typeError_0:
	movq $0x3101,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movb $0x3,0x10(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x8,%rbp
	leaq (L_143982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
L_433690:
L_144362:
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_144363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_433691:
L_144352:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
L_433692:
L_143920:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1F05
L_144313:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144314
L_144337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144338
.p2align 0x4
.long 0x1F08
L_144338:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144314:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1456,%r14
	jne L_143920
L_144315:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_433695
	cmpq $0x1085,%r15
	je typeError_0
	cmpq $0x1086,%r15
	je L_433694
L_144316:
	movq 0x8(%r13),%r15
	cmpb $0x1,0x0(%r13)
	jne typeError_0
	jmp L_143962
.p2align 0x4
L_433694:
L_144331:
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_144332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_433695:
L_144321:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
.long 0x1F14
L_144273:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144274
L_144304:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144305
.p2align 0x4
.long 0x1F17
L_144305:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144274:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433700
	cmpq $0x298D,%r15
	je L_433699
	cmpq $0x298E,%r15
	je L_433698
L_144275:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433698:
L_144303:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
L_144277:
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433699:
L_144302:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	jmp L_144277
.p2align 0x4
L_433700:
L_144301:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1F05
L_144246:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144247
L_144270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144271
.p2align 0x4
.long 0x1F08
L_144271:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144247:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1456,%r14
	jne L_143920
L_144248:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_433703
	cmpq $0x1085,%r15
	je typeError_0
	cmpq $0x1086,%r15
	je L_433702
L_144249:
	movq 0x8(%r13),%r15
	cmpb $0x2,0x0(%r13)
	jne typeError_0
	jmp L_143962
.p2align 0x4
L_433702:
L_144264:
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_144265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_433703:
L_144254:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
.long 0x1F0E
L_144215:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144216
L_144239:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144240
.p2align 0x4
.long 0x1F10
L_144240:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144216:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_143920
L_144217:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je result_4
	cmpq $0x1085,%r15
	je typeError_1
	cmpq $0x1086,%r15
	je L_433706
L_144218:
	movq 0x8(%r13),%r15
	cmpb $0x2,0x0(%r13)
	jne typeError_10
L_144221:
	movq %r15,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (result_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
typeError_10:
typeError_1:
	movq $0x3131,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movb $0x3,0x10(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x8,%rbp
	leaq (L_143982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
L_433706:
L_144233:
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_144234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
result_4:
result_3:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
.long 0x1F11
L_144165:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r11
	movq 0x0(%r11),%r15
	movq %r11,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1456,%r14
	jne L_143920
L_144166:
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_144126
L_144167:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_433716
L_144168:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_144170:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_144171
L_144202:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD68,%r11
	je L_433712
L_144171:
	incl %ecx
	jo L_144132
L_144172:
	cmpq $0x1,%r15
	je L_433709
L_144173:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	jmp L_144170
.p2align 0x4
L_433709:
L_144174:
L_144175:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_144137
L_144176:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_519
L_144201:
	movl %ecx,0x0(%r15)
x_519:
	movq %r14,0xA8(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
L_433712:
L_144203:
	movq 0x0(%r13),%r14
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_144137
L_144204:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144184
L_144206:
	movl %ecx,0x0(%r15)
L_144184:
	movq %r14,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
L_433716:
L_144207:
	xorl %ecx,%ecx
	jmp L_144175
.p2align 0x4
.long 0x1EFD
L_144140:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144141
L_144151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144152
.p2align 0x4
.long 0x1EFE
L_144152:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144141:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433721
	cmpq $0x298D,%r15
	je L_433720
	cmpq $0x298E,%r15
	je L_433719
L_144142:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433719:
L_144150:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_144145:
	movq $0x1AD1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	jmp L_143962
.p2align 0x4
L_433720:
L_144149:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_144145
.p2align 0x4
L_433721:
L_144148:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x4A5
L_143859:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143861
L_143866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_143867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143867
.p2align 0x4
.long 0x4E9
L_143867:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_143861:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_143864
L_143862:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_143854
.p2align 0x4
.long 0x1F0E
L_144099:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144100
L_144123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144124
.p2align 0x4
.long 0x1F10
L_144124:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144100:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_143920
L_144101:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je result_5
	cmpq $0x1085,%r15
	je typeError_1
	cmpq $0x1086,%r15
	je L_433725
L_144102:
	movq 0x8(%r13),%r15
	cmpb $0x3,0x0(%r13)
	jne typeError_1
L_144106:
	movq %r15,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (result_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
L_433725:
L_144117:
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_144118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
result_5:
result_1:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
.long 0x1F09
L_144005:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144006
L_144088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144089
.p2align 0x4
.long 0x1F0D
L_144089:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144006:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433732
	cmpq $0x298D,%r15
	je L_433731
	cmpq $0x298E,%r15
	je L_433728
L_144007:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433728:
L_144087:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
L_144009:
	cmpl $0x1,0x58(%rbp)
	jne L_144011
L_144012:
	cmpq $0x0,0x50(%rbp)
	jna L_143929
L_144014:
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433731:
L_144086:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	jmp L_144009
.p2align 0x4
L_433732:
L_144085:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1F05
L_143977:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143978
L_144002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144003
.p2align 0x4
.long 0x1F08
L_144003:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_143978:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1456,%r14
	jne L_143920
L_143979:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_433735
	cmpq $0x1085,%r15
	je typeError_0
	cmpq $0x1086,%r15
	je L_433734
L_143980:
	movq 0x8(%r13),%r15
	cmpb $0x3,0x0(%r13)
	jne typeError_0
	jmp L_143962
.p2align 0x4
L_433734:
L_143996:
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_143997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_433735:
L_143986:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_143987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
.long 0x1F18
L_144405:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x80(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x90(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x90(%rbp)
	jmp loop_1537
.p2align 0x4
.long 0x1F03
L_143918:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_143919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x1EFA
L_143869:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143870
L_143915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_143916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143916
.p2align 0x4
.long 0x1F02
L_143916:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_143870:
	movq 0x38(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz new_7
L_143871:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x28(%rbp)
	cmpq %r14,%r11
	jne L_143873
L_143874:
	testq %r11,%r11
	jz L_433742
L_143875:
	cmpq $0x7FFFFFFF,%r11
	ja L_143896
L_143876:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143877
L_143893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_143894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143894
.p2align 0x4
.long 0x1EFB
L_143894:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_143877:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15EB,%rcx
	movq 0x28(%rbp),%rdx
	movq $0x20,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_143878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143878
.p2align 0x4
.long 0x1EFB
L_143878:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x38(%rbp)
L_143879:
	movq $0x0,0x48(%rbp)
loop_1536:
	movq 0x28(%rbp),%r15
	cmpq %r15,0x48(%rbp)
	jl L_433739
L_143880:
	movq 0x38(%rbp),%r15
	movq $0x999,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x210B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_143873
L_143882:
	movl %r13d,0xB0(%rbp)
	movq $0x3F53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_143883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_433739:
L_143888:
	movq 0x48(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_143889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_433742:
L_143897:
	movq (globalObjptr+0x7060)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_143879
.p2align 0x4
.long 0x1
L_143865:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1F2F
L_144554:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144555
L_144588:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144589
.p2align 0x4
.long 0x1F38
L_144589:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144555:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433747
	cmpq $0x298D,%r15
	je L_433746
	cmpq $0x298E,%r15
	je L_433745
L_144556:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433745:
L_144587:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
L_144558:
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_144559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
L_433746:
L_144586:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	jmp L_144558
.p2align 0x4
L_433747:
L_144585:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1F22
L_144477:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_144478
.p2align 0x4
.long 0x1F23
L_144479:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144480
L_144545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144546
.p2align 0x4
.long 0x1F2C
L_144546:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144480:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1235,%r14
	je L_433753
L_144498:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_143873
L_144500:
	cmpl $0x0,%r13d
	jl L_433751
L_144501:
	movl $0x0,0x38(%rbp)
loop_1539:
	movl 0x38(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_433749
L_144503:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x50(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq 0x8(%r15),%r11
	movq %r11,0xA8(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x58(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_64
.p2align 0x4
L_433749:
L_144486:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_143861
L_144487:
	movq %r15,0x98(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_144488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_3
.p2align 0x4
L_433751:
L_144497:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433753:
L_144481:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_143873
L_144483:
	cmpl $0x0,%r13d
	jl L_144497
L_144484:
	movl $0x0,0x38(%rbp)
loop_1538:
	movl 0x38(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_144486
L_144490:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,1),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_144491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_3
.p2align 0x4
.long 0x1F21
L_144470:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (new_8+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1EF9
L_143902:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_143903
.p2align 0x4
.long 0x4A5
L_143904:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143905
L_143908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_143909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143909
.p2align 0x4
.long 0x4E9
L_143909:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_143905:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_143864
L_143906:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_143854
.p2align 0x4
.long 0x1F19
L_144414:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_144415
.p2align 0x4
.long 0x1F1A
L_144416:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_3
.p2align 0x4
.long 0x1EF9
L_143961:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_143962
.p2align 0x4
.long 0x1F14
L_144374:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_144375
.p2align 0x4
.long 0x1F15
L_144376:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144377
L_144397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144398
.p2align 0x4
.long 0x1F16
L_144398:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144377:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_143920
L_144378:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_433763
	cmpq $0x1085,%r15
	je typeError_1
	cmpq $0x1086,%r15
	je L_433762
L_144379:
	movq 0x8(%r13),%r15
	movb 0x0(%r13),%r14b
	cmpb $0x1,%r14b
	je typeError_1
	cmpb $0x2,%r14b
	je typeError_1
	cmpb $0x3,%r14b
	je typeError_1
L_144380:
	cmpl $0x1,0x58(%rbp)
	jne L_144011
L_144382:
	cmpq $0x0,0x50(%rbp)
	jna L_143929
L_144384:
	movq %r15,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
L_433762:
L_144391:
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_144392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_433763:
L_144389:
	movq 0x28(%rbp),%r15
	jmp L_143962
.p2align 0x4
.long 0x1
L_143982:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x7078)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1F06
L_144363:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144364
L_144366:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_144367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144367
.p2align 0x4
.long 0x1F07
L_144367:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_144364:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	je typeError_0
	jmp L_143920
.p2align 0x4
.long 0x1EF9
L_144353:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144354
L_144359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144360
.p2align 0x4
.long 0x1F01
L_144360:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144354:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433769
	cmpq $0x298D,%r15
	je L_433768
	cmpq $0x298E,%r15
	je L_433767
L_144355:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_143961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433767:
L_144358:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_143962
.p2align 0x4
L_433768:
L_144357:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_143962
.p2align 0x4
L_433769:
L_144356:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_143961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1F06
L_144332:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144333
L_144335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_144336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144336
.p2align 0x4
.long 0x1F07
L_144336:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_144333:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	je typeError_0
	jmp L_143920
.p2align 0x4
.long 0x1EF9
L_144322:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144323
L_144328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144329
.p2align 0x4
.long 0x1F01
L_144329:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144323:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433774
	cmpq $0x298D,%r15
	je L_433773
	cmpq $0x298E,%r15
	je L_433772
L_144324:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_143961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433772:
L_144327:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_143962
.p2align 0x4
L_433773:
L_144326:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_143962
.p2align 0x4
L_433774:
L_144325:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_143961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1F14
L_144276:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_144277
.p2align 0x4
.long 0x1F15
L_144278:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144279
L_144299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144300
.p2align 0x4
.long 0x1F16
L_144300:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144279:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_143920
L_144280:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_433779
	cmpq $0x1085,%r15
	je typeError_1
	cmpq $0x1086,%r15
	je L_433778
L_144281:
	movq 0x8(%r13),%r15
	cmpb $0x2,0x0(%r13)
	jne typeError_1
L_144284:
	cmpl $0x1,0x58(%rbp)
	jne L_144011
L_144286:
	cmpq $0x0,0x50(%rbp)
	jna L_143929
L_144288:
	movq %r15,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
L_433778:
L_144293:
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_144294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_433779:
L_144291:
	movq 0x28(%rbp),%r15
	jmp L_143962
.p2align 0x4
.long 0x1F06
L_144265:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144266
L_144268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_144269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144269
.p2align 0x4
.long 0x1F07
L_144269:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_144266:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	je typeError_0
	jmp L_143920
.p2align 0x4
.long 0x1EF9
L_144255:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144256
L_144261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144262
.p2align 0x4
.long 0x1F01
L_144262:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144256:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433785
	cmpq $0x298D,%r15
	je L_433784
	cmpq $0x298E,%r15
	je L_433783
L_144257:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_143961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433783:
L_144260:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_143962
.p2align 0x4
L_433784:
L_144259:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_143962
.p2align 0x4
L_433785:
L_144258:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_143961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1F0F
result_2:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp result_3
.p2align 0x4
.long 0x1F06
L_144234:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144235
L_144237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_144238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144238
.p2align 0x4
.long 0x1F07
L_144238:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_144235:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	je typeError_1
	jmp L_143920
.p2align 0x4
.long 0x1EF9
L_144222:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144223
L_144228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144229
.p2align 0x4
.long 0x1F01
L_144229:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144223:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433790
	cmpq $0x298D,%r15
	je L_433789
	cmpq $0x298E,%r15
	je L_433788
L_144224:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_143961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433788:
L_144227:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_143962
.p2align 0x4
L_433789:
L_144226:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_143962
.p2align 0x4
L_433790:
L_144225:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_143961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1F12
L_144178:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144179
L_144199:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144200
.p2align 0x4
.long 0x1F13
L_144200:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144179:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433794
	cmpq $0x298D,%r15
	je L_433793
	cmpq $0x298E,%r15
	je L_433792
L_144180:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433792:
L_144198:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_144183:
	movq $0x1AD1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq %r15,%r14
	jmp L_144184
.p2align 0x4
L_433793:
L_144197:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_144183
.p2align 0x4
L_433794:
L_144196:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1F0F
L_144185:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
.long 0x1EFD
L_144143:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144144
L_144146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144147
.p2align 0x4
.long 0x1EFE
L_144147:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144144:
	movq 0x30(%rbp),%r15
	jmp L_144145
.p2align 0x4
.long 0x1F0F
result_0:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp result_1
.p2align 0x4
.long 0x1F06
L_144118:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144119
L_144121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_144122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144122
.p2align 0x4
.long 0x1F07
L_144122:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_144119:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	je typeError_1
	jmp L_143920
.p2align 0x4
.long 0x1EF9
L_144107:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144108
L_144113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144114
.p2align 0x4
.long 0x1F01
L_144114:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144108:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433800
	cmpq $0x298D,%r15
	je L_433799
	cmpq $0x298E,%r15
	je L_433798
L_144109:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_143961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433798:
L_144112:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_143962
.p2align 0x4
L_433799:
L_144111:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_143962
.p2align 0x4
L_433800:
L_144110:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_143961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1F09
L_144008:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_144009
.p2align 0x4
.long 0x1F0A
L_144015:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144016
L_144083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144084
.p2align 0x4
.long 0x1F08
L_144084:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144016:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_143920
L_144017:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_433807
	cmpq $0x1085,%r15
	je L_433806
	cmpq $0x1086,%r15
	je L_433805
L_144018:
	movq 0x8(%r13),%r15
	movb 0x0(%r13),%r14b
	cmpb $0x1,%r14b
	je L_433804
	cmpb $0x2,%r14b
	je L_433803
	cmpb $0x3,%r14b
	je L_433802
L_144019:
	movq $0x2,0x48(%rbp)
L_144020:
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433802:
L_144074:
	movq $0x2469,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	jmp L_144020
.p2align 0x4
L_433803:
L_144073:
	movq $0x2,0x48(%rbp)
	jmp L_144020
.p2align 0x4
L_433804:
L_144072:
	movq $0x2463,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	jmp L_144020
.p2align 0x4
L_433805:
L_144077:
	movq %r13,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_433806:
L_144076:
	movq 0x0(%r13),%r15
	movq $0x2465,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	jmp L_144020
.p2align 0x4
L_433807:
L_144075:
	movq $0x1,0x48(%rbp)
	jmp L_144020
.p2align 0x4
.long 0x1F06
L_143997:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143998
L_144000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_144001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144001
.p2align 0x4
.long 0x1F07
L_144001:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_143998:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	je typeError_0
	jmp L_143920
.p2align 0x4
.long 0x1EF9
L_143987:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143988
L_143993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_143994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143994
.p2align 0x4
.long 0x1F01
L_143994:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_143988:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433813
	cmpq $0x298D,%r15
	je L_433812
	cmpq $0x298E,%r15
	je L_433811
L_143989:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_143961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433811:
L_143992:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_143962
.p2align 0x4
L_433812:
L_143991:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_143962
.p2align 0x4
L_433813:
L_143990:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_143961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1F03
L_143919:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_143920
L_143921:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_433817
	cmpq $0x1085,%r15
	je L_433815
L_143922:
	movq (globalObjptr+0x7058)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433815:
L_143941:
	movq 0x0(%r13),%r15
	movslq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_143929
L_143943:
	movq 0x0(%r15,%r14,8),%r15
	movq %r15,%r14
L_143935:
	movq %r14,0x30(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_143859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
L_433817:
L_143923:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_143924
L_143925:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x50(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_433819
L_143927:
	movslq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_143929
L_143930:
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_143931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
L_433819:
L_143924:
	movq (globalObjptr+0x1C20)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1EFC
L_143883:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_143884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_10
.p2align 0x4
.long 0x1EFF
L_143889:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143890
L_143891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_143892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143892
.p2align 0x4
.long 0x1F00
L_143892:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_143890:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x38(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x48(%rbp)
	jmp loop_1536
.p2align 0x4
.long 0x1F2F
L_144557:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_144558
.p2align 0x4
.long 0x1F30
L_144559:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_144560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x1F27
L_144504:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144505
L_144542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144543
.p2align 0x4
.long 0x1F2B
L_144543:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144505:
	movq 0x58(%rbp),%r11
	cmpq $0x1,%r11
	je L_433836
L_144506:
	movq 0x8(%r11),%r15
L_144507:
	movq 0x60(%rbp),%r11
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_433835
L_144509:
	movq 0x98(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x10(%r9),%r14
	movq 0x8(%r9),%r8
	movq 0x0(%r9),%rsp
	movq %rsp,0x58(%rbp)
	movq $0x113D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1093,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq %r15,0x0(%r10)
	movq $0x113F,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movb $0x1,%spl
	movzbl %spl,%ecx
	movl %ecx,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x130F,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x68(%rbp)
	movq %r9,0x8(%rsp)
	movq %r10,0x10(%rsp)
	movq %r14,0x20(%rsp)
	movq %r13,0x28(%rsp)
	addq $0x38,%r12
	movq %r11,0x0(%rsp)
	movq $0x1,0x18(%rsp)
	movq 0x10(%r15),%r11
	movq %r11,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_144126
L_144510:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_433833
L_144511:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
	movq %r8,%r14
.p2align 0x4,,0x7
L_144513:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_433832
L_144532:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD92,%r11
	jne L_433831
L_144533:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x18)(%rip)
	je L_433828
L_144514:
	incl %ecx
	movl %ecx,0x3C(%rbp)
	jo L_144132
L_144515:
	cmpq $0x1,%r15
	je L_433823
L_144516:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_144513
.p2align 0x4
L_433823:
L_144517:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144518
L_144530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144531
.p2align 0x4
.long 0x1F2A
L_144531:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144518:
	movl 0x3C(%rbp),%ecx
L_144519:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_144137
L_144520:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144522
L_144529:
	movl %ecx,0x0(%r15)
L_144522:
	movq $0x1B25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_144523:
	movq 0x50(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_3
.p2align 0x4
L_433828:
L_144535:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_144137
L_144536:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144448
L_144538:
	movl %ecx,0x0(%r15)
L_144448:
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433831:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_144514
.p2align 0x4
L_433832:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_144514
.p2align 0x4
L_433833:
L_144539:
	xorl %ecx,%ecx
	jmp L_144519
.p2align 0x4
L_433835:
L_144508:
	movq (globalObjptr+0x7050)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433836:
L_144540:
	cmpq $0x1,0x60(%rbp)
	je L_144523
	jmp L_144508
.p2align 0x4
.long 0x1F24
L_144488:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq 0x88(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_143859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F25
L_144491:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x88(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_144492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F0F
new_8:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp new_7
.p2align 0x4
.long 0x1F1B
L_144417:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x88(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movq %r13,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1EFD
L_144385:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0x28(%rbp),%r15
	jmp L_143962
.p2align 0x4
.long 0x1F06
L_144392:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144393
L_144395:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_144396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144396
.p2align 0x4
.long 0x1F07
L_144396:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_144393:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	je typeError_1
	jmp L_143920
.p2align 0x4
.long 0x1EFD
L_144289:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0x28(%rbp),%r15
	jmp L_143962
.p2align 0x4
.long 0x1F06
L_144294:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144295
L_144297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_144298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144298
.p2align 0x4
.long 0x1F07
L_144298:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_144295:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	je typeError_1
	jmp L_143920
.p2align 0x4
.long 0x1F12
L_144181:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144182
L_144194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144195
.p2align 0x4
.long 0x1F13
L_144195:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144182:
	movq 0x50(%rbp),%r15
	jmp L_144183
.p2align 0x4
.long 0x1EF9
L_144186:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144187
L_144192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144193
.p2align 0x4
.long 0x1F01
L_144193:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144187:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433844
	cmpq $0x298D,%r15
	je L_433843
	cmpq $0x298E,%r15
	je L_433842
L_144188:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_143961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433842:
L_144191:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_143962
.p2align 0x4
L_433843:
L_144190:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_143962
.p2align 0x4
L_433844:
L_144189:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_143961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1F0B
L_144021:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144022
L_144070:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144071
.p2align 0x4
.long 0x1F0C
L_144071:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144022:
	movq 0x50(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1456,%r14
	jne L_143920
L_144023:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_433851
	cmpq $0x1085,%r15
	je L_433850
	cmpq $0x1086,%r15
	je L_433849
L_144024:
	movq 0x8(%r14),%r13
	movb 0x0(%r14),%r11b
	cmpb $0x1,%r11b
	je L_433848
	cmpb $0x2,%r11b
	je L_433847
	cmpb $0x3,%r11b
	je L_433846
L_144025:
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je typeError_1
L_144026:
	movq %r11,%r15
	andq $0x3,%r15
	jnz typeError_1
L_144027:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1234,%r15
	jne typeError_1
L_144028:
	movq 0x0(%r11),%r13
	movq $0x2,%r15
	movq %r13,%r14
L_144030:
	movq %r15,%r13
	andq $0x3,%r13
	jnz typeError_1
L_144031:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1231,%r13
	jne typeError_1
L_144032:
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_8
.p2align 0x4
L_433846:
L_144045:
	movq $0x2469,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je typeError_1
L_144046:
	movq %r13,%r14
	andq $0x3,%r14
	jnz typeError_1
L_144047:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1234,%r14
	jne typeError_1
L_144048:
	movq 0x0(%r13),%r14
	jmp L_144030
.p2align 0x4
L_433847:
L_144040:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je typeError_1
L_144041:
	movq %r13,%r15
	andq $0x3,%r15
	jnz typeError_1
L_144042:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1234,%r15
	jne typeError_1
L_144043:
	movq 0x0(%r13),%r14
	movq $0x2,%r15
	jmp L_144030
.p2align 0x4
L_433848:
L_144035:
	movq $0x2463,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je typeError_1
L_144036:
	movq %r13,%r14
	andq $0x3,%r14
	jnz typeError_1
L_144037:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1234,%r14
	jne typeError_1
L_144038:
	movq 0x0(%r13),%r14
	jmp L_144030
.p2align 0x4
L_433849:
L_144060:
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_433850:
L_144055:
	movq 0x0(%r14),%r15
	movq $0x2465,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je typeError_1
L_144056:
	movq %r11,%r15
	andq $0x3,%r15
	jnz typeError_1
L_144057:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1234,%r15
	jne typeError_1
L_144058:
	movq 0x0(%r11),%r14
	movq %r13,%r15
	jmp L_144030
.p2align 0x4
L_433851:
L_144050:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_433852
L_144051:
	movq %r13,%r15
	andq $0x3,%r15
	jnz typeError_1
L_144052:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1234,%r15
	jne typeError_1
L_144053:
	movq 0x0(%r13),%r14
	movq $0x1,%r15
	jmp L_144030
.p2align 0x4
L_433852:
L_144054:
	movq 0x28(%rbp),%r15
	jmp L_143962
.p2align 0x4
.long 0x1F0A
L_144078:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144079
L_144081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144082
.p2align 0x4
.long 0x1F08
L_144082:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144079:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_143920
L_144080:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq $0x2467,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	jmp L_144020
.p2align 0x4
.long 0x1EF9
L_143931:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143932
L_143939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_143940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143940
.p2align 0x4
.long 0x1F01
L_143940:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_143932:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433859
	cmpq $0x298D,%r15
	je L_433858
	cmpq $0x298E,%r15
	je L_433857
L_143933:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_143934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433857:
L_143938:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	jmp L_143935
.p2align 0x4
L_433858:
L_143937:
	movq 0x0(%r14),%r14
	jmp L_143935
.p2align 0x4
L_433859:
L_143936:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_143934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1EFD
L_143884:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_143885
L_143886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_143887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_143887
.p2align 0x4
.long 0x1EFE
L_143887:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_143885:
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_143859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_10
.p2align 0x4
.long 0x1F31
L_144560:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144561
L_144583:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_144584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144584
.p2align 0x4
.long 0x1F36
L_144584:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_144561:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq $0x11E3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	addq $0xA0,%rbp
	leaq (L_144562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x1F28
L_144524:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x88(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F25
L_144492:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144493
L_144494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_144495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144495
.p2align 0x4
.long 0x1F26
L_144495:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_144493:
	incl 0x38(%rbp)
	jmp loop_1538
.p2align 0x4
.long 0x1F1C
L_144418:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_81
.p2align 0x4
.long 0x1EFD
L_144033:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0x28(%rbp),%r15
	jmp L_143962
.p2align 0x4
.long 0x1F0B
L_144061:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144062
L_144068:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144069
.p2align 0x4
.long 0x1F0C
L_144069:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144062:
	movq 0x50(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_143920
L_144063:
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r14
	movq $0x2467,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je typeError_1
L_144064:
	movq %r13,%r14
	andq $0x3,%r14
	jnz typeError_1
L_144065:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1234,%r14
	jne typeError_1
L_144066:
	movq 0x0(%r13),%r14
	jmp L_144030
.p2align 0x4
.long 0x1EF9
L_143934:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_143935
.p2align 0x4
.long 0x1F32
L_144562:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_143920
L_144563:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1086,%r15
	jne L_433866
L_144565:
	movq %r13,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_144566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_433866:
L_144564:
	movq (globalObjptr+0x7088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1F28
L_144525:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144526
L_144527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144528
.p2align 0x4
.long 0x1F29
L_144528:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144526:
	incl 0x38(%rbp)
	jmp loop_1539
.p2align 0x4
.long 0x1F1D
L_144419:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144420
L_144456:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144457
.p2align 0x4
.long 0x1F1E
L_144457:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144420:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x298C,%r15
	je L_433883
	cmpq $0x298D,%r15
	je L_433882
	cmpq $0x298E,%r15
	je L_433869
L_144421:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_144422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1494
.p2align 0x4
L_433869:
L_144455:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xFF1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x210D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFE7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x28AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_144424:
	movq 0x98(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x10(%r10),%r14
	movq 0x8(%r10),%r9
	movq 0x0(%r10),%r8
	movq %r8,0x30(%rbp)
	movq $0x113D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1093,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x58(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x113F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movb $0x1,%spl
	movzbl %spl,%ecx
	movl %ecx,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq $0x130F,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x48(%rbp)
	movq %r15,0x0(%rsp)
	movq %r8,0x8(%rsp)
	movq %r11,0x10(%rsp)
	movq %r14,0x20(%rsp)
	movq %r13,0x28(%rsp)
	addq $0x38,%r12
	movq $0x1,0x18(%rsp)
	movq 0x10(%r10),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_144126
L_144425:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_433880
L_144426:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
L_144428:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_433879
L_144442:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD92,%r11
	jne L_433878
L_144443:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x18)(%rip)
	je L_433875
L_144429:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_144132
L_144430:
	cmpq $0x1,%r15
	je L_433870
L_144431:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_144428
.p2align 0x4
L_433870:
L_144432:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144433
L_144440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_144441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144441
.p2align 0x4
.long 0x1828
L_144441:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_144433:
	movl 0x58(%rbp),%ecx
L_144434:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_144137
L_144435:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144437
L_144439:
	movl %ecx,0x0(%r15)
L_144437:
	movq $0x1B25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_144438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_3
.p2align 0x4
L_433875:
L_144445:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_144137
L_144446:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144448
L_144449:
	movl %ecx,0x0(%r15)
	jmp L_144448
.p2align 0x4
L_433878:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_144429
.p2align 0x4
L_433879:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_144429
.p2align 0x4
L_433880:
L_144450:
	xorl %ecx,%ecx
	jmp L_144434
.p2align 0x4
L_433882:
L_144454:
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_144424
.p2align 0x4
L_433883:
L_144453:
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1495
.p2align 0x4
.long 0x1F32
L_144566:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144567
L_144581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_144582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144582
.p2align 0x4
.long 0x1F37
L_144582:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_144567:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_143920
L_144568:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r15
	movq $0x2471,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r10
	movq %r10,0x0(%r14)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r14,0x0(%r11)
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_143861
L_144569:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_144570:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_144571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x1F1D
L_144422:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144423
L_144451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144452
.p2align 0x4
.long 0x1F1E
L_144452:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144423:
	movq 0x30(%rbp),%r15
	jmp L_144424
.p2align 0x4
.long 0x860
L_144438:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_143859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F33
L_144571:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_144572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F34
L_144572:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_144573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x1F35
L_144573:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_144574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F30
L_144574:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144575
L_144578:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_144579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144579
.p2align 0x4
.long 0x1F36
L_144579:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_144575:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_143861
L_144576:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_144570
.text
.p2align 0x4
.globl set_10
.hidden set_10
set_10:
L_144598:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_144628
L_144599:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433903
L_144600:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x10(%r10),%r15
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq %r9,0x18(%rbp)
	movq $0x113D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1093,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x10(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x113F,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movb $0x1,%r8b
	movzbl %r8b,%ecx
	movl %ecx,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x130F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x20(%rbp)
	movq %r9,0x8(%r8)
	movq %r11,0x10(%r8)
	movq %r15,0x20(%r8)
	movq %r13,0x28(%r8)
	addq $0x38,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r8)
	movq $0x1,0x18(%r8)
	movq 0x10(%r10),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_433902
L_144602:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_433901
L_144603:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_144605:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_433900
L_144620:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD92,%r11
	jne L_433899
L_144621:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_433896
L_144606:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_433895
L_144608:
	cmpq $0x1,%r15
	je L_433891
L_144609:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_144605
.p2align 0x4
L_433891:
L_144610:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144611
L_144618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_144619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144619
.p2align 0x4
.long 0x789
L_144619:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_144611:
	movl 0x30(%rbp),%ecx
L_144612:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_433893
L_144614:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_144616
L_144617:
	movl %ecx,0x0(%r15)
L_144616:
	movq $0x1B25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433893:
L_144613:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433895:
L_144607:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433896:
L_144623:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_144613
L_144624:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_433897
L_144626:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433897:
L_144625:
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433899:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_144606
.p2align 0x4
L_433900:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_144606
.p2align 0x4
L_433901:
L_144627:
	xorl %ecx,%ecx
	jmp L_144612
.p2align 0x4
L_433902:
L_144601:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433903:
L_144628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_144629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144629
.p2align 0x4
.long 0x45B
L_144629:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_144600
.text
.p2align 0x4
.globl unify_8
.hidden unify_8
unify_8:
L_144630:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_144631
L_144819:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_144820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144820
.p2align 0x4
.long 0x45B
L_144820:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_144631:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
loop_1540:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_144632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x8BA
L_144632:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_144633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x98A
L_144633:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	cmpq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	je L_433906
L_144634:
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_144635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433906:
L_144818:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8BA
L_144635:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_433907
L_144637:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_144638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_433907:
L_144636:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x98A
L_144638:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_144636
L_144639:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_144640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x1F3A
L_144640:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_144641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x1F3B
L_144641:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144642
L_144816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_144817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144817
.p2align 0x4
.long 0x98C
L_144817:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_144642:
	movq 0x20(%rbp),%r14
	movq 0x18(%rbp),%r13
	cmpq %r13,%r14
	je L_144649
L_144643:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0x1456,%r11
	jne L_144644
L_144645:
	movl 0x0(%r15),%r11d
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0x1456,%r10
	jne L_144644
L_144646:
	movl 0x0(%r15),%r10d
	cmpl %r10d,%r11d
	jl L_433929
L_144647:
	movq $0x28AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r13,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r15,0x0(%r13)
	cmpl %r11d,%r10d
	jne L_433925
L_144802:
	movq 0x0(%r14),%r13
	movq %r13,%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x1456,%r10
	jne L_433924
L_144803:
	movl 0x0(%r15),%r11d
	incl %r11d
	jo L_433923
L_144804:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_433922
L_144805:
	movq 0x8(%r13),%r15
	movq $0x28AD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r11d,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r8,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_433919
	cmpq $0x1085,%r15
	je L_433912
	cmpq $0x1086,%r15
	je L_433910
L_144806:
	movq 0x8(%r14),%r15
L_144651:
	movq 0x50(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1083,%r13
	jne L_433909
L_144653:
	movq %r15,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	jmp loop_1540
.p2align 0x4
L_433909:
L_144652:
	movq (globalObjptr+0x5140)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433910:
L_144809:
L_144676:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1086,%r14
	jne L_144652
L_144677:
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_144678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_433912:
L_144808:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
L_144660:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1085,%r14
	jne L_144652
L_144661:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movl %r11d,0x28(%rbp)
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_144663
L_144664:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_433916
L_144666:
	cmpl %ecx,%r11d
	jne L_144668
L_144669:
	cmpl $0x0,%r11d
	jl L_433914
L_144670:
	xorl %ecx,%ecx
loop_1541:
	cmpl 0x28(%rbp),%ecx
	jnl L_433913
L_144672:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x2C(%rbp)
	movslq %ecx,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_144673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_8
.p2align 0x4
L_433913:
L_144671:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433914:
L_144668:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433916:
L_144663:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433919:
L_144807:
	movq 0x0(%r14),%r15
L_144655:
	movq 0x50(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1084,%r13
	jne L_144652
L_144656:
	movq 0x0(%r14),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_433920
L_144657:
	movq (globalObjptr+0x5148)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433920:
L_144658:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433922:
L_144723:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433923:
L_144794:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433924:
L_144644:
	movq (globalObjptr+0x1688)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433925:
L_144649:
	movq 0x48(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_433928
	cmpq $0x1085,%r15
	je L_433927
	cmpq $0x1086,%r15
	je L_144676
L_144650:
	movq 0x8(%r14),%r15
	jmp L_144651
.p2align 0x4
L_433927:
L_144659:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	jmp L_144660
.p2align 0x4
L_433928:
L_144654:
	movq 0x0(%r14),%r15
	jmp L_144655
.p2align 0x4
L_433929:
L_144810:
	movq $0x28AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x48(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_433932
	cmpq $0x1085,%r15
	je L_433931
	cmpq $0x1086,%r15
	je L_144676
L_144811:
	movq 0x8(%r14),%r15
	jmp L_144651
.p2align 0x4
L_433931:
L_144813:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	jmp L_144660
.p2align 0x4
L_433932:
L_144812:
	movq 0x0(%r14),%r15
	jmp L_144655
.p2align 0x4
.long 0xF4E
L_144678:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_144679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0x64E
L_144673:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x2C(%rbp),%ecx
	jmp loop_1541
.p2align 0x4
.long 0x1F3C
L_144679:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	je L_433937
L_144680:
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_144681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_433937:
L_144801:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xF4E
L_144681:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_144636
L_144682:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_144683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0xA48
L_144683:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x70(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_144636
L_144684:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x80(%rbp)
	movq %r11,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_144685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1627
.p2align 0x4
.long 0x1F3D
L_144685:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_144686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1627
.p2align 0x4
.long 0x1F3E
L_144686:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_144687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0x1F3F
L_144687:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_144688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0x1F40
L_144688:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144689
L_144799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_144800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144800
.p2align 0x4
.long 0x1F52
L_144800:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_144689:
	movq 0x50(%rbp),%r15
	movq 0x90(%rbp),%r14
	cmpq %r14,%r15
	je L_144695
L_144690:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x144E,%r11
	jne L_144644
L_144691:
	movl 0x0(%r13),%r11d
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x144E,%r10
	jne L_144644
L_144692:
	movl 0x0(%r13),%r10d
	cmpl %r10d,%r11d
	jl L_433952
L_144693:
	movq $0x289F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r13,0x0(%r15)
	cmpl %r11d,%r10d
	jne L_144695
L_144792:
	movq 0x0(%r14),%r15
	movq %r15,%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x144E,%r10
	jne L_144644
L_144793:
	movl 0x0(%r13),%r11d
	incl %r11d
	jo L_144794
L_144795:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	jne L_144723
L_144796:
	movq 0x8(%r15),%r13
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r15,0x0(%r14)
L_144695:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r13
	cmpq %r14,0x0(%r13)
	je L_433940
L_144696:
	movq %r15,0x98(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_144697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1627
.p2align 0x4
L_433940:
L_144791:
	movq 0x80(%rbp),%r14
	xchgq %r14,%r15
L_144699:
	movq $0xFEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_433947
L_144700:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xA0(%rbp)
.p2align 0x4,,0x7
L_144701:
	cmpq $0x1,0x58(%rbp)
	jne L_433946
.p2align 0x4,,0x7
L_144710:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433945
.p2align 0x4,,0x7
L_144711:
	movq $0x246F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_433941
L_144712:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_144701
.p2align 0x4
L_433941:
L_144714:
	movq $0xFEB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_433944
L_144715:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA8(%rbp)
.p2align 0x4,,0x7
L_144716:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433943
.p2align 0x4,,0x7
L_144717:
	movq $0x2471,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_433942
L_144718:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_144716
.p2align 0x4
L_433942:
L_144720:
	movq $0xFED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_433943:
L_144777:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_144778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144778
.p2align 0x4
.long 0x1F4F
L_144778:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_144717
.p2align 0x4
L_433944:
L_144779:
	movq 0x78(%rbp),%r14
	xchgq %r14,%r15
	jmp L_144720
.p2align 0x4
L_433945:
L_144780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_144781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144781
.p2align 0x4
.long 0x1F50
L_144781:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_144711
.p2align 0x4
L_433946:
L_144702:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x0(%r14),%r15
L_144703:
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_144704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_433947:
L_144788:
	movq 0x58(%rbp),%r14
	xchgq %r14,%r15
	jmp L_144714
.p2align 0x4
L_433952:
L_144797:
	movq $0x289F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_144695
.p2align 0x4
.long 0xB83
L_144697:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144698
L_144789:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_144790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144790
.p2align 0x4
.long 0xB8D
L_144790:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_144698:
	movq 0x80(%rbp),%r15
	jmp L_144699
.p2align 0x4
.long 0x1F43
L_144721:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144722
L_144775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_144776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144776
.p2align 0x4
.long 0x1F4E
L_144776:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_144722:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x144E,%r13
	jne L_144723
L_144724:
	movl 0x0(%r15),%r13d
	movq $0x289D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x68(%rbp),%r14
	cmpq %r11,0x0(%r14)
	je L_144745
L_144725:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_433958
L_144726:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
L_144727:
	movq %r15,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_144728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp send_0
.p2align 0x4
L_433958:
L_144731:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_144745
L_144732:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x60(%rbp)
.p2align 0x4,,0x7
L_144733:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	jne L_433965
.p2align 0x4,,0x7
L_144742:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_433959
L_144743:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_144733
.p2align 0x4
L_433959:
L_144745:
	movq 0x90(%rbp),%r14
	cmpq %r14,0x50(%rbp)
	je L_433964
L_144746:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_433960
L_144747:
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x0(%r14),%r15
L_144748:
	movq %r15,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_144749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp send_0
.p2align 0x4
L_433960:
L_144752:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_144766
L_144753:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
.p2align 0x4,,0x7
L_144754:
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	jne L_433962
.p2align 0x4,,0x7
L_144763:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_433961
L_144764:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_144754
.p2align 0x4
L_433961:
L_144766:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433962:
L_144755:
	movq 0x8(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,%r15
L_144756:
	movq 0x98(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_144757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_433964:
L_144770:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433965:
L_144734:
	movq 0x8(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,%r15
L_144735:
	movq 0x60(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_144736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x1F41
L_144704:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_144705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0x1F44
L_144728:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_144731
L_144729:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_144727
.p2align 0x4
.long 0x1F49
L_144749:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_144752
L_144750:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	jmp L_144748
.p2align 0x4
.long 0x1F4A
L_144757:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq %r14,0xF8(%rbp)
	addq $0xE8,%rbp
	leaq (L_144758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F45
L_144736:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0xB0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r14,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_144737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F42
L_144705:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144706
L_144785:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_144786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144786
.p2align 0x4
.long 0x1F51
L_144786:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_144706:
	movq 0xB0(%rbp),%r14
	cmpq %r14,0xB8(%rbp)
	je L_433973
L_144707:
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_144710
L_144708:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	jmp L_144703
.p2align 0x4
L_433973:
L_144782:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_433974
L_144783:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_144701
.p2align 0x4
L_433974:
L_144784:
	movq 0xA0(%rbp),%r14
	xchgq %r14,%r15
	jmp L_144714
.p2align 0x4
.long 0x1F4B
L_144758:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xE8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_144759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x1F46
L_144737:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_144738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x1F4C
L_144759:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_144760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F47
L_144738:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_144739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F4D
L_144760:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_144763
L_144761:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	jmp L_144756
.p2align 0x4
.long 0x1F48
L_144739:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_144742
L_144740:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	jmp L_144735
.text
.p2align 0x4
.globl x_1627
.hidden x_1627
x_1627:
L_144821:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_144822
L_144899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_144900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144900
.p2align 0x4
.long 0x45B
L_144900:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_144822:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movb 0x0(%r14),%dl
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1542:
	cmpl $0x5,%ecx
	jnl L_433983
L_144888:
	movslq %ecx,%r15
	cmpq $0x5,%r15
	jnb L_433982
L_144890:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_433981
L_144891:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%rbp),%r10
	movq 0x0(%r10),%r9
	cmpq %r9,0x0(%r11)
	jne L_433980
L_144894:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq %r11,0x0(%r14)
	je L_433978
	movb %dl,(localWord8+0x0)(%rip)
L_144893:
	incl %ecx
	movb (localWord8+0x0)(%rip),%dl
	jmp loop_1542
.p2align 0x4
L_433978:
L_144896:
	movq (globalObjptr+0x5108)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_433979
L_144897:
	movl %r13d,0x0(%r14)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433979:
L_144841:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433980:
	movb %dl,(localWord8+0x0)(%rip)
	jmp L_144893
.p2align 0x4
L_433981:
L_144898:
	incl %ecx
	jmp loop_1542
.p2align 0x4
L_433982:
L_144846:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_433983:
L_144823:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	testb %dl,%dl
	jnz L_433993
L_144824:
	cmpq $0x1,%r14
	je L_433992
L_144825:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq %r13,0x38(%rbp)
.p2align 0x4,,0x7
L_144826:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433991
.p2align 0x4,,0x7
L_144827:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_144835
L_144828:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_144829:
	movq 0x30(%rbp),%r13
	movl 0x0(%r15),%r11d
	cmpl %r11d,0x0(%r13)
	jne L_144831
L_144854:
	movq 0x8(%r13),%r11
	movq 0x8(%r15),%r10
	movq 0x8(%r10),%r9
	cmpq %r9,0x8(%r11)
	je L_433987
L_144831:
	cmpq $0x1,%r14
	je L_433984
L_144832:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_144829
.p2align 0x4
L_433984:
L_144833:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433986
.p2align 0x4,,0x7
L_144835:
	movq $0x2105,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_433985
L_144836:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_144826
.p2align 0x4
L_433985:
L_144838:
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_144839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromList_38
.p2align 0x4
L_433986:
L_144852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_144853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144853
.p2align 0x4
.long 0x657
L_144853:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_144835
.p2align 0x4
L_433987:
L_144856:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_433988
L_144857:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_144826
.p2align 0x4
L_433988:
L_144858:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_144838
.p2align 0x4
L_433991:
L_144860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_144861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144861
.p2align 0x4
.long 0x657
L_144861:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_144827
.p2align 0x4
L_433992:
L_144862:
	movq %r13,%r15
	jmp L_144838
.p2align 0x4
L_433993:
L_144863:
	cmpq $0x1,%r14
	je L_434002
L_144864:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_144865:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434001
.p2align 0x4,,0x7
L_144866:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_144874
L_144867:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_144868:
	movq 0x30(%rbp),%r13
	movl 0x0(%r15),%r11d
	cmpl %r11d,0x0(%r13)
	jne L_144870
L_144879:
	movq 0x8(%r13),%r11
	movq 0x8(%r15),%r10
	movq 0x8(%r10),%r9
	cmpq %r9,0x8(%r11)
	je L_433997
L_144870:
	cmpq $0x1,%r14
	je L_433994
L_144871:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_144868
.p2align 0x4
L_433994:
L_144872:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_433996
.p2align 0x4,,0x7
L_144874:
	movq $0x2105,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_144838
L_144875:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_144865
.p2align 0x4
L_433996:
L_144877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_144878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144878
.p2align 0x4
.long 0x657
L_144878:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_144874
.p2align 0x4
L_433997:
L_144881:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_433998
L_144882:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_144865
.p2align 0x4
L_433998:
L_144883:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_144838
.p2align 0x4
L_434001:
L_144885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_144886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144886
.p2align 0x4
.long 0x657
L_144886:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_144866
.p2align 0x4
L_434002:
L_144887:
	movq $0x1,%r15
	jmp L_144838
.p2align 0x4
.long 0x555
L_144839:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144840
L_144850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_144851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144851
.p2align 0x4
.long 0x63C
L_144851:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_144840:
	movq $0x9D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x50F0)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_144841
L_144842:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x50F8)(%rip),%r14
	cmpl $0x4,0x0(%r14)
	jnb x_520
L_144849:
	movq (globalObjptr+0x550)(%rip),%r13
	movl 0x0(%r13),%r11d
	imull $0x19660D,%r11d
	addl $0x3C6EF35F,%r11d
	movl %r11d,0x0(%r13)
	movq (globalObjptr+0x5100)(%rip),%r13
	movl %r11d,0x0(%r13)
	movl $0xFFFFFFFF,0x0(%r14)
x_520:
	movq (globalObjptr+0x5100)(%rip),%r14
	movl 0x0(%r14),%eax
	movl %eax,%r13d
	xchgl %r13d,%eax
	movl $0x5,%ebx
	xorl %edx,%edx
	divl %ebx
	movl %eax,0x0(%r14)
	movq (globalObjptr+0x50F8)(%rip),%r14
	movl 0x0(%r14),%eax
	movl $0x5,%ebx
	xorl %edx,%edx
	divl %ebx
	movl %eax,0x0(%r14)
	movl %r13d,%eax
	movl $0x5,%ebx
	xorl %edx,%edx
	divl %ebx
	cmpl $0x0,%edx
	jl L_144841
L_144844:
	movq $0x265B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movslq %edx,%r13
	cmpq $0x5,%r13
	jnb L_144846
L_144847:
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r15,%r13,8)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl fromList_38
.hidden fromList_38
fromList_38:
L_144901:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_144902
L_145009:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_145010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145010
.p2align 0x4
.long 0x45F
L_145010:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_144902:
	movq 0x8(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_434046
L_144903:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_144904:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434045
.p2align 0x4,,0x7
L_144905:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_144913
L_144906:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_144907:
	movq 0x28(%rbp),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r15)
	jne L_144909
L_145000:
	movq 0x8(%r15),%r11
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	cmpq %r9,0x8(%r11)
	je L_434041
L_144909:
	cmpq $0x1,%r14
	je L_434008
L_144910:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_144907
.p2align 0x4
L_434008:
L_144911:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434040
.p2align 0x4,,0x7
L_144913:
	movq $0x2105,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_434009
L_144914:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_144904
.p2align 0x4
L_434009:
L_144915:
	movq %r15,0x20(%rbp)
L_144916:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_434039
L_144917:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_144918:
	xorl 0x0(%r15),%ecx
	cmpq $0x1,%r14
	je L_434010
L_144919:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_144918
.p2align 0x4
L_434010:
L_144920:
L_144921:
	andl 0x10(%rbp),%ecx
	cmpl $0x0,%ecx
	jl L_434038
L_144922:
	movslq %ecx,%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_434037
L_144924:
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
.p2align 0x4,,0x7
loop_1543:
	movq 0x28(%rbp),%r9
	movq 0x0(%r9),%r8
	movq %r8,0x30(%rbp)
	cmpq $0x1,%r8
	je L_434035
L_144925:
	movq 0xFFFFFFFFFFFFFFF8(%r8),%r15
	shrq $0x1,%r15
	cmpq $0x1080,%r15
	je L_434015
L_144980:
	movq 0x10(%r8),%r14
	movq 0x8(%r8),%r15
	movq 0x0(%r8),%r13
	movq 0x20(%rbp),%r9
	cmpq $0x1,%r9
	je L_434014
L_144981:
	movq 0x8(%r9),%r10
	movq 0x0(%r9),%r11
.p2align 0x4,,0x7
L_144982:
	movl 0x0(%r11),%r9d
	cmpl %r9d,0x0(%r13)
	jne L_434013
L_144988:
	movq 0x8(%r11),%r9
	movq 0x8(%r13),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r9)
	je L_434012
	movq %r15,(localObjptr+0x8)(%rip)
L_144984:
	cmpq $0x1,%r10
	je L_434011
L_144985:
	movq 0x0(%r10),%r11
	movq 0x8(%r10),%r10
	movq (localObjptr+0x8)(%rip),%r15
	jmp L_144982
.p2align 0x4
L_434011:
	movq %r14,%r15
L_144987:
	movq %r15,0x28(%rbp)
	jmp loop_1543
.p2align 0x4
L_434012:
L_144990:
	movq %r15,0x28(%rbp)
	jmp loop_1543
.p2align 0x4
L_434013:
	movq %r15,(localObjptr+0x8)(%rip)
	jmp L_144984
.p2align 0x4
L_434014:
	movq %r14,%r15
	jmp L_144987
.p2align 0x4
L_434015:
L_144926:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144927
L_144978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_144979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144979
.p2align 0x4
.long 0x4FC
L_144979:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_144927:
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_144955
L_144928:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
.p2align 0x4,,0x7
L_144929:
	cmpq $0x1,%r15
	je L_434031
L_144930:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
L_144931:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434030
.p2align 0x4,,0x7
L_144932:
	movq 0x58(%rbp),%r15
	movq 0x48(%rbp),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_144934
L_144938:
	movq 0x8(%r15),%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	jne L_434027
L_144940:
	cmpq $0x1,0x50(%rbp)
	je L_434024
L_144941:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_434023
L_144942:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
L_144943:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434022
.p2align 0x4,,0x7
L_144944:
	movq $0x2105,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_434016
L_144945:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_144943
.p2align 0x4
L_434016:
L_144946:
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x58(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
L_144947:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434021
.p2align 0x4,,0x7
L_144948:
	movq $0x2105,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_434017
L_144949:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_144947
.p2align 0x4
L_434017:
L_144950:
	movq %r15,0x48(%rbp)
L_144951:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_434018
L_144952:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq 0x48(%rbp),%r14
	movq %r15,0x48(%rbp)
	movq %r14,%r15
	jmp L_144929
.p2align 0x4
L_434018:
L_144953:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144954
L_144958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_144959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144959
.p2align 0x4
.long 0x855
L_144959:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_144954:
	movq 0x48(%rbp),%r15
L_144955:
	cmpq $0x1,%r15
	je L_434019
L_144956:
	movq 0x0(%r15),%r14
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2101,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x38(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x127F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x2101,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x127F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	addq $0x10,%r12
	movq $0x2103,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r10,0x10(%r13)
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434019:
L_144957:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434021:
L_144960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_144961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144961
.p2align 0x4
.long 0x4B6
L_144961:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_144948
.p2align 0x4
L_434022:
L_144962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_144963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144963
.p2align 0x4
.long 0x802
L_144963:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_144944
.p2align 0x4
L_434023:
L_144964:
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	jmp L_144951
.p2align 0x4
L_434024:
L_144965:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_434025
L_144966:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x60(%rbp),%r15
	jmp L_144929
.p2align 0x4
L_434025:
L_144967:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144968
L_144969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_144970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144970
.p2align 0x4
.long 0x1F53
L_144970:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_144968:
	movq 0x60(%rbp),%r15
	jmp L_144955
.p2align 0x4
L_434027:
L_144934:
	movq $0x2105,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_434028
L_144935:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_144931
.p2align 0x4
L_434028:
L_144937:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2101,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x127F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x2101,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r11
	movq %r11,0x8(%r14)
	movq $0x127F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x2103,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434030:
L_144971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_144972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144972
.p2align 0x4
.long 0x802
L_144972:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_144932
.p2align 0x4
L_434031:
L_144973:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144937
L_144975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_144976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144976
.p2align 0x4
.long 0x855
L_144976:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_144937
.p2align 0x4
L_434035:
L_144992:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_144993
L_144994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_144995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144995
.p2align 0x4
.long 0x508
L_144995:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_144993:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2101,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434037:
L_144923:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434038:
L_144996:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434039:
L_144997:
	xorl %ecx,%ecx
	jmp L_144921
.p2align 0x4
L_434040:
L_144998:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_144999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_144999
.p2align 0x4
.long 0x71F
L_144999:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_144913
.p2align 0x4
L_434041:
L_145002:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_434042
L_145003:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_144904
.p2align 0x4
L_434042:
L_145004:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_144916
.p2align 0x4
L_434045:
L_145006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_145007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145007
.p2align 0x4
.long 0x71F
L_145007:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_144905
.p2align 0x4
L_434046:
L_145008:
	movq $0x1,0x20(%rbp)
	jmp L_144916
.text
.p2align 0x4
.globl send_0
.hidden send_0
send_0:
L_145011:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_145012
L_145043:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_145044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145044
.p2align 0x4
.long 0x45B
L_145044:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_145012:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_145013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0x654
L_145013:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_434049
L_145015:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_145016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1627
.p2align 0x4
L_434049:
L_145014:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB1D
L_145016:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r15),%r13
	cmpq %r13,0x0(%r14)
	je L_434050
L_145017:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_145018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1627
.p2align 0x4
L_434050:
L_145042:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB29
L_145018:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq 0x8(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_434051
L_145019:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_145020:
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_145021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp send_0
.p2align 0x4
L_434051:
L_145024:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_145038
L_145025:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_145026:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	jne L_434053
.p2align 0x4,,0x7
L_145035:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_434052
L_145036:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_145026
.p2align 0x4
L_434052:
L_145038:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434053:
L_145027:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,%r15
L_145028:
	movq 0x28(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_145029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x80B
L_145021:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_145024
L_145022:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_145020
.p2align 0x4
.long 0x912
L_145029:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_145030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x1F54
L_145030:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_145031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x1F55
L_145031:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_145032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
.long 0x510
L_145032:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_145035
L_145033:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_145028
.text
.p2align 0x4
.globl coerce_5
.hidden coerce_5
coerce_5:
L_145045:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_145046
L_145102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_145103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145103
.p2align 0x4
.long 0x45B
L_145103:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_145046:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_145047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x4DD
L_145047:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_145048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x739
L_145048:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	cmpq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	je L_434058
L_145049:
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_145050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_434058:
L_145101:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4DD
L_145050:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_434059
L_145052:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_145053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_434059:
L_145051:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x739
L_145053:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_145051
L_145054:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1084,%r14
	je L_434070
	cmpq $0x1085,%r14
	je L_434063
	cmpq $0x1086,%r14
	je L_434061
L_145055:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1083,%r15
	jne L_434060
L_145057:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp unify_8
.p2align 0x4
L_434060:
L_145056:
	movq (globalObjptr+0x5150)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434061:
L_145077:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1086,%r15
	jne L_145056
L_145078:
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_145079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434063:
L_145062:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1085,%r15
	jne L_145056
L_145063:
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x28(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_145065
L_145066:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_434067
L_145068:
	cmpl %r11d,%ecx
	jne L_145070
L_145071:
	cmpl $0x0,%r11d
	jl L_434065
L_145072:
	xorl %ecx,%ecx
loop_1544:
	cmpl 0x28(%rbp),%ecx
	jnl L_434064
L_145074:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x2C(%rbp)
	movslq %ecx,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_145075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_5
.p2align 0x4
L_434064:
L_145073:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434065:
L_145070:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434067:
L_145065:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434070:
L_145058:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	jne L_145056
L_145059:
	movq 0x0(%r13),%r15
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r14)
	je L_434071
L_145060:
	movq (globalObjptr+0x5158)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434071:
L_145061:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8FF
L_145079:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_145080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0x64E
L_145075:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x2C(%rbp),%ecx
	jmp loop_1544
.p2align 0x4
.long 0x510
L_145080:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r15,0x20(%rbp)
	je L_434074
L_145081:
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_145082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434074:
L_145100:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1045
L_145082:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145083
L_145098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_145099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145099
.p2align 0x4
.long 0x90F
L_145099:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_145083:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144E,%r14
	jne L_145051
L_145084:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_434075
L_145085:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_145086:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_145087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_434075:
L_145093:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x246F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x8(%rbp)
	jmp send_0
.p2align 0x4
.long 0x5F0
L_145087:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_145088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
.long 0x4AA
L_145088:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145089
L_145095:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_145096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145096
.p2align 0x4
.long 0x4AD
L_145096:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_145089:
	movq 0x40(%rbp),%r14
	cmpq %r14,0x48(%rbp)
	je L_434079
L_145090:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_145093
L_145091:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_145086
.p2align 0x4
L_434079:
L_145094:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl exp_0
.hidden exp_0
exp_0:
L_145104:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_145105
L_145462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_145463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145463
.p2align 0x4
.long 0x45B
L_145463:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_145105:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_145116
L_145106:
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_145107:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE99,%r14
	je L_434085
	cmpq $0xE9A,%r14
	je L_434083
	cmpq $0xE9B,%r14
	je L_434081
L_145108:
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_145109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exp_0
.p2align 0x4
L_434081:
L_145458:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_434082
L_145459:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r13,0x38(%rbp)
	jmp L_145107
.p2align 0x4
L_434082:
L_145116:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_145117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_434083:
L_145406:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145407
L_145456:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_145457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145457
.p2align 0x4
.long 0x657
L_145457:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_145407:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x349F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x20,%r12
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r11,0x60(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_145408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
L_434085:
L_145135:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145136
L_145404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_145405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145405
.p2align 0x4
.long 0x657
L_145405:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_145136:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_434086
	leaq jumpTable_308(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_308:
.quad L_434105,L_434104,L_434103,L_145141,L_434094,L_434093,L_434092,L_145141,L_434089,L_434088,L_434087
.text
.p2align 0x4
L_434086:
L_145137:
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x60(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_145138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_434087:
L_145374:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r14),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0x70(%rbp)
	movq %r13,0x80(%rbp)
	movq %r11,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_145375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_434088:
L_145325:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x88(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x70(%rbp)
	movq %r13,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_145326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_434089:
L_145308:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_434090
L_145309:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_145310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_434090:
L_145141:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_145142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_434092:
L_145298:
	movq 0x10(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_145299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exp_0
.p2align 0x4
L_434093:
L_145260:
	movq 0x20(%r14),%r15
	movl 0x0(%r14),%r13d
	movq 0x18(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%r14),%r10
	movq 0x8(%r14),%r9
	movq $0x104D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %r13d,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r10,0x18(%r14)
	movq %r9,0x20(%r14)
	movq %r9,0x70(%rbp)
	addq $0x30,%r12
	movl $0x0,0x4(%r14)
	movq %r11,0x10(%r14)
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xC0D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xC0F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r13)
	movq $0xD65,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x60(%rbp)
	movq %r13,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x20,%r12
	movq %r15,0x10(%r11)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_145261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_434094:
L_145217:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
L_145218:
	movq %r15,%r14
	andq $0x3,%r14
	jnz length_27
L_145240:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1212,%r14
	je L_145242
	cmpq $0x121C,%r14
	je L_145242
	cmpq $0x121E,%r14
	je L_145242
	cmpq $0x1226,%r14
	je L_434098
length_27:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_434097
L_145220:
	cmpl $0x0,%r13d
	jl L_434096
L_145221:
	movl $0x0,0x4C(%rbp)
loop_1546:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_145141
L_145223:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r11,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_145224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_434096:
L_145185:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434097:
L_145164:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434098:
L_145242:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_145243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_434103:
L_145201:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x60(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_145202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_434104:
L_145186:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x60(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_145187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_434105:
L_145162:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_145164
L_145165:
	cmpl $0x0,%r13d
	jl L_145185
L_145166:
	movl $0x0,0x4C(%rbp)
loop_1545:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_145141
L_145168:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r11,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_145169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x1F56
L_145109:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_145110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x4E3
L_145117:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145118
L_145130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_145131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145131
.p2align 0x4
.long 0x4F0
L_145131:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_145118:
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x20(%rbp),%r11
	cmpq %r11,%r14
	je x_521
L_145119:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
x_521:
	cmpb $0x1,0x0(%r15)
	je L_434112
L_145120:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434112:
L_145121:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_145122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x1B7F
L_145408:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145409
L_145454:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_145455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145455
.p2align 0x4
.long 0x1F5F
L_145455:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_145409:
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xC0D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xC0F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r13)
	movq $0x34BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	addq $0x30,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x18(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%r14)
	movq %r14,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_145410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
.long 0x65E
L_145138:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145139
L_145160:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_145161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145161
.p2align 0x4
.long 0x677
L_145161:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_145139:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x58(%rbp),%r11
	cmpq %r11,%r14
	je x_522
L_145140:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
x_522:
	cmpb $0x1,0x0(%r15)
	jne L_145141
L_145151:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_145152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x8C2
L_145375:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145376
L_145402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_145403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145403
.p2align 0x4
.long 0x8DF
L_145403:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_145376:
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x68(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je x_530
L_145377:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
x_530:
	cmpb $0x1,0x0(%r15)
	jne L_434117
L_145393:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_145394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_434117:
L_145378:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_145379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x8C2
L_145326:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145327
L_145372:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_145373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145373
.p2align 0x4
.long 0x8DF
L_145373:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_145327:
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x68(%rbp),%r11
	cmpq %r11,%r14
	je x_529
L_145328:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
x_529:
	cmpb $0x1,0x0(%r15)
	je L_434128
L_145329:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_434119
L_145330:
L_145331:
	movq %r15,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_145332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exp_0
.p2align 0x4
L_434119:
L_145333:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1235,%r14
	je L_434124
L_145342:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_145164
L_145344:
	cmpl $0x0,%r13d
	jl L_145185
L_145345:
	movl $0x0,0x48(%rbp)
loop_1548:
	movl 0x48(%rbp),%r15d
	cmpl 0x50(%rbp),%r15d
	jnl L_145141
L_145347:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x60(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq 0x10(%r15),%r11
	cmpq $0x1,%r11
	je L_434120
L_145348:
	movq 0x8(%r11),%r15
	movq %r15,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	addq $0x80,%rbp
	leaq (L_145349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_434120:
L_145353:
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_145354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exp_0
.p2align 0x4
L_434124:
L_145334:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_145164
L_145336:
	cmpl $0x0,%r13d
	jl L_145185
L_145337:
	movl $0x0,0x48(%rbp)
loop_1547:
	movl 0x48(%rbp),%r15d
	cmpl 0x50(%rbp),%r15d
	jnl L_145141
L_145339:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,1),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_145340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exp_0
.p2align 0x4
L_434128:
L_145361:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_145362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x65E
L_145310:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145311
L_145322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_145323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145323
.p2align 0x4
.long 0x677
L_145323:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_145311:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x58(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je x_528
L_145312:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
x_528:
	cmpb $0x1,0x0(%r15)
	jne L_145141
L_145313:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_145314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x1F57
L_145142:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145143
L_145149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_145150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145150
.p2align 0x4
.long 0x80A
L_145150:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_145143:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x38(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_145145
L_145144:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x48(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145145:
	movb $0x0,0x0(%r15)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_145116
L_145146:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_145107
.p2align 0x4
.long 0x7EF
L_145299:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x68,%rbp
	leaq (L_145300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x65E
L_145261:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145262
L_145296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_145297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145297
.p2align 0x4
.long 0x677
L_145297:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_145262:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x50(%rbp),%r11
	cmpq %r11,%r14
	je L_145264
L_145263:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145264:
	movb $0x0,0x0(%r15)
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_145265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exp_0
.p2align 0x4
.long 0x1F59
L_145224:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145225
L_145237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_145238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145238
.p2align 0x4
.long 0xF73
L_145238:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_145225:
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x68(%rbp),%r11
	cmpq %r11,%r14
	je x_526
L_145226:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
x_526:
	cmpb $0x1,0x0(%r15)
	jne L_434137
L_145228:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_145229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_434137:
L_145227:
	incl 0x4C(%rbp)
	jmp loop_1546
.p2align 0x4
.long 0x65F
L_145243:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145244
L_145255:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_145256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145256
.p2align 0x4
.long 0x678
L_145256:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_145244:
	movq 0x70(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x60(%rbp),%r11
	cmpq %r11,%r14
	je x_527
L_145245:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
x_527:
	cmpb $0x1,0x0(%r15)
	jne length_27
L_145246:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_145247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x65E
L_145202:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145203
L_145214:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_145215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145215
.p2align 0x4
.long 0x677
L_145215:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_145203:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x58(%rbp),%r11
	cmpq %r11,%r14
	je x_525
L_145204:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
x_525:
	cmpb $0x1,0x0(%r15)
	jne L_145141
L_145205:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_145206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x65E
L_145187:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145188
L_145199:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_145200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145200
.p2align 0x4
.long 0x677
L_145200:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_145188:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x58(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je x_524
L_145189:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
x_524:
	cmpb $0x1,0x0(%r15)
	jne L_145141
L_145190:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_145191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x1F59
L_145169:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145170
L_145182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_145183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145183
.p2align 0x4
.long 0xF73
L_145183:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_145170:
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x68(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je x_523
L_145171:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
x_523:
	cmpb $0x1,0x0(%r15)
	jne L_434144
L_145173:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_145174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_434144:
L_145172:
	incl 0x4C(%rbp)
	jmp loop_1545
.p2align 0x4
.long 0x1F57
L_145110:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145111
L_145133:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_145134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145134
.p2align 0x4
.long 0x80A
L_145134:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_145111:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x38(%rbp),%r11
	cmpq %r11,%r14
	je L_145113
L_145112:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145113:
	movb $0x0,0x0(%r15)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_145116
L_145114:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_145107
.p2align 0x4
.long 0x679
L_145122:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145123
L_145127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_145128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145128
.p2align 0x4
.long 0x637
L_145128:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_145123:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x20(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_145125
L_145124:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145125:
	movb $0x0,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7F1
L_145410:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145411
L_145452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_145453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145453
.p2align 0x4
.long 0x809
L_145453:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_145411:
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_145417
L_145412:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_145413:
	movb 0x0(%r14),%r13b
	movq 0x8(%r14),%r11
	movq 0x10(%r14),%r10
	movq 0x18(%r14),%r9
	movq %r9,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r14,1)
	movq %r10,0x0(%r9)
	movb %r13b,0x0(%r11)
	cmpq $0x1,%r15
	je L_434151
L_145414:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_145413
.p2align 0x4
L_434151:
L_145415:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145417
L_145449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_145450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145450
.p2align 0x4
.long 0x61D
L_145450:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_145417:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_434155
L_145418:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_145419:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_434154
L_145420:
	cmpq $0x1,%r15
	je L_434152
L_145421:
	movq 0x8(%r15),%r15
	jmp L_145419
.p2align 0x4
L_434152:
L_145422:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145423
L_145446:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_145447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145447
.p2align 0x4
.long 0x1F60
L_145447:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_145423:
	movl 0x38(%rbp),%ecx
L_145424:
	movl %ecx,0x68(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_145425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_434154:
L_145275:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434155:
L_145448:
	xorl %ecx,%ecx
	jmp L_145424
.p2align 0x4
.long 0x1F58
L_145152:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145153
L_145157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_145158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145158
.p2align 0x4
.long 0x804
L_145158:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_145153:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x58(%rbp),%r11
	cmpq %r11,%r14
	je L_145155
L_145154:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145155:
	movb $0x0,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_145141
.p2align 0x4
.long 0xF65
L_145394:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145395
L_145399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_145400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145400
.p2align 0x4
.long 0xF6F
L_145400:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_145395:
	movq 0x88(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x78(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_145397
L_145396:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x80(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145397:
	movb $0x0,0x0(%r15)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_145378
.p2align 0x4
.long 0x1F67
L_145379:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145380
L_145391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_145392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145392
.p2align 0x4
.long 0x1F69
L_145392:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_145380:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x68(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je x_531
L_145381:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
x_531:
	cmpb $0x1,0x0(%r15)
	jne L_145141
L_145382:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_145383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x1F62
L_145332:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_145333
.p2align 0x4
.long 0x1F64
L_145349:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145350
L_145356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_145357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145357
.p2align 0x4
.long 0x1F66
L_145357:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_145350:
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x68(%rbp),%r11
	cmpq %r11,%r14
	je L_145352
L_145351:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145352:
	movb $0x0,0x0(%r15)
	jmp L_145353
.p2align 0x4
.long 0x1F65
L_145354:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	incl 0x48(%rbp)
	jmp loop_1548
.p2align 0x4
.long 0x1F63
L_145340:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	incl 0x48(%rbp)
	jmp loop_1547
.p2align 0x4
.long 0x8C2
L_145362:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145363
L_145369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_145370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145370
.p2align 0x4
.long 0x8DF
L_145370:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_145363:
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x68(%rbp),%r11
	cmpq %r11,%r14
	je L_145365
L_145364:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145365:
	movb $0x0,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_145333
L_145366:
	jmp L_145331
.p2align 0x4
.long 0x1F58
L_145314:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145315
L_145319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_145320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145320
.p2align 0x4
.long 0x804
L_145320:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_145315:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x58(%rbp),%r11
	cmpq %r11,%r14
	je L_145317
L_145316:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145317:
	movb $0x0,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_145141
.p2align 0x4
.long 0x1F61
L_145300:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145301
L_145305:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_145306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145306
.p2align 0x4
.long 0x809
L_145306:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_145301:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x50(%rbp),%r11
	cmpq %r11,%r14
	je L_145303
L_145302:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145303:
	movb $0x0,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_145284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exp_0
.p2align 0x4
.long 0x1F5D
L_145265:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145266
L_145293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_145294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145294
.p2align 0x4
.long 0x1F60
L_145294:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_145266:
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_145272
L_145267:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_145268:
	movb 0x0(%r14),%r13b
	movq 0x8(%r14),%r11
	movq 0x10(%r14),%r10
	movq 0x18(%r14),%r9
	movq %r9,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r14,1)
	movq %r10,0x0(%r9)
	movb %r13b,0x0(%r11)
	cmpq $0x1,%r15
	je L_434174
L_145269:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_145268
.p2align 0x4
L_434174:
L_145270:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145272
L_145290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_145291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145291
.p2align 0x4
.long 0x1F5F
L_145291:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_145272:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_434178
L_145273:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_145274:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_145275
L_145276:
	cmpq $0x1,%r15
	je L_434175
L_145277:
	movq 0x8(%r15),%r15
	jmp L_145274
.p2align 0x4
L_434175:
L_145278:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145279
L_145287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_145288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145288
.p2align 0x4
.long 0x632
L_145288:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_145279:
	movl 0x50(%rbp),%ecx
L_145280:
	movl %ecx,0x60(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_145281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_434178:
L_145289:
	xorl %ecx,%ecx
	jmp L_145280
.p2align 0x4
.long 0x1F5A
L_145229:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145230
L_145234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_145235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145235
.p2align 0x4
.long 0x1F5B
L_145235:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_145230:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x68(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_145232
L_145231:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145232:
	movb $0x0,0x0(%r15)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_145227
.p2align 0x4
.long 0x1F5C
L_145247:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145248
L_145252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_145253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145253
.p2align 0x4
.long 0x677
L_145253:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_145248:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x60(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_145250
L_145249:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x68(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145250:
	movb $0x0,0x0(%r15)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp length_27
.p2align 0x4
.long 0x1F58
L_145206:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145207
L_145211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_145212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145212
.p2align 0x4
.long 0x804
L_145212:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_145207:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x58(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je L_145209
L_145208:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145209:
	movb $0x0,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_145141
.p2align 0x4
.long 0x1F58
L_145191:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145192
L_145196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_145197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145197
.p2align 0x4
.long 0x804
L_145197:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_145192:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x58(%rbp),%r11
	cmpq %r11,%r14
	je L_145194
L_145193:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145194:
	movb $0x0,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_145141
.p2align 0x4
.long 0x1F5A
L_145174:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145175
L_145179:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_145180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145180
.p2align 0x4
.long 0x1F5B
L_145180:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_145175:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x68(%rbp),%r11
	cmpq %r11,%r14
	je L_145177
L_145176:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145177:
	movb $0x0,0x0(%r15)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_145172
.p2align 0x4
.long 0x1B7F
L_145425:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145426
L_145444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_145445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145445
.p2align 0x4
.long 0x61D
L_145445:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_145426:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_434192
L_145427:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
L_145428:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x3DB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_145429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_434192:
L_145433:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x349D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_145434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
.long 0x1F68
L_145383:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145384
L_145388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_145389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145389
.p2align 0x4
.long 0x804
L_145389:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_145384:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x38(%rbp),%r11
	cmpq %r11,%r14
	je L_145386
L_145385:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_145386:
	movb $0x0,0x0(%r15)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_145141
.p2align 0x4
.long 0x1F56
L_145284:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_145141
.p2align 0x4
.long 0x1F5E
L_145281:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_145282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_65
.p2align 0x4
.long 0x65E
L_145429:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145430
L_145441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_145442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145442
.p2align 0x4
.long 0x677
L_145442:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_145430:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_145433
L_145431:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_145428
.p2align 0x4
.long 0x636
L_145434:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145435
L_145439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_145440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145440
.p2align 0x4
.long 0x657
L_145440:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_145435:
	movq $0x33C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_145436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x136D
L_145282:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145283
L_145285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_145286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145286
.p2align 0x4
.long 0x80A
L_145286:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_145283:
	movq 0x48(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x3391,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_145284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x655
L_145436:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_145116
L_145437:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_145107
.text
.p2align 0x4
.globl new_31
.hidden new_31
new_31:
L_145464:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_145553
L_145465:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434218
L_145466:
	movq 0x8(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r15
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_434205
loop_1549:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_434204
L_145498:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	movq 0x10(%r13),%r9
	cmpq %r9,0x10(%r10)
	jne L_434203
L_145500:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq $0x0,%r14
	jna L_145502
L_145503:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r14
	jna L_434201
L_145505:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xC09,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x58(%rbp)
	addq $0x28,%r12
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	movq %r15,0x10(%r10)
	movq %r14,0x18(%r10)
	movq 0x10(%r13),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_145506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_434201:
L_145502:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434203:
L_145499:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434204:
L_145497:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434205:
L_145468:
	movq $0x280F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_434217
L_145470:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_434216
L_145471:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_145473:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_145474
L_145488:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCE1,%r13
	jne L_145474
L_145489:
	movq 0x18(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_434211
L_145474:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_434210
L_145476:
	cmpq $0x1,%r15
	je L_434206
L_145477:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_145473
.p2align 0x4
L_434206:
L_145478:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145479
L_145486:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_145487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145487
.p2align 0x4
.long 0x7C0
L_145487:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_145479:
	movl 0x28(%rbp),%ecx
L_145480:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_434208
L_145482:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_145484
L_145485:
	movl %ecx,0x0(%r15)
L_145484:
	movq $0x19C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434208:
L_145481:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434210:
L_145475:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434211:
L_145491:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_145481
L_145492:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_434212
L_145494:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434212:
L_145493:
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434216:
L_145495:
	xorl %ecx,%ecx
	jmp L_145480
.p2align 0x4
L_434217:
L_145469:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434218:
L_145553:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_145554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145554
.p2align 0x4
.long 0x45F
L_145554:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_145466
.p2align 0x4
.long 0xA46
L_145506:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145507
L_145551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_145552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145552
.p2align 0x4
.long 0x1F6C
L_145552:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_145507:
	movq 0x68(%rbp),%r15
	andq $0x1,%r15
	jnz L_434224
L_145508:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_434221
L_145509:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_434220
L_145512:
	movl %r13d,0x78(%rbp)
	movq $0x38D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_145513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_0
.p2align 0x4
L_434220:
L_145511:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434221:
L_145549:
	xorl %ecx,%ecx
L_145526:
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ecx,0x0(%r15)
	movl %ecx,0x30(%rbp)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_145527:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_434222
L_145528:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
L_145529:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x3DB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_145530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_434222:
L_145534:
	movq 0x48(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movl 0x30(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_145468
L_145535:
	movq 0x40(%rbp),%r15
	jmp loop_1549
.p2align 0x4
L_434224:
L_145550:
	movq 0x68(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x30(%rbp)
	jmp L_145527
.p2align 0x4
.long 0x1F6A
L_145513:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145514
L_145547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_145548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145548
.p2align 0x4
.long 0xBAA
L_145548:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_145514:
	movq 0x30(%rbp),%r14
	movq 0x38(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_145525
L_145515:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_145511
L_145517:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1550:
	cmpl %ecx,%ebx
	je L_434230
L_145518:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_145502
L_145520:
	movq 0x58(%rbp),%r13
	movl 0x0(%r13,%r14,4),%r11d
	testl %r11d,%r11d
	jnz L_434227
L_145521:
	incl %ebx
	jo L_145475
L_145522:
	jmp loop_1550
.p2align 0x4
L_434227:
L_145523:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145525
L_145540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_145541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145541
.p2align 0x4
.long 0x1F6B
L_145541:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_145525:
	movl $0x1,%ecx
	jmp L_145526
.p2align 0x4
L_434230:
L_145542:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145543
L_145544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_145545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145545
.p2align 0x4
.long 0x1F6B
L_145545:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_145543:
	xorl %ecx,%ecx
	jmp L_145526
.p2align 0x4
.long 0xDF2
L_145530:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145531
L_145537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_145538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145538
.p2align 0x4
.long 0x1B7A
L_145538:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_145531:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_145534
L_145532:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_145529
.text
.p2align 0x4
.globl loopExp_2
.hidden loopExp_2
loopExp_2:
L_145555:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_145556
L_145780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_145781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145781
.p2align 0x4
.long 0x45F
L_145781:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_145556:
	movq 0x8(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_434265
L_145557:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_145558:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434264
.p2align 0x4,,0x7
L_145559:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE99,%r14
	je L_434242
	cmpq $0xE9A,%r14
	je L_434241
	cmpq $0xE9B,%r14
	je L_434237
L_145560:
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_145561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_2
.p2align 0x4
L_434237:
L_145774:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_434238
L_145775:
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_145558
.p2align 0x4
L_434238:
L_145776:
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_145565:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434240
.p2align 0x4,,0x7
L_145566:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_434239
L_145567:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_145565
.p2align 0x4
L_434239:
L_145568:
	movq %r15,0x48(%rbp)
L_145569:
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_145570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1640
.p2align 0x4
L_434240:
L_145571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_145572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145572
.p2align 0x4
.long 0x12D1
L_145572:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_145566
.p2align 0x4
L_434241:
L_145658:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x9C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x34B1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x8(%r13)
	movq %r15,0x10(%r13)
	movq %r13,0x80(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_145659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
L_434242:
L_145575:
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_434243
	leaq jumpTable_309(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_309:
.quad L_434260,L_434259,L_434258,L_434257,L_434253,L_434252,L_434251,L_434250,L_434246,L_434245,L_434244
.text
.p2align 0x4
L_434243:
L_145576:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_145577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1640
.p2align 0x4
L_434244:
L_145655:
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_145656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1640
.p2align 0x4
L_434245:
L_145626:
	movq 0x70(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x80(%rbp)
	movq %r14,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_145627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1640
.p2align 0x4
L_434246:
L_145622:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_434249
L_145625:
	movq %r15,0x50(%rbp)
.p2align 0x4,,0x7
L_145578:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434248
.p2align 0x4,,0x7
L_145579:
	movq $0x1D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_434247
L_145580:
	movq %r14,0x58(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_145558
.p2align 0x4
L_434247:
L_145581:
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_145565
.p2align 0x4
L_434248:
L_145582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_145583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145583
.p2align 0x4
.long 0x9DD
L_145583:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_145579
.p2align 0x4
L_434249:
L_145623:
	movq %r14,0x80(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_145624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1640
.p2align 0x4
L_434250:
L_145621:
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_145578
.p2align 0x4
L_434251:
L_145612:
	movq 0x70(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_145613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_2
.p2align 0x4
L_434252:
L_145607:
	movq 0x70(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_145608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_2
.p2align 0x4
L_434253:
L_145599:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x80(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_434256
L_145601:
	cmpl $0x0,%r13d
	jl L_434255
L_145602:
	movl $0x0,0x84(%rbp)
.p2align 0x4,,0x7
loop_1552:
	movl 0x80(%rbp),%r15d
	cmpl %r15d,0x84(%rbp)
	jl L_434254
L_145603:
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_145578
.p2align 0x4
L_434254:
L_145604:
	movslq 0x84(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x90(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_145605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1640
.p2align 0x4
L_434255:
L_145593:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434256:
L_145586:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434257:
L_145598:
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_145578
.p2align 0x4
L_434258:
L_145596:
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_145597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1640
.p2align 0x4
L_434259:
L_145594:
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_145595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1640
.p2align 0x4
L_434260:
L_145584:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x80(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_145586
L_145587:
	cmpl $0x0,%r13d
	jl L_145593
L_145588:
	movl $0x0,0x84(%rbp)
.p2align 0x4,,0x7
loop_1551:
	movl 0x80(%rbp),%r15d
	cmpl %r15d,0x84(%rbp)
	jl L_434261
L_145589:
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_145578
.p2align 0x4
L_434261:
L_145590:
	movslq 0x84(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x90(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_145591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1640
.p2align 0x4
L_434264:
L_145777:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_145778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145778
.p2align 0x4
.long 0x9E0
L_145778:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_145559
.p2align 0x4
L_434265:
L_145779:
	movq $0x1,0x48(%rbp)
	jmp L_145569
.p2align 0x4
.long 0x1819
L_145561:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145562
L_145573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_145574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145574
.p2align 0x4
.long 0xC17
L_145574:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_145562:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D31,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r14)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_434267
L_145563:
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_145558
.p2align 0x4
L_434267:
L_145564:
	movq %r14,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_145565
.p2align 0x4
.long 0x77D
L_145570:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1819
L_145659:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145660
L_145772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_145773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145773
.p2align 0x4
.long 0x1F75
L_145773:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_145660:
	movq $0x34A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x20(%r15)
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_145661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
.long 0x1819
L_145577:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_145578
.p2align 0x4
.long 0x19EB
L_145656:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_145657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1640
.p2align 0x4
.long 0x19E7
L_145627:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145628
L_145653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_145654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145654
.p2align 0x4
.long 0xC16
L_145654:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_145628:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1235,%r14
	je L_434271
L_145644:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_145586
L_145646:
	movl %r13d,0x90(%rbp)
	movq $0x3857,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_145647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_33
.p2align 0x4
L_434271:
L_145629:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_145586
L_145631:
	movl %r13d,0x90(%rbp)
	movq $0x3931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_145632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_34
.p2align 0x4
.long 0x1819
L_145624:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_145578
.p2align 0x4
.long 0x1F6E
L_145613:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145614
L_145619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_145620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145620
.p2align 0x4
.long 0x803
L_145620:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_145614:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_145615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_2
.p2align 0x4
.long 0x1F6E
L_145608:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145609
L_145610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_145611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145611
.p2align 0x4
.long 0x803
L_145611:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_145609:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1D47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x18(%r13)
	movq %r14,0x20(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r13,0x50(%rbp)
	jmp L_145578
.p2align 0x4
.long 0x1F6D
L_145605:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	incl 0x84(%rbp)
	jmp loop_1552
.p2align 0x4
.long 0x1819
L_145597:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_145578
.p2align 0x4
.long 0x1819
L_145595:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_145578
.p2align 0x4
.long 0x1F6D
L_145591:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	incl 0x84(%rbp)
	jmp loop_1551
.p2align 0x4
.long 0x1F71
L_145661:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	addq $0x70,%rbp
	leaq (L_145662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp stronglyConnectedComponents_0
.p2align 0x4
.long 0x1819
L_145657:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_145578
.p2align 0x4
.long 0x1F6E
L_145647:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145648
L_145651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_145652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145652
.p2align 0x4
.long 0xC17
L_145652:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_145648:
	movq $0x246D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_434276
L_145649:
	movq %r15,0x70(%rbp)
	movq %r14,%r15
L_145635:
	movq %r15,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_145636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_2
.p2align 0x4
L_434276:
L_145650:
	movq $0x1,%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
L_145638:
	movq $0x1D4F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r13,0x50(%rbp)
	jmp L_145578
.p2align 0x4
.long 0x7FA
L_145632:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145633
L_145642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_145643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145643
.p2align 0x4
.long 0x803
L_145643:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_145633:
	movq $0x246B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_434278
L_145634:
	movq %r15,0x70(%rbp)
	movq %r14,%r15
	jmp L_145635
.p2align 0x4
L_434278:
L_145641:
	movq $0x1,%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
	jmp L_145638
.p2align 0x4
.long 0x1F6F
L_145615:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145616
L_145617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_145618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145618
.p2align 0x4
.long 0x1F70
L_145618:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_145616:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D49,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x50(%rbp)
	jmp L_145578
.p2align 0x4
.long 0x1F72
L_145662:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_434312
L_145663:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_145664:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_434311
L_145665:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_145666:
	incl %ecx
	jo L_145667
L_145668:
	cmpq $0x1,%r15
	je L_434281
L_145669:
	movq 0x8(%r15),%r15
	jmp L_145666
.p2align 0x4
L_434281:
L_145670:
L_145671:
	movslq %ecx,%r15
	movq %r15,0x78(%rbp)
	testq %r15,%r15
	jnz L_434308
L_145769:
	movq (globalObjptr+0x1CE8)(%rip),%r15
	movq %r15,0x80(%rbp)
.p2align 0x4,,0x7
L_145675:
	movq 0x68(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1553:
	cmpq 0x78(%rbp),%r15
	jnl L_434294
L_145713:
	cmpq $0x1,%r14
	je L_434293
L_145714:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r10
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r14
	incq %r14
	jo L_434292
L_145716:
	movq %r14,0x0(%r9)
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_434291
L_145717:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r14
.p2align 0x4,,0x7
L_145719:
	movq %r13,%r10
	andq $0x3,%r10
	jnz L_434290
L_145758:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0xCDA,%r10
	jne L_434289
L_145759:
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	cmpq %r9,0x28(%rbp)
	je L_434286
	movq %r15,(localWord64+0x0)(%rip)
	movq %r11,(localObjptr+0x8)(%rip)
L_145720:
	incl %ecx
	jo L_434285
L_145721:
	cmpq $0x1,%r14
	je L_434282
L_145722:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq (localWord64+0x0)(%rip),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_145719
.p2align 0x4
L_434282:
L_145723:
L_145724:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_434284
L_145726:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_145728
L_145757:
	movl %ecx,0x0(%r15)
L_145728:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_145729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_434284:
L_145725:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434285:
L_145667:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434286:
L_145761:
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_145725
L_145762:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_434287
L_145765:
	movl %ecx,0x0(%r14)
	xchgq %r10,%r15
	movq %r11,(localObjptr+0x8)(%rip)
	movq %r10,(localWord64+0x0)(%rip)
L_145764:
	movq 0x80(%rbp),%r13
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq (localWord64+0x0)(%rip),%r14
	movq %r15,0x0(%r13,%r14,8)
	movq (localObjptr+0x8)(%rip),%r13
	incq %r14
	movq %r14,%r15
	movq %r13,%r14
	jmp loop_1553
.p2align 0x4
L_434287:
L_145763:
	xchgq %r10,%r15
	movq %r11,(localObjptr+0x8)(%rip)
	movq %r10,(localWord64+0x0)(%rip)
	jmp L_145764
.p2align 0x4
L_434289:
	movq %r15,(localWord64+0x0)(%rip)
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_145720
.p2align 0x4
L_434290:
	movq %r15,(localWord64+0x0)(%rip)
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_145720
.p2align 0x4
L_434291:
L_145766:
	xorl %ecx,%ecx
	jmp L_145724
.p2align 0x4
L_434292:
L_145715:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434293:
L_145767:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434294:
L_145676:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434307
.p2align 0x4,,0x7
L_145677:
	movq 0x80(%rbp),%r15
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1D35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_434295
L_145678:
	movq %r15,0x70(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_145664
.p2align 0x4
L_434295:
L_145679:
	movq %r14,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_145680:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434306
.p2align 0x4,,0x7
L_145681:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_434296
L_145682:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_145680
.p2align 0x4
L_434296:
L_145684:
	cmpq $0x1,0x58(%rbp)
	je L_434304
L_145685:
	cmpq $0x1,%r15
	je L_434303
L_145686:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_145687:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434302
.p2align 0x4,,0x7
L_145688:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_434297
L_145689:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_145687
.p2align 0x4
L_434297:
L_145690:
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x60(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
.p2align 0x4,,0x7
L_145691:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434301
.p2align 0x4,,0x7
L_145692:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_434298
L_145693:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_145691
.p2align 0x4
L_434298:
L_145695:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_434299
L_145696:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_145558
.p2align 0x4
L_434299:
L_145698:
	cmpq $0x1,%r15
	je L_434300
L_145699:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_145565
.p2align 0x4
L_434300:
L_145700:
	movq $0x1,0x48(%rbp)
	jmp L_145569
.p2align 0x4
L_434301:
L_145701:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_145702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145702
.p2align 0x4
.long 0x900
L_145702:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_145692
.p2align 0x4
L_434302:
L_145703:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_145704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145704
.p2align 0x4
.long 0x9DD
L_145704:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_145688
.p2align 0x4
L_434303:
L_145705:
	movq 0x58(%rbp),%r15
	jmp L_145695
.p2align 0x4
L_434304:
L_145706:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_145698
L_145707:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_145558
.p2align 0x4
L_434306:
L_145709:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_145710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145710
.p2align 0x4
.long 0x9DD
L_145710:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_145681
.p2align 0x4
L_434307:
L_145711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_145712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145712
.p2align 0x4
.long 0x1F74
L_145712:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_145677
.p2align 0x4
L_434308:
L_145672:
	movq 0x78(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_434309
L_145673:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_145674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145674
.p2align 0x4
.long 0x1F73
L_145674:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,0x80(%rbp)
	jmp L_145675
.p2align 0x4
L_434309:
L_145768:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434311:
L_145770:
	xorl %ecx,%ecx
	jmp L_145671
.p2align 0x4
L_434312:
L_145771:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_145684
.p2align 0x4
.long 0x19EB
L_145636:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145637
L_145639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_145640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145640
.p2align 0x4
.long 0x803
L_145640:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_145637:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x80(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x70(%rbp),%r14
	jmp L_145638
.p2align 0x4
.long 0x1
L_145729:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_145730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_145730:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF4E0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_145731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_145731:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_145732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_145732:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145733
L_145755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_145756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145756
.p2align 0x4
.long 0x4AE
L_145756:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_145733:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_145734:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_145667
L_145735:
	cmpq $0x1,%r14
	je L_434314
L_145736:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_145734
.p2align 0x4
L_434314:
L_145737:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145738
L_145753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_145754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145754
.p2align 0x4
.long 0x4E6
L_145754:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_145738:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_434315
L_145739:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_237:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_434315:
L_145752:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_237
.p2align 0x4
.long 0x1
rev_235:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_434321
L_145740:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_145741:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434320
.p2align 0x4,,0x7
L_145742:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_434319
L_145743:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_145741
.p2align 0x4
L_434319:
L_145745:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_434320:
L_145749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_145750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145750
.p2align 0x4
.long 0x45B
L_145750:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_145742
.p2align 0x4
L_434321:
L_145751:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_145745
.p2align 0x4
.long 0x1
bug_448:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145746
L_145747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_145748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145748
.p2align 0x4
.long 0x451
L_145748:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_145746:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1640
.hidden x_1640
x_1640:
L_145782:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_145783
L_145813:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_145814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145814
.p2align 0x4
.long 0x45F
L_145814:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_145783:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq 0x10(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_434335
L_145785:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_434334
L_145786:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x10(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_145788:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_145789
L_145799:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCD9,%r13
	jne L_145789
L_145800:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x8(%rbp)
	je L_434327
L_145789:
	movl 0x10(%rbp),%r13d
	incl %r13d
	jo L_434326
L_145791:
	cmpq $0x1,%r15
	je L_434323
L_145792:
	movl %r13d,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_145788
.p2align 0x4
L_434323:
	movl %r13d,%ecx
L_145794:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_434325
L_145796:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_434324
L_145798:
	movl %ecx,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434324:
L_145797:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434325:
L_145795:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434326:
L_145790:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434327:
L_145802:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145803
L_145810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_145811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145811
.p2align 0x4
.long 0x27
L_145811:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_145803:
	movl 0x10(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_145795
L_145804:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_434329
L_145805:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r15
L_145806:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_434328
L_145807:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0x0(%r15),%r14
	movq $0x13,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x114D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r15,0x10(%r9)
	addq $0x20,%r12
	movq 0x0(%r14),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r14)
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq $0x1,0x0(%r11)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434328:
L_145808:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434329:
L_145809:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x10(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_145806
.p2align 0x4
L_434334:
L_145812:
	xorl %ecx,%ecx
	jmp L_145794
.p2align 0x4
L_434335:
L_145784:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl tabulate_34
.hidden tabulate_34
tabulate_34:
L_145815:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_145882
L_145816:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434356
L_145817:
	movslq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	testq %r15,%r15
	jz L_434355
L_145818:
	cmpq $0x7FFFFFFF,%r15
	ja L_434354
L_145819:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145820
L_145878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_145879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145879
.p2align 0x4
.long 0x452
L_145879:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_145820:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1465,%rcx
	movq 0x10(%rbp),%rdx
	movq $0x50,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_145821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145821
.p2align 0x4
.long 0x452
L_145821:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_145822:
	movq $0x0,0x18(%rbp)
loop_1554:
	movq 0x10(%rbp),%r15
	cmpq %r15,0x18(%rbp)
	jl L_434337
L_145823:
	movq 0x8(%rbp),%r15
	movq $0x98B,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434337:
L_145824:
	movq 0x18(%rbp),%r15
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1C94,%r13
	je L_434352
	cmpq $0x1C95,%r13
	je L_434351
	cmpq $0x1C96,%r13
	je L_434350
	cmpq $0x1C97,%r13
	je L_434341
	cmpq $0x1C98,%r13
	je L_434340
	cmpq $0x1C99,%r13
	je L_434339
	cmpq $0x1C9A,%r13
	je L_434338
L_145825:
	movq 0x0(%r15),%r13
	movslq %r14d,%r11
	movq %r11,%r14
	salq $0x4,%r14
	movq 0x8(%r15),%r10
	movq 0x0(%r10,%r14,1),%r9
	movq %r9,0x30(%rbp)
	salq $0x4,%r11
	movq 0x8(%r10,%r11,1),%r14
	movq %r14,0x20(%rbp)
	movq 0x68(%r13),%r15
	movq $0x3D3D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	addq $0x30,%rbp
	leaq (L_145826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_434338:
L_145873:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x30(%rbp)
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_145874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
L_434339:
L_145868:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x30(%rbp)
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_145869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3864
.p2align 0x4
L_434340:
L_145863:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x30(%rbp)
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_145864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_2
.p2align 0x4
L_434341:
L_145846:
	movq 0x0(%r15),%r13
	movslq %r14d,%r11
	movq %r11,%r14
	salq $0x4,%r14
	movq 0x8(%r15),%r10
	movq 0x0(%r10,%r14,1),%r9
	salq $0x4,%r11
	movq 0x8(%r10,%r11,1),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0x2110,%r15
	je L_434349
	cmpq $0x2111,%r15
	je L_434348
	cmpq $0x2112,%r15
	je L_434347
	cmpq $0x2113,%r15
	je L_434345
	cmpq $0x2114,%r15
	je L_434344
	cmpq $0x2115,%r15
	je L_434343
L_145847:
	movq 0x10(%r9),%r15
	movq 0x8(%r9),%r14
	movq 0x0(%r9),%r11
	movq $0x2FA9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	addq $0x10,%r12
	movq $0x2F45,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r15
	jne L_434342
L_145850:
	movq $0xEDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x40(%rbp)
	movq $0x1,0x30(%rbp)
	movl $0x0,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_145851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3865
.p2align 0x4
L_434342:
L_145849:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434343:
L_145862:
	movq 0x20(%r9),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%r9),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%r9),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r9),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x58(%rbp)
	movq $0x2FA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	addq $0x30,%rbp
	leaq (L_145851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1642
.p2align 0x4
L_434344:
L_145861:
	movq 0x28(%r9),%r15
	movq 0x20(%r9),%r14
	movq 0x18(%r9),%r11
	movq 0x10(%r9),%r10
	movq 0x8(%r9),%r8
	movq 0x0(%r9),%rsp
	movq $0x6EB,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r14,0x8(%r9)
	movq %r11,0x10(%r9)
	movq %r10,0x18(%r9)
	movq %r8,0x20(%r9)
	movq %rsp,0x28(%r9)
	movq %r9,0x38(%rbp)
	addq $0x38,%r12
	movq $0x2FAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	addq $0x30,%rbp
	leaq (L_145851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1643
.p2align 0x4
L_434345:
L_145858:
	movq 0x10(%r9),%r15
	movq 0x8(%r9),%r14
	movq 0x0(%r9),%r11
	movq $0x2F4B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r9
	cmpq %r9,%r15
	jne L_145849
L_145860:
	movq $0xEDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r10,0x18(%r15)
	addq $0x28,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x40(%rbp)
	movq $0x1,0x30(%rbp)
	movl $0x0,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_145851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3865
.p2align 0x4
L_434347:
L_145857:
	movq %r13,0x30(%rbp)
	movq 0x18(%r9),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%r9),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r9),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x50(%rbp)
	addq $0x30,%rbp
	leaq (L_145851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1644
.p2align 0x4
L_434348:
L_145856:
	movq %r13,0x30(%rbp)
	movq 0x8(%r9),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_145851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1645
.p2align 0x4
L_434349:
L_145855:
	movq 0x20(%r9),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%r9),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%r9),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r9),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x58(%rbp)
	movq $0x2FA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	addq $0x30,%rbp
	leaq (L_145851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1646
.p2align 0x4
L_434350:
L_145841:
	movq 0x0(%r15),%r13
	movslq %r14d,%r11
	movq %r11,%r14
	salq $0x4,%r14
	movq 0x8(%r15),%r10
	movq 0x0(%r10,%r14,1),%r9
	movq %r9,0x30(%rbp)
	salq $0x4,%r11
	movq 0x8(%r10,%r11,1),%r14
	movq %r14,0x20(%rbp)
	movq 0x70(%r13),%r15
	movq $0x3D3F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	addq $0x30,%rbp
	leaq (L_145842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_434351:
L_145836:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x30(%rbp)
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_145837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fixExp_0
.p2align 0x4
L_434352:
L_145831:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x30(%rbp)
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_145832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3866
.p2align 0x4
L_434354:
L_145880:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434355:
L_145881:
	movq (globalObjptr+0xBD0)(%rip),%r14
	movq %r14,0x8(%rbp)
	jmp L_145822
.p2align 0x4
L_434356:
L_145882:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_145883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145883
.p2align 0x4
.long 0x457
L_145883:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_145817
.p2align 0x4
.long 0x456
L_145826:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145827
L_145829:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_145830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145830
.p2align 0x4
.long 0x575
L_145830:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_145827:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r14
L_145828:
	movq 0x8(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x18(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r15,0x0(%r13,%r9,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	salq $0x4,%r15
	movq %r14,0x8(%r13,%r15,1)
	incq %r11
	movq %r11,0x18(%rbp)
	jmp loop_1554
.p2align 0x4
.long 0x456
L_145874:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145875
L_145876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_145877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145877
.p2align 0x4
.long 0x575
L_145877:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_145875:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r14
	jmp L_145828
.p2align 0x4
.long 0x456
L_145869:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145870
L_145871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_145872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145872
.p2align 0x4
.long 0x575
L_145872:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_145870:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r14
	jmp L_145828
.p2align 0x4
.long 0x456
L_145864:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145865
L_145866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_145867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145867
.p2align 0x4
.long 0x575
L_145867:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_145865:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r14
	jmp L_145828
.p2align 0x4
.long 0x456
L_145851:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145852
L_145853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_145854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145854
.p2align 0x4
.long 0x575
L_145854:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_145852:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r14
	jmp L_145828
.p2align 0x4
.long 0x456
L_145842:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145843
L_145844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_145845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145845
.p2align 0x4
.long 0x575
L_145845:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_145843:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r14
	jmp L_145828
.p2align 0x4
.long 0x456
L_145837:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145838
L_145839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_145840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145840
.p2align 0x4
.long 0x575
L_145840:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_145838:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r14
	jmp L_145828
.p2align 0x4
.long 0x456
L_145832:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145833
L_145834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_145835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145835
.p2align 0x4
.long 0x575
L_145835:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_145833:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r14
	jmp L_145828
.text
.p2align 0x4
.globl x_1641
.hidden x_1641
x_1641:
L_145884:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_145885
L_146520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_146521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146521
.p2align 0x4
.long 0x45F
L_146521:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_145885:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1E9E,%r14
	je L_434366
L_146513:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_146514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_434366:
L_145886:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_434407
L_145887:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_145888:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434406
.p2align 0x4,,0x7
L_145889:
	movq 0x10(%rbp),%r15
	movq 0xC0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xB8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0xB0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0xA0(%r15),%r14
	movq 0x98(%r15),%r13
	movq 0x90(%r15),%r11
	movq %r11,0x60(%rbp)
	movl 0x4(%r15),%r11d
	movl %r11d,0x68(%rbp)
	movq 0x88(%r15),%r11
	movq %r11,0x70(%rbp)
	movq 0x80(%r15),%r11
	movq %r11,0x78(%rbp)
	movl 0x0(%r15),%r11d
	movq 0x58(%r15),%r10
	movq 0x48(%r15),%r9
	movq %r9,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r9
	shrq $0x1,%r9
	cmpq $0xE99,%r9
	je L_434405
	cmpq $0xE9A,%r9
	je L_434401
	cmpq $0xE9B,%r9
	je L_434385
L_145890:
	movq 0x18(%r15),%r9
	movq %r9,0x40(%rbp)
	movq 0x10(%r15),%r9
	movq %r9,0x48(%rbp)
	movq 0x8(%r15),%r9
	movq %r9,0x50(%rbp)
	movq 0x0(%r15),%r9
	movq %r9,0x58(%rbp)
	movl %r11d,%r15d
	decl %r15d
	movl %r15d,0x6C(%rbp)
	movslq %r11d,%rdx
	movq %rdx,0x88(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_434384
L_145891:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_145892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	movq %r10,%rbx
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145892
.p2align 0x4
.long 0x1F76
L_145892:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x30(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1555:
	cmpq 0x88(%rbp),%r15
	jnl L_434367
L_146450:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1555
.p2align 0x4
L_434367:
L_145893:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145894
L_146448:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_146449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146449
.p2align 0x4
.long 0xF47
L_146449:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_145894:
	movq $0x91,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl 0x6C(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x5327,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x90(%rbp)
	movq %r15,0x8(%r11)
	movq %r14,0x20(%r11)
	addq $0x48,%r12
	movl 0x68(%rbp),%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x40(%rbp),%r10
	movq %r10,0x10(%r11)
	movq 0x60(%rbp),%r9
	movq %r9,0x18(%r11)
	movq %r13,0x28(%r11)
	movq 0x70(%rbp),%r13
	movq %r13,0x30(%r11)
	movq 0x48(%rbp),%r13
	movq %r13,0x38(%r11)
	movq 0x78(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x98(%rbp)
	movq 0x8(%r13),%r14
	movq 0x10(%r10),%r13
	movq %r13,0xA0(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_434382
L_145896:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_434381
L_145897:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	movq %r15,0x30(%rbp)
	movl $0x0,0x60(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_145899:
	movq 0x30(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_434380
L_146436:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD8D,%r11
	jne L_434379
L_146437:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_434375
L_145900:
	movl 0x60(%rbp),%r13d
	incl %r13d
	movl %r13d,0x30(%rbp)
	jo L_434374
L_145902:
	cmpq $0x1,%r15
	je L_434368
L_145903:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x60(%rbp)
	movq %r14,0x30(%rbp)
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_145899
.p2align 0x4
L_434368:
L_145904:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145905
L_146434:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_146435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146435
.p2align 0x4
.long 0x1FA9
L_146435:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_145905:
	movl 0x30(%rbp),%ecx
L_145906:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_434372
L_145908:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_145910
L_146433:
	movl %ecx,0x0(%r15)
L_145910:
	movq $0x1B1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_145911:
	movq $0x4391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x50,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x40(%r15)
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_145912:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434370
.p2align 0x4,,0x7
L_145913:
	movq $0x247B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_434369
L_145914:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_145888
.p2align 0x4
L_434369:
L_145915:
	movq %r15,0x28(%rbp)
L_145916:
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_145917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1647
.p2align 0x4
L_434370:
L_146431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_146432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146432
.p2align 0x4
.long 0x4B0
L_146432:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_145913
.p2align 0x4
L_434372:
L_145907:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434374:
L_145901:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434375:
L_146439:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146440
L_146445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_146446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146446
.p2align 0x4
.long 0x1FAA
L_146446:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_146440:
	movl 0x60(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_145907
L_146441:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_434376
L_146442:
	movq 0x30(%rbp),%r15
L_146443:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_145911
.p2align 0x4
L_434376:
L_146444:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x60(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r15
	jmp L_146443
.p2align 0x4
L_434379:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_145900
.p2align 0x4
L_434380:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_145900
.p2align 0x4
L_434381:
L_146447:
	xorl %ecx,%ecx
	jmp L_145906
.p2align 0x4
L_434382:
L_145895:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434384:
L_146092:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434385:
L_146470:
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x60(%rbp)
	movq 0x10(%r11),%r15
	movq %r15,0x68(%rbp)
	cmpq 0x10(%r13),%r15
	jne L_434400
L_146509:
	movq %r11,0x30(%rbp)
.p2align 0x4,,0x7
L_146474:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434399
.p2align 0x4,,0x7
L_146475:
	movq (globalObjptr+0x1068)(%rip),%r14
	movq 0x0(%r14),%r15
	incq %r15
	jo L_145895
L_146476:
	movq %r15,0x0(%r14)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_434397
L_146477:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_146479:
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_146480
L_146493:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD8E,%r13
	jne L_146480
L_146494:
	movq 0x0(%r14),%r13
	cmpq %r13,0x58(%rbp)
	je L_434391
L_146480:
	movl 0x78(%rbp),%r14d
	incl %r14d
	movl %r14d,0x70(%rbp)
	jo L_145901
L_146481:
	cmpq $0x1,%r15
	je L_434386
L_146482:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r14d,0x78(%rbp)
	movq %r13,0x70(%rbp)
	jmp L_146479
.p2align 0x4
L_434386:
L_146483:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434389
.p2align 0x4,,0x7
L_146484:
	movl 0x70(%rbp),%ecx
L_146485:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_145907
L_146486:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_146488
L_146490:
	movl %ecx,0x0(%r15)
L_146488:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x532B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B1D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r15
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
L_146489:
	movq $0x4397,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	jmp L_145912
.p2align 0x4
L_434389:
L_146491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_146492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146492
.p2align 0x4
.long 0x1FAF
L_146492:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_146484
.p2align 0x4
L_434391:
L_146496:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434394
.p2align 0x4,,0x7
L_146497:
	movl 0x78(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_145907
L_146498:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_434392
L_146499:
	movq 0x70(%rbp),%r15
L_146500:
	movq $0x532B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x8(%r15)
	jmp L_146489
.p2align 0x4
L_434392:
L_146501:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x78(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x70(%rbp),%r15
	jmp L_146500
.p2align 0x4
L_434394:
L_146502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_146503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146503
.p2align 0x4
.long 0x1FB0
L_146503:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_146497
.p2align 0x4
L_434397:
L_146504:
	xorl %ecx,%ecx
	jmp L_146485
.p2align 0x4
L_434399:
L_146505:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_146506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146506
.p2align 0x4
.long 0xA59
L_146506:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_146475
.p2align 0x4
L_434400:
L_146471:
	movq %r14,0x78(%rbp)
	movq 0x18(%r11),%r15
	movq %r15,0x30(%rbp)
	addq $0x78,%rbp
	leaq (L_146472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_434401:
L_146457:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movl %r11d,%r15d
	decl %r15d
	movl %r15d,0x50(%rbp)
	movslq %r11d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_146092
L_146458:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x93,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_146459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146459
.p2align 0x4
.long 0x1FAB
L_146459:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x30(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1560:
	cmpq 0x58(%rbp),%r15
	jnl L_434402
L_146468:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1560
.p2align 0x4
L_434402:
L_146460:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146461
L_146466:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_146467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146467
.p2align 0x4
.long 0x1FAE
L_146467:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_146461:
	movq $0x95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl 0x50(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x3499,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x28(%r11)
	movq %r14,0x40(%r11)
	addq $0x50,%r12
	movl 0x68(%rbp),%r14d
	movl %r14d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r11)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r11)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r11)
	movq %r15,0x20(%r11)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%r11)
	movq 0x60(%rbp),%r14
	movq %r14,0x38(%r11)
	movq %r11,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_146462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
L_434405:
L_146452:
	movq %r10,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movq $0x1107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	addq $0x50,%rbp
	leaq (L_146453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1648
.p2align 0x4
L_434406:
L_146510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_146511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146511
.p2align 0x4
.long 0x4B0
L_146511:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_145889
.p2align 0x4
L_434407:
L_146512:
	movq $0x1,0x28(%rbp)
	jmp L_145916
.p2align 0x4
.long 0x490
L_146514:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_146515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
.long 0x51A
L_145917:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_434494
L_145918:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_145919:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434493
.p2align 0x4,,0x7
L_145920:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x21C9,%r14
	je L_434461
	cmpq $0x21CA,%r14
	je L_434441
	cmpq $0x21CB,%r14
	je L_434437
L_145921:
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x40(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x98(%rbp)
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_434436
L_145924:
	cmpl $0x0,%r14d
	jl L_434435
L_145925:
	movq $0x1,0x40(%rbp)
	movl $0x0,0x9C(%rbp)
.p2align 0x4,,0x7
loop_1556:
	movl 0x9C(%rbp),%r14d
	cmpl 0x98(%rbp),%r14d
	jnl L_434412
L_146022:
	movslq %r14d,%r15
	movq 0x90(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	jne L_434409
L_146031:
	movq 0x40(%rbp),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_146028:
	movq %r15,0x40(%rbp)
	incl 0x9C(%rbp)
	jmp loop_1556
.p2align 0x4
L_434409:
L_146023:
	movq 0x0(%r13),%r15
	movq %r15,0xA0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
L_146024:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434411
.p2align 0x4,,0x7
L_146025:
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq $0x11DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x2479,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_434410
L_146026:
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_146024
.p2align 0x4
L_434410:
L_146027:
	xchgq %r14,%r15
	jmp L_146028
.p2align 0x4
L_434411:
L_146029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_146030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146030
.p2align 0x4
.long 0x1F82
L_146030:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_146025
.p2align 0x4
L_434412:
L_145926:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434434
.p2align 0x4,,0x7
L_145927:
	cmpq $0x1,0x40(%rbp)
	jne L_434421
L_146019:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_145969:
	cmpq $0x1,0x48(%rbp)
	je L_434419
L_145971:
	cmpq $0x1,%r15
	je L_434418
L_145972:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
L_145973:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434417
.p2align 0x4,,0x7
L_145974:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_434413
L_145975:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_145973
.p2align 0x4
L_434413:
L_145976:
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
L_145977:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434416
.p2align 0x4,,0x7
L_145978:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_434414
L_145979:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_145977
.p2align 0x4
L_434414:
L_145981:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_434415
L_145982:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_145919
.p2align 0x4
L_434415:
L_145983:
	movq %r15,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434416:
L_145984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_145985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145985
.p2align 0x4
.long 0x12D2
L_145985:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_145978
.p2align 0x4
L_434417:
L_145986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_145987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145987
.p2align 0x4
.long 0x128E
L_145987:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_145974
.p2align 0x4
L_434418:
L_145988:
	movq 0x48(%rbp),%r15
	jmp L_145981
.p2align 0x4
L_434419:
L_145990:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_434420
L_145991:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_145919
.p2align 0x4
L_434420:
L_145992:
	movq %r15,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434421:
L_145928:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,0x90(%rbp)
L_145929:
	movq 0x0(%r15),%r11
	movq %r11,0x98(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0xA0(%rbp)
	movq $0x531F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0xA8(%rbp)
	addq $0x10,%r12
	movq %r11,0x0(%r10)
	movq 0x58(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0xB0(%rbp)
	movq 0x8(%r11),%r14
	movq 0x50(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0xB8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_145895
L_145930:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_434432
L_145931:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_145933:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_434431
L_146010:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD8D,%r11
	jne L_434430
L_146011:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_434427
L_145934:
	incl %ecx
	movl %ecx,0xC0(%rbp)
	jo L_145901
L_145935:
	cmpq $0x1,%r15
	je L_434422
L_145936:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_145933
.p2align 0x4
L_434422:
L_145937:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145938
L_146008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_146009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146009
.p2align 0x4
.long 0x1F80
L_146009:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_145938:
	movl 0xC0(%rbp),%ecx
L_145939:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_145907
L_145940:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_145942
L_146007:
	movl %ecx,0x0(%r15)
L_145942:
	movq $0x1B1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_145943:
	movq 0xA0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_145944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1650
.p2align 0x4
L_434427:
L_146013:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_145907
L_146014:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_434428
L_146017:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_146016:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_145943
.p2align 0x4
L_434428:
L_146015:
	movq %r13,%r15
	jmp L_146016
.p2align 0x4
L_434430:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_145934
.p2align 0x4
L_434431:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_145934
.p2align 0x4
L_434432:
L_146018:
	xorl %ecx,%ecx
	jmp L_145939
.p2align 0x4
L_434434:
L_146020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_146021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146021
.p2align 0x4
.long 0x1F81
L_146021:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_145927
.p2align 0x4
L_434435:
L_146033:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434436:
L_145923:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434437:
L_146405:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x50(%rbp)
	cmpq $0x1,%r13
	jne L_434440
L_146427:
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_146416:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434439
.p2align 0x4,,0x7
L_146417:
	movq $0x1D37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	cmpq $0x1,0x48(%rbp)
	je L_434438
L_146418:
	movq %r15,0x50(%rbp)
	movq $0x1,0x40(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_145973
.p2align 0x4
L_434438:
L_146419:
	movq %r14,%r15
	jmp L_145990
.p2align 0x4
L_434439:
L_146420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_146421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146421
.p2align 0x4
.long 0x12D2
L_146421:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_146417
.p2align 0x4
L_434440:
L_146406:
	movq %r13,0x68(%rbp)
	movq 0x8(%r14),%r15
	movq 0x40(%r15),%r13
	movq 0x38(%r15),%r11
	movq 0x30(%r15),%r10
	movq 0x28(%r15),%r9
	movq 0x20(%r15),%r8
	movq 0x18(%r15),%rsp
	movq 0x10(%r15),%rsi
	movq 0x8(%r15),%rdi
	movq 0x0(%r15),%rdx
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x965,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rdx,0x8(%rcx)
	movq %rdi,0x10(%rcx)
	movq %rsi,0x18(%rcx)
	movq %rsp,0x20(%rcx)
	movq %r8,0x28(%rcx)
	movq %r9,0x30(%rcx)
	movq %r10,0x38(%rcx)
	movq %r11,0x40(%rcx)
	movq %r13,0x48(%rcx)
	addq $0x68,%r12
	movq %r14,0x0(%rcx)
	movq %r15,0x50(%rcx)
	movq %r14,0x58(%rcx)
	movq %rcx,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_146407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_109
.p2align 0x4
L_434441:
L_146135:
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x60(%rbp)
	movq 0x68(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%r14),%r15
	movq 0x58(%r14),%r11
	movq %r11,0x70(%rbp)
	movq 0x50(%r14),%r11
	movq 0x48(%r14),%r10
	movq %r10,0x78(%rbp)
	movq 0x40(%r14),%r10
	movq %r10,0x80(%rbp)
	movq 0x10(%r14),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_434442
	leaq jumpTable_310(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_310:
.quad L_434459,L_434458,L_434457,L_434456,L_434454,L_434453,L_434452,L_434449,L_434448,L_434444,L_434443
.text
.p2align 0x4
L_434442:
L_146136:
	movq 0x0(%r13),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_146137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1647
.p2align 0x4
L_434443:
L_146399:
	movq 0x8(%r13),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_146400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1647
.p2align 0x4
L_434444:
L_146372:
	movq 0x10(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1235,%r14
	je L_434446
L_146392:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_145923
L_146394:
	movl %r13d,0x88(%rbp)
	movq $0x384D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_146395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_33
.p2align 0x4
L_434446:
L_146373:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_145923
L_146375:
	movl %r13d,0x90(%rbp)
	movq $0x3927,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_146376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_34
.p2align 0x4
L_434448:
L_146359:
	movq %r15,0x88(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x78(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x80(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	addq $0x78,%rbp
	leaq (L_146360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1651
.p2align 0x4
L_434449:
L_146358:
	movq 0x0(%r13),%r15
	movq $0x1D4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x10,%r12
.p2align 0x4,,0x7
L_146139:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434451
.p2align 0x4,,0x7
L_146140:
	movq $0x1D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	cmpq $0x1,0x48(%rbp)
	je L_434450
L_146141:
	movq %r15,0x50(%rbp)
	movq $0x1,0x40(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_145973
.p2align 0x4
L_434450:
L_146142:
	movq %r14,%r15
	jmp L_145990
.p2align 0x4
L_434451:
L_146143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_146144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146144
.p2align 0x4
.long 0x1EE7
L_146144:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_146140
.p2align 0x4
L_434452:
L_146345:
	movq 0x10(%r13),%r15
	movq %r15,0x90(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x78(%rbp)
	movq $0x3D3D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_146346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_434453:
L_146336:
	movq 0x18(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq $0x1107,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_146337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1648
.p2align 0x4
L_434454:
L_146165:
	movq 0x10(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r14,%r10
	jne L_145923
L_146167:
	movl %r13d,0x98(%rbp)
	movq $0x3A09,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x90(%rbp)
	addq $0x18,%r12
	addq $0x90,%rbp
	leaq (L_146168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_35
.p2align 0x4
L_434456:
L_146164:
	movq 0x0(%r13),%r15
	movq $0x1D43,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x10,%r12
	jmp L_146139
.p2align 0x4
L_434457:
L_146159:
	movl 0x0(%r13),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_146160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1647
.p2align 0x4
L_434458:
L_146154:
	movq 0x8(%r13),%r15
	movq %r15,0x70(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_146155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1647
.p2align 0x4
L_434459:
L_146147:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r10,%r14
	jne L_145923
L_146149:
	movl %r13d,0x78(%rbp)
	movq $0x3A09,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	addq $0x70,%rbp
	leaq (L_146150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_35
.p2align 0x4
L_434461:
L_146034:
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x30(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movl %r11d,0x88(%rbp)
	movslq %r11d,%r15
	cmpq %r15,%r14
	jne L_145923
L_146036:
	cmpl $0x0,%r11d
	jl L_146033
L_146037:
	movq $0x1,%r15
	movl $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_1557:
	movl 0x40(%rbp),%r14d
	cmpl 0x88(%rbp),%r14d
	jnl L_434465
L_146124:
	movslq %r14d,%r13
	movq 0x80(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	cmpq $0x1,%r11
	jne L_434462
	movq %r15,(localObjptr+0x0)(%rip)
.p2align 0x4,,0x7
L_146130:
	incl 0x40(%rbp)
	movq (localObjptr+0x0)(%rip),%r15
	jmp loop_1557
.p2align 0x4
L_434462:
L_146125:
	movq %r15,0xA0(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x98(%rbp)
L_146126:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434464
.p2align 0x4,,0x7
L_146127:
	movq 0x98(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq $0x11DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x2477,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_434463
L_146128:
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_146126
.p2align 0x4
L_434463:
L_146129:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_146130
.p2align 0x4
L_434464:
L_146131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_146132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146132
.p2align 0x4
.long 0x1F8F
L_146132:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_146127
.p2align 0x4
L_434465:
L_146038:
	cmpq $0x1,%r15
	je L_434490
L_146039:
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0x80(%rbp)
L_146040:
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movl %r11d,0x98(%rbp)
	movslq %r11d,%r10
	movq %r10,0xA0(%rbp)
	cmpq %r10,%r13
	jne L_145923
L_146042:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r10
	cmpq %r10,%r15
	jne L_145923
L_146044:
	cmpl %r11d,%r13d
	jne L_146046
L_146047:
	cmpl $0x0,%r11d
	jl L_434486
L_146048:
	movl $0x0,0x9C(%rbp)
loop_1558:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434485
.p2align 0x4,,0x7
L_146049:
	movl 0x98(%rbp),%r15d
	cmpl %r15d,0x9C(%rbp)
	jl L_434472
L_146050:
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xA0(%rbp),%r15
	testq %r15,%r15
	jnz L_434470
L_146093:
	movq (globalObjptr+0x7030)(%rip),%r15
	movq %r15,0x98(%rbp)
.p2align 0x4,,0x7
L_146054:
	movq $0x0,0xA8(%rbp)
.p2align 0x4,,0x7
loop_1559:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434469
.p2align 0x4,,0x7
L_146055:
	movq 0xA0(%rbp),%r14
	cmpq %r14,0xA8(%rbp)
	jl L_434468
L_146056:
	movq 0x98(%rbp),%r14
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1D35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_434466
L_146057:
	movq %r14,0x80(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x40(%rbp)
	jmp L_146040
.p2align 0x4
L_434466:
L_146058:
	movq %r14,%r15
L_146059:
	cmpq $0x1,0x48(%rbp)
	je L_145990
	jmp L_145971
.p2align 0x4
L_434468:
L_146062:
	movq 0xA8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xB0(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xB8(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0xC0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_146063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1650
.p2align 0x4
L_434469:
L_146089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_146090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146090
.p2align 0x4
.long 0x1F8D
L_146090:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_146055
.p2align 0x4
L_434470:
L_146051:
	movq 0xA0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_146092
L_146052:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_146053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146053
.p2align 0x4
.long 0x1F83
L_146053:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0x98(%rbp)
	jmp L_146054
.p2align 0x4
L_434472:
L_146094:
	movl 0x9C(%rbp),%r11d
	movl %r11d,%r10d
	incl %r10d
	movl %r10d,0xA8(%rbp)
	movslq %r11d,%r15
	movq 0x88(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r14
	movq 0x50(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq 0x0(%r10),%r13
	movq $0x5321,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xB0(%rbp)
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq 0x58(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0xB8(%rbp)
	movq 0x8(%r11),%r14
	movq 0x10(%r13),%r11
	movq %r11,0xC0(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_145895
L_146095:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_434483
L_146096:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_146098:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_434482
L_146111:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD8D,%r11
	jne L_434481
L_146112:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x18)(%rip)
	je L_434478
L_146099:
	incl %ecx
	movl %ecx,0x9C(%rbp)
	jo L_145901
L_146100:
	cmpq $0x1,%r15
	je L_434473
L_146101:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_146098
.p2align 0x4
L_434473:
L_146102:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434476
.p2align 0x4,,0x7
L_146103:
	movl 0x9C(%rbp),%ecx
L_146104:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_145907
L_146105:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_146107
L_146108:
	movl %ecx,0x0(%r15)
L_146107:
	movq $0x1B1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x9C(%rbp)
	jmp loop_1558
.p2align 0x4
L_434476:
L_146109:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_146110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146110
.p2align 0x4
.long 0x1F8E
L_146110:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_146103
.p2align 0x4
L_434478:
L_146114:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_145907
L_146115:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_434479
L_146118:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_146117:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x9C(%rbp)
	jmp loop_1558
.p2align 0x4
L_434479:
L_146116:
	movq %r13,%r15
	jmp L_146117
.p2align 0x4
L_434481:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_146099
.p2align 0x4
L_434482:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_146099
.p2align 0x4
L_434483:
L_146119:
	xorl %ecx,%ecx
	jmp L_146104
.p2align 0x4
L_434485:
L_146120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_146121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146121
.p2align 0x4
.long 0x1F83
L_146121:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_146049
.p2align 0x4
L_434486:
L_146046:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434490:
L_146123:
	movq $0x1,%r15
	jmp L_146059
.p2align 0x4
L_434493:
L_146428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_146429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146429
.p2align 0x4
.long 0x514
L_146429:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_145920
.p2align 0x4
L_434494:
L_146430:
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDFB
L_146472:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146473
L_146507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_146508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146508
.p2align 0x4
.long 0x1FB1
L_146508:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_146473:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x70(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x30(%rbp)
	jmp L_146474
.p2align 0x4
.long 0x1FAC
L_146462:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146463
L_146464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_146465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146465
.p2align 0x4
.long 0x1FAD
L_146465:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_146463:
	movq $0x4393,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x30(%r15)
	movq %r15,0x30(%rbp)
	jmp L_145912
.p2align 0x4
.long 0x70F
L_146453:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146454
L_146455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_146456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146456
.p2align 0x4
.long 0x859
L_146456:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_146454:
	movq $0x4395,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x30(%rbp)
	jmp L_145912
.p2align 0x4
.long 0x519
L_146515:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_434499
L_146516:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_434498
L_146518:
	movq 0x10(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434498:
L_146517:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_434499:
L_146519:
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1F77
L_145944:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145945
L_146005:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_146006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146006
.p2align 0x4
.long 0x1F7F
L_146006:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_145945:
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x40(%r14),%r13
	movq 0x38(%r14),%r11
	movq 0x30(%r14),%r10
	movq 0x28(%r14),%r9
	movq 0x20(%r14),%r8
	movq 0x18(%r14),%rsp
	movq 0x10(%r14),%rsi
	movq 0x8(%r14),%rdi
	movq 0x0(%r14),%rdx
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x965,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rdx,0x8(%rcx)
	movq %rdi,0x10(%rcx)
	movq %rsi,0x18(%rcx)
	movq %rsp,0x20(%rcx)
	movq %r8,0x28(%rcx)
	movq %r9,0x30(%rcx)
	movq %r10,0x38(%rcx)
	movq %r11,0x40(%rcx)
	movq %r13,0x48(%rcx)
	addq $0x68,%r12
	movq %r14,0x0(%rcx)
	movq %r15,0x50(%rcx)
	movq %r14,0x58(%rcx)
	movq %rcx,0xC0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_145946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_109
.p2align 0x4
.long 0x76B
L_146407:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146408
L_146425:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_146426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146426
.p2align 0x4
.long 0x179F
L_146426:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_146408:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_434501
L_146409:
	movq 0x8(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
L_146410:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x3DC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_146411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_434501:
L_146415:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_146416
.p2align 0x4
.long 0x1F90
L_146137:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146138
L_146145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_146146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146146
.p2align 0x4
.long 0x1EE7
L_146146:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_146138:
	movq $0x1D3B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	jmp L_146139
.p2align 0x4
.long 0x1FA2
L_146400:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_146401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1647
.p2align 0x4
.long 0xA4A
L_146395:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146396
L_146397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_146398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146398
.p2align 0x4
.long 0xA50
L_146398:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_146396:
	movq $0x246D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
L_146378:
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_146379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1647
.p2align 0x4
.long 0x1902
L_146376:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146377
L_146390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_146391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146391
.p2align 0x4
.long 0x1926
L_146391:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_146377:
	movq $0x246B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x78(%rbp)
	jmp L_146378
.p2align 0x4
.long 0x1FA2
L_146360:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x78(%rbp)
	movl $0x0,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_146361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
.long 0x1F9D
L_146346:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146347
L_146356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_146357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146357
.p2align 0x4
.long 0x1926
L_146357:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_146347:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_146348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1648
.p2align 0x4
.long 0x76C
L_146337:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146338
L_146343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_146344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146344
.p2align 0x4
.long 0xA50
L_146344:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_146338:
	movq $0x3D3D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_146339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
.long 0x1F92
L_146168:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146169
L_146334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_146335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146335
.p2align 0x4
.long 0x1F9A
L_146335:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_146169:
	movq 0x50(%rbp),%rax
	andq $0xFF,%rax
	subq $0x1,%rax
	cmpq $0x89,%rax
	ja L_434508
	leaq jumpTable_311(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_311:
.quad L_434647,L_434646,L_434645,L_146170,L_434643,L_434642,L_434641,L_146170,L_434640,L_434639,L_434638,L_146170,L_434637,L_434636,L_434635,L_146170,L_434634,L_434633,L_434632,L_146170,L_434631,L_434630,L_434629,L_146170,L_434628,L_434627,L_434626,L_146170,L_434625,L_434624,L_434623,L_146170,L_434622,L_434621,L_434620,L_146170,L_434619,L_434618,L_434617,L_146170,L_434616,L_434615,L_434614,L_146170,L_434613,L_434612,L_434611,L_146170,L_434610,L_434609,L_434608,L_146170,L_434607,L_434606,L_434605,L_146170,L_434604,L_434603,L_434602,L_146170,L_434601,L_434600,L_434599,L_146170,L_434598,L_434597,L_434596,L_146170,L_434595,L_434594,L_434593,L_146170,L_434592,L_434591,L_434590,L_146170,L_434589,L_434588,L_434587,L_146170,L_434586,L_434585,L_434584,L_146170,L_434583,L_434582,L_434581,L_146170,L_434580,L_434579,L_434578,L_146170,L_434577,L_434576,L_434575,L_146170,L_434574,L_434573,L_434572,L_146170,L_434571,L_434570,L_434569,L_146170,L_434568,L_434567,L_434566,L_146170,L_434565,L_434564,L_434563,L_146170,L_434562,L_434561,L_434560,L_146170,L_434559,L_434558,L_434557,L_146170,L_434556,L_434555,L_434554,L_146170,L_434553,L_434552,L_434551,L_146170,L_434550,L_434549,L_434548,L_146170,L_434547,L_434546,L_434545,L_146170,L_434544,L_434543
.text
.p2align 0x4
L_434508:
L_146170:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x120F,%rax
	cmpq $0x1E,%rax
	ja L_434509
	leaq jumpTable_312(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_312:
.quad L_434542,L_434541,L_434540,L_434539,L_434538,L_434537,L_434536,L_434535,L_434534,L_434533,L_434532,L_434531,L_434530,L_434529,L_434528,L_434527,L_434526,L_434525,L_434524,L_434523,L_434522,L_434521,L_434520,L_434519,L_434518,L_434517,L_434516,L_434515,L_434513,L_434512,L_434511
.text
.p2align 0x4
L_434509:
L_146171:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x241D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
L_146172:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_145923
L_146174:
	movq $0x3F55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x80(%rbp),%r11
	movq %r11,0x0(%r14)
	movl %r13d,0x80(%rbp)
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_146175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_434511:
L_146229:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x245B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_146172
.p2align 0x4
L_434512:
L_146228:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2459,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_146172
.p2align 0x4
L_434513:
L_146207:
	movq 0x50(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x88(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x89(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_145923
L_146209:
	movl %r13d,0xB0(%rbp)
	movq $0x3FA1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_146210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_434515:
L_146206:
	movq 0x50(%rbp),%r15
	movb 0x2(%r15),%r14b
	movq 0x8(%r15),%r13
	movw 0x0(%r15),%r11w
	movq $0x2455,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movzwl %r11w,%r13d
	movzbl %r14b,%r11d
	shll $0x10,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434516:
L_146205:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movq $0x2453,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movzbl %r13b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434517:
L_146204:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movb 0x4(%r15),%r11b
	movq $0x2451,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movzbl %r11b,%r14d
	movl %r14d,0x4(%r15)
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434518:
L_146203:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x244F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_146172
.p2align 0x4
L_434519:
L_146202:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x244D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434520:
L_146201:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x244B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_146172
.p2align 0x4
L_434521:
L_146200:
	movq 0x50(%rbp),%r15
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r13
	movq $0x2449,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434522:
L_146199:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2447,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_146172
.p2align 0x4
L_434523:
L_146198:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq $0x2445,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434524:
L_146197:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2443,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_146172
.p2align 0x4
L_434525:
L_146196:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x2441,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434526:
L_146195:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x243F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434527:
L_146194:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x243D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434528:
L_146193:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x243B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_146172
.p2align 0x4
L_434529:
L_146192:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2439,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_146172
.p2align 0x4
L_434530:
L_146191:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2437,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_146172
.p2align 0x4
L_434531:
L_146190:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2435,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_146172
.p2align 0x4
L_434532:
L_146189:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x2433,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434533:
L_146188:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x2431,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434534:
L_146187:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movb 0x4(%r15),%r13b
	movq 0x8(%r15),%r11
	movq $0x242F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movzbl %r13b,%r14d
	movl %r14d,0x4(%r15)
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434535:
L_146186:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x242D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_146172
.p2align 0x4
L_434536:
L_146185:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x242B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_146172
.p2align 0x4
L_434537:
L_146184:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x2429,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434538:
L_146183:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2427,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_146172
.p2align 0x4
L_434539:
L_146182:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x2425,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434540:
L_146181:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2423,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_146172
.p2align 0x4
L_434541:
L_146180:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2421,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_146172
.p2align 0x4
L_434542:
L_146179:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x241F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_146172
.p2align 0x4
L_434543:
L_146333:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x10,%r14
	movb %r14b,%r13b
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	movzbq %r13b,%r14
	shlq $0x8,%r14
	orq %r14,%r15
	shlq $0x8,%r15
	orq $0x8A,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434544:
L_146332:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x89,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434545:
L_146331:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x87,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434546:
L_146330:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x86,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434547:
L_146329:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x85,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434548:
L_146328:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x83,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434549:
L_146327:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x82,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434550:
L_146326:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x81,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434551:
L_146325:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7F,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434552:
L_146324:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7E,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434553:
L_146323:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7D,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434554:
L_146322:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7B,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434555:
L_146321:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x7A,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434556:
L_146320:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x79,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434557:
L_146319:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x77,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434558:
L_146318:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x76,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434559:
L_146317:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x75,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434560:
L_146316:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x73,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434561:
L_146315:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x72,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434562:
L_146314:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x71,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434563:
L_146313:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6F,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434564:
L_146312:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6E,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434565:
L_146311:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6D,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434566:
L_146310:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6B,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434567:
L_146309:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x6A,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434568:
L_146308:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x69,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434569:
L_146307:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x67,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434570:
L_146306:
	movq 0x50(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x8,%r15
	orq $0x66,%r15
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434571:
L_146305:
	movq $0x65,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434572:
L_146304:
	movq $0x63,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434573:
L_146303:
	movq $0x62,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434574:
L_146302:
	movq $0x61,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434575:
L_146301:
	movq $0x5F,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434576:
L_146300:
	movq $0x5E,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434577:
L_146299:
	movq $0x5D,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434578:
L_146298:
	movq $0x5B,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434579:
L_146297:
	movq $0x5A,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434580:
L_146296:
	movq $0x59,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434581:
L_146295:
	movq $0x57,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434582:
L_146294:
	movq $0x56,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434583:
L_146293:
	movq $0x55,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434584:
L_146292:
	movq $0x53,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434585:
L_146291:
	movq $0x52,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434586:
L_146290:
	movq $0x51,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434587:
L_146289:
	movq $0x4F,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434588:
L_146288:
	movq $0x4E,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434589:
L_146287:
	movq $0x4D,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434590:
L_146286:
	movq $0x4B,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434591:
L_146285:
	movq $0x4A,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434592:
L_146284:
	movq $0x49,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434593:
L_146283:
	movq $0x47,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434594:
L_146282:
	movq $0x46,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434595:
L_146281:
	movq $0x45,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434596:
L_146280:
	movq $0x43,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434597:
L_146279:
	movq $0x42,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434598:
L_146278:
	movq $0x41,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434599:
L_146277:
	movq $0x3F,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434600:
L_146276:
	movq $0x3E,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434601:
L_146275:
	movq $0x3D,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434602:
L_146274:
	movq $0x3B,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434603:
L_146273:
	movq $0x3A,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434604:
L_146272:
	movq $0x39,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434605:
L_146271:
	movq $0x37,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434606:
L_146270:
	movq $0x36,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434607:
L_146269:
	movq $0x35,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434608:
L_146268:
	movq $0x33,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434609:
L_146267:
	movq $0x32,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434610:
L_146266:
	movq $0x31,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434611:
L_146265:
	movq $0x2F,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434612:
L_146264:
	movq $0x2E,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434613:
L_146263:
	movq $0x2D,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434614:
L_146262:
	movq $0x2B,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434615:
L_146261:
	movq $0x2A,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434616:
L_146260:
	movq $0x29,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434617:
L_146259:
	movq $0x27,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434618:
L_146258:
	movq $0x26,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434619:
L_146257:
	movq $0x25,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434620:
L_146256:
	movq $0x23,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434621:
L_146255:
	movq $0x22,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434622:
L_146254:
	movq $0x21,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434623:
L_146253:
	movq $0x1F,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434624:
L_146252:
	movq $0x1E,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434625:
L_146251:
	movq $0x1D,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434626:
L_146250:
	movq $0x1B,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434627:
L_146249:
	movq $0x1A,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434628:
L_146248:
	movq $0x19,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434629:
L_146247:
	movq $0x17,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434630:
L_146246:
	movq $0x16,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434631:
L_146245:
	movq $0x15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434632:
L_146244:
	movq $0x13,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434633:
L_146243:
	movq $0x12,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434634:
L_146242:
	movq $0x11,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434635:
L_146241:
	movq $0xF,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434636:
L_146240:
	movq $0xE,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434637:
L_146239:
	movq $0xD,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434638:
L_146238:
	movq $0xB,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434639:
L_146237:
	movq $0xA,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434640:
L_146236:
	movq $0x9,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434641:
L_146235:
	movq $0x7,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434642:
L_146234:
	movq $0x6,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434643:
L_146233:
	movq $0x5,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434645:
L_146232:
	movq $0x3,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434646:
L_146231:
	movq $0x2,0x50(%rbp)
	jmp L_146172
.p2align 0x4
L_434647:
L_146230:
	movq $0x1,0x50(%rbp)
	jmp L_146172
.p2align 0x4
.long 0x1F90
L_146160:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146161
L_146162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_146163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146163
.p2align 0x4
.long 0x1F91
L_146163:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_146161:
	movq $0x1D41,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	jmp L_146139
.p2align 0x4
.long 0x1F90
L_146155:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146156
L_146157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_146158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146158
.p2align 0x4
.long 0x1F91
L_146158:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_146156:
	movq $0x1D3F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	jmp L_146139
.p2align 0x4
.long 0x1F90
L_146150:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146151
L_146152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_146153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146153
.p2align 0x4
.long 0x1EE7
L_146153:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_146151:
	movq $0x1D3D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	jmp L_146139
.p2align 0x4
.long 0x1F84
L_146063:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146064
L_146087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_146088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146088
.p2align 0x4
.long 0x1F8C
L_146088:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_146064:
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x40(%r14),%r13
	movq 0x38(%r14),%r11
	movq 0x30(%r14),%r10
	movq 0x28(%r14),%r9
	movq 0x20(%r14),%r8
	movq 0x18(%r14),%rsp
	movq 0x10(%r14),%rsi
	movq 0x8(%r14),%rdi
	movq 0x0(%r14),%rdx
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x965,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rdx,0x8(%rcx)
	movq %rdi,0x10(%rcx)
	movq %rsi,0x18(%rcx)
	movq %rsp,0x20(%rcx)
	movq %r8,0x28(%rcx)
	movq %r9,0x30(%rcx)
	movq %r10,0x38(%rcx)
	movq %r11,0x40(%rcx)
	movq %r13,0x48(%rcx)
	addq $0x68,%r12
	movq %r14,0x0(%rcx)
	movq %r15,0x50(%rcx)
	movq %r14,0x58(%rcx)
	movq %rcx,0xE8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_146065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_109
.p2align 0x4
.long 0x1F78
L_145946:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145947
L_146003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_146004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146004
.p2align 0x4
.long 0x1F7D
L_146004:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_145947:
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_434653
L_145948:
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xC0(%rbp)
L_145949:
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq $0x3DC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_145950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_434653:
L_145954:
	movq 0xA0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x80(%rbp),%r15
	movq 0x68(%r15),%r14
	movq $0x3D3D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq %r13,0xC8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_145955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
.long 0xA4A
L_146411:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146412
L_146422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_146423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146423
.p2align 0x4
.long 0xA50
L_146423:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_146412:
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_146415
L_146413:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	jmp L_146410
.p2align 0x4
.long 0x178F
L_146401:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146402
L_146403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_146404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146404
.p2align 0x4
.long 0x179F
L_146404:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_146402:
	movq $0x1D51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	jmp L_146139
.p2align 0x4
.long 0x1FA6
L_146379:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146380
L_146388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_146389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146389
.p2align 0x4
.long 0xA50
L_146389:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_146380:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_434658
L_146381:
	movq $0x3D3D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x90(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_146382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_434658:
L_146387:
	movq $0x1,%r14
	xchgq %r14,%r15
L_146384:
	movq $0x1D4F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x40(%rbp)
	jmp L_146139
.p2align 0x4
.long 0x76C
L_146361:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146362
L_146370:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_146371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146371
.p2align 0x4
.long 0x1FA5
L_146371:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_146362:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_434660
L_146363:
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_146364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1647
.p2align 0x4
L_434660:
L_146369:
	movq $0x1,%r14
	xchgq %r14,%r15
L_146366:
	movq $0x1D4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x40(%rbp)
	jmp L_146139
.p2align 0x4
.long 0x1F9E
L_146348:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146349
L_146354:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_146355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146355
.p2align 0x4
.long 0x1FA1
L_146355:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_146349:
	movq $0x1107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_146350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
.long 0x1F9B
L_146339:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146340
L_146341:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_146342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146342
.p2align 0x4
.long 0x1F9C
L_146342:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_146340:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1D47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x18(%r13)
	movq %r14,0x20(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r13,0x40(%rbp)
	jmp L_146139
.p2align 0x4
.long 0x1F93
L_146175:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146176
L_146177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_146178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146178
.p2align 0x4
.long 0x773
L_146178:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_146176:
	movq $0x1D45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x40(%rbp)
	jmp L_146139
.p2align 0x4
.long 0x1F94
L_146210:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146211
L_146226:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_146227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146227
.p2align 0x4
.long 0x1F99
L_146227:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_146211:
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x40(%r14),%r13
	movq 0x38(%r14),%r11
	movq 0x30(%r14),%r10
	movq 0x28(%r14),%r9
	movq 0x20(%r14),%r8
	movq 0x18(%r14),%rsp
	movq 0x10(%r14),%rsi
	movq 0x8(%r14),%rdi
	movq 0x0(%r14),%rdx
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x965,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rdx,0x8(%rcx)
	movq %rdi,0x10(%rcx)
	movq %rsi,0x18(%rcx)
	movq %rsp,0x20(%rcx)
	movq %r8,0x28(%rcx)
	movq %r9,0x30(%rcx)
	movq %r10,0x38(%rcx)
	movq %r11,0x40(%rcx)
	movq %r13,0x48(%rcx)
	addq $0x68,%r12
	movq %r14,0x0(%rcx)
	movq %r15,0x50(%rcx)
	movq %r14,0x58(%rcx)
	movq %rcx,0xC0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_146212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_109
.p2align 0x4
.long 0x1F85
L_146065:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146066
L_146085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_146086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146086
.p2align 0x4
.long 0x1F8A
L_146086:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_146066:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_434666
L_146067:
	movq 0x8(%r14),%r15
	movq %r15,0xD8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xE0(%rbp)
L_146068:
	movq 0xE0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq $0x3DC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_146069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_434666:
L_146073:
	movq 0xC8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq 0x58(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0xC0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x18(%r15),%r14
	movq 0x20(%r15),%r13
	movq $0x1107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0xE0(%rbp)
	addq $0x18,%r12
	addq $0xE0,%rbp
	leaq (L_146074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1648
.p2align 0x4
.long 0x1F79
L_145950:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145951
L_146000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_146001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146001
.p2align 0x4
.long 0x1F7E
L_146001:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_145951:
	movq 0xC0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r15
	cmpq $0x1,%r15
	je L_145954
L_145952:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xB8(%rbp)
	movq %r14,0xC0(%rbp)
	jmp L_145949
.p2align 0x4
.long 0x1F7A
L_145955:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_145956
L_145998:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_145999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145999
.p2align 0x4
.long 0x1F7D
L_145999:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_145956:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1D3B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq 0xB0(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r15
	cmpq $0x1,%r15
	je L_434675
L_145957:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq $0x1,0xA0(%rbp)
.p2align 0x4,,0x7
L_145958:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434674
.p2align 0x4,,0x7
L_145959:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_434670
L_145960:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_145958
.p2align 0x4
L_434670:
L_145961:
	movq 0xA0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xA0(%rbp)
.p2align 0x4,,0x7
L_145962:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_434673
.p2align 0x4,,0x7
L_145963:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_434671
L_145964:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_145962
.p2align 0x4
L_434671:
L_145966:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_145969
L_145967:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_145929
.p2align 0x4
L_434673:
L_145993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_145994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145994
.p2align 0x4
.long 0x1F7B
L_145994:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_145963
.p2align 0x4
L_434674:
L_145995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_145996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_145996
.p2align 0x4
.long 0x1F7C
L_145996:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_145959
.p2align 0x4
L_434675:
L_145997:
	movq 0xB8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_145966
.p2align 0x4
.long 0x1FA7
L_146382:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146383
L_146385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_146386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146386
.p2align 0x4
.long 0x1FA8
L_146386:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_146383:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_146384
.p2align 0x4
.long 0x1FA3
L_146364:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146365
L_146367:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_146368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146368
.p2align 0x4
.long 0x1FA4
L_146368:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_146365:
	movq 0x40(%rbp),%r15
	jmp L_146366
.p2align 0x4
.long 0x1F9F
L_146350:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146351
L_146352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_146353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146353
.p2align 0x4
.long 0x1FA0
L_146353:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_146351:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D49,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x40(%rbp)
	jmp L_146139
.p2align 0x4
.long 0x1F95
L_146212:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146213
L_146224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_146225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146225
.p2align 0x4
.long 0x1F98
L_146225:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_146213:
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_434680
L_146214:
	movq 0x8(%r14),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
L_146215:
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq $0x3DC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_146216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_434680:
L_146220:
	movq 0xA0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x2457,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movzbl 0x89(%rbp),%r14d
	movzbl 0x88(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x50(%rbp)
	jmp L_146172
.p2align 0x4
.long 0x1F86
L_146069:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146070
L_146082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_146083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146083
.p2align 0x4
.long 0x1F8B
L_146083:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_146070:
	movq 0xE0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r15
	cmpq $0x1,%r15
	je L_146073
L_146071:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xD8(%rbp)
	movq %r14,0xE0(%rbp)
	jmp L_146068
.p2align 0x4
.long 0x1F87
L_146074:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146075
L_146080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_146081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146081
.p2align 0x4
.long 0x1F8A
L_146081:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_146075:
	movq 0x78(%rbp),%r15
	movq 0x68(%r15),%r14
	movq $0x3D3D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq %r13,0xE0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_146076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
.long 0x1F96
L_146216:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146217
L_146221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_146222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146222
.p2align 0x4
.long 0x1F97
L_146222:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_146217:
	movq 0xB0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_146220
L_146218:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0xB0(%rbp)
	jmp L_146215
.p2align 0x4
.long 0x1F88
L_146076:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_146077
L_146078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_146079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_146079
.p2align 0x4
.long 0x1F89
L_146079:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_146077:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x104D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0xC0(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0xC8(%rbp),%r15
	movq %r15,0x20(%r13)
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1055,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA8(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xA8(%rbp)
	jmp loop_1559
