/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:08:54 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_1389
.hidden x_1389
x_1389:
L_68690:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_68741
L_68691:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401949
L_68692:
	movq 0x8(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r10),%r14
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_401948
L_68694:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_401947
L_68695:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_68697:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_401946
L_68733:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE9,%r11
	jne L_401945
L_68734:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_401942
L_68698:
	incl %ecx
	movl %ecx,0x8(%rbp)
	jo L_401941
L_68700:
	cmpq $0x1,%r15
	je L_401936
L_68701:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_68697
.p2align 0x4
L_401936:
L_68702:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68703
L_68731:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_68732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68732
.p2align 0x4
.long 0x659
L_68732:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_68703:
	movl 0x8(%rbp),%ecx
L_68704:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401939
L_68706:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_68708
L_68730:
	movl %ecx,0x0(%r15)
L_68708:
	movq $0x13EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x19D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_68709:
	movq 0x0(%r15),%r14
L_68710:
	andq $0x3,%r14
	jz L_401937
L_68711:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_68712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_401937:
L_68729:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401939:
L_68705:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401941:
L_68699:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401942:
L_68736:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_68705
L_68737:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_401943
L_68739:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_68709
.p2align 0x4
L_401943:
L_68738:
	movq %r11,%r15
	jmp L_68709
.p2align 0x4
L_401945:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_68698
.p2align 0x4
L_401946:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_68698
.p2align 0x4
L_401947:
L_68740:
	xorl %ecx,%ecx
	jmp L_68704
.p2align 0x4
L_401948:
L_68693:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401949:
L_68741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_68742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68742
.p2align 0x4
.long 0x45F
L_68742:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_68692
.p2align 0x4
.long 0x1
L_68712:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_71+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
toString_71:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_71+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
rev_71:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_401953
L_68713:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_68714:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401952
.p2align 0x4,,0x7
L_68715:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_401951
L_68716:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_68714
.p2align 0x4
L_401951:
L_68718:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_68719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_401952:
L_68726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_68727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68727
.p2align 0x4
.long 0x45B
L_68727:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_68715
.p2align 0x4
L_401953:
L_68728:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_68718
.p2align 0x4
.long 0x1
L_68719:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68720
L_68724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_68725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68725
.p2align 0x4
.long 0x451
L_68725:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_68720:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE70)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFD0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_148:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68721
L_68722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_68723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68723
.p2align 0x4
.long 0x451
L_68723:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_68721:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl force_0
.hidden force_0
force_0:
L_68743:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_68793
L_68744:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401959
L_68745:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_401958
L_68746:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1492,%r13
	je L_401957
L_68748:
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	cmpq $0x1,%r13
	je L_401956
L_68749:
	movl 0x4(%r13),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x24(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x3697,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x50(%rbp)
	leaq L_68772(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x12,0x48(%rbp)
	movq $0x11,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_68750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
L_401956:
L_68791:
	leaq L_68772(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x28(%rbp)
	movl $0x0,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_68768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_401957:
L_68747:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401958:
L_68792:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401959:
L_68793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_68794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68794
.p2align 0x4
.long 0x452
L_68794:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_68745
.p2align 0x4
.long 0xFC6
L_68750:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68751
L_68789:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_68790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68790
.p2align 0x4
.long 0xFCC
L_68790:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_68751:
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x40(%rbp)
	movslq %r11d,%r15
	cmpq %r13,%r15
	je L_401961
L_68752:
	movq (globalObjptr+0x4D8)(%rip),%r15
L_68753:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x2927,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401961:
L_68754:
	cmpl $0x0,0x40(%rbp)
	jl L_401968
L_68755:
	movl $0x0,0x44(%rbp)
loop_846:
	movl 0x40(%rbp),%r14d
	cmpl %r14d,0x44(%rbp)
	jl L_401967
L_68756:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_401966
L_68757:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_68758:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_401964
L_68763:
	cmpq $0x1,%r15
	je L_401962
L_68764:
	movq 0x8(%r15),%r15
	jmp L_68758
.p2align 0x4
L_401962:
L_68765:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68766
L_68776:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_68777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68777
.p2align 0x4
.long 0xFC8
L_68777:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_68766:
	movl 0x28(%rbp),%ecx
L_68767:
	movl %ecx,0x30(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_68768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_401964:
L_68759:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68760
L_68761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_68762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68762
.p2align 0x4
.long 0xFC7
L_68762:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_68760:
	movq $0x3,%r15
	jmp L_68753
.p2align 0x4
L_401966:
L_68778:
	xorl %ecx,%ecx
	jmp L_68767
.p2align 0x4
L_401967:
L_68779:
	movslq 0x44(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (x_168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_56
.p2align 0x4
L_401968:
L_68788:
	movq (globalObjptr+0x4F8)(%rip),%r15
	jmp L_68753
.p2align 0x4
.long 0x72E
L_68772:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68773
L_68774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_68775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68775
.p2align 0x4
.long 0xB28
L_68775:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_68773:
	movq 0x20(%rbp),%r15
	jmp L_68753
.p2align 0x4
.long 0xB26
L_68768:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68769
L_68770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_68771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68771
.p2align 0x4
.long 0xB27
L_68771:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_68769:
	movq $0x2925,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFC9
x_168:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_68780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp force_0
.p2align 0x4
.long 0xFC9
L_68780:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68781
L_68786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_68787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68787
.p2align 0x4
.long 0xFCB
L_68787:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_68781:
	movq $0x33A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x20(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_68782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0xFC9
L_68782:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68783
L_68784:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_68785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68785
.p2align 0x4
.long 0xFCA
L_68785:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_68783:
	incl 0x44(%rbp)
	jmp loop_846
.text
.p2align 0x4
.globl foreachFuncLabelVar_1
.hidden foreachFuncLabelVar_1
foreachFuncLabelVar_1:
L_68795:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_69584
L_68796:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402064
L_68797:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_402063
L_68798:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBE,%r14
	je L_402062
	cmpq $0xEBF,%r14
	je L_402061
	cmpq $0xEC0,%r14
	je L_402060
	cmpq $0xEC1,%r14
	je L_402018
	cmpq $0xEC2,%r14
	je L_401975
	cmpq $0xEC3,%r14
	je L_401974
L_68799:
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x33AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_68800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_401974:
L_69356:
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x33AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_69357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_401975:
L_69202:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x2C,%rax
	ja L_401976
	leaq jumpTable_179(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_179:
.quad L_69210,L_69210,L_69210,L_402014,L_69210,L_69210,L_69210,L_402014,L_69210,L_69210,L_69210,L_402014,L_69210,L_69210,L_69210,L_402014,L_69210,L_69210,L_69210,L_402014,L_69210,L_69210,L_69210,L_402014,L_69210,L_69210,L_69210,L_402014,L_69210,L_69210,L_69210,L_402014,L_69210,L_69210,L_69210,L_402014,L_69210,L_69210,L_69210,L_402014,L_69210,L_69210,L_69210,L_402014,L_401981
.text
.p2align 0x4
L_401976:
	movq %r14,%r15
L_69203:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x15BD,%r13
	je L_401980
	cmpq $0x15BE,%r13
	je L_401979
	cmpq $0x15BF,%r13
	je L_401978
	cmpq $0x15C0,%r13
	je L_401977
L_69204:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_69205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_66
.p2align 0x4
L_401977:
L_69308:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_69309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_66
.p2align 0x4
L_401978:
L_69301:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_69302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_67
.p2align 0x4
L_401979:
L_69245:
	movq %r15,0x58(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_69246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_401980:
L_69231:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_69232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_67
.p2align 0x4
L_401981:
L_69210:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_69217
	cmpq $0x2,%r15
	je L_401982
L_69211:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_69212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1408
.p2align 0x4
L_401982:
L_69217:
	movq $0x33AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_402014:
	movq %r14,%r15
	jmp L_69203
.p2align 0x4
L_402018:
L_69015:
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x2E,%rax
	ja L_402019
	leaq jumpTable_180(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_180:
.quad L_69020,L_69020,L_69020,L_69016,L_69020,L_69020,L_69020,L_69016,L_69020,L_69020,L_69020,L_69016,L_69020,L_69020,L_69020,L_69016,L_69020,L_69020,L_69020,L_69016,L_69020,L_69020,L_69020,L_69016,L_69020,L_69020,L_69020,L_69016,L_69020,L_69020,L_69020,L_69016,L_69020,L_69020,L_69020,L_69016,L_69020,L_69020,L_69020,L_69016,L_69020,L_69020,L_69020,L_69016,L_69020,L_69020,L_402022
.text
.p2align 0x4
L_402019:
L_69016:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x19EE,%r14
	je L_402021
	cmpq $0x19EF,%r14
	je L_402020
L_69017:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (x_175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_55
.p2align 0x4
L_402020:
L_69155:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_69156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_402021:
L_69138:
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_69139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_54
.p2align 0x4
L_402022:
L_69020:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_402023
L_69129:
	movq 0x0(%r14),%r15
L_69130:
	movq %r15,0x40(%rbp)
	movq $0x361B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movb $0xC,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_69023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_402023:
L_69021:
	movq 0x8(%r14),%r15
L_69022:
	movq %r15,0x40(%rbp)
	movq $0x3651,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movb $0xE,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_69023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_402060:
L_68910:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x33AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_68911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_402061:
L_68909:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x33AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp foreachi_5
.p2align 0x4
L_402062:
L_68908:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x33AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp foreachi_5
.p2align 0x4
L_402063:
L_69583:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402064:
L_69584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_69585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69585
.p2align 0x4
.long 0x4AE
L_69585:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_68797
.p2align 0x4
.long 0x4E5
L_68800:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68801
L_68906:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_68907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68907
.p2align 0x4
.long 0x4E8
L_68907:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_68801:
	movq 0x8(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_402066
	leaq jumpTable_181(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_181:
.quad L_402117,L_402116,L_402115,L_68802,L_402113,L_402112,L_402111,L_68802,L_402110,L_402109
.text
.p2align 0x4
L_402066:
L_68802:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B41,%rax
	cmpq $0x1D,%rax
	ja L_402067
	leaq jumpTable_182(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_182:
.quad L_402108,L_402107,L_402106,L_402105,L_402104,L_402103,L_402102,L_402101,L_402100,L_402099,L_402088,L_402087,L_402086,L_402085,L_402084,L_402083,L_402082,L_402081,L_402080,L_402079,L_402078,L_402077,L_402076,L_402075,L_402074,L_402073,L_402072,L_402071,L_402070,L_402069
.text
.p2align 0x4
L_402067:
L_68803:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r15d
	incl %r15d
	jo L_402068
L_68805:
	movl %r15d,0x0(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (x_169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
L_402068:
L_68804:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402069:
L_68897:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_7
.p2align 0x4
L_402070:
L_68893:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (x_171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_69
.p2align 0x4
L_402071:
L_68892:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1409
.p2align 0x4
L_402072:
L_68891:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1410
.p2align 0x4
L_402073:
L_68890:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1411
.p2align 0x4
L_402074:
L_68889:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1412
.p2align 0x4
L_402075:
L_68888:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1413
.p2align 0x4
L_402076:
L_68887:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1414
.p2align 0x4
L_402077:
L_68886:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1415
.p2align 0x4
L_402078:
L_68885:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1416
.p2align 0x4
L_402079:
L_68882:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_68883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_70
.p2align 0x4
L_402080:
L_68872:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_68873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_402081:
L_68871:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp goto_2
.p2align 0x4
L_402082:
L_68870:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_8
.p2align 0x4
L_402083:
L_68869:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_9
.p2align 0x4
L_402084:
L_68861:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_68862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_402085:
L_68860:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1417
.p2align 0x4
L_402086:
L_68859:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_10
.p2align 0x4
L_402087:
L_68855:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (x_170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_56
.p2align 0x4
L_402088:
L_68829:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_402098
L_68832:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_847:
	cmpl %ecx,%ebx
	je L_402092
L_68833:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_402091
L_68836:
	movq 0x10(%rbp),%r11
	movq 0x0(%r14,%r13,8),%r10
	movq 0x0(%r10),%r9
	movq 0x10(%r9),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r11)
	je L_402090
L_68837:
	incl %ebx
	jo L_68804
L_68838:
	jmp loop_847
.p2align 0x4
L_402090:
L_68839:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402091:
L_68835:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402092:
L_68840:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68841
L_68853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_68854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68854
.p2align 0x4
.long 0x2C
L_68854:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_68841:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_68848
L_68842:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_68843:
	movq 0x10(%rbp),%r13
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	je L_402095
L_68844:
	cmpq $0x1,%r15
	je L_402093
L_68845:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_68843
.p2align 0x4
L_402093:
L_68846:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68848
L_68849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_68850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68850
.p2align 0x4
.long 0x2C
L_68850:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_68848:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402095:
L_68851:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402098:
L_68831:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402099:
L_68828:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1418
.p2align 0x4
L_402100:
L_68827:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1419
.p2align 0x4
L_402101:
L_68826:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1420
.p2align 0x4
L_402102:
L_68825:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1421
.p2align 0x4
L_402103:
L_68814:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_68815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_71
.p2align 0x4
L_402104:
L_68813:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1422
.p2align 0x4
L_402105:
L_68812:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1423
.p2align 0x4
L_402106:
L_68811:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1424
.p2align 0x4
L_402107:
L_68810:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1425
.p2align 0x4
L_402108:
L_68807:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_68808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_72
.p2align 0x4
L_402109:
L_68905:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402110:
L_68904:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402111:
L_68903:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402112:
L_68902:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402113:
L_68901:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402115:
L_68900:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402116:
L_68899:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402117:
L_68898:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x517
L_69357:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69358
L_69581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_69582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69582
.p2align 0x4
.long 0x63A
L_69582:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_69358:
	movq 0x8(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_402119
	leaq jumpTable_183(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_183:
.quad L_69375,L_69375,L_69375,L_69359,L_69375,L_69375,L_69375,L_69359,L_69375,L_69375
.text
.p2align 0x4
L_402119:
L_69359:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B41,%rax
	cmpq $0x1D,%rax
	ja L_402120
	leaq jumpTable_184(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_184:
.quad L_402215,L_402214,L_402213,L_402212,L_402211,L_402210,L_402209,L_402208,L_402207,L_402206,L_402141,L_402140,L_402139,L_402138,L_402137,L_402136,L_402135,L_402134,L_402133,L_402132,L_402131,L_402130,L_402129,L_402128,L_402127,L_402126,L_402125,L_402124,L_402123,L_402122
.text
.p2align 0x4
L_402120:
L_69360:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movl 0x0(%r13),%r15d
	incl %r15d
	jo L_68804
L_69361:
	movl %r15d,0x0(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (x_179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
L_402122:
L_69572:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_7
.p2align 0x4
L_402123:
L_69568:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (x_184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_69
.p2align 0x4
L_402124:
L_69567:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1409
.p2align 0x4
L_402125:
L_69566:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1410
.p2align 0x4
L_402126:
L_69565:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1411
.p2align 0x4
L_402127:
L_69564:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1412
.p2align 0x4
L_402128:
L_69563:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1413
.p2align 0x4
L_402129:
L_69562:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1414
.p2align 0x4
L_402130:
L_69561:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1415
.p2align 0x4
L_402131:
L_69560:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1416
.p2align 0x4
L_402132:
L_69554:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_69555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_70
.p2align 0x4
L_402133:
L_69545:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_69546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_402134:
L_69544:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp goto_2
.p2align 0x4
L_402135:
L_69543:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_8
.p2align 0x4
L_402136:
L_69542:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_9
.p2align 0x4
L_402137:
L_69534:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_69535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_402138:
L_69533:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1417
.p2align 0x4
L_402139:
L_69532:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_10
.p2align 0x4
L_402140:
L_69528:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (x_183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_56
.p2align 0x4
L_402141:
L_69498:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_68831
L_69500:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_853:
	cmpl %ebx,%ecx
	je L_402198
L_69501:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_68835
L_69503:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x0(%r11),%r10
	movq 0x10(%r10),%r9
	movq 0x20(%rbp),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r9)
	je L_402143
L_69504:
	incl %ebx
	jo L_68804
L_69505:
	jmp loop_853
.p2align 0x4
L_402143:
L_69506:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69375
L_69508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_69509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69509
.p2align 0x4
.long 0x4E8
L_69509:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_69375:
	movq 0x8(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_402144
	leaq jumpTable_185(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_185:
.quad L_402195,L_402194,L_402193,L_69376,L_402191,L_402190,L_402189,L_69376,L_402188,L_402187
.text
.p2align 0x4
L_402144:
L_69376:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B41,%rax
	cmpq $0x1D,%rax
	ja L_402145
	leaq jumpTable_186(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_186:
.quad L_402186,L_402185,L_402184,L_402183,L_402182,L_402181,L_402180,L_402179,L_402178,L_402177,L_402166,L_402165,L_402164,L_402163,L_402162,L_402161,L_402160,L_402159,L_402158,L_402157,L_402156,L_402155,L_402154,L_402153,L_402152,L_402151,L_402150,L_402149,L_402148,L_402147
.text
.p2align 0x4
L_402145:
L_69377:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
L_69363:
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_68804
L_69364:
	movl %r13d,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (x_180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
L_402147:
L_69469:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_7
.p2align 0x4
L_402148:
L_69464:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
L_69465:
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (x_182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_69
.p2align 0x4
L_402149:
L_69463:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1409
.p2align 0x4
L_402150:
L_69462:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1410
.p2align 0x4
L_402151:
L_69461:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1411
.p2align 0x4
L_402152:
L_69460:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1412
.p2align 0x4
L_402153:
L_69459:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1413
.p2align 0x4
L_402154:
L_69458:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1414
.p2align 0x4
L_402155:
L_69457:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1415
.p2align 0x4
L_402156:
L_69456:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1416
.p2align 0x4
L_402157:
L_69452:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
L_69453:
	movq $0x47B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_69454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_70
.p2align 0x4
L_402158:
L_69443:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_69444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_402159:
L_69442:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp goto_2
.p2align 0x4
L_402160:
L_69441:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_8
.p2align 0x4
L_402161:
L_69440:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_9
.p2align 0x4
L_402162:
L_69431:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
L_69432:
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_69433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_402163:
L_69430:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1417
.p2align 0x4
L_402164:
L_69429:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_10
.p2align 0x4
L_402165:
L_69424:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
L_69425:
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (x_181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_56
.p2align 0x4
L_402166:
L_69399:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
L_69400:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_68831
L_69402:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_852:
	cmpl %ebx,%ecx
	je L_402170
L_69403:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_68835
L_69405:
	movq 0x10(%rbp),%r11
	movq 0x0(%r15,%r13,8),%r10
	movq 0x0(%r10),%r9
	movq 0x10(%r9),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r11)
	je L_402168
L_69406:
	incl %ebx
	jo L_68804
L_69407:
	jmp loop_852
.p2align 0x4
L_402168:
L_69408:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402170:
L_69409:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69410
L_69422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_69423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69423
.p2align 0x4
.long 0x2C
L_69423:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_69410:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_69417
L_69411:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_69412:
	movq 0x10(%rbp),%r13
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	je L_402173
L_69413:
	cmpq $0x1,%r15
	je L_402171
L_69414:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_69412
.p2align 0x4
L_402171:
L_69415:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69417
L_69418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_69419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69419
.p2align 0x4
.long 0x2C
L_69419:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_69417:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402173:
L_69420:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402177:
L_69398:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1418
.p2align 0x4
L_402178:
L_69397:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1419
.p2align 0x4
L_402179:
L_69396:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1420
.p2align 0x4
L_402180:
L_69395:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1421
.p2align 0x4
L_402181:
L_69383:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
L_69384:
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_69385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_71
.p2align 0x4
L_402182:
L_69382:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1422
.p2align 0x4
L_402183:
L_69381:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1423
.p2align 0x4
L_402184:
L_69380:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1424
.p2align 0x4
L_402185:
L_69379:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1425
.p2align 0x4
L_402186:
L_69378:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
L_69369:
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_69370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_72
.p2align 0x4
L_402187:
L_69477:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402188:
L_69476:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402189:
L_69475:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402190:
L_69474:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402191:
L_69473:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402193:
L_69472:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402194:
L_69471:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402195:
L_69470:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402198:
L_69510:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69511
L_69526:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69527
.p2align 0x4
.long 0x637
L_69527:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69511:
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_69518
L_69512:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_69513:
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_402201
L_69514:
	cmpq $0x1,%r15
	je L_402199
L_69515:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_69513
.p2align 0x4
L_402199:
L_69516:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69518
L_69519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69520
.p2align 0x4
.long 0x51F
L_69520:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69518:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r14,0x18(%rbp)
	jmp L_69400
.p2align 0x4
L_402201:
L_69521:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69375
L_69523:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_69524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69524
.p2align 0x4
.long 0x4E8
L_69524:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_69375
.p2align 0x4
L_402206:
L_69497:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1418
.p2align 0x4
L_402207:
L_69496:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1419
.p2align 0x4
L_402208:
L_69495:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1420
.p2align 0x4
L_402209:
L_69494:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1421
.p2align 0x4
L_402210:
L_69483:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_69484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_71
.p2align 0x4
L_402211:
L_69482:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1422
.p2align 0x4
L_402212:
L_69481:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1423
.p2align 0x4
L_402213:
L_69480:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1424
.p2align 0x4
L_402214:
L_69372:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1425
.p2align 0x4
L_402215:
L_69366:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_69367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_72
.p2align 0x4
.long 0x557
L_69205:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69206
L_69229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69230
.p2align 0x4
.long 0xFCF
L_69230:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69206:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_69210
L_69207:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0xF,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_69208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x557
L_69309:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69310
L_69320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69321
.p2align 0x4
.long 0xFCF
L_69321:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69310:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_402228
L_69311:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x7,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_69312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402228:
L_69314:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_69210
L_69315:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0xF,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_69208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x557
L_69302:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69303
L_69306:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69307
.p2align 0x4
.long 0xFCF
L_69307:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69303:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_69210
L_69304:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x9,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_69208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x57A
L_69246:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69247
L_69299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_69300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69300
.p2align 0x4
.long 0x59F
L_69300:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_69247:
	movslq 0x10(%rbp),%r15
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_68835
L_69249:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_69210
L_69250:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_68835
L_69252:
	salq $0x4,%r15
	movq 0x0(%r14,%r15,1),%r13
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%r13),%r15
	movq %r15,0x60(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x30(%r13),%r15
	movq %r15,0x70(%rbp)
	movq $0x30D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x36CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%r13),%r15
	movq %r15,0x88(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x90(%rbp)
	cmpq %r14,%r11
	jne L_68831
L_69254:
	movq $0x4371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x98(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xA8(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq $0x3557,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_69255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x557
L_69232:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69233
L_69243:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69244
.p2align 0x4
.long 0xFCF
L_69244:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69233:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_402238
L_69234:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0xC,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_69235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402238:
L_69237:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_69210
L_69238:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x9,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_69208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x643
L_69212:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69213
L_69222:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69223
.p2align 0x4
.long 0xFCE
L_69223:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69213:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_69217
	cmpq $0x2,%r15
	je L_69217
L_69214:
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_69215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1408
.p2align 0x4
.long 0x638
x_175:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69018
L_69136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69137
.p2align 0x4
.long 0x518
L_69137:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69018:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_69020
L_69131:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x38(%rbp)
	movb $0x8,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_69132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x679
L_69156:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69157
L_69164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69165
.p2align 0x4
.long 0x637
L_69165:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69157:
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_69020
L_69159:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_69160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1390
.p2align 0x4
.long 0x67C
L_69139:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69140
L_69153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_69154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69154
.p2align 0x4
.long 0xBD7
L_69154:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_69140:
	movq 0x48(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	cmpl $0x2,0x38(%rbp)
	jl L_402249
L_69141:
	cmpl $0x2,%r11d
	jne L_69020
L_69143:
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_69144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_54
.p2align 0x4
L_402249:
L_69152:
	movq (globalObjptr+0x1F30)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x496
L_69023:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69024
L_69127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_69128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69128
.p2align 0x4
.long 0x499
L_69128:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_69024:
	cmpq $0x1,0x20(%rbp)
	je L_402303
L_69025:
	movq 0x8(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_402251
	leaq jumpTable_187(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_187:
.quad L_402302,L_402301,L_402300,L_69026,L_402298,L_402297,L_402296,L_69026,L_402295,L_402294
.text
.p2align 0x4
L_402251:
L_69026:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B41,%rax
	cmpq $0x1D,%rax
	ja L_402252
	leaq jumpTable_188(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_188:
.quad L_402293,L_402292,L_402291,L_402290,L_402289,L_402288,L_402287,L_402286,L_402285,L_402284,L_402273,L_402272,L_402271,L_402270,L_402269,L_402268,L_402267,L_402266,L_402265,L_402264,L_402263,L_402262,L_402261,L_402260,L_402259,L_402258,L_402257,L_402256,L_402255,L_402254
.text
.p2align 0x4
L_402252:
L_69027:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r15d
	incl %r15d
	jo L_68804
L_69028:
	movl %r15d,0x0(%r13)
	movq %r14,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (x_176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
L_402254:
L_69117:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp visit_7
.p2align 0x4
L_402255:
L_69113:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x20,%rbp
	leaq (x_178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_69
.p2align 0x4
L_402256:
L_69112:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1409
.p2align 0x4
L_402257:
L_69111:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1410
.p2align 0x4
L_402258:
L_69110:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1411
.p2align 0x4
L_402259:
L_69109:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1412
.p2align 0x4
L_402260:
L_69108:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1413
.p2align 0x4
L_402261:
L_69107:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1414
.p2align 0x4
L_402262:
L_69106:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1415
.p2align 0x4
L_402263:
L_69105:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1416
.p2align 0x4
L_402264:
L_69102:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x10(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_69103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_70
.p2align 0x4
L_402265:
L_69093:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_69094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_402266:
L_69092:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp goto_2
.p2align 0x4
L_402267:
L_69091:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp visit_8
.p2align 0x4
L_402268:
L_69090:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp visit_9
.p2align 0x4
L_402269:
L_69082:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_69083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_402270:
L_69081:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp x_1417
.p2align 0x4
L_402271:
L_69080:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp visit_10
.p2align 0x4
L_402272:
L_69076:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x20,%rbp
	leaq (x_177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_56
.p2align 0x4
L_402273:
L_69052:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_68831
L_69054:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_849:
	cmpl %ecx,%ebx
	je L_402277
L_69055:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_68835
L_69057:
	movq 0x20(%rbp),%r11
	movq 0x0(%r14,%r13,8),%r10
	movq 0x0(%r10),%r9
	movq 0x10(%r9),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r11)
	je L_402275
L_69058:
	incl %ebx
	jo L_68804
L_69059:
	jmp loop_849
.p2align 0x4
L_402275:
L_69060:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402277:
L_69061:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69062
L_69074:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_69075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69075
.p2align 0x4
.long 0x97E
L_69075:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_69062:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_69069
L_69063:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_69064:
	movq 0x20(%rbp),%r13
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	je L_402280
L_69065:
	cmpq $0x1,%r15
	je L_402278
L_69066:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_69064
.p2align 0x4
L_402278:
L_69067:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69069
L_69070:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_69071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69071
.p2align 0x4
.long 0x97E
L_69071:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_69069:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402280:
L_69072:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402284:
L_69051:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1418
.p2align 0x4
L_402285:
L_69050:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1419
.p2align 0x4
L_402286:
L_69049:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1420
.p2align 0x4
L_402287:
L_69048:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1421
.p2align 0x4
L_402288:
L_69037:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x20,%rbp
	leaq (L_69038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_71
.p2align 0x4
L_402289:
L_69036:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1422
.p2align 0x4
L_402290:
L_69035:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1423
.p2align 0x4
L_402291:
L_69034:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1424
.p2align 0x4
L_402292:
L_69033:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x20(%rbp)
	jmp x_1425
.p2align 0x4
L_402293:
L_69030:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_69031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_72
.p2align 0x4
L_402294:
L_69125:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402295:
L_69124:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402296:
L_69123:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402297:
L_69122:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402298:
L_69121:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402300:
L_69120:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402301:
L_69119:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402302:
L_69118:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402303:
L_69126:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_68911:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68912
L_69013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_69014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69014
.p2align 0x4
.long 0x4E8
L_69014:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_68912:
	movq 0x8(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_402305
	leaq jumpTable_189(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_189:
.quad L_402356,L_402355,L_402354,L_68913,L_402352,L_402351,L_402350,L_68913,L_402349,L_402348
.text
.p2align 0x4
L_402305:
L_68913:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B41,%rax
	cmpq $0x1D,%rax
	ja L_402306
	leaq jumpTable_190(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_190:
.quad L_402347,L_402346,L_402345,L_402344,L_402343,L_402342,L_402341,L_402340,L_402339,L_402338,L_402327,L_402326,L_402325,L_402324,L_402323,L_402322,L_402321,L_402320,L_402319,L_402318,L_402317,L_402316,L_402315,L_402314,L_402313,L_402312,L_402311,L_402310,L_402309,L_402308
.text
.p2align 0x4
L_402306:
L_68914:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r15d
	incl %r15d
	jo L_68804
L_68915:
	movl %r15d,0x0(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (x_172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
L_402308:
L_69004:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_7
.p2align 0x4
L_402309:
L_69000:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (x_174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_69
.p2align 0x4
L_402310:
L_68999:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1409
.p2align 0x4
L_402311:
L_68998:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1410
.p2align 0x4
L_402312:
L_68997:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1411
.p2align 0x4
L_402313:
L_68996:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1412
.p2align 0x4
L_402314:
L_68995:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1413
.p2align 0x4
L_402315:
L_68994:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1414
.p2align 0x4
L_402316:
L_68993:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1415
.p2align 0x4
L_402317:
L_68992:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1416
.p2align 0x4
L_402318:
L_68989:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_68990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_70
.p2align 0x4
L_402319:
L_68980:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_68981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_402320:
L_68979:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp goto_2
.p2align 0x4
L_402321:
L_68978:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_8
.p2align 0x4
L_402322:
L_68977:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_9
.p2align 0x4
L_402323:
L_68969:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_68970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_402324:
L_68968:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1417
.p2align 0x4
L_402325:
L_68967:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp visit_10
.p2align 0x4
L_402326:
L_68963:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (x_173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_56
.p2align 0x4
L_402327:
L_68939:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_68831
L_68941:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_848:
	cmpl %ecx,%ebx
	je L_402331
L_68942:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_68835
L_68944:
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq 0x10(%r10),%r9
	movq 0x10(%rbp),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r9)
	je L_402329
L_68945:
	incl %ebx
	jo L_68804
L_68946:
	jmp loop_848
.p2align 0x4
L_402329:
L_68947:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402331:
L_68948:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68949
L_68961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_68962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68962
.p2align 0x4
.long 0x2C
L_68962:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_68949:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_68956
L_68950:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_68951:
	movq 0x10(%rbp),%r13
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	je L_402334
L_68952:
	cmpq $0x1,%r15
	je L_402332
L_68953:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_68951
.p2align 0x4
L_402332:
L_68954:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68956
L_68957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_68958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68958
.p2align 0x4
.long 0x2C
L_68958:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_68956:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402334:
L_68959:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402338:
L_68938:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1418
.p2align 0x4
L_402339:
L_68937:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1419
.p2align 0x4
L_402340:
L_68936:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1420
.p2align 0x4
L_402341:
L_68935:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1421
.p2align 0x4
L_402342:
L_68924:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_68925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_71
.p2align 0x4
L_402343:
L_68923:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1422
.p2align 0x4
L_402344:
L_68922:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1423
.p2align 0x4
L_402345:
L_68921:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1424
.p2align 0x4
L_402346:
L_68920:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1425
.p2align 0x4
L_402347:
L_68917:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_68918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_72
.p2align 0x4
L_402348:
L_69012:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402349:
L_69011:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402350:
L_69010:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402351:
L_69009:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402352:
L_69008:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402354:
L_69007:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402355:
L_69006:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402356:
L_69005:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
x_169:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_68804
L_68806:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
x_171:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68894
L_68895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_68896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68896
.p2align 0x4
.long 0x5E5
L_68896:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_68894:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_68883:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_68804
L_68884:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x519
L_68873:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68874
L_68880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_68881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68881
.p2align 0x4
.long 0x8B9
L_68881:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_68874:
	movslq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_68835
L_68876:
	movq 0x0(%r14,%r15,8),%r13
L_68877:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_402361
L_68879:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
L_402361:
L_68878:
	movq (globalObjptr+0x1F00)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x510
L_68862:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68863
L_68867:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_68868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68868
.p2align 0x4
.long 0x5E7
L_68868:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_68863:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_402364
L_68864:
L_68865:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402364:
L_68866:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_68865
.p2align 0x4
.long 0x48F
x_170:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68856
L_68857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_68858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68858
.p2align 0x4
.long 0x5E5
L_68858:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_68856:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_68815:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68816
L_68823:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_68824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68824
.p2align 0x4
.long 0x5E5
L_68824:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_68816:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_402369
L_68817:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_402368
L_68818:
	movq 0x18(%rbp),%r15
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_402367
L_68819:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0x2030)(%rip),%r15
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402367:
L_68820:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402368:
L_68821:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402369:
L_68822:
	movq $0x1DE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_68808:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_68804
L_68809:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E2
x_179:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r13),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_68804
L_69362:
	movl %r13d,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq 0x28(%rbp),%r15
	jmp L_69363
.p2align 0x4
.long 0x4E5
L_69373:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69375
L_69478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_69479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69479
.p2align 0x4
.long 0x4E8
L_69479:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_69375
.p2align 0x4
.long 0x4E2
x_184:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69569
L_69570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69571
.p2align 0x4
.long 0x51F
L_69571:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69569:
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r14,0x18(%rbp)
	jmp L_69465
.p2align 0x4
.long 0x4E2
L_69555:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69556
L_69558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69559
.p2align 0x4
.long 0x51F
L_69559:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69556:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_68804
L_69557:
	movl %r13d,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq 0x28(%rbp),%r15
	jmp L_69453
.p2align 0x4
.long 0x97C
L_69546:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69547
L_69552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69553
.p2align 0x4
.long 0x4F1
L_69553:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69547:
	movslq 0x20(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_68835
L_69549:
	movq 0x0(%r14,%r15,8),%r13
L_69550:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_68878
L_69551:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_69373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x709
L_69535:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69536
L_69540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_69541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69541
.p2align 0x4
.long 0x86E
L_69541:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_69536:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_402380
L_69537:
L_69538:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq 0x18(%rbp),%r15
	movq %r14,0x18(%rbp)
	jmp L_69432
.p2align 0x4
L_402380:
L_69539:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_69538
.p2align 0x4
.long 0x4E2
x_183:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69529
L_69530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69531
.p2align 0x4
.long 0x51F
L_69531:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69529:
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r14,0x18(%rbp)
	jmp L_69425
.p2align 0x4
.long 0x1
x_180:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_68804
L_69365:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
x_182:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69466
L_69467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_69468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69468
.p2align 0x4
.long 0x5E5
L_69468:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_69466:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_69454:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_68804
L_69455:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x519
L_69444:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69445
L_69450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69451
.p2align 0x4
.long 0x8B9
L_69451:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69445:
	movslq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_68835
L_69447:
	movq 0x0(%r14,%r15,8),%r13
L_69448:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_68878
L_69449:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x510
L_69433:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69434
L_69438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_69439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69439
.p2align 0x4
.long 0x5E7
L_69439:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_69434:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_402389
L_69435:
L_69436:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402389:
L_69437:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_69436
.p2align 0x4
.long 0x48F
x_181:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69426
L_69427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_69428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69428
.p2align 0x4
.long 0x5E5
L_69428:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_69426:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_69385:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69386
L_69393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_69394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69394
.p2align 0x4
.long 0x5E5
L_69394:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_69386:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_402394
L_69387:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_402393
L_69388:
	movq 0x18(%rbp),%r15
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_402392
L_69389:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0x2030)(%rip),%r15
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402392:
L_69390:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402393:
L_69391:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402394:
L_69392:
	movq $0x1DE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_69370:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_68804
L_69371:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x97C
L_69484:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69485
L_69492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69493
.p2align 0x4
.long 0x637
L_69493:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69485:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_402399
L_69486:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_69375
L_69487:
	movq 0x28(%rbp),%r14
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_69375
L_69488:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq (globalObjptr+0x2030)(%rip),%r13
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r14,0x18(%rbp)
	jmp L_69384
.p2align 0x4
L_402399:
L_69491:
	movq $0x1DE7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r13,0x18(%rbp)
	jmp L_69384
.p2align 0x4
.long 0x490
L_69367:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_68804
L_69368:
	movl %r14d,0x0(%r15)
	movq 0x18(%rbp),%r15
	jmp L_69369
.p2align 0x4
.long 0x557
L_69208:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69210
L_69226:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69227
.p2align 0x4
.long 0x579
L_69227:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_69210
.p2align 0x4
.long 0xB9B
L_69312:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69314
L_69317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69318
.p2align 0x4
.long 0xFCF
L_69318:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_69314
.p2align 0x4
.long 0xFD0
L_69255:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x90(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_402405
L_69256:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_69257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69257
.p2align 0x4
.long 0xFD1
L_69257:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_850:
	cmpq 0x90(%rbp),%r15
	jnl L_402404
L_69296:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_850
.p2align 0x4
L_402404:
L_69258:
	movq %r14,0xC8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB0,%rbp
	leaq (L_69259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_9
.p2align 0x4
L_402405:
L_69297:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB9B
L_69235:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69237
L_69240:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69241
.p2align 0x4
.long 0xFCF
L_69241:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_69237
.p2align 0x4
.long 0x461
L_69215:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69217
L_69218:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69219
.p2align 0x4
.long 0x799
L_69219:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_69217
.p2align 0x4
.long 0x638
L_69132:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69020
L_69134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69135
.p2align 0x4
.long 0x497
L_69135:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_69020
.p2align 0x4
.long 0x638
L_69160:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69020
L_69162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69163
.p2align 0x4
.long 0x497
L_69163:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_69020
.p2align 0x4
.long 0xFCD
L_69144:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69145
L_69150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_69151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69151
.p2align 0x4
.long 0x73D
L_69151:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_69145:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movslq 0x38(%rbp),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_68835
L_69147:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_402410
L_69149:
	movq 0x0(%r14),%r15
	jmp L_69130
.p2align 0x4
L_402410:
L_69148:
	movq 0x8(%r14),%r15
	jmp L_69022
.p2align 0x4
.long 0x1
x_176:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_68804
L_69029:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
x_178:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69114
L_69115:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_69116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69116
.p2align 0x4
.long 0x2C
L_69116:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_69114:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_69103:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_68804
L_69104:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_69094:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69095
L_69100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_69101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69101
.p2align 0x4
.long 0x45E
L_69101:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_69095:
	movslq 0x20(%rbp),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_68835
L_69097:
	movq 0x0(%r14,%r15,8),%r13
L_69098:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_68878
L_69099:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x786
L_69083:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69084
L_69088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_69089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69089
.p2align 0x4
.long 0x720
L_69089:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_69084:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_402419
L_69085:
L_69086:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402419:
L_69087:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_69086
.p2align 0x4
.long 0x2B
x_177:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69077
L_69078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_69079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69079
.p2align 0x4
.long 0x2C
L_69079:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_69077:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_69038:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69039
L_69046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_69047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69047
.p2align 0x4
.long 0x2C
L_69047:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_69039:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_402424
L_69040:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_402423
L_69041:
	movq 0x10(%rbp),%r15
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_402422
L_69042:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0x2030)(%rip),%r15
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402422:
L_69043:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402423:
L_69044:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402424:
L_69045:
	movq $0x1DE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_69031:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_68804
L_69032:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
x_172:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_68804
L_68916:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
x_174:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69001
L_69002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_69003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69003
.p2align 0x4
.long 0x5E5
L_69003:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_69001:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_68990:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_68804
L_68991:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x519
L_68981:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68982
L_68987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_68988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68988
.p2align 0x4
.long 0x8B9
L_68988:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_68982:
	movslq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_68835
L_68984:
	movq 0x0(%r14,%r15,8),%r13
L_68985:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_68878
L_68986:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x510
L_68970:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68971
L_68975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_68976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68976
.p2align 0x4
.long 0x5E7
L_68976:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_68971:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_402433
L_68972:
L_68973:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402433:
L_68974:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_68973
.p2align 0x4
.long 0x48F
x_173:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68964
L_68965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_68966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68966
.p2align 0x4
.long 0x5E5
L_68966:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_68964:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_68925:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68926
L_68933:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_68934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68934
.p2align 0x4
.long 0x5E5
L_68934:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_68926:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_402438
L_68927:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_402437
L_68928:
	movq 0x18(%rbp),%r15
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_402436
L_68929:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0x2030)(%rip),%r15
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402436:
L_68930:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402437:
L_68931:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402438:
L_68932:
	movq $0x1DE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_68918:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_68804
L_68919:
	movl %r15d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFD2
L_69259:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69260
L_69294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_69295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69295
.p2align 0x4
.long 0xFDB
L_69295:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_69260:
	movq $0x3555,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_69261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0xFD3
L_69261:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69262
L_69292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_69293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69293
.p2align 0x4
.long 0xFD9
L_69293:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_69262:
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x30D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_402445
L_69263:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_69264:
	incl %ecx
	movl %ecx,0x6C(%rbp)
	jo L_68804
L_69265:
	cmpq $0x1,%r15
	je L_402442
L_69266:
	movq 0x8(%r15),%r15
	jmp L_69264
.p2align 0x4
L_402442:
L_69267:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69268
L_69289:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_69290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69290
.p2align 0x4
.long 0xFDA
L_69290:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_69268:
	movl 0x6C(%rbp),%ecx
L_69269:
	movl %ecx,0xB0(%rbp)
	movq $0x3F35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_69270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_402445:
L_69291:
	xorl %ecx,%ecx
	jmp L_69269
.p2align 0x4
.long 0xFD4
L_69270:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69271
L_69287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_69288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69288
.p2align 0x4
.long 0xFD9
L_69288:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_69271:
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_68831
L_69273:
	movl %r13d,%r14d
	decl %r14d
	jo L_68804
L_69274:
	movl %r13d,0xB0(%rbp)
	movq $0x3F33,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_69275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
.long 0xFD4
L_69275:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69276
L_69285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_69286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69286
.p2align 0x4
.long 0xFD9
L_69286:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_69276:
	movq $0x721,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movl 0x68(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%r15)
	movq $0x723,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x2937,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x725,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x729,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x210F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq $0x36C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	addq $0x30,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x3557,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xB8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_69277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0xFD5
L_69277:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0x90(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_69278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69278
.p2align 0x4
.long 0xFD6
L_69278:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_851:
	cmpq 0x90(%rbp),%r15
	jnl L_402451
L_69284:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_851
.p2align 0x4
L_402451:
L_69279:
	movq %r14,0xC8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB0,%rbp
	leaq (L_69280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_9
.p2align 0x4
.long 0xFD7
L_69280:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69281
L_69282:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_69283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69283
.p2align 0x4
.long 0xFD8
L_69283:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_69281:
	movq $0x3555,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_69208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.text
.p2align 0x4
.globl get_68
.hidden get_68
get_68:
L_69586:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_69587
L_69641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_69642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69642
.p2align 0x4
.long 0x45F
L_69642:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_69587:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_402462
L_69589:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_402461
L_69590:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_69592:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_402460
L_69633:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD36,%r10
	jne L_402459
L_69634:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_402456
L_69593:
	incl %ecx
	jo L_402455
L_69595:
	cmpq $0x1,%r14
	je L_402453
L_69596:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_69592
.p2align 0x4
L_402453:
L_69597:
L_69598:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_402454
L_69600:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_185
L_69632:
	movl %ecx,0x0(%r15)
x_185:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_69602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_402454:
L_69599:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402455:
L_69594:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402456:
L_69636:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69599
L_69637:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_402457
L_69639:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402457:
L_69638:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402459:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_69593
.p2align 0x4
L_402460:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_69593
.p2align 0x4
L_402461:
L_69640:
	xorl %ecx,%ecx
	jmp L_69598
.p2align 0x4
L_402462:
L_69588:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_69602:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_69603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_69603:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_69604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_69604:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEFD8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_69605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_69605:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_69606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_69606:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69607
L_69630:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_69631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69631
.p2align 0x4
.long 0x4AE
L_69631:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_69607:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_69608:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_69594
L_69609:
	cmpq $0x1,%r14
	je L_402464
L_69610:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_69608
.p2align 0x4
L_402464:
L_69611:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69612
L_69628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69629
.p2align 0x4
.long 0x4E6
L_69629:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69612:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_402465
L_69613:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_72:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_72+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_402465:
L_69627:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_72
.p2align 0x4
.long 0x1
rev_72:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_402471
L_69614:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_69615:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402470
.p2align 0x4,,0x7
L_69616:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_402469
L_69617:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_69615
.p2align 0x4
L_402469:
L_69619:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_69620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_402470:
L_69624:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_69625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69625
.p2align 0x4
.long 0x45B
L_69625:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_69616
.p2align 0x4
L_402471:
L_69626:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_69619
.p2align 0x4
.long 0x1
L_69620:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69621
L_69622:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_69623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69623
.p2align 0x4
.long 0x451
L_69623:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_69621:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_72
.hidden get_72
get_72:
L_69643:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_69673
L_69644:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402485
L_69645:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_402484
L_69647:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_402483
L_69648:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_69650:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_69651
L_69665:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD24,%r13
	jne L_69651
L_69666:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x8(%rbp)
	je L_402478
L_69651:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_402477
L_69653:
	cmpq $0x1,%r15
	je L_402473
L_69654:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_69650
.p2align 0x4
L_402473:
L_69655:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69656
L_69663:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_69664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69664
.p2align 0x4
.long 0x49B
L_69664:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_69656:
	movl 0x18(%rbp),%ecx
L_69657:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_402475
L_69659:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_69661
L_69662:
	movl %ecx,0x0(%r15)
L_69661:
	movq $0x6F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1A49,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	movq %r11,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402475:
L_69658:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402477:
L_69652:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402478:
L_69668:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69658
L_69669:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_402479
L_69671:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402479:
L_69670:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402483:
L_69672:
	xorl %ecx,%ecx
	jmp L_69657
.p2align 0x4
L_402484:
L_69646:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402485:
L_69673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_69674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69674
.p2align 0x4
.long 0x45F
L_69674:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_69645
.text
.p2align 0x4
.globl x_1425
.hidden x_1425
x_1425:
L_69675:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_69676
L_69721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_69722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69722
.p2align 0x4
.long 0x63C
L_69722:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_69676:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_69677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0xFDC
L_69677:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69678
L_69719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_69720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69720
.p2align 0x4
.long 0x9E0
L_69720:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_69678:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_402488
L_69679:
L_69680:
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_69681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1427
.p2align 0x4
L_402488:
L_69718:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_69680
.p2align 0x4
.long 0xFDD
L_69681:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_69682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_73
.p2align 0x4
.long 0xBBA
L_69682:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,0x8(%r14)
	movq %r15,0x30(%rbp)
	je L_402490
L_69683:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_69684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_73
.p2align 0x4
L_402490:
L_69717:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFDE
L_69684:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69685
L_69715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_69716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69716
.p2align 0x4
.long 0xFE7
L_69716:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_69685:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_402493
L_69686:
	cmpq $0x1,%r15
	je L_402491
L_69687:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x7,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_69688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402491:
L_69690:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_402492
L_69691:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0xF,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_69692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402492:
L_69694:
	movq $0x3401,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_69695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_402493:
L_69701:
	movq $0x3689,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq $0x7,0x0(%rbp)
	movq $0x7,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xFDF
L_69688:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69690
L_69711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_69712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69712
.p2align 0x4
.long 0xFE7
L_69712:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_69690
.p2align 0x4
.long 0xFDE
L_69692:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69694
L_69708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_69709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69709
.p2align 0x4
.long 0xFE6
L_69709:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_69694
.p2align 0x4
.long 0xFE0
L_69695:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69696
L_69706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_69707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69707
.p2align 0x4
.long 0xFE5
L_69707:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_69696:
	movq $0x3301,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_69697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0xFE1
L_69697:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69698
L_69704:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_69705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69705
.p2align 0x4
.long 0xFE4
L_69705:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_69698:
	movq $0x2B81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x27,0x50(%rbp)
	movq $0x9,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_69699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xFE2
L_69699:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69701
L_69702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_69703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69703
.p2align 0x4
.long 0xFE3
L_69703:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_69701
.text
.p2align 0x4
.globl peek_4
.hidden peek_4
peek_4:
L_69723:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_69724
L_69750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_69751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69751
.p2align 0x4
.long 0x45F
L_69751:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_69724:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_402510
L_69726:
	movq %r15,0x0(%r13)
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_402509
L_69727:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_69729:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_69730
L_69741:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB5,%r13
	jne L_69730
L_69742:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x8(%rbp)
	je L_402504
L_69730:
	incl %ecx
	jo L_402503
L_69732:
	cmpq $0x1,%r15
	je L_402500
L_69733:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_69729
.p2align 0x4
L_402500:
L_69734:
L_69735:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_402502
L_69737:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_69739
L_69740:
	movl %ecx,0x0(%r15)
L_69739:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402502:
L_69736:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402503:
L_69731:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402504:
L_69744:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69736
L_69745:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_402505
L_69748:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_69747:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402505:
	movq %r13,%r15
	jmp L_69747
.p2align 0x4
L_402509:
L_69749:
	xorl %ecx,%ecx
	jmp L_69735
.p2align 0x4
L_402510:
L_69725:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1427
.hidden x_1427
x_1427:
L_69752:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_69753
L_69806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_69807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69807
.p2align 0x4
.long 0x45F
L_69807:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_69753:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r13
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_402522
L_69755:
	movq %r14,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_402521
L_69756:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_69758:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_402520
L_69798:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xC9F,%r11
	jne L_402519
L_69799:
	movq 0x8(%r15),%r11
	cmpq %r13,0x0(%r15)
	movq %r13,(localObjptr+0x0)(%rip)
	je L_402516
L_69759:
	incl %ecx
	jo L_402515
L_69761:
	cmpq $0x1,%r14
	je L_402512
L_69762:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r13
	jmp L_69758
.p2align 0x4
L_402512:
L_69763:
L_69764:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_402514
L_69766:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_69768
L_69797:
	movl %ecx,0x0(%r15)
L_69768:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_69769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_402514:
L_69765:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402515:
L_69760:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402516:
L_69801:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69765
L_69802:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_402517
L_69804:
	movl %ecx,0x0(%r15)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402517:
L_69803:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402519:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_69759
.p2align 0x4
L_402520:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_69759
.p2align 0x4
L_402521:
L_69805:
	xorl %ecx,%ecx
	jmp L_69764
.p2align 0x4
L_402522:
L_69754:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_69769:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_69770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_69770:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_69771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_69771:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_69772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_69772:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69773
L_69795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_69796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69796
.p2align 0x4
.long 0x4AE
L_69796:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_69773:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_69774:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_69760
L_69775:
	cmpq $0x1,%r14
	je L_402524
L_69776:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_69774
.p2align 0x4
L_402524:
L_69777:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69778
L_69793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69794
.p2align 0x4
.long 0x4E6
L_69794:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69778:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_402525
L_69779:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_73:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_73+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_402525:
L_69792:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_73
.p2align 0x4
.long 0x1
rev_73:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_402531
L_69780:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_69781:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402530
.p2align 0x4,,0x7
L_69782:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_402529
L_69783:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_69781
.p2align 0x4
L_402529:
L_69785:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_402530:
L_69789:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_69790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69790
.p2align 0x4
.long 0x45B
L_69790:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_69782
.p2align 0x4
L_402531:
L_69791:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_69785
.p2align 0x4
.long 0x1
bug_149:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69786
L_69787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_69788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69788
.p2align 0x4
.long 0x451
L_69788:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_69786:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_73
.hidden get_73
get_73:
L_69808:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_69838
L_69809:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402545
L_69810:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_402544
L_69812:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_402543
L_69813:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_69815:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_69816
L_69830:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD12,%r13
	jne L_69816
L_69831:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_402538
L_69816:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_402537
L_69818:
	cmpq $0x1,%r15
	je L_402533
L_69819:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_69815
.p2align 0x4
L_402533:
L_69820:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69821
L_69828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_69829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69829
.p2align 0x4
.long 0x49B
L_69829:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_69821:
	movl 0x18(%rbp),%ecx
L_69822:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_402535
L_69824:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_69826
L_69827:
	movl %ecx,0x0(%r15)
L_69826:
	movq $0x27A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x73D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x739,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x27A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x73B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x73F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq $0x1A25,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402535:
L_69823:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402537:
L_69817:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402538:
L_69833:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69823
L_69834:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_402539
L_69836:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402539:
L_69835:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402543:
L_69837:
	xorl %ecx,%ecx
	jmp L_69822
.p2align 0x4
L_402544:
L_69811:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402545:
L_69838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_69839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69839
.p2align 0x4
.long 0x45F
L_69839:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_69810
.text
.p2align 0x4
.globl foreachi_2
.hidden foreachi_2
foreachi_2:
L_69840:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_69841
L_70529:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_70530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70530
.p2align 0x4
.long 0x45F
L_70530:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_69841:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_402811
L_69844:
	cmpl $0x0,%r13d
	jl L_402810
L_69845:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_854:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402809
.p2align 0x4,,0x7
L_69846:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_402808
L_69848:
	movslq %r15d,%r14
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_402807
	cmpq $0x2,%r15
	je L_402806
L_69849:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x19FD,%rax
	cmpq $0x21,%rax
	ja L_402547
	leaq jumpTable_191(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_191:
.quad L_402793,L_402779,L_402764,L_402749,L_402746,L_402745,L_402744,L_402729,L_402714,L_402689,L_402688,L_402675,L_402674,L_402673,L_402672,L_402671,L_402669,L_402667,L_402666,L_402653,L_402640,L_402639,L_402638,L_402637,L_402636,L_402622,L_402608,L_402607,L_402604,L_402590,L_402576,L_402562,L_402549,L_402548
.text
.p2align 0x4
L_402547:
L_69850:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_69851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_402548:
L_70505:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_70506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_402549:
L_70470:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r14
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x38(%rbp)
	movq $0x2791,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x711,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1399,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x40(%rbp)
	movq %r13,0x0(%r9)
	addq $0x18,%r12
	movq %r11,0x8(%r9)
	movq 0x10(%r10),%r11
	movq %r11,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_402561
L_70471:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_402560
L_70472:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_70474:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_402559
L_70497:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD28,%r11
	jne L_402558
L_70498:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_402555
L_70475:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_402554
L_70476:
	cmpq $0x1,%r15
	je L_402550
L_70477:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_70474
.p2align 0x4
L_402550:
L_70478:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70479
L_70495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_70496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70496
.p2align 0x4
.long 0xFE8
L_70496:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_70479:
	movl 0x50(%rbp),%ecx
L_70480:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_402552
L_70481:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_70483
L_70494:
	movl %ecx,0x0(%r15)
L_70483:
	movq $0x1A51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_70484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
L_402552:
L_69884:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402554:
L_69858:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402555:
L_70500:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70501:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_69907
L_70503:
	movl %ecx,0x0(%r15)
L_69907:
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402558:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_70475
.p2align 0x4
L_402559:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_70475
.p2align 0x4
L_402560:
L_70504:
	xorl %ecx,%ecx
	jmp L_70480
.p2align 0x4
L_402561:
L_69873:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402562:
L_70442:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_69873
L_70443:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_402574
L_70444:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_70446:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_70447
L_70462:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD13,%r13
	jne L_70447
L_70463:
	movq 0x8(%r14),%r13
	movq 0x18(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_402569
L_70447:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_69858
L_70448:
	cmpq $0x1,%r15
	je L_402563
L_70449:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_70446
.p2align 0x4
L_402563:
L_70450:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402567
.p2align 0x4,,0x7
L_70451:
	movl 0x28(%rbp),%ecx
L_70452:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70453:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_70455
L_70459:
	movl %ecx,0x0(%r15)
L_70455:
	movq $0x27A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x739,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x73B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1A27,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_70456:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	jne L_402564
.p2align 0x4,,0x7
L_69866:
	incl 0x14(%rbp)
	jmp loop_854
.p2align 0x4
L_402564:
L_70457:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0xF,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402567:
L_70460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_70461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70461
.p2align 0x4
.long 0x5E0
L_70461:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_70451
.p2align 0x4
L_402569:
L_70465:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70466:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_402570
L_70468:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_70456
.p2align 0x4
L_402570:
L_70467:
	movq %r13,%r15
	jmp L_70456
.p2align 0x4
L_402574:
L_70469:
	xorl %ecx,%ecx
	jmp L_70452
.p2align 0x4
L_402576:
L_70414:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_69873
L_70415:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_402588
L_70416:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_70418:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_70419
L_70434:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD13,%r13
	jne L_70419
L_70435:
	movq 0x8(%r14),%r13
	movq 0x18(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_402583
L_70419:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_69858
L_70420:
	cmpq $0x1,%r15
	je L_402577
L_70421:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_70418
.p2align 0x4
L_402577:
L_70422:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402581
.p2align 0x4,,0x7
L_70423:
	movl 0x28(%rbp),%ecx
L_70424:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70425:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_70427
L_70431:
	movl %ecx,0x0(%r15)
L_70427:
	movq $0x27A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x739,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x73B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1A27,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_70428:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_69866
L_70429:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0xF,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402581:
L_70432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_70433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70433
.p2align 0x4
.long 0x5E0
L_70433:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_70423
.p2align 0x4
L_402583:
L_70437:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70438:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_402584
L_70440:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_70428
.p2align 0x4
L_402584:
L_70439:
	movq %r13,%r15
	jmp L_70428
.p2align 0x4
L_402588:
L_70441:
	xorl %ecx,%ecx
	jmp L_70424
.p2align 0x4
L_402590:
L_70365:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r9
	movq %r9,0x18(%rbp)
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r8
	movq 0x0(%r8),%r14
	incq %r14
	jo L_69873
L_70366:
	movq %r14,0x0(%r8)
	movq 0x0(%r15),%r8
	cmpq $0x1,%r8
	je L_402602
L_70367:
	movq 0x0(%r8),%r14
	movq 0x8(%r8),%r8
	xorl %ecx,%ecx
	movq %r8,%r15
	movq %r9,%r13
.p2align 0x4,,0x7
L_70369:
	movq %r14,%r9
	andq $0x3,%r9
	jnz L_402601
L_70378:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r9
	shrq $0x1,%r9
	cmpq $0xD0F,%r9
	jne L_402600
L_70379:
	movq 0x8(%r14),%r9
	cmpq %r13,0x0(%r14)
	movq %r13,(localObjptr+0x10)(%rip)
	je L_402595
	movq %r10,(localObjptr+0x8)(%rip)
	movq %r11,(localObjptr+0x18)(%rip)
L_70370:
	incl %ecx
	jo L_69858
L_70371:
	cmpq $0x1,%r15
	je L_402591
L_70372:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r13
	movq (localObjptr+0x18)(%rip),%r11
	movq (localObjptr+0x8)(%rip),%r10
	jmp L_70369
.p2align 0x4
L_402591:
L_70373:
L_70374:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70375:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_69866
L_70377:
	movl %ecx,0x0(%r15)
	jmp L_69866
.p2align 0x4
L_402595:
L_70381:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70382:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_402597
L_70410:
	movl %ecx,0x0(%r15)
L_70411:
	movq %r9,%r15
	andq $0x3,%r15
	jnz L_69866
L_70412:
	movq 0x18(%r9),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r9),%r15
	movq %r15,0x28(%rbp)
	movq %r11,(localObjptr+0x18)(%rip)
	movq %r10,(localObjptr+0x8)(%rip)
L_70386:
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_70387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_402597:
L_70384:
	movq %r9,%r14
	andq $0x3,%r14
	jnz L_69866
L_70385:
	movq 0x18(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r9),%r14
	movq %r14,0x28(%rbp)
	movq %r10,(localObjptr+0x8)(%rip)
	movq %r11,(localObjptr+0x18)(%rip)
	jmp L_70386
.p2align 0x4
L_402600:
	movq %r10,(localObjptr+0x8)(%rip)
	movq %r13,(localObjptr+0x10)(%rip)
	movq %r11,(localObjptr+0x18)(%rip)
	jmp L_70370
.p2align 0x4
L_402601:
	movq %r10,(localObjptr+0x8)(%rip)
	movq %r13,(localObjptr+0x10)(%rip)
	movq %r11,(localObjptr+0x18)(%rip)
	jmp L_70370
.p2align 0x4
L_402602:
L_70413:
	xorl %ecx,%ecx
	jmp L_70374
.p2align 0x4
L_402604:
L_70344:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r11
L_70345:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_69866
L_70346:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xEB4,%r15
	jne L_69866
L_70347:
	movq %r14,0x40(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (newUnknown_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_60
.p2align 0x4
L_402607:
L_70325:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_70326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_402608:
L_70297:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_69873
L_70298:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_402620
L_70299:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_70301:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_70302
L_70317:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCFD,%r13
	jne L_70302
L_70318:
	movq 0x8(%r14),%r13
	movq 0x18(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_402615
L_70302:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_69858
L_70303:
	cmpq $0x1,%r15
	je L_402609
L_70304:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_70301
.p2align 0x4
L_402609:
L_70305:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402613
.p2align 0x4,,0x7
L_70306:
	movl 0x28(%rbp),%ecx
L_70307:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70308:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_70310
L_70314:
	movl %ecx,0x0(%r15)
L_70310:
	movq $0x27D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x19FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_70311:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_69866
L_70312:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0x9,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402613:
L_70315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_70316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70316
.p2align 0x4
.long 0x5E0
L_70316:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_70306
.p2align 0x4
L_402615:
L_70320:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70321:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_402616
L_70323:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_70311
.p2align 0x4
L_402616:
L_70322:
	movq %r13,%r15
	jmp L_70311
.p2align 0x4
L_402620:
L_70324:
	xorl %ecx,%ecx
	jmp L_70307
.p2align 0x4
L_402622:
L_70269:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_69873
L_70270:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_402634
L_70271:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_70273:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_70274
L_70289:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCFD,%r13
	jne L_70274
L_70290:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x18(%rbp)
	je L_402629
L_70274:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_69858
L_70275:
	cmpq $0x1,%r15
	je L_402623
L_70276:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_70273
.p2align 0x4
L_402623:
L_70277:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402627
.p2align 0x4,,0x7
L_70278:
	movl 0x28(%rbp),%ecx
L_70279:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70280:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_70282
L_70286:
	movl %ecx,0x0(%r15)
L_70282:
	movq $0x27D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x19FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_70283:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_69866
L_70284:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0x9,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402627:
L_70287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_70288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70288
.p2align 0x4
.long 0x5E0
L_70288:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_70278
.p2align 0x4
L_402629:
L_70292:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70293:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_402630
L_70295:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_70283
.p2align 0x4
L_402630:
L_70294:
	movq %r13,%r15
	jmp L_70283
.p2align 0x4
L_402634:
L_70296:
	xorl %ecx,%ecx
	jmp L_70279
.p2align 0x4
L_402636:
L_70264:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_70265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1428
.p2align 0x4
L_402637:
L_70250:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_70251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_54
.p2align 0x4
L_402638:
L_70249:
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addDef_0
.p2align 0x4
L_402639:
L_70248:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x8E1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x8E3,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r15,0x10(%r9)
	movq %r11,0x18(%r9)
	movq %r13,0x20(%r9)
	movq %r9,0x20(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x30,%r12
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1429
.p2align 0x4
L_402640:
L_70222:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_69873
L_70223:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_402651
L_70224:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_70226:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_402650
L_70239:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE9,%r11
	jne L_402649
L_70240:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_402646
L_70227:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_69858
L_70228:
	cmpq $0x1,%r15
	je L_402641
L_70229:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_70226
.p2align 0x4
L_402641:
L_70230:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402644
.p2align 0x4,,0x7
L_70231:
	movl 0x28(%rbp),%ecx
L_70232:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70233:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_70235
L_70236:
	movl %ecx,0x0(%r15)
L_70235:
	movq $0x13EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_69866
.p2align 0x4
L_402644:
L_70237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_70238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70238
.p2align 0x4
.long 0x5E0
L_70238:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_70231
.p2align 0x4
L_402646:
L_70242:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70243:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_402647
L_70246:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_70245:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_69866
.p2align 0x4
L_402647:
L_70244:
	movq %r11,%r15
	jmp L_70245
.p2align 0x4
L_402649:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_70227
.p2align 0x4
L_402650:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_70227
.p2align 0x4
L_402651:
L_70247:
	xorl %ecx,%ecx
	jmp L_70232
.p2align 0x4
L_402653:
L_70196:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r10),%r14
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_69873
L_70197:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_402664
L_70198:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_70200:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_402663
L_70213:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE9,%r11
	jne L_402662
L_70214:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x18)(%rip)
	je L_402659
L_70201:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_69858
L_70202:
	cmpq $0x1,%r15
	je L_402654
L_70203:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_70200
.p2align 0x4
L_402654:
L_70204:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402657
.p2align 0x4,,0x7
L_70205:
	movl 0x28(%rbp),%ecx
L_70206:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70207:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_70209
L_70210:
	movl %ecx,0x0(%r15)
L_70209:
	movq $0x13EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_69866
.p2align 0x4
L_402657:
L_70211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_70212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70212
.p2align 0x4
.long 0x5E0
L_70212:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_70205
.p2align 0x4
L_402659:
L_70216:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70217:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_402660
L_70220:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_70219:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_69866
.p2align 0x4
L_402660:
L_70218:
	movq %r11,%r15
	jmp L_70219
.p2align 0x4
L_402662:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_70201
.p2align 0x4
L_402663:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_70201
.p2align 0x4
L_402664:
L_70221:
	xorl %ecx,%ecx
	jmp L_70206
.p2align 0x4
L_402666:
L_70195:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_74
.p2align 0x4
L_402667:
L_70193:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_69858
L_70194:
	movl %r15d,0x0(%r14)
	jmp L_69866
.p2align 0x4
L_402669:
L_70191:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_69858
L_70192:
	movl %r15d,0x0(%r14)
	jmp L_69866
.p2align 0x4
L_402671:
L_70190:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movq 0x0(%r15),%r9
	movq $0xB5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r10,0x10(%r15)
	movq %r9,0x18(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%r12
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_74
.p2align 0x4
L_402672:
L_70189:
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bindVar_1
.p2align 0x4
L_402673:
L_70188:
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq $0xD7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%r12
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bindVar_1
.p2align 0x4
L_402674:
L_70187:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x8E1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x8E3,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r15,0x10(%r9)
	movq %r11,0x18(%r9)
	movq %r13,0x20(%r9)
	movq %r9,0x20(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x30,%r12
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1429
.p2align 0x4
L_402675:
L_70162:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movl 0x14(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_69873
L_70163:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_402686
L_70164:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_70166:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_402685
L_70179:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCF0,%r11
	jne L_402684
L_70180:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_402681
L_70167:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_69858
L_70168:
	cmpq $0x1,%r15
	je L_402676
L_70169:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_70166
.p2align 0x4
L_402676:
L_70170:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402679
.p2align 0x4,,0x7
L_70171:
	movl 0x38(%rbp),%ecx
L_70172:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70173:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_70175
L_70176:
	movl %ecx,0x0(%r15)
L_70175:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x19E1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_69866
.p2align 0x4
L_402679:
L_70177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_70178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70178
.p2align 0x4
.long 0xFEA
L_70178:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_70171
.p2align 0x4
L_402681:
L_70182:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70183:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_69907
L_70185:
	movl %ecx,0x0(%r15)
	jmp L_69907
.p2align 0x4
L_402684:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_70167
.p2align 0x4
L_402685:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_70167
.p2align 0x4
L_402686:
L_70186:
	xorl %ecx,%ecx
	jmp L_70172
.p2align 0x4
L_402688:
L_70161:
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addDef_0
.p2align 0x4
L_402689:
L_70112:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r11),%r10
	movq 0x10(%r10),%r15
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq %r9,0x30(%rbp)
	movq $0x45,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x38(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x47,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x40(%rbp)
	movq %r13,0x0(%r10)
	addq $0x18,%r12
	movq %r11,0x8(%r10)
	movq 0x0(%r15),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r10,0x0(%r9)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r15)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_69873
L_70113:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_402712
L_70114:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_70116:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_402711
L_70153:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCF4,%r11
	jne L_402710
L_70154:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x18)(%rip)
	je L_402707
L_70117:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_69858
L_70118:
	cmpq $0x1,%r15
	je L_402690
L_70119:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_70116
.p2align 0x4
L_402690:
L_70120:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402705
.p2align 0x4,,0x7
L_70121:
	movl 0x48(%rbp),%ecx
L_70122:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70123:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_70125
L_70150:
	movl %ecx,0x0(%r15)
L_70125:
	movq $0x19E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x38(%rbp),%r11
	movq 0x0(%r11),%r14
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq %r10,0x0(%r11)
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_69873
L_70126:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_402701
L_70127:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_70129:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_70130
L_70142:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCF6,%r13
	jne L_70130
L_70143:
	movq 0x0(%r14),%r13
	cmpq %r13,0x18(%rbp)
	je L_402696
L_70130:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_69858
L_70131:
	cmpq $0x1,%r15
	je L_402691
L_70132:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_70129
.p2align 0x4
L_402691:
L_70133:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402694
.p2align 0x4,,0x7
L_70134:
	movl 0x28(%rbp),%ecx
L_70135:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70136:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_70138
L_70139:
	movl %ecx,0x0(%r15)
L_70138:
	movq $0x19ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_69866
.p2align 0x4
L_402694:
L_70140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_70141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70141
.p2align 0x4
.long 0x5FB
L_70141:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_70134
.p2align 0x4
L_402696:
L_70145:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70146:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_69907
L_70148:
	movl %ecx,0x0(%r15)
	jmp L_69907
.p2align 0x4
L_402701:
L_70149:
	xorl %ecx,%ecx
	jmp L_70135
.p2align 0x4
L_402705:
L_70151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_70152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70152
.p2align 0x4
.long 0x58C
L_70152:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_70121
.p2align 0x4
L_402707:
L_70156:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70157:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_69907
L_70159:
	movl %ecx,0x0(%r15)
	jmp L_69907
.p2align 0x4
L_402710:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_70117
.p2align 0x4
L_402711:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_70117
.p2align 0x4
L_402712:
L_70160:
	xorl %ecx,%ecx
	jmp L_70122
.p2align 0x4
L_402714:
L_70080:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_69873
L_70081:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_402727
L_70082:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_70084:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_70085
L_70104:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCFD,%r13
	jne L_70085
L_70105:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x18(%rbp)
	je L_402722
L_70085:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_69858
L_70086:
	cmpq $0x1,%r15
	je L_402715
L_70087:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_70084
.p2align 0x4
L_402715:
L_70088:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402720
.p2align 0x4,,0x7
L_70089:
	movl 0x28(%rbp),%ecx
L_70090:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70091:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_70093
L_70101:
	movl %ecx,0x0(%r15)
L_70093:
	movq $0x27D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x19FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_70094:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	jne L_402717
.p2align 0x4,,0x7
L_70097:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_69866
L_70098:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0x9,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402717:
L_70095:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0xC,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_70096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402720:
L_70102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_70103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70103
.p2align 0x4
.long 0x5E0
L_70103:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_70089
.p2align 0x4
L_402722:
L_70107:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70108:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_402723
L_70110:
	movl %ecx,0x0(%r15)
	movq %r13,0x18(%rbp)
	jmp L_70094
.p2align 0x4
L_402723:
L_70109:
	movq %r13,0x18(%rbp)
	jmp L_70094
.p2align 0x4
L_402727:
L_70111:
	xorl %ecx,%ecx
	jmp L_70090
.p2align 0x4
L_402729:
L_70048:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_69873
L_70049:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_402742
L_70050:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_70052:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_70053
L_70072:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCFD,%r13
	jne L_70053
L_70073:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x18(%rbp)
	je L_402737
L_70053:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_69858
L_70054:
	cmpq $0x1,%r15
	je L_402730
L_70055:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_70052
.p2align 0x4
L_402730:
L_70056:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402735
.p2align 0x4,,0x7
L_70057:
	movl 0x28(%rbp),%ecx
L_70058:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70059:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_70061
L_70069:
	movl %ecx,0x0(%r15)
L_70061:
	movq $0x27D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x19FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_70062:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	jne L_402732
.p2align 0x4,,0x7
L_70065:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_69866
L_70066:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0x9,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402732:
L_70063:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0xC,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_70064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402735:
L_70070:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_70071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70071
.p2align 0x4
.long 0x5E0
L_70071:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_70057
.p2align 0x4
L_402737:
L_70075:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_70076:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_402738
L_70078:
	movl %ecx,0x0(%r15)
	movq %r13,0x18(%rbp)
	jmp L_70062
.p2align 0x4
L_402738:
L_70077:
	movq %r13,0x18(%rbp)
	jmp L_70062
.p2align 0x4
L_402742:
L_70079:
	xorl %ecx,%ecx
	jmp L_70058
.p2align 0x4
L_402744:
L_70029:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_70030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_402745:
L_70024:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x40,%rbp
	leaq (L_70025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_402746:
L_70002:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r11
L_70003:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_69866
L_70004:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xEB4,%r15
	jne L_69866
L_70005:
	movq %r14,0x38(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (newUnknown_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_60
.p2align 0x4
L_402749:
L_69970:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_69873
L_69971:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_402762
L_69972:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_69974:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_69975
L_69994:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD13,%r13
	jne L_69975
L_69995:
	movq 0x8(%r14),%r13
	movq 0x18(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_402757
L_69975:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_69858
L_69976:
	cmpq $0x1,%r15
	je L_402750
L_69977:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_69974
.p2align 0x4
L_402750:
L_69978:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402755
.p2align 0x4,,0x7
L_69979:
	movl 0x28(%rbp),%ecx
L_69980:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_69981:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_69983
L_69991:
	movl %ecx,0x0(%r15)
L_69983:
	movq $0x27A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x739,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x73B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1A27,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_69984:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	jne L_402752
.p2align 0x4,,0x7
L_69987:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_69866
L_69988:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0xF,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402752:
L_69985:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0x7,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_69986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402755:
L_69992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69993
.p2align 0x4
.long 0x5E0
L_69993:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_69979
.p2align 0x4
L_402757:
L_69997:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_69998:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_402758
L_70000:
	movl %ecx,0x0(%r15)
	movq %r13,0x18(%rbp)
	jmp L_69984
.p2align 0x4
L_402758:
L_69999:
	movq %r13,0x18(%rbp)
	jmp L_69984
.p2align 0x4
L_402762:
L_70001:
	xorl %ecx,%ecx
	jmp L_69980
.p2align 0x4
L_402764:
L_69938:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_69873
L_69939:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_402777
L_69940:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_69942:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_69943
L_69962:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD13,%r13
	jne L_69943
L_69963:
	movq 0x8(%r14),%r13
	movq 0x18(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_402772
L_69943:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_69858
L_69944:
	cmpq $0x1,%r15
	je L_402765
L_69945:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_69942
.p2align 0x4
L_402765:
L_69946:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402770
.p2align 0x4,,0x7
L_69947:
	movl 0x28(%rbp),%ecx
L_69948:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_69949:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_69951
L_69959:
	movl %ecx,0x0(%r15)
L_69951:
	movq $0x27A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x739,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x73B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1A27,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_69952:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	jne L_402767
.p2align 0x4,,0x7
L_69955:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_69866
L_69956:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0xF,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402767:
L_69953:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0x7,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_69954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402770:
L_69960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69961
.p2align 0x4
.long 0x5E0
L_69961:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_69947
.p2align 0x4
L_402772:
L_69965:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_69966:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_402773
L_69968:
	movl %ecx,0x0(%r15)
	movq %r13,0x18(%rbp)
	jmp L_69952
.p2align 0x4
L_402773:
L_69967:
	movq %r13,0x18(%rbp)
	jmp L_69952
.p2align 0x4
L_402777:
L_69969:
	xorl %ecx,%ecx
	jmp L_69948
.p2align 0x4
L_402779:
L_69910:
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x8(%r13),%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_402792
L_69913:
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r10),%r13
	movq %r13,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_69873
L_69914:
	movq %r15,0x0(%r10)
	movq 0x0(%r13),%r10
	cmpq $0x1,%r10
	je L_402790
L_69915:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_69917:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_402789
L_69930:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD20,%r13
	jne L_402788
L_69931:
	cmpq 0x0(%r14),%r11
	movq %r11,(localObjptr+0x10)(%rip)
	je L_402785
L_69918:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_69858
L_69919:
	cmpq $0x1,%r15
	je L_402780
L_69920:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r11
	jmp L_69917
.p2align 0x4
L_402780:
L_69921:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402783
.p2align 0x4,,0x7
L_69922:
	movl 0x30(%rbp),%ecx
L_69923:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_69924:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_69926
L_69927:
	movl %ecx,0x0(%r15)
L_69926:
	movq $0x1A41,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_69866
.p2align 0x4
L_402783:
L_69928:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_69929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69929
.p2align 0x4
.long 0xEAC
L_69929:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_69922
.p2align 0x4
L_402785:
L_69933:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_69934:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_69907
L_69936:
	movl %ecx,0x0(%r15)
	jmp L_69907
.p2align 0x4
L_402788:
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_69918
.p2align 0x4
L_402789:
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_69918
.p2align 0x4
L_402790:
L_69937:
	xorl %ecx,%ecx
	jmp L_69923
.p2align 0x4
L_402792:
L_69912:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402793:
L_69872:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x18(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x10(%r10),%r9
	movq %r9,0x20(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x28(%rbp)
	movq 0x0(%r10),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x38(%rbp)
	movq $0x2791,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x711,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1399,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x40(%rbp)
	movq %r13,0x0(%r9)
	addq $0x18,%r12
	movq %r11,0x8(%r9)
	movq 0x10(%r10),%r11
	movq %r11,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_69873
L_69874:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_402804
L_69875:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_69877:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_402803
L_69901:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD28,%r11
	jne L_402802
L_69902:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x10)(%rip)
	je L_402799
L_69878:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_69858
L_69879:
	cmpq $0x1,%r15
	je L_402794
L_69880:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_69877
.p2align 0x4
L_402794:
L_69881:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69882
L_69899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_69900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69900
.p2align 0x4
.long 0xFE8
L_69900:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_69882:
	movl 0x50(%rbp),%ecx
L_69883:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_69885:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_69887
L_69898:
	movl %ecx,0x0(%r15)
L_69887:
	movq $0x1A51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_69888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
L_402799:
L_69904:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_69884
L_69905:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_69907
L_69908:
	movl %ecx,0x0(%r15)
	jmp L_69907
.p2align 0x4
L_402802:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_69878
.p2align 0x4
L_402803:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_69878
.p2align 0x4
L_402804:
L_69909:
	xorl %ecx,%ecx
	jmp L_69883
.p2align 0x4
L_402806:
L_70525:
	movq 0x8(%r13),%r14
	movq 0x10(%r14),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r11)
	jmp L_69866
.p2align 0x4
L_402807:
L_70524:
	movq 0x8(%r13),%r14
	movq 0x10(%r14),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r11)
	jmp L_69866
.p2align 0x4
L_402808:
L_69847:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402809:
L_70526:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_70527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70527
.p2align 0x4
.long 0x45D
L_70527:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_69846
.p2align 0x4
L_402810:
L_70528:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402811:
L_69843:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x525
L_69851:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_69852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x525
L_70506:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_70507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x560
L_70484:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70485
L_70492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_70493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70493
.p2align 0x4
.long 0x562
L_70493:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_70485:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_402814
L_70486:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_402813
L_70487:
L_70488:
	movq $0x41C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_70489:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_69866
.p2align 0x4
L_402813:
L_70490:
	movq $0x41C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_70489
.p2align 0x4
L_402814:
L_70491:
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visitType_0
.p2align 0x4
.long 0x523
L_69865:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_69866
.p2align 0x4
.long 0x525
L_70387:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_70388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x525
newUnknown_2:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x38(%rbp)
	cmpq %rdx,%r14
	movq %r15,0x30(%rbp)
	jne L_69843
L_70349:
	testq %rdx,%rdx
	jz L_402819
L_70350:
	cmpq $0x7FFFFFFF,%rdx
	ja L_402818
L_70351:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_70352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70352
.p2align 0x4
.long 0xF30
L_70352:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_70353:
	movq $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_856:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402817
.p2align 0x4,,0x7
L_70354:
	movq 0x48(%rbp),%r15
	cmpq 0x38(%rbp),%r15
	jnl L_402816
L_70360:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x16EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x2018)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x48(%rbp)
	jmp loop_856
.p2align 0x4
L_402816:
L_70355:
	movq 0x40(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x28(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_70356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_59
.p2align 0x4
L_402817:
L_70361:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_70362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70362
.p2align 0x4
.long 0xFEB
L_70362:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_70354
.p2align 0x4
L_402818:
L_70022:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402819:
L_70364:
	movq (globalObjptr+0x2010)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_70353
.p2align 0x4
.long 0x526
L_70326:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_70327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x555
L_70265:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70266
L_70267:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_70268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70268
.p2align 0x4
.long 0x561
L_70268:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_70266:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x114D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x20,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r15,0x10(%r11)
	movq 0x0(%r14),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_69866
.p2align 0x4
.long 0x585
L_70251:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	cmpl $0x2,0x30(%rbp)
	jl L_402823
L_70252:
	cmpl $0x2,%r11d
	jne L_69866
L_70254:
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_70255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_54
.p2align 0x4
L_402823:
L_70263:
	movq (globalObjptr+0x1F30)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x555
L_70096:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_70097
.p2align 0x4
.long 0x555
L_70064:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_70065
.p2align 0x4
.long 0x526
L_70030:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_70031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x526
L_70025:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70026
L_70027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_70028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70028
.p2align 0x4
.long 0xF30
L_70028:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_70026:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x38(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%r13)
	movq $0x31A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x10(%r15)
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_9
.p2align 0x4
.long 0x556
newUnknown_1:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %r14,%rdx
	movq %r15,0x28(%rbp)
	jne L_69843
L_70007:
	testq %rdx,%rdx
	jz L_402828
L_70008:
	cmpq $0x7FFFFFFF,%rdx
	ja L_70022
L_70009:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_70010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70010
.p2align 0x4
.long 0xEAC
L_70010:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
L_70011:
	movq $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_855:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402826
.p2align 0x4,,0x7
L_70012:
	movq 0x40(%rbp),%r15
	cmpq 0x30(%rbp),%r15
	jnl L_402825
L_70018:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x16EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x2018)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x40(%rbp)
	jmp loop_855
.p2align 0x4
L_402825:
L_70013:
	movq 0x38(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x20(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_70014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_59
.p2align 0x4
L_402826:
L_70019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_70020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70020
.p2align 0x4
.long 0xFE9
L_70020:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_70012
.p2align 0x4
L_402828:
L_70023:
	movq (globalObjptr+0x2010)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_70011
.p2align 0x4
.long 0x555
L_69986:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_69987
.p2align 0x4
.long 0x555
L_69954:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_69955
.p2align 0x4
.long 0x560
L_69888:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69889
L_69896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_69897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69897
.p2align 0x4
.long 0x562
L_69897:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_69889:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_402831
L_69890:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_402830
L_69891:
L_69892:
	movq $0x41C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_69893:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_69866
.p2align 0x4
L_402830:
L_69894:
	movq $0x41C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_69893
.p2align 0x4
L_402831:
L_69895:
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visitType_0
.p2align 0x4
.long 0x525
L_69852:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_69853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x525
L_70507:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_70508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x525
L_70388:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_70389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xEAF
L_70356:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70357
L_70358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_70359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70359
.p2align 0x4
.long 0x59D
L_70359:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_70357:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq $0x1DE3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x4A5F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_69866
.p2align 0x4
.long 0x526
L_70327:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_70328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x63D
L_70255:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70256
L_70261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_70262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70262
.p2align 0x4
.long 0x53F
L_70262:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_70256:
	movq 0x38(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movslq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_69912
L_70258:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_69912
L_70260:
	movl $0x0,0x0(%r14,%r15,4)
	jmp L_69866
.p2align 0x4
.long 0x526
L_70031:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_70032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5C0
L_70014:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70015
L_70016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_70017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70017
.p2align 0x4
.long 0x580
L_70017:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_70015:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1DE3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_69866
.p2align 0x4
.long 0x526
L_69853:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_69854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1394
.p2align 0x4
.long 0x526
L_70508:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_70509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1394
.p2align 0x4
.long 0x526
L_70389:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_70391
L_70407:
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_402838
L_70409:
	movq (globalObjptr+0xE678)(%rip),%r15
L_70392:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_70393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_402838:
L_70391:
	movq (globalObjptr+0xEFE0)(%rip),%r15
	jmp L_70392
.p2align 0x4
.long 0x540
L_70328:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_70329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1396
.p2align 0x4
.long 0x540
L_70032:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_70033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1396
.p2align 0x4
.long 0x527
L_69854:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_69855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_8
.p2align 0x4
.long 0x527
L_70509:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_70510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_8
.p2align 0x4
.long 0x548
L_70393:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70394
L_70405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_70406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70406
.p2align 0x4
.long 0x56A
L_70406:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_70394:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_70395:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_69858
L_70396:
	cmpq $0x1,%r14
	je L_402840
L_70397:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_70395
.p2align 0x4
L_402840:
L_70398:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70399
L_70403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_70404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70404
.p2align 0x4
.long 0x56D
L_70404:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_70399:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_402841
L_70400:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
x_189:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_70401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_402841:
L_70402:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_189
.p2align 0x4
.long 0x541
L_70329:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_70330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_18
.p2align 0x4
.long 0x541
L_70033:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_70034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_18
.p2align 0x4
.long 0x527
L_69855:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69856
L_69870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_69871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69871
.p2align 0x4
.long 0x56A
L_69871:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_69856:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_69857:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_69858
L_69859:
	cmpq $0x1,%r14
	je L_402845
L_69860:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_69857
.p2align 0x4
L_402845:
L_69861:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_69862
L_69868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_69869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_69869
.p2align 0x4
.long 0x579
L_69869:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_69862:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_402846
L_69863:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
x_186:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x38(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_69864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_402846:
L_69867:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_186
.p2align 0x4
.long 0x527
L_70510:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70511
L_70522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_70523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70523
.p2align 0x4
.long 0x56A
L_70523:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_70511:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_70512:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_69858
L_70513:
	cmpq $0x1,%r14
	je L_402850
L_70514:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_70512
.p2align 0x4
L_402850:
L_70515:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70516
L_70520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_70521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70521
.p2align 0x4
.long 0x579
L_70521:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_70516:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_402851
L_70517:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
x_190:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x38(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_70518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_402851:
L_70519:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_190
.p2align 0x4
.long 0x555
L_70401:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xC85
L_70330:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70331
L_70342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_70343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70343
.p2align 0x4
.long 0xEB1
L_70343:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_70331:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_70332:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_69858
L_70333:
	cmpq $0x1,%r14
	je L_402855
L_70334:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_70332
.p2align 0x4
L_402855:
L_70335:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70336
L_70340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_70341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70341
.p2align 0x4
.long 0x579
L_70341:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_70336:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_402856
L_70337:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
x_188:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_70338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_402856:
L_70339:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_188
.p2align 0x4
.long 0xC85
L_70034:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70035
L_70046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_70047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70047
.p2align 0x4
.long 0xEB1
L_70047:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_70035:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_70036:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_69858
L_70037:
	cmpq $0x1,%r14
	je L_402860
L_70038:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_70036
.p2align 0x4
L_402860:
L_70039:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70040
L_70044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_70045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70045
.p2align 0x4
.long 0x579
L_70045:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_70040:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_402861
L_70041:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
x_187:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_70042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_402861:
L_70043:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_187
.p2align 0x4
.long 0x456
L_69864:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x456
L_70518:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x56C
L_70338:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x56C
L_70042:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_69865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.text
.p2align 0x4
.globl get_52
.hidden get_52
get_52:
L_70531:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_70532
L_70586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_70587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70587
.p2align 0x4
.long 0x45F
L_70587:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_70532:
	movq 0x8(%rbp),%r10
	movq 0x10(%r10),%r11
	movq 0x8(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_402874
L_70534:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_402873
L_70535:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_70537:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_402872
L_70578:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD28,%r10
	jne L_402871
L_70579:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_402868
L_70538:
	incl %ecx
	jo L_402867
L_70540:
	cmpq $0x1,%r14
	je L_402865
L_70541:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_70537
.p2align 0x4
L_402865:
L_70542:
L_70543:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_402866
L_70545:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_191
L_70577:
	movl %ecx,0x0(%r15)
x_191:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_70547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_402866:
L_70544:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402867:
L_70539:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402868:
L_70581:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_70544
L_70582:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_402869
L_70584:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402869:
L_70583:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402871:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_70538
.p2align 0x4
L_402872:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_70538
.p2align 0x4
L_402873:
L_70585:
	xorl %ecx,%ecx
	jmp L_70543
.p2align 0x4
L_402874:
L_70533:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_70547:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_70548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_70548:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_70549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_70549:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEFE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_70550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_70550:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_70551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_70551:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70552
L_70575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_70576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70576
.p2align 0x4
.long 0x4AE
L_70576:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_70552:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_70553:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_70539
L_70554:
	cmpq $0x1,%r14
	je L_402876
L_70555:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_70553
.p2align 0x4
L_402876:
L_70556:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70557
L_70573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_70574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70574
.p2align 0x4
.long 0x4E6
L_70574:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_70557:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_402877
L_70558:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_74:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_74+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_402877:
L_70572:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_74
.p2align 0x4
.long 0x1
rev_74:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_402883
L_70559:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_70560:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402882
.p2align 0x4,,0x7
L_70561:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_402881
L_70562:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_70560
.p2align 0x4
L_402881:
L_70564:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_70565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_402882:
L_70569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_70570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70570
.p2align 0x4
.long 0x45B
L_70570:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_70561
.p2align 0x4
L_402883:
L_70571:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_70564
.p2align 0x4
.long 0x1
L_70565:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70566
L_70567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_70568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70568
.p2align 0x4
.long 0x451
L_70568:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_70566:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl visitType_0
.hidden visitType_0
visitType_0:
loopS_4:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_70588
L_70641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_70642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70642
.p2align 0x4
.long 0x45F
L_70642:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_70588:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
loop_857:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402908
.p2align 0x4,,0x7
L_70589:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x10(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_402907
L_70591:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_402906
L_70592:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_70594:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_70595
L_70631:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD27,%r13
	jne L_70595
L_70632:
	movq 0x8(%r14),%r13
	movq 0x20(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_402901
L_70595:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_402900
L_70597:
	cmpq $0x1,%r15
	je L_402885
L_70598:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_70594
.p2align 0x4
L_402885:
L_70599:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402899
.p2align 0x4,,0x7
L_70600:
	movl 0x38(%rbp),%ecx
L_70601:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_402898
L_70603:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_70605
L_70628:
	movl %ecx,0x0(%r15)
L_70605:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x139B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq $0x1,0x8(%r13)
	movq $0x1A4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%r11),%r14
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r14,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x0(%r11)
	movq %r13,%r15
L_70606:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_402896
L_70607:
	movl $0x1,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
L_70608:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_70609
L_70610:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB0,%r15
	je L_402894
	cmpq $0xEB1,%r15
	je L_402893
	cmpq $0xEB2,%r15
	je L_402889
	cmpq $0xEB3,%r15
	je L_402888
	cmpq $0xEB4,%r15
	je L_402887
	cmpq $0xEB5,%r15
	je L_402886
L_70609:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402886:
L_70626:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp loop_857
.p2align 0x4
L_402887:
L_70622:
	movq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_70623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_75
.p2align 0x4
L_402888:
L_70621:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp loop_857
.p2align 0x4
L_402889:
L_70613:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_402890
L_70614:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402890:
L_70615:
	cmpl $0x0,0x18(%rbp)
	jl L_402892
L_70616:
	movl $0x0,0x1C(%rbp)
loop_858:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_402891
L_70617:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402891:
L_70618:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_70619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visitType_0
.p2align 0x4
L_402892:
L_70620:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402893:
L_70612:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp loop_857
.p2align 0x4
L_402894:
L_70611:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp loop_857
.p2align 0x4
L_402896:
L_70627:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402898:
L_70602:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402899:
L_70629:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_70630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70630
.p2align 0x4
.long 0x73D
L_70630:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_70600
.p2align 0x4
L_402900:
L_70596:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402901:
L_70634:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_70602
L_70635:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_402902
L_70637:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_70606
.p2align 0x4
L_402902:
L_70636:
	movq %r13,%r15
	jmp L_70606
.p2align 0x4
L_402906:
L_70638:
	xorl %ecx,%ecx
	jmp L_70601
.p2align 0x4
L_402907:
L_70590:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402908:
L_70639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_70640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70640
.p2align 0x4
.long 0x4E8
L_70640:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_70589
.p2align 0x4
.long 0x1
L_70623:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_402910
L_70624:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x6,0x8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402910:
L_70625:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_70619:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_858
.text
.p2align 0x4
.globl get_75
.hidden get_75
get_75:
L_70643:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_70644
L_70701:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_70702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70702
.p2align 0x4
.long 0x45F
L_70702:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_70644:
	movq 0x8(%rbp),%r10
	movq 0x10(%r10),%r11
	movq 0x8(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_402921
L_70646:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_402920
L_70647:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_70649:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_402919
L_70693:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD26,%r10
	jne L_402918
L_70694:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_402915
L_70650:
	incl %ecx
	jo L_402914
L_70652:
	cmpq $0x1,%r14
	je L_402911
L_70653:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_70649
.p2align 0x4
L_402911:
L_70654:
L_70655:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_402913
L_70657:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_192
L_70692:
	movl %ecx,0x0(%r15)
x_192:
	movq 0x0(%r13),%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_402912
L_70690:
	movq %r11,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_70691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_402912:
L_70659:
	movq %r14,%r15
L_70660:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_70661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_402913:
L_70656:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402914:
L_70651:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402915:
L_70696:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_70656
L_70697:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_402916
L_70699:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402916:
L_70698:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402918:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_70650
.p2align 0x4
L_402919:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_70650
.p2align 0x4
L_402920:
L_70700:
	xorl %ecx,%ecx
	jmp L_70655
.p2align 0x4
L_402921:
L_70645:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x521
L_70691:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_70660
.p2align 0x4
.long 0x1
L_70661:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_70662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_70662:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEFF0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_70663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_70663:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_70664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_70664:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70665
L_70688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_70689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70689
.p2align 0x4
.long 0x4AE
L_70689:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_70665:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_70666:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_70651
L_70667:
	cmpq $0x1,%r14
	je L_402923
L_70668:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_70666
.p2align 0x4
L_402923:
L_70669:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70670
L_70686:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_70687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70687
.p2align 0x4
.long 0x4E6
L_70687:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_70670:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_402924
L_70671:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_75:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_75+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_402924:
L_70685:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_75
.p2align 0x4
.long 0x1
rev_75:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_402930
L_70672:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_70673:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402929
.p2align 0x4,,0x7
L_70674:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_402928
L_70675:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_70673
.p2align 0x4
L_402928:
L_70677:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_70678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_402929:
L_70682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_70683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70683
.p2align 0x4
.long 0x45B
L_70683:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_70674
.p2align 0x4
L_402930:
L_70684:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_70677
.p2align 0x4
.long 0x1
L_70678:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70679
L_70680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_70681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70681
.p2align 0x4
.long 0x451
L_70681:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_70679:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl addDef_0
.hidden addDef_0
addDef_0:
L_70703:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_70704
L_70745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_70746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70746
.p2align 0x4
.long 0xFED
L_70746:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_70704:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_70705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_54
.p2align 0x4
.long 0x73A
L_70705:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70706
L_70743:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_70744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70744
.p2align 0x4
.long 0xE93
L_70744:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_70706:
	movq 0x20(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	cmpl $0x2,0x18(%rbp)
	jl L_70738
L_70707:
	cmpl $0x2,%r11d
	je L_402945
L_70708:
	movq 0x10(%r15),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r15
	movl 0x4(%r15),%r13d
	movl 0x0(%r15),%r11d
	movl %r11d,0x18(%rbp)
	movq 0x8(%r14),%r15
	movl 0x0(%r15),%r11d
	movl %r11d,%r10d
	cmpl $0x0,%r13d
	jl L_70738
L_70709:
	testl %r10d,%r10d
	jz L_402943
L_70710:
	cmpl $0x1,%r13d
	jl L_402942
L_70711:
	cmpl $0x1,%r11d
	jne L_70713
L_70716:
	movl $0x2,0x10(%rbp)
.p2align 0x4,,0x7
loop_859:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,%r11d
	movl 0x10(%rbp),%r10d
	cmpl $0x0,%r10d
	jl L_70735
L_70717:
	movl 0x18(%rbp),%r9d
	cmpl %r10d,%r9d
	jl L_402939
L_70718:
	cmpl %r10d,%r11d
	jnl L_402936
L_70723:
	movq 0x8(%r14),%r11
	movq %r11,0x20(%rbp)
	cmpl %r13d,%r9d
	movl %r13d,0x14(%rbp)
	je loop_859
L_70724:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70725
L_70731:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_70732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70732
.p2align 0x4
.long 0x985
L_70732:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_70725:
	movl 0x14(%rbp),%r15d
	incl %r15d
	jo L_402934
L_70728:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_402933
L_70730:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x19F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r14,0x8(%r15)
	movl $0x0,0x0(%r15)
	movq 0x0(%r11),%r15
	movq %r15,0x48(%rbp)
	movb $0xB,0x50(%rbp)
	addq $0x48,%rbp
	leaq (loop_860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_402933:
L_70729:
	movq $0xA,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402934:
L_70726:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402936:
L_70719:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70713
L_70721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r11d
	movl %r11d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r11
	movq %r11,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_70722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70722
.p2align 0x4
.long 0xFEC
L_70722:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_70713:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpl $0x2,0x0(%r14)
	je L_402937
L_70714:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402937:
L_70715:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402939:
L_70735:
	movq (globalObjptr+0x1F38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402942:
L_70738:
	movq (globalObjptr+0x1F30)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402943:
L_70739:
	movl $0x1,0x10(%rbp)
	jmp loop_859
.p2align 0x4
L_402945:
L_70741:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F7
loop_860:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp loop_859
.text
.p2align 0x4
.globl x_1429
.hidden x_1429
x_1429:
L_70747:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_70778
L_70748:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402960
L_70749:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r10),%r14
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_402959
L_70751:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_402958
L_70752:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_70754:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_402957
L_70769:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCEF,%r11
	jne L_402956
L_70770:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_402953
L_70755:
	incl %ecx
	movl %ecx,0x8(%rbp)
	jo L_402952
L_70757:
	cmpq $0x1,%r15
	je L_402948
L_70758:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_70754
.p2align 0x4
L_402948:
L_70759:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70760
L_70767:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_70768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70768
.p2align 0x4
.long 0xB28
L_70768:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_70760:
	movl 0x8(%rbp),%ecx
L_70761:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_402950
L_70763:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_70765
L_70766:
	movl %ecx,0x0(%r15)
L_70765:
	movq $0x13E1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x19DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402950:
L_70762:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402952:
L_70756:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402953:
L_70772:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_70762
L_70773:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_402954
L_70776:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_70775:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402954:
L_70774:
	movq %r11,%r15
	jmp L_70775
.p2align 0x4
L_402956:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_70755
.p2align 0x4
L_402957:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_70755
.p2align 0x4
L_402958:
L_70777:
	xorl %ecx,%ecx
	jmp L_70761
.p2align 0x4
L_402959:
L_70750:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402960:
L_70778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_70779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70779
.p2align 0x4
.long 0x45B
L_70779:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_70749
.text
.p2align 0x4
.globl bindVar_1
.hidden bindVar_1
bindVar_1:
L_70780:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_70781
L_70859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_70860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70860
.p2align 0x4
.long 0x45F
L_70860:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_70781:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_70782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
.long 0x4A7
L_70782:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70783
L_70857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_70858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70858
.p2align 0x4
.long 0x720
L_70858:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_70783:
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r11),%r14
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_70784
L_70785:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_402987
L_70786:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x20(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_70788:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_402986
L_70846:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE9,%r11
	jne L_402985
L_70847:
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_402981
L_70789:
	movl 0x20(%rbp),%r11d
	incl %r11d
	movl %r11d,0x24(%rbp)
	jo L_70790
L_70791:
	cmpq $0x1,%r15
	je L_402963
L_70792:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x20(%rbp)
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_70788
.p2align 0x4
L_402963:
L_70793:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70794
L_70844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_70845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70845
.p2align 0x4
.long 0x70A
L_70845:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_70794:
	movl 0x24(%rbp),%ecx
L_70795:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_70796
L_70797:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_70799
L_70843:
	movl %ecx,0x0(%r15)
L_70799:
	movq $0x13EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x19D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_70800:
	movq 0x0(%r15),%r14
	cmpq $0x2,%r14
	je L_402964
L_70801:
L_70802:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_70803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_402964:
L_70817:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_402976
L_70818:
	movq %r15,0x0(%r11)
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_402975
L_70819:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_70821:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_402974
L_70834:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE9,%r11
	jne L_402973
L_70835:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_402970
L_70822:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_402969
L_70823:
	cmpq $0x1,%r15
	je L_402965
L_70824:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_70821
.p2align 0x4
L_402965:
L_70825:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70826
L_70832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_70833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70833
.p2align 0x4
.long 0x846
L_70833:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_70826:
	movl 0x20(%rbp),%ecx
L_70827:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_402967
L_70828:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_70830
L_70831:
	movl %ecx,0x0(%r15)
L_70830:
	movq $0x13EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x19D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402967:
L_70796:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402969:
L_70790:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402970:
L_70837:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_70796
L_70838:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_402971
L_70841:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_70840:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402971:
L_70839:
	movq %r11,%r15
	jmp L_70840
.p2align 0x4
L_402973:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_70822
.p2align 0x4
L_402974:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_70822
.p2align 0x4
L_402975:
L_70842:
	xorl %ecx,%ecx
	jmp L_70827
.p2align 0x4
L_402976:
L_70784:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402981:
L_70849:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70850
L_70854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_70855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70855
.p2align 0x4
.long 0xFEE
L_70855:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_70850:
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_70796
L_70851:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_402982
L_70852:
	movq 0x48(%rbp),%r15
	jmp L_70800
.p2align 0x4
L_402982:
L_70853:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x48(%rbp),%r15
	jmp L_70800
.p2align 0x4
L_402985:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_70789
.p2align 0x4
L_402986:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_70789
.p2align 0x4
L_402987:
L_70856:
	xorl %ecx,%ecx
	jmp L_70795
.p2align 0x4
.long 0x1
L_70803:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_76+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
toString_76:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_76+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
rev_76:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_402992
L_70804:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_70805:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_402991
.p2align 0x4,,0x7
L_70806:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_402990
L_70807:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_70805
.p2align 0x4
L_402990:
L_70809:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_70810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_402991:
L_70814:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_70815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70815
.p2align 0x4
.long 0x45B
L_70815:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_70806
.p2align 0x4
L_402992:
L_70816:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_70809
.p2align 0x4
.long 0x1
L_70810:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEFF8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_150:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70811
L_70812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_70813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70813
.p2align 0x4
.long 0x451
L_70813:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_70811:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_76
.hidden get_76
get_76:
L_70861:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_70862
L_70949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_70950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70950
.p2align 0x4
.long 0x45F
L_70950:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_70862:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_70863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
.long 0x739
L_70863:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movb 0x38(%rbp),%r15b
	movb %r15b,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70864
L_70947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_70948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70948
.p2align 0x4
.long 0x5F6
L_70948:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_70864:
	movb 0x30(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_402995
L_70865:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402995:
L_70866:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_70869
	cmpq $0x2,%r15
	je L_70869
	cmpq $0x3,%r15
	je L_70869
	cmpq $0x5,%r15
	je L_70869
L_70867:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB0,%r15
	je L_403019
	cmpq $0xEB1,%r15
	je L_403018
	cmpq $0xEB2,%r15
	je L_403014
	cmpq $0xEB3,%r15
	je L_403013
	cmpq $0xEB4,%r15
	je L_402997
	cmpq $0xEB5,%r15
	je L_402996
L_70869:
	movq $0x1943,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_402996:
L_70942:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_70871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
L_402997:
L_70888:
	movq 0x0(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%rbp),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x38(%rbp)
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x40(%rbp)
	movq 0x0(%r9),%r14
	movq 0x10(%r11),%r10
	movq %r10,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_403012
L_70890:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_403011
L_70891:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x50(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_70893:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_403010
L_70931:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE8,%r11
	jne L_403009
L_70932:
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_403005
L_70894:
	movl 0x50(%rbp),%r11d
	incl %r11d
	movl %r11d,0x54(%rbp)
	jo L_403004
L_70896:
	cmpq $0x1,%r15
	je L_402998
L_70897:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x50(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_70893
.p2align 0x4
L_402998:
L_70898:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70899
L_70929:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_70930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70930
.p2align 0x4
.long 0x7AE
L_70930:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_70899:
	movl 0x54(%rbp),%ecx
L_70900:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_403002
L_70902:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_70904
L_70928:
	movl %ecx,0x0(%r15)
L_70904:
	movq $0x13ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq $0x19D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_70905:
	movq 0x0(%r15),%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_70869
L_70906:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_402999
L_70925:
	movq %r11,0x50(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_70926+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_402999:
L_70907:
L_70908:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_77+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_403002:
L_70901:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403004:
L_70895:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403005:
L_70934:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70935
L_70939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_70940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70940
.p2align 0x4
.long 0xFEF
L_70940:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_70935:
	movl 0x50(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_70901
L_70936:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_403006
L_70937:
	movq 0x58(%rbp),%r15
	jmp L_70905
.p2align 0x4
L_403006:
L_70938:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x50(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x58(%rbp),%r15
	jmp L_70905
.p2align 0x4
L_403009:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_70894
.p2align 0x4
L_403010:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_70894
.p2align 0x4
L_403011:
L_70941:
	xorl %ecx,%ecx
	jmp L_70900
.p2align 0x4
L_403012:
L_70889:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403013:
L_70887:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_70871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
L_403014:
L_70876:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_403015
L_70877:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403015:
L_70878:
	cmpl $0x0,0x18(%rbp)
	jl L_403017
L_70879:
	movl $0x0,0x1C(%rbp)
loop_861:
	movl 0x1C(%rbp),%r15d
	cmpl 0x18(%rbp),%r15d
	jnl L_70869
L_70881:
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_70882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
L_403017:
L_70886:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403018:
L_70875:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_70871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
L_403019:
L_70870:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_70871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
.long 0x5ED
L_70871:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70869
L_70873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_70874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70874
.p2align 0x4
.long 0x508
L_70874:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_70869
.p2align 0x4
.long 0x847
L_70926:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_70908
.p2align 0x4
.long 0x1
toString_77:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_77+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x639
L_70882:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70883
L_70884:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_70885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70885
.p2align 0x4
.long 0x518
L_70885:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_70883:
	incl 0x1C(%rbp)
	jmp loop_861
.p2align 0x4
.long 0x1
rev_77:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_403029
L_70909:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_70910:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403028
.p2align 0x4,,0x7
L_70911:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_403027
L_70912:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_70910
.p2align 0x4
L_403027:
L_70914:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_70915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_403028:
L_70922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_70923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70923
.p2align 0x4
.long 0x45B
L_70923:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_70911
.p2align 0x4
L_403029:
L_70924:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_70914
.p2align 0x4
.long 0x1
L_70915:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70916
L_70920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_70921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70921
.p2align 0x4
.long 0x451
L_70921:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_70916:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE70)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFD0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_151:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70917
L_70918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_70919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70919
.p2align 0x4
.long 0x451
L_70919:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_70917:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_74
.hidden get_74
get_74:
L_70951:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_70952
L_70988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_70989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70989
.p2align 0x4
.long 0x45F
L_70989:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_70952:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_70953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
.long 0x739
L_70953:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movb 0x38(%rbp),%r15b
	movb %r15b,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70954
L_70986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_70987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70987
.p2align 0x4
.long 0x5F6
L_70987:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_70954:
	movb 0x30(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_403033
L_70955:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403033:
L_70956:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_70959
	cmpq $0x2,%r15
	je L_70959
	cmpq $0x3,%r15
	je L_70959
	cmpq $0x5,%r15
	je L_70959
L_70957:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB0,%r15
	je L_403042
	cmpq $0xEB1,%r15
	je L_403041
	cmpq $0xEB2,%r15
	je L_403037
	cmpq $0xEB3,%r15
	je L_403036
	cmpq $0xEB5,%r15
	je L_403035
L_70959:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_403034
L_70961:
	movl %r14d,0x0(%r15)
	movq $0x1943,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403034:
L_70960:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403035:
L_70981:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_70963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_74
.p2align 0x4
L_403036:
L_70979:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_70963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_74
.p2align 0x4
L_403037:
L_70968:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_403038
L_70969:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403038:
L_70970:
	cmpl $0x0,0x30(%rbp)
	jl L_403040
L_70971:
	movl $0x0,0x34(%rbp)
loop_862:
	movl 0x34(%rbp),%r15d
	cmpl 0x30(%rbp),%r15d
	jnl L_70959
L_70973:
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_70974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_74
.p2align 0x4
L_403040:
L_70978:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403041:
L_70967:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_70963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_74
.p2align 0x4
L_403042:
L_70962:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_70963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_74
.p2align 0x4
.long 0x71D
L_70963:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70959
L_70965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_70966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70966
.p2align 0x4
.long 0x51C
L_70966:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_70959
.p2align 0x4
.long 0xF79
L_70974:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_70975
L_70976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_70977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_70977
.p2align 0x4
.long 0xBBD
L_70977:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_70975:
	incl 0x34(%rbp)
	jmp loop_862
.text
.p2align 0x4
.globl x_1428
.hidden x_1428
x_1428:
L_70990:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_71043
L_70991:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403073
L_70992:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x18(%r10),%r14
	movq 0x10(%r10),%r9
	movq %r9,0x10(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x20(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_70993
L_70994:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_403071
L_70995:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_70997:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_403070
L_71035:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCF6,%r11
	jne L_403069
L_71036:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_403066
L_70998:
	incl %ecx
	movl %ecx,0x8(%rbp)
	jo L_70999
L_71000:
	cmpq $0x1,%r15
	je L_403050
L_71001:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_70997
.p2align 0x4
L_403050:
L_71002:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71003
L_71033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_71034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71034
.p2align 0x4
.long 0xBEC
L_71034:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_71003:
	movl 0x8(%rbp),%ecx
L_71004:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71005
L_71006:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl newNode_1
L_71032:
	movl %ecx,0x0(%r15)
newNode_1:
	movq 0x10(%rbp),%r11
	movq 0x10(%r11),%r15
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x8(%rbp)
	movq $0x45,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x47,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x38(%rbp)
	movq %r13,0x0(%r10)
	addq $0x18,%r12
	movq %r11,0x8(%r10)
	movq 0x0(%r15),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r10,0x0(%r9)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r15)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_403062
L_71008:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_403061
L_71009:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_71011:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_403060
L_71024:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCF4,%r11
	jne L_403059
L_71025:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_403056
L_71012:
	incl %ecx
	movl %ecx,0x10(%rbp)
	jo L_403055
L_71013:
	cmpq $0x1,%r15
	je L_403051
L_71014:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_71011
.p2align 0x4
L_403051:
L_71015:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71016
L_71022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_71023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71023
.p2align 0x4
.long 0x563
L_71023:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_71016:
	movl 0x10(%rbp),%ecx
L_71017:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_403053
L_71018:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71020
L_71021:
	movl %ecx,0x0(%r15)
L_71020:
	movq $0x19E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r10)
	movq %r15,0x10(%r10)
	movq 0x0(%r14),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x0(%r9)
	movq %r15,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r9,0x0(%r14)
	movq $0x19ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r9,0x0(%r14)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403053:
L_71005:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403055:
L_70999:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403056:
L_71027:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71005
L_71028:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_403057
L_71030:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403057:
L_71029:
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403059:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_71012
.p2align 0x4
L_403060:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_71012
.p2align 0x4
L_403061:
L_71031:
	xorl %ecx,%ecx
	jmp L_71017
.p2align 0x4
L_403062:
L_70993:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403066:
L_71038:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71005
L_71039:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_403067
L_71041:
	movl %ecx,0x0(%r15)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403067:
L_71040:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403069:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_70998
.p2align 0x4
L_403070:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_70998
.p2align 0x4
L_403071:
L_71042:
	xorl %ecx,%ecx
	jmp L_71004
.p2align 0x4
L_403073:
L_71043:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_71044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71044
.p2align 0x4
.long 0x45F
L_71044:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_70992
.text
.p2align 0x4
.globl foreach_6
.hidden foreach_6
foreach_6:
L_71045:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_71046
L_73184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_73185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73185
.p2align 0x4
.long 0x45F
L_73185:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_71046:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_71048
L_71049:
	cmpl $0x0,%r13d
	jl L_72316
L_71050:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_863:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403629
.p2align 0x4,,0x7
L_71051:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_403628
L_71053:
	movslq %r15d,%r14
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_403626
	cmpq $0x2,%r15
	je L_403582
L_71054:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x197A,%rax
	cmpq $0x28,%rax
	ja L_403075
	leaq jumpTable_192(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_192:
.quad L_403556,L_403553,L_403540,L_403539,L_403532,L_403515,L_403499,L_403484,L_403480,L_403478,L_403476,L_403474,L_403459,L_403455,L_403454,L_403452,L_403445,L_403431,L_403368,L_403365,L_403342,L_403336,L_403334,L_403309,L_403297,L_403295,L_403281,L_403265,L_403263,L_403220,L_403216,L_403212,L_403180,L_403176,L_403161,L_403152,L_403150,L_403140,L_403136,L_403079,L_403077
.text
.p2align 0x4
L_403075:
L_71055:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	jne L_403076
.p2align 0x4,,0x7
L_71072:
	incl 0x14(%rbp)
	jmp loop_863
.p2align 0x4
L_403076:
L_71056:
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_71057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_403077:
L_73051:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEBC,%r13
	jne L_71072
L_73052:
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1434
.p2align 0x4
L_403079:
L_72964:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEBA,%r13
	je L_403094
	cmpq $0xEBB,%r13
	je L_403080
	jmp L_71072
.p2align 0x4
L_403080:
L_73048:
	movq 0x0(%r15),%r11
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_71072
L_73049:
	movq 0x8(%r14),%r10
	movq %r11,%r15
	movq %r10,%r14
setConst_0:
	movq $0x2795,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r11,0x18(%rbp)
	addq $0x10,%r12
	movq %r13,%r15
	movq %r14,%r13
x_194:
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r14
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_403092
L_71193:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_403091
L_71194:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_71196:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_403090
L_71209:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD23,%r11
	jne L_403089
L_71210:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_403086
L_71197:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_403085
L_71198:
	cmpq $0x1,%r15
	je L_403081
L_71199:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_71196
.p2align 0x4
L_403081:
L_71200:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403084
.p2align 0x4,,0x7
L_71201:
	movl 0x30(%rbp),%ecx
L_71202:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_403083
L_71203:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71205
L_71206:
	movl %ecx,0x0(%r15)
L_71205:
	movq $0x1A47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_71072
.p2align 0x4
L_403083:
L_71092:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403084:
L_71207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_71208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71208
.p2align 0x4
.long 0xEAC
L_71208:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_71201
.p2align 0x4
L_403085:
L_71064:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403086:
L_71212:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71213:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71186
L_71215:
	movl %ecx,0x0(%r15)
L_71186:
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403089:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_71197
.p2align 0x4
L_403090:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_71197
.p2align 0x4
L_403091:
L_71216:
	xorl %ecx,%ecx
	jmp L_71202
.p2align 0x4
L_403092:
L_71081:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403094:
L_72965:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,0x28(%rbp)
	je L_71072
L_72966:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x39,%r15
	je L_403134
L_72967:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_72968
L_72969:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF06,%r15
	je L_403132
	cmpq $0xF09,%r15
	je L_403095
L_72968:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq $0x1,0x18(%rbp)
	movq 0x28(%rbp),%r15
	jmp x_194
.p2align 0x4
L_403095:
L_73045:
	movq $0x0,0x38(%rbp)
doit_14:
	movq 0x30(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movq %r11,0x40(%rbp)
	cmpq $0x0,%r11
	jna L_71143
L_72972:
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_71081
L_72973:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_403129
L_72974:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movl $0x0,0x50(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_72976:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_72977
L_73027:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xD23,%r13
	jne L_72977
L_73028:
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r13
	cmpq %r13,0x18(%rbp)
	je L_403119
L_72977:
	movl 0x50(%rbp),%r13d
	incl %r13d
	movl %r13d,0x54(%rbp)
	jo L_71064
L_72978:
	cmpq $0x1,%r14
	je L_403096
L_72979:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movl %r13d,0x50(%rbp)
	jmp L_72976
.p2align 0x4
L_403096:
L_72980:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403117
.p2align 0x4,,0x7
L_72981:
	movl 0x54(%rbp),%ecx
L_72982:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72983:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_72985
L_73024:
	movl %ecx,0x0(%r15)
L_72985:
	movq $0x1E2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
L_72986:
	cmpq $0x1,0x40(%rbp)
	jna L_403114
L_72988:
	movq 0x30(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_71081
L_72989:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_403112
L_72990:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movl $0x0,0x30(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_72992:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_72993
L_73006:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xD23,%r13
	jne L_72993
L_73007:
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r15),%r13
	cmpq %r13,0x18(%rbp)
	je L_403102
L_72993:
	movl 0x30(%rbp),%r13d
	incl %r13d
	movl %r13d,0x34(%rbp)
	jo L_71064
L_72994:
	cmpq $0x1,%r14
	je L_403097
L_72995:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movl %r13d,0x30(%rbp)
	jmp L_72992
.p2align 0x4
L_403097:
L_72996:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403100
.p2align 0x4,,0x7
L_72997:
	movl 0x34(%rbp),%ecx
L_72998:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72999:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_73001
L_73003:
	movl %ecx,0x0(%r15)
L_73001:
	movq $0x1E2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_73002:
	movq $0x2793,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x48(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x28(%rbp),%r15
	jmp x_194
.p2align 0x4
L_403100:
L_73004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_73005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73005
.p2align 0x4
.long 0x1012
L_73005:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_72997
.p2align 0x4
L_403102:
L_73009:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403109
.p2align 0x4,,0x7
L_73010:
	movl 0x30(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_71092
L_73011:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_403105
L_73013:
	movq 0x50(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73001
L_73014:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13CA,%r15
	jne L_73001
L_73015:
	movq 0x0(%r14),%r15
L_73016:
	movq $0x1E2F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_73002
.p2align 0x4
L_403105:
L_73017:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
L_73018:
	movq 0x50(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73001
L_73019:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13CA,%r15
	jne L_73001
L_73020:
	movq 0x0(%r14),%r15
	jmp L_73016
.p2align 0x4
L_403109:
L_73021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_73022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73022
.p2align 0x4
.long 0x1013
L_73022:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_73010
.p2align 0x4
L_403112:
L_73023:
	xorl %ecx,%ecx
	jmp L_72998
.p2align 0x4
L_403114:
L_71143:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403117:
L_73025:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_73026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73026
.p2align 0x4
.long 0x1014
L_73026:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_72981
.p2align 0x4
L_403119:
L_73030:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403126
.p2align 0x4,,0x7
L_73031:
	movl 0x50(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_71092
L_73032:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_403122
L_73034:
	movq 0x58(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_72985
L_73035:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13CA,%r15
	jne L_72985
L_73036:
	movq 0x0(%r14),%r15
L_73037:
	movq $0x1E2F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	jmp L_72986
.p2align 0x4
L_403122:
L_73038:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x50(%rbp),%r13d
	movl %r13d,0x0(%r14)
L_73039:
	movq 0x58(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_72985
L_73040:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13CA,%r15
	jne L_72985
L_73041:
	movq 0x0(%r14),%r15
	jmp L_73037
.p2align 0x4
L_403126:
L_73042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_73043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73043
.p2align 0x4
.long 0x1015
L_73043:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_73031
.p2align 0x4
L_403129:
L_73044:
	xorl %ecx,%ecx
	jmp L_72982
.p2align 0x4
L_403132:
L_72970:
	movl 0x0(%r14),%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x38(%rbp)
	jmp doit_14
.p2align 0x4
L_403134:
L_73046:
	movq $0x0,0x38(%rbp)
	jmp doit_14
.p2align 0x4
L_403136:
L_72946:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq %r10,0x18(%rbp)
	movq 0x10(%r15),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x30(%rbp)
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEBA,%r13
	jne L_71072
L_72947:
	movq 0x8(%r15),%r13
	movq %r13,%r15
	andq $0xFF,%r15
	cmpq $0x3D,%r15
	je L_403138
L_72948:
	andq $0x3,%r13
	jnz L_71072
L_72949:
	jmp L_71072
.p2align 0x4
L_403138:
L_72950:
	movq %r11,0x50(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_72951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_403140:
L_72920:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEBB,%r13
	je L_403145
	cmpq $0xEBC,%r13
	je L_403141
	jmp L_71072
.p2align 0x4
L_403141:
L_72939:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_403144
L_72941:
	testl %r11d,%r11d
	jnz L_71072
L_72943:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_72944:
L_72926:
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_72927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_403144:
L_71048:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403145:
L_72921:
	movq 0x0(%r15),%r13
L_72922:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_71072
L_72923:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_403147
	cmpq $0xE4C,%r15
	je L_403146
	jmp L_71072
.p2align 0x4
L_403146:
L_72934:
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (x_212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toWord_0
.p2align 0x4
L_403147:
L_72924:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_72925:
	jmp L_72926
.p2align 0x4
L_403150:
L_72881:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_71072
L_72882:
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_72883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_403152:
L_72853:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEBA,%r13
	jne default_1
L_72867:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r10
	movq %r10,0x28(%rbp)
	movq %r13,%r10
	andq $0xFF,%r10
	cmpq $0x47,%r10
	je L_403159
L_72868:
	andq $0x3,%r13
	jnz default_1
L_72869:
default_1:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB7,%r14
	je L_403158
	cmpq $0xEB8,%r14
	je L_403157
	cmpq $0xEB9,%r14
	je L_71072
	cmpq $0xEBA,%r14
	je L_403155
	cmpq $0xEBB,%r14
	je L_71072
	cmpq $0xEBC,%r14
	je L_403153
L_72854:
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_72855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_403153:
L_72866:
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r13,%r14
vs_5:
	movq %r15,0x28(%rbp)
	movq $0x339F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_403155:
L_72864:
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r13,%r14
	jmp vs_5
.p2align 0x4
L_403157:
L_72859:
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_72860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_403158:
L_72858:
	movq 0x0(%r15),%r11
	movq %r11,%r15
	movq %r13,%r14
	jmp vs_5
.p2align 0x4
L_403159:
L_72870:
	cmpq $0x1,%r11
	je L_403160
L_72871:
	movq %r11,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_72872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_403160:
L_71304:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403161:
L_72823:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_71072
L_72824:
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_71081
L_72825:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_403173
L_72826:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_72828:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_72829
L_72844:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD13,%r13
	jne L_72829
L_72845:
	movq 0x8(%r14),%r13
	movq 0x18(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_403168
L_72829:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_71064
L_72830:
	cmpq $0x1,%r15
	je L_403162
L_72831:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_72828
.p2align 0x4
L_403162:
L_72832:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403166
.p2align 0x4,,0x7
L_72833:
	movl 0x28(%rbp),%ecx
L_72834:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72835:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_72837
L_72841:
	movl %ecx,0x0(%r15)
L_72837:
	movq $0x27A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x739,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x73B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1A27,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_72838:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_71072
L_72839:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0xF,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_403166:
L_72842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_72843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72843
.p2align 0x4
.long 0x5E0
L_72843:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_72833
.p2align 0x4
L_403168:
L_72847:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72848:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_403169
L_72850:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_72838
.p2align 0x4
L_403169:
L_72849:
	movq %r13,%r15
	jmp L_72838
.p2align 0x4
L_403173:
L_72851:
	xorl %ecx,%ecx
	jmp L_72834
.p2align 0x4
L_403176:
L_72818:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEBA,%r13
	jne L_71072
L_72819:
	movq 0x8(%r15),%r13
	movq %r13,%r15
	andq $0xFF,%r15
	cmpq $0x52,%r15
	je L_403178
L_72820:
	andq $0x3,%r13
	jnz L_71072
L_72821:
	jmp L_71072
.p2align 0x4
L_403178:
L_72822:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403180:
L_72759:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x0(%r13),%r15
	movq 0x10(%r13),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xEB6,%r13
	je L_403197
	cmpq $0xEB7,%r13
	je L_403183
	cmpq $0xEBA,%r13
	je L_403182
	cmpq $0xEBC,%r13
	je L_403181
	jmp L_71072
.p2align 0x4
L_403181:
L_72817:
	movq 0x0(%r10),%r15
	movq %r15,0x28(%rbp)
	movq $0x33B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_403182:
L_72816:
	movq 0x0(%r10),%r15
	movq %r15,0x28(%rbp)
	movq $0x33B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_403183:
L_72789:
	movq 0x0(%r10),%r11
	movq %r11,0x20(%rbp)
	cmpq $0x1,%r15
	je L_71304
L_72790:
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r14),%r11
	movq 0x10(%r15),%r10
	movq %r10,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_71081
L_72791:
	movq %r15,0x0(%r9)
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_403194
L_72792:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_72794:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_403193
L_72807:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD0F,%r11
	jne L_403192
L_72808:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_403189
L_72795:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_71064
L_72796:
	cmpq $0x1,%r15
	je L_403184
L_72797:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_72794
.p2align 0x4
L_403184:
L_72798:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72799
L_72805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_72806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72806
.p2align 0x4
.long 0xF30
L_72806:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_72799:
	movl 0x38(%rbp),%ecx
L_72800:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72801:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_72803
L_72804:
	movl %ecx,0x0(%r15)
L_72803:
	movq $0x1A1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x33B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_403189:
L_72810:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72811:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71186
L_72813:
	movl %ecx,0x0(%r15)
	jmp L_71186
.p2align 0x4
L_403192:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_72795
.p2align 0x4
L_403193:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_72795
.p2align 0x4
L_403194:
L_72814:
	xorl %ecx,%ecx
	jmp L_72800
.p2align 0x4
L_403197:
L_72760:
	movq 0x0(%r10),%r9
	movq 0x10(%r9),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_71081
L_72761:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_403210
L_72762:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x18(%rbp)
	movq %r10,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_72764:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_403209
L_72773:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD0F,%r11
	jne L_403208
L_72774:
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_403202
L_72765:
	movl 0x18(%rbp),%r11d
	incl %r11d
	jo L_71064
L_72766:
	cmpq $0x1,%r15
	je L_403198
L_72767:
	movl %r11d,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_72764
.p2align 0x4
L_403198:
	movl %r11d,%ecx
L_72769:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72770:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71072
L_72772:
	movl %ecx,0x0(%r15)
	jmp L_71072
.p2align 0x4
L_403202:
L_72776:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403207
.p2align 0x4,,0x7
L_72777:
	movl 0x18(%rbp),%r10d
	movslq %r10d,%r15
	movq (globalObjptr+0x1070)(%rip),%r9
	addq 0x0(%r9),%r15
	jo L_71092
L_72778:
	movq %r15,0x0(%r9)
	movq (globalObjptr+0x1078)(%rip),%r9
	cmpl %r10d,0x0(%r9)
	jl L_403204
L_72780:
	movq 0x20(%rbp),%r10
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_71072
L_72781:
	movq 0x18(%r10),%r11
	movq 0x10(%r10),%r13
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r15
L_72782:
	movq $0x1097,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r14,0x10(%r10)
	movq %r15,0x18(%r10)
	movq %r10,0x20(%rbp)
	addq $0x28,%r12
	addq $0x20,%rbp
	leaq (L_71348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nonSelect_0
.p2align 0x4
L_403204:
L_72783:
	movq (globalObjptr+0x1078)(%rip),%r10
	movl 0x18(%rbp),%r9d
	movl %r9d,0x0(%r10)
L_72784:
	movq 0x20(%rbp),%r10
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_71072
L_72785:
	movq 0x18(%r10),%r11
	movq 0x10(%r10),%r13
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r15
	jmp L_72782
.p2align 0x4
L_403207:
L_72786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_72787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72787
.p2align 0x4
.long 0x52C
L_72787:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_72777
.p2align 0x4
L_403208:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_72765
.p2align 0x4
L_403209:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_72765
.p2align 0x4
L_403210:
L_72788:
	xorl %ecx,%ecx
	jmp L_72769
.p2align 0x4
L_403212:
L_72704:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r13),%r10
	movq 0x10(%r13),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r11
	je L_71072
L_72705:
	movq 0x8(%r10),%r15
L_72706:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_71072
L_72707:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEB4,%r13
	jne L_71072
L_72708:
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_72709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_60
.p2align 0x4
L_403216:
L_72649:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r10
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r11
	je L_71072
L_72650:
	movq 0x8(%r10),%r15
L_72651:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_71072
L_72652:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEB4,%r13
	jne L_71072
L_72653:
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_72654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_60
.p2align 0x4
L_403220:
L_72546:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r11
	movq %r11,0x18(%rbp)
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r14),%r9
	movq %r9,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB6,%r14
	je L_403236
	cmpq $0xEB7,%r14
	je L_403222
	cmpq $0xEBC,%r14
	je L_403221
	jmp L_71072
.p2align 0x4
L_403221:
L_72647:
	movq %r10,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x30,%rbp
	leaq (L_72648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1399
.p2align 0x4
L_403222:
L_72620:
	movq 0x0(%r15),%r14
	movq 0x28(%rbp),%r11
	cmpq $0x1,%r11
	je L_71072
L_72621:
	movq $0x27BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x28A1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x72B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x13C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x13CB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x20(%rbp)
	movq %r13,0x0(%r10)
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq 0x18(%rbp),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x30(%rbp)
	movq 0x0(%r10),%r14
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_71081
L_72622:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_403233
L_72623:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_72625:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_403232
L_72638:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD05,%r11
	jne L_403231
L_72639:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x28)(%rip)
	je L_403228
L_72626:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_71064
L_72627:
	cmpq $0x1,%r15
	je L_403223
L_72628:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x28)(%rip),%r14
	jmp L_72625
.p2align 0x4
L_403223:
L_72629:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403226
.p2align 0x4,,0x7
L_72630:
	movl 0x18(%rbp),%ecx
L_72631:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72632:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_72634
L_72635:
	movl %ecx,0x0(%r15)
L_72634:
	movq $0x1A0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_71072
.p2align 0x4
L_403226:
L_72636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_72637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72637
.p2align 0x4
.long 0x596
L_72637:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_72630
.p2align 0x4
L_403228:
L_72641:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72642:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71186
L_72644:
	movl %ecx,0x0(%r15)
	jmp L_71186
.p2align 0x4
L_403231:
	movq %r14,(localObjptr+0x28)(%rip)
	jmp L_72626
.p2align 0x4
L_403232:
	movq %r14,(localObjptr+0x28)(%rip)
	jmp L_72626
.p2align 0x4
L_403233:
L_72645:
	xorl %ecx,%ecx
	jmp L_72631
.p2align 0x4
L_403236:
L_72547:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x28(%rbp)
	je L_71304
L_72548:
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq %r9,0x20(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_71081
L_72549:
	movq %r15,0x0(%r9)
	movq 0x0(%r11),%r9
	cmpq $0x1,%r9
	je L_403260
L_72550:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r10,%r14
.p2align 0x4,,0x7
L_72552:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_403259
L_72611:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD05,%r11
	jne L_403258
L_72612:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_403242
L_72553:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_71064
L_72554:
	cmpq $0x1,%r15
	je L_403237
L_72555:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_72552
.p2align 0x4
L_403237:
L_72556:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72557
L_72609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_72610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72610
.p2align 0x4
.long 0xF30
L_72610:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_72557:
	movl 0x38(%rbp),%ecx
L_72558:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72559:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_72561
L_72608:
	movl %ecx,0x0(%r15)
L_72561:
	movq $0x27BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x28A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x72B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_72562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_403242:
L_72614:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72615:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_403256
L_72617:
	movl %ecx,0x0(%r15)
	movq %r11,0x20(%rbp)
.p2align 0x4,,0x7
L_72573:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403255
.p2align 0x4,,0x7
L_72574:
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq 0x28(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_71081
L_72575:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_403253
L_72576:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_72578:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_403252
L_72591:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD05,%r11
	jne L_403251
L_72592:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_403248
L_72579:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_71064
L_72580:
	cmpq $0x1,%r15
	je L_403243
L_72581:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_72578
.p2align 0x4
L_403243:
L_72582:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403246
.p2align 0x4,,0x7
L_72583:
	movl 0x18(%rbp),%ecx
L_72584:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72585:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_72587
L_72588:
	movl %ecx,0x0(%r15)
L_72587:
	movq $0x1A0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_71072
.p2align 0x4
L_403246:
L_72589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_72590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72590
.p2align 0x4
.long 0x596
L_72590:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_72583
.p2align 0x4
L_403248:
L_72594:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72595:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71186
L_72597:
	movl %ecx,0x0(%r15)
	jmp L_71186
.p2align 0x4
L_403251:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_72579
.p2align 0x4
L_403252:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_72579
.p2align 0x4
L_403253:
L_72598:
	xorl %ecx,%ecx
	jmp L_72584
.p2align 0x4
L_403255:
L_72599:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_72600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72600
.p2align 0x4
.long 0x45A
L_72600:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_72574
.p2align 0x4
L_403256:
L_72616:
	movq %r11,0x20(%rbp)
	jmp L_72573
.p2align 0x4
L_403258:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_72553
.p2align 0x4
L_403259:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_72553
.p2align 0x4
L_403260:
L_72618:
	xorl %ecx,%ecx
	jmp L_72558
.p2align 0x4
L_403263:
L_72525:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_71304
L_72526:
	movq %r14,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_72527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_403265:
L_72491:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_71072
L_72492:
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_71081
L_72493:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_403278
L_72494:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_72496:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_72497
L_72516:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCFD,%r13
	jne L_72497
L_72517:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x18(%rbp)
	je L_403273
L_72497:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_71064
L_72498:
	cmpq $0x1,%r15
	je L_403266
L_72499:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_72496
.p2align 0x4
L_403266:
L_72500:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403271
.p2align 0x4,,0x7
L_72501:
	movl 0x28(%rbp),%ecx
L_72502:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72503:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_72505
L_72513:
	movl %ecx,0x0(%r15)
L_72505:
	movq $0x27D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x19FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_72506:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	jne L_403268
.p2align 0x4,,0x7
L_72509:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_71072
L_72510:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0x9,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_403268:
L_72507:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0xC,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_72508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_403271:
L_72514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_72515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72515
.p2align 0x4
.long 0x5E0
L_72515:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_72501
.p2align 0x4
L_403273:
L_72519:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72520:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_403274
L_72522:
	movl %ecx,0x0(%r15)
	movq %r13,0x18(%rbp)
	jmp L_72506
.p2align 0x4
L_403274:
L_72521:
	movq %r13,0x18(%rbp)
	jmp L_72506
.p2align 0x4
L_403278:
L_72523:
	xorl %ecx,%ecx
	jmp L_72502
.p2align 0x4
L_403281:
L_72464:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_71304
L_72465:
	movq $0x1067,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1067,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x1069,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x27DD,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x20(%rbp)
	movq %r10,0x0(%r9)
	movq %r11,0x8(%r9)
	movq %r13,0x10(%r9)
	addq $0x20,%r12
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_71081
L_72466:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_403292
L_72467:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_72469:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_403291
L_72482:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCF7,%r11
	jne L_403290
L_72483:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_403287
L_72470:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_71064
L_72471:
	cmpq $0x1,%r15
	je L_403282
L_72472:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_72469
.p2align 0x4
L_403282:
L_72473:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403285
.p2align 0x4,,0x7
L_72474:
	movl 0x30(%rbp),%ecx
L_72475:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72476:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_72478
L_72479:
	movl %ecx,0x0(%r15)
L_72478:
	movq $0x19EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_71072
.p2align 0x4
L_403285:
L_72480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_72481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72481
.p2align 0x4
.long 0xEAC
L_72481:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_72474
.p2align 0x4
L_403287:
L_72485:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72486:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71186
L_72488:
	movl %ecx,0x0(%r15)
	jmp L_71186
.p2align 0x4
L_403290:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_72470
.p2align 0x4
L_403291:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_72470
.p2align 0x4
L_403292:
L_72489:
	xorl %ecx,%ecx
	jmp L_72475
.p2align 0x4
L_403295:
L_72410:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movl 0x0(%r15),%r11d
	movl %r11d,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	cmpq $0x1,%r15
	je L_71072
L_72411:
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_72412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_54
.p2align 0x4
L_403297:
L_72368:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r14
	movq 0x10(%r13),%r11
	movq %r11,0x30(%rbp)
	cmpq $0x1,%r15
	jne L_403308
.p2align 0x4,,0x7
L_72371:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403307
.p2align 0x4,,0x7
L_72372:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB6,%r14
	je L_403305
	cmpq $0xEB7,%r14
	je L_403303
	cmpq $0xEB8,%r14
	je L_403302
	cmpq $0xEBB,%r14
	je L_403300
	cmpq $0xEBC,%r14
	je L_403298
	jmp L_71072
.p2align 0x4
L_403298:
L_72398:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_71048
L_72400:
	movl %r13d,0x40(%rbp)
	movq $0x3923,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_72401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
L_403300:
L_72395:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x27ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_72396:
	movq %r14,0x18(%rbp)
L_72383:
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_72384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_403302:
L_72388:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_72389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_403303:
L_72377:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_71048
L_72379:
	movl %r13d,0x40(%rbp)
	movq $0x391B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_72380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
L_403305:
L_72373:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,0x28(%rbp)
	je L_71072
L_72374:
	movq %r14,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_72375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_403307:
L_72407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_72408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72408
.p2align 0x4
.long 0x554
L_72408:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_72372
.p2align 0x4
L_403308:
L_72369:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x8E1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x8E3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	movq %r14,0x10(%r10)
	movq %r13,0x18(%r10)
	movq %r15,0x20(%r10)
	addq $0x30,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r10)
	movq %r10,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_72370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1429
.p2align 0x4
L_403309:
L_72292:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%r14),%r11
	movq 0x28(%r14),%r10
	movq %r10,0x18(%rbp)
	movq 0x20(%r14),%r10
	movq %r10,0x20(%rbp)
	movq 0x18(%r14),%r10
	movq %r10,0x28(%rbp)
	movq 0x10(%r14),%r10
	movq 0x8(%r14),%r9
	movq %r9,0x30(%rbp)
	movq 0x0(%r14),%r9
	movq %r9,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB7,%r14
	je L_403333
	cmpq $0xEB8,%r14
	je L_403332
	cmpq $0xEB9,%r14
	je L_72295
	cmpq $0xEBA,%r14
	je L_403327
	cmpq $0xEBB,%r14
	je L_403326
	cmpq $0xEBC,%r14
	je L_403310
L_72293:
	movq %r10,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_72294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1389
.p2align 0x4
L_403310:
L_72318:
	movq 0x8(%r15),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r15),%r9
	movq %r9,0x50(%rbp)
	movq 0x8(%r11),%r9
	movq %r9,0x58(%rbp)
	movq 0x0(%r11),%r14
	movq 0x10(%r10),%r11
	movq %r11,0x60(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_71081
L_72319:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_403324
L_72320:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x68(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_72322:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_403323
L_72357:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB3,%r11
	jne L_403322
L_72358:
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_403318
L_72323:
	movl 0x68(%rbp),%r11d
	incl %r11d
	movl %r11d,0x6C(%rbp)
	jo L_71064
L_72324:
	cmpq $0x1,%r15
	je L_403311
L_72325:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x68(%rbp)
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_72322
.p2align 0x4
L_403311:
L_72326:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72327
L_72355:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_72356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72356
.p2align 0x4
.long 0xEB2
L_72356:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_72327:
	movl 0x6C(%rbp),%ecx
L_72328:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72329:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_72331
L_72354:
	movl %ecx,0x0(%r15)
L_72331:
	movq $0x1411,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_207:
	cmpb $0x1,0x0(%r15)
	je L_403313
L_72332:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_403312
L_72351:
	movq %r11,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_72352+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_403312:
L_72333:
L_72334:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_81+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_403313:
L_72353:
	movq $0x33A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_72294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_403318:
L_72360:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72361
L_72365:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_72366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72366
.p2align 0x4
.long 0xEB3
L_72366:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_72361:
	movl 0x68(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_71092
L_72362:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_403319
L_72363:
	movq 0x70(%rbp),%r15
	jmp x_207
.p2align 0x4
L_403319:
L_72364:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x68(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x70(%rbp),%r15
	jmp x_207
.p2align 0x4
L_403322:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_72323
.p2align 0x4
L_403323:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_72323
.p2align 0x4
L_403324:
L_72367:
	xorl %ecx,%ecx
	jmp L_72328
.p2align 0x4
L_403326:
L_72295:
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_72296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
L_403327:
L_72305:
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x58(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_71048
L_72307:
	cmpl $0x0,%r13d
	jl L_403329
L_72308:
	movl $0x0,0x5C(%rbp)
loop_871:
	movl 0x58(%rbp),%r15d
	cmpl %r15d,0x5C(%rbp)
	jl L_403328
L_72309:
	movq $0x33A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_72294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_403328:
L_72310:
	movslq 0x5C(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_72311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
L_403329:
L_72316:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403332:
L_72303:
	movq %r10,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_72294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1389
.p2align 0x4
L_403333:
L_72302:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x33A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_72294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_403334:
L_72290:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x8(%r13),%r15
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_71064
L_72291:
	movl %r13d,0x0(%r14)
	movq %r15,0x20(%rbp)
	movq %r11,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_74
.p2align 0x4
L_403336:
L_72227:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r11
	movq 0x10(%r14),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r14),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r15
	je L_403337
L_72228:
	movq %r15,0x50(%rbp)
	movq %r11,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_72229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_403337:
L_72289:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_72242:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_72243:
	addl 0x0(%r14),%ecx
	movl %ecx,0x28(%rbp)
	jo L_71064
L_72244:
	cmpq $0x1,%r15
	je L_403338
L_72245:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_72243
.p2align 0x4
L_403338:
L_72246:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72247
L_72265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_72266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72266
.p2align 0x4
.long 0x635
L_72266:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_72247:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_403339
L_72248:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_72249:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_72250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_10
.p2align 0x4
L_403339:
L_72264:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_72249
.p2align 0x4
L_403342:
L_72161:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r10
	cmpq $0x1,%r15
	je L_71072
L_72162:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xEBB,%r15
	je L_403363
	cmpq $0xEBC,%r15
	je L_403343
	jmp L_71072
.p2align 0x4
L_403343:
L_72211:
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r13
	jne L_71048
L_72213:
	testl %r9d,%r9d
	jnz L_403360
L_72222:
	movq 0x0(%r11),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_403359
L_72223:
.p2align 0x4,,0x7
set_3:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_71048
L_72171:
	cmpl $0xA,%r13d
	jg L_403357
L_72172:
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_72173:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403356
.p2align 0x4,,0x7
L_72174:
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_71081
L_72175:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_403354
L_72176:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_72178:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_72179
L_72191:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCC7,%r13
	jne L_72179
L_72192:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x18(%rbp)
	je L_403349
L_72179:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_71064
L_72180:
	cmpq $0x1,%r15
	je L_403344
L_72181:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_72178
.p2align 0x4
L_403344:
L_72182:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403347
.p2align 0x4,,0x7
L_72183:
	movl 0x28(%rbp),%ecx
L_72184:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72185:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_72187
L_72188:
	movl %ecx,0x0(%r15)
L_72187:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x198F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_71072
.p2align 0x4
L_403347:
L_72189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_72190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72190
.p2align 0x4
.long 0x596
L_72190:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_72183
.p2align 0x4
L_403349:
L_72194:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72195:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_403350
L_72198:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_72197:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_71072
.p2align 0x4
L_403350:
L_72196:
	movq %r13,%r15
	jmp L_72197
.p2align 0x4
L_403354:
L_72199:
	xorl %ecx,%ecx
	jmp L_72184
.p2align 0x4
L_403356:
L_72200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_72201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72201
.p2align 0x4
.long 0x554
L_72201:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_72174
.p2align 0x4
L_403357:
L_72202:
	movq %r15,0x48(%rbp)
	movq $0xA,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x38(%rbp)
	movl $0x0,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_72203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_403359:
L_72224:
	movq %r11,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_72225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_403360:
L_72214:
	movq 0x0(%r11),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_403361
L_72217:
	movq %r11,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_72218+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_403361:
L_72215:
L_72216:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE60)(%rip),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (set_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_403363:
L_72163:
	movq %r14,0x40(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (toString_80+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_32
.p2align 0x4
L_403365:
L_72157:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,0x0(%r13)
	je L_71072
L_72158:
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_71064
L_72159:
	movl %r15d,0x0(%r14)
	jmp L_71072
.p2align 0x4
L_403368:
L_71700:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1EA4,%r15
	je L_403406
	cmpq $0x1EA5,%r15
	je L_403380
L_71701:
	movq 0x40(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%r11),%r15
	movq 0x30(%r11),%r14
	movq 0x28(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x20(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x18(%r11),%r10
	movq 0x10(%r11),%r9
	movq %r9,0x30(%rbp)
	movq 0x8(%r11),%r9
	movq %r9,0x38(%rbp)
	movq 0x0(%r11),%r9
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xEB7,%r13
	je L_403377
	cmpq $0xEB8,%r13
	je L_403376
	cmpq $0xEB9,%r13
	je L_403374
	cmpq $0xEBA,%r13
	je L_403372
	cmpq $0xEBB,%r13
	je L_403371
	cmpq $0xEBC,%r13
	je L_403369
L_71702:
	movq %r10,0x60(%rbp)
	movq 0x0(%r11),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_71703+0x0)(%rip),%r13
	movq %r13,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1394
.p2align 0x4
L_403369:
L_71809:
	movq 0x8(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_71048
L_71811:
	movl %r13d,0x60(%rbp)
	movq $0x39AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_71812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_24
.p2align 0x4
L_403371:
L_71798:
	movq %r15,0x60(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_71799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ofConst_0
.p2align 0x4
L_403372:
L_71794:
	movq 0x8(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_71048
L_71796:
	movl %r13d,0x60(%rbp)
	movq $0x39AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_71797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_24
.p2align 0x4
L_403374:
L_71791:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_71792:
	movq %r14,0x30(%rbp)
	movq %r15,0x20(%rbp)
L_71705:
	movq $0x1,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_71706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3835
.p2align 0x4
L_403376:
L_71774:
	movq %r10,0x60(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x58(%rbp)
	movl 0x0(%r11),%r15d
	movl %r15d,0x20(%rbp)
	addq $0x58,%rbp
	leaq (L_71775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1394
.p2align 0x4
L_403377:
L_71736:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_71048
L_71738:
	cmpl $0x1,%r13d
	je L_403378
L_71739:
	movl %r13d,0x60(%rbp)
	movq $0x39AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_71740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_24
.p2align 0x4
L_403378:
L_71773:
	movq (globalObjptr+0x1EA8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403380:
L_71983:
	movq 0x58(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x50(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%r11),%r15
	movq 0x40(%r11),%r14
	movq 0x38(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x30(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x28(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x20(%r11),%r10
	movq 0x18(%r11),%r9
	movq %r9,0x40(%rbp)
	movq 0x10(%r11),%r9
	movq %r9,0x48(%rbp)
	movq 0x8(%r11),%r9
	movq %r9,0x50(%rbp)
	movq 0x0(%r11),%r9
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x10(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xEB7,%r13
	je L_403403
	cmpq $0xEB8,%r13
	je L_403402
	cmpq $0xEB9,%r13
	je L_403386
	cmpq $0xEBA,%r13
	je L_403384
	cmpq $0xEBB,%r13
	je L_403383
	cmpq $0xEBC,%r13
	je L_403381
L_71984:
	movq %r10,0x78(%rbp)
	movq 0x0(%r11),%r13
	movq %r13,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_71985+0x0)(%rip),%r13
	movq %r13,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1398
.p2align 0x4
L_403381:
L_72067:
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_71048
L_72069:
	movl %r13d,0x78(%rbp)
	movq $0x3887,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	addq $0x70,%rbp
	leaq (L_72070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_403383:
L_72066:
	movq %r15,0x78(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_71985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ofConst_0
.p2align 0x4
L_403384:
L_72062:
	movq 0x10(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_71048
L_72064:
	movl %r13d,0x78(%rbp)
	movq $0x3887,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	addq $0x70,%rbp
	leaq (L_72065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_403386:
L_72059:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_72060:
	movq %r14,0x30(%rbp)
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_71987:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403400
.p2align 0x4,,0x7
L_71988:
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x38(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x60(%rbp),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r11)
	jne L_403399
L_72009:
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r14
	movq 0x28(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_71081
L_72010:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_403397
L_72011:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_72013:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_403396
L_72026:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB1,%r11
	jne L_403395
L_72027:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_403392
L_72014:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_71064
L_72015:
	cmpq $0x1,%r15
	je L_403387
L_72016:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_72013
.p2align 0x4
L_403387:
L_72017:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403390
.p2align 0x4,,0x7
L_72018:
	movl 0x18(%rbp),%ecx
L_72019:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72020:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_72022
L_72023:
	movl %ecx,0x0(%r15)
L_72022:
	movq $0x1963,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_71072
.p2align 0x4
L_403390:
L_72024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_72025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72025
.p2align 0x4
.long 0x1007
L_72025:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_72018
.p2align 0x4
L_403392:
L_72029:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72030:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71186
L_72032:
	movl %ecx,0x0(%r15)
	jmp L_71186
.p2align 0x4
L_403395:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_72014
.p2align 0x4
L_403396:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_72014
.p2align 0x4
L_403397:
L_72033:
	xorl %ecx,%ecx
	jmp L_72019
.p2align 0x4
L_403399:
L_71989:
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_71990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
L_403400:
L_72034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_72035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72035
.p2align 0x4
.long 0xF07
L_72035:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_71988
.p2align 0x4
L_403402:
L_72043:
	movq %r10,0x78(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x70(%rbp)
	movl 0x0(%r11),%r15d
	movl %r15d,0x28(%rbp)
	addq $0x70,%rbp
	leaq (L_72044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1398
.p2align 0x4
L_403403:
L_72037:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_71048
L_72039:
	cmpl $0x1,%r13d
	je L_71773
L_72040:
	movl %r13d,0x78(%rbp)
	movq $0x3887,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	addq $0x70,%rbp
	leaq (L_72041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_403406:
L_71832:
	movq 0x38(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x30(%r11),%r15
	movq 0x28(%r11),%r14
	movq 0x20(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x18(%r11),%r10
	movq 0x10(%r11),%r9
	movq %r9,0x28(%rbp)
	movq 0x8(%r11),%r9
	movq %r9,0x30(%rbp)
	movq 0x0(%r11),%r9
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xEB7,%r13
	je L_403428
	cmpq $0xEB8,%r13
	je L_403427
	cmpq $0xEB9,%r13
	je L_403412
	cmpq $0xEBA,%r13
	je L_403410
	cmpq $0xEBB,%r13
	je L_403409
	cmpq $0xEBC,%r13
	je L_403407
L_71833:
	movq %r10,0x50(%rbp)
	movq 0x0(%r11),%r13
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_71834+0x0)(%rip),%r13
	movq %r13,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1396
.p2align 0x4
L_403407:
L_71906:
	movq 0x8(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_71048
L_71908:
	movl %r13d,0x50(%rbp)
	movq $0x38EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	addq $0x18,%r12
	addq $0x48,%rbp
	leaq (L_71909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_403409:
L_71899:
	movq %r15,0x50(%rbp)
	movq 0x0(%r11),%r15
	movq $0x1DC7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movq $0x107F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x107D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1DD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	addq $0x48,%rbp
	leaq (L_71900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ofConst_0
.p2align 0x4
L_403410:
L_71895:
	movq 0x8(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_71048
L_71897:
	movl %r13d,0x58(%rbp)
	movq $0x38EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x18,%r12
	addq $0x50,%rbp
	leaq (L_71898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_403412:
L_71892:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_71893:
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_71836:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403425
.p2align 0x4,,0x7
L_71837:
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_71081
L_71838:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_403423
L_71839:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_71841:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_403422
L_71854:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE5,%r11
	jne L_403421
L_71855:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_403418
L_71842:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_71064
L_71843:
	cmpq $0x1,%r15
	je L_403413
L_71844:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_71841
.p2align 0x4
L_403413:
L_71845:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403416
.p2align 0x4,,0x7
L_71846:
	movl 0x18(%rbp),%ecx
L_71847:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71848:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71850
L_71851:
	movl %ecx,0x0(%r15)
L_71850:
	movq $0x19CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_71072
.p2align 0x4
L_403416:
L_71852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_71853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71853
.p2align 0x4
.long 0x5AA
L_71853:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_71846
.p2align 0x4
L_403418:
L_71857:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71858:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71186
L_71860:
	movl %ecx,0x0(%r15)
	jmp L_71186
.p2align 0x4
L_403421:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_71842
.p2align 0x4
L_403422:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_71842
.p2align 0x4
L_403423:
L_71861:
	xorl %ecx,%ecx
	jmp L_71847
.p2align 0x4
L_403425:
L_71862:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_71863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71863
.p2align 0x4
.long 0x45A
L_71863:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_71837
.p2align 0x4
L_403427:
L_71883:
	movq %r10,0x50(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x48(%rbp)
	movl 0x0(%r11),%r15d
	movl %r15d,0x20(%rbp)
	addq $0x48,%rbp
	leaq (x_203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1396
.p2align 0x4
L_403428:
L_71865:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_71048
L_71867:
	cmpl $0x1,%r13d
	je L_71773
L_71868:
	movl %r13d,0x50(%rbp)
	movq $0x38EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	addq $0x18,%r12
	addq $0x48,%rbp
	leaq (L_71869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_403431:
L_71672:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_71072
L_71673:
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq 0x10(%r14),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_71081
L_71674:
	movq %r15,0x0(%r9)
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_403442
L_71675:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_71677:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_403441
L_71690:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE9,%r11
	jne L_403440
L_71691:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_403437
L_71678:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_71064
L_71679:
	cmpq $0x1,%r15
	je L_403432
L_71680:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_71677
.p2align 0x4
L_403432:
L_71681:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403435
.p2align 0x4,,0x7
L_71682:
	movl 0x28(%rbp),%ecx
L_71683:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71684:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71686
L_71687:
	movl %ecx,0x0(%r15)
L_71686:
	movq $0x13EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_71072
.p2align 0x4
L_403435:
L_71688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_71689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71689
.p2align 0x4
.long 0x5E0
L_71689:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_71682
.p2align 0x4
L_403437:
L_71693:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71694:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_403438
L_71697:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_71696:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_71072
.p2align 0x4
L_403438:
L_71695:
	movq %r11,%r15
	jmp L_71696
.p2align 0x4
L_403440:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_71678
.p2align 0x4
L_403441:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_71678
.p2align 0x4
L_403442:
L_71698:
	xorl %ecx,%ecx
	jmp L_71683
.p2align 0x4
L_403445:
L_71660:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEB7,%r13
	je L_403451
	cmpq $0xEB8,%r13
	je L_403450
	cmpq $0xEB9,%r13
	je L_71072
	cmpq $0xEBA,%r13
	je L_403448
	cmpq $0xEBB,%r13
	je L_71072
	cmpq $0xEBC,%r13
	je L_403446
L_71661:
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_71662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_403446:
L_71671:
	movq 0x0(%r15),%r13
	movq %r13,%r15
vs_4:
	movq %r15,0x28(%rbp)
	movq $0x33A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_403448:
L_71669:
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp vs_4
.p2align 0x4
L_403450:
L_71665:
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_71666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_403451:
L_71664:
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp vs_4
.p2align 0x4
L_403452:
L_71657:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movl 0x0(%r15),%r10d
	movq 0x8(%r15),%r9
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r8
	cmpq $0x1,%r15
	je L_71072
L_71658:
	movq %r14,0x28(%rbp)
	movq %r11,0x30(%rbp)
	movl %r10d,0x38(%rbp)
	movq %r9,0x40(%rbp)
	movq $0xA01,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r8,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x20(%rbp)
	addq $0x18,%r12
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addDef_0
.p2align 0x4
L_403454:
L_71651:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_71652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp canon_0
.p2align 0x4
L_403455:
L_71646:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEBA,%r13
	jne L_71072
L_71647:
	movq 0x8(%r15),%r13
	movq %r13,%r15
	andq $0xFF,%r15
	cmpq $0x52,%r15
	je L_403457
L_71648:
	andq $0x3,%r13
	jnz L_71072
L_71649:
	jmp L_71072
.p2align 0x4
L_403457:
L_71650:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403459:
L_71616:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_71072
L_71617:
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_71081
L_71618:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_403471
L_71619:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_71621:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_71622
L_71637:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCFD,%r13
	jne L_71622
L_71638:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x18(%rbp)
	je L_403466
L_71622:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_71064
L_71623:
	cmpq $0x1,%r15
	je L_403460
L_71624:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_71621
.p2align 0x4
L_403460:
L_71625:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403464
.p2align 0x4,,0x7
L_71626:
	movl 0x28(%rbp),%ecx
L_71627:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71628:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71630
L_71634:
	movl %ecx,0x0(%r15)
L_71630:
	movq $0x27D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x19FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_71631:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_71072
L_71632:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0x9,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_403464:
L_71635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_71636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71636
.p2align 0x4
.long 0x5E0
L_71636:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_71626
.p2align 0x4
L_403466:
L_71640:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71641:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_403467
L_71643:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_71631
.p2align 0x4
L_403467:
L_71642:
	movq %r13,%r15
	jmp L_71631
.p2align 0x4
L_403471:
L_71644:
	xorl %ecx,%ecx
	jmp L_71627
.p2align 0x4
L_403474:
L_71595:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_71072
L_71596:
	movq %r14,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_71597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_403476:
L_71588:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_71072
L_71589:
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x40,%rbp
	leaq (L_71590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_403478:
L_71531:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_71072
L_71532:
	movq %r14,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_71533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_59
.p2align 0x4
L_403480:
L_71474:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r13),%r10
	movq 0x10(%r13),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r11
	je L_71072
L_71475:
	movq 0x8(%r10),%r15
L_71476:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_71072
L_71477:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEB4,%r13
	jne L_71072
L_71478:
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_71479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_60
.p2align 0x4
L_403484:
L_71423:
	movq 0x0(%rbp),%r9
	movq 0x10(%r9),%r8
	movq %r8,0x18(%rbp)
	movq 0x8(%r9),%r8
	movq 0x0(%r9),%r14
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_71072
L_71424:
	movq 0x10(%r15),%r13
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r11
	incq %r11
	jo L_71081
L_71425:
	movq %r11,0x0(%r9)
	movq 0x0(%r13),%r9
	cmpq $0x1,%r9
	je L_403496
L_71426:
	movq 0x8(%r9),%r10
	movq 0x0(%r9),%r9
	xorl %ecx,%ecx
	movq %r8,%r13
	movq %r9,%r11
.p2align 0x4,,0x7
L_71428:
	movq %r11,%r9
	andq $0x3,%r9
	jnz L_403495
L_71437:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r9
	shrq $0x1,%r9
	cmpq $0xD0F,%r9
	jne L_403494
L_71438:
	movq 0x8(%r11),%r9
	cmpq 0x0(%r11),%r14
	movq %r14,(localObjptr+0x10)(%rip)
	je L_403489
	movq %r13,(localObjptr+0x8)(%rip)
	movq %r15,(localObjptr+0x18)(%rip)
L_71429:
	incl %ecx
	jo L_71064
L_71430:
	cmpq $0x1,%r10
	je L_403485
L_71431:
	movq 0x0(%r10),%r11
	movq 0x8(%r10),%r10
	movq (localObjptr+0x18)(%rip),%r15
	movq (localObjptr+0x10)(%rip),%r14
	movq (localObjptr+0x8)(%rip),%r13
	jmp L_71428
.p2align 0x4
L_403485:
L_71432:
L_71433:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71434:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71072
L_71436:
	movl %ecx,0x0(%r15)
	jmp L_71072
.p2align 0x4
L_403489:
L_71440:
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r14
	jo L_71092
L_71441:
	movq %r14,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_403491
L_71469:
	movl %ecx,0x0(%r14)
L_71470:
	movq %r9,%r14
	andq $0x3,%r14
	jnz L_71072
L_71471:
	movq 0x18(%r9),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r9),%r14
	movq %r14,0x28(%rbp)
	movq %r15,(localObjptr+0x18)(%rip)
	movq %r13,(localObjptr+0x8)(%rip)
L_71445:
	movq (localObjptr+0x18)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_71446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_403491:
L_71443:
	movq %r9,%r11
	andq $0x3,%r11
	jnz L_71072
L_71444:
	movq 0x18(%r9),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r9),%r11
	movq %r11,0x28(%rbp)
	movq %r13,(localObjptr+0x8)(%rip)
	movq %r15,(localObjptr+0x18)(%rip)
	jmp L_71445
.p2align 0x4
L_403494:
	movq %r13,(localObjptr+0x8)(%rip)
	movq %r14,(localObjptr+0x10)(%rip)
	movq %r15,(localObjptr+0x18)(%rip)
	jmp L_71429
.p2align 0x4
L_403495:
	movq %r13,(localObjptr+0x8)(%rip)
	movq %r14,(localObjptr+0x10)(%rip)
	movq %r15,(localObjptr+0x18)(%rip)
	jmp L_71429
.p2align 0x4
L_403496:
L_71472:
	xorl %ecx,%ecx
	jmp L_71433
.p2align 0x4
L_403499:
L_71389:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_71072
L_71390:
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_71081
L_71391:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_403512
L_71392:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_71394:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_71395
L_71414:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD13,%r13
	jne L_71395
L_71415:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x18(%rbp)
	je L_403507
L_71395:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_71064
L_71396:
	cmpq $0x1,%r15
	je L_403500
L_71397:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_71394
.p2align 0x4
L_403500:
L_71398:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403505
.p2align 0x4,,0x7
L_71399:
	movl 0x28(%rbp),%ecx
L_71400:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71401:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71403
L_71411:
	movl %ecx,0x0(%r15)
L_71403:
	movq $0x27A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x739,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x73B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1A27,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_71404:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	jne L_403502
.p2align 0x4,,0x7
L_71407:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_71072
L_71408:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0xF,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_403502:
L_71405:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0x7,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_71406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_403505:
L_71412:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_71413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71413
.p2align 0x4
.long 0x5E0
L_71413:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_71399
.p2align 0x4
L_403507:
L_71417:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71418:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_403508
L_71420:
	movl %ecx,0x0(%r15)
	movq %r13,0x18(%rbp)
	jmp L_71404
.p2align 0x4
L_403508:
L_71419:
	movq %r13,0x18(%rbp)
	jmp L_71404
.p2align 0x4
L_403512:
L_71421:
	xorl %ecx,%ecx
	jmp L_71400
.p2align 0x4
L_403515:
L_71358:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq 0x10(%r13),%r14
	cmpq $0x1,%r15
	je L_71072
L_71359:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEBA,%r13
	jne L_71072
L_71360:
	movq 0x8(%r14),%r13
	movq %r13,%r14
	andq $0xFF,%r14
	cmpq $0x47,%r14
	jne L_403528
L_71363:
	movq $0x1099,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x109B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x2,0x0(%r11)
	movq $0x109D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r14,0x8(%r9)
	movq %r13,0x10(%r9)
	addq $0x20,%r12
	movq $0x13BB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x20(%rbp)
	movq %r9,0x8(%r11)
	addq $0x18,%r12
	movl $0x1,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_71081
L_71364:
	movq %r15,0x0(%r9)
	movq 0x0(%r11),%r9
	cmpq $0x1,%r9
	je L_403526
L_71365:
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r10,%r13
.p2align 0x4,,0x7
L_71367:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_403525
L_71380:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xD14,%r11
	jne L_403524
L_71381:
	cmpq 0x0(%r14),%r13
	movq %r13,(localObjptr+0x8)(%rip)
	je L_403521
L_71368:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_71064
L_71369:
	cmpq $0x1,%r15
	je L_403516
L_71370:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r13
	jmp L_71367
.p2align 0x4
L_403516:
L_71371:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403519
.p2align 0x4,,0x7
L_71372:
	movl 0x30(%rbp),%ecx
L_71373:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71374:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71376
L_71377:
	movl %ecx,0x0(%r15)
L_71376:
	movq $0x1A29,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_71072
.p2align 0x4
L_403519:
L_71378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_71379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71379
.p2align 0x4
.long 0xEAC
L_71379:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_71372
.p2align 0x4
L_403521:
L_71383:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71384:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71186
L_71386:
	movl %ecx,0x0(%r15)
	jmp L_71186
.p2align 0x4
L_403524:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_71368
.p2align 0x4
L_403525:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_71368
.p2align 0x4
L_403526:
L_71387:
	xorl %ecx,%ecx
	jmp L_71373
.p2align 0x4
L_403528:
L_71361:
	andq $0x3,%r13
	jnz L_71072
L_71362:
	jmp L_71072
.p2align 0x4
L_403532:
L_71343:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB7,%r15
	je L_403538
	cmpq $0xEB8,%r15
	je L_403537
	cmpq $0xEB9,%r15
	je L_71072
	cmpq $0xEBA,%r15
	je L_403535
	cmpq $0xEBB,%r15
	je L_71072
	cmpq $0xEBC,%r15
	je L_403533
L_71344:
	movq %r11,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_71345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_403533:
L_71357:
	movq 0x0(%r14),%r15
	movq %r11,%r14
vs_3:
	movq %r15,0x28(%rbp)
	movq $0x33B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_403535:
L_71355:
	movq 0x0(%r14),%r15
	movq %r11,%r14
	jmp vs_3
.p2align 0x4
L_403537:
L_71350:
	movq %r11,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_71351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_403538:
L_71349:
	movq 0x0(%r14),%r15
	movq %r11,%r14
	jmp vs_3
.p2align 0x4
L_403539:
L_71266:
	movq 0x0(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_71267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_69
.p2align 0x4
L_403540:
L_71218:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r10
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEBA,%r15
	je L_403552
	cmpq $0xEBB,%r15
	je L_403547
	cmpq $0xEBC,%r15
	je L_403541
	jmp L_71072
.p2align 0x4
L_403541:
L_71259:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_71048
L_71261:
	testl %r11d,%r11d
	jnz L_71252
L_71263:
	cmpq $0x1,0x38(%rbp)
	jne L_403544
.p2align 0x4,,0x7
L_71252:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEBA,%r15
	jne L_71072
L_71253:
	movq 0x8(%r14),%r15
.p2align 0x4,,0x7
L_71220:
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x39,%r14
	je setHasEqual_0
	cmpq $0x3A,%r14
	je setHasEqual_1
L_71221:
	andq $0x3,%r15
	jnz L_71072
L_71222:
	jmp L_71072
.p2align 0x4
setHasEqual_1:
setHasEqual_0:
	movq 0x18(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_71224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_403544:
L_71264:
	movq 0x38(%rbp),%r15
L_71243:
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r14,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_71244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_403547:
L_71238:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
L_71239:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_71072
L_71240:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_403549
	cmpq $0xE4C,%r15
	je L_403548
	jmp L_71072
.p2align 0x4
L_403548:
L_71254:
	movq %r10,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (x_195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toWord_0
.p2align 0x4
L_403549:
L_71241:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_71252
L_71242:
	jmp L_71243
.p2align 0x4
L_403552:
L_71219:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_71220
.p2align 0x4
L_403553:
L_71190:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r14
	movq 0x0(%r13),%r15
	movq 0x10(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xEBB,%r13
	jne L_71072
L_71191:
	movq 0x0(%r11),%r10
	cmpq $0x1,%r15
	je L_71072
L_71192:
	movq %r15,%r13
	movq %r10,%r15
	jmp setConst_0
.p2align 0x4
L_403556:
L_71079:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r11
	movq 0x10(%r14),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r14),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r15
	jne L_403569
.p2align 0x4,,0x7
L_71167:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB7,%r14
	je L_403567
	cmpq $0xEB8,%r14
	je L_403565
	cmpq $0xEB9,%r14
	je L_403563
	cmpq $0xEBA,%r14
	je L_403562
	cmpq $0xEBB,%r14
	je L_403560
	cmpq $0xEBC,%r14
	je L_403558
.p2align 0x4,,0x7
L_71103:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_71104:
L_71105:
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_71106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
L_403558:
.p2align 0x4,,0x7
L_71161:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_71162:
	jmp L_71105
.p2align 0x4
L_403560:
.p2align 0x4,,0x7
L_71157:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_71158:
	jmp L_71105
.p2align 0x4
L_403562:
L_71172:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
L_71130:
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_71131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1435
.p2align 0x4
L_403563:
.p2align 0x4,,0x7
L_71126:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_71127:
	jmp L_71105
.p2align 0x4
L_403565:
.p2align 0x4,,0x7
L_71122:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_71123:
	jmp L_71105
.p2align 0x4
L_403567:
.p2align 0x4,,0x7
L_71118:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_71119:
	jmp L_71105
.p2align 0x4
L_403569:
L_71080:
	movq 0x18(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r11),%r14
	movq $0x2791,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x711,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1399,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x60(%rbp)
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq 0x38(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x68(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_71081
L_71082:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_403580
L_71083:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_71085:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_403579
L_71180:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD28,%r11
	jne L_403578
L_71181:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_403575
L_71086:
	incl %ecx
	movl %ecx,0x70(%rbp)
	jo L_71064
L_71087:
	cmpq $0x1,%r15
	je L_403570
L_71088:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_71085
.p2align 0x4
L_403570:
L_71089:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71090
L_71178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_71179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71179
.p2align 0x4
.long 0xEB0
L_71179:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_71090:
	movl 0x70(%rbp),%ecx
L_71091:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71093:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71095
L_71177:
	movl %ecx,0x0(%r15)
L_71095:
	movq $0x1A51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_71096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
L_403575:
L_71183:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71184:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71186
L_71187:
	movl %ecx,0x0(%r15)
	jmp L_71186
.p2align 0x4
L_403578:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_71086
.p2align 0x4
L_403579:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_71086
.p2align 0x4
L_403580:
L_71188:
	xorl %ecx,%ecx
	jmp L_71091
.p2align 0x4
L_403582:
L_73057:
	movq 0x0(%r13),%r14
	movq %r14,%r11
	movq %r11,0x18(%rbp)
	movq 0x10(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEBA,%r13
	jne L_71072
L_73058:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r10
L_73059:
	andq $0x3,%r11
	jnz L_71072
L_73060:
L_73061:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_71072
L_73062:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xF08,%r14
	jne L_71072
L_73063:
	movq 0x0(%r13),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r10)
	jna L_71143
L_73065:
	movq %r14,0x28(%rbp)
	movq 0x0(%r10),%r14
	movq %r14,0x20(%rbp)
x_213:
	movq 0x28(%rbp),%r11
	movl 0x0(%r11),%ecx
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x10(%r11),%r13
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_71081
L_73066:
	movq %r14,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_403619
L_73067:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r11
	xorl %ebx,%ebx
	movq %r11,%r15
.p2align 0x4,,0x7
L_73069:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_403618
L_73103:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xCF9,%r11
	je L_403598
	movq %r13,(localObjptr+0x0)(%rip)
	movl %ecx,(localWord32+0x0)(%rip)
L_73070:
	incl %ebx
	jo L_71064
L_73071:
	cmpq $0x1,%r14
	je L_403583
L_73072:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r13
	movl (localWord32+0x0)(%rip),%ecx
	jmp L_73069
.p2align 0x4
L_403583:
L_73073:
	movl %ebx,%ecx
L_73074:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_73075:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl stop_0
L_73102:
	movl %ecx,0x0(%r15)
stop_0:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403595
.p2align 0x4,,0x7
L_73077:
	movq $0x1DC5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x18(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_71081
L_73078:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_403593
L_73079:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_73081:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_73082
L_73094:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCF9,%r13
	je L_403589
L_73082:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_71064
L_73083:
	cmpq $0x1,%r15
	je L_403584
L_73084:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_73081
.p2align 0x4
L_403584:
L_73085:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403587
.p2align 0x4,,0x7
L_73086:
	movl 0x18(%rbp),%ecx
L_73087:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_73088:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_73090
L_73091:
	movl %ecx,0x0(%r15)
L_73090:
	movq $0x19F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_71072
.p2align 0x4
L_403587:
L_73092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_73093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73093
.p2align 0x4
.long 0x5C1
L_73093:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_73086
.p2align 0x4
L_403589:
L_73095:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_73096:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71186
L_73098:
	movl %ecx,0x0(%r15)
	jmp L_71186
.p2align 0x4
L_403593:
L_73099:
	xorl %ecx,%ecx
	jmp L_73087
.p2align 0x4
L_403595:
L_73100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_73101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73101
.p2align 0x4
.long 0x45A
L_73101:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_73077
.p2align 0x4
L_403598:
L_73104:
	movq 0x0(%r15),%r11
	movslq %ebx,%r15
	movq (globalObjptr+0x1070)(%rip),%r10
	addq 0x0(%r10),%r15
	jo L_71092
L_73105:
	movq %r15,0x0(%r10)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ebx,0x0(%r15)
	jnl L_403616
L_73179:
	movl %ebx,0x0(%r15)
	movq 0x8(%r11),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r11),%r11
	movq %r11,%r14
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r13,(localObjptr+0x0)(%rip)
L_73107:
	movl 0x0(%r14),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x48(%rbp)
	movq %r15,%r14
	movq 0x30(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	cmpq $0x0,%r14
	sete %cl
	movzbl %cl,%ecx
	je L_403613
L_73108:
	cmpq %r13,%r15
	jl L_73111
L_73109:
	cmpq %r15,%r13
	jl L_403611
L_73111:
	movq 0x30(%rbp),%r14
	movq %r14,%r15
	movq (localObjptr+0x0)(%rip),%r13
	andq %r13,%r15
	andq $0x1,%r15
	jz L_403610
L_73112:
	cmpq %r13,%r14
	jl loop_880
L_73113:
	cmpq %r14,%r13
	jnl loop_880
	movq %r13,%r15
L_73119:
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	andq %r15,%r13
	andq $0x1,%r13
	jz L_403608
L_73120:
	cmpq %r15,%r14
	jnl L_73122
L_73147:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	andq %r15,%r13
	andq $0x1,%r13
	jz L_403605
L_73148:
	cmpq %r14,%r15
	jnl L_73122
L_73151:
	movl 0x40(%rbp),%r14d
	testl %r14d,%r14d
	jz loop_880
L_73153:
	movl (localWord32+0x0)(%rip),%r14d
	testl %r14d,%r14d
	jnz loop_880
L_73122:
	testl %ecx,%ecx
	jnz L_403602
L_73123:
	movq 0x30(%rbp),%r14
	movq 0x48(%rbp),%r13
	cmpq %r13,%r14
	jl L_73126
L_73124:
	cmpq %r14,%r13
	jl stop_0
L_73126:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	andq %r15,%r13
	andq $0x1,%r13
	jz L_403600
L_73127:
	cmpq %r15,%r14
	jl loop_880
L_73128:
	cmpq %r14,%r15
	jl stop_0
loop_880:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403599
.p2align 0x4,,0x7
L_73115:
	movq $0x11EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp x_213
.p2align 0x4
L_403599:
L_73116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_73117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73117
.p2align 0x4
.long 0x1016
L_73117:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_73115
.p2align 0x4
L_403600:
L_73132:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_73133:
	cmpl $0x0,%eax
	jl loop_880
L_73134:
	cmpl $0x0,%eax
	jg stop_0
	jmp loop_880
.p2align 0x4
L_403602:
L_73140:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x48(%rbp),%rsi
	movq 0x30(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_73141:
	cmpl $0x0,%eax
	jl L_73126
L_73142:
	cmpl $0x0,%eax
	jg stop_0
	jmp L_73126
.p2align 0x4
L_403605:
L_73156:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r14,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	movl %ecx,%ebx
	call IntInf_compare
L_73157:
	cmpl $0x0,%eax
	jnl L_403606
	movl %ebx,%ecx
	jmp L_73151
.p2align 0x4
L_403606:
	movl %ebx,%ecx
	jmp L_73122
.p2align 0x4
L_403608:
L_73160:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	movl %ecx,%ebx
	call IntInf_compare
L_73161:
	cmpl $0x0,%eax
	jnl L_403609
	movl %ebx,%ecx
	jmp L_73147
.p2align 0x4
L_403609:
	movl %ebx,%ecx
	jmp L_73122
.p2align 0x4
L_403610:
L_73165:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	movl %ecx,%ebx
	call IntInf_compare
L_73166:
	cmpl $0x0,%eax
	jl loop_880
L_73167:
	cmpl $0x0,%eax
	jng loop_880
	movq %r13,%r15
	movl %ebx,%ecx
	jmp L_73119
.p2align 0x4
L_403611:
	movq (localObjptr+0x0)(%rip),%r15
	jmp L_73119
.p2align 0x4
L_403613:
L_73173:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	movl %ecx,%ebx
	call IntInf_compare
L_73174:
	cmpl $0x0,%eax
	jl L_403615
L_73175:
	cmpl $0x0,%eax
	jg L_403614
	movl %ebx,%ecx
	jmp L_73111
.p2align 0x4
L_403614:
	movl %ebx,%ecx
	movq (localObjptr+0x0)(%rip),%r15
	jmp L_73119
.p2align 0x4
L_403615:
	movl %ebx,%ecx
	jmp L_73111
.p2align 0x4
L_403616:
L_73106:
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r11),%r11
	movq %r11,%r14
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_73107
.p2align 0x4
L_403618:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_73070
.p2align 0x4
L_403619:
L_73180:
	xorl %ecx,%ecx
	jmp L_73074
.p2align 0x4
L_403626:
L_73054:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_71072
L_73055:
	movq 0x10(%r14),%r13
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r13)
	jmp L_71072
.p2align 0x4
L_403628:
L_71052:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403629:
L_73181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_73182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73182
.p2align 0x4
.long 0x45D
L_73182:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_71051
.p2align 0x4
.long 0x525
L_71057:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_71058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x523
L_73053:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movb $0x0,0x0(%r14)
	jmp L_71072
.p2align 0x4
.long 0x540
L_72951:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72952
L_72962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_72963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72963
.p2align 0x4
.long 0x530
L_72963:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_72952:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_403633
L_72953:
	movl $0x1,0x0(%r15)
L_72954:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_72955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_403633:
L_72961:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1953,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14)
	jmp L_72954
.p2align 0x4
.long 0x558
L_72927:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72928
L_72931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_72932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72932
.p2align 0x4
.long 0x56D
L_72932:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_72928:
	movq 0x20(%rbp),%r15
	andq $0x1,%r15
	jnz L_71186
L_72929:
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_71072
.p2align 0x4
.long 0x525
x_212:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	je L_71072
L_72935:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_72936:
	jmp L_72926
.p2align 0x4
.long 0x540
L_72883:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_71072
L_72885:
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_72886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x555
L_72855:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_71072
L_72857:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_71348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1390
.p2align 0x4
.long 0x523
L_71071:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_71072
.p2align 0x4
.long 0x555
L_72860:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_71072
L_72862:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_71348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1390
.p2align 0x4
.long 0x557
L_72872:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_71143
L_72874:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_72875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x523
L_71348:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_71072
.p2align 0x4
.long 0x540
L_72709:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEBC,%r13
	je L_403648
L_72710:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,%r14
	jne L_71048
L_72712:
	testq %rdx,%rdx
	jz L_403646
L_72713:
	cmpq $0x7FFFFFFF,%rdx
	ja L_403645
L_72714:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_72715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72715
.p2align 0x4
.long 0xF86
L_72715:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x38(%rbp)
L_72716:
	movq $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_877:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403644
.p2align 0x4,,0x7
L_72717:
	movq 0x48(%rbp),%r15
	cmpq 0x18(%rbp),%r15
	jnl L_403643
L_72724:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x16EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x2018)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x48(%rbp)
	jmp loop_877
.p2align 0x4
L_403643:
L_72718:
	movq 0x38(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x18(%rbp)
L_72719:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_72720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_59
.p2align 0x4
L_403644:
L_72725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_72726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72726
.p2align 0x4
.long 0xF7E
L_72726:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_72717
.p2align 0x4
L_403645:
L_71498:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403646:
L_72728:
	movq (globalObjptr+0x2010)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_72716
.p2align 0x4
L_403648:
L_72729:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %rdx,%r14
	movq %r13,0x50(%rbp)
	jne L_71048
L_72731:
	testq %rdx,%rdx
	jz L_403657
L_72732:
	cmpq $0x7FFFFFFF,%rdx
	ja L_71498
L_72733:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1493,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_72734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72734
.p2align 0x4
.long 0xFF7
L_72734:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x38(%rbp)
L_72735:
	movq $0x0,0x60(%rbp)
loop_878:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_403655
L_72736:
	movq 0x38(%rbp),%r15
	movq $0x951,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,%r14
	jne L_71048
L_72738:
	testq %rdx,%rdx
	jz L_403653
L_72739:
	cmpq $0x7FFFFFFF,%rdx
	ja L_71498
L_72740:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_72741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72741
.p2align 0x4
.long 0x5A2
L_72741:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_72742:
	movq $0x0,0x58(%rbp)
.p2align 0x4,,0x7
loop_879:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403651
.p2align 0x4,,0x7
L_72743:
	movq 0x58(%rbp),%r15
	cmpq 0x18(%rbp),%r15
	jnl L_403650
L_72745:
	movl %r15d,%r13d
	movslq %r13d,%r15
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r14
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_403649
L_72746:
	movq $0x1,%r15
L_72747:
	movq $0x16EF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x58(%rbp)
	jmp loop_879
.p2align 0x4
L_403649:
L_72748:
	movq $0x1DE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r14
	jmp L_72747
.p2align 0x4
L_403650:
L_72744:
	movq 0x50(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x18(%rbp)
	jmp L_72719
.p2align 0x4
L_403651:
L_72749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_72750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72750
.p2align 0x4
.long 0xF3C
L_72750:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_72743
.p2align 0x4
L_403653:
L_72752:
	movq (globalObjptr+0x2008)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_72742
.p2align 0x4
L_403655:
L_72753:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (x_210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_77
.p2align 0x4
L_403657:
L_72757:
	movq (globalObjptr+0xE98)(%rip),%r14
	movq %r14,0x38(%rbp)
	jmp L_72735
.p2align 0x4
.long 0x526
L_72654:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEBC,%r13
	je L_403664
L_72655:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,%r14
	jne L_71048
L_72657:
	testq %rdx,%rdx
	jz L_403662
L_72658:
	cmpq $0x7FFFFFFF,%rdx
	ja L_71498
L_72659:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_72660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72660
.p2align 0x4
.long 0x78A
L_72660:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x30(%rbp)
L_72661:
	movq $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_874:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403660
.p2align 0x4,,0x7
L_72662:
	movq 0x40(%rbp),%r15
	cmpq 0x18(%rbp),%r15
	jnl L_403659
L_72669:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x16EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x2018)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x40(%rbp)
	jmp loop_874
.p2align 0x4
L_403659:
L_72663:
	movq 0x30(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x18(%rbp)
L_72664:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_72665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_59
.p2align 0x4
L_403660:
L_72670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_72671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72671
.p2align 0x4
.long 0x68C
L_72671:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_72662
.p2align 0x4
L_403662:
L_72673:
	movq (globalObjptr+0x2010)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_72661
.p2align 0x4
L_403664:
L_72674:
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x50(%rbp)
	cmpq %r14,%rdx
	movq %r13,0x48(%rbp)
	jne L_71048
L_72676:
	testq %rdx,%rdx
	jz L_403673
L_72677:
	cmpq $0x7FFFFFFF,%rdx
	ja L_71498
L_72678:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1493,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_72679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72679
.p2align 0x4
.long 0x1010
L_72679:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x30(%rbp)
L_72680:
	movq $0x0,0x58(%rbp)
loop_875:
	movq 0x50(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_403671
L_72681:
	movq 0x30(%rbp),%r15
	movq $0x951,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %r14,%rdx
	jne L_71048
L_72683:
	testq %rdx,%rdx
	jz L_403669
L_72684:
	cmpq $0x7FFFFFFF,%rdx
	ja L_71498
L_72685:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_72686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72686
.p2align 0x4
.long 0xF84
L_72686:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_72687:
	movq $0x0,0x50(%rbp)
.p2align 0x4,,0x7
loop_876:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403667
.p2align 0x4,,0x7
L_72688:
	movq 0x50(%rbp),%r15
	cmpq 0x18(%rbp),%r15
	jnl L_403666
L_72690:
	movl %r15d,%r13d
	movslq %r13d,%r15
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r14
	movq 0x40(%rbp),%r15
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_403665
L_72691:
	movq $0x1,%r15
L_72692:
	movq $0x16EF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x50(%rbp)
	jmp loop_876
.p2align 0x4
L_403665:
L_72693:
	movq $0x1DE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r14
	jmp L_72692
.p2align 0x4
L_403666:
L_72689:
	movq 0x48(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x18(%rbp)
	jmp L_72664
.p2align 0x4
L_403667:
L_72694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_72695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72695
.p2align 0x4
.long 0x5FC
L_72695:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_72688
.p2align 0x4
L_403669:
L_72697:
	movq (globalObjptr+0x2008)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_72687
.p2align 0x4
L_403671:
L_72698:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (x_209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_77
.p2align 0x4
L_403673:
L_72702:
	movq (globalObjptr+0xE90)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_72680
.p2align 0x4
.long 0x556
L_72648:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_0
.p2align 0x4
.long 0x540
L_72562:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72563
L_72606:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_72607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72607
.p2align 0x4
.long 0x530
L_72607:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_72563:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1450,%r15
	jne L_403676
L_72564:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	je L_403675
L_72565:
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_72566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_403675:
L_72572:
	movq $0x13C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1A0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x20(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_72573
.p2align 0x4
L_403676:
L_71749:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x526
L_72527:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_72528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x555
L_72508:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_72509
.p2align 0x4
.long 0x558
L_72412:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r14
	movl 0x4(%r14),%r13d
	movl 0x0(%r14),%r11d
	movl %r11d,0x24(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r14),%r15
	movl 0x0(%r15),%r11d
	movl %r11d,%r10d
	cmpl $0x0,%r13d
	jl L_72460
L_72413:
	testl %r10d,%r10d
	jz L_403697
L_72414:
	cmpl $0x1,%r13d
	jl L_403696
L_72415:
	cmpl $0x1,%r11d
	jne L_72417
L_72442:
	movl $0x2,0x18(%rbp)
.p2align 0x4,,0x7
loop_872:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,%r11d
	movl 0x18(%rbp),%r10d
	cmpl $0x0,%r10d
	jl L_72457
L_72443:
	movl 0x24(%rbp),%r9d
	cmpl %r10d,%r9d
	jl L_403693
L_72444:
	cmpl %r10d,%r11d
	jnl L_403681
L_72446:
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	cmpl %r9d,%r13d
	movl %r13d,0x1C(%rbp)
	je loop_872
L_72447:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72448
L_72453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_72454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72454
.p2align 0x4
.long 0x538
L_72454:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_72448:
	movl 0x1C(%rbp),%r15d
	incl %r15d
	jo L_71064
L_72450:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_403678
L_72452:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x19F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r15d,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r14,0x8(%r15)
	movl $0x0,0x0(%r15)
	movq 0x0(%r11),%r15
	movq %r15,0x48(%rbp)
	movb $0xB,0x50(%rbp)
	addq $0x48,%rbp
	leaq (loop_873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_403678:
L_72451:
	movq $0xA,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403681:
L_72417:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r15
	movl 0x0(%r13),%r11d
	cmpl $0x2,0x20(%rbp)
	jl L_403692
L_72418:
	cmpl $0x2,%r11d
	jnl L_403691
L_72420:
	movl $0x2,%ecx
	subl %r11d,%ecx
	jo L_71064
L_72421:
	decl %ecx
	jo L_71064
L_72422:
	cmpl $0x0,%ecx
	jl L_72430
L_72423:
	cmpq $0x1,%r15
	je L_72430
L_72424:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
L_72425:
	testl %ecx,%ecx
	jz L_403684
L_72426:
	decl %ecx
	jo L_71064
L_72427:
	cmpq $0x1,%r15
	je L_403682
L_72428:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x18(%rbp)
	jmp L_72425
.p2align 0x4
L_403682:
L_72430:
	movq (globalObjptr+0xE30)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403684:
L_72431:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72432
L_72437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_72438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72438
.p2align 0x4
.long 0x524
L_72438:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_72432:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_403685
L_72433:
L_72434:
	movq $0x2729,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
L_72435:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_71072
.p2align 0x4
L_403685:
L_72436:
	movq (globalObjptr+0xE80)(%rip),%r15
	jmp L_72435
.p2align 0x4
L_403691:
L_72419:
	movq (globalObjptr+0xE78)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403692:
L_72441:
	movq (globalObjptr+0xE88)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403693:
L_72457:
	movq (globalObjptr+0x1F38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403696:
L_72460:
	movq (globalObjptr+0x1F30)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403697:
L_72461:
	movl $0x1,0x18(%rbp)
	jmp loop_872
.p2align 0x4
.long 0x525
L_72401:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72402
L_72405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_72406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72406
.p2align 0x4
.long 0x554
L_72406:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_72402:
	movq $0x27EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_71072
L_72403:
	movq %r15,0x18(%rbp)
	movq %r14,%r15
	jmp L_72383
.p2align 0x4
.long 0x555
L_72384:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp L_71072
.p2align 0x4
.long 0x557
L_72389:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72390
L_72393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_72394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72394
.p2align 0x4
.long 0x575
L_72394:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_72390:
	movq $0x27EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_71072
L_72391:
	movq %r15,0x18(%rbp)
	movq %r14,%r15
	jmp L_72383
.p2align 0x4
.long 0x557
L_72380:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72381
L_72386:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_72387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72387
.p2align 0x4
.long 0x45A
L_72387:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_72381:
	movq $0x27E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_71072
L_72382:
	movq %r15,0x18(%rbp)
	movq %r14,%r15
	jmp L_72383
.p2align 0x4
.long 0x558
L_72375:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1429
.p2align 0x4
.long 0x526
L_72370:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_72371
.p2align 0x4
.long 0x100D
L_72294:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_72295
.p2align 0x4
.long 0x459
L_72352:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_72334
.p2align 0x4
.long 0x1
toString_81:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_81+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0xCA5
L_72296:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72297
L_72300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_72301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72301
.p2align 0x4
.long 0xCA7
L_72301:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_72297:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_72298:
	movq $0xA01,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bindVar_1
.p2align 0x4
.long 0x100E
L_72311:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72312
L_72313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_72314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72314
.p2align 0x4
.long 0x100F
L_72314:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_72312:
	incl 0x5C(%rbp)
	jmp loop_871
.p2align 0x4
.long 0x57E
L_72229:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_72230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x556
L_72250:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72251
L_72262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_72263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72263
.p2align 0x4
.long 0x45A
L_72263:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_72251:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_72252:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_71064
L_72253:
	cmpq $0x1,%r14
	je L_403708
L_72254:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_72252
.p2align 0x4
L_403708:
L_72255:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72256
L_72260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_72261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72261
.p2align 0x4
.long 0x569
L_72261:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_72256:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_403709
L_72257:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
x_206:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_72258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_403709:
L_72259:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_206
.p2align 0x4
.long 0x525
L_72203:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72204
L_72206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_72207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72207
.p2align 0x4
.long 0x554
L_72207:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_72204:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_72205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x526
L_72225:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp set_3
.p2align 0x4
.long 0x526
L_72218:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72219
L_72220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_72221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72221
.p2align 0x4
.long 0x563
L_72221:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_72219:
	movq 0x30(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp L_72216
.p2align 0x4
.long 0x525
set_2:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp set_3
.p2align 0x4
.long 0x525
toString_80:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (rev_80+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0xFFE
L_71703:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_71072
L_71704:
	movq %r15,0x30(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_71705
.p2align 0x4
.long 0x599
L_71812:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_71813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_19
.p2align 0x4
.long 0xFFE
L_71799:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_71800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3835
.p2align 0x4
.long 0x592
L_71797:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_71703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1436
.p2align 0x4
.long 0x55A
L_71706:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_71707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_2
.p2align 0x4
.long 0xFFE
L_71775:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_71776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3835
.p2align 0x4
.long 0xFFF
L_71740:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71741
L_71770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_71771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71771
.p2align 0x4
.long 0x5D0
L_71771:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_71741:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_71048
L_71743:
	movq $0x386F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	movl %r13d,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_71744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0xEC9
L_71985:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_71072
L_71986:
	movq %r15,0x30(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_71987
.p2align 0x4
.long 0x100A
L_72070:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r10
	movq %r10,0x30(%rbp)
	movq 0x50(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x28(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_71081
L_72071:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_403735
L_72072:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_72074:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_403734
L_72116:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xCEB,%r10
	jne L_403733
L_72117:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_403723
L_72075:
	incl %ecx
	jo L_71064
L_72076:
	cmpq $0x1,%r14
	je L_403719
L_72077:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_72074
.p2align 0x4
L_403719:
L_72078:
L_72079:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72080:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_205
L_72115:
	movl %ecx,0x0(%r15)
x_205:
	movq 0x0(%r13),%r15
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_403720
L_72113:
	movq %r11,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_72114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_403720:
L_72082:
	movq %r14,%r15
L_72083:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_72084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_403723:
L_72119:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_72120:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_403731
L_72155:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
L_72122:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%ecx
	movslq %ecx,%r15
	cmpq %r11,%r15
	jne L_71048
L_72124:
	movq 0x30(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%ebx
	movslq %ebx,%r15
	cmpq %r15,%r10
	jne L_71048
L_72126:
	cmpl %ecx,%ebx
	jne L_71759
L_72128:
	cmpl $0x0,%ecx
	jl L_403727
L_72129:
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_870:
	cmpl %ecx,%ebx
	jnl L_403725
L_72133:
	movl %ebx,%r13d
	incl %r13d
	movslq %ebx,%r11
	movq 0x0(%r14,%r11,8),%r10
	movq 0x30(%rbp),%r9
	movq 0x0(%r9,%r11,8),%r8
	movq %r8,0x28(%rbp)
	movq 0x48(%rbp),%r11
	movq 0x8(%r11),%r9
	movq %r9,0x38(%rbp)
	movq 0x0(%r11),%r9
	movq %r9,0x40(%rbp)
	movq 0x10(%r8),%r11
	cmpq %r11,0x10(%r10)
	jne L_403724
L_72153:
	movl %r13d,%ebx
	jmp loop_870
.p2align 0x4
L_403724:
L_72134:
	movq %r10,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_72135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
L_403725:
L_72130:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_71072
L_72131:
	movq %r15,0x30(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_71987
.p2align 0x4
L_403727:
L_71759:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_403731:
L_72121:
	movq %r10,%r15
	jmp L_72122
.p2align 0x4
L_403733:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_72075
.p2align 0x4
L_403734:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_72075
.p2align 0x4
L_403735:
L_72156:
	xorl %ecx,%ecx
	jmp L_72079
.p2align 0x4
.long 0x1009
L_72065:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x70,%rbp
	leaq (L_71985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_4
.p2align 0x4
.long 0x1005
L_71990:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71991
L_72007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_72008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72008
.p2align 0x4
.long 0x1006
L_72008:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_71991:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF018)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_71992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
.long 0x1008
L_72044:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r14
L_72045:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_72046
L_72053:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB2,%r15
	jne L_403740
L_72054:
	movq 0x0(%r14),%r15
	movslq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_71143
L_72056:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_72057:
	movq %r13,0x30(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_71987
.p2align 0x4
L_403740:
L_72046:
	movq (globalObjptr+0x1ED8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_72047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xEC6
L_72041:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_71985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
.long 0xEAD
L_71834:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_71072
L_71835:
	movq %r15,0x28(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_71836
.p2align 0x4
.long 0x56B
L_71909:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r10
	movq %r10,0x28(%rbp)
	movq 0x30(%rbp),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq 0x20(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_71081
L_71910:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_403759
L_71911:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	movl $0x0,0x30(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_71913:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_403758
L_71955:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xCFE,%r10
	jne L_403757
L_71956:
	movq 0x8(%r14),%r10
	movq %r10,0x48(%rbp)
	cmpq %r11,0x0(%r14)
	movq %r11,(localObjptr+0x8)(%rip)
	je L_403747
L_71914:
	movl 0x30(%rbp),%r10d
	incl %r10d
	jo L_71064
L_71915:
	cmpq $0x1,%r15
	je L_403743
L_71916:
	movl %r10d,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_71913
.p2align 0x4
L_403743:
	movl %r10d,%ecx
L_71918:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71919:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_204
L_71954:
	movl %ecx,0x0(%r15)
x_204:
	movq 0x0(%r13),%r15
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_403744
L_71952:
	movq %r11,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_71953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_403744:
L_71921:
	movq %r14,%r15
L_71922:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_71923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_403747:
L_71958:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71959
L_71980:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_71981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71981
.p2align 0x4
.long 0x5BA
L_71981:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_71959:
	movl 0x30(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_71092
L_71960:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_403754
L_71961:
	movq 0x48(%rbp),%r15
L_71962:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movl %r11d,0x50(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_71048
L_71964:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_71048
L_71966:
	cmpl %ecx,%r11d
	jne L_71759
L_71968:
	cmpl $0x0,%r11d
	jl L_71759
L_71969:
	xorl %ecx,%ecx
loop_869:
	cmpl 0x50(%rbp),%ecx
	jnl L_403748
L_71973:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x54(%rbp)
	movslq %ecx,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_71974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
L_403748:
L_71970:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1DD7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1089,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1085,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1087,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1DD1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1003,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x1005,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2889,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_71971:
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_71836
.p2align 0x4
L_403754:
L_71979:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x48(%rbp),%r15
	jmp L_71962
.p2align 0x4
L_403757:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_71914
.p2align 0x4
L_403758:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_71914
.p2align 0x4
L_403759:
L_71982:
	xorl %ecx,%ecx
	jmp L_71918
.p2align 0x4
.long 0x5BD
L_71900:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71901
L_71904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_71905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71905
.p2align 0x4
.long 0x53F
L_71905:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_71901:
	movq $0x1003,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x1005,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2889,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_71902:
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_71836
.p2align 0x4
.long 0x585
L_71898:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_71834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_5
.p2align 0x4
.long 0xEAD
x_203:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_71884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
.long 0x5BD
L_71869:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71870
L_71880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_71881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71881
.p2align 0x4
.long 0x53F
L_71881:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_71870:
	movq $0x1DCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_71048
L_71872:
	movl %r13d,0x50(%rbp)
	movq $0x388B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_71873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x523
L_71662:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_71064
L_71663:
	movl %r15d,0x0(%r14)
	jmp L_71072
.p2align 0x4
.long 0x523
L_71666:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x18(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_71064
L_71667:
	movl %r15d,0x0(%r14)
	jmp L_71072
.p2align 0x4
.long 0x525
L_71652:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,0x28(%rbp)
	je L_71304
L_71653:
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_71654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1404
.p2align 0x4
.long 0x526
L_71597:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_71598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x526
L_71590:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71591
L_71592:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_71593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71593
.p2align 0x4
.long 0xF30
L_71593:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_71591:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x38(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%r13)
	movq $0x31A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x10(%r15)
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_9
.p2align 0x4
.long 0x526
L_71533:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_71534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x540
L_71479:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEBC,%r13
	je L_403774
L_71480:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,%r14
	jne L_71048
L_71482:
	testq %rdx,%rdx
	jz L_403772
L_71483:
	cmpq $0x7FFFFFFF,%rdx
	ja L_71498
L_71484:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_71485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71485
.p2align 0x4
.long 0xF86
L_71485:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x38(%rbp)
L_71486:
	movq $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_864:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403770
.p2align 0x4,,0x7
L_71487:
	movq 0x48(%rbp),%r15
	cmpq 0x18(%rbp),%r15
	jnl L_403769
L_71494:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x16EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x2018)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x48(%rbp)
	jmp loop_864
.p2align 0x4
L_403769:
L_71488:
	movq 0x38(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x18(%rbp)
L_71489:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_71490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_59
.p2align 0x4
L_403770:
L_71495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_71496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71496
.p2align 0x4
.long 0xF7E
L_71496:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_71487
.p2align 0x4
L_403772:
L_71499:
	movq (globalObjptr+0x2010)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_71486
.p2align 0x4
L_403774:
L_71500:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %r14,%rdx
	movq %r13,0x50(%rbp)
	jne L_71048
L_71502:
	testq %rdx,%rdx
	jz L_403783
L_71503:
	cmpq $0x7FFFFFFF,%rdx
	ja L_71498
L_71504:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1493,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_71505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71505
.p2align 0x4
.long 0xFF7
L_71505:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x38(%rbp)
L_71506:
	movq $0x0,0x60(%rbp)
loop_865:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_403781
L_71507:
	movq 0x38(%rbp),%r15
	movq $0x951,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,%r14
	jne L_71048
L_71509:
	testq %rdx,%rdx
	jz L_403779
L_71510:
	cmpq $0x7FFFFFFF,%rdx
	ja L_71498
L_71511:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_71512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71512
.p2align 0x4
.long 0x5A2
L_71512:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_71513:
	movq $0x0,0x58(%rbp)
.p2align 0x4,,0x7
loop_866:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403777
.p2align 0x4,,0x7
L_71514:
	movq 0x58(%rbp),%r15
	cmpq 0x18(%rbp),%r15
	jnl L_403776
L_71516:
	movl %r15d,%r13d
	movslq %r13d,%r15
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r14
	movq 0x48(%rbp),%r15
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_403775
L_71517:
	movq $0x1,%r15
L_71518:
	movq $0x16EF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x58(%rbp)
	jmp loop_866
.p2align 0x4
L_403775:
L_71519:
	movq $0x1DE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r14
	jmp L_71518
.p2align 0x4
L_403776:
L_71515:
	movq 0x50(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x18(%rbp)
	jmp L_71489
.p2align 0x4
L_403777:
L_71520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_71521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71521
.p2align 0x4
.long 0xF3C
L_71521:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_71514
.p2align 0x4
L_403779:
L_71523:
	movq (globalObjptr+0x2008)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_71513
.p2align 0x4
L_403781:
L_71524:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (x_200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_77
.p2align 0x4
L_403783:
L_71529:
	movq (globalObjptr+0xE58)(%rip),%r14
	movq %r14,0x38(%rbp)
	jmp L_71506
.p2align 0x4
.long 0x525
L_71446:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_71447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x555
L_71406:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_71407
.p2align 0x4
.long 0x555
L_71345:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_71072
L_71347:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_71348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1390
.p2align 0x4
.long 0x555
L_71351:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_71072
L_71353:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_71348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1390
.p2align 0x4
.long 0x549
L_71267:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71268
L_71341:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_71342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71342
.p2align 0x4
.long 0x53D
L_71342:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_71268:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB7,%r15
	je L_403819
	cmpq $0xEB8,%r15
	je L_403818
	cmpq $0xEB9,%r15
	je L_71072
	cmpq $0xEBA,%r15
	je L_403789
	cmpq $0xEBB,%r15
	je L_71072
	cmpq $0xEBC,%r15
	je L_403787
L_71269:
	movq 0x0(%r14),%r15
L_71270:
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (x_196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_55
.p2align 0x4
L_403787:
L_71340:
	movq 0x0(%r14),%r15
vs_2:
	movq %r15,0x28(%rbp)
	movq $0x339D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_403789:
L_71279:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x45,%r14
	je L_403815
	cmpq $0x46,%r14
	je L_403813
	cmpq $0x47,%r14
	je L_403791
L_71280:
	andq $0x3,%r15
	jnz L_71281
L_71282:
L_71281:
	movq 0x68(%rbp),%r15
	jmp vs_2
.p2align 0x4
L_403791:
L_71301:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_403806
L_71302:
	movq 0x50(%rbp),%r11
	movq 0x8(%r11),%r15
L_71303:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_71304
L_71305:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB3,%r14
	jne L_71304
L_71306:
	movq 0x0(%r15),%r14
	movq $0xA01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x19D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x13B5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movb $0x1,%r9b
	movzbl %r9b,%ecx
	movl %ecx,0x4(%r10)
	movq $0x53,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movl $0x0,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x53,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movl $0x0,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq $0x13B7,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x0(%rsp)
	movq %r9,0x8(%rsp)
	addq $0x18,%r12
	movq $0x13B9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x40(%rbp)
	movq %rsp,0x0(%r9)
	movq %r15,0x8(%r9)
	movq %r10,0x10(%r9)
	movq %r11,0x18(%r9)
	movq %r14,0x20(%r9)
	addq $0x30,%r12
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_71081
L_71307:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_403802
L_71308:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_71310:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_71311
L_71323:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD16,%r13
	jne L_71311
L_71324:
	movq 0x0(%r14),%r13
	cmpq %r13,0x28(%rbp)
	je L_403797
L_71311:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_71064
L_71312:
	cmpq $0x1,%r15
	je L_403792
L_71313:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_71310
.p2align 0x4
L_403792:
L_71314:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71315
L_71321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_71322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71322
.p2align 0x4
.long 0xFF6
L_71322:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_71315:
	movl 0x18(%rbp),%ecx
L_71316:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71317:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71319
L_71320:
	movl %ecx,0x0(%r15)
L_71319:
	movq $0x1A2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x60(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r10,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x68(%rbp),%r15
	jmp vs_2
.p2align 0x4
L_403797:
L_71326:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71327:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71186
L_71329:
	movl %ecx,0x0(%r15)
	jmp L_71186
.p2align 0x4
L_403802:
L_71330:
	xorl %ecx,%ecx
	jmp L_71316
.p2align 0x4
L_403806:
L_71331:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB7,%r15
	je L_403812
	cmpq $0xEB8,%r15
	je L_403811
	cmpq $0xEB9,%r15
	je L_71072
	cmpq $0xEBA,%r15
	je L_403809
	cmpq $0xEBB,%r15
	je L_71072
	cmpq $0xEBC,%r15
	je L_403807
L_71332:
	movq 0x0(%r14),%r15
	jmp L_71270
.p2align 0x4
L_403807:
L_71338:
	movq 0x0(%r14),%r15
	jmp vs_2
.p2align 0x4
L_403809:
L_71336:
	movq 0x0(%r14),%r15
	jmp vs_2
.p2align 0x4
L_403811:
L_71334:
	movq 0x8(%r14),%r15
L_71275:
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (x_197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_55
.p2align 0x4
L_403812:
L_71333:
	movq 0x0(%r14),%r15
	jmp vs_2
.p2align 0x4
L_403813:
L_71294:
	movq 0x68(%rbp),%r15
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_71143
L_71296:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r14,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_71297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_55
.p2align 0x4
L_403815:
L_71283:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x28(%rbp)
	cmpq $0x0,%r14
	jna L_71143
L_71285:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_71286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_55
.p2align 0x4
L_403818:
L_71274:
	movq 0x8(%r14),%r15
	jmp L_71275
.p2align 0x4
L_403819:
L_71273:
	movq 0x0(%r14),%r15
	jmp vs_2
.p2align 0x4
.long 0x528
L_71224:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71225
L_71235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_71236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71236
.p2align 0x4
.long 0x530
L_71236:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_71225:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_403821
L_71226:
	movl $0x1,0x0(%r15)
L_71227:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq %r14,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_71228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_403821:
L_71234:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1953,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14)
	jmp L_71227
.p2align 0x4
.long 0x56B
L_71244:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71245
L_71249:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_71250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71250
.p2align 0x4
.long 0x56A
L_71250:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_71245:
	movq 0x28(%rbp),%r15
	andq $0x1,%r15
	jnz L_71186
L_71246:
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEBA,%r15
	jne L_71072
L_71247:
	movq 0x8(%r14),%r15
	jmp L_71220
.p2align 0x4
.long 0x540
x_195:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_71252
L_71255:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_71252
L_71256:
	jmp L_71243
.p2align 0x4
.long 0xEAF
L_71106:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71107
L_71114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_71115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71115
.p2align 0x4
.long 0x59D
L_71115:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_71107:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_403829
L_71108:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_403828
L_71109:
L_71110:
	movq $0x41E3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_71111:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_71072
.p2align 0x4
L_403828:
L_71112:
	movq $0x41E3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_71111
.p2align 0x4
L_403829:
L_71113:
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1369
.p2align 0x4
.long 0x587
L_71131:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movb 0x60(%rbp),%r14b
	movb %r14b,0x58(%rbp)
	testb %r14b,%r14b
	jz L_403832
L_71132:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_71133:
	jmp L_71105
.p2align 0x4
L_403832:
L_71135:
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_71136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visitType_0
.p2align 0x4
.long 0xEAE
L_71096:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71097
L_71175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_71176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71176
.p2align 0x4
.long 0x566
L_71176:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_71097:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_403840
L_71098:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_403839
L_71099:
L_71100:
	movq $0x41C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_71101:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB7,%r14
	je L_71118
	cmpq $0xEB8,%r14
	je L_71122
	cmpq $0xEB9,%r14
	je L_71126
	cmpq $0xEBA,%r14
	je L_403835
	cmpq $0xEBB,%r14
	je L_71157
	cmpq $0xEBC,%r14
	je L_71161
	jmp L_71103
.p2align 0x4
L_403835:
L_71129:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	jmp L_71130
.p2align 0x4
L_403839:
L_71164:
	movq $0x41C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_71101
.p2align 0x4
L_403840:
L_71165:
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_71166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visitType_0
.p2align 0x4
.long 0x525
L_71058:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_71059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x577
L_72955:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72956
L_72959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_72960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72960
.p2align 0x4
.long 0x562
L_72960:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_72956:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_403842
L_72957:
	movl $0x1,0x0(%r15)
	jmp L_71072
.p2align 0x4
L_403842:
L_72958:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1953,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14)
	jmp L_71072
.p2align 0x4
.long 0x57F
L_72886:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_72887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x568
L_72875:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72876
L_72878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_72879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72879
.p2align 0x4
.long 0x569
L_72879:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_72876:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x0(%r11),%r15
	movq $0x27A3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r14,0x28(%rbp)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_72877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_4
.p2align 0x4
.long 0x558
L_72720:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72721
L_72722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_72723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72723
.p2align 0x4
.long 0x45A
L_72723:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_72721:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq $0x1DE3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x499F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_71072
.p2align 0x4
.long 0xFF8
x_210:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r15),%r14
L_72754:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_403846
L_72755:
	movq 0x0(%r14),%r15
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x60(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x60(%rbp)
	jmp loop_878
.p2align 0x4
L_403846:
L_71526:
	movq (globalObjptr+0x560)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x555
L_72665:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72666
L_72667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_72668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72668
.p2align 0x4
.long 0x561
L_72668:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_72666:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1DE3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_71072
.p2align 0x4
.long 0x1011
x_209:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r15),%r14
L_72699:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_71526
L_72700:
	movq 0x0(%r14),%r15
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_875
.p2align 0x4
.long 0x57E
L_72566:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72567
L_72603:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_72604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72604
.p2align 0x4
.long 0x59F
L_72604:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_72567:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1450,%r13
	jne L_403849
L_72569:
	movl 0x0(%r14),%r13d
	movq $0x28A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movb $0xD,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_72570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_403849:
L_72568:
	movq (globalObjptr+0x1508)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x526
L_72528:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_72529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5C0
loop_873:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp loop_872
.p2align 0x4
.long 0x1
rev_81:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_403853
L_72335:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_72336:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403852
.p2align 0x4,,0x7
L_72337:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_403851
L_72338:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_72336
.p2align 0x4
L_403851:
L_72340:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_72341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_403852:
L_72348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_72349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72349
.p2align 0x4
.long 0x45B
L_72349:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_72337
.p2align 0x4
L_403853:
L_72350:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_72340
.p2align 0x4
.long 0x57E
L_72230:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72231
L_72287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_72288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72288
.p2align 0x4
.long 0x59F
L_72288:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_72231:
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_403854
L_72232:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_72233:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_72234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_403854:
L_72272:
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_72273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x555
L_72258:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x525
L_72205:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_72173
.p2align 0x4
.long 0x525
rev_80:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_403858
L_72164:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_72165:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403857
.p2align 0x4,,0x7
L_72166:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_403856
L_72167:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_72165
.p2align 0x4
L_403856:
L_72169:
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (set_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_403857:
L_72208:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_72209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72209
.p2align 0x4
.long 0x530
L_72209:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_72166
.p2align 0x4
L_403858:
L_72210:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_72169
.p2align 0x4
.long 0x1000
L_71813:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71814
L_71830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_71831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71831
.p2align 0x4
.long 0x5D0
L_71831:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_71814:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movl %r11d,0x58(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_71048
L_71816:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_71048
L_71818:
	cmpl %r11d,%ecx
	jne L_71759
L_71820:
	cmpl $0x0,%r11d
	jl L_71759
L_71821:
	xorl %ecx,%ecx
loop_868:
	cmpl 0x58(%rbp),%ecx
	jnl L_403859
L_71824:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x20(%rbp)
	movslq %ecx,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x70(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_71825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_2
.p2align 0x4
L_403859:
L_71822:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x60(%rbp)
	movq $0x1D69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	addq $0x58,%rbp
	leaq (L_71823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0xFFE
L_71800:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_71801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp someUseful_0
.p2align 0x4
.long 0x525
L_71707:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71708
L_71733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_71734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71734
.p2align 0x4
.long 0x45A
L_71734:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_71708:
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_71081
L_71709:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_403875
L_71710:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_71712:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_403874
L_71725:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD32,%r11
	jne L_403873
L_71726:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_403870
L_71713:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_71064
L_71714:
	cmpq $0x1,%r15
	je L_403865
L_71715:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_71712
.p2align 0x4
L_403865:
L_71716:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71717
L_71723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_71724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71724
.p2align 0x4
.long 0x5AA
L_71724:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_71717:
	movl 0x18(%rbp),%ecx
L_71718:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71719:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71721
L_71722:
	movl %ecx,0x0(%r15)
L_71721:
	movq $0x1A65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_71072
.p2align 0x4
L_403870:
L_71728:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_71092
L_71729:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_71186
L_71731:
	movl %ecx,0x0(%r15)
	jmp L_71186
.p2align 0x4
L_403873:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_71713
.p2align 0x4
L_403874:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_71713
.p2align 0x4
L_403875:
L_71732:
	xorl %ecx,%ecx
	jmp L_71718
.p2align 0x4
.long 0x1000
L_71776:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_71777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x592
L_71744:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_71745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
.long 0x69B
L_72114:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_72083
.p2align 0x4
.long 0x1
L_72084:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_72085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x9AF
L_72135:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72136
L_72151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_72152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72152
.p2align 0x4
.long 0x5F4
L_72152:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_72136:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF018)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_72137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
.long 0x837
L_71992:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71993
L_72005:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_72006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72006
.p2align 0x4
.long 0x780
L_72006:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_71993:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF020)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_71994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x7BF
L_72047:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_72048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x51A
L_71953:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_71922
.p2align 0x4
.long 0x1
L_71923:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_71924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1004
L_71974:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71975
L_71976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_71977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71977
.p2align 0x4
.long 0xFE8
L_71977:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_71975:
	movl 0x54(%rbp),%ecx
	jmp loop_869
.p2align 0x4
.long 0xEAD
L_71884:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_71749
L_71885:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE6,%r15
	jne L_403883
L_71887:
	movq 0x0(%r13),%r15
	movslq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_71143
L_71889:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_71890:
	movq %r13,0x28(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_71836
.p2align 0x4
L_403883:
L_71886:
	movq (globalObjptr+0x1EB0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x56B
L_71873:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_71874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
.long 0x576
L_71654:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x38(%rbp)
	movl %r15d,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_3
.p2align 0x4
.long 0x526
L_71598:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_71599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x574
L_71534:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_71535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x558
L_71490:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71491
L_71492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_71493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71493
.p2align 0x4
.long 0x45A
L_71493:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_71491:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq $0x1DE3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x499B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_71072
.p2align 0x4
.long 0xFF8
x_200:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r15),%r14
L_71525:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_71526
L_71527:
	movq 0x0(%r14),%r15
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x60(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x60(%rbp)
	jmp loop_865
.p2align 0x4
.long 0x525
L_71447:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_71448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x523
x_196:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_71072
L_71272:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x20(%rbp)
	movb $0x8,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x523
x_197:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_71072
L_71277:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x20(%rbp)
	movb $0x8,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0xF06
L_71297:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71298
L_71299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_71300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71300
.p2align 0x4
.long 0xFF5
L_71300:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_71298:
	movq 0x28(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_71072
.p2align 0x4
.long 0xFF3
L_71286:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71287
L_71292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_71293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71293
.p2align 0x4
.long 0xFF4
L_71293:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_71287:
	movq 0x38(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	cmpq $0x1,0x28(%rbp)
	jna L_71143
L_71289:
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (x_198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_55
.p2align 0x4
.long 0xEAD
L_71228:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71229
L_71232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_71233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71233
.p2align 0x4
.long 0x539
L_71233:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_71229:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_403892
L_71230:
	movl $0x1,0x0(%r15)
	jmp L_71072
.p2align 0x4
L_403892:
L_71231:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1953,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14)
	jmp L_71072
.p2align 0x4
.long 0xFF0
L_71136:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71137
L_71154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_71155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71155
.p2align 0x4
.long 0xFF2
L_71155:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_71137:
	movq 0x20(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq $0x33B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_71138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x57E
L_71166:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_71167
.p2align 0x4
.long 0x526
L_71059:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_71060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1394
.p2align 0x4
.long 0x57F
L_72887:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_72888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x523
L_72877:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	jmp L_71072
.p2align 0x4
.long 0x540
L_72570:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72572
L_72601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_72602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72602
.p2align 0x4
.long 0x563
L_72602:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_72572
.p2align 0x4
.long 0x540
L_72529:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_72530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1396
.p2align 0x4
.long 0x1
L_72341:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72342
L_72346:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_72347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72347
.p2align 0x4
.long 0x451
L_72347:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_72342:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE70)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFD0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xF01
L_72234:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72235
L_72270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_72271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72271
.p2align 0x4
.long 0x5D0
L_72271:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_72235:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_72236:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_71064
L_72237:
	cmpq $0x1,%r14
	je L_403897
L_72238:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_72236
.p2align 0x4
L_403897:
L_72239:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72240
L_72268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_72269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72269
.p2align 0x4
.long 0x546
L_72269:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_72240:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_403898
L_72241:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_72242
.p2align 0x4
L_403898:
L_72267:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_72242
.p2align 0x4
.long 0x100B
L_72273:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_72274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
.long 0x1002
L_71825:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71826
L_71827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_71828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71828
.p2align 0x4
.long 0x1003
L_71828:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_71826:
	movl 0x20(%rbp),%ecx
	jmp loop_868
.p2align 0x4
.long 0xFFF
L_71823:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_71703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3835
.p2align 0x4
.long 0xFFF
L_71801:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_403903
L_71802:
	movq 0x20(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_71803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3836
.p2align 0x4
L_403903:
L_71806:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_71072
L_71807:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_71705
.p2align 0x4
.long 0x598
L_71777:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71778
L_71789:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_71790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71790
.p2align 0x4
.long 0x1001
L_71790:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_71778:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_71749
L_71779:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1C,%r15
	jne L_403906
L_71780:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_71048
L_71782:
	movl %r13d,0x60(%rbp)
	movq $0x39B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	addq $0x58,%rbp
	leaq (L_71783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_24
.p2align 0x4
L_403906:
L_71751:
	movq (globalObjptr+0x2140)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1000
L_71745:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_71746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3835
.p2align 0x4
.long 0x4AF
L_72085:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF18)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_72086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x77D
L_72137:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72138
L_72149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_72150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72150
.p2align 0x4
.long 0x780
L_72150:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_72138:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF020)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_72139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x847
L_71994:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71995
L_72003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_72004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72004
.p2align 0x4
.long 0x848
L_72004:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_71995:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xF028)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_71996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x7BF
L_72048:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72049
L_72051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_72052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72052
.p2align 0x4
.long 0x6AE
L_72052:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_72049:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_72050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x4AF
L_71924:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEB80)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_71925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x548
L_71874:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71875
L_71878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_71879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71879
.p2align 0x4
.long 0x56A
L_71879:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_71875:
	movq $0x1003,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x1005,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2889,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_71876:
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_71836
.p2align 0x4
.long 0x523
L_71655:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_71072
.p2align 0x4
.long 0x540
L_71599:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_71600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1396
.p2align 0x4
.long 0x574
L_71535:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_71536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x526
L_71448:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_71450
L_71466:
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_403914
L_71468:
	movq (globalObjptr+0xE678)(%rip),%r15
L_71451:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_71452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_403914:
L_71450:
	movq (globalObjptr+0xEFE0)(%rip),%r15
	jmp L_71451
.p2align 0x4
.long 0x523
x_198:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_71072
L_71291:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x20(%rbp)
	movb $0x8,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0xFF1
L_71138:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x39,%r14
	je L_403922
	cmpq $0x3A,%r14
	je L_403920
	cmpq $0x3D,%r14
	je L_403918
L_71139:
	andq $0x3,%r15
	jnz L_71072
L_71140:
	jmp L_71072
.p2align 0x4
L_403918:
L_71150:
	movq 0x50(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_71143
L_71152:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_71153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
L_403920:
L_71146:
	movq 0x50(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_71143
L_71148:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_71149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
L_403922:
L_71141:
	movq 0x50(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_71143
L_71144:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_71145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
.long 0x527
L_71060:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_71061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_8
.p2align 0x4
.long 0x540
L_72888:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_72889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
.long 0x541
L_72530:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_72531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_18
.p2align 0x4
.long 0x1
bug_152:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72343
L_72344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_72345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72345
.p2align 0x4
.long 0x451
L_72345:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_72343:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xF01
L_72274:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72275
L_72285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_72286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72286
.p2align 0x4
.long 0x5D0
L_72286:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_72275:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_72276:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_71064
L_72277:
	cmpq $0x1,%r14
	je L_403925
L_72278:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_72276
.p2align 0x4
L_403925:
L_72279:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72280
L_72283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_72284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72284
.p2align 0x4
.long 0x100C
L_72284:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_72280:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_403926
L_72281:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_72233
.p2align 0x4
L_403926:
L_72282:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_72233
.p2align 0x4
.long 0xFFF
L_71803:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_71804:
	movq 0x20(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_71705
.p2align 0x4
.long 0x598
L_71783:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movslq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_71143
L_71785:
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_71786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_2
.p2align 0x4
.long 0x1000
L_71746:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_71747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x5AF
L_72086:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_72087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x847
L_72139:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72140
L_72147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_72148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72148
.p2align 0x4
.long 0x848
L_72148:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_72140:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xF028)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_72141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x77E
L_71996:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_71997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x78B
L_72050:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_72000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5AF
L_71925:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_71926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x541
L_71600:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_71601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_18
.p2align 0x4
.long 0xF2C
L_71536:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x10(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_403933
L_71537:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_71538:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_71539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_403933:
L_71586:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_71538
.p2align 0x4
.long 0x548
L_71452:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71453
L_71464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_71465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71465
.p2align 0x4
.long 0x56A
L_71465:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_71453:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_71454:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_71064
L_71455:
	cmpq $0x1,%r14
	je L_403934
L_71456:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_71454
.p2align 0x4
L_403934:
L_71457:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71458
L_71462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_71463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71463
.p2align 0x4
.long 0x56D
L_71463:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_71458:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_403935
L_71459:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
x_199:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_71460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_403935:
L_71461:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_199
.p2align 0x4
.long 0x55B
L_71153:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deconType_1
.p2align 0x4
.long 0x55B
L_71149:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deconType_1
.p2align 0x4
.long 0x55B
L_71145:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deconType_1
.p2align 0x4
.long 0x527
L_71061:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71062
L_71076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_71077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71077
.p2align 0x4
.long 0x56A
L_71077:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_71062:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_71063:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_71064
L_71065:
	cmpq $0x1,%r14
	je L_403939
L_71066:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_71063
.p2align 0x4
L_403939:
L_71067:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71068
L_71074:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_71075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71075
.p2align 0x4
.long 0x579
L_71075:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_71068:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_403940
L_71069:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
x_193:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x38(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_71070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_403940:
L_71073:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_193
.p2align 0x4
.long 0x570
L_72889:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_403944
L_72890:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_72891:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_72892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_403944:
L_72918:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_72891
.p2align 0x4
.long 0xC85
L_72531:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72532
L_72543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_72544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72544
.p2align 0x4
.long 0xEB1
L_72544:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_72532:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_72533:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_71064
L_72534:
	cmpq $0x1,%r14
	je L_403945
L_72535:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_72533
.p2align 0x4
L_403945:
L_72536:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72537
L_72541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_72542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72542
.p2align 0x4
.long 0x579
L_72542:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_72537:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_403946
L_72538:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
x_208:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_72539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_403946:
L_72540:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_208
.p2align 0x4
.long 0x598
L_71786:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_71787:
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_71705
.p2align 0x4
.long 0x592
L_71747:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71748
L_71768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_71769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71769
.p2align 0x4
.long 0x5D6
L_71769:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_71748:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_71749
L_71750:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1C,%r15
	jne L_71751
L_71752:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_71048
L_71754:
	movl %r13d,0x60(%rbp)
	movq $0x39B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	addq $0x58,%rbp
	leaq (L_71755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_24
.p2align 0x4
.long 0x51E
L_72087:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72088
L_72111:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_72112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72112
.p2align 0x4
.long 0x4AE
L_72112:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_72088:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_72089:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_71064
L_72090:
	cmpq $0x1,%r14
	je L_403955
L_72091:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_72089
.p2align 0x4
L_403955:
L_72092:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72093
L_72109:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_72110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72110
.p2align 0x4
.long 0x4E6
L_72110:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_72093:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_403956
L_72094:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_79:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_79+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_403956:
L_72108:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_79
.p2align 0x4
.long 0x77E
L_72141:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_72142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x77E
L_71997:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71998
L_72001:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_72002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72002
.p2align 0x4
.long 0xA4D
L_72002:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_71998:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_71999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x1
L_72000:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq $0x15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51E
L_71926:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71927
L_71950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_71951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71951
.p2align 0x4
.long 0x4AE
L_71951:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_71927:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_71928:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_71064
L_71929:
	cmpq $0x1,%r14
	je L_403961
L_71930:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_71928
.p2align 0x4
L_403961:
L_71931:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71932
L_71948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_71949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71949
.p2align 0x4
.long 0x4E6
L_71949:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_71932:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_403962
L_71933:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_78:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_78+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_403962:
L_71947:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_78
.p2align 0x4
.long 0xC85
L_71601:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71602
L_71613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_71614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71614
.p2align 0x4
.long 0xEB1
L_71614:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_71602:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_71603:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_71064
L_71604:
	cmpq $0x1,%r14
	je L_403966
L_71605:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_71603
.p2align 0x4
L_403966:
L_71606:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71607
L_71611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_71612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71612
.p2align 0x4
.long 0x579
L_71612:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_71607:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_403967
L_71608:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
x_202:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_71609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_403967:
L_71610:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_202
.p2align 0x4
.long 0xFF9
L_71539:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71540
L_71584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_71585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71585
.p2align 0x4
.long 0xFFD
L_71585:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_71540:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xF000)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_403972
L_71541:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r13
	movl $0x0,0x58(%rbp)
	movq $0x1,0x60(%rbp)
	movq %r13,%r15
L_71542:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r14
	jne L_71048
L_71544:
	movl %r10d,0x78(%rbp)
	movq $0x3B81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x70(%rbp)
	addq $0x20,%r12
	addq $0x70,%rbp
	leaq (L_71545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_403972:
L_71583:
	movq $0x1,%r15
L_71555:
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_71556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x555
L_71460:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x456
L_71070:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x528
L_72892:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72893
L_72916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_72917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72917
.p2align 0x4
.long 0x530
L_72917:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_72893:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF030)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_403975
	cmpq $0x2,%r13
	je L_403974
L_72894:
	movq %r13,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_72895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_403974:
L_72915:
	movq (globalObjptr+0xDE10)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_72896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_403975:
L_72914:
	movq (globalObjptr+0xDE28)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_72896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x56C
L_72539:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x592
L_71755:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_71048
L_71757:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,%ecx
	jne L_71759
L_71760:
	cmpl $0x0,%r15d
	jl L_71759
L_71761:
	xorl %ecx,%ecx
loop_867:
	cmpl 0x38(%rbp),%ecx
	jnl L_403977
L_71765:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x3C(%rbp)
	movslq %ecx,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_71766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_2
.p2align 0x4
L_403977:
L_71762:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_71072
L_71763:
	movq 0x20(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_71705
.p2align 0x4
.long 0x1
rev_79:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_403984
L_72095:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_72096:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403983
.p2align 0x4,,0x7
L_72097:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_403982
L_72098:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_72096
.p2align 0x4
L_403982:
L_72100:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_72101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_403983:
L_72105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_72106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72106
.p2align 0x4
.long 0x45B
L_72106:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_72097
.p2align 0x4
L_403984:
L_72107:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_72100
.p2align 0x4
.long 0x77E
L_72142:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72143
L_72145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_72146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72146
.p2align 0x4
.long 0xA4D
L_72146:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_72143:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_72144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x61B
L_71999:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_72000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
rev_78:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_403988
L_71934:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_71935:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403987
.p2align 0x4,,0x7
L_71936:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_403986
L_71937:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_71935
.p2align 0x4
L_403986:
L_71939:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_71940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_403987:
L_71944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_71945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71945
.p2align 0x4
.long 0x45B
L_71945:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_71936
.p2align 0x4
L_403988:
L_71946:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_71939
.p2align 0x4
.long 0x56C
L_71609:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xFFA
L_71545:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_71546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xFF1
L_71556:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71557
L_71577:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_71578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71578
.p2align 0x4
.long 0xFFB
L_71578:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_71557:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF008)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_71558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x5CA
L_72895:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_72896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5CA
L_72896:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72897
L_72912:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_72913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72913
.p2align 0x4
.long 0x5CF
L_72913:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_72897:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF038)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_72898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x5A6
L_71766:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x3C(%rbp),%ecx
	jmp loop_867
.p2align 0x4
.long 0x1
L_72101:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72102
L_72103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_72104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72104
.p2align 0x4
.long 0x451
L_72104:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_72102:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61B
L_72144:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_72000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
L_71940:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71941
L_71942:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_71943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71943
.p2align 0x4
.long 0x451
L_71943:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_71941:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFFA
L_71546:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71547
L_71581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_71582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71582
.p2align 0x4
.long 0xFFC
L_71582:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_71547:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x58(%rbp),%r14d
	incl %r14d
	jo L_71064
L_71548:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_403993
L_71549:
	movl %r14d,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_71542
.p2align 0x4
L_403993:
L_71550:
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_71551:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_403995
.p2align 0x4,,0x7
L_71552:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_71555
L_71553:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_71551
.p2align 0x4
L_403995:
L_71579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_71580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71580
.p2align 0x4
.long 0x589
L_71580:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_71552
.p2align 0x4
.long 0x57D
L_71558:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_71559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x454
L_72898:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72899
L_72910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_72911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72911
.p2align 0x4
.long 0x635
L_72911:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_72899:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_72900:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_71064
L_72901:
	cmpq $0x1,%r14
	je L_403998
L_72902:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_72900
.p2align 0x4
L_403998:
L_72903:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_72904
L_72908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_72909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_72909
.p2align 0x4
.long 0x578
L_72909:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_72904:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_403999
L_72905:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
x_211:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x48(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_72906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_403999:
L_72907:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_211
.p2align 0x4
.long 0x57D
L_71559:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71560
L_71575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_71576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71576
.p2align 0x4
.long 0x530
L_71576:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_71560:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF010)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_71561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x568
L_72906:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x55B
L_71561:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71562
L_71573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_71574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71574
.p2align 0x4
.long 0x554
L_71574:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_71562:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_71563:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_71064
L_71564:
	cmpq $0x1,%r14
	je L_404004
L_71565:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_71563
.p2align 0x4
L_404004:
L_71566:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_71567
L_71571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_71572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_71572
.p2align 0x4
.long 0x538
L_71572:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_71567:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_404005
L_71568:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
x_201:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_71569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_404005:
L_71570:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_201
.p2align 0x4
.long 0x56C
L_71569:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_71071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
