/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:10:01 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl shrink_2
.hidden shrink_2
shrink_2:
L_229178:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_229211
L_229179:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_473865
L_229180:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xF8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xE0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0xD8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0xD0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0xB0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0xA8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x88(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x80(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x78(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x70(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x68(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x58(%r15),%r13
	movq 0x50(%r15),%r11
	movq %r11,0x90(%rbp)
	movq 0x48(%r15),%r10
	movq %r10,0x98(%rbp)
	movq 0x40(%r15),%r9
	movq %r9,0xA0(%rbp)
	movq 0x38(%r15),%r8
	movq %r8,0xA8(%rbp)
	movq 0x18(%r15),%r8
	movq %r8,0xB0(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0xB8(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%rsp)
	movq %r15,0x8(%rsp)
	movq 0x8(%r8),%rsi
	movq $0x8DB,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0xC0(%rbp)
	movq %rsi,0x0(%r8)
	addq $0x30,%r12
	movq %rsp,0x8(%r8)
	movq %r11,0x10(%r8)
	movq %r10,0x18(%r8)
	movq %r9,0x20(%r8)
	movq 0x40(%r13),%r11
	movq 0x38(%r13),%r10
	movq 0x30(%r13),%r9
	movq 0x28(%r13),%rsi
	movq 0x20(%r13),%rdi
	movq 0x48(%r13),%rdx
	movq 0x8(%rdx),%rcx
	movq $0x40B5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x8C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	movq %rcx,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %rsi,0x28(%r15)
	movq %rdi,0x30(%r15)
	addq $0x40,%r12
	movq $0x3249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %rsp,0x0(%r15)
	movq %r8,0x8(%r15)
	movq %r15,0xD8(%rbp)
	movq %r14,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_229181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
L_473865:
L_229211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_229212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229212
.p2align 0x4
.long 0x45F
L_229212:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_229180
.p2align 0x4
.long 0x3892
L_229181:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229182
L_229209:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_229210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229210
.p2align 0x4
.long 0x3895
L_229210:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_229182:
	movq $0x18B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD0(%rbp)
	addq $0xC0,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xA8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xB8(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r13,0x18(%r14)
	movq %r13,0x20(%r14)
	movq 0xB0(%rbp),%r11
	movq %r11,0x28(%r14)
	movq 0x38(%rbp),%r11
	movq %r11,0x30(%r14)
	movq 0x40(%rbp),%r11
	movq %r11,0x38(%r14)
	movq 0x48(%rbp),%r11
	movq %r11,0x40(%r14)
	movq 0xA0(%rbp),%r11
	movq %r11,0x48(%r14)
	movq 0x98(%rbp),%r11
	movq %r11,0x50(%r14)
	movq 0x90(%rbp),%r11
	movq %r11,0x58(%r14)
	movq 0x50(%rbp),%r11
	movq %r11,0x60(%r14)
	movq 0x58(%rbp),%r11
	movq %r11,0x68(%r14)
	movq %r13,0x70(%r14)
	movq 0x60(%rbp),%r11
	movq %r11,0x78(%r14)
	movq 0x68(%rbp),%r11
	movq %r11,0x80(%r14)
	movq 0x70(%rbp),%r11
	movq %r11,0x88(%r14)
	movq 0x78(%rbp),%r11
	movq %r11,0x90(%r14)
	movq 0x80(%rbp),%r11
	movq %r11,0x98(%r14)
	movq %r13,0xA0(%r14)
	movq 0xC8(%rbp),%r13
	movq %r13,0xA8(%r14)
	movq 0x88(%rbp),%r13
	movq %r13,0xB0(%r14)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_473867
L_229183:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x38(%rbp)
L_229184:
	movq %r15,0xE0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_229185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1971
.p2align 0x4
L_473867:
L_229208:
	movq $0x1,0x20(%rbp)
L_229189:
	movq $0x769,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x1,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_229190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
.long 0x3893
L_229185:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229186
L_229206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_229207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229207
.p2align 0x4
.long 0x3894
L_229207:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_229186:
	movq $0x11F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x23C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_473869
L_229187:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_229184
.p2align 0x4
L_473869:
L_229188:
	movq %r14,0x20(%rbp)
	jmp L_229189
.p2align 0x4
.long 0x80C
L_229190:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq $0x1,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_229191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x7B3
L_229191:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_473871
L_229192:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r15
L_229193:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x60(%rbp)
	movq $0x1,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_229194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_473871:
L_229201:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1251
L_229194:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq $0x1,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_229195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x512
L_229195:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229196
L_229203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_229204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229204
.p2align 0x4
.long 0x86A
L_229204:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_229196:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_473873
L_229197:
L_229198:
	movq $0x2947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_229201
L_229199:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_229193
.p2align 0x4
L_473873:
L_229202:
	movq (globalObjptr+0x1E50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1971
.hidden x_1971
x_1971:
L_229213:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_229214
L_229378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_229379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229379
.p2align 0x4
.long 0x45B
L_229379:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_229214:
	movq 0x8(%rbp),%r15
	cmpb $0x7,0x0(%r15)
	je L_473908
L_229215:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x20(%r14),%r13
	movq 0x28(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x40(%rbp)
	cmpq %r15,%rdx
	movq %r13,0x30(%rbp)
	jne L_229217
L_229218:
	testq %rdx,%rdx
	jz L_473906
L_229219:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229287
L_229220:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_229221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229221
.p2align 0x4
.long 0x67D
L_229221:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_229222:
	movq $0x0,0x50(%rbp)
.p2align 0x4,,0x7
loop_2568:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_473904
.p2align 0x4,,0x7
L_229223:
	movq 0x50(%rbp),%r13
	cmpq 0x40(%rbp),%r13
	jnl L_473903
L_229309:
	movl %r13d,%ecx
	movslq %ecx,%r15
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r11),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x70(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r13d
	movl %r13d,0x78(%rbp)
	movslq %r13d,%r15
	cmpq %r14,%r15
	jne L_229217
L_229311:
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
loop_2575:
	cmpl 0x78(%rbp),%ecx
	je L_229341
L_229312:
	movslq %ecx,%r13
	cmpq %r14,%r13
	jnb L_473900
L_229314:
	movq 0x60(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0xF2E,%r9
	je L_473876
L_229315:
	incl %ecx
	jo L_473875
L_229316:
	jmp loop_2575
.p2align 0x4
L_473875:
L_229261:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_473876:
L_229317:
	cmpl $0x0,0x78(%rbp)
	jl L_473899
L_229318:
	movq $0x1,0x80(%rbp)
	movl $0x0,0x7C(%rbp)
loop_2576:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_473898
.p2align 0x4,,0x7
L_229319:
	movl 0x78(%rbp),%r14d
	cmpl %r14d,0x7C(%rbp)
	jl L_473891
L_229320:
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_473890
L_229321:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_229322:
	incl %ecx
	jo L_229261
L_229323:
	cmpq $0x1,%r15
	je L_473877
L_229324:
	movq 0x8(%r15),%r15
	jmp L_229322
.p2align 0x4
L_473877:
L_229325:
L_229326:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	testq %r15,%r15
	jnz L_473887
L_229352:
	movq (globalObjptr+0xD90)(%rip),%r15
	movq %r15,0x78(%rbp)
.p2align 0x4,,0x7
L_229330:
	movq 0x80(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2577:
	cmpq 0x60(%rbp),%r15
	jnl L_473879
L_229348:
	cmpq $0x1,%r14
	je L_473878
L_229349:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x78(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2577
.p2align 0x4
L_473878:
L_229285:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_473879:
L_229331:
	movq 0x78(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x60(%rbp)
	cmpq %r14,%r11
	jne L_473886
L_229333:
	decl %r13d
	movl %r13d,0x80(%rbp)
	jo L_229261
L_229334:
	testq %r11,%r11
	jnz L_473883
L_229347:
	movq (globalObjptr+0x2278)(%rip),%r15
	movq %r15,0x88(%rbp)
.p2align 0x4,,0x7
L_229338:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2578:
	cmpq 0x60(%rbp),%r15
	jnl L_473881
L_229344:
	movl %r15d,%r14d
	movl 0x80(%rbp),%r13d
	subl %r14d,%r13d
	jo L_229261
L_229345:
	movslq %r13d,%r14
	movq 0x78(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2578
.p2align 0x4
L_473881:
L_229339:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_473882
.p2align 0x4,,0x7
L_229340:
	movq 0x88(%rbp),%r14
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
L_229341:
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x50(%rbp)
	jmp loop_2568
.p2align 0x4
L_473882:
L_229342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_229343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229343
.p2align 0x4
.long 0x38AA
L_229343:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_229340
.p2align 0x4
L_473883:
L_229335:
	movq 0x60(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_473884
L_229336:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_229337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229337
.p2align 0x4
.long 0x38A9
L_229337:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x88(%rbp)
	jmp L_229338
.p2align 0x4
L_473884:
L_229287:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_473886:
L_229217:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_473887:
L_229327:
	movq 0x60(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_229287
L_229328:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_229329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229329
.p2align 0x4
.long 0x38A8
L_229329:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x78(%rbp)
	jmp L_229330
.p2align 0x4
L_473890:
L_229353:
	xorl %ecx,%ecx
	jmp L_229326
.p2align 0x4
L_473891:
L_229354:
	movslq 0x7C(%rbp),%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2E,%r15
	je L_473892
L_229355:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
L_229356:
	movq %r15,0x80(%rbp)
	incl 0x7C(%rbp)
	jmp loop_2576
.p2align 0x4
L_473892:
L_229357:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE42,%r14
	jne L_473897
L_229359:
	movq 0x0(%r15),%r14
L_229360:
	movq 0x80(%rbp),%r11
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_473896
L_229362:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0xF2E,%r11
	jne L_473895
L_229364:
	movq 0x0(%r10),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0xE43,%r10
	jne L_473894
L_229366:
	movq 0x0(%r11),%r10
	movq 0x8(%r14),%r9
	cmpq %r9,0x8(%r10)
	jne L_473893
L_229368:
	jmp L_229356
.p2align 0x4
L_473893:
L_229367:
	movq (globalObjptr+0x2280)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_473894:
L_229365:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_229356
.p2align 0x4
L_473895:
L_229363:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_229356
.p2align 0x4
L_473896:
L_229361:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq %r11,0x8(%r15)
	jmp L_229356
.p2align 0x4
L_473897:
L_229358:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_229356
.p2align 0x4
L_473898:
L_229369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_229370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229370
.p2align 0x4
.long 0x38AB
L_229370:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_229319
.p2align 0x4
L_473899:
L_229371:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_473900:
L_229253:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_473903:
L_229224:
	movq 0x48(%rbp),%r15
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0xF7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x38,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x18(%rbp),%r10
	movq %r10,0x8(%r14)
	movq 0x20(%rbp),%r9
	movq %r9,0x10(%r14)
	movq 0x28(%rbp),%r8
	movq %r8,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0x38(%rbp),%r8
	movq %r8,0x28(%r14)
	movq $0x2947,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	addq $0x10,%r12
	movq %r14,0x0(%rsp)
	movq $0x11ED,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %rsp,0x0(%rsi)
	movq %rsi,0x50(%rbp)
	addq $0x10,%r12
	movq %r9,0x30(%rbp)
	movq %r11,0x40(%rbp)
	movq %r15,0x20(%rbp)
	movq %r14,0x48(%rbp)
	movq %r8,0x18(%rbp)
	movq %r10,0x38(%rbp)
x_795:
	movq 0x10(%rbp),%r15
	movq 0xB0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	movq $0x1,0x110(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_229225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_473904:
L_229373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_229374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229374
.p2align 0x4
.long 0x2CA1
L_229374:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_229223
.p2align 0x4
L_473906:
L_229376:
	movq (globalObjptr+0x2270)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_229222
.p2align 0x4
L_473908:
L_229377:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x18(%rbp)
	jmp x_795
.p2align 0x4
.long 0x3896
L_229225:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq $0x1,0x110(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_229226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x3896
L_229226:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229227
L_229307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_229308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229308
.p2align 0x4
.long 0x174B
L_229308:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_229227:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_473910
L_229228:
L_229229:
	movq $0x2947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq $0x34E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_229230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_473910:
L_229279:
	movq (globalObjptr+0x1E50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3897
L_229230:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229231
L_229304:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_229305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229305
.p2align 0x4
.long 0x38A7
L_229305:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_229231:
	movq $0x4377,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq $0x3455,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_229232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x3898
L_229232:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%rdx
	movq %rdx,0xF8(%rbp)
	cmpq %r14,%rdx
	movq %r14,0x50(%rbp)
	jne L_229217
L_229234:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229287
L_229235:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8E9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_229236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229236
.p2align 0x4
.long 0x3899
L_229236:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x108(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2569:
	cmpq 0xF8(%rbp),%r15
	jnl L_473913
L_229302:
	movq 0x108(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x2,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2569
.p2align 0x4
L_473913:
L_229237:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	movq 0xF8(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_229238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229238
.p2align 0x4
.long 0x389A
L_229238:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq %rax,0x110(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2570:
	cmpq 0xF8(%rbp),%r15
	jnl L_473914
L_229301:
	movq 0x110(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2570
.p2align 0x4
L_473914:
L_229239:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0xF8(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_229240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229240
.p2align 0x4
.long 0x389B
L_229240:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq %rax,0x118(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2571:
	cmpq 0xF8(%rbp),%r15
	jnl L_473915
L_229300:
	movq 0x118(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2571
.p2align 0x4
L_473915:
L_229241:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8CB,%rcx
	movq 0xF8(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_229242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229242
.p2align 0x4
.long 0x389C
L_229242:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x120(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2572:
	cmpq 0xF8(%rbp),%r15
	jnl L_473916
L_229299:
	movq 0x120(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2572
.p2align 0x4
L_473916:
L_229243:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229244
L_229297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_229298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229298
.p2align 0x4
.long 0x38A6
L_229298:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_229244:
	movq $0x8D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x128(%rbp)
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x138(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x140(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,0x148(%rbp)
	movq %r15,0x150(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x138,%rbp
	leaq (L_229245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incLabel_1
.p2align 0x4
.long 0x389D
L_229245:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229246
L_229295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_229296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229296
.p2align 0x4
.long 0x38A5
L_229296:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_229246:
	movq 0xD8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x8EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x48,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x108(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0xB0(%rbp),%r11
	movq %r11,0x18(%r15)
	movq 0xB8(%rbp),%r10
	movq %r10,0x20(%r15)
	movq 0xC0(%rbp),%r9
	movq %r9,0x28(%r15)
	movq 0xC8(%rbp),%r8
	movq %r8,0x30(%r15)
	movq 0xD0(%rbp),%rbx
	movq %rbx,0x38(%r15)
	movq $0x8ED,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x8(%rsp)
	addq $0x40,%r12
	movq %r14,0x0(%rsp)
	movq %r14,0xE0(%rbp)
	movq %r11,0x10(%rsp)
	movq %r10,0x18(%rsp)
	movq %r9,0x20(%rsp)
	movq %r8,0x28(%rsp)
	movq %rbx,0x30(%rsp)
	movq %rsp,0xE8(%rbp)
	movq $0x8F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0xF0(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0xF8(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_229247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229247
.p2align 0x4
.long 0x389E
L_229247:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq %rax,0xD8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2573:
	cmpq 0xF8(%rbp),%r15
	jnl L_473920
L_229294:
	movq 0xD8(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2573
.p2align 0x4
L_473920:
L_229248:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x210,%r15
	jnb L_229249
L_229292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x210,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_229293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229293
.p2align 0x4
.long 0x38A4
L_229293:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_229249:
	movq $0x8EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x48,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0xB0(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0xE0(%rbp),%r10
	movq %r10,0x18(%r15)
	movq 0x110(%rbp),%r9
	movq %r9,0x20(%r15)
	movq 0x20(%rbp),%r8
	movq %r8,0x28(%r15)
	movq 0xE8(%rbp),%rsp
	movq %rsp,0x30(%r15)
	movq 0x120(%rbp),%rsi
	movq %rsi,0x38(%r15)
	movq $0x8D7,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	addq $0x40,%r12
	movq 0xD0(%rbp),%rdi
	movq %rdi,0x0(%rsi)
	movq 0xC8(%rbp),%rdx
	movq %rdx,0x8(%rsi)
	movq %r14,0x10(%rsi)
	movq %r13,0x18(%rsi)
	movq %r11,0x20(%rsi)
	movq 0xA0(%rbp),%rcx
	movq %rcx,0x28(%rsi)
	movq 0xA8(%rbp),%rcx
	movq %rcx,0x30(%rsi)
	movq $0x6FB,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rcx,0x130(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%rcx)
	movq $0x8F1,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	addq $0x80,%r12
	movq %rdi,0x0(%rbx)
	movq %rdx,0x8(%rbx)
	movq %r14,0x10(%rbx)
	movq %r13,0x18(%rbx)
	movq %r11,0x20(%rbx)
	movq %r10,0x28(%rbx)
	movq 0x68(%rbp),%rax
	movq %rax,0x30(%rbx)
	movq 0x70(%rbp),%rcx
	movq %rcx,0x38(%rbx)
	movq 0x78(%rbp),%rcx
	movq %rcx,0x40(%rbx)
	movq 0x80(%rbp),%rcx
	movq %rcx,0x48(%rbx)
	movq 0x88(%rbp),%rcx
	movq %rcx,0x50(%rbx)
	movq 0x90(%rbp),%rcx
	movq %rcx,0x58(%rbx)
	movq %rsi,0x60(%rbx)
	movq 0x98(%rbp),%rcx
	movq %rcx,0x68(%rbx)
	movq 0x100(%rbp),%rcx
	movq %rcx,0x70(%rbx)
	movq $0x8F5,0x0(%r12)
	movq %r12,%rax
	addq $0x8,%rax
	movq %rax,0x138(%rbp)
	movq %r15,0x58(%rax)
	movq %rbx,0xA8(%rax)
	movq %rsi,0xC0(%rax)
	movq %r15,0xC8(%rax)
	addq $0xF8,%r12
	movq %rsp,0x0(%rax)
	movq %rdi,0x8(%rax)
	movq %rdx,0x10(%rax)
	movq %r14,0x18(%rax)
	movq %r13,0x20(%rax)
	movq %r11,0x28(%rax)
	movq %r10,0x30(%rax)
	movq %r9,0x38(%rax)
	movq %r8,0x40(%rax)
	movq %rcx,0x48(%rax)
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rax)
	movq 0x118(%rbp),%r15
	movq %r15,0x60(%rax)
	movq 0xD8(%rbp),%r15
	movq %r15,0x68(%rax)
	movq 0x128(%rbp),%r15
	movq %r15,0x70(%rax)
	movq %r10,0x78(%rax)
	movq %r15,0x80(%rax)
	movq 0xF0(%rbp),%r15
	movq %r15,0x88(%rax)
	movq %r10,0x90(%rax)
	movq 0x130(%rbp),%r15
	movq %r15,0x98(%rax)
	movq %r10,0xA0(%rax)
	movq %r10,0xB0(%rax)
	movq 0x98(%rbp),%r15
	movq %r15,0xB8(%rax)
	movq 0x90(%rbp),%r15
	movq %r15,0xD0(%rax)
	movq 0x58(%rbp),%r15
	movq %r15,0xD8(%rax)
	movq %r8,0xE0(%rax)
	movq 0x60(%rbp),%r15
	movq %r15,0xE8(%rax)
	movq 0x40(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_229250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x389F
L_229250:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movl 0x148(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229251
L_229290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_229291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229291
.p2align 0x4
.long 0x38A3
L_229291:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_229251:
	movslq 0x40(%rbp),%r15
	cmpq 0xF8(%rbp),%r15
	jnb L_229253
L_229254:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_229255:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_473923
L_229257:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x140(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_229258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_0
.p2align 0x4
L_473923:
L_229256:
	movq (globalObjptr+0x2230)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x38A0
L_229258:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x130(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	cmpq $0x1,%r13
	je L_473934
L_229259:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_229260:
	incl %ecx
	jo L_229261
L_229262:
	cmpq $0x1,%r15
	je L_473926
L_229263:
	movq 0x8(%r15),%r15
	jmp L_229260
.p2align 0x4
L_473926:
L_229264:
L_229265:
	movslq %ecx,%rdx
	movq %rdx,0x58(%rbp)
	testq %rdx,%rdx
	jz L_473932
L_229266:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229287
L_229267:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_229268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229268
.p2align 0x4
.long 0x38A1
L_229268:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
L_229269:
	movq 0x48(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2574:
	cmpq 0x58(%rbp),%r15
	jnl L_473928
L_229282:
	cmpq $0x1,%r14
	je L_229285
L_229283:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x60(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2574
.p2align 0x4
L_473928:
L_229270:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229271
L_229280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_229281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229281
.p2align 0x4
.long 0x38A2
L_229281:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_229271:
	movq 0x60(%rbp),%r15
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x40(%rbp),%r14
	cmpq 0x50(%rbp),%r14
	jnb L_229253
L_229273:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x10(%r11),%r10
	movq $0xF7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movq %r10,0x0(%r14)
	addq $0x38,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%r14)
	movq $0x2947,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x50(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r11)
	movq $0x11EF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x1,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_229274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_473932:
L_229288:
	movq (globalObjptr+0xD40)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_229269
.p2align 0x4
L_473934:
L_229289:
	xorl %ecx,%ecx
	jmp L_229265
.p2align 0x4
.long 0xB76
L_229274:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq $0x1,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_229275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0xB75
L_229275:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_229279
L_229276:
L_229277:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1852
.hidden x_1852
x_1852:
L_229380:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_231610
L_229381:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x328,%r15
	jb L_474057
L_229382:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_474053
L_229383:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x235C,%rax
	cmpq $0x7,%rax
	ja L_473936
	leaq jumpTable_703(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_703:
.quad L_474032,L_474031,L_474028,L_474027,L_474012,L_474003,L_473970,L_473937
.text
.p2align 0x4
L_473936:
L_229384:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq $0x7D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	addq $0x28,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp addProfile_0
.p2align 0x4
L_473937:
L_231259:
	movq 0x0(%rbp),%r14
	movq 0xC8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0xC0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xB8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xB0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0xA8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0xA0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x98(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x90(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x88(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x80(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x78(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x70(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x68(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x60(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x58(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x48(%r14),%r11
	movq %r11,0xA0(%rbp)
	movq 0x40(%r14),%r15
	movq 0x38(%r14),%r11
	movq 0x30(%r14),%r10
	movq %r10,0xA8(%rbp)
	movq 0x28(%r14),%r9
	movq %r9,0xB0(%rbp)
	movq 0x20(%r14),%r8
	movq %r8,0xB8(%rbp)
	movq 0x18(%r14),%rsp
	movq %rsp,0xC0(%rbp)
	movq 0x10(%r14),%rsi
	movq %rsi,0xC8(%rbp)
	movq 0x8(%r14),%rdi
	movq 0x0(%r14),%rdx
	movq %rdx,0xD0(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%rdx
	movq %rdx,0xD8(%rbp)
	movq 0x8(%r14),%rdx
	movq %rdx,0xE0(%rbp)
	movq 0x10(%r14),%rdx
	movq %rdx,0xE8(%rbp)
	movq 0x18(%r14),%rcx
	movq %rcx,0xF0(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xF8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rdi),%rcx
	movq %rcx,0x100(%rbp)
	movq $0x9C9,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x108(%rbp)
	addq $0x40,%r12
	movq %rcx,0x0(%rdi)
	movq %r14,0x8(%rdi)
	movq %r10,0x10(%rdi)
	movq %r9,0x18(%rdi)
	movq %r8,0x20(%rdi)
	movq %rsp,0x28(%rdi)
	movq %rsi,0x30(%rdi)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xA63,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,0x110(%rbp)
	movq %r14,0x38(%rbx)
	addq $0x48,%r12
	movq %rsi,0x0(%rbx)
	movq %rsp,0x8(%rbx)
	movq %r8,0x10(%rbx)
	movq %r9,0x18(%rbx)
	movq %r10,0x20(%rbx)
	movq %rdi,0x28(%rbx)
	movq %rcx,0x30(%rbx)
	movq $0xA65,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x118(%rbp)
	addq $0x40,%r12
	movq %rcx,0x0(%r14)
	movq %rbx,0x8(%r14)
	movq %r10,0x10(%r14)
	movq %r9,0x18(%r14)
	movq %r8,0x20(%r14)
	movq %rsp,0x28(%r14)
	movq %rsi,0x30(%r14)
	movq $0xA69,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x120(%rbp)
	movq %r15,0x0(%rdi)
	movq %r11,0x30(%rdi)
	addq $0x48,%r12
	movq %rsi,0x8(%rdi)
	movq %rsp,0x10(%rdi)
	movq %r8,0x18(%rdi)
	movq %r9,0x20(%rdi)
	movq %r10,0x28(%rdi)
	movq %rbx,0x38(%rdi)
	movq $0xA67,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x128(%rbp)
	addq $0x18,%r12
	movq %rbx,0x0(%r11)
	movq %r14,0x8(%r11)
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x130(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x47B,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x138(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%rdi)
	movq %r11,0x8(%rdi)
	movq $0x89,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,0x140(%rbp)
	addq $0x18,%r12
	movq %r11,0x0(%rbx)
	movq %r11,0x8(%rbx)
	movq $0x8FD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x148(%rbp)
	addq $0x40,%r12
	movq %rcx,0x0(%r11)
	movq %rdi,0x8(%r11)
	movq %r10,0x10(%r11)
	movq %r9,0x18(%r11)
	movq %r8,0x20(%r11)
	movq %rsp,0x28(%r11)
	movq %rsi,0x30(%r11)
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x150(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x47B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x158(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x160(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x47B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x168(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	movq $0xD77,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x170(%rbp)
	addq $0x18,%r12
	movq %rbx,0x0(%r13)
	movq %r14,0x8(%r13)
	cmpq $0x1,%rdx
	je L_231305
L_231260:
	movq 0x8(%rdx),%r14
	movq %r14,0x178(%rbp)
	movq 0x0(%rdx),%r15
.p2align 0x4,,0x7
L_231261:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x180(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x188(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x190(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x198(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x1A0(%rbp)
	cmpq %r11,%r15
	jne L_229389
L_231263:
	testq %r11,%r11
	jnz L_473966
L_231598:
	movq (globalObjptr+0x22E8)(%rip),%r15
	movq %r15,0x1A8(%rbp)
.p2align 0x4,,0x7
L_231267:
	movq $0x0,0x1B0(%rbp)
.p2align 0x4,,0x7
loop_2617:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_473965
.p2align 0x4,,0x7
L_231268:
	movq 0x1A0(%rbp),%r15
	cmpq %r15,0x1B0(%rbp)
	jl L_473964
L_231269:
	movq 0x1A8(%rbp),%r15
	movq $0xB73,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x188(%rbp),%r15
	cmpq $0x1,%r15
	je L_473962
L_231270:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x198(%rbp)
	cmpq %r14,%r11
	jne L_229389
L_231272:
	testq %r11,%r11
	jnz L_473959
L_231554:
	movq (globalObjptr+0x7310)(%rip),%r15
	movq %r15,0x1A0(%rbp)
.p2align 0x4,,0x7
L_231276:
	movq $0x0,0x1B0(%rbp)
.p2align 0x4,,0x7
loop_2618:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_473958
.p2align 0x4,,0x7
L_231277:
	movq 0x198(%rbp),%r15
	cmpq %r15,0x1B0(%rbp)
	jl L_473957
L_231278:
	movq 0x1A0(%rbp),%r15
	movq $0xB73,0xFFFFFFFFFFFFFFF8(%r15)
	cmpq $0x1,0x180(%rbp)
	je L_473956
L_231279:
	movq %r15,0x188(%rbp)
L_231280:
	movq 0x180(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x198(%rbp)
	cmpq %r14,%r11
	jne L_473955
L_231282:
	testq %r11,%r11
	jnz L_473953
L_231539:
	movq (globalObjptr+0x7318)(%rip),%r15
	movq %r15,0x1A0(%rbp)
.p2align 0x4,,0x7
L_231286:
	movq $0x0,0x1B0(%rbp)
.p2align 0x4,,0x7
loop_2619:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_473952
.p2align 0x4,,0x7
L_231287:
	movq 0x198(%rbp),%r13
	cmpq %r13,0x1B0(%rbp)
	jl L_473951
L_231288:
	movq 0x1A0(%rbp),%r14
	movq $0xB73,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x188(%rbp),%r15
L_231289:
	movq $0x136F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x180(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x1A8(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x190(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x188(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_473950
L_231290:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_473949
L_231291:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_231293:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_231294
L_231518:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD45,%r13
	jne L_231294
L_231519:
	movq 0x0(%r14),%r13
	cmpq %r13,0x150(%rbp)
	je L_473944
L_231294:
	incl %ecx
	movl %ecx,0x190(%rbp)
	jo L_473943
L_231295:
	cmpq $0x1,%r15
	je L_473938
L_231296:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_231293
.p2align 0x4
L_473938:
L_231297:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_473942
.p2align 0x4,,0x7
L_231298:
	movl 0x190(%rbp),%ecx
L_231299:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_473941
L_231300:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_231302
L_231515:
	movl %ecx,0x0(%r15)
L_231302:
	movq $0x1A8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x180(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x188(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x178(%rbp),%r14
	cmpq $0x1,%r14
	je L_473939
L_231303:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x178(%rbp)
	jmp L_231261
.p2align 0x4
L_473939:
L_231305:
	movq $0xCE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x110(%rbp)
	addq $0x68,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x90(%rbp),%r13
	movq %r13,0x20(%r15)
	movq 0x168(%rbp),%r13
	movq %r13,0x28(%r15)
	movq 0x158(%rbp),%r11
	movq %r11,0x30(%r15)
	movq 0xA0(%rbp),%r10
	movq %r10,0x38(%r15)
	movq 0x128(%rbp),%r9
	movq %r9,0x40(%r15)
	movq %r14,0x48(%r15)
	movq %r10,0x50(%r15)
	movq %r13,0x58(%r15)
	movq 0x60(%rbp),%r15
	movq 0x30(%r15),%r13
	movq 0x28(%r15),%r8
	movq 0x20(%r15),%rsp
	movq 0x38(%r15),%rsi
	movq 0x8(%rsi),%rdi
	movq $0x3D45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x60,%r12
	movq 0x70(%rbp),%rsi
	movq %rsi,0x0(%r15)
	movq 0x118(%rbp),%rsi
	movq %rsi,0x8(%r15)
	movq %r14,0x10(%r15)
	movq 0x120(%rbp),%rdx
	movq %rdx,0x18(%r15)
	movq %r14,0x20(%r15)
	movq %rsi,0x28(%r15)
	movq %r14,0x30(%r15)
	movq %r9,0x38(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x48(%r15)
	movq %r10,0x50(%r15)
	movq $0xCE7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	movq %rdi,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	movq %r8,0x18(%r14)
	movq %rsp,0x20(%r14)
	addq $0x30,%r12
	movq (globalObjptr+0xF58)(%rip),%r15
	movq $0xB73,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xD8(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq %r11,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_231306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_98
.p2align 0x4
L_473941:
L_229497:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_473942:
L_231516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_231517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231517
.p2align 0x4
.long 0x39AF
L_231517:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	jmp L_231298
.p2align 0x4
L_473943:
L_229418:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_473944:
L_231521:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_231522:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_229962
L_231524:
	movl %ecx,0x0(%r15)
L_229962:
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_473949:
L_231525:
	xorl %ecx,%ecx
	jmp L_231299
.p2align 0x4
L_473950:
L_229486:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_473951:
L_231526:
	movq 0x1B0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x180(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C0,%rbp
	leaq (makeValue_10+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_47
.p2align 0x4
L_473952:
L_231536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_231537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231537
.p2align 0x4
.long 0x39B2
L_231537:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	jmp L_231287
.p2align 0x4
L_473953:
L_231283:
	movq 0x198(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_473954
L_231284:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_231285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231285
.p2align 0x4
.long 0x3987
L_231285:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq %rax,0x1A0(%rbp)
	jmp L_231286
.p2align 0x4
L_473954:
L_229423:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_473955:
L_229389:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_473956:
L_231540:
	movq $0x1,%r14
	jmp L_231289
.p2align 0x4
L_473957:
L_231541:
	movq 0x1B0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x188(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C0,%rbp
	leaq (makeValue_11+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_47
.p2align 0x4
L_473958:
L_231551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_231552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231552
.p2align 0x4
.long 0x39B2
L_231552:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	jmp L_231277
.p2align 0x4
L_473959:
L_231273:
	movq 0x198(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_231274:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_231275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231275
.p2align 0x4
.long 0x3987
L_231275:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq %rax,0x1A0(%rbp)
	jmp L_231276
.p2align 0x4
L_473962:
L_231555:
	cmpq $0x1,0x180(%rbp)
	je L_473963
L_231556:
	movq $0x1,0x188(%rbp)
	jmp L_231280
.p2align 0x4
L_473963:
L_231557:
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_231289
.p2align 0x4
L_473964:
L_231558:
	movq 0x1B0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x198(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x1C8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x1B8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C8,%rbp
	leaq (makeValue_12+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_47
.p2align 0x4
L_473965:
L_231595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_231596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231596
.p2align 0x4
.long 0x39B6
L_231596:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	jmp L_231268
.p2align 0x4
L_473966:
L_231264:
	movq 0x1A0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_231265:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_231266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231266
.p2align 0x4
.long 0x3986
L_231266:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq %rax,0x1A8(%rbp)
	jmp L_231267
.p2align 0x4
L_473970:
L_230733:
	movq 0x0(%rbp),%r14
	movq 0xC8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0xC0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xB8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xB0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0xA8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0xA0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x98(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x90(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x88(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x80(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x78(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x70(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x68(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x60(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x58(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x48(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x40(%r14),%r15
	movq 0x38(%r14),%r11
	movq 0x30(%r14),%r10
	movq %r10,0xA8(%rbp)
	movq 0x28(%r14),%r9
	movq %r9,0xB0(%rbp)
	movq 0x20(%r14),%r8
	movq %r8,0xB8(%rbp)
	movq 0x18(%r14),%rsp
	movq %rsp,0xC0(%rbp)
	movq 0x10(%r14),%rsi
	movq %rsi,0xC8(%rbp)
	movq 0x8(%r14),%rdi
	movq 0x0(%r14),%rdx
	movq %rdx,0xD0(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%rdx
	movq %rdx,0xD8(%rbp)
	movq 0x8(%r14),%rdx
	movq %rdx,0xE0(%rbp)
	movq 0x10(%r14),%rdx
	movq %rdx,0xE8(%rbp)
	movq 0x18(%r14),%rcx
	movq %rcx,0xF0(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xF8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rdi),%rcx
	movq %rcx,0x100(%rbp)
	movq $0x9C9,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x108(%rbp)
	addq $0x40,%r12
	movq %rcx,0x0(%rdi)
	movq %r14,0x8(%rdi)
	movq %r10,0x10(%rdi)
	movq %r9,0x18(%rdi)
	movq %r8,0x20(%rdi)
	movq %rsp,0x28(%rdi)
	movq %rsi,0x30(%rdi)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xA73,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,0x110(%rbp)
	movq %r14,0x10(%rbx)
	addq $0x20,%r12
	movq %r11,0x0(%rbx)
	movq %rdi,0x8(%rbx)
	movq $0xA75,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x118(%rbp)
	addq $0x40,%r12
	movq %rcx,0x0(%r14)
	movq %rbx,0x8(%r14)
	movq %r10,0x10(%r14)
	movq %r9,0x18(%r14)
	movq %r8,0x20(%r14)
	movq %rsp,0x28(%r14)
	movq %rsi,0x30(%r14)
	movq $0xA79,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x120(%rbp)
	movq %r15,0x28(%rdi)
	addq $0x40,%r12
	movq %rsi,0x0(%rdi)
	movq %rsp,0x8(%rdi)
	movq %r8,0x10(%rdi)
	movq %r9,0x18(%rdi)
	movq %r10,0x20(%rdi)
	movq %rbx,0x30(%rdi)
	movq $0xA77,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x128(%rbp)
	movq %r11,0x0(%rdi)
	addq $0x20,%r12
	movq %rbx,0x8(%rdi)
	movq %r14,0x10(%rdi)
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x130(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x138(%rbp)
	addq $0x18,%r12
	movq %r11,0x0(%rdi)
	movq %r11,0x8(%rdi)
	movq $0x8FD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x140(%rbp)
	movq %r15,0x8(%r11)
	addq $0x40,%r12
	movq %rcx,0x0(%r11)
	movq %r10,0x10(%r11)
	movq %r9,0x18(%r11)
	movq %r8,0x20(%r11)
	movq %rsp,0x28(%r11)
	movq %rsi,0x30(%r11)
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x148(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x47B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x150(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x158(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x47B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x160(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	movq $0xD75,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x168(%rbp)
	addq $0x18,%r12
	movq %rdi,0x0(%r13)
	movq %r14,0x8(%r13)
	cmpq $0x1,%rdx
	je L_230779
L_230734:
	movq 0x8(%rdx),%r14
	movq %r14,0x170(%rbp)
	movq 0x0(%rdx),%r15
.p2align 0x4,,0x7
L_230735:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x178(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x180(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x188(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x190(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x198(%rbp)
	cmpq %r15,%r11
	jne L_229389
L_230737:
	testq %r11,%r11
	jnz L_473999
L_231257:
	movq (globalObjptr+0x2380)(%rip),%r15
	movq %r15,0x1A0(%rbp)
.p2align 0x4,,0x7
L_230741:
	movq $0x0,0x1A8(%rbp)
.p2align 0x4,,0x7
loop_2609:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_473998
.p2align 0x4,,0x7
L_230742:
	movq 0x198(%rbp),%r15
	cmpq %r15,0x1A8(%rbp)
	jl L_473997
L_230743:
	movq 0x1A0(%rbp),%r15
	movq $0xB75,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x180(%rbp),%r15
	cmpq $0x1,%r15
	je L_473995
L_230744:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x190(%rbp)
	cmpq %r11,%r14
	jne L_229389
L_230746:
	testq %r11,%r11
	jnz L_473992
L_231216:
	movq (globalObjptr+0x72E0)(%rip),%r15
	movq %r15,0x198(%rbp)
.p2align 0x4,,0x7
L_230750:
	movq $0x0,0x1A8(%rbp)
.p2align 0x4,,0x7
loop_2610:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_473991
.p2align 0x4,,0x7
L_230751:
	movq 0x190(%rbp),%r15
	cmpq %r15,0x1A8(%rbp)
	jl L_473990
L_230752:
	movq 0x198(%rbp),%r15
	movq $0xB75,0xFFFFFFFFFFFFFFF8(%r15)
	cmpq $0x1,0x178(%rbp)
	je L_473989
L_230753:
	movq %r15,0x180(%rbp)
L_230754:
	movq 0x178(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x190(%rbp)
	cmpq %r14,%r11
	jne L_229389
L_230756:
	testq %r11,%r11
	jnz L_473986
L_231201:
	movq (globalObjptr+0x72E8)(%rip),%r15
	movq %r15,0x198(%rbp)
.p2align 0x4,,0x7
L_230760:
	movq $0x0,0x1A8(%rbp)
.p2align 0x4,,0x7
loop_2611:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_473985
.p2align 0x4,,0x7
L_230761:
	movq 0x190(%rbp),%r13
	cmpq %r13,0x1A8(%rbp)
	jl L_473984
L_230762:
	movq 0x198(%rbp),%r14
	movq $0xB75,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x180(%rbp),%r15
L_230763:
	movq $0x1369,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x178(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x1A0(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x188(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x180(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_229486
L_230764:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_473982
L_230765:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_230767:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_230768
L_231180:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD4B,%r13
	jne L_230768
L_231181:
	movq 0x148(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_473977
L_230768:
	incl %ecx
	movl %ecx,0x188(%rbp)
	jo L_229418
L_230769:
	cmpq $0x1,%r15
	je L_473971
L_230770:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_230767
.p2align 0x4
L_473971:
L_230771:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_473975
.p2align 0x4,,0x7
L_230772:
	movl 0x188(%rbp),%ecx
L_230773:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_230774:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_230776
L_231177:
	movl %ecx,0x0(%r15)
L_230776:
	movq $0x1A97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x178(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x180(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x170(%rbp),%r14
	cmpq $0x1,%r14
	je L_473972
L_230777:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x170(%rbp)
	jmp L_230735
.p2align 0x4
L_473972:
L_230779:
	movq $0xCE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x110(%rbp)
	addq $0x58,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x98(%rbp),%r13
	movq %r13,0x20(%r15)
	movq 0x160(%rbp),%r13
	movq %r13,0x28(%r15)
	movq 0x150(%rbp),%r11
	movq %r11,0x30(%r15)
	movq 0x128(%rbp),%r10
	movq %r10,0x38(%r15)
	movq %r14,0x40(%r15)
	movq %r13,0x48(%r15)
	movq 0x68(%rbp),%r15
	movq 0x30(%r15),%r13
	movq 0x28(%r15),%r9
	movq 0x20(%r15),%r8
	movq 0x38(%r15),%rsp
	movq 0x8(%rsp),%rsi
	movq $0x3D41,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x58,%r12
	movq 0x78(%rbp),%rsp
	movq %rsp,0x0(%r15)
	movq 0x118(%rbp),%rsp
	movq %rsp,0x8(%r15)
	movq %r14,0x10(%r15)
	movq 0x120(%rbp),%rdi
	movq %rdi,0x18(%r15)
	movq %r14,0x20(%r15)
	movq %rsp,0x28(%r15)
	movq %r14,0x30(%r15)
	movq %r10,0x38(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x48(%r15)
	movq $0xCE7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	movq %rsi,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	movq %r9,0x18(%r14)
	movq %r8,0x20(%r14)
	addq $0x30,%r12
	movq (globalObjptr+0xF08)(%rip),%r15
	movq $0xB75,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xD8(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq %r11,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_230780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_99
.p2align 0x4
L_473975:
L_231178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_231179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231179
.p2align 0x4
.long 0x2FCF
L_231179:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	jmp L_230772
.p2align 0x4
L_473977:
L_231183:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_231184:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_229962
L_231186:
	movl %ecx,0x0(%r15)
	jmp L_229962
.p2align 0x4
L_473982:
L_231187:
	xorl %ecx,%ecx
	jmp L_230773
.p2align 0x4
L_473984:
L_231188:
	movq 0x1A8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x178(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x1B8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_231189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
L_473985:
L_231198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_231199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231199
.p2align 0x4
.long 0x3981
L_231199:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	jmp L_230761
.p2align 0x4
L_473986:
L_230757:
	movq 0x190(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_230758:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_230759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230759
.p2align 0x4
.long 0x3949
L_230759:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq %rax,0x198(%rbp)
	jmp L_230760
.p2align 0x4
L_473989:
L_231202:
	movq $0x1,%r14
	jmp L_230763
.p2align 0x4
L_473990:
L_231203:
	movq 0x1A8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x180(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x1B8(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_231204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
L_473991:
L_231213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_231214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231214
.p2align 0x4
.long 0x3981
L_231214:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	jmp L_230751
.p2align 0x4
L_473992:
L_230747:
	movq 0x190(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_230748:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_230749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230749
.p2align 0x4
.long 0x3949
L_230749:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq %rax,0x198(%rbp)
	jmp L_230750
.p2align 0x4
L_473995:
L_231217:
	cmpq $0x1,0x178(%rbp)
	je L_473996
L_231218:
	movq $0x1,0x180(%rbp)
	jmp L_230754
.p2align 0x4
L_473996:
L_231219:
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_230763
.p2align 0x4
L_473997:
L_231220:
	movq 0x1A8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x190(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x1C0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x1B0(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C0,%rbp
	leaq (L_231221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_46
.p2align 0x4
L_473998:
L_231254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_231255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231255
.p2align 0x4
.long 0x3985
L_231255:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	jmp L_230742
.p2align 0x4
L_473999:
L_230738:
	movq 0x198(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_230739:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_230740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230740
.p2align 0x4
.long 0x3948
L_230740:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq %rax,0x1A0(%rbp)
	jmp L_230741
.p2align 0x4
L_474003:
L_230547:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x58(%rbp)
	cmpq $0x1,%r14
	je L_474011
L_230548:
	movq 0x8(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_230549:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	cmpq $0x1,%r14
	jne L_474010
.p2align 0x4,,0x7
length_39:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474009
.p2align 0x4,,0x7
L_230563:
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_229389
L_230565:
	movq (globalObjptr+0x810)(%rip),%r15
	cmpl %r13d,0x0(%r15)
	jl L_474005
L_230566:
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_474004
L_230567:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_230549
.p2align 0x4
L_474004:
L_230569:
	movq $0x769,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474005:
L_230570:
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB0(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_474007
L_230571:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x14A2,%r14
	je L_474006
L_230710:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r13)
	movq 0x0(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0xF0(%rbp)
	movq $0x9C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xCBF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x346B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xE8(%rbp)
	leaq L_230719(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xE8,%rbp
	leaq (L_230711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_474006:
L_230572:
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,%r15
L_230573:
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xC0,%rbp
	leaq (loop_2607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp stronglyConnectedComponents_0
.p2align 0x4
L_474007:
L_230723:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474009:
L_230724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_230725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230725
.p2align 0x4
.long 0x30A7
L_230725:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_230563
.p2align 0x4
L_474010:
L_230550:
	movq 0x80(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_230551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_474011:
L_230732:
	movq $0x1,%r15
	jmp L_230569
.p2align 0x4
L_474012:
L_230487:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x38(%rbp)
	movq $0xCED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	cmpq $0x1,%r13
	je L_474026
L_230488:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_230489:
	incl %ecx
	jo L_229418
L_230490:
	cmpq $0x1,%r15
	je L_474013
L_230491:
	movq 0x8(%r15),%r15
	jmp L_230489
.p2align 0x4
L_474013:
L_230492:
L_230493:
	movslq %ecx,%rdx
	movq %rdx,0x50(%rbp)
	testq %rdx,%rdx
	jz L_474024
L_230494:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_230495:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1553,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_230496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230496
.p2align 0x4
.long 0x7AE
L_230496:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
L_230497:
	movq 0x48(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2603:
	cmpq 0x50(%rbp),%r15
	jnl L_474015
L_230541:
	cmpq $0x1,%r14
	je L_474014
L_230542:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x58(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2603
.p2align 0x4
L_474014:
L_229750:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474015:
L_230498:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230499
L_230539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_230540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230540
.p2align 0x4
.long 0x3938
L_230540:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_230499:
	movq 0x58(%rbp),%r15
	movq $0xCEB,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	movq %r11,0x50(%rbp)
	cmpq %r14,%r11
	jne L_229389
L_230501:
	movq $0x436D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x68(%rbp)
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq %r14,0x8(%r11)
	cmpl $0x0,%r13d
	jl L_474020
L_230502:
	movl $0x0,0x4C(%rbp)
loop_2604:
	movl 0x48(%rbp),%r15d
	cmpl %r15d,0x4C(%rbp)
	jl L_474019
L_230503:
	movq 0x50(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_230504:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_230505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230505
.p2align 0x4
.long 0x3930
L_230505:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2605:
	cmpq 0x50(%rbp),%r15
	jnl L_474016
L_230529:
	movq 0x70(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2605
.p2align 0x4
L_474016:
L_230506:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230507
L_230527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_230528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230528
.p2align 0x4
.long 0x3935
L_230528:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_230507:
	movq $0xCEF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_230508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_11
.p2align 0x4
L_474019:
L_230531:
	movslq 0x4C(%rbp),%r15
	salq $0x4,%r15
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq 0x18(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x70(%rbp)
	movq %r10,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_230532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_474020:
L_230538:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474024:
L_230545:
	movq (globalObjptr+0x2218)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_230497
.p2align 0x4
L_474026:
L_230546:
	xorl %ecx,%ecx
	jmp L_230493
.p2align 0x4
L_474027:
L_230486:
	movq 0x0(%rbp),%r15
	movq 0xF8(%r15),%r14
	movq 0xF0(%r15),%r13
	movq 0xE8(%r15),%r11
	movq 0xE0(%r15),%r10
	movq 0xD8(%r15),%r9
	movq 0xD0(%r15),%r8
	movq 0xC8(%r15),%rsp
	movq 0xC0(%r15),%rsi
	movl 0x14(%r15),%edi
	movq 0xB8(%r15),%rdx
	movq 0xB0(%r15),%rcx
	movq 0xA8(%r15),%rbx
	movq 0xA0(%r15),%rax
	movq %rax,(localObjptr+0x58)(%rip)
	movq 0x98(%r15),%rax
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x90(%r15),%rax
	movq %rax,(localObjptr+0x68)(%rip)
	movq 0x88(%r15),%rax
	movq %rax,(localObjptr+0x70)(%rip)
	movq 0x80(%r15),%rax
	movq %rax,(localObjptr+0x78)(%rip)
	movq 0x78(%r15),%rax
	movq %rax,(localObjptr+0x80)(%rip)
	movq 0x70(%r15),%rax
	movq %rax,(localObjptr+0x88)(%rip)
	movq 0x68(%r15),%rax
	movq %rax,(localObjptr+0x90)(%rip)
	movq 0x60(%r15),%rax
	movq %rax,(localObjptr+0x98)(%rip)
	movq 0x58(%r15),%rax
	movq %rax,(localObjptr+0xA0)(%rip)
	movq 0x50(%r15),%rax
	movq %rax,(localObjptr+0xA8)(%rip)
	movq 0x48(%r15),%rax
	movq %rax,(localObjptr+0xB0)(%rip)
	movq 0x40(%r15),%rax
	movq %rax,(localObjptr+0xB8)(%rip)
	movq 0x38(%r15),%rax
	movq %rax,(localObjptr+0xC0)(%rip)
	movq 0x30(%r15),%rax
	movq %rax,(localObjptr+0xC8)(%rip)
	movl 0x10(%r15),%eax
	movq %rbx,(localObjptr+0x50)(%rip)
	movq 0x8(%r15),%rbx
	movq %rcx,(localObjptr+0x48)(%rip)
	movq 0x0(%r15),%rcx
	movq %rdx,(localObjptr+0x40)(%rip)
	movq 0x28(%r15),%rdx
	movq %rdx,(localObjptr+0xD0)(%rip)
	movq 0x20(%r15),%rdx
	movq %rdx,(localObjptr+0xD8)(%rip)
	movq 0x18(%r15),%rdx
	movq $0x375,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rbx,0x0(%r15)
	movq %rcx,0x8(%r15)
	movl %edi,0x10(%r15)
	movl %eax,0x14(%r15)
	movq %r14,0x18(%r15)
	movq %r13,0x20(%r15)
	movq %r11,0x28(%r15)
	movq %r10,0x30(%r15)
	movq %r9,0x38(%r15)
	movq %r8,0x40(%r15)
	movq %rsp,0x48(%r15)
	movq %rsi,0x50(%r15)
	movq (localObjptr+0x40)(%rip),%r14
	movq %r14,0x58(%r15)
	movq (localObjptr+0x48)(%rip),%r14
	movq %r14,0x60(%r15)
	movq (localObjptr+0x50)(%rip),%r14
	movq %r14,0x68(%r15)
	movq (localObjptr+0x58)(%rip),%r14
	movq %r14,0x70(%r15)
	movq (localObjptr+0x60)(%rip),%r14
	movq %r14,0x78(%r15)
	movq (localObjptr+0x68)(%rip),%r14
	movq %r14,0x80(%r15)
	movq (localObjptr+0x70)(%rip),%r14
	movq %r14,0x88(%r15)
	movq (localObjptr+0x78)(%rip),%r14
	movq %r14,0x90(%r15)
	movq (localObjptr+0x80)(%rip),%r14
	movq %r14,0x98(%r15)
	movq (localObjptr+0x88)(%rip),%r14
	movq %r14,0xA0(%r15)
	movq (localObjptr+0x90)(%rip),%r14
	movq %r14,0xA8(%r15)
	movq (localObjptr+0x98)(%rip),%r14
	movq %r14,0xB0(%r15)
	movq (localObjptr+0xA0)(%rip),%r14
	movq %r14,0xB8(%r15)
	movq (localObjptr+0xA8)(%rip),%r14
	movq %r14,0xC0(%r15)
	movq (localObjptr+0xB0)(%rip),%r14
	movq %r14,0xC8(%r15)
	movq (localObjptr+0xB8)(%rip),%r14
	movq %r14,0xD0(%r15)
	movq (localObjptr+0xC0)(%rip),%r14
	movq %r14,0xD8(%r15)
	movq (localObjptr+0xC8)(%rip),%r14
	movq %r14,0xE0(%r15)
	movq (localObjptr+0xD0)(%rip),%r14
	movq %r14,0xE8(%r15)
	movq (localObjptr+0xD8)(%rip),%r14
	movq %r14,0xF0(%r15)
	movq %rdx,0xF8(%r15)
	addq $0x108,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp shrink_2
.p2align 0x4
L_474028:
L_230415:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r14
	je L_474030
L_230416:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
L_230417:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x80(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x90(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x98(%rbp)
	movslq %r14d,%r11
	movq %r11,0xA0(%rbp)
	cmpq %r11,%r15
	jne L_229389
L_230419:
	movq $0x4369,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xB0(%rbp)
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq %r14,0x8(%r11)
	movq $0x3481,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xC0(%rbp)
	movq %r13,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_230420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_474030:
L_230485:
	movq $0x1,%r15
L_230450:
	movq $0x769,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474031:
L_229437:
	movq 0x0(%rbp),%r15
	movq 0x80(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x88(%rbp)
	movq 0x0(%r15),%r9
	movq %r9,0x90(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r8
	movq %r8,0x98(%rbp)
	movq 0x8(%r15),%r8
	movq %r8,0xA0(%rbp)
	movq 0x10(%r15),%r8
	movq %r8,0xA8(%rbp)
	movq 0x18(%r15),%r8
	movq %r8,0xB0(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xB1,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0xC0(%rbp)
	addq $0x20,%r12
	movq %r15,0x0(%rsp)
	movq %r9,0x8(%rsp)
	movq %r15,0x10(%rsp)
	movq $0x71,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movl $0x0,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0xB1,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %rsi,0xC8(%rbp)
	addq $0x20,%r12
	movq %r9,0x0(%rsi)
	movq %r10,0x8(%rsi)
	movq %r9,0x10(%rsi)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0xD0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x71,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0xD8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%rdi)
	movl $0x0,0x4(%rdi)
	movq $0x703,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rdx,0xE0(%rbp)
	addq $0x18,%r12
	movq %r10,0x0(%rdx)
	movq %rdi,0x8(%rdx)
	movq $0x71,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0xE8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0xB1,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0xF0(%rbp)
	addq $0x20,%r12
	movq %r10,0x0(%rdi)
	movq %r11,0x8(%rdi)
	movq %r10,0x10(%rdi)
	movq $0x71,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rcx,0xF8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%rcx)
	movl $0x0,0x4(%rcx)
	movq $0xB1,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,0x100(%rbp)
	addq $0x20,%r12
	movq %rcx,0x0(%rbx)
	movq %r11,0x8(%rbx)
	movq %rcx,0x10(%rbx)
	movq $0x89,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,0x108(%rbp)
	addq $0x18,%r12
	movq %rcx,0x0(%rbx)
	movq %rcx,0x8(%rbx)
	movq $0x71,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rcx,0x110(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%rcx)
	movl $0x0,0x4(%rcx)
	movq $0x47B,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,0x118(%rbp)
	addq $0x18,%r12
	movq %r11,0x0(%rbx)
	movq %rcx,0x8(%rbx)
	movq $0x74D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x120(%rbp)
	addq $0x20,%r12
	movq %rsp,0x0(%r11)
	movq %rsi,0x8(%r11)
	movq %rdx,0x10(%r11)
	movq $0x759,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rcx,0x128(%rbp)
	addq $0x28,%r12
	movq %r10,0x0(%rcx)
	movq %r10,0x8(%rcx)
	movq %r11,0x10(%rcx)
	movq %rdi,0x18(%rcx)
	movq $0x705,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x48,%r12
	movq %rsi,0x0(%r10)
	movq %rsi,0x8(%r10)
	movq %rdx,0x10(%r10)
	movq %rdi,0x18(%r10)
	movq %rdi,0x20(%r10)
	movq %rdi,0x28(%r10)
	movq %rsp,0x30(%r10)
	movq %rdi,0x38(%r10)
	movq $0x75B,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rdx,0x130(%rbp)
	movq %r10,0x20(%rdx)
	addq $0x40,%r12
	movq %rdi,0x0(%rdx)
	movq %rsp,0x8(%rdx)
	movq %rdi,0x10(%rdx)
	movq %rdi,0x18(%rdx)
	movq %r11,0x28(%rdx)
	movq %rcx,0x30(%rdx)
	movq $0x337D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x20(%r11)
	movq %r9,0x28(%r11)
	movq %r9,0x30(%r11)
	movq %r14,0x38(%r11)
	addq $0x48,%r12
	movq %rsp,0x0(%r11)
	movq %rsi,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r15,0x18(%r11)
	movq %r11,0x140(%rbp)
	movq %r8,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_229438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
L_474032:
L_229385:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r14),%r15
	movq 0x18(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movb $0x7,0x0(%r13)
	cmpq $0x1,%r15
	je L_474052
L_229386:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq $0x1,0x40(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
L_229387:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x70(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x78(%rbp)
	cmpq %r15,%r11
	jne L_229389
L_229390:
	testq %r11,%r11
	jnz L_474049
L_229435:
	movq (globalObjptr+0x7270)(%rip),%r15
	movq %r15,0x80(%rbp)
.p2align 0x4,,0x7
L_229394:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474048
.p2align 0x4,,0x7
L_229395:
	movq $0x0,0x88(%rbp)
loop_2579:
	movq 0x78(%rbp),%r14
	cmpq %r14,0x88(%rbp)
	jl L_474034
L_229396:
	movq 0x80(%rbp),%r14
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0xF7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x18(%r15)
	movq %r14,0x20(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x2947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq $0x11F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_474033
L_229397:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_229387
.p2align 0x4
L_474033:
L_229398:
L_229399:
	movq $0x769,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474034:
L_229400:
	movq 0x88(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x68(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x98(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0xA0(%rbp)
	movq 0x18(%r13),%r10
	movq %r10,0xA8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq %r13,0xB0(%rbp)
	cmpq %r15,%r13
	jne L_229389
L_229402:
	testq %r13,%r13
	jnz L_474045
L_229431:
	movq (globalObjptr+0x7278)(%rip),%r15
	movq %r15,0xB8(%rbp)
.p2align 0x4,,0x7
L_229406:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2580:
	cmpq 0xB0(%rbp),%r15
	jnl L_474037
L_229425:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq 0x98(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xF2E,%r14
	je L_474036
L_229426:
	incl %ecx
	jo L_229418
L_229427:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r11,%r14
L_229428:
	movq 0xB8(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_2580
.p2align 0x4
L_474036:
L_229429:
	movq $0x1,%r14
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_229428
.p2align 0x4
L_474037:
L_229407:
	movq 0xB8(%rbp),%r15
	movq $0x18BB,0xFFFFFFFFFFFFFFF8(%r15)
	movslq %ecx,%r15
	movq %r15,0x98(%rbp)
	testq %r15,%r15
	jnz L_474043
L_229424:
	movq (globalObjptr+0x7280)(%rip),%r15
	movq %r15,0xB0(%rbp)
.p2align 0x4,,0x7
L_229411:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2581:
	cmpq 0x98(%rbp),%r15
	jnl L_474041
.p2align 0x4,,0x7
loop_2582:
	movslq %ecx,%r14
	movq 0xB8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_474039
L_229420:
	incl %ecx
	jo L_229418
L_229421:
	jmp loop_2582
.p2align 0x4
L_474039:
L_229417:
	incl %ecx
	jo L_229418
L_229419:
	movq 0xB0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2581
.p2align 0x4
L_474041:
L_229412:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474042
.p2align 0x4,,0x7
L_229413:
	movq 0xB0(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0xA0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0xA8(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x88(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x88(%rbp)
	jmp loop_2579
.p2align 0x4
L_474042:
L_229414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_229415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229415
.p2align 0x4
.long 0x38AE
L_229415:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_229413
.p2align 0x4
L_474043:
L_229408:
	movq 0x98(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_229409:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_229410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229410
.p2align 0x4
.long 0x38AD
L_229410:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0xB0(%rbp)
	jmp L_229411
.p2align 0x4
L_474045:
L_229403:
	movq 0xB0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_229404:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x156B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_229405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229405
.p2align 0x4
.long 0x38AC
L_229405:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0xB8(%rbp)
	jmp L_229406
.p2align 0x4
L_474048:
L_229432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_229433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229433
.p2align 0x4
.long 0x38AF
L_229433:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_229395
.p2align 0x4
L_474049:
L_229391:
	movq 0x78(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_229392:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_229393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229393
.p2align 0x4
.long 0x1D8B
L_229393:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,0x80(%rbp)
	jmp L_229394
.p2align 0x4
L_474052:
L_229436:
	movq $0x1,%r15
	jmp L_229399
.p2align 0x4
L_474053:
L_231600:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r14),%r13
	movq 0x18(%r14),%r11
	movq %r11,0x30(%rbp)
	cmpq $0x1,%r13
	je L_474056
L_231601:
	movq 0x8(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_231602:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474055
.p2align 0x4,,0x7
L_231603:
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_474054
L_231604:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_231602
.p2align 0x4
L_474054:
L_231606:
	movq $0x769,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474055:
L_231607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_231608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231608
.p2align 0x4
.long 0x4B5
L_231608:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_231603
.p2align 0x4
L_474056:
L_231609:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_231606
.p2align 0x4
L_474057:
L_231610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x328,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_231611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231611
.p2align 0x4
.long 0x45C
L_231611:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_229382
.p2align 0x4
.long 0x3988
L_231306:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x180(%rbp)
	movq (globalObjptr+0xF58)(%rip),%r15
	movq %r15,0x188(%rbp)
	movq (globalObjptr+0xCE00)(%rip),%r15
	movq %r15,0x190(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x180,%rbp
	leaq (L_231307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_3
.p2align 0x4
.long 0x39B0
makeValue_10:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231527
L_231534:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_231535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231535
.p2align 0x4
.long 0x39B1
L_231535:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_231527:
	movq 0x1B8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13A1,%r15
	je L_474059
L_231533:
	movq 0x0(%r14),%r15
L_231531:
	movq 0x1A0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x1B0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x1B0(%rbp)
	jmp loop_2619
.p2align 0x4
L_474059:
L_231528:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D6,%r14
	je L_474060
L_231532:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r15)
	movq $0x100F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x28B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_231531
.p2align 0x4
L_474060:
L_231529:
	movq 0x0(%r15),%r14
	movq %r14,0x1C0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_231530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1381
.p2align 0x4
.long 0x39B0
makeValue_11:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231542
L_231549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_231550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231550
.p2align 0x4
.long 0x39B1
L_231550:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_231542:
	movq 0x1B8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13A1,%r15
	je L_474062
L_231548:
	movq 0x0(%r14),%r15
L_231546:
	movq 0x1A0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x1B0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x1B0(%rbp)
	jmp loop_2618
.p2align 0x4
L_474062:
L_231543:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D6,%r14
	je L_474063
L_231547:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r15)
	movq $0x100F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x28B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_231546
.p2align 0x4
L_474063:
L_231544:
	movq 0x0(%r15),%r14
	movq %r14,0x1C0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_231545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1381
.p2align 0x4
.long 0x39B3
makeValue_12:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231559
L_231593:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_231594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231594
.p2align 0x4
.long 0x39B5
L_231594:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_231559:
	movq 0x1C0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x13A1,%r14
	je L_474077
L_231592:
	movq 0x0(%r15),%r15
	movq %r15,0x1C0(%rbp)
L_231564:
	movq 0x1B8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x1C8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_229486
L_231565:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_474075
L_231566:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_231568:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_231569
L_231581:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD44,%r13
	jne L_231569
L_231582:
	movq 0x0(%r14),%r13
	cmpq %r13,0x130(%rbp)
	je L_474070
L_231569:
	incl %ecx
	movl %ecx,0x1B8(%rbp)
	jo L_229418
L_231570:
	cmpq $0x1,%r15
	je L_474065
L_231571:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_231568
.p2align 0x4
L_474065:
L_231572:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231573
L_231579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D8,%rbp
	leaq (L_231580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231580
.p2align 0x4
.long 0x39B4
L_231580:
	addq $0xFFFFFFFFFFFFFE28,%rbp
L_231573:
	movl 0x1B8(%rbp),%ecx
L_231574:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_231575:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_231577
L_231578:
	movl %ecx,0x0(%r15)
L_231577:
	movq $0x1A89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1C0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1C8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq 0x1A8(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x1B0(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x1B0(%rbp)
	jmp loop_2617
.p2align 0x4
L_474070:
L_231584:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_231585:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_229962
L_231587:
	movl %ecx,0x0(%r15)
	jmp L_229962
.p2align 0x4
L_474075:
L_231588:
	xorl %ecx,%ecx
	jmp L_231574
.p2align 0x4
L_474077:
L_231560:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D6,%r15
	je L_474078
L_231591:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movq $0x100F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x28B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x1C0(%rbp)
	addq $0x10,%r12
	jmp L_231564
.p2align 0x4
L_474078:
L_231561:
	movq 0x0(%r14),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C8,%rbp
	leaq (L_231562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1381
.p2align 0x4
.long 0x394A
L_230780:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xF08)(%rip),%r15
	movq %r15,0x180(%rbp)
	movq (globalObjptr+0xCE00)(%rip),%r15
	movq %r15,0x188(%rbp)
	addq $0x178,%rbp
	leaq (L_230781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_4
.p2align 0x4
.long 0x397F
L_231189:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231190
L_231196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_231197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231197
.p2align 0x4
.long 0x3980
L_231197:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_231190:
	movq 0x1B0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x139A,%r15
	je L_474080
L_231195:
	movq 0x0(%r14),%r15
L_231193:
	movq 0x198(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x1A8(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x1A8(%rbp)
	jmp loop_2611
.p2align 0x4
L_474080:
L_231191:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D8,%r14
	je L_474081
L_231194:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x4117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x28A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_231193
.p2align 0x4
L_474081:
L_231192:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x4115,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x28A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_231193
.p2align 0x4
.long 0x397F
L_231204:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231205
L_231211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_231212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231212
.p2align 0x4
.long 0x3980
L_231212:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_231205:
	movq 0x1B0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x139A,%r15
	je L_474083
L_231210:
	movq 0x0(%r14),%r15
L_231208:
	movq 0x198(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x1A8(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x1A8(%rbp)
	jmp loop_2610
.p2align 0x4
L_474083:
L_231206:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D8,%r14
	je L_474084
L_231209:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x4117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x28A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_231208
.p2align 0x4
L_474084:
L_231207:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x4115,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x28A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_231208
.p2align 0x4
.long 0x3982
L_231221:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231222
L_231252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_231253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231253
.p2align 0x4
.long 0x3984
L_231253:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_231222:
	movq 0x1B8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x139A,%r14
	je L_474098
L_231251:
	movq 0x0(%r15),%r15
	movq %r15,0x1B8(%rbp)
L_231225:
	movq 0x1B0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x1C0(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_229486
L_231226:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_474096
L_231227:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_231229:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_231230
L_231242:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD4A,%r13
	jne L_231230
L_231243:
	movq 0x130(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_474091
L_231230:
	incl %ecx
	movl %ecx,0x1B0(%rbp)
	jo L_229418
L_231231:
	cmpq $0x1,%r15
	je L_474086
L_231232:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_231229
.p2align 0x4
L_474086:
L_231233:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231234
L_231240:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_231241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231241
.p2align 0x4
.long 0x3983
L_231241:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_231234:
	movl 0x1B0(%rbp),%ecx
L_231235:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_231236:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_231238
L_231239:
	movl %ecx,0x0(%r15)
L_231238:
	movq $0x1A95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1B8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1C0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq 0x1A0(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x1A8(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x1A8(%rbp)
	jmp loop_2609
.p2align 0x4
L_474091:
L_231245:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_231246:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_229962
L_231248:
	movl %ecx,0x0(%r15)
	jmp L_229962
.p2align 0x4
L_474096:
L_231249:
	xorl %ecx,%ecx
	jmp L_231235
.p2align 0x4
L_474098:
L_231223:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D8,%r15
	je L_474099
L_231250:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x4117,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x28A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x1B8(%rbp)
	addq $0x10,%r12
	jmp L_231225
.p2align 0x4
L_474099:
L_231224:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x4115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x2877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x28A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1E8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x1B8(%rbp)
	addq $0x10,%r12
	jmp L_231225
.p2align 0x4
.long 0x31B9
L_230711:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xC0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq %r14,0xF0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF0,%rbp
	leaq (L_230712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x25
L_230719:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230720
L_230721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_230722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230722
.p2align 0x4
.long 0x3946
L_230722:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_230720:
	movq $0x2947,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x30A9
loop_2607:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r14
	movq %r14,0xB8(%rbp)
	cmpq $0x1,%r14
	je L_230647
L_230574:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
.p2align 0x4,,0x7
L_230575:
	cmpq $0x1,%r15
	je L_230644
L_230576:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	je L_474128
L_230577:
	movq %r14,0xC0(%rbp)
	movq %r13,%r15
L_230578:
	movq 0x8(%r15),%r14
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_229486
L_230579:
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_474126
L_230580:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0xC8(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_230582:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_230583
L_230620:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCA6,%r13
	jne L_230583
L_230621:
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x78(%rbp)
	je L_474106
L_230583:
	movl 0xC8(%rbp),%r13d
	incl %r13d
	jo L_229418
L_230584:
	cmpq $0x1,%r15
	je L_474102
L_230585:
	movl %r13d,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_230582
.p2align 0x4
L_474102:
	movl %r13d,%ecx
L_230587:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_230588:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_230590
L_230619:
	movl %ecx,0x0(%r15)
L_230590:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_230591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_474106:
L_230623:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474123
.p2align 0x4,,0x7
L_230624:
	movl 0xC8(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_229497
L_230625:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_474121
L_230626:
	movq 0xD0(%rbp),%r15
L_230627:
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0xC8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_229486
L_230628:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_474119
L_230629:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_230631:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_230632
L_230683:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCAC,%r13
	jne L_230632
L_230684:
	movq 0x8(%r14),%r13
	movq 0xA8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_474114
L_230632:
	incl %ecx
	movl %ecx,0xD0(%rbp)
	jo L_229418
L_230633:
	cmpq $0x1,%r15
	je L_474107
L_230634:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_230631
.p2align 0x4
L_474107:
L_230635:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474112
.p2align 0x4,,0x7
L_230636:
	movl 0xD0(%rbp),%ecx
L_230637:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_230638:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_230640
L_230680:
	movl %ecx,0x0(%r15)
L_230640:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x13B7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1959,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq %r13,%r15
L_230641:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0xC0(%rbp),%r14
	cmpq $0x1,%r14
	je L_474108
L_230642:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xC0(%rbp)
	jmp L_230578
.p2align 0x4
L_474108:
L_230644:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_474109
L_230645:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	jmp L_230575
.p2align 0x4
L_474109:
L_230647:
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_230648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1961
.p2align 0x4
L_474112:
L_230681:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_230682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230682
.p2align 0x4
.long 0x3942
L_230682:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_230636
.p2align 0x4
L_474114:
L_230686:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_230687:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_474115
L_230689:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_230641
.p2align 0x4
L_474115:
L_230688:
	movq %r13,%r15
	jmp L_230641
.p2align 0x4
L_474119:
L_230690:
	xorl %ecx,%ecx
	jmp L_230637
.p2align 0x4
L_474121:
L_230691:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0xC8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0xD0(%rbp),%r15
	jmp L_230627
.p2align 0x4
L_474123:
L_230692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_230693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230693
.p2align 0x4
.long 0x3943
L_230693:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_230624
.p2align 0x4
L_474126:
L_230694:
	xorl %ecx,%ecx
	jmp L_230587
.p2align 0x4
L_474128:
L_230695:
	movq 0x0(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_230701
L_230696:
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r9
	movq %r13,%r14
	movq %r9,%r13
.p2align 0x4,,0x7
L_230697:
	movq 0x0(%r13),%r10
	movq 0x8(%r10),%r9
	cmpq %r9,0x8(%r14)
	je L_474131
L_230698:
	cmpq $0x1,%r11
	je L_474129
L_230699:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	jmp L_230697
.p2align 0x4
L_474129:
L_230701:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_230647
L_230702:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB8(%rbp)
	jmp L_230575
.p2align 0x4
L_474131:
L_230704:
	cmpq $0x1,%r15
	je L_230644
L_230705:
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r15
	jmp L_230578
.p2align 0x4
.long 0x30A3
L_230551:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_230552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3931
L_230508:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230509
L_230525:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_230526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230526
.p2align 0x4
.long 0x3934
L_230526:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_230509:
	movl $0x0,0x20(%rbp)
loop_2606:
	movl 0x48(%rbp),%r15d
	cmpl %r15d,0x20(%rbp)
	jl L_474139
L_230510:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_474138
L_230511:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_230512:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474137
.p2align 0x4,,0x7
L_230513:
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_474136
L_230514:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_230512
.p2align 0x4
L_474136:
L_230516:
	movq $0x769,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474137:
L_230517:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_230518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230518
.p2align 0x4
.long 0x4B5
L_230518:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_230513
.p2align 0x4
L_474138:
L_230519:
	movq $0x1,%r15
	jmp L_230516
.p2align 0x4
L_474139:
L_230520:
	movslq 0x20(%rbp),%r15
	salq $0x4,%r15
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq 0x18(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x78(%rbp)
	movq $0x3DC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_230521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
.long 0x3936
L_230532:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230533
L_230536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_230537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230537
.p2align 0x4
.long 0x3937
L_230537:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_230533:
	movq 0x78(%rbp),%r15
	andq $0x1,%r15
	jnz L_229962
L_230534:
	movq $0x1955,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x4C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x70(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	incl %r14d
	movl %r14d,0x4C(%rbp)
	jmp loop_2604
.p2align 0x4
.long 0x3926
L_230420:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xA0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_230421:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_230422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230422
.p2align 0x4
.long 0x3927
L_230422:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2598:
	cmpq 0xA0(%rbp),%r15
	jnl L_474143
L_230483:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2598
.p2align 0x4
L_474143:
L_230423:
	movq %r14,0xD8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xB8,%rbp
	leaq (L_230424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_6
.p2align 0x4
.long 0x30FE
L_229438:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_229439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
.long 0x3989
L_231307:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231308
L_231513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_231514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231514
.p2align 0x4
.long 0x39AE
L_231514:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_231308:
	movq $0x3257,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x180(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_231309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x39B0
L_231530:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	jmp L_231531
.p2align 0x4
.long 0x39B0
L_231545:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	jmp L_231546
.p2align 0x4
.long 0x39B3
L_231562:
	addq $0xFFFFFFFFFFFFFE38,%rbp
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231564
L_231589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_231590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231590
.p2align 0x4
.long 0x39B5
L_231590:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_231564
.p2align 0x4
.long 0x394A
L_230781:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230782
L_231175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_231176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231176
.p2align 0x4
.long 0x397E
L_231176:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_230782:
	movq $0x3257,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x178(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_230783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x3944
L_230712:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230713
L_230717:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_230718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230718
.p2align 0x4
.long 0x3945
L_230718:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_230713:
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_474148
L_230714:
L_230715:
	movq $0x2943,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0xD8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xC8(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0xF7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x2945,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x20,%r12
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	movq 0xB8(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r14,0x0(%r11)
	movq %r13,0x78(%rbp)
	jmp L_230573
.p2align 0x4
L_474148:
L_230716:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xE0(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_230715
.p2align 0x4
.long 0x473
L_230591:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_230592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x393A
L_230648:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x838)(%rip),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0xC0(%rbp)
	movl %r13d,0xD0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xC0,%rbp
	leaq (L_230649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addCuts_0
.p2align 0x4
.long 0x30A3
L_230552:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0x10330)(%rip),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_230553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3932
L_230521:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230522
L_230523:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_230524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230524
.p2align 0x4
.long 0x3933
L_230524:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_230522:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	incl 0x20(%rbp)
	jmp loop_2606
.p2align 0x4
.long 0x3928
L_230424:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230425
L_230481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_230482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230482
.p2align 0x4
.long 0x392F
L_230482:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_230425:
	movq $0x3453,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_230426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x38B0
L_229439:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_474152
L_229440:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x140(%rbp)
	movb $0x2,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_229441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_474152:
L_229442:
	movq 0x70(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_229443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
.long 0x3989
L_231309:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231310
L_231511:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_231512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231512
.p2align 0x4
.long 0x39AE
L_231512:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_231310:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_474153
L_231311:
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r15
L_231312:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x188(%rbp)
	movq $0x3451,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x170(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_231313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_474153:
L_231319:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_474154
L_231320:
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r15
L_231321:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x170(%rbp)
	movq $0x34FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x30(%r15)
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_231322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_474154:
L_231328:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	cmpq $0x1,%r14
	je L_474155
L_231329:
	movq $0x336D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x168(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_231330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
L_474155:
L_231342:
	movq 0xF0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %r14,%rdx
	jne L_229389
L_231344:
	testq %rdx,%rdx
	jz L_474178
L_231345:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_231346:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1679,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231347
.p2align 0x4
.long 0x3992
L_231347:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq %rax,0x60(%rbp)
L_231348:
	movq $0x0,0x68(%rbp)
.p2align 0x4,,0x7
loop_2620:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474176
.p2align 0x4,,0x7
L_231349:
	movq 0x68(%rbp),%r15
	cmpq 0x58(%rbp),%r15
	jnl L_474175
L_231440:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xF0(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x70(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x80(%rbp)
	cmpq %r15,%r11
	jne L_229389
L_231442:
	testq %r11,%r11
	jnz L_474172
L_231488:
	movq (globalObjptr+0x7328)(%rip),%r15
	movq %r15,0x90(%rbp)
.p2align 0x4,,0x7
L_231446:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474171
.p2align 0x4,,0x7
L_231447:
	movq $0x0,0xA0(%rbp)
loop_2623:
	movq 0x80(%rbp),%r15
	cmpq %r15,0xA0(%rbp)
	jl L_474156
L_231448:
	movq 0x90(%rbp),%r15
	movq $0xAFF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x68(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq 0x70(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	salq $0x4,%r11
	movq %r15,0x8(%r14,%r11,1)
	incq %r13
	movq %r13,0x68(%rbp)
	jmp loop_2620
.p2align 0x4
L_474156:
L_231449:
	movq 0xA0(%rbp),%r13
	movl %r13d,%ecx
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x78(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0xD0(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r10
	movq %r10,0x108(%rbp)
	movq 0x10(%r11),%r13
	movq %r13,0x110(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_229486
L_231450:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_474169
L_231451:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_231453:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_231454
L_231477:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD42,%r13
	jne L_231454
L_231478:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0xF8(%rbp)
	je L_474164
L_231454:
	incl %ecx
	movl %ecx,0x118(%rbp)
	jo L_229418
L_231455:
	cmpq $0x1,%r15
	je L_474157
L_231456:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_231453
.p2align 0x4
L_474157:
L_231457:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474162
.p2align 0x4,,0x7
L_231458:
	movl 0x118(%rbp),%ecx
L_231459:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_231460:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_231462
L_231474:
	movl %ecx,0x0(%r15)
L_231462:
	movq $0x1371,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1A85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x110(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_804:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_474159
.p2align 0x4,,0x7
L_231469:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474158
.p2align 0x4,,0x7
L_231470:
	movq 0x90(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xA0(%rbp),%r14
	movq %r14,%r11
	salq $0x4,%r11
	movq 0xD0(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x108(%rbp),%r11
	movq %r11,0x8(%r15,%r13,1)
	incq %r14
	movq %r14,0xA0(%rbp)
	jmp loop_2623
.p2align 0x4
L_474158:
L_231471:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231472
.p2align 0x4
.long 0x39A4
L_231472:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	jmp L_231470
.p2align 0x4
L_474159:
L_231463:
	movq %r14,0x168(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_231464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_474162:
L_231475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231476
.p2align 0x4
.long 0x39A5
L_231476:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	jmp L_231458
.p2align 0x4
L_474164:
L_231480:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_231481:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_474165
L_231483:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp x_804
.p2align 0x4
L_474165:
L_231482:
	movq %r13,%r15
	jmp x_804
.p2align 0x4
L_474169:
L_231484:
	xorl %ecx,%ecx
	jmp L_231459
.p2align 0x4
L_474171:
L_231485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231486
.p2align 0x4
.long 0x39A6
L_231486:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	jmp L_231447
.p2align 0x4
L_474172:
L_231443:
	movq 0x80(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_231444:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x167D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231445
.p2align 0x4
.long 0x39A2
L_231445:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq %rax,0x90(%rbp)
	jmp L_231446
.p2align 0x4
L_474175:
L_231350:
	movq 0x60(%rbp),%r14
	movq $0x767,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x47B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x98(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x89,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq $0x8DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x30,%r12
	movq 0x100(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0xA8(%rbp),%r10
	movq %r10,0x10(%r14)
	movq 0xB0(%rbp),%r9
	movq %r9,0x18(%r14)
	movq 0xB8(%rbp),%r8
	movq %r8,0x20(%r14)
	movq $0xC2D,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x58(%rbp)
	addq $0x20,%r12
	movq %r14,0x0(%rsp)
	movq 0x48(%rbp),%rsi
	movq %rsi,0x8(%rsp)
	movq 0x148(%rbp),%rdi
	movq %rdi,0x10(%rsp)
	movq $0xCF9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x20,%r12
	movq %rsp,0x0(%r15)
	movq %rdi,0x8(%r15)
	movq 0x50(%rbp),%rdx
	movq %rdx,0x10(%r15)
	movq $0x941,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x88(%rbp),%rcx
	movq %rcx,0x8(%r15)
	movq $0xCF5,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %r14,0x40(%rcx)
	movq %r13,0x58(%rcx)
	addq $0x88,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%rcx)
	movq 0xC0(%rbp),%r13
	movq %r13,0x8(%rcx)
	movq %r8,0x10(%rcx)
	movq %r9,0x18(%rcx)
	movq %r10,0x20(%rcx)
	movq 0x28(%rbp),%rbx
	movq %rbx,0x28(%rcx)
	movq 0x30(%rbp),%rbx
	movq %rbx,0x30(%rcx)
	movq 0x38(%rbp),%rbx
	movq %rbx,0x38(%rcx)
	movq 0x40(%rbp),%rbx
	movq %rbx,0x48(%rcx)
	movq %rsi,0x50(%rcx)
	movq %rdx,0x60(%rcx)
	movq %rdi,0x68(%rcx)
	movq %rsp,0x70(%rcx)
	movq %r15,0x78(%rcx)
	movq $0xCF7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	movq %rcx,0x28(%r15)
	addq $0x40,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r8,0x10(%r15)
	movq %r9,0x18(%r15)
	movq %r10,0x20(%r15)
	movq %r11,0x30(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x168(%rbp)
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_231351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp transformStatements_0
.p2align 0x4
L_474176:
L_231489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231490
.p2align 0x4
.long 0x39A7
L_231490:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	jmp L_231349
.p2align 0x4
L_474178:
L_231492:
	movq (globalObjptr+0x7320)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_231348
.p2align 0x4
.long 0x394A
L_230783:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230784
L_231173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_231174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231174
.p2align 0x4
.long 0x397E
L_231174:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_230784:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_474181
L_230785:
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r15
L_230786:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x180(%rbp)
	movq $0x3489,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x158(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x168(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_230787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_474181:
L_230793:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x9C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x68(%rbp)
	addq $0x40,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0xA8(%rbp),%r11
	movq %r11,0x10(%r14)
	movq 0xB0(%rbp),%r10
	movq %r10,0x18(%r14)
	movq 0xB8(%rbp),%r9
	movq %r9,0x20(%r14)
	movq 0xC0(%rbp),%r8
	movq %r8,0x28(%r14)
	movq 0xC8(%rbp),%rsp
	movq %rsp,0x30(%r14)
	movq 0x58(%rbp),%rsi
	movq 0x30(%rsi),%rdi
	movq 0x28(%rsi),%rdx
	movq 0x20(%rsi),%rcx
	movq 0x38(%rsi),%rbx
	movq 0x8(%rbx),%rax
	movq $0x3D59,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r15,0x28(%rsi)
	addq $0x40,%r12
	movq %rsp,0x0(%rsi)
	movq %r8,0x8(%rsi)
	movq %r9,0x10(%rsi)
	movq %r10,0x18(%rsi)
	movq %r11,0x20(%rsi)
	movq %r13,0x30(%rsi)
	movq $0xCDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	movq %rax,0x0(%r15)
	movq %rsi,0x8(%r15)
	movq %rdi,0x10(%r15)
	movq %rdx,0x18(%r15)
	movq %rcx,0x20(%r15)
	addq $0x30,%r12
	movq $0xCE1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x78(%rbp)
	addq $0x28,%r12
	movq %r14,0x0(%r8)
	movq 0x140(%rbp),%r14
	movq %r14,0x8(%r8)
	movq %r15,0x10(%r8)
	movq %r15,0x18(%r8)
	movq $0xCE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x30,%r12
	movq %r13,0x0(%r15)
	movq %r8,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq 0x50(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_230794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x459
L_230592:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_230593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x393B
L_230649:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230650
L_230678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_230679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230679
.p2align 0x4
.long 0x3941
L_230679:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_230650:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x939,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x93B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xC0(%rbp)
	addq $0x20,%r12
	movq %r15,0x0(%r13)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq $0x6FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_230651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x302F
L_230553:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq (globalObjptr+0x10338)(%rip),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_230554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3929
L_230426:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230427
L_230479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_230480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230480
.p2align 0x4
.long 0x392E
L_230480:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_230427:
	movl $0x0,0x9C(%rbp)
loop_2599:
	movl 0x9C(%rbp),%r15d
	cmpl %r15d,0x98(%rbp)
	je L_474185
L_230428:
	movslq %r15d,%r14
	cmpq 0x90(%rbp),%r14
	jnb L_474184
L_230430:
	movq 0x78(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x10(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_230431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_474184:
L_230003:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474185:
L_230445:
	movq $0x3483,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_230446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x38B0
L_229441:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_229442
.p2align 0x4
.long 0x38B1
L_229443:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_474187
L_229444:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x140(%rbp)
	movb $0x2,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_229445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_474187:
L_229446:
	movq 0x70(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_474188
L_229447:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x140(%rbp)
	movb $0x15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_229448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_474188:
L_229449:
	movq 0x70(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_474189
L_230410:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_230411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_474189:
L_229451:
	movq 0x68(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_229452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
.long 0x398A
L_231313:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_231314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_98
.p2align 0x4
.long 0x398D
L_231322:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231323
L_231505:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231506
.p2align 0x4
.long 0x39AC
L_231506:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_231323:
	movq $0x3485,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x30(%r15)
	movq %r15,0x168(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_231324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x398F
L_231330:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231331
L_231500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231501
.p2align 0x4
.long 0x39AA
L_231501:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_231331:
	movq $0x3247,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x168(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_231332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x39A3
L_231464:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x108(%rbp)
L_231465:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_231466
L_231467:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_474192
L_231468:
	movq 0x0(%r14),%r15
	movq %r15,0x108(%rbp)
	jmp L_231469
.p2align 0x4
L_474192:
L_231466:
	movq (globalObjptr+0x7330)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3993
L_231351:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231352
L_231438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231439
.p2align 0x4
.long 0x39A1
L_231439:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_231352:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_474194
L_231353:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x38(%rbp)
L_231354:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x88(%rbp)
	movq %r15,0x168(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_231355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_98
.p2align 0x4
L_474194:
L_231437:
	movq $0x1,0x30(%rbp)
L_231396:
	movq $0x769,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x1,0x48(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_231397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
.long 0x394B
L_230787:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_230788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_99
.p2align 0x4
.long 0x394E
L_230794:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movl 0x160(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230795
L_231168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231169
.p2align 0x4
.long 0x397C
L_231169:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230795:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x3245,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_230796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x5ED
L_230593:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_230594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x393C
L_230651:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movl 0xF0(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230652
L_230676:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_230677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230677
.p2align 0x4
.long 0x3940
L_230677:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_230652:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xE8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x93D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x28,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0xD8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0xD8,%rbp
	leaq (L_230653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3933
.p2align 0x4
.long 0x30A8
L_230554:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230555
L_230729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_230730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230730
.p2align 0x4
.long 0x30F3
L_230730:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_230555:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x98(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_230556:
	addl 0x0(%r15),%ecx
	movl %ecx,0x98(%rbp)
	jo L_229418
L_230557:
	cmpq $0x1,%r14
	je L_474198
L_230558:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_230556
.p2align 0x4
L_474198:
L_230559:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230560
L_230727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_230728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230728
.p2align 0x4
.long 0x3947
L_230728:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_230560:
	movl 0x98(%rbp),%ecx
	testl %ecx,%ecx
	jz L_474199
L_230561:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
x_802:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0xA8(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB0(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_230562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_474199:
L_230726:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_802
.p2align 0x4
.long 0x3929
L_230431:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230432
L_230476:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_230477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230477
.p2align 0x4
.long 0x392D
L_230477:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_230432:
	movq 0xA8(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_230434
L_230472:
	shrq $0x1,%r15
	movl %r15d,%r14d
	testl %r14d,%r14d
	jz L_474204
L_230474:
	movl 0x9C(%rbp),%r15d
	incl %r15d
	jo L_229418
L_230475:
	movl %r15d,0x9C(%rbp)
	jmp loop_2599
.p2align 0x4
L_474204:
L_230434:
	movq 0xA0(%rbp),%rdx
	testq %rdx,%rdx
	jz L_474213
L_230435:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1681,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_230436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230436
.p2align 0x4
.long 0x392A
L_230436:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0x48(%rbp)
L_230437:
	movl $0x0,0x90(%rbp)
	movq $0x0,0x98(%rbp)
loop_2600:
	movq 0xA0(%rbp),%r15
	cmpq %r15,0x98(%rbp)
	jl L_474212
L_230438:
	movq 0x48(%rbp),%r15
	movq $0x18B3,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x90(%rbp),%rdx
	movq %rdx,0x98(%rbp)
	testq %rdx,%rdx
	jz L_474211
L_230439:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_230440:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_230441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230441
.p2align 0x4
.long 0x392B
L_230441:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x90(%rbp)
L_230442:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2601:
	cmpq 0x98(%rbp),%r15
	jnl L_474208
.p2align 0x4,,0x7
loop_2602:
	movslq %ecx,%r14
	movq 0x48(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_474206
L_230458:
	incl %ecx
	jo L_229418
L_230459:
	jmp loop_2602
.p2align 0x4
L_474206:
L_230456:
	incl %ecx
	jo L_229418
L_230457:
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2601
.p2align 0x4
L_474208:
L_230443:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230444
L_230453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_230454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230454
.p2align 0x4
.long 0x392C
L_230454:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_230444:
	movq 0x90(%rbp),%r15
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0xF7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x38,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%r14)
	movq $0x2947,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq %r14,0x8(%r15)
	movq $0x11F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	jmp L_230445
.p2align 0x4
L_474211:
L_230461:
	movq (globalObjptr+0x72D8)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_230442
.p2align 0x4
L_474212:
L_230462:
	movq 0x98(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x78(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xA8(%rbp)
	movq 0x10(%r13),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_230463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_474213:
L_230471:
	movq (globalObjptr+0x72D0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_230437
.p2align 0x4
.long 0x4B3
L_230446:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230447
L_230451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_230452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230452
.p2align 0x4
.long 0x7AC
L_230452:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_230447:
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_230450
L_230448:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_230417
.p2align 0x4
.long 0x38B0
L_229445:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_229446
.p2align 0x4
.long 0x38B0
L_229448:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_229449
.p2align 0x4
.long 0x38B1
L_230411:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_229451
.p2align 0x4
.long 0x38B2
L_229452:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229453
L_230408:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_230409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230409
.p2align 0x4
.long 0x3920
L_230409:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_229453:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_474218
L_229454:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x140(%rbp)
	movb $0x2,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_229455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_474218:
L_229457:
	movq 0x68(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_474219
L_229458:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x140(%rbp)
	movb $0x15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_229459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_474219:
L_229461:
	movq 0x68(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_474220
L_230397:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_230398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_474220:
L_229463:
	movq $0x323D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_229464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x398B
L_231314:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x180,%rbp
	leaq (L_231315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_4
.p2align 0x4
.long 0x398E
L_231324:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231325
L_231503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231504
.p2align 0x4
.long 0x39AB
L_231504:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_231325:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_231328
L_231326:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_231321
.p2align 0x4
.long 0x398F
L_231332:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231333
L_231498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231499
.p2align 0x4
.long 0x39AA
L_231499:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_231333:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_231342
L_231334:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r15
L_231335:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x170(%rbp)
	movq $0x34E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_231336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
.long 0x3994
L_231355:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231356
L_231435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231436
.p2align 0x4
.long 0x39A0
L_231436:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_231356:
	movq 0x90(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_229389
L_231358:
	movl %r13d,0x170(%rbp)
	movq $0x380B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x148(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	movq %r14,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_231359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
.long 0x4B2
L_231397:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq $0x1,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_231398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x394C
L_230788:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x178,%rbp
	leaq (L_230789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_3
.p2align 0x4
.long 0x394F
L_230796:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230797
L_231166:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231167
.p2align 0x4
.long 0x397B
L_231167:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230797:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_474229
L_230798:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r15
L_230799:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x88(%rbp)
	cmpq %r15,%r11
	jne L_229389
L_230801:
	movq $0x4367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x98(%rbp)
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq %r14,0x8(%r11)
	movq $0x344B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq %r13,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_230802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_474229:
L_230812:
	movq $0x325D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_230813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x6FF
L_230594:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230595
L_230617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_230618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230618
.p2align 0x4
.long 0x5EE
L_230618:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_230595:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_230596:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_229418
L_230597:
	cmpq $0x1,%r14
	je L_474231
L_230598:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_230596
.p2align 0x4
L_474231:
L_230599:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230600
L_230615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_230616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230616
.p2align 0x4
.long 0x48C
L_230616:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_230600:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_474232
L_230601:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
toString_350:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (rev_348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_474232:
L_230614:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_350
.p2align 0x4
.long 0x393D
L_230653:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xC8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	cmpq $0x1,%r13
	je L_474244
L_230654:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_230655:
	incl %ecx
	jo L_229418
L_230656:
	cmpq $0x1,%r15
	je L_474236
L_230657:
	movq 0x8(%r15),%r15
	jmp L_230655
.p2align 0x4
L_474236:
L_230658:
L_230659:
	movslq %ecx,%rdx
	movq %rdx,0x78(%rbp)
	testq %rdx,%rdx
	jz L_474242
L_230660:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_230661:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_230662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230662
.p2align 0x4
.long 0x393E
L_230662:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0xA8(%rbp)
L_230663:
	movq 0x68(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2608:
	cmpq 0x78(%rbp),%r15
	jnl L_474238
L_230670:
	cmpq $0x1,%r14
	je L_229750
L_230671:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0xA8(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2608
.p2align 0x4
L_474238:
L_230664:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230665
L_230668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_230669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230669
.p2align 0x4
.long 0x393F
L_230669:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_230665:
	movq 0xA8(%rbp),%r15
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0xF7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x38,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x90(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x98(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0xA0(%rbp),%r15
	movq %r15,0x28(%r14)
	movq $0x2947,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq %r14,0x8(%r15)
	movq $0x11F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_230569
L_230666:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_230549
.p2align 0x4
L_474242:
L_230674:
	movq (globalObjptr+0xD40)(%rip),%r15
	movq %r15,0xA8(%rbp)
	jmp L_230663
.p2align 0x4
L_474244:
L_230675:
	xorl %ecx,%ecx
	jmp L_230659
.p2align 0x4
.long 0x30A3
L_230562:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x98(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (length_38+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x3928
L_230463:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq %r14,%r15
	andq $0x1,%r15
	jz L_230465
L_230467:
	shrq $0x1,%r14
	movl %r14d,%r13d
	testl %r13d,%r13d
	jz L_474246
L_230469:
	movl 0x90(%rbp),%ecx
	incl %ecx
	jo L_229418
L_230470:
	movq 0xA8(%rbp),%r15
L_230466:
	movl %ecx,0x90(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x98(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x98(%rbp)
	jmp loop_2600
.p2align 0x4
L_474246:
L_230465:
	movl 0x90(%rbp),%ecx
	movq $0x1,%r15
	jmp L_230466
.p2align 0x4
.long 0x38B1
L_229455:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229457
L_230405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_230406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230406
.p2align 0x4
.long 0x3920
L_230406:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_229457
.p2align 0x4
.long 0x38B1
L_229459:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229461
L_230402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_230403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230403
.p2align 0x4
.long 0x3920
L_230403:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_229461
.p2align 0x4
.long 0x38B2
L_230398:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229463
L_230400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_230401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230401
.p2align 0x4
.long 0x3925
L_230401:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_229463
.p2align 0x4
.long 0x38B2
L_229464:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229465
L_230395:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_230396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230396
.p2align 0x4
.long 0x3925
L_230396:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_229465:
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_474251
L_229466:
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r15
L_229467:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x138(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x140(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x148(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x150(%rbp)
	movq $0x34DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0xF0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r14,0x18(%r15)
	movq %r15,0x160(%rbp)
	movq %r13,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_229468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_474251:
L_229510:
	movq 0x98(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (x_796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_44
.p2align 0x4
.long 0x398C
L_231315:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231316
L_231508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_231509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231509
.p2align 0x4
.long 0x39AD
L_231509:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_231316:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_231319
L_231317:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_231312
.p2align 0x4
.long 0x3990
L_231336:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231337
L_231495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231496
.p2align 0x4
.long 0x39A9
L_231496:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_231337:
	movq $0x344F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x168(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_231338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x3995
L_231359:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231360
L_231433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231434
.p2align 0x4
.long 0x399F
L_231434:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_231360:
	movq 0xA8(%rbp),%r15
	cmpq $0x1,%r15
	je L_474257
L_231361:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_229389
L_231363:
	movl %r13d,0x170(%rbp)
	movq $0x3AAB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_231364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_18
.p2align 0x4
L_474257:
L_231430:
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_474259
L_231431:
	movq $0x1,0x90(%rbp)
	xchgq %r14,%r15
L_231367:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_229389
L_231369:
	movl %r13d,0x170(%rbp)
	movq $0x3AAB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_231370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_18
.p2align 0x4
L_474259:
L_231432:
	movq $0x1,0x90(%rbp)
	movq $0x1,0xA0(%rbp)
L_231372:
	movq $0x6FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0xB8(%rbp)
	cmpq %r11,%r15
	jne L_229389
L_231374:
	movq $0x4379,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xC0(%rbp)
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq %r13,0x8(%r11)
	movq $0x3487,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x168(%rbp)
	movq %r14,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_231375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x75D
L_231398:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_474262
L_231399:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
L_231400:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x58(%rbp)
	movq $0x1,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_231401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_474262:
L_231408:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp shrink_2
.p2align 0x4
.long 0x394D
L_230789:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230790
L_231170:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_231171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231171
.p2align 0x4
.long 0x397D
L_231171:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_230790:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_230793
L_230791:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_230786
.p2align 0x4
.long 0x3950
L_230802:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x88(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_230803:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_230804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230804
.p2align 0x4
.long 0x3951
L_230804:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2612:
	cmpq 0x88(%rbp),%r15
	jnl L_474265
L_231163:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2612
.p2align 0x4
L_474265:
L_230805:
	movq %r14,0x180(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x160,%rbp
	leaq (L_230806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_2
.p2align 0x4
.long 0x3954
L_230813:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230814
L_231157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231158
.p2align 0x4
.long 0x3972
L_231158:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230814:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_474267
L_230815:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r15
L_230816:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x168(%rbp)
	movq $0x3449,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_230817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_474267:
L_230821:
	movq $0x3243,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_230822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x473
rev_348:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_474271
L_230602:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_230603:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474270
.p2align 0x4,,0x7
L_230604:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_474269
L_230605:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_230603
.p2align 0x4
L_474269:
L_230607:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_474270:
L_230611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_230612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230612
.p2align 0x4
.long 0x4FC
L_230612:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_230604
.p2align 0x4
L_474271:
L_230613:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_230607
.p2align 0x4
.long 0x3939
length_38:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp length_39
.p2align 0x4
.long 0x3102
L_229468:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229469
L_230392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_230393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230393
.p2align 0x4
.long 0x3185
L_230393:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_229469:
	movq 0x150(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_229389
L_229471:
	movl %r13d,0x160(%rbp)
	movq $0x3965,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xF0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_229472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x38B4
x_796:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229511
L_230356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230357
.p2align 0x4
.long 0x391F
L_230357:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_229511:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_474274
L_229512:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x128(%rbp)
	movb $0x2,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_229513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_474274:
L_229515:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	cmpq $0x1,%r14
	je L_474275
L_229516:
	movq $0x3367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x30(%r15)
	movq %r15,0x128(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_229517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
L_474275:
L_229595:
	movq $0xBB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x48(%rbp)
	movq 0xB0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x50(%rbp)
	cmpq %r14,%rdx
	jne L_229389
L_229597:
	testq %rdx,%rdx
	jz L_474284
L_229598:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_229599:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x167F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_229600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229600
.p2align 0x4
.long 0x38C2
L_229600:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x28(%rbp)
L_229601:
	movl $0x0,0x30(%rbp)
	movq $0x0,0x58(%rbp)
loop_2583:
	movq 0x50(%rbp),%rdx
	cmpq %rdx,0x58(%rbp)
	jl L_474282
L_229602:
	movq 0x28(%rbp),%r15
	movq $0x18B7,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x30(%rbp),%rdx
	movq %rdx,0x50(%rbp)
	testq %rdx,%rdx
	jz L_474281
L_229603:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_229604:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1679,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_229605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229605
.p2align 0x4
.long 0x38C3
L_229605:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x30(%rbp)
L_229606:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2584:
	cmpq 0x50(%rbp),%r15
	jnl L_474279
.p2align 0x4,,0x7
loop_2593:
	movslq %ecx,%r14
	movq 0x28(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_474277
L_230216:
	incl %ecx
	jo L_229418
L_230217:
	jmp loop_2593
.p2align 0x4
L_474277:
L_230214:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r13
	incl %ecx
	jo L_229418
L_230215:
	movq %r15,%r11
	movq %r15,%r10
	movq 0x30(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r11
	movq %r14,0x0(%r9,%r11,1)
	movq %r9,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	salq $0x4,%r10
	movq %r13,0x8(%r9,%r10,1)
	incq %r15
	jmp loop_2584
.p2align 0x4
L_474279:
L_229607:
	movq 0x30(%rbp),%r15
	movq $0x767,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xA0(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x128,%rbp
	leaq (L_229608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyStatements_0
.p2align 0x4
L_474281:
L_230219:
	movq (globalObjptr+0x7290)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_229606
.p2align 0x4
L_474282:
L_230220:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xB0(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x60(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x68(%rbp)
	movq %r11,0x128(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_230221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
L_474284:
L_230300:
	movq (globalObjptr+0x7288)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_229601
.p2align 0x4
.long 0x3991
L_231338:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231339
L_231493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231494
.p2align 0x4
.long 0x39A8
L_231494:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_231339:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_231342
L_231340:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_231335
.p2align 0x4
.long 0x3996
L_231364:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231365
L_231428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231429
.p2align 0x4
.long 0x399C
L_231429:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_231365:
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_474289
L_231366:
	jmp L_231367
.p2align 0x4
L_474289:
L_231427:
	movq 0x90(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_231372
.p2align 0x4
.long 0x3997
L_231370:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231371
L_231425:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231426
.p2align 0x4
.long 0x399C
L_231426:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_231371:
	movq 0xA0(%rbp),%r15
	movq 0x90(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_231372
.p2align 0x4
.long 0x3998
L_231375:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0xB8(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_231376:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231377
.p2align 0x4
.long 0x3999
L_231377:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2621:
	cmpq 0xB8(%rbp),%r15
	jnl L_474292
L_231423:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2621
.p2align 0x4
L_474292:
L_231378:
	movq %r14,0x198(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x168,%rbp
	leaq (L_231379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_1
.p2align 0x4
.long 0x4B4
L_231401:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq $0x1,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_231402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x3952
L_230806:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230807
L_231161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231162
.p2align 0x4
.long 0x397A
L_231162:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230807:
	movq $0x348B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_230808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x3955
L_230817:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230818
L_231154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231155
.p2align 0x4
.long 0x3973
L_231155:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230818:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_230821
L_230819:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_230816
.p2align 0x4
.long 0x3954
L_230822:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230823
L_231152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231153
.p2align 0x4
.long 0x3972
L_231153:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230823:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_474297
L_230824:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r15
L_230825:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x168(%rbp)
	movq $0x348D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_230826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_474297:
L_230830:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x9C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x3379,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x30,%r12
	movq %r15,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r14,0x18(%r11)
	movq %r13,0x20(%r11)
	movq %r11,0x160(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_230831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
.long 0x473
bug_630:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230608
L_230609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_230610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230610
.p2align 0x4
.long 0x49D
L_230610:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_230608:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2FD4
L_229472:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229473
L_230390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_230391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230391
.p2align 0x4
.long 0x3185
L_230391:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_229473:
	movq 0x138(%rbp),%r15
	cmpq $0x1,%r15
	je L_474301
L_229474:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_229389
L_229476:
	movl %r13d,0x168(%rbp)
	movq $0x3961,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_229477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
L_474301:
L_230387:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_474303
L_230388:
	movq $0x1,0x78(%rbp)
	xchgq %r14,%r15
L_229480:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_229389
L_229482:
	movl %r13d,0x168(%rbp)
	movq $0x3961,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x160(%rbp)
	addq $0x10,%r12
	addq $0x160,%rbp
	leaq (L_229483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
L_474303:
L_230389:
	movq $0x1,%r13
	movq $0x1,%r11
	xchgq %r13,%r15
	xchgq %r11,%r14
L_229485:
	movq $0x6F5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x272D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x6F1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x272F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x6F7,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movl $0x0,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movq $0x1,0x0(%r8)
	movq $0x2733,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	addq $0x10,%r12
	movq $0x1,0x0(%rsp)
	movq $0x6F9,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %rsi,0x78(%rbp)
	movq %rsp,0x8(%rsi)
	addq $0x18,%r12
	movl $0x0,0x0(%rsi)
	movl $0x0,0x4(%rsi)
	movq $0x6FB,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	addq $0x10,%r12
	movq $0x1,0x0(%rsp)
	movq $0x6FD,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x138(%rbp)
	movq %rsp,0x0(%rdi)
	movq %r15,0x10(%rdi)
	movq %r8,0x18(%rdi)
	movq %r14,0x20(%rdi)
	movq %r11,0x28(%rdi)
	movq %r9,0x30(%rdi)
	movq %r10,0x38(%rdi)
	movq %r13,0x40(%rdi)
	addq $0x58,%r12
	movq %rsi,0x8(%rdi)
	movq 0x150(%rbp),%r13
	movq %r13,0x48(%rdi)
	movq 0x140(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x158(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_229486
L_229487:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_474316
L_229488:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_229490:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_229491
L_230374:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD53,%r13
	jne L_229491
L_230375:
	movq 0x110(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_474311
L_229491:
	incl %ecx
	movl %ecx,0x140(%rbp)
	jo L_229418
L_229492:
	cmpq $0x1,%r15
	je L_474304
L_229493:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_229490
.p2align 0x4
L_474304:
L_229494:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229495
L_230372:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_230373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230373
.p2align 0x4
.long 0x3924
L_230373:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_229495:
	movl 0x140(%rbp),%ecx
L_229496:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_229498:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_229500
L_230371:
	movl %ecx,0x0(%r15)
L_229500:
	movq $0x1AA7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x158(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_474306
L_229501:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_474305
L_229502:
L_229503:
	movq $0x41B9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x70(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x100(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_229504:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_229505:
	movq $0x3491,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x88,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x100(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x120(%rbp),%r11
	movq %r11,0x18(%r15)
	movq 0x118(%rbp),%r11
	movq %r11,0x20(%r15)
	movq %r14,0x28(%r15)
	movq %r13,0x30(%r15)
	movq %r14,0x38(%r15)
	movq %r13,0x40(%r15)
	movq 0xC0(%rbp),%r13
	movq %r13,0x48(%r15)
	movq %r14,0x50(%r15)
	movq 0xC8(%rbp),%r13
	movq %r13,0x58(%r15)
	movq 0x108(%rbp),%r13
	movq %r13,0x60(%r15)
	movq 0x138(%rbp),%r13
	movq %r13,0x68(%r15)
	movq %r14,0x70(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x78(%r15)
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_229506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_474305:
L_230360:
	movq $0x41B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x100(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_229504
.p2align 0x4
L_474306:
L_230361:
	movq 0x70(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (x_801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
L_474311:
L_230377:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_230378:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_229962
L_230380:
	movl %ecx,0x0(%r15)
	jmp L_229962
.p2align 0x4
L_474316:
L_230381:
	xorl %ecx,%ecx
	jmp L_229496
.p2align 0x4
.long 0x38B4
L_229513:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229515
L_230353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230354
.p2align 0x4
.long 0x391E
L_230354:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_229515
.p2align 0x4
.long 0x38B5
L_229517:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_229518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x38C4
L_229608:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229609
L_230211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230212
.p2align 0x4
.long 0x3905
L_230212:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_229609:
	movq 0x20(%rbp),%r15
	movq 0xF8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0xE0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0xD8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0xD0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0xB0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x58(%r15),%r14
	movq 0x50(%r15),%r13
	movq %r13,0x108(%rbp)
	movq 0x48(%r15),%r11
	movq %r11,0x110(%rbp)
	movq 0x40(%r15),%r10
	movq %r10,0x120(%rbp)
	movq 0x38(%r15),%r9
	movq %r9,0x128(%rbp)
	movq 0x18(%r15),%r9
	movq %r9,0x130(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x138(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r8)
	movq %r15,0x8(%r8)
	movq 0x8(%r9),%rsp
	movq $0x8DB,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x140(%rbp)
	movq %rsp,0x0(%r9)
	addq $0x30,%r12
	movq %r8,0x8(%r9)
	movq %r13,0x10(%r9)
	movq %r11,0x18(%r9)
	movq %r10,0x20(%r9)
	movq 0x40(%r14),%r13
	movq 0x38(%r14),%r11
	movq 0x30(%r14),%r10
	movq 0x28(%r14),%rsp
	movq 0x20(%r14),%rsi
	movq 0x48(%r14),%rdi
	movq 0x8(%rdi),%rdx
	movq $0x40B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x8C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x148(%rbp)
	movq %rdx,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	movq %rsp,0x28(%r15)
	movq %rsi,0x30(%r15)
	addq $0x40,%r12
	movq $0x3249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r8,0x0(%r15)
	movq %r9,0x8(%r15)
	movq %r15,0x158(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_229610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x3906
L_230221:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230222
L_230297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230298
.p2align 0x4
.long 0x3907
L_230298:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_230222:
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je L_474321
L_230223:
	movl 0x30(%rbp),%ecx
	movq $0x1,%r15
L_230224:
	movl %ecx,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_2583
.p2align 0x4
L_474321:
L_230225:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x78(%rbp)
	cmpq %rdx,%r14
	jne L_229389
L_230227:
	testq %rdx,%rdx
	jz L_474331
L_230228:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_230229:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1683,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230230
.p2align 0x4
.long 0x3907
L_230230:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x80(%rbp)
L_230231:
	movl $0x0,0x34(%rbp)
	movq $0x0,0x88(%rbp)
loop_2594:
	movq 0x78(%rbp),%r15
	cmpq %r15,0x88(%rbp)
	jl L_474329
L_230232:
	movq 0x80(%rbp),%r15
	movq $0x18B5,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x34(%rbp),%rdx
	movq %rdx,0x68(%rbp)
	testq %rdx,%rdx
	jz L_474328
L_230233:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_230234:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x167D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230235
.p2align 0x4
.long 0x3908
L_230235:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x70(%rbp)
L_230236:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2595:
	cmpq 0x68(%rbp),%r15
	jnl L_474325
.p2align 0x4,,0x7
loop_2596:
	movslq %ecx,%r14
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_474323
L_230247:
	incl %ecx
	jo L_229418
L_230248:
	jmp loop_2596
.p2align 0x4
L_474323:
L_230245:
	incl %ecx
	jo L_229418
L_230246:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x70(%rbp),%r11
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r14
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	salq $0x4,%r13
	movq %r9,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_2595
.p2align 0x4
L_474325:
L_230237:
	movq 0x70(%rbp),%r15
	movq $0xAFF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x34(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_229389
L_230239:
	movq 0x60(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (x_799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
L_474328:
L_230250:
	movq (globalObjptr+0x72C0)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_230236
.p2align 0x4
L_474329:
L_230251:
	movq 0x88(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x68(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0xE0(%rbp)
	movq %r13,0x128(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_230252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
L_474331:
L_230296:
	movq (globalObjptr+0x72B8)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_230231
.p2align 0x4
.long 0x399A
L_231379:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231380
L_231421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231422
.p2align 0x4
.long 0x399E
L_231422:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_231380:
	movq $0x344D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x168(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_231381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x4B2
L_231402:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231403
L_231410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_231411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231411
.p2align 0x4
.long 0x5EE
L_231411:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_231403:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_474336
L_231404:
L_231405:
	movq $0x2947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_231408
L_231406:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_231400
.p2align 0x4
L_474336:
L_231000:
	movq (globalObjptr+0x1E50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3953
L_230808:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230809
L_231159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231160
.p2align 0x4
.long 0x3979
L_231160:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230809:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_230812
L_230810:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_230799
.p2align 0x4
.long 0x3955
L_230826:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230827
L_231149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231150
.p2align 0x4
.long 0x3973
L_231150:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230827:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_230830
L_230828:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_230825
.p2align 0x4
.long 0x3956
L_230831:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230832
L_231147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231148
.p2align 0x4
.long 0x3976
L_231148:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230832:
	movq $0x336B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_230833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
.long 0x38B3
L_229477:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229478
L_230385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_230386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230386
.p2align 0x4
.long 0x3185
L_230386:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_229478:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_474343
L_229479:
	movq 0x138(%rbp),%r14
	movq %r14,0x78(%rbp)
	jmp L_229480
.p2align 0x4
L_474343:
L_230384:
	movq $0x1,%r13
	movq 0x138(%rbp),%r14
	xchgq %r13,%r15
	jmp L_229485
.p2align 0x4
.long 0x38B3
L_229483:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229484
L_230382:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_230383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230383
.p2align 0x4
.long 0x3185
L_230383:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_229484:
	movq 0x138(%rbp),%r15
	movq 0x78(%rbp),%r14
	jmp L_229485
.p2align 0x4
.long 0x38B1
L_229506:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229507
L_230358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_230359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230359
.p2align 0x4
.long 0x3920
L_230359:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_229507:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_229510
L_229508:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_229467
.p2align 0x4
.long 0x3921
x_801:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230362
L_230369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_230370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230370
.p2align 0x4
.long 0x3923
L_230370:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_230362:
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_229505
L_230363:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movb $0x2,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_230364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x38B5
L_229518:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229519
L_230350:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230351
.p2align 0x4
.long 0x391D
L_230351:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_229519:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x9D8)(%rip),%r14
	movq %r14,0x128(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x130(%rbp)
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_229520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x38C5
L_229610:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229611
L_230209:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_230210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230210
.p2align 0x4
.long 0x3904
L_230210:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_229611:
	movq $0x18B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0xC0,%r12
	movq 0x140(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x128(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x138(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r13,0x18(%r14)
	movq %r13,0x20(%r14)
	movq 0x130(%rbp),%r11
	movq %r11,0x28(%r14)
	movq 0x58(%rbp),%r11
	movq %r11,0x30(%r14)
	movq 0x60(%rbp),%r11
	movq %r11,0x38(%r14)
	movq 0x68(%rbp),%r11
	movq %r11,0x40(%r14)
	movq 0x120(%rbp),%r11
	movq %r11,0x48(%r14)
	movq 0x110(%rbp),%r11
	movq %r11,0x50(%r14)
	movq 0x108(%rbp),%r11
	movq %r11,0x58(%r14)
	movq 0x70(%rbp),%r11
	movq %r11,0x60(%r14)
	movq 0x78(%rbp),%r11
	movq %r11,0x68(%r14)
	movq %r13,0x70(%r14)
	movq 0x80(%rbp),%r11
	movq %r11,0x78(%r14)
	movq 0x88(%rbp),%r11
	movq %r11,0x80(%r14)
	movq 0xA0(%rbp),%r11
	movq %r11,0x88(%r14)
	movq 0xB0(%rbp),%r11
	movq %r11,0x90(%r14)
	movq 0xE0(%rbp),%r11
	movq %r11,0x98(%r14)
	movq %r13,0xA0(%r14)
	movq 0x148(%rbp),%r13
	movq %r13,0xA8(%r14)
	movq 0xE8(%rbp),%r13
	movq %r13,0xB0(%r14)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_474351
L_229612:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x60(%rbp)
L_229613:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x78(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x80(%rbp)
	movq %r13,0x128(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_229614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_44
.p2align 0x4
L_474351:
L_230208:
	movq $0x1,0x20(%rbp)
L_229624:
	movq $0x769,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_474352
L_229625:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
L_229626:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq $0x3D97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_229627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_474352:
L_229631:
	movq 0xD0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x1,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_229632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
.long 0x3909
x_799:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230240
L_230242:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230243
.p2align 0x4
.long 0x3907
L_230243:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_230240:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r13
	movl 0x34(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movq $0x2723,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x30(%rbp),%ecx
	incl %ecx
	jo L_229418
L_230241:
	jmp L_230224
.p2align 0x4
.long 0x390A
L_230252:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x18(%r15),%r14
	cmpq $0x1,0x8(%r14)
	je L_474365
L_230253:
	xorl %ecx,%ecx
L_230254:
	movq 0xE8(%rbp),%r14
	movq 0x10(%r14),%r13
	movb 0x4(%r13),%r15b
	testb %r15b,%r15b
	jz L_474357
L_230255:
	testl %ecx,%ecx
	jnz addDummy_0
L_230257:
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je addDummy_1
L_230258:
	movl 0x34(%rbp),%ecx
	movq $0x1,%r15
L_230259:
	movl %ecx,0x34(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x88(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x88(%rbp)
	jmp loop_2594
.p2align 0x4
addDummy_1:
addDummy_0:
	movq 0x70(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_474356
L_230261:
	movl $0x1,0x0(%r15)
	movq 0x60(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_230262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
L_474356:
L_230265:
	movl 0x34(%rbp),%ecx
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_230259
.p2align 0x4
L_474357:
L_230267:
	testl %ecx,%ecx
	jz L_230257
L_230269:
	movq 0xE8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x110(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x108(%rbp)
	jne L_229389
L_230271:
	testq %rdx,%rdx
	jz L_474362
L_230272:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_230273:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1569,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230274
.p2align 0x4
.long 0x390C
L_230274:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0xE8(%rbp)
L_230275:
	movl $0x0,0x120(%rbp)
	movq $0x0,0x128(%rbp)
.p2align 0x4,,0x7
loop_2597:
	movq 0x128(%rbp),%r14
	cmpq 0x110(%rbp),%r14
	jnl L_474359
L_230283:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x108(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	movl %r11d,0x124(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,0x8(%r9)
	je L_474358
L_230284:
	movl 0x120(%rbp),%ecx
	movq $0x1,%r15
.p2align 0x4,,0x7
L_230285:
	movl %ecx,0x120(%rbp)
	movq 0xE8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x128(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x128(%rbp)
	jmp loop_2597
.p2align 0x4
L_474358:
L_230286:
	movq %r11,0x138(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_230287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_1
.p2align 0x4
L_474359:
L_230276:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230277
L_230281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_230282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230282
.p2align 0x4
.long 0x390E
L_230282:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_230277:
	movq 0xE8(%rbp),%r15
	movq $0xBC3,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xBC5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x394F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x128(%rbp)
	addq $0x18,%r12
	movl 0x120(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	addq $0x128,%rbp
	leaq (x_800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_7
.p2align 0x4
L_474362:
L_230293:
	movq (globalObjptr+0x72C8)(%rip),%r15
	movq %r15,0xE8(%rbp)
	jmp L_230275
.p2align 0x4
L_474365:
L_230294:
	movl $0x1,%ecx
	jmp L_230254
.p2align 0x4
.long 0x399B
L_231381:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0xA8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r13
	je L_474374
L_231382:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_231383:
	incl %ecx
	jo L_229418
L_231384:
	cmpq $0x1,%r15
	je L_474366
L_231385:
	movq 0x8(%r15),%r15
	jmp L_231383
.p2align 0x4
L_474366:
L_231386:
L_231387:
	movslq %ecx,%rdx
	movq %rdx,0xA8(%rbp)
	testq %rdx,%rdx
	jz L_474372
L_231388:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_231389:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231390
.p2align 0x4
.long 0x399C
L_231390:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq %rax,0xB0(%rbp)
L_231391:
	movq 0x40(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2622:
	cmpq 0xA8(%rbp),%r15
	jnl L_474368
L_231415:
	cmpq $0x1,%r14
	je L_229750
L_231416:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0xB0(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2622
.p2align 0x4
L_474368:
L_231392:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231393
L_231413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_231414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231414
.p2align 0x4
.long 0x399D
L_231414:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_231393:
	movq 0xB0(%rbp),%r14
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0xF7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x90(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0xA0(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x80(%rbp),%r13
	movq %r13,0x18(%r15)
	movq %r14,0x20(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x2947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq $0x11F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_474369
L_231394:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_231354
.p2align 0x4
L_474369:
L_231395:
	movq %r15,0x30(%rbp)
	jmp L_231396
.p2align 0x4
L_474372:
L_231419:
	movq (globalObjptr+0xD40)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_231391
.p2align 0x4
L_474374:
L_231420:
	xorl %ecx,%ecx
	jmp L_231387
.p2align 0x4
.long 0x3957
L_230833:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (loop_2613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp stronglyConnectedComponents_0
.p2align 0x4
.long 0x3921
L_230364:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229505
L_230366:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_230367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230367
.p2align 0x4
.long 0x3922
L_230367:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	jmp L_229505
.p2align 0x4
.long 0x38B6
L_229520:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x128(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_229521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x38C6
L_229614:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229615
L_230206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230207
.p2align 0x4
.long 0x38CA
L_230207:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_229615:
	movq 0x88(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je L_474380
L_229616:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_474376
L_229617:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_229613
.p2align 0x4
L_474376:
L_229618:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_474379
L_229619:
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_229620:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474378
.p2align 0x4,,0x7
L_229621:
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_474377
L_229622:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_229620
.p2align 0x4
L_474377:
L_229623:
	movq %r15,0x20(%rbp)
	jmp L_229624
.p2align 0x4
L_474378:
L_229643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_229644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229644
.p2align 0x4
.long 0x38C7
L_229644:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_229621
.p2align 0x4
L_474379:
L_229645:
	movq $0x1,0x20(%rbp)
	jmp L_229624
.p2align 0x4
L_474380:
L_229646:
	movq 0x88(%rbp),%r15
	movq 0x48(%r15),%r14
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_229389
L_229648:
	movq 0x80(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_229389
L_229650:
	cmpl %r9d,%r11d
	jne L_474381
L_229653:
	movl %r11d,0x130(%rbp)
	movq $0x3973,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x18(%r11)
	addq $0x28,%r12
	movq %r15,0x0(%r11)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r11,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_229654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_43
.p2align 0x4
L_474381:
L_229652:
	movq (globalObjptr+0x4E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3118
L_229627:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229628
L_229640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_229641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229641
.p2align 0x4
.long 0x3119
L_229641:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_229628:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_229631
L_229629:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_229626
.p2align 0x4
.long 0x511
L_229632:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_229637
L_229633:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_229634:
	movq 0x0(%r15),%r13
	movq 0x18(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r10)
	cmpq $0x1,%r14
	je L_474387
L_229635:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_229634
.p2align 0x4
L_474387:
L_229637:
	movq $0x1,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_229638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x390B
L_230262:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movq 0x10(%r14),%r15
L_230263:
	movl 0x34(%rbp),%ecx
	incl %ecx
	jo L_229418
	jmp L_230259
.p2align 0x4
.long 0x390F
L_230287:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230288
L_230290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_230291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230291
.p2align 0x4
.long 0x3910
L_230291:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_230288:
	movq $0x2775,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x124(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x120(%rbp),%ecx
	incl %ecx
	jo L_229418
	jmp L_230285
.p2align 0x4
.long 0x390A
x_800:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230278
L_230279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230280
.p2align 0x4
.long 0x390D
L_230280:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_230278:
	movq $0x10B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_230263
.p2align 0x4
.long 0x3958
loop_2613:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230834
L_231145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231146
.p2align 0x4
.long 0x3978
L_231146:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230834:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_230912
L_230835:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x78(%rbp)
.p2align 0x4,,0x7
L_230836:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474430
.p2align 0x4,,0x7
L_230837:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_230909
L_230838:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	cmpq $0x1,%r15
	je L_474421
L_230839:
	movq %r15,0x78(%rbp)
	movq %r13,%r15
L_230840:
	movq 0x8(%r15),%r14
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_229486
L_230841:
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_474419
L_230842:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x80(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_230844:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_230845
L_230882:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB0,%r13
	jne L_230845
L_230883:
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x70(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_474397
L_230845:
	movl 0x80(%rbp),%r13d
	incl %r13d
	jo L_229418
L_230846:
	cmpq $0x1,%r15
	je L_474393
L_230847:
	movl %r13d,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_230844
.p2align 0x4
L_474393:
	movl %r13d,%ecx
L_230849:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_230850:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_230852
L_230881:
	movl %ecx,0x0(%r15)
L_230852:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_230853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_474397:
L_230885:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474416
.p2align 0x4,,0x7
L_230886:
	movl 0x80(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_229497
L_230887:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_474414
L_230888:
	movq 0x88(%rbp),%r15
L_230889:
	movq 0x10(%r15),%r13
	movq %r13,0x80(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_229486
L_230890:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_474412
L_230891:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_230893:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_230894
L_231110:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCA0,%r13
	jne L_230894
L_231111:
	movq 0x8(%r14),%r13
	movq 0x50(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_474407
L_230894:
	incl %ecx
	movl %ecx,0x88(%rbp)
	jo L_229418
L_230895:
	cmpq $0x1,%r15
	je L_474398
L_230896:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_230893
.p2align 0x4
L_474398:
L_230897:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474405
.p2align 0x4,,0x7
L_230898:
	movl 0x88(%rbp),%ecx
L_230899:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_230900:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_230902
L_231107:
	movl %ecx,0x0(%r15)
L_230902:
	movq $0x2741,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x74B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1941,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
makeTop_0:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	jne L_474402
.p2align 0x4,,0x7
L_230905:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474401
.p2align 0x4,,0x7
L_230906:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_474399
L_230907:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	jmp L_230840
.p2align 0x4
L_474399:
L_230909:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_474400
L_230910:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x78(%rbp)
	jmp L_230836
.p2align 0x4
L_474400:
L_230912:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xD79,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x0(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x337B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x160(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_230913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
L_474401:
L_231104:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231105
.p2align 0x4
.long 0x3975
L_231105:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_230906
.p2align 0x4
L_474402:
L_230903:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r15)
	movl $0x0,0x0(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0x160(%rbp)
	movb $0x13,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_230904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_474405:
L_231108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231109
.p2align 0x4
.long 0x3976
L_231109:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_230898
.p2align 0x4
L_474407:
L_231113:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_231114:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_474408
L_231116:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp makeTop_0
.p2align 0x4
L_474408:
L_231115:
	movq %r13,%r15
	jmp makeTop_0
.p2align 0x4
L_474412:
L_231117:
	xorl %ecx,%ecx
	jmp L_230899
.p2align 0x4
L_474414:
L_231118:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x80(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x88(%rbp),%r15
	jmp L_230889
.p2align 0x4
L_474416:
L_231119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231120
.p2align 0x4
.long 0x3977
L_231120:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_230886
.p2align 0x4
L_474419:
L_231121:
	xorl %ecx,%ecx
	jmp L_230849
.p2align 0x4
L_474421:
L_231122:
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_231129
L_231123:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r13,%r15
	movq %r10,%r14
	movq %r11,%r13
.p2align 0x4,,0x7
L_231124:
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r15)
	je L_474425
L_231125:
	cmpq $0x1,%r13
	je L_474422
L_231126:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_231124
.p2align 0x4
L_474422:
L_231127:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474424
.p2align 0x4,,0x7
L_231129:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_230912
L_231130:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x78(%rbp)
	jmp L_230836
.p2align 0x4
L_474424:
L_231132:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231133
.p2align 0x4
.long 0x3978
L_231133:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_231129
.p2align 0x4
L_474425:
L_231134:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474427
.p2align 0x4,,0x7
L_231135:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_230909
L_231136:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	jmp L_230840
.p2align 0x4
L_474427:
L_231138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231139
.p2align 0x4
.long 0x3975
L_231139:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_231135
.p2align 0x4
L_474430:
L_231142:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231143
.p2align 0x4
.long 0x3975
L_231143:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_230837
.p2align 0x4
.long 0x38B6
L_229521:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229522
L_230348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230349
.p2align 0x4
.long 0x391C
L_230349:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_229522:
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_229595
L_229523:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r15
L_229524:
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x70(%rbp)
	movq %r13,0x128(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_229525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x38C8
L_229654:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229655
L_230204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230205
.p2align 0x4
.long 0x38CC
L_230205:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_229655:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC2B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xA0(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x130(%rbp)
	movq $0x3813,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x128(%rbp)
	addq $0x18,%r12
	addq $0x128,%rbp
	leaq (L_229656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
.long 0x78B
L_229638:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x473
L_230853:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_230854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3954
L_230913:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230914
L_231102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231103
.p2align 0x4
.long 0x3972
L_231103:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230914:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_474436
L_230915:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r15
L_230916:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x168(%rbp)
	movq $0x3447,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_230917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
L_474436:
L_230921:
	movq $0x3241,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_230922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x3959
L_230904:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_230905
.p2align 0x4
.long 0x38B7
L_229525:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_229526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x38C9
L_229656:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0xA0(%rbp)
	cmpq %r14,%rdx
	jne L_229389
L_229658:
	testq %rdx,%rdx
	jz L_474454
L_229659:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_229660:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1681,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_229661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229661
.p2align 0x4
.long 0x38CA
L_229661:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0xA8(%rbp)
L_229662:
	movl $0x0,0xB0(%rbp)
	movq $0x0,0xE0(%rbp)
loop_2585:
	movq 0xA0(%rbp),%r15
	cmpq %r15,0xE0(%rbp)
	jl L_474452
L_229663:
	movq 0xA8(%rbp),%r15
	movq $0x18B3,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0xB0(%rbp),%rdx
	movq %rdx,0x78(%rbp)
	testq %rdx,%rdx
	jz L_474451
L_229664:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_229665:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_229666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229666
.p2align 0x4
.long 0x38CB
L_229666:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0xA0(%rbp)
L_229667:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2586:
	cmpq 0x78(%rbp),%r15
	jnl L_474441
.p2align 0x4,,0x7
loop_2590:
	movslq %ecx,%r14
	movq 0xA8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_474439
L_229757:
	incl %ecx
	jo L_229418
L_229758:
	jmp loop_2590
.p2align 0x4
L_474439:
L_229755:
	incl %ecx
	jo L_229418
L_229756:
	movq 0xA0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2586
.p2align 0x4
L_474441:
L_229668:
	movq 0xA0(%rbp),%r14
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	cmpq $0x1,%r11
	je L_474449
L_229669:
	movq 0x8(%r11),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_229670:
	incl %ecx
	jo L_229418
L_229671:
	cmpq $0x1,%r15
	je L_474442
L_229672:
	movq 0x8(%r15),%r15
	jmp L_229670
.p2align 0x4
L_474442:
L_229673:
L_229674:
	movslq %ecx,%rdx
	movq %rdx,0xA8(%rbp)
	testq %rdx,%rdx
	jz L_474447
L_229675:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_229676:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_229677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229677
.p2align 0x4
.long 0x38CC
L_229677:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0xB0(%rbp)
L_229678:
	movq 0x78(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2587:
	cmpq 0xA8(%rbp),%r15
	jnl L_474444
L_229747:
	cmpq $0x1,%r14
	je L_229750
L_229748:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0xB0(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2587
.p2align 0x4
L_474444:
L_229679:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229680
L_229745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_229746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229746
.p2align 0x4
.long 0x38D7
L_229746:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_229680:
	movq 0xB0(%rbp),%r15
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x23C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_229681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_7
.p2align 0x4
L_474447:
L_229752:
	movq (globalObjptr+0xD40)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_229678
.p2align 0x4
L_474449:
L_229753:
	xorl %ecx,%ecx
	jmp L_229674
.p2align 0x4
L_474451:
L_229760:
	movq (globalObjptr+0x72A0)(%rip),%r15
	movq %r15,0xA0(%rbp)
	jmp L_229667
.p2align 0x4
L_474452:
L_229761:
	movq 0xE0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x78(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xE8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x108(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x110(%rbp)
	movq 0x18(%r13),%r10
	movq %r10,0x120(%rbp)
	movq %r11,0x130(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_229762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
L_474454:
L_230203:
	movq (globalObjptr+0x7298)(%rip),%r15
	movq %r15,0xA8(%rbp)
	jmp L_229662
.p2align 0x4
.long 0x459
L_230854:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x10340)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_230855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3955
L_230917:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230918
L_231099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231100
.p2align 0x4
.long 0x3973
L_231100:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230918:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_230921
L_230919:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_230916
.p2align 0x4
.long 0x395A
L_230922:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230923
L_231097:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231098
.p2align 0x4
.long 0x3974
L_231098:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230923:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_474458
L_230924:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r15
L_230925:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x168(%rbp)
	movq $0x34E3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_230926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_474458:
L_230932:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq $0x1,%r14
	je L_474459
L_230933:
	movq $0x3369,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x160(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_230934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
L_474459:
L_230946:
	movq $0xB77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x48,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0xB8(%rbp),%r11
	movq %r11,0x18(%r15)
	movq 0xB0(%rbp),%r10
	movq %r10,0x20(%r15)
	movq 0xA8(%rbp),%r9
	movq %r9,0x28(%r15)
	movq 0x100(%rbp),%r8
	movq %r8,0x30(%r15)
	movq 0x38(%rbp),%rbx
	movq %rbx,0x38(%r15)
	movq $0x178F,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	addq $0x10,%r12
	movq $0x1,0x0(%rsp)
	movq $0x18AD,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	addq $0x28,%r12
	movq %rsp,0x0(%rsi)
	movq %r15,0x8(%rsi)
	movq %r15,0x10(%rsi)
	movq 0x28(%rbp),%rbx
	movq %rbx,0x18(%rsi)
	movq $0x18AF,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rsi,0x0(%rdi)
	addq $0x20,%r12
	movq 0x68(%rbp),%rbx
	movq %rbx,0x8(%rdi)
	movq 0x140(%rbp),%rsi
	movq %rsi,0x10(%rdi)
	movq $0x18B1,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rsp,0x10(%rdx)
	movq %rdi,0x40(%rdx)
	addq $0x70,%r12
	movq %rbx,0x0(%rdx)
	movq %r15,0x8(%rdx)
	movq %r14,0x18(%rdx)
	movq %r13,0x20(%rdx)
	movq %r11,0x28(%rdx)
	movq %r10,0x30(%rdx)
	movq %r9,0x38(%rdx)
	movq %r8,0x48(%rdx)
	movq %rsi,0x50(%rdx)
	movq %r15,0x58(%rdx)
	movq %r15,0x40(%rbp)
	movq %rsi,0x60(%rdx)
	movq %rdx,0x48(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x50(%rbp)
	cmpq %rdx,%r14
	jne L_229389
L_230948:
	testq %rdx,%rdx
	jz L_474482
L_230949:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_230950:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1679,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_230951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230951
.p2align 0x4
.long 0x395E
L_230951:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq %rax,0x28(%rbp)
L_230952:
	movq $0x0,0x30(%rbp)
.p2align 0x4,,0x7
loop_2614:
	movq 0x30(%rbp),%r15
	cmpq 0x50(%rbp),%r15
	jnl L_474479
L_231031:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xF0(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x38(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x60(%rbp)
	cmpq %r11,%r15
	jne L_229389
L_231033:
	testq %r11,%r11
	jnz L_474476
L_231079:
	movq (globalObjptr+0x7300)(%rip),%r15
	movq %r15,0x68(%rbp)
.p2align 0x4,,0x7
L_231037:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474475
.p2align 0x4,,0x7
L_231038:
	movq $0x0,0x70(%rbp)
loop_2616:
	movq 0x60(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_474460
L_231039:
	movq 0x68(%rbp),%r15
	movq $0xAFF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq 0x38(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	salq $0x4,%r11
	movq %r15,0x8(%r14,%r11,1)
	incq %r13
	movq %r13,0x30(%rbp)
	jmp loop_2614
.p2align 0x4
L_474460:
L_231040:
	movq 0x70(%rbp),%r13
	movl %r13d,%ecx
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x58(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x78(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r10
	movq %r10,0x80(%rbp)
	movq 0x10(%r11),%r13
	movq %r13,0x88(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_229486
L_231041:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_474473
L_231042:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_231044:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_231045
L_231068:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD48,%r13
	jne L_231045
L_231069:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0xF8(%rbp)
	je L_474468
L_231045:
	incl %ecx
	movl %ecx,0x90(%rbp)
	jo L_229418
L_231046:
	cmpq $0x1,%r15
	je L_474461
L_231047:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_231044
.p2align 0x4
L_474461:
L_231048:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474466
.p2align 0x4,,0x7
L_231049:
	movl 0x90(%rbp),%ecx
L_231050:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_231051:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_231053
L_231065:
	movl %ecx,0x0(%r15)
L_231053:
	movq $0x136B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1A91,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x88(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_803:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_474463
.p2align 0x4,,0x7
L_231060:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474462
.p2align 0x4,,0x7
L_231061:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x70(%rbp),%r14
	movq %r14,%r11
	salq $0x4,%r11
	movq 0x78(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x80(%rbp),%r11
	movq %r11,0x8(%r15,%r13,1)
	incq %r14
	movq %r14,0x70(%rbp)
	jmp loop_2616
.p2align 0x4
L_474462:
L_231062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231063
.p2align 0x4
.long 0x396C
L_231063:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_231061
.p2align 0x4
L_474463:
L_231054:
	movq %r14,0x160(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_231055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
L_474466:
L_231066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231067
.p2align 0x4
.long 0x396D
L_231067:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_231049
.p2align 0x4
L_474468:
L_231071:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_231072:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_474469
L_231074:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp x_803
.p2align 0x4
L_474469:
L_231073:
	movq %r13,%r15
	jmp x_803
.p2align 0x4
L_474473:
L_231075:
	xorl %ecx,%ecx
	jmp L_231050
.p2align 0x4
L_474475:
L_231076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231077
.p2align 0x4
.long 0x396E
L_231077:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_231038
.p2align 0x4
L_474476:
L_231034:
	movq 0x60(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_231035:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x167D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231036
.p2align 0x4
.long 0x396A
L_231036:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq %rax,0x68(%rbp)
	jmp L_231037
.p2align 0x4
L_474479:
L_230953:
	movq 0x28(%rbp),%r14
	movq $0x767,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_474480
L_230954:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x38(%rbp)
L_230955:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x60(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x68(%rbp)
	movq %r13,0x160(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_230956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_99
.p2align 0x4
L_474480:
L_231030:
	movq $0x1,0x30(%rbp)
L_230984:
	movq 0xE0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_230985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp transformStatements_1
.p2align 0x4
L_474482:
L_231081:
	movq (globalObjptr+0x72F0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_230952
.p2align 0x4
.long 0x38B7
L_229526:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_229527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x38CD
L_229681:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229682
L_229743:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_229744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229744
.p2align 0x4
.long 0x38CA
L_229744:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_229682:
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	cmpq $0x1,%r14
	je L_229684
L_229683:
	movq 0x30(%r15),%r13
	cmpq $0x1,0x8(%r13)
	jne L_474491
L_229719:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0xA8(%rbp)
	cmpq %rdx,%r15
	jne L_229389
L_229721:
	testq %rdx,%rdx
	jz L_474489
L_229722:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_229723:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1565,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_229724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229724
.p2align 0x4
.long 0x38CC
L_229724:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0xB0(%rbp)
L_229725:
	movl $0x0,0xE0(%rbp)
	movq $0x0,0xE8(%rbp)
.p2align 0x4,,0x7
loop_2589:
	movq 0xE8(%rbp),%r14
	cmpq 0xA8(%rbp),%r14
	jnl L_474486
L_229734:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xA0(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x0(%r14),%r10
	cmpq $0x1,0x8(%r10)
	je L_474485
L_229735:
	movl 0xE0(%rbp),%ecx
	movq $0x1,%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_229736:
	movl %ecx,0xE0(%rbp)
	movq 0xB0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xE8(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xE8(%rbp)
	jmp loop_2589
.p2align 0x4
L_474485:
L_229737:
	movq %r11,0x128(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_229738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_1
.p2align 0x4
L_474486:
L_229726:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229727
L_229732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_229733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229733
.p2align 0x4
.long 0x38D5
L_229733:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_229727:
	movq 0xB0(%rbp),%r15
	movq $0xB6F,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xB71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x3AAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x128(%rbp)
	addq $0x18,%r12
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_229728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_18
.p2align 0x4
L_474489:
L_229741:
	movq (globalObjptr+0x72A8)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_229725
.p2align 0x4
L_474491:
L_229684:
	movq $0x1,0xA0(%rbp)
L_229685:
	movq 0x88(%rbp),%rdx
	movq 0x20(%rdx),%r15
	movq %r15,0xA8(%rbp)
	cmpq $0x1,%r15
	je L_229687
L_229686:
	movq 0x38(%rdx),%r14
	cmpq $0x1,0x8(%r14)
	jne L_474498
L_229695:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x88(%rbp)
	cmpq %r14,%rdx
	jne L_229389
L_229697:
	testq %rdx,%rdx
	jz L_474496
L_229698:
	cmpq $0x7FFFFFFF,%rdx
	ja L_229423
L_229699:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1565,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_229700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229700
.p2align 0x4
.long 0x38D0
L_229700:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0xB0(%rbp)
L_229701:
	movl $0x0,0xE0(%rbp)
	movq $0x0,0xE8(%rbp)
.p2align 0x4,,0x7
loop_2588:
	movq 0xE8(%rbp),%r14
	cmpq 0x88(%rbp),%r14
	jnl L_474493
L_229710:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xA8(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x0(%r14),%r10
	cmpq $0x1,0x8(%r10)
	je L_474492
L_229711:
	movl 0xE0(%rbp),%ecx
	movq $0x1,%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_229712:
	movl %ecx,0xE0(%rbp)
	movq 0xB0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xE8(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xE8(%rbp)
	jmp loop_2588
.p2align 0x4
L_474492:
L_229713:
	movq %r11,0x128(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_229714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_1
.p2align 0x4
L_474493:
L_229702:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229703
L_229708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_229709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229709
.p2align 0x4
.long 0x38D2
L_229709:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_229703:
	movq 0xB0(%rbp),%r15
	movq $0xB6F,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xB71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x3A9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x128(%rbp)
	addq $0x18,%r12
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_229704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_18
.p2align 0x4
L_474496:
L_229717:
	movq (globalObjptr+0x72B0)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_229701
.p2align 0x4
L_474498:
L_229687:
	movq $0x1,%r15
L_229688:
	movq $0xF7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x38,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%r14)
	movq $0x2947,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq %r14,0x8(%r15)
	movq $0x11F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x128(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_229689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1971
.p2align 0x4
.long 0x38D8
L_229762:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229763
L_230200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_230201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230201
.p2align 0x4
.long 0x38E2
L_230201:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_229763:
	movq 0x128(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je L_474502
L_229764:
	movl 0xB0(%rbp),%ecx
	movq $0x1,%r15
L_229765:
	movl %ecx,0xB0(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xE0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xE0(%rbp)
	jmp loop_2585
.p2align 0x4
L_474502:
L_229766:
	movq 0x128(%rbp),%r15
	movq 0x18(%r15),%r14
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x130(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_229389
L_229768:
	movq 0x120(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_229389
L_229770:
	cmpl %r11d,%r9d
	jne L_229652
L_229772:
	movl %r11d,0x148(%rbp)
	movq $0x3969,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x18(%r11)
	addq $0x28,%r12
	movq %r15,0x0(%r11)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r11,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_229773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_43
.p2align 0x4
.long 0x5ED
L_230855:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_230856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3955
L_230926:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230927
L_231094:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231095
.p2align 0x4
.long 0x3973
L_231095:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230927:
	movq $0x348F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_230928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x395B
L_230934:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230935
L_231089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231090
.p2align 0x4
.long 0x3971
L_231090:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230935:
	movq $0x323F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_230936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x396B
L_231055:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x80(%rbp)
L_231056:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_231057
L_231058:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_474509
L_231059:
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	jmp L_231060
.p2align 0x4
L_474509:
L_231057:
	movq (globalObjptr+0x7308)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x395F
L_230956:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230957
L_231028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231029
.p2align 0x4
.long 0x3969
L_231029:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230957:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_474512
L_230958:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_229389
L_230960:
	movl %r13d,0x168(%rbp)
	movq $0x3A9F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_230961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_18
.p2align 0x4
L_474512:
L_231025:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_474514
L_231026:
	movq $0x1,0x70(%rbp)
L_230964:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_229389
L_230966:
	movl %r13d,0x168(%rbp)
	movq $0x3A9F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_230967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_18
.p2align 0x4
L_474514:
L_231027:
	movq $0x1,0x70(%rbp)
	movq $0x1,0x78(%rbp)
L_230969:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_229389
L_230971:
	movl %r13d,0x168(%rbp)
	movq $0x380F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x140(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_230972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
.long 0x3964
L_230985:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230986
L_231004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_231005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231005
.p2align 0x4
.long 0x3965
L_231005:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_230986:
	movq $0x769,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x28,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x1,0x50(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_230987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
.long 0x38B8
L_229527:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_229528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_44
.p2align 0x4
.long 0x38D6
L_229738:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x108(%rbp)
	movl 0xE0(%rbp),%ecx
	incl %ecx
	jo L_229418
L_229739:
	jmp L_229736
.p2align 0x4
.long 0x38D4
L_229728:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229685
L_229730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_229731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229731
.p2align 0x4
.long 0x38CC
L_229731:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_229685
.p2align 0x4
.long 0x38D3
L_229714:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x108(%rbp)
	movl 0xE0(%rbp),%ecx
	incl %ecx
	jo L_229418
L_229715:
	jmp L_229712
.p2align 0x4
.long 0x38D1
L_229704:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229705
L_229706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_229707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229707
.p2align 0x4
.long 0x38CC
L_229707:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_229705:
	movq 0x88(%rbp),%r15
	jmp L_229688
.p2align 0x4
.long 0x38CE
L_229689:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229690
L_229693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_229694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229694
.p2align 0x4
.long 0x38CF
L_229694:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_229690:
	movq $0x11F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_474522
L_229691:
	movq %r15,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x58(%rbp)
	jmp L_229613
.p2align 0x4
L_474522:
L_229692:
	movq %r14,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x40(%rbp)
	jmp L_229620
.p2align 0x4
.long 0x38D9
L_229773:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x120(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229774
L_230198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_230199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230199
.p2align 0x4
.long 0x38E7
L_230199:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_229774:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC2B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x120(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x130(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x140(%rbp)
	movq $0x3805,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x138(%rbp)
	addq $0x18,%r12
	addq $0x138,%rbp
	leaq (L_229775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
.long 0x6FF
L_230856:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230857
L_230879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_230880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230880
.p2align 0x4
.long 0x5EE
L_230880:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_230857:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_230858:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_229418
L_230859:
	cmpq $0x1,%r14
	je L_474525
L_230860:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_230858
.p2align 0x4
L_474525:
L_230861:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230862
L_230877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_230878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230878
.p2align 0x4
.long 0x48C
L_230878:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_230862:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_474526
L_230863:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
toString_351:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (rev_349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_474526:
L_230876:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_351
.p2align 0x4
.long 0x3954
L_230928:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230929
L_231092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231093
.p2align 0x4
.long 0x3972
L_231093:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230929:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_230932
L_230930:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_230925
.p2align 0x4
.long 0x395B
L_230936:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230937
L_231087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231088
.p2align 0x4
.long 0x3971
L_231088:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230937:
	movq 0xE8(%rbp),%r14
	cmpq $0x1,%r14
	je L_230946
L_230938:
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r15
L_230939:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x168(%rbp)
	movq $0x34E1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_230940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
.long 0x3960
L_230961:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230962
L_231023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231024
.p2align 0x4
.long 0x3963
L_231024:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230962:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_474534
L_230963:
	jmp L_230964
.p2align 0x4
L_474534:
L_231022:
	movq 0x70(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_230969
.p2align 0x4
.long 0x3961
L_230967:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230968
L_231020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231021
.p2align 0x4
.long 0x3963
L_231021:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230968:
	movq 0x78(%rbp),%r15
	movq 0x70(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_230969
.p2align 0x4
.long 0x3962
L_230972:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230973
L_231018:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231019
.p2align 0x4
.long 0x3963
L_231019:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230973:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x80(%rbp)
	cmpq %r11,%r14
	jne L_229389
L_230975:
	testq %r11,%r11
	jz L_474542
L_230976:
	cmpq $0x7FFFFFFF,%r11
	ja L_229423
L_230977:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230978
L_231014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231015
.p2align 0x4
.long 0x3963
L_231015:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230978:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1435,%rcx
	movq 0x80(%rbp),%rdx
	movq $0xA0,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_230979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230979
.p2align 0x4
.long 0x3963
L_230979:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq %rax,0x88(%rbp)
L_230980:
	movq $0x0,0x90(%rbp)
loop_2615:
	movq 0x80(%rbp),%r14
	cmpq %r14,0x90(%rbp)
	jl L_474538
L_230981:
	movq 0x88(%rbp),%r14
	movq $0x8E7,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0xF7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x78(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x18(%r15)
	movq %r14,0x20(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x2947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x11ED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x11EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq $0x11F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_474537
L_230982:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_230955
.p2align 0x4
L_474537:
L_230983:
	movq %r15,0x30(%rbp)
	jmp L_230984
.p2align 0x4
L_474538:
L_231006:
	movq 0x90(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x98(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0xA8(%rbp)
	movq 0x18(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_229389
L_231008:
	movl %r14d,0x168(%rbp)
	movq $0x380F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_231009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
L_474542:
L_231017:
	movq (globalObjptr+0x72F8)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_230980
.p2align 0x4
.long 0x7A9
L_230987:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq $0x1,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_230988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x38B9
L_229528:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229529
L_230345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230346
.p2align 0x4
.long 0x3914
L_230346:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_229529:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x48(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_229389
L_229531:
	movl %r13d,0x140(%rbp)
	movq $0x3B61,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_229532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x38DA
L_229775:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x138,%rbp
	leaq (L_229776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyStatements_0
.p2align 0x4
.long 0x473
rev_349:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_474549
L_230864:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_230865:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474548
.p2align 0x4,,0x7
L_230866:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_474547
L_230867:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_230865
.p2align 0x4
L_474547:
L_230869:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_474548:
L_230873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_230874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230874
.p2align 0x4
.long 0x4FC
L_230874:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_230866
.p2align 0x4
L_474549:
L_230875:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_230869
.p2align 0x4
.long 0x395C
L_230940:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230941
L_231084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231085
.p2align 0x4
.long 0x3970
L_231085:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230941:
	movq $0x3445,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x160(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_230942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x3966
L_231009:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_231010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp transformStatements_1
.p2align 0x4
.long 0x867
L_230988:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_474551
L_230989:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
L_230990:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x58(%rbp)
	movq $0x1,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_230991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_474551:
L_230998:
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp shrink_2
.p2align 0x4
.long 0x38BA
L_229532:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x138(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x140(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x150(%rbp)
	addq $0x138,%rbp
	leaq (L_229533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x38DB
L_229776:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229777
L_230196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_230197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230197
.p2align 0x4
.long 0x38E2
L_230197:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_229777:
	movq 0x128(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0xE8(%rbp),%r15
	cmpq $0x1,%r15
	je L_474568
L_229778:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF31,%r14
	je L_474563
	cmpq $0xF32,%r14
	je L_474558
	cmpq $0xF33,%r14
	je L_474557
	cmpq $0xF34,%r14
	je L_474554
	cmpq $0xF35,%r14
	je L_474553
	cmpq $0xF36,%r14
	je L_474552
L_229779:
	movq 0x10(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x130(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x138(%rbp)
	movq %r14,0x148(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_229780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
L_474552:
L_230174:
	movq 0x20(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x148(%rbp)
	movq %r14,0x158(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_230175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
L_474553:
L_229880:
	movq 0x10(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x140(%rbp)
	movq %r14,0x150(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_229881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_44
.p2align 0x4
L_474554:
L_229847:
	movq 0x10(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x130(%rbp)
	movq 0x0(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1209,%r15
	je L_474556
L_229848:
	movq $0x1E69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x20,%r12
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
L_229787:
	movq $0x23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x110(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x120(%rbp),%r13
	movq %r13,0x18(%r14)
	movl 0xB0(%rbp),%ecx
	incl %ecx
	jo L_229418
L_229788:
	movq %r14,%r15
	jmp L_229765
.p2align 0x4
L_474556:
L_229849:
	movq 0x0(%r11),%r15
	movq %r15,0x148(%rbp)
	movq $0x3209,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xB8(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x90(%rbp),%r10
	movq %r10,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_229850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp keepAllMap_1
.p2align 0x4
L_474557:
L_229828:
	movq 0x8(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x130(%rbp)
	movq %r14,0x140(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_229829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
L_474558:
L_229811:
	movq 0x0(%r15),%r14
	movq 0x130(%rbp),%r15
	movq 0x20(%r15),%r13
	cmpq $0x1,%r13
	je L_474562
L_229812:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_229389
L_229814:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r9d
	movslq %r9d,%r8
	cmpq %r11,%r8
	jne L_229389
L_229816:
	cmpl %r10d,%r9d
	jne L_229652
L_229818:
	movl %r10d,0x138(%rbp)
	movq $0x38CB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	movq %r14,0x10(%r11)
	addq $0x20,%r12
	movq %r15,0x0(%r11)
	movq %r11,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_229819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
L_474562:
L_229810:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474563:
L_229793:
	movq 0x0(%r15),%r14
	movq 0x130(%rbp),%r15
	movq 0x10(%r15),%r13
	cmpq $0x1,%r13
	je L_229810
L_229794:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_229389
L_229796:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r11
	jne L_229389
L_229798:
	cmpl %r10d,%r9d
	jne L_229652
L_229800:
	movl %r10d,0x138(%rbp)
	movq $0x38A5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	movq %r14,0x10(%r11)
	addq $0x20,%r12
	movq %r15,0x0(%r11)
	movq %r11,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_229801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
L_474568:
L_229869:
	movq $0x1,%r15
	jmp L_229787
.p2align 0x4
.long 0x473
bug_631:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230870
L_230871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_230872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230872
.p2align 0x4
.long 0x49D
L_230872:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_230870:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x395D
L_230942:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230943
L_231082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231083
.p2align 0x4
.long 0x396F
L_231083:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_230943:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_230946
L_230944:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_230939
.p2align 0x4
.long 0x3967
L_231010:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231011
L_231012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_231013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231013
.p2align 0x4
.long 0x3968
L_231013:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_231011:
	movq $0x23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x90(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x90(%rbp)
	jmp loop_2615
.p2align 0x4
.long 0x4B4
L_230991:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq $0x1,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_230992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x38BA
L_229533:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229534
L_230343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_230344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230344
.p2align 0x4
.long 0x391B
L_230344:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_229534:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xDF28)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x128(%rbp),%r14
	cmpq $0x1,0x8(%r14)
	je L_474574
L_229535:
	movq (globalObjptr+0x10100)(%rip),%r15
L_229536:
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_229537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_474574:
L_230342:
	movq (globalObjptr+0x10128)(%rip),%r15
	jmp L_229536
.p2align 0x4
.long 0x38DC
L_229780:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229781
L_229791:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_229792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229792
.p2align 0x4
.long 0x38DF
L_229792:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_229781:
	movq 0xE8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_229389
L_229783:
	movl %r13d,0x150(%rbp)
	movq $0x3967,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x148(%rbp)
	addq $0x10,%r12
	addq $0x148,%rbp
	leaq (L_229784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x38FE
L_230175:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230176
L_230193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_230194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230194
.p2align 0x4
.long 0x38F8
L_230194:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_230176:
	movq 0xE8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_229389
L_230178:
	movl %r13d,0x160(%rbp)
	movq $0x3967,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x158(%rbp)
	addq $0x10,%r12
	addq $0x158,%rbp
	leaq (L_230179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x38EB
L_229881:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229882
L_230172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_230173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230173
.p2align 0x4
.long 0x38EE
L_230173:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_229882:
	movq 0x128(%rbp),%r14
	cmpq $0x1,%r14
	je L_474628
	cmpq $0x2,%r14
	je L_474627
L_229883:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	cmpq $0x1,%r15
	je L_474626
	cmpq $0x2,%r15
	je L_474625
L_229884:
	movq %r15,0x128(%rbp)
	movq %r13,%r15
L_229885:
	movq 0xE8(%rbp),%r14
	movq 0x30(%r14),%r13
	cmpq $0x1,0x8(%r13)
	jne L_474624
L_230078:
	cmpq $0x1,%r15
	je L_474582
	cmpq $0x2,%r15
	je L_474581
L_230079:
	movq 0x10(%r14),%r13
	cmpq $0x1,%r13
	je L_229810
L_230080:
	movq %r13,0x150(%rbp)
	movq %r15,0x158(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x150,%rbp
	leaq (L_230081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getWrapperLabel_1
.p2align 0x4
L_474581:
L_230167:
	movq (globalObjptr+0x2418)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474582:
L_230086:
	movq 0x130(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x148(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x150(%rbp)
L_230087:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_230088
L_230090:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_474622
L_230091:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_229389
L_230093:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ebx
	movslq %ebx,%r13
	cmpq %r14,%r13
	jne L_229389
L_230095:
	cmpl %ebx,%ecx
	jne L_229999
L_230097:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2592:
	cmpl %ebx,%ecx
	je L_474590
L_230098:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_230003
L_230100:
	movq %r13,%r11
	salq $0x4,%r11
	movq 0x148(%rbp),%r10
	movq 0x8(%r10,%r11,1),%r9
	cmpq %r14,%r13
	jnb L_230003
L_230102:
	salq $0x4,%r13
	movq 0x150(%rbp),%r11
	movq 0x8(%r11,%r13,1),%r10
	movq 0x0(%r9),%r11
	cmpq $0x1,0x8(%r11)
	je L_474587
L_230103:
	xorl %r11d,%r11d
	movq %r10,%r13
	xchgl %r11d,%ecx
	movl %r11d,(localWord32+0x0)(%rip)
L_230104:
	movq 0x0(%r13),%r11
	cmpq $0x1,0x8(%r11)
	je L_474586
L_230105:
	xorl %r13d,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0x4)(%rip)
L_230106:
	cmpl %ecx,%ebx
	jne L_474584
L_230159:
	movl (localWord32+0x4)(%rip),%ebx
	incl %ebx
	jo L_229418
L_230160:
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_2592
.p2align 0x4
L_474584:
L_230107:
	movq 0x130(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_474585
L_230114:
	movq 0x40(%rbp),%r14
	movq %r14,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_230115+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_474585:
L_230109:
	movq %r15,0x158(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x150,%rbp
	leaq (L_230110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getWrapperLabel_1
.p2align 0x4
L_474586:
L_230161:
	movl $0x1,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0x4)(%rip)
	jmp L_230106
.p2align 0x4
L_474587:
L_230162:
	movl $0x1,%r11d
	movq %r10,%r13
	xchgl %r11d,%ecx
	movl %r11d,(localWord32+0x0)(%rip)
	jmp L_230104
.p2align 0x4
L_474590:
L_230163:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230164
L_230165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_230166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230166
.p2align 0x4
.long 0x38EE
L_230166:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_230164:
	movq $0x1,0x148(%rbp)
L_229887:
	movq 0xE8(%rbp),%r13
	movq 0x38(%r13),%r11
	cmpq $0x1,0x8(%r11)
	je L_474598
L_229888:
	movq 0x148(%rbp),%r14
	cmpq $0x1,%r14
	je L_474597
	cmpq $0x2,%r14
	je L_474596
L_229889:
	movq $0x2,%r15
L_229890:
	cmpq $0x1,%r15
	je L_474595
	cmpq $0x2,%r15
	je L_474594
L_229891:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x128(%rbp)
	addq $0x18,%r12
L_229892:
	movq 0xE8(%rbp),%r15
	movq 0x48(%r15),%r14
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x130(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x140(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_229389
L_229894:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r9d
	movslq %r9d,%r8
	cmpq %r11,%r8
	jne L_229389
L_229896:
	cmpl %r10d,%r9d
	jne L_229652
L_229898:
	movl %r10d,0x150(%rbp)
	movq $0x38A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x20,%r12
	movq %r15,0x0(%r11)
	movq %r13,0x10(%r11)
	movq %r11,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_229899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
L_474594:
L_229908:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x128(%rbp)
	jmp L_229892
.p2align 0x4
L_474595:
L_229907:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x2,0x8(%r15)
	movq %r15,0x128(%rbp)
	jmp L_229892
.p2align 0x4
L_474596:
L_229910:
	movq $0x2,0x128(%rbp)
	jmp L_229892
.p2align 0x4
L_474597:
L_229909:
	movq $0x1,0x128(%rbp)
	jmp L_229892
.p2align 0x4
L_474598:
L_229911:
	movq 0x128(%rbp),%r15
	cmpq $0x1,%r15
	je L_474601
	cmpq $0x2,%r15
	je L_474600
L_229912:
	movq 0xE8(%rbp),%r14
	movq 0x20(%r14),%r13
	cmpq $0x1,%r13
	je L_229810
L_229913:
	movq %r13,0x158(%rbp)
	movq %r15,0x160(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x158,%rbp
	leaq (L_229914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getWrapperLabel_1
.p2align 0x4
L_474600:
L_230077:
	movq (globalObjptr+0x2410)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474601:
L_229988:
	movq 0x130(%rbp),%r13
	movq 0x20(%r13),%r15
	movq %r15,0x128(%rbp)
	movq 0xE8(%rbp),%r13
	movq 0x20(%r13),%r11
	movq %r11,0x150(%rbp)
L_229989:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_229990
L_229992:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_474616
L_229993:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%ecx
	movslq %ecx,%r15
	cmpq %r13,%r15
	jne L_229389
L_229995:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movl %r14d,%ebx
	movslq %ebx,%r15
	cmpq %r14,%r15
	jne L_229389
L_229997:
	cmpl %ebx,%ecx
	jne L_474613
L_230000:
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_2591:
	cmpl %ebx,%ecx
	je L_474609
L_230001:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_230003
L_230004:
	movq %r13,%r11
	salq $0x4,%r11
	movq 0x128(%rbp),%r10
	movq 0x8(%r10,%r11,1),%r9
	cmpq %r14,%r13
	jnb L_230003
L_230006:
	salq $0x4,%r13
	movq 0x150(%rbp),%r11
	movq 0x8(%r11,%r13,1),%r10
	movq 0x0(%r9),%r11
	cmpq $0x1,0x8(%r11)
	je L_474606
L_230007:
	xorl %r11d,%r11d
	movq %r10,%r13
	xchgl %r11d,%ecx
	movl %r11d,(localWord32+0x0)(%rip)
L_230008:
	movq 0x0(%r13),%r11
	cmpq $0x1,0x8(%r11)
	je L_474605
L_230009:
	xorl %r13d,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0x4)(%rip)
L_230010:
	cmpl %ecx,%ebx
	jne L_474603
L_230066:
	movl (localWord32+0x4)(%rip),%ebx
	incl %ebx
	jo L_229418
L_230067:
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_2591
.p2align 0x4
L_474603:
L_230011:
	movq 0x130(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_474604
L_230021:
	movq 0x40(%rbp),%r14
	movq %r14,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_230022+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_474604:
L_230013:
	movq %r15,0x160(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x158,%rbp
	leaq (L_230014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getWrapperLabel_1
.p2align 0x4
L_474605:
L_230068:
	movl $0x1,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0x4)(%rip)
	jmp L_230010
.p2align 0x4
L_474606:
L_230069:
	movl $0x1,%r11d
	movq %r10,%r13
	xchgl %r11d,%ecx
	movl %r11d,(localWord32+0x0)(%rip)
	jmp L_230008
.p2align 0x4
L_474609:
L_230070:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230071
L_230075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_230076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230076
.p2align 0x4
.long 0x38FC
L_230076:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_230071:
	movq 0x148(%rbp),%r14
	cmpq $0x1,%r14
	je L_474611
	cmpq $0x2,%r14
	je L_474610
L_230072:
	movq $0x1,%r15
	jmp L_229890
.p2align 0x4
L_474610:
L_230074:
	movq $0x1,0x128(%rbp)
	jmp L_229892
.p2align 0x4
L_474611:
L_230073:
	movq $0x1,0x128(%rbp)
	jmp L_229892
.p2align 0x4
L_474613:
L_229999:
	movq (globalObjptr+0x1B28)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474616:
L_229990:
	movq (globalObjptr+0x2408)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474622:
L_230088:
	movq (globalObjptr+0x2400)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474624:
L_229886:
	movq $0x2,0x148(%rbp)
	jmp L_229887
.p2align 0x4
L_474625:
L_230169:
	movq $0x1,0x128(%rbp)
	movq %r13,%r15
	jmp L_229885
.p2align 0x4
L_474626:
L_230168:
	movq $0x2,0x128(%rbp)
	movq %r13,%r15
	jmp L_229885
.p2align 0x4
L_474627:
L_230171:
	movq $0x2,0x128(%rbp)
	movq $0x2,%r15
	jmp L_229885
.p2align 0x4
L_474628:
L_230170:
	movq $0x1,0x128(%rbp)
	movq $0x1,%r15
	jmp L_229885
.p2align 0x4
.long 0x38E3
L_229850:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229851
L_229878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_229879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229879
.p2align 0x4
.long 0x38E7
L_229879:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_229851:
	cmpq $0x1,0x130(%rbp)
	je L_474632
L_229852:
	movq 0xE8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xB4(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_229389
L_229854:
	testl %r13d,%r13d
	jz L_474630
L_229855:
	movq 0x128(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_229856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_45
.p2align 0x4
L_474630:
L_229866:
	movq 0x130(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_229867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
L_474632:
L_229877:
	movq $0x2413,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1E69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq $0x1,0x8(%r14)
	movq 0x128(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r14,%r15
	jmp L_229787
.p2align 0x4
.long 0x38E3
L_229829:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229830
L_229845:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_229846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229846
.p2align 0x4
.long 0x38E7
L_229846:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_229830:
	movq 0xE8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x138(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x130(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_229389
L_229832:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r11
	jne L_229389
L_229834:
	cmpl %r10d,%r9d
	jne L_229652
L_229836:
	movl %r10d,0x150(%rbp)
	movq $0x38C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x20,%r12
	movq %r15,0x0(%r11)
	movq %r13,0x10(%r11)
	movq %r11,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_229837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x38D8
L_229819:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229820
L_229825:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_229826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229826
.p2align 0x4
.long 0x38E2
L_229826:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_229820:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x931,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x128(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xE8(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x138(%rbp)
	movq $0x4055,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x130(%rbp)
	addq $0x18,%r12
	addq $0x130,%rbp
	leaq (L_229821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x38D8
L_229801:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229802
L_229807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_229808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229808
.p2align 0x4
.long 0x38E2
L_229808:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_229802:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x931,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x128(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xE8(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x138(%rbp)
	movq $0x3FC1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x130(%rbp)
	addq $0x18,%r12
	addq $0x130,%rbp
	leaq (L_229803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x864
L_230992:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230993
L_231001:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_231002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231002
.p2align 0x4
.long 0x7A3
L_231002:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_230993:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_231000
L_230994:
L_230995:
	movq $0x2947,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_230998
L_230996:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_230990
.p2align 0x4
.long 0x38BB
L_229537:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229538
L_230340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_230341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230341
.p2align 0x4
.long 0x391A
L_230341:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_229538:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x128(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0x10108)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x120(%rbp),%r14
	cmpq $0x1,0x8(%r14)
	je L_474643
L_229539:
	movq (globalObjptr+0x10110)(%rip),%r15
L_229540:
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_229541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_474643:
L_230339:
	movq (globalObjptr+0x10120)(%rip),%r15
	jmp L_229540
.p2align 0x4
.long 0x38DC
L_229784:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r15,0x148(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x148,%rbp
	leaq (L_229785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getWrapperLabel_1
.p2align 0x4
.long 0x38FE
L_230179:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r15,0x158(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x158,%rbp
	leaq (L_230180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getWrapperLabel_1
.p2align 0x4
.long 0x38F6
L_230081:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229887
L_230083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_230084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230084
.p2align 0x4
.long 0x38F8
L_230084:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	jmp L_229887
.p2align 0x4
.long 0x38F9
L_230115:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movl 0x168(%rbp),%r15d
	movl %r15d,0xB4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230116
L_230157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_230158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230158
.p2align 0x4
.long 0x38FB
L_230158:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_230116:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x160(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x168(%rbp)
	movq %r15,0x8(%r13)
	addq $0x28,%r12
	movl 0xB4(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r14,0x10(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x170(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x148(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_229389
L_230118:
	movl %r11d,0x188(%rbp)
	movq $0x3971,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r13,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_230119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_43
.p2align 0x4
.long 0x38F6
L_230110:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229887
L_230112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_230113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230113
.p2align 0x4
.long 0x38F8
L_230113:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	jmp L_229887
.p2align 0x4
.long 0x38DC
L_229899:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229900
L_229905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_229906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229906
.p2align 0x4
.long 0x38DF
L_229906:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_229900:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x931,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xE8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x130(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x150(%rbp)
	movq $0x3FC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x148(%rbp)
	addq $0x18,%r12
	addq $0x148,%rbp
	leaq (L_229901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x38EC
L_229914:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229915
L_229985:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_229986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229986
.p2align 0x4
.long 0x38F8
L_229986:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_229915:
	movq 0x148(%rbp),%r14
	cmpq $0x1,%r14
	je L_474651
	cmpq $0x2,%r14
	je L_474650
L_229916:
	movq 0x128(%rbp),%r15
	jmp L_229890
.p2align 0x4
L_474650:
L_229976:
	movq 0x40(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x150,%rbp
	leaq (L_229977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_474651:
L_229918:
	movq 0xE8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x148(%rbp)
	cmpq $0x1,%r14
	je L_229810
L_229919:
	movq 0x130(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_474652
L_229926:
	movq 0x40(%rbp),%r14
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_229927+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_474652:
L_229921:
	movq %r15,0x158(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x150,%rbp
	leaq (L_229922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getWrapperLabel_1
.p2align 0x4
.long 0x38F9
L_230022:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movl 0x168(%rbp),%r15d
	movl %r15d,0xB4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230023
L_230064:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_230065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230065
.p2align 0x4
.long 0x38FB
L_230065:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_230023:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x160(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x168(%rbp)
	movq %r15,0x8(%r13)
	addq $0x28,%r12
	movl 0xB4(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r14,0x10(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x170(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x128(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_229389
L_230025:
	movl %r11d,0x188(%rbp)
	movq $0x396B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r13,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_230026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_43
.p2align 0x4
.long 0x38EC
L_230014:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230015
L_230019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_230020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230020
.p2align 0x4
.long 0x38F8
L_230020:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_230015:
	movq 0x148(%rbp),%r14
	cmpq $0x1,%r14
	je L_229918
	cmpq $0x2,%r14
	je L_229976
L_230016:
	movq 0x128(%rbp),%r15
	jmp L_229890
.p2align 0x4
.long 0x38E8
L_229856:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
L_229857:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_229858
L_229859:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF26,%r15
	jne L_474660
L_229860:
	movq 0x0(%r13),%r15
	movq %r15,0x140(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (x_798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
L_474660:
L_229858:
	movq (globalObjptr+0x23F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x38E9
L_229867:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229868
L_229875:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_229876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229876
.p2align 0x4
.long 0x38EA
L_229876:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_229868:
	movq 0xE8(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,0x8(%r14)
	jne L_229869
L_229870:
	movq $0x1,0x140(%rbp)
	movl $0x0,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_229871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x38E4
L_229837:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229838
L_229843:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_229844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229844
.p2align 0x4
.long 0x38E6
L_229844:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_229838:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x931,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xE8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x138(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x140(%rbp)
	movq $0x4053,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x138(%rbp)
	addq $0x18,%r12
	addq $0x138,%rbp
	leaq (L_229839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x38E0
L_229821:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229822
L_229823:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_229824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229824
.p2align 0x4
.long 0x38E1
L_229824:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_229822:
	movq $0x1E65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_229787
.p2align 0x4
.long 0x38E0
L_229803:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229804
L_229805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_229806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229806
.p2align 0x4
.long 0x38E1
L_229806:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_229804:
	movq $0x1E63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_229787
.p2align 0x4
.long 0x38BC
L_229541:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229542
L_230337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_230338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230338
.p2align 0x4
.long 0x3919
L_230338:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_229542:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x120(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x10118)(%rip),%r14
	movq %r14,0x8(%r15)
	cmpq $0x1,0x110(%rbp)
	je L_474667
L_229543:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_229544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_474667:
L_230332:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_230333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x38DD
L_229785:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229786
L_229789:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_229790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229790
.p2align 0x4
.long 0x38DE
L_229790:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_229786:
	movq $0x1E61,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_229787
.p2align 0x4
.long 0x38FF
L_230180:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_230181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
.long 0x38F0
L_230119:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230120
L_230155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_230156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230156
.p2align 0x4
.long 0x38F3
L_230156:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_230120:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC2B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x178(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x170(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x180(%rbp)
	movq $0x3811,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x178(%rbp)
	addq $0x18,%r12
	addq $0x178,%rbp
	leaq (L_230121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
.long 0x38E4
L_229901:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229902
L_229903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_229904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229904
.p2align 0x4
.long 0x38E6
L_229904:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_229902:
	movq $0x1E6B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_229787
.p2align 0x4
.long 0x38F6
L_229977:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0xB4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229978
L_229983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_229984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229984
.p2align 0x4
.long 0x38EE
L_229984:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_229978:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x148(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xB4(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1,0x158(%rbp)
	movl $0x0,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_229979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
.long 0x38EF
L_229927:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movl 0x160(%rbp),%r15d
	movl %r15d,0xB4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229928
L_229972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_229973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229973
.p2align 0x4
.long 0x38F5
L_229973:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_229928:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x158(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x160(%rbp)
	movq %r15,0x8(%r13)
	addq $0x28,%r12
	movl 0xB4(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r14,0x10(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x130(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x168(%rbp)
	cmpq $0x1,%r14
	je L_229810
L_229929:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x170(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_229389
L_229931:
	movl %r11d,0x188(%rbp)
	movq $0x3971,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r13,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_229932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_43
.p2align 0x4
.long 0x38ED
L_229922:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229923
L_229924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_229925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229925
.p2align 0x4
.long 0x38EE
L_229925:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_229923:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x128(%rbp)
	jmp L_229892
.p2align 0x4
.long 0x38F0
L_230026:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230027
L_230062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_230063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230063
.p2align 0x4
.long 0x38F3
L_230063:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_230027:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC2B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x178(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x170(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x180(%rbp)
	movq $0x3807,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x178(%rbp)
	addq $0x18,%r12
	addq $0x178,%rbp
	leaq (L_230028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
.long 0x38E8
x_798:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229861
L_229864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_229865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229865
.p2align 0x4
.long 0x38DF
L_229865:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_229861:
	movq 0x138(%rbp),%r14
	movq 0x8(%r14),%r13
	movl 0xB4(%rbp),%r11d
	cmpl %r11d,0x0(%r13)
	je L_474678
L_229862:
	movq $0x2413,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1E69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x130(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x128(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r14,%r15
	jmp L_229787
.p2align 0x4
L_474678:
L_229863:
	movq $0x2413,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1E69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq $0x1,0x8(%r14)
	movq 0x128(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r14,%r15
	jmp L_229787
.p2align 0x4
.long 0x38E9
L_229871:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229872
L_229873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_229874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229874
.p2align 0x4
.long 0x38EA
L_229874:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_229872:
	movq $0x1E67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_229787
.p2align 0x4
.long 0x38E5
L_229839:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229840
L_229841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_229842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229842
.p2align 0x4
.long 0x38E2
L_229842:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_229840:
	movq $0x1E67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_229787
.p2align 0x4
.long 0x38BD
L_229544:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229545
L_230330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_230331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230331
.p2align 0x4
.long 0x3178
L_230331:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_229545:
	movq 0x110(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_229389
L_229547:
	movl %r13d,0x148(%rbp)
	movq $0x3C6F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_229548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3918
L_230333:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230334
L_230335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_230336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230336
.p2align 0x4
.long 0x31CF
L_230336:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_230334:
	movq 0x60(%rbp),%r15
L_229557:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF1F8)(%rip),%r15
	movq %r15,0x8(%r14)
	cmpq $0x1,0x108(%rbp)
	je L_474684
L_229558:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_229559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_474684:
L_230320:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_230321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3900
L_230181:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230182
L_230191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_230192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230192
.p2align 0x4
.long 0x38F8
L_230192:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_230182:
	movq 0x140(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_229389
L_230184:
	movl %r13d,0x160(%rbp)
	movq $0x3967,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x158(%rbp)
	addq $0x10,%r12
	addq $0x158,%rbp
	leaq (L_230185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x38F1
L_230121:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x170(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230122
L_230153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_230154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230154
.p2align 0x4
.long 0x38F4
L_230154:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_230122:
	movq 0x170(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_229389
L_230124:
	movl %r13d,0x188(%rbp)
	movq $0x404F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_230125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x38F7
L_229979:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229980
L_229981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_229982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229982
.p2align 0x4
.long 0x38F5
L_229982:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_229980:
	movq (globalObjptr+0xF70)(%rip),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq $0x1,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x148(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x150(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x130(%rbp),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r13
	movq $0x1E99,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r10,0x0(%r11)
	movq $0x23B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x128(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x128(%rbp)
	jmp L_229892
.p2align 0x4
.long 0x38F0
L_229932:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229933
L_229969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_229970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229970
.p2align 0x4
.long 0x38F3
L_229970:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_229933:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC2B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x178(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x170(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x180(%rbp)
	movq $0x3811,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x178(%rbp)
	addq $0x18,%r12
	addq $0x178,%rbp
	leaq (L_229934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
.long 0x38F1
L_230028:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x170(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230029
L_230060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_230061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230061
.p2align 0x4
.long 0x38F4
L_230061:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_230029:
	movq 0x170(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_229389
L_230031:
	movl %r13d,0x188(%rbp)
	movq $0x4051,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_230032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x31C6
L_229548:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x140(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x150(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x158(%rbp)
	addq $0x140,%rbp
	leaq (L_229549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x31C6
L_229559:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229560
L_230318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_230319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230319
.p2align 0x4
.long 0x3178
L_230319:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_229560:
	movq 0x108(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_229389
L_229562:
	movl %r13d,0x148(%rbp)
	movq $0x3B5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_229563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3916
L_230321:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230322
L_230323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_230324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230324
.p2align 0x4
.long 0x31CF
L_230324:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_230322:
	movq 0x108(%rbp),%r15
L_229572:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x108(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF090)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0xE8(%rbp),%r14
	cmpq $0x1,0x8(%r14)
	je L_474696
L_229573:
	movq (globalObjptr+0xDF00)(%rip),%r15
L_229574:
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_229575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_474696:
L_230312:
	movq (globalObjptr+0xDF08)(%rip),%r15
	jmp L_229574
.p2align 0x4
.long 0x3900
L_230185:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq %r15,0x158(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x158,%rbp
	leaq (L_230186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getWrapperLabel_1
.p2align 0x4
.long 0x38F0
L_230125:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230126
L_230151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_230152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230152
.p2align 0x4
.long 0x38F3
L_230152:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_230126:
	movq (globalObjptr+0xF70)(%rip),%r13
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1E63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x178(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq %r13,0x8(%r14)
	movq 0x168(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x170(%rbp),%r11
	movq %r11,0x18(%r14)
	movq 0x158(%rbp),%r11
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq 0x130(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r11
	movq $0x1E99,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r15)
	movq $0x2733,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x6F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x6FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x701,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x180(%rbp)
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x28,%r12
	movq %r13,0x10(%r11)
	movq 0x148(%rbp),%r13
	movq %r13,0x18(%r11)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_229486
L_230127:
	movq %r15,0x0(%r13)
	movq 0x160(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_474708
L_230128:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_230130:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_230131
L_230143:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD52,%r13
	jne L_230131
L_230144:
	movq 0xF8(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_474703
L_230131:
	incl %ecx
	movl %ecx,0xB4(%rbp)
	jo L_229418
L_230132:
	cmpq $0x1,%r15
	je L_474698
L_230133:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_230130
.p2align 0x4
L_474698:
L_230134:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230135
L_230141:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_230142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230142
.p2align 0x4
.long 0x38FD
L_230142:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_230135:
	movl 0xB4(%rbp),%ecx
L_230136:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_230137:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_230139
L_230140:
	movl %ecx,0x0(%r15)
L_230139:
	movq $0x1AA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x180(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x160(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x168(%rbp),%r15
	jmp L_230109
.p2align 0x4
L_474703:
L_230146:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_230147:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_229962
L_230149:
	movl %ecx,0x0(%r15)
	jmp L_229962
.p2align 0x4
L_474708:
L_230150:
	xorl %ecx,%ecx
	jmp L_230136
.p2align 0x4
.long 0x38F1
L_229934:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x170(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229935
L_229967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_229968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229968
.p2align 0x4
.long 0x38F4
L_229968:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_229935:
	movq 0x170(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_229389
L_229937:
	movl %r13d,0x188(%rbp)
	movq $0x404F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_229938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x38F0
L_230032:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230033
L_230058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_230059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230059
.p2align 0x4
.long 0x38F3
L_230059:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_230033:
	movq (globalObjptr+0xF70)(%rip),%r13
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1E65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x178(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq %r13,0x8(%r14)
	movq 0x168(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x170(%rbp),%r11
	movq %r11,0x18(%r14)
	movq 0x158(%rbp),%r11
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq 0x130(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r11
	movq $0x1E99,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r15)
	movq $0x2733,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x6F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x6FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x701,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x180(%rbp)
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x28,%r12
	movq %r13,0x10(%r11)
	movq 0x128(%rbp),%r13
	movq %r13,0x18(%r11)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_229486
L_230034:
	movq %r15,0x0(%r13)
	movq 0x160(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_474723
L_230035:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_230037:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_230038
L_230050:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD52,%r13
	jne L_230038
L_230051:
	movq 0x0(%r14),%r13
	cmpq %r13,0xF8(%rbp)
	je L_474718
L_230038:
	incl %ecx
	movl %ecx,0xB4(%rbp)
	jo L_229418
L_230039:
	cmpq $0x1,%r15
	je L_474713
L_230040:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_230037
.p2align 0x4
L_474713:
L_230041:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230042
L_230048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_230049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230049
.p2align 0x4
.long 0x38FA
L_230049:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_230042:
	movl 0xB4(%rbp),%ecx
L_230043:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_230044:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_230046
L_230047:
	movl %ecx,0x0(%r15)
L_230046:
	movq $0x1AA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x180(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x160(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x168(%rbp),%r15
	jmp L_230013
.p2align 0x4
L_474718:
L_230053:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_230054:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_229962
L_230056:
	movl %ecx,0x0(%r15)
	jmp L_229962
.p2align 0x4
L_474723:
L_230057:
	xorl %ecx,%ecx
	jmp L_230043
.p2align 0x4
.long 0x31C6
L_229549:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229550
L_230328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_230329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230329
.p2align 0x4
.long 0x3178
L_230329:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_229550:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x138(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_229551:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_229418
L_229552:
	cmpq $0x1,%r14
	je L_474726
L_229553:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_229551
.p2align 0x4
L_474726:
L_229554:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229555
L_230326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_230327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230327
.p2align 0x4
.long 0x3917
L_230327:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_229555:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jz L_474727
L_229556:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x138(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_229557
.p2align 0x4
L_474727:
L_230325:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_229557
.p2align 0x4
.long 0x38BE
L_229563:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq %r15,0x140(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x150(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x158(%rbp)
	addq $0x140,%rbp
	leaq (L_229564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x38BF
L_229575:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229576
L_230310:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_230311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230311
.p2align 0x4
.long 0x31CF
L_230311:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_229576:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDF08)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x128(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_229577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x3901
L_230186:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_230187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_1
.p2align 0x4
.long 0x38F0
L_229938:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229939
L_229965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_229966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229966
.p2align 0x4
.long 0x38F3
L_229966:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_229939:
	movq (globalObjptr+0xF70)(%rip),%r13
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1E63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x178(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq %r13,0x8(%r14)
	movq 0x160(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x170(%rbp),%r11
	movq %r11,0x18(%r14)
	movq 0x150(%rbp),%r11
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq 0x130(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r11
	movq $0x1E99,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r15)
	movq $0x2733,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x6F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x6FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x701,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x180(%rbp)
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x28,%r12
	movq %r13,0x10(%r11)
	movq 0x168(%rbp),%r13
	movq %r13,0x18(%r11)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_229486
L_229940:
	movq %r15,0x0(%r13)
	movq 0x158(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_474742
L_229941:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_229943:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_229944
L_229956:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD52,%r13
	jne L_229944
L_229957:
	movq 0xF8(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_474737
L_229944:
	incl %ecx
	movl %ecx,0xB4(%rbp)
	jo L_229418
L_229945:
	cmpq $0x1,%r15
	je L_474732
L_229946:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_229943
.p2align 0x4
L_474732:
L_229947:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229948
L_229954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_229955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_229955
.p2align 0x4
.long 0x38F2
L_229955:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_229948:
	movl 0xB4(%rbp),%ecx
L_229949:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_229950:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_229952
L_229953:
	movl %ecx,0x0(%r15)
L_229952:
	movq $0x1AA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x180(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x158(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x160(%rbp),%r15
	jmp L_229921
.p2align 0x4
L_474737:
L_229959:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_229497
L_229960:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_229962
L_229963:
	movl %ecx,0x0(%r15)
	jmp L_229962
.p2align 0x4
L_474742:
L_229964:
	xorl %ecx,%ecx
	jmp L_229949
.p2align 0x4
.long 0x38BE
L_229564:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229565
L_230316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_230317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230317
.p2align 0x4
.long 0x3178
L_230317:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_229565:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x138(%rbp)
	addq $0x18,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_229566:
	addl 0x0(%r15),%ecx
	movl %ecx,0x108(%rbp)
	jo L_229418
L_229567:
	cmpq $0x1,%r14
	je L_474745
L_229568:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_229566
.p2align 0x4
L_474745:
L_229569:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229570
L_230314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_230315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230315
.p2align 0x4
.long 0x3915
L_230315:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_229570:
	movl 0x108(%rbp),%r15d
	testl %r15d,%r15d
	jz L_474746
L_229571:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x138(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_229572
.p2align 0x4
L_474746:
L_230313:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_229572
.p2align 0x4
.long 0x38B9
L_229577:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229578
L_230308:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230309
.p2align 0x4
.long 0x3914
L_230309:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_229578:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xE8(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_229579:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_229418
L_229580:
	cmpq $0x1,%r14
	je L_474750
L_229581:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_229579
.p2align 0x4
L_474750:
L_229582:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229583
L_230306:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230307
.p2align 0x4
.long 0x3913
L_230307:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_229583:
	movl 0x60(%rbp),%ecx
	testl %ecx,%ecx
	jz L_474751
L_229584:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
x_797:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x130(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x128(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_229585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_474751:
L_230305:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_797
.p2align 0x4
.long 0x3902
L_230187:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_230188
L_230189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_230190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230190
.p2align 0x4
.long 0x3903
L_230190:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_230188:
	movq $0x1E6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x20(%r15)
	jmp L_229787
.p2align 0x4
.long 0x38C0
L_229585:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x128(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_229586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x38C0
L_229586:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229587
L_230303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230304
.p2align 0x4
.long 0x3912
L_230304:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_229587:
	movq $0x3443,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x128(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_229588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x38C1
L_229588:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_229589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x38C1
L_229589:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r14
	movq %r14,0x128(%rbp)
	movq %r15,0x130(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_229590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x38C1
L_229590:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x128(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_229591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x38C1
L_229591:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_229592
L_230301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_230302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_230302
.p2align 0x4
.long 0x3911
L_230302:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_229592:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_229595
L_229593:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_229524
