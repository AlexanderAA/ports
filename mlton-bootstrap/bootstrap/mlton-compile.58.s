/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:09:29 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_1649
.hidden x_1649
x_1649:
L_176063:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_176064
L_176119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_176120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176120
.p2align 0x4
.long 0x45F
L_176120:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_176064:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r13
	movq 0x0(%r9),%r11
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_452812
L_176066:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_452811
L_176067:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_176069:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_452810
L_176110:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xCD8,%r10
	jne L_452809
L_176111:
	cmpq %r11,0x0(%r14)
	movq %r11,(localObjptr+0x10)(%rip)
	je L_452806
L_176070:
	incl %ecx
	jo L_452805
L_176072:
	cmpq $0x1,%r15
	je L_452803
L_176073:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r11
	jmp L_176069
.p2align 0x4
L_452803:
L_176074:
L_176075:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_452804
L_176077:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_556
L_176109:
	movl %ecx,0x0(%r15)
x_556:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_176079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_452804:
L_176076:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452805:
L_176071:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452806:
L_176113:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_176076
L_176114:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %ecx,0x0(%r13)
	jnl L_452807
L_176117:
	movl %ecx,0x0(%r13)
	movq %r14,%r15
L_176116:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452807:
L_176115:
	movq %r14,%r15
	jmp L_176116
.p2align 0x4
L_452809:
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_176070
.p2align 0x4
L_452810:
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_176070
.p2align 0x4
L_452811:
L_176118:
	xorl %ecx,%ecx
	jmp L_176075
.p2align 0x4
L_452812:
L_176065:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_176079:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_176080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_176080:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_176081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_176081:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF570)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_176082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_176082:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_176083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_176083:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176084
L_176107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_176108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176108
.p2align 0x4
.long 0x4AE
L_176108:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_176084:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_176085:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_176071
L_176086:
	cmpq $0x1,%r14
	je L_452814
L_176087:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_176085
.p2align 0x4
L_452814:
L_176088:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176089
L_176105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_176106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176106
.p2align 0x4
.long 0x4E6
L_176106:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_176089:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_452815
L_176090:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_249:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_452815:
L_176104:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_249
.p2align 0x4
.long 0x1
rev_247:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_452821
L_176091:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_176092:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_452820
.p2align 0x4,,0x7
L_176093:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_452819
L_176094:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_176092
.p2align 0x4
L_452819:
L_176096:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_176097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_452820:
L_176101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_176102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176102
.p2align 0x4
.long 0x45B
L_176102:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_176093
.p2align 0x4
L_452821:
L_176103:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_176096
.p2align 0x4
.long 0x1
L_176097:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176098
L_176099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_176100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176100
.p2align 0x4
.long 0x451
L_176100:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_176098:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1792
.hidden x_1792
x_1792:
L_176121:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_176156
L_176122:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_452837
L_176123:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	movl 0x0(%r13),%r11d
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEA9,%r13
	je L_176125
L_176154:
	movq 0x0(%r14),%r13
	addl 0x0(%r13),%r11d
	jo L_176132
L_176155:
	movl %r11d,0x0(%r13)
L_176125:
	movq 0x8(%r15),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x8(%rbp)
	movq 0x0(%r11),%r14
	movq 0x10(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_452834
L_176127:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_452833
L_176128:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_176130:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_452832
L_176145:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCD8,%r11
	jne L_452831
L_176146:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_452828
L_176131:
	incl %ecx
	movl %ecx,0x10(%rbp)
	jo L_452827
L_176133:
	cmpq $0x1,%r15
	je L_452823
L_176134:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_176130
.p2align 0x4
L_452823:
L_176135:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176136
L_176143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_176144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176144
.p2align 0x4
.long 0x524
L_176144:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_176136:
	movl 0x10(%rbp),%ecx
L_176137:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_452825
L_176139:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_176141
L_176142:
	movl %ecx,0x0(%r15)
L_176141:
	movq $0x19B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452825:
L_176138:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452827:
L_176132:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452828:
L_176148:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_176138
L_176149:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_452829
L_176152:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_176151:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452829:
L_176150:
	movq %r13,%r15
	jmp L_176151
.p2align 0x4
L_452831:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_176131
.p2align 0x4
L_452832:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_176131
.p2align 0x4
L_452833:
L_176153:
	xorl %ecx,%ecx
	jmp L_176137
.p2align 0x4
L_452834:
L_176126:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452837:
L_176156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_176157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176157
.p2align 0x4
.long 0x4AE
L_176157:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_176123
.text
.p2align 0x4
.globl x_1793
.hidden x_1793
x_1793:
L_176158:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_176159
L_176301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_176302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176302
.p2align 0x4
.long 0x451
L_176302:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_176159:
	movq 0x0(%rbp),%rax
	andq $0xFF,%rax
	subq $0x1,%rax
	cmpq $0x89,%rax
	ja L_452839
	leaq jumpTable_590(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_590:
.quad
.text
.p2align 0x4
L_452839:
L_176160:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x120F,%r14
	je L_176164
	cmpq $0x1210,%r14
	je L_176166
	cmpq $0x1212,%r14
	je L_176164
	cmpq $0x1217,%r14
	je L_176166
	cmpq $0x121C,%r14
	je L_176164
	cmpq $0x121E,%r14
	je L_176164
	cmpq $0x1226,%r14
	je L_176164
	cmpq $0x122B,%r14
	je L_176164
	cmpq $0x122C,%r14
	je L_452841
	cmpq $0x122D,%r14
	je L_452840
L_176162:
	movb $0x2,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452840:
L_176166:
	movb $0x3,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452841:
L_176164:
	movb $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452882:
L_176197:
	movb $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl intInfBinary_24
.hidden intInfBinary_24
intInfBinary_24:
L_176303:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_176443
L_176304:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_452956
L_176305:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_176306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_452956:
L_176443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_176444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176444
.p2align 0x4
.long 0x804
L_176444:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_176305
.p2align 0x4
.long 0x65F
L_176306:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_452958
L_176307:
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_176308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_452958:
L_176311:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x65F
L_176308:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_176311
L_176309:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1D,%r14
	je L_452993
	cmpq $0x1E,%r14
	je L_452984
	cmpq $0x23,%r14
	je L_452982
	cmpq $0x26,%r14
	je L_452981
	cmpq $0x2A,%r14
	je L_452972
	cmpq $0x2B,%r14
	je L_452971
	cmpq $0x2D,%r14
	je L_452970
	cmpq $0x2E,%r14
	je L_452969
	cmpq $0x33,%r14
	je L_452960
L_176310:
	andq $0x3,%r15
	jnz L_176311
L_176312:
	jmp L_176311
.p2align 0x4
L_452960:
L_176416:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	movq 0x0(%rbp),%r11
	andq %r11,%r13
	andq $0x1,%r13
	jz L_452961
L_176417:
	xorq %r11,%r14
	orq $0x1,%r14
	movq %r14,0x58(%rbp)
intInf_19:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_176418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_452961:
L_176424:
	andq $0x1,%r14
	jz L_452967
L_176425:
	movq $0x1,%r14
	xchgq %r14,%r15
L_176426:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_452965
L_176427:
	movq $0x1,%r14
L_176428:
	cmpq %r14,%r15
	jnl L_176430
L_176436:
	movq %r14,%r15
L_176430:
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%rsi
	movq %rsi,%r13
	movq 0x0(%r14),%r11
	imulq %r15,%r13
	addq $0x7,%r11
	addq %r11,%rsi
	addq %r13,%rsi
	movq %rsi,%r15
	movq %rsi,0x10(%rbp)
	addq $0x0,%r15
	jc L_452963
L_176431:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_176432
L_176434:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_176435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176435
.p2align 0x4
.long 0x129D
L_176435:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_176432:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x10(%rbp),%rdx
	movq 0x0(%rbp),%rsi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_xorb
L_176433:
	movq %rax,0x58(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_19
.p2align 0x4
L_452963:
L_176336:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_452965:
L_176437:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_452966
L_176438:
	jmp L_176428
.p2align 0x4
L_452966:
L_176344:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452967:
L_176439:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	decq %r13
	jo L_176344
L_176440:
	xchgq %r13,%r15
	jmp L_176426
.p2align 0x4
L_452969:
L_176408:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_176409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_452970:
L_176400:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_176401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_452971:
L_176392:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_176393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_452972:
L_176367:
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	movq 0x8(%rbp),%r11
	andq %r11,%r13
	andq $0x1,%r13
	jz L_452973
L_176368:
	orq %r11,%r14
	orq $0x1,%r14
	movq %r14,0x58(%rbp)
intInf_18:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_176369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_452973:
L_176375:
	andq $0x1,%r11
	jz L_452979
L_176376:
	movq $0x1,%r13
	xchgq %r13,%r15
L_176377:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_452977
L_176378:
	movq $0x1,%r14
L_176379:
	cmpq %r14,%r15
	jnl L_176381
L_176387:
	movq %r14,%r15
L_176381:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%rsi
	movq %rsi,%r13
	movq 0x0(%r14),%r11
	imulq %r15,%r13
	addq $0x7,%r11
	addq %r11,%rsi
	addq %rsi,%r13
	movq %r13,%rsi
	movq %r13,0x10(%rbp)
	addq $0x0,%rsi
	jc L_176336
L_176382:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq %rsi,%r15
	jnb L_176383
L_176385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_176386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176386
.p2align 0x4
.long 0x129D
L_176386:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_176383:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x10(%rbp),%rdx
	movq 0x0(%rbp),%rsi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_orb
L_176384:
	movq %rax,0x58(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_18
.p2align 0x4
L_452977:
L_176388:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_176344
L_176389:
	jmp L_176379
.p2align 0x4
L_452979:
L_176390:
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	decq %r11
	jo L_176344
L_176391:
	xchgq %r11,%r15
	jmp L_176377
.p2align 0x4
L_452981:
L_176359:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_176360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_452982:
L_176348:
	movq 0x0(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
loop_1778:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_452983
L_176349:
	movq 0x48(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_176350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
L_452983:
L_176352:
	movq 0x60(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_176353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_452984:
L_176321:
	movq 0x0(%rbp),%r14
	andq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_452985
L_176322:
	orq $0x1,%r14
	movq %r14,0x58(%rbp)
intInf_17:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_176323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_452985:
L_176329:
	movq 0x8(%rbp),%r14
	andq $0x1,%r14
	jz L_452991
L_176330:
	movq $0x1,%r14
	xchgq %r14,%r15
L_176331:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_452989
L_176332:
	movq $0x1,%r14
L_176333:
	cmpq %r14,%r15
	jnl L_176335
L_176342:
	movq %r14,%r15
L_176335:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	imulq %r11,%r15
	addq $0x7,%r13
	addq %r11,%r13
	addq %r13,%r15
	movq %r15,%rsi
	movq %r15,0x18(%rbp)
	addq $0x0,%rsi
	jc L_176336
L_176337:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq %rsi,%r15
	jnb L_176338
L_176340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_176341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176341
.p2align 0x4
.long 0x129D
L_176341:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_176338:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x18(%rbp),%rdx
	movq 0x0(%rbp),%rsi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_andb
L_176339:
	movq %rax,0x58(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_17
.p2align 0x4
L_452989:
L_176343:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_176344
L_176345:
	jmp L_176333
.p2align 0x4
L_452991:
L_176346:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	decq %r13
	jo L_176344
L_176347:
	xchgq %r13,%r15
	jmp L_176331
.p2align 0x4
L_452993:
L_176313:
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_176314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0xA96
L_176418:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176419
L_176422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_176423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176423
.p2align 0x4
.long 0x770
L_176423:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_176419:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_176311
L_176420:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61B
L_176409:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_176410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x61B
L_176401:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_176402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x61B
L_176393:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_176394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0xA96
L_176369:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176370
L_176373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_176374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176374
.p2align 0x4
.long 0x770
L_176374:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_176370:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_176311
L_176371:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61B
L_176360:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_176361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x129E
L_176350:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_176351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x79A
L_176353:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176354
L_176357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_176358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176358
.p2align 0x4
.long 0x129F
L_176358:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_176354:
	movl 0x68(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_176311
L_176355:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA96
L_176323:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176324
L_176327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_176328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176328
.p2align 0x4
.long 0x770
L_176328:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_176324:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_176311
L_176325:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61B
L_176314:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_176315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0xA96
L_176410:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176411
L_176414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_176415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176415
.p2align 0x4
.long 0x770
L_176415:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_176411:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_176311
L_176412:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA96
L_176402:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176403
L_176406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_176407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176407
.p2align 0x4
.long 0x770
L_176407:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_176403:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_176311
L_176404:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA96
L_176394:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176395
L_176398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_176399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176399
.p2align 0x4
.long 0x770
L_176399:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_176395:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_176311
L_176396:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA96
L_176361:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176362
L_176365:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_176366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176366
.p2align 0x4
.long 0x770
L_176366:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_176362:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_176311
L_176363:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x77E
L_176351:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq 0x58(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x58(%rbp)
	jmp loop_1778
.p2align 0x4
.long 0xA96
L_176315:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176316
L_176319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_176320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176320
.p2align 0x4
.long 0x770
L_176320:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_176316:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_176311
L_176317:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2829,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loopExp_0
.hidden loopExp_0
loopExp_0:
L_176445:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_176446
L_177012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_177013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177013
.p2align 0x4
.long 0x554
L_177013:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_176446:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_176472
L_176447:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
.p2align 0x4,,0x7
L_176448:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE99,%r14
	je L_453053
	cmpq $0xE9A,%r14
	je L_453051
	cmpq $0xE9B,%r14
	je L_453044
L_176449:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176450
L_176596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_176597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176597
.p2align 0x4
.long 0x2460
L_176597:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_176450:
	movq 0x48(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x60(%rbp)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_176468
L_176451:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0x1A62,%r11
	je L_453027
	cmpq $0x1A63,%r11
	je L_453026
	cmpq $0x1A64,%r11
	je L_453013
L_176452:
	movq 0x18(%r15),%r11
	movq %r11,0x80(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x68(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_176453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_453013:
L_176570:
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x48(%rbp)
	movq 0x10(%r14),%r10
	movq %r10,0x68(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_453025
L_176571:
	movq %r15,0x0(%r9)
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_453024
L_176572:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_176574:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_453023
L_176587:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA8,%r11
	jne L_453022
L_176588:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_453019
L_176575:
	incl %ecx
	movl %ecx,0x14(%rbp)
	jo L_453018
L_176576:
	cmpq $0x1,%r15
	je L_453014
L_176577:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_176574
.p2align 0x4
L_453014:
L_176578:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176579
L_176585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_176586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176586
.p2align 0x4
.long 0x245F
L_176586:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_176579:
	movl 0x14(%rbp),%ecx
L_176580:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_453016
L_176581:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_176583
L_176584:
	movl %ecx,0x0(%r15)
L_176583:
	movq $0x1951,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_176468:
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movb 0x10(%rbp),%r15b
	movb %r15b,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x50,%rbp
	leaq (L_176469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_453016:
L_176531:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453018:
L_176460:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453019:
L_176590:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_176531
L_176591:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_453020
L_176593:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453020:
L_176592:
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453022:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_176575
.p2align 0x4
L_453023:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_176575
.p2align 0x4
L_453024:
L_176594:
	xorl %ecx,%ecx
	jmp L_176580
.p2align 0x4
L_453025:
L_176520:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453026:
L_176552:
	movq 0x18(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r15),%r10
	movq $0xB5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	movq %r10,0x18(%r15)
	movq %r10,0x90(%rbp)
	addq $0x28,%r12
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x10(%r15)
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_176553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
L_453027:
L_176514:
	movq 0x0(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r15
	jne L_453041
L_176517:
	testl %r11d,%r11d
	jz L_453040
L_176518:
	movq $0x1,0x58(%rbp)
L_176519:
	movq 0x48(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r11),%r14
	movq 0x50(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_176520
L_176521:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_453038
L_176522:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_176524:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_453037
L_176538:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCD8,%r11
	jne L_453036
L_176539:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_453033
L_176525:
	incl %ecx
	movl %ecx,0x14(%rbp)
	jo L_176460
L_176526:
	cmpq $0x1,%r15
	je L_453028
L_176527:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_176524
.p2align 0x4
L_453028:
L_176528:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176529
L_176536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_176537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176537
.p2align 0x4
.long 0x245A
L_176537:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_176529:
	movl 0x14(%rbp),%ecx
L_176530:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_176531
L_176532:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_176534
L_176535:
	movl %ecx,0x0(%r15)
L_176534:
	movq $0x19B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_176468
.p2align 0x4
L_453033:
L_176541:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_176531
L_176542:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_453034
L_176545:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_176544:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_176468
.p2align 0x4
L_453034:
L_176543:
	movq %r13,%r15
	jmp L_176544
.p2align 0x4
L_453036:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_176525
.p2align 0x4
L_453037:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_176525
.p2align 0x4
L_453038:
L_176546:
	xorl %ecx,%ecx
	jmp L_176530
.p2align 0x4
L_453040:
L_176547:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x12C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1,0x78(%rbp)
	movl $0x0,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_176548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_453041:
L_176516:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453044:
L_177008:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_453045
L_177009:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453045:
L_176472:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_176490
	cmpq $0x2,%r15
	je L_453047
L_176473:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1A65,%r14
	je L_453046
L_176494:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_176495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453046:
L_176474:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_176475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453047:
L_176490:
	movb 0x10(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_453049
	cmpb $0x2,%r15b
	je L_453048
L_176479:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453048:
L_176483:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453049:
L_176481:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453051:
L_177000:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177001
L_177006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_177007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177007
.p2align 0x4
.long 0x2460
L_177007:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_177001:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq $0x34AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_177002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
L_453053:
L_176598:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176599
L_176998:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_176999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176999
.p2align 0x4
.long 0x2460
L_176999:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_176599:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x50(%rbp)
	movq $0x1107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_176600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp monoVar_0
.p2align 0x4
.long 0xC06
L_176453:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_176454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA2E
L_176469:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176470:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_176448
.p2align 0x4
.long 0xC03
L_176553:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movb 0x88(%rbp),%r15b
	movb %r15b,0x11(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176554
L_176568:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_176569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176569
.p2align 0x4
.long 0x245E
L_176569:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_176554:
	movb 0x11(%rbp),%r15b
	testb %r15b,%r15b
	jz L_176468
L_176556:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_453059
L_176557:
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_176516
L_176559:
	movl %r13d,0x90(%rbp)
	movq $0x3ACF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_176560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_32
.p2align 0x4
L_453059:
L_176566:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_176460
L_176567:
	movl %r14d,0x0(%r15)
L_176563:
	movq $0x1943,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_176468
.p2align 0x4
.long 0xC06
L_176548:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176549
L_176550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_176551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176551
.p2align 0x4
.long 0x245B
L_176551:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_176549:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	jmp L_176519
.p2align 0x4
.long 0x48A
L_176495:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_176490
L_176496:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453067
L_176501:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_176460
L_176502:
	movl %r15d,0x0(%r14)
	movb 0x10(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_176481
	cmpb $0x2,%r15b
	je L_176483
	jmp L_176479
.p2align 0x4
L_453067:
L_176497:
	movb 0x10(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_176481
	cmpb $0x2,%r14b
	je L_176483
	jmp L_176479
.p2align 0x4
.long 0x48A
L_176475:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_176490
L_176476:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453074
L_176484:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_176460
L_176485:
	movl %r15d,0x0(%r14)
	movb 0x10(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_176481
	cmpb $0x2,%r15b
	je L_176483
	jmp L_176479
.p2align 0x4
L_453074:
L_176477:
	movb 0x10(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_176481
	cmpb $0x2,%r14b
	je L_176483
	jmp L_176479
.p2align 0x4
.long 0x2461
L_177002:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177003
L_177004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_177005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177005
.p2align 0x4
.long 0x2466
L_177005:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_177003:
	movq $0x34AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movzbl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_176469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
.long 0x2461
L_176600:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176601
L_176996:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_176997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176997
.p2align 0x4
.long 0x2466
L_176997:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_176601:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_176982
	cmpq $0x2,%r15
	je L_453205
L_176602:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1A68,%r14
	je L_453190
	cmpq $0x1A69,%r14
	je L_453176
	cmpq $0x1A6A,%r14
	je L_453158
	cmpq $0x1A6B,%r14
	je L_453143
L_176603:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_453079
	leaq jumpTable_591(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_591:
.quad L_453142,L_453136,L_453130,L_453128,L_453120,L_453119,L_453118,L_453116,L_453108,L_453094,L_453085
.text
.p2align 0x4
L_453079:
L_176604:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
L_176605:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_453083
	cmpq $0x2,%r14
	je L_453081
L_176606:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1A65,%r13
	je L_453080
L_176620:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_176621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453080:
L_176607:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_176608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453081:
L_176636:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176637:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453083:
L_176633:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176634:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453085:
L_176852:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
L_176853:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_176875
	cmpq $0x2,%r14
	je L_453087
L_176854:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1A65,%r13
	je L_453086
L_176898:
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_176899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453086:
L_176855:
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r13),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_176856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453087:
L_176875:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_453091
	cmpq $0x2,%r14
	je L_453089
L_176876:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1A65,%r15
	je L_453088
L_176878:
	movq 0x0(%r14),%r15
L_176879:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_176880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453088:
L_176877:
	movq 0x0(%r14),%r15
L_176859:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_176860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453089:
L_176895:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176896:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453091:
L_176892:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176893:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453094:
L_176797:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
L_176798:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_176836
	cmpq $0x2,%r14
	je L_453096
L_176799:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1A65,%r13
	je L_453095
L_176839:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_176840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453095:
L_176800:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_176801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453096:
L_176836:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1235,%r14
	je L_453103
L_176838:
	movq 0x0(%r15),%r15
	movq %r15,0x50(%rbp)
L_176819:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x14(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_176516
L_176821:
	cmpl $0x0,%r13d
	jl L_453101
L_176822:
	movl $0x0,0x58(%rbp)
loop_1781:
	movl 0x58(%rbp),%r15d
	cmpl 0x14(%rbp),%r15d
	jnl L_453098
L_176824:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x50(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x60(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq 0x10(%r15),%r11
	cmpq $0x1,%r11
	je L_453097
L_176825:
	movq %r11,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_176826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp monoVar_0
.p2align 0x4
L_453097:
L_176827:
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movb 0x10(%rbp),%r15b
	movb %r15b,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x68,%rbp
	leaq (L_176828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_453098:
L_176810:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453099
L_176811:
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movb 0x10(%rbp),%r15b
	movb %r15b,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x50,%rbp
	leaq (L_176469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_453099:
L_176812:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176813:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453101:
L_176666:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453103:
L_176837:
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
L_176805:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x14(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_176516
L_176807:
	cmpl $0x0,%r13d
	jl L_176666
L_176808:
	movl $0x0,0x58(%rbp)
loop_1780:
	movl 0x58(%rbp),%r15d
	cmpl 0x14(%rbp),%r15d
	jnl L_176810
L_176815:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x50(%rbp),%r15
	movq 0x0(%r15,%r14,1),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movb 0x10(%rbp),%r15b
	movb %r15b,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x68,%rbp
	leaq (L_176816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_453108:
L_176758:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
L_176759:
	cmpq $0x1,%r15
	je L_453114
L_176760:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_453112
	cmpq $0x2,%r14
	je L_453110
L_176761:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1A65,%r13
	je L_453109
L_176775:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_176776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453109:
L_176762:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_176763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453110:
L_176791:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176792:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453112:
L_176788:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176789:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453114:
L_176794:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176795:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453116:
L_176755:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176756:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453118:
L_176745:
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_176746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_453119:
L_176742:
	movq 0x50(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r15
L_176743:
	movq $0x1107,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_176744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp monoVar_0
.p2align 0x4
L_453120:
L_176741:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
handleVarExps_0:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x14(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_176516
L_176641:
	cmpl $0x0,%r13d
	jl L_176666
L_176642:
	movl $0x0,0x50(%rbp)
.p2align 0x4,,0x7
loop_1779:
	movl 0x50(%rbp),%r15d
	cmpl 0x14(%rbp),%r15d
	jnl L_453124
L_176646:
	movslq %r15d,%r14
	movq 0x48(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_176652
	cmpq $0x2,%r15
	je L_453122
L_176647:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1A65,%r14
	je L_453121
L_176656:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_176657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453121:
L_176648:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_176649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453122:
.p2align 0x4,,0x7
L_176652:
	incl 0x50(%rbp)
	jmp loop_1779
.p2align 0x4
L_453124:
L_176643:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176644:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453128:
L_176738:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176739:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453130:
L_176702:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
L_176703:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_453134
	cmpq $0x2,%r14
	je L_453132
L_176704:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1A65,%r13
	je L_453131
L_176718:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_176719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453131:
L_176705:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_176706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453132:
L_176734:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176735:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453134:
L_176731:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176732:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453136:
L_176667:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
L_176668:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_453140
	cmpq $0x2,%r14
	je L_453138
L_176669:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1A65,%r13
	je L_453137
L_176683:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_176684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453137:
L_176670:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_176671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_453138:
L_176699:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176700:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453140:
L_176696:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176697:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453142:
L_176639:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453143:
L_176964:
	movq 0x0(%r15),%r14
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_453144
	leaq jumpTable_592(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_592:
.quad L_453157,L_453156,L_453155,L_176738,L_453151,L_453150,L_453149,L_176755,L_453147,L_453146,L_453145
.text
.p2align 0x4
L_453144:
L_176965:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_176605
.p2align 0x4
L_453145:
L_176980:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	jmp L_176853
.p2align 0x4
L_453146:
L_176979:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_176798
.p2align 0x4
L_453147:
L_176978:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_176759
.p2align 0x4
L_453149:
L_176976:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
L_176920:
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movb 0x10(%rbp),%r15b
	movb %r15b,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x60,%rbp
	leaq (L_176921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_453150:
L_176975:
	movq 0x50(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r15
	jmp L_176743
.p2align 0x4
L_453151:
L_176970:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r13,%r15
	andq $0xFF,%r15
	cmpq $0x3F,%r15
	je L_453153
L_176971:
	andq $0x3,%r13
	jnz L_453152
L_176973:
	xchgq %r11,%r14
L_176972:
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453152:
	movq %r11,%r14
	jmp L_176972
.p2align 0x4
L_453153:
L_176974:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453155:
L_176968:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_176703
.p2align 0x4
L_453156:
L_176967:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_176668
.p2align 0x4
L_453157:
L_176966:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453158:
L_176941:
	movq 0x0(%r15),%r14
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_453159
	leaq jumpTable_593(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_593:
.quad L_453175,L_453174,L_453173,L_176738,L_453166,L_453165,L_453164,L_176755,L_453162,L_453161,L_453160
.text
.p2align 0x4
L_453159:
L_176942:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_176605
.p2align 0x4
L_453160:
L_176963:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	jmp L_176853
.p2align 0x4
L_453161:
L_176962:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_176798
.p2align 0x4
L_453162:
L_176961:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_176759
.p2align 0x4
L_453164:
L_176959:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_176920
.p2align 0x4
L_453165:
L_176958:
	movq 0x50(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r15
	jmp L_176743
.p2align 0x4
L_453166:
L_176947:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r11,%r15
	andq $0xFF,%r15
	cmpq $0x17,%r15
	je L_453170
	cmpq $0x1A,%r15
	je L_453168
L_176948:
	andq $0x3,%r11
	jnz L_453167
L_176950:
	xchgq %r10,%r14
L_176949:
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453167:
	movq %r10,%r14
	jmp L_176949
.p2align 0x4
L_453168:
L_176955:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r13)
	jna L_453169
L_176957:
	movq 0x0(%r13),%r15
	movq $0x19BD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x18,%r12
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453169:
L_176953:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453170:
L_176951:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r13)
	jna L_176953
L_176954:
	movq 0x0(%r13),%r15
	movq $0x19BD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x18,%r12
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453173:
L_176945:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_176703
.p2align 0x4
L_453174:
L_176944:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_176668
.p2align 0x4
L_453175:
L_176943:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453176:
L_176927:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_176460
L_176928:
	movl %r15d,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_453177
	leaq jumpTable_594(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_594:
.quad L_453188,L_453187,L_453186,L_176738,L_453184,L_453183,L_453182,L_176755,L_453180,L_453179,L_453178
.text
.p2align 0x4
L_453177:
L_176929:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_176605
.p2align 0x4
L_453178:
L_176940:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	jmp L_176853
.p2align 0x4
L_453179:
L_176939:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_176798
.p2align 0x4
L_453180:
L_176938:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_176759
.p2align 0x4
L_453182:
L_176936:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_176920
.p2align 0x4
L_453183:
L_176935:
	movq 0x50(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r15
	jmp L_176743
.p2align 0x4
L_453184:
L_176934:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453186:
L_176932:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_176703
.p2align 0x4
L_453187:
L_176931:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_176668
.p2align 0x4
L_453188:
L_176930:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453190:
L_176907:
	movq 0x0(%r15),%r14
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_453191
	leaq jumpTable_595(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_595:
.quad L_453204,L_453203,L_453202,L_176738,L_453198,L_453197,L_453196,L_176755,L_453194,L_453193,L_453192
.text
.p2align 0x4
L_453191:
L_176908:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_176605
.p2align 0x4
L_453192:
L_176926:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	jmp L_176853
.p2align 0x4
L_453193:
L_176925:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_176798
.p2align 0x4
L_453194:
L_176924:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_176759
.p2align 0x4
L_453196:
L_176919:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_176920
.p2align 0x4
L_453197:
L_176918:
	movq 0x50(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r15
	jmp L_176743
.p2align 0x4
L_453198:
L_176913:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r13,%r15
	andq $0xFF,%r15
	cmpq $0x53,%r15
	je L_453200
L_176914:
	andq $0x3,%r13
	jnz L_453199
L_176916:
	xchgq %r11,%r14
L_176915:
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453199:
	movq %r11,%r14
	jmp L_176915
.p2align 0x4
L_453200:
L_176917:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453202:
L_176911:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_176703
.p2align 0x4
L_453203:
L_176910:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_176668
.p2align 0x4
L_453204:
L_176909:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453205:
L_176982:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_453206
	leaq jumpTable_596(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_596:
.quad L_453217,L_453216,L_453215,L_176738,L_453213,L_453212,L_453211,L_176755,L_453209,L_453208,L_453207
.text
.p2align 0x4
L_453206:
L_176983:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_176605
.p2align 0x4
L_453207:
L_176994:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	jmp L_176853
.p2align 0x4
L_453208:
L_176993:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_176798
.p2align 0x4
L_453209:
L_176992:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_176759
.p2align 0x4
L_453211:
L_176990:
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_176920
.p2align 0x4
L_453212:
L_176989:
	movq 0x50(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r15
	jmp L_176743
.p2align 0x4
L_453213:
L_176988:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
L_453215:
L_176986:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_176703
.p2align 0x4
L_453216:
L_176985:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_176668
.p2align 0x4
L_453217:
L_176984:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	jmp handleVarExps_0
.p2align 0x4
.long 0xC06
L_176454:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_176455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x245C
L_176560:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176561
L_176564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_176565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176565
.p2align 0x4
.long 0x245D
L_176565:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_176561:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_176460
L_176562:
	movl %r14d,0x0(%r15)
	jmp L_176563
.p2align 0x4
.long 0xA2E
L_176621:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453226
L_176622:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453224
L_176626:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_176460
L_176627:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176628:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453224:
L_176623:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176624:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453226:
L_176630:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176631:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
.long 0xA2E
L_176608:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453232
L_176609:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453230
L_176613:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_176460
L_176614:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176615:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453230:
L_176610:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176611:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453232:
L_176617:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176618:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
.long 0xA31
L_176899:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq %r14,0x58(%rbp)
	cmpq $0x1,%r14
	je L_176875
L_176900:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_453235
L_176902:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_176460
L_176903:
	movl %r14d,0x0(%r15)
	movq 0x50(%rbp),%r15
	jmp L_176879
.p2align 0x4
L_453235:
L_176901:
	movq 0x50(%rbp),%r15
	jmp L_176879
.p2align 0x4
.long 0xA31
L_176856:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq %r14,0x58(%rbp)
	cmpq $0x1,%r14
	je L_176875
L_176857:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_453238
L_176872:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_176460
L_176873:
	movl %r14d,0x0(%r15)
	movq 0x50(%rbp),%r15
	jmp L_176859
.p2align 0x4
L_453238:
L_176858:
	movq 0x50(%rbp),%r15
	jmp L_176859
.p2align 0x4
.long 0xA2E
L_176880:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453244
L_176881:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453242
L_176885:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_176460
L_176886:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176887:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453242:
L_176882:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176883:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453244:
L_176889:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176890:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
.long 0xA2E
L_176860:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453250
L_176861:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453248
L_176865:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_176460
L_176866:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176867:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453248:
L_176862:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176863:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453250:
L_176869:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176870:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
.long 0xA31
L_176840:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_176836
L_176841:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453254
L_176845:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_176460
L_176846:
	movl %r15d,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1235,%r14
	je L_453252
L_176848:
	movq 0x0(%r15),%r15
	movq %r15,0x50(%rbp)
	jmp L_176819
.p2align 0x4
L_453252:
L_176847:
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	jmp L_176805
.p2align 0x4
L_453254:
L_176842:
	movq 0x50(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1235,%r13
	je L_453255
L_176844:
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_176819
.p2align 0x4
L_453255:
L_176843:
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_176805
.p2align 0x4
.long 0xA31
L_176801:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_176836
L_176802:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453259
L_176831:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_176460
L_176832:
	movl %r15d,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1235,%r14
	je L_453257
L_176834:
	movq 0x0(%r15),%r15
	movq %r15,0x50(%rbp)
	jmp L_176819
.p2align 0x4
L_453257:
L_176833:
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	jmp L_176805
.p2align 0x4
L_453259:
L_176803:
	movq 0x50(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1235,%r13
	je L_453260
L_176818:
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_176819
.p2align 0x4
L_453260:
L_176804:
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_176805
.p2align 0x4
.long 0x2465
L_176826:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_176827
.p2align 0x4
.long 0x2464
L_176828:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	incl 0x58(%rbp)
	jmp loop_1781
.p2align 0x4
.long 0x2464
L_176816:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	incl 0x58(%rbp)
	jmp loop_1780
.p2align 0x4
.long 0xA2E
L_176776:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453266
L_176777:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453264
L_176781:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_176460
L_176782:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176783:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453264:
L_176778:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176779:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453266:
L_176785:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176786:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
.long 0xA2E
L_176763:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453272
L_176764:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453270
L_176768:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_176460
L_176769:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176770:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453270:
L_176765:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176766:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453272:
L_176772:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176773:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
.long 0x2463
L_176746:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (new1_24+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
.long 0xA2F
L_176744:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movb 0x10(%rbp),%r15b
	movb %r15b,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x50,%rbp
	leaq (L_176469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
.long 0x2462
L_176657:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_176652
L_176658:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_176652
L_176660:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_176460
L_176661:
	movl %r15d,0x0(%r14)
	jmp L_176652
.p2align 0x4
.long 0x2462
L_176649:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_176652
L_176650:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_176652
L_176653:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_176460
L_176654:
	movl %r15d,0x0(%r14)
	jmp L_176652
.p2align 0x4
.long 0xA2E
L_176719:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453284
L_176720:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453282
L_176724:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_176460
L_176725:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176726:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453282:
L_176721:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176722:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453284:
L_176728:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176729:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
.long 0xA2E
L_176706:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453290
L_176707:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453288
L_176711:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_176460
L_176712:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176713:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453288:
L_176708:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176709:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453290:
L_176715:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176716:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
.long 0xA2E
L_176684:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453296
L_176685:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453294
L_176689:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_176460
L_176690:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176691:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453294:
L_176686:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176687:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453296:
L_176693:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176694:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
.long 0xA2E
L_176671:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_453302
L_176672:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_453300
L_176676:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_176460
L_176677:
	movl %r15d,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_176472
L_176678:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453300:
L_176673:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176674:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
L_453302:
L_176680:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_176472
L_176681:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_176448
.p2align 0x4
.long 0xA31
L_176921:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_176922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp monoVar_0
.p2align 0x4
.long 0x2453
L_176455:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_176456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0xA96
new1_24:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176747
L_176752:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_176753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176753
.p2align 0x4
.long 0xA97
L_176753:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_176747:
	movq $0x3885,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movl $0x1,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_176748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0xA2F
L_176922:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movb 0x10(%rbp),%r15b
	movb %r15b,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x50,%rbp
	leaq (L_176469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
.long 0x2454
L_176456:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_176457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_3
.p2align 0x4
.long 0xA96
L_176748:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176749
L_176750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_176751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176751
.p2align 0x4
.long 0xA97
L_176751:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_176749:
	movq $0x1B2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2455
L_176457:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176458
L_176512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_176513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176513
.p2align 0x4
.long 0x2459
L_176513:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_176458:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_176459:
	addl 0x0(%r15),%ecx
	movl %ecx,0x14(%rbp)
	jo L_176460
L_176461:
	cmpq $0x1,%r14
	je L_453306
L_176462:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_176459
.p2align 0x4
L_453306:
L_176463:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176464
L_176510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_176511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176511
.p2align 0x4
.long 0x2458
L_176511:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_176464:
	movl 0x14(%rbp),%ecx
	testl %ecx,%ecx
	jz L_453307
L_176465:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
x_557:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x80(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_176466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_453307:
L_176509:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_557
.p2align 0x4
.long 0x2456
L_176466:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_176467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x2457
L_176467:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_176468
.text
.p2align 0x4
.globl monoVar_0
.hidden monoVar_0
monoVar_0:
L_177014:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_177120
L_177015:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453341
L_177016:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_453340
L_177017:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1A62,%r13
	je L_453325
	cmpq $0x1A63,%r13
	je L_453324
	cmpq $0x1A64,%r13
	je L_453311
L_177018:
	movq 0x18(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_177019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_453311:
L_177094:
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x20(%rbp)
	movq 0x10(%r14),%r10
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_453323
L_177095:
	movq %r15,0x0(%r9)
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_453322
L_177096:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_177098:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_453321
L_177111:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA8,%r11
	jne L_453320
L_177112:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_453317
L_177099:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_453316
L_177100:
	cmpq $0x1,%r15
	je L_453312
L_177101:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_177098
.p2align 0x4
L_453312:
L_177102:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177103
L_177109:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_177110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177110
.p2align 0x4
.long 0x450
L_177110:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_177103:
	movl 0x18(%rbp),%ecx
L_177104:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_453314
L_177105:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_177107
L_177108:
	movl %ecx,0x0(%r15)
L_177107:
	movq $0x1951,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453314:
L_177055:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453316:
L_177026:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453317:
L_177114:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_177055
L_177115:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_453318
L_177117:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453318:
L_177116:
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453320:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177099
.p2align 0x4
L_453321:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177099
.p2align 0x4
L_453322:
L_177118:
	xorl %ecx,%ecx
	jmp L_177104
.p2align 0x4
L_453323:
L_177044:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453324:
L_177076:
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r15),%r10
	movq $0xB5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	movq %r10,0x18(%r15)
	movq %r10,0x50(%rbp)
	addq $0x28,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_177077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
L_453325:
L_177038:
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_453339
L_177041:
	testl %r11d,%r11d
	jz L_453338
L_177042:
	movq $0x1,0x20(%rbp)
L_177043:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r14
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_177044
L_177045:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_453336
L_177046:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_177048:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_453335
L_177062:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCD8,%r11
	jne L_453334
L_177063:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_453331
L_177049:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_177026
L_177050:
	cmpq $0x1,%r15
	je L_453326
L_177051:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_177048
.p2align 0x4
L_453326:
L_177052:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177053
L_177060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_177061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177061
.p2align 0x4
.long 0x1A15
L_177061:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_177053:
	movl 0x38(%rbp),%ecx
L_177054:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_177055
L_177056:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_177058
L_177059:
	movl %ecx,0x0(%r15)
L_177058:
	movq $0x19B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453331:
L_177065:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_177055
L_177066:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_453332
L_177069:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_177068:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453332:
L_177067:
	movq %r13,%r15
	jmp L_177068
.p2align 0x4
L_453334:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177049
.p2align 0x4
L_453335:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177049
.p2align 0x4
L_453336:
L_177070:
	xorl %ecx,%ecx
	jmp L_177054
.p2align 0x4
L_453338:
L_177071:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x12C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1,0x38(%rbp)
	movl $0x0,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_177072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_453339:
L_177040:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453340:
L_177119:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453341:
L_177120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_177121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177121
.p2align 0x4
.long 0x45F
L_177121:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_177016
.p2align 0x4
.long 0x4A6
L_177019:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_177020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A8
L_177077:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movb 0x48(%rbp),%r15b
	movb %r15b,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177078
L_177092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_177093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177093
.p2align 0x4
.long 0x516
L_177093:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_177078:
	movb 0x40(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_453343
L_177079:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453343:
L_177080:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_453345
L_177081:
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_177040
L_177083:
	movl %r13d,0x50(%rbp)
	movq $0x3ACF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_177084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_32
.p2align 0x4
L_453345:
L_177090:
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_177026
L_177091:
	movl %r14d,0x0(%r15)
L_177087:
	movq $0x1943,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A6
L_177072:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177073
L_177074:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_177075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177075
.p2align 0x4
.long 0x720
L_177075:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_177073:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x20(%rbp)
	jmp L_177043
.p2align 0x4
.long 0x4A6
L_177020:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_177021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5E3
L_177084:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177085
L_177088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_177089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177089
.p2align 0x4
.long 0x793
L_177089:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_177085:
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_177026
L_177086:
	movl %r14d,0x0(%r15)
	jmp L_177087
.p2align 0x4
.long 0x4A7
L_177021:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_177022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x4B2
L_177022:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_177023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_3
.p2align 0x4
.long 0x7B4
L_177023:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177024
L_177036:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_177037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177037
.p2align 0x4
.long 0x5F4
L_177037:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_177024:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_177025:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_177026
L_177027:
	cmpq $0x1,%r14
	je L_453351
L_177028:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_177025
.p2align 0x4
L_453351:
L_177029:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177030
L_177034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_177035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177035
.p2align 0x4
.long 0x90B
L_177035:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_177030:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_453352
L_177031:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
x_558:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_177032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_453352:
L_177033:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_558
.p2align 0x4
.long 0x51A
L_177032:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp output_0
.text
.p2align 0x4
.globl stronglyConnectedComponents_0
.hidden stronglyConnectedComponents_0
stronglyConnectedComponents_0:
L_177122:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_177157
L_177123:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453359
L_177124:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x703,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x18(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movb $0x1,%r14b
	movzbq %r14b,%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq $0x2CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x410D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq %r14,0x8(%r11)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x17CB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r11,0x8(%r13)
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq %r14,0x10(%r13)
	movq $0x1,0x38(%rbp)
	movq $0x1,0x40(%rbp)
	movl $0x0,0x48(%rbp)
loop_1782:
	movq $0x17CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x20,%r12
	movl 0x48(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	cmpq $0x1,%r15
	je L_453356
L_177125:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq %r14,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_177126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1795
.p2align 0x4
L_453356:
L_177136:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_453357
L_177137:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
L_177138:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x3DD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_177139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_453357:
L_177143:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_453358
L_177144:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
L_177145:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x3DD5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_177146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_453358:
L_177150:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453359:
L_177157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_177158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177158
.p2align 0x4
.long 0x451
L_177158:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_177124
.p2align 0x4
.long 0x1969
L_177126:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177127
L_177134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_177135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177135
.p2align 0x4
.long 0x1E45
L_177135:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_177127:
	movq 0x68(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_453361
L_177128:
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_177129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_13
.p2align 0x4
L_453361:
L_177133:
	movq 0x58(%rbp),%r14
	xchgq %r14,%r15
	jmp loop_1782
.p2align 0x4
.long 0x4ED
L_177139:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177140
L_177154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_177155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177155
.p2align 0x4
.long 0x4EF
L_177155:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_177140:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_177143
L_177141:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_177138
.p2align 0x4
.long 0xA24
L_177146:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177147
L_177151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_177152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177152
.p2align 0x4
.long 0xA28
L_177152:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_177147:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_177150
L_177148:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_177145
.p2align 0x4
.long 0x2467
L_177129:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x78(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177130
L_177131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_177132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177132
.p2align 0x4
.long 0xBCE
L_177132:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_177130:
	movq 0x58(%rbp),%r15
	jmp loop_1782
.text
.p2align 0x4
.globl x_1795
.hidden x_1795
x_1795:
L_177159:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_177206
L_177160:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453388
L_177161:
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_453387
L_177163:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_453386
L_177164:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_177166:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_453385
L_177198:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCC5,%r11
	jne L_453384
L_177199:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_453381
L_177167:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_453380
L_177169:
	cmpq $0x1,%r15
	je L_453368
L_177170:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_177166
.p2align 0x4
L_453368:
L_177171:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177172
L_177196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_177197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177197
.p2align 0x4
.long 0x650
L_177197:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_177172:
	movl 0x28(%rbp),%ecx
L_177173:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_453378
L_177175:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_453376
L_177193:
	movl %ecx,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_453373
L_177194:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
.p2align 0x4,,0x7
loop_1783:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453372
.p2align 0x4,,0x7
L_177178:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_453369
L_177179:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x30(%rbp)
	jmp loop_1783
.p2align 0x4
L_453369:
L_177180:
	shrq $0x1,%r15
	movb %r15b,%r14b
	cmpb $0x1,%r14b
	je L_453371
	cmpb $0x2,%r14b
	je L_453370
L_177181:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
L_177182:
	movq $0x1405,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_177183:
	movq $0x198B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_559:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453370:
L_177185:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_177182
.p2align 0x4
L_453371:
L_177184:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_177182
.p2align 0x4
L_453372:
L_177186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_177187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177187
.p2align 0x4
.long 0x71F
L_177187:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_177178
.p2align 0x4
L_453373:
L_177195:
	shrq $0x1,%r15
	movb %r15b,%dl
x_560:
	cmpb $0x1,%dl
	je L_453375
	cmpb $0x2,%dl
	je L_453374
L_177189:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
L_177190:
	movq $0x1405,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_177183
.p2align 0x4
L_453374:
L_177192:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_177190
.p2align 0x4
L_453375:
L_177191:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_177190
.p2align 0x4
L_453376:
L_177176:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_453377
L_177177:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	jmp loop_1783
.p2align 0x4
L_453377:
L_177188:
	shrq $0x1,%r14
	movb %r14b,%dl
	jmp x_560
.p2align 0x4
L_453378:
L_177174:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453380:
L_177168:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453381:
L_177201:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_177174
L_177202:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_453382
L_177204:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp x_559
.p2align 0x4
L_453382:
L_177203:
	movq %r11,%r15
	jmp x_559
.p2align 0x4
L_453384:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177167
.p2align 0x4
L_453385:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177167
.p2align 0x4
L_453386:
L_177205:
	xorl %ecx,%ecx
	jmp L_177173
.p2align 0x4
L_453387:
L_177162:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453388:
L_177206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_177207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177207
.p2align 0x4
.long 0x45F
L_177207:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_177161
.text
.p2align 0x4
.globl visit_13
.hidden visit_13
visit_13:
L_177208:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_177276
L_177209:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453406
L_177210:
	movq 0x8(%rbp),%r13
	movl $0x1,0x0(%r13)
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r11d
	movl %r11d,0x40(%rbp)
	movl %r11d,%r13d
	incl %r13d
	movl %r13d,0x44(%rbp)
	jo L_177211
L_177212:
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x10,%r12
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x50(%rbp)
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq 0x10(%rbp),%r9
	movq %r9,0x0(%r10)
	movq $0x1401,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x58(%rbp)
	addq $0x18,%r12
	movl $0x1,0x0(%r10)
	movl %r11d,0x4(%r10)
	movq %r13,0x8(%r10)
	movq 0x8(%r9),%r13
	movq %r13,0x60(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_453404
L_177214:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_453403
L_177215:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_177217:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_177218
L_177268:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCCB,%r13
	jne L_177218
L_177269:
	movq 0x0(%r14),%r13
	cmpq %r13,0x28(%rbp)
	je L_453398
L_177218:
	incl %ecx
	movl %ecx,0x68(%rbp)
	jo L_453397
L_177219:
	cmpq $0x1,%r15
	je L_453390
L_177220:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_177217
.p2align 0x4
L_453390:
L_177221:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177222
L_177266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_177267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177267
.p2align 0x4
.long 0x246D
L_177267:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_177222:
	movl 0x68(%rbp),%ecx
L_177223:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_453395
L_177225:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_177227
L_177265:
	movl %ecx,0x0(%r15)
L_177227:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x1997,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%r11),%r14
	movq $0x28DF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
loop_1784:
	movq $0x17CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x20,%r12
	movl 0x44(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x10(%r14)
	cmpq $0x1,%r15
	je L_453391
L_177228:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r13,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_177229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1795
.p2align 0x4
L_453391:
L_177250:
	movq 0x48(%rbp),%r15
	movl 0x40(%rbp),%r14d
	cmpl %r14d,0x0(%r15)
	je L_453392
L_177251:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x44(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453392:
L_177252:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_453393
L_177253:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
L_177254:
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_177255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_115
.p2align 0x4
L_453393:
L_177260:
	movq (globalObjptr+0x1428)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453395:
L_177224:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453397:
L_177211:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453398:
L_177271:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_177224
L_177272:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_453399
L_177274:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453399:
L_177273:
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453403:
L_177275:
	xorl %ecx,%ecx
	jmp L_177223
.p2align 0x4
L_453404:
L_177213:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453406:
L_177276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_177277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177277
.p2align 0x4
.long 0x646
L_177277:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_177210
.p2align 0x4
.long 0x2468
L_177229:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_453408
L_177230:
	movq 0x58(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0x80,%rbp
	leaq (L_177231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_13
.p2align 0x4
L_453408:
L_177238:
	movq 0x70(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_177239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_115
.p2align 0x4
.long 0x246C
L_177255:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177256
L_177262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_177263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177263
.p2align 0x4
.long 0x99D
L_177263:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_177256:
	movq 0x48(%rbp),%r15
	movl $0x0,0x0(%r15)
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x60(%rbp),%r13
	cmpq %r13,0x8(%r14)
	je L_453410
L_177257:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_177260
L_177258:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_177254
.p2align 0x4
L_453410:
L_177261:
	movq $0x2719,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x44(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2469
L_177231:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl 0x90(%rbp),%r15d
	movl %r15d,0x44(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_177232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_115
.p2align 0x4
.long 0x246A
L_177239:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177240
L_177248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_177249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177249
.p2align 0x4
.long 0x246B
L_177249:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_177240:
	movq 0x58(%rbp),%r14
	movl 0x4(%r14),%r13d
	cmpl 0x40(%rbp),%r13d
	jnl L_177242
L_177243:
	movl 0x0(%r14),%r11d
	testl %r11d,%r11d
	jz L_177242
L_177245:
	movq 0x48(%rbp),%r14
	cmpl 0x0(%r14),%r13d
	jnl L_453412
L_177247:
	movl %r13d,0x0(%r14)
	movq 0x68(%rbp),%r15
	jmp loop_1784
.p2align 0x4
L_453412:
L_177242:
	movq 0x68(%rbp),%r15
	jmp loop_1784
.p2align 0x4
.long 0x246A
L_177232:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177233
L_177236:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_177237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177237
.p2align 0x4
.long 0x246B
L_177237:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_177233:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r15
	movl 0x0(%r15),%r14d
	movq 0x48(%rbp),%r13
	cmpl 0x0(%r13),%r14d
	jnl L_453416
L_177235:
	movl %r14d,0x0(%r13)
	movq 0x68(%rbp),%r15
	jmp loop_1784
.p2align 0x4
L_453416:
L_177234:
	movq 0x68(%rbp),%r15
	jmp loop_1784
.text
.p2align 0x4
.globl get_115
.hidden get_115
get_115:
L_177278:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_177337
L_177279:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453430
L_177280:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_453429
L_177282:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_453428
L_177283:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_177285:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_453427
L_177329:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCCB,%r11
	jne L_453426
L_177330:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_453423
L_177286:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_453422
L_177288:
	cmpq $0x1,%r15
	je L_453418
L_177289:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_177285
.p2align 0x4
L_453418:
L_177290:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177291
L_177327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_177328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177328
.p2align 0x4
.long 0x45E
L_177328:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_177291:
	movl 0x20(%rbp),%ecx
L_177292:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_453420
L_177294:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_177296
L_177326:
	movl %ecx,0x0(%r15)
L_177296:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_177297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_453420:
L_177293:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453422:
L_177287:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453423:
L_177332:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_177293
L_177333:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_453424
L_177335:
	movl %ecx,0x0(%r15)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453424:
L_177334:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453426:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177286
.p2align 0x4
L_453427:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_177286
.p2align 0x4
L_453428:
L_177336:
	xorl %ecx,%ecx
	jmp L_177292
.p2align 0x4
L_453429:
L_177281:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453430:
L_177337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_177338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177338
.p2align 0x4
.long 0x45F
L_177338:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_177280
.p2align 0x4
.long 0x1
L_177297:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_177298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_177298:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF578)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_177299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_177299:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_177300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_177300:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177301
L_177324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_177325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177325
.p2align 0x4
.long 0x4AE
L_177325:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_177301:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_177302:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_177287
L_177303:
	cmpq $0x1,%r14
	je L_453432
L_177304:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_177302
.p2align 0x4
L_453432:
L_177305:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177306
L_177322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_177323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177323
.p2align 0x4
.long 0x4E6
L_177323:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_177306:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_453433
L_177307:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_250:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_453433:
L_177321:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_250
.p2align 0x4
.long 0x1
rev_248:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_453439
L_177308:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_177309:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453438
.p2align 0x4,,0x7
L_177310:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_453437
L_177311:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_177309
.p2align 0x4
L_453437:
L_177313:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_177314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_453438:
L_177318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_177319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177319
.p2align 0x4
.long 0x45B
L_177319:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_177310
.p2align 0x4
L_453439:
L_177320:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_177313
.p2align 0x4
.long 0x1
L_177314:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177315
L_177316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_177317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177317
.p2align 0x4
.long 0x451
L_177317:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_177315:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loopExp_1
.hidden loopExp_1
loopExp_1:
L_177339:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_177340
L_177543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_177544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177544
.p2align 0x4
.long 0x18B9
L_177544:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_177340:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_453482
L_177341:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x14(%rbp)
.p2align 0x4,,0x7
L_177342:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE99,%r14
	je L_453446
	cmpq $0xE9A,%r14
	je L_453441
L_177343:
	movq (globalObjptr+0x50E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453441:
L_177507:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177508
L_177540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_177541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177541
.p2align 0x4
.long 0x9A6
L_177541:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_177508:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_453444
L_177510:
	testl %r13d,%r13d
	jz L_453443
L_177511:
	cmpq $0x0,%r15
	jna L_453442
L_177513:
	movq 0x0(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_177514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_65
.p2align 0x4
L_453442:
L_177362:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453443:
L_177524:
	movq $0x34B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_177525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
L_453444:
L_177358:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453446:
L_177344:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_453447
	leaq jumpTable_597(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_597:
.quad L_453478,L_453477,L_453475,L_453473,L_453469,L_453467,L_453466,L_177352,L_453463,L_453452,L_453448
.text
.p2align 0x4
L_453447:
L_177345:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_177346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_453448:
L_177500:
	movl 0x14(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_453450
L_177501:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453449
L_177502:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movl $0x0,0x14(%rbp)
	jmp L_177342
.p2align 0x4
L_453449:
L_177503:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453450:
L_177504:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453451
L_177505:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	jmp L_177342
.p2align 0x4
L_453451:
L_177506:
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453452:
L_177461:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1235,%r15
	je L_453458
L_177487:
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x60(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_177358
L_177489:
	cmpl $0x0,%r13d
	jl L_453456
L_177490:
	movl 0x14(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movl $0x0,0x68(%rbp)
.p2align 0x4,,0x7
loop_1789:
	movl 0x60(%rbp),%r15d
	cmpl %r15d,0x68(%rbp)
	jl L_453455
L_177491:
	cmpq $0x1,0x50(%rbp)
	jne L_453454
L_177493:
	movl 0x64(%rbp),%ecx
L_177477:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453453
L_177478:
	movl %ecx,0x14(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_177342
.p2align 0x4
L_453453:
L_177479:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453454:
L_177492:
	movq 0x50(%rbp),%r15
	movl 0x64(%rbp),%r14d
	movl %r14d,0x50(%rbp)
L_177468:
	movq %r15,0x68(%rbp)
	movl 0x14(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x60,%rbp
	leaq (L_177469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_1
.p2align 0x4
L_453455:
L_177494:
	movslq 0x68(%rbp),%r15
	salq $0x4,%r15
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0x80(%rbp)
	movl 0x14(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0x78,%rbp
	leaq (L_177495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_1
.p2align 0x4
L_453456:
L_177486:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453458:
L_177462:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x60(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_177358
L_177464:
	cmpl $0x0,%r13d
	jl L_177486
L_177465:
	movl 0x14(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movl $0x0,0x68(%rbp)
.p2align 0x4,,0x7
loop_1788:
	movl 0x60(%rbp),%r15d
	cmpl %r15d,0x68(%rbp)
	jl L_453460
L_177466:
	cmpq $0x1,0x50(%rbp)
	jne L_453459
L_177476:
	movl 0x64(%rbp),%ecx
	jmp L_177477
.p2align 0x4
L_453459:
L_177467:
	movq 0x50(%rbp),%r15
	movl 0x64(%rbp),%r14d
	movl %r14d,0x50(%rbp)
	jmp L_177468
.p2align 0x4
L_453460:
L_177480:
	movslq 0x68(%rbp),%r15
	salq $0x4,%r15
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0x80(%rbp)
	movl 0x14(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0x78,%rbp
	leaq (L_177481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_1
.p2align 0x4
L_453463:
L_177455:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_453464
L_177456:
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_177457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_453464:
L_177352:
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_177353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_453466:
L_177449:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r15
	movq %r15,0x68(%rbp)
	movl 0x14(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x60,%rbp
	leaq (L_177450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_1
.p2align 0x4
L_453467:
L_177431:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177432
L_177447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_177448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177448
.p2align 0x4
.long 0x2471
L_177448:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_177432:
	movq 0x68(%rbp),%r15
	movq 0x20(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r10
	movq 0x8(%r15),%r9
	movq $0x104D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r11,0x70(%rbp)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movl $0x0,0x68(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x68,%rbp
	leaq (L_177433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_1
.p2align 0x4
L_453469:
L_177382:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x78(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x80(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_177358
L_177384:
	movl $0x0,0x68(%rbp)
loop_1786:
	movl 0x68(%rbp),%r15d
	cmpl 0x80(%rbp),%r15d
	je L_453471
L_177385:
	movslq %r15d,%r14
	cmpq 0x78(%rbp),%r14
	jnb L_177362
L_177387:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_177388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_453471:
L_177407:
	movq 0x50(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_177408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1793
.p2align 0x4
L_453473:
L_177379:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453474
L_177380:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_177342
.p2align 0x4
L_453474:
L_177381:
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453475:
L_177376:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453476
L_177377:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_177342
.p2align 0x4
L_453476:
L_177378:
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453477:
L_177372:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_177373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_453478:
L_177356:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x60(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x70(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_177358
L_177359:
	movl $0x0,0x68(%rbp)
loop_1785:
	movl 0x68(%rbp),%r15d
	cmpl 0x70(%rbp),%r15d
	je L_177352
L_177360:
	movslq %r15d,%r14
	cmpq 0x60(%rbp),%r14
	jnb L_177362
L_177363:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_177364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_453482:
L_177542:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x995
L_177514:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177515
L_177537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_177538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177538
.p2align 0x4
.long 0x8C0
L_177538:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_177515:
	movq 0x50(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x68(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x70(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_177358
L_177517:
	movl $0x0,0x50(%rbp)
loop_1790:
	movl 0x50(%rbp),%r15d
	cmpl %r15d,0x70(%rbp)
	je L_453485
L_177518:
	movslq %r15d,%r14
	cmpq 0x68(%rbp),%r14
	jnb L_177362
L_177520:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_177521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_453485:
L_177532:
	movq $0x34A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x68(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_177533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
.long 0x911
L_177525:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453488
L_177526:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_177342
.p2align 0x4
L_453488:
L_177527:
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x995
L_177346:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_177352
L_177347:
	movl 0x14(%rbp),%ecx
L_177348:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453489
L_177349:
	movl %ecx,0x14(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_177342
.p2align 0x4
L_453489:
L_177350:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2472
L_177469:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x14(%rbp)
	jnz L_453492
L_177470:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453491
L_177471:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movl $0x0,0x14(%rbp)
	jmp L_177342
.p2align 0x4
L_453491:
L_177472:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453492:
L_177473:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453493
L_177474:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_177342
.p2align 0x4
L_453493:
L_177475:
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2473
L_177495:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	testl %r15d,%r15d
	jnz L_453494
L_177496:
	xorl %ecx,%ecx
L_177497:
	movl %ecx,0x64(%rbp)
	incl 0x68(%rbp)
	jmp loop_1789
.p2align 0x4
L_453494:
L_177498:
	movl 0x64(%rbp),%ecx
	jmp L_177497
.p2align 0x4
.long 0x2473
L_177481:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	testl %r15d,%r15d
	jnz L_453495
L_177482:
	xorl %ecx,%ecx
L_177483:
	movl %ecx,0x64(%rbp)
	incl 0x68(%rbp)
	jmp loop_1788
.p2align 0x4
L_453495:
L_177484:
	movl 0x64(%rbp),%ecx
	jmp L_177483
.p2align 0x4
.long 0x995
L_177457:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_177352
L_177458:
	movl 0x14(%rbp),%ecx
	jmp L_177348
.p2align 0x4
.long 0x911
L_177353:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x20(%r15),%r14
	movl $0x1,0x0(%r14)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453497
L_177354:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_177342
.p2align 0x4
L_453497:
L_177355:
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8BC
L_177450:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	movl %r15d,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x58,%rbp
	leaq (L_177451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_1
.p2align 0x4
.long 0x912
L_177433:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_177434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_65
.p2align 0x4
.long 0x246F
L_177388:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_453499
L_177405:
	movl 0x68(%rbp),%r15d
	incl %r15d
	jo L_453498
L_177406:
	movl %r15d,0x68(%rbp)
	jmp loop_1786
.p2align 0x4
L_453498:
L_177369:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453499:
L_177390:
	movl 0x14(%rbp),%r15d
	testl %r15d,%r15d
	jz L_453504
L_177393:
	xorl %ecx,%ecx
L_177394:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x51,%r14
	je L_453502
L_177395:
	andq $0x3,%r15
	jnz L_177396
L_177400:
L_177396:
	testl %ecx,%ecx
	jz L_453500
L_177399:
	movl $0x1,0x14(%rbp)
	jmp L_177352
.p2align 0x4
L_453500:
L_177398:
	movl $0x1,%ecx
	jmp L_177348
.p2align 0x4
L_453502:
L_177401:
	testl %ecx,%ecx
	jz L_453503
L_177404:
	movl $0x0,0x14(%rbp)
	jmp L_177352
.p2align 0x4
L_453503:
L_177403:
	xorl %ecx,%ecx
	jmp L_177348
.p2align 0x4
L_453504:
L_177392:
	xorl %ecx,%ecx
	jmp L_177348
.p2align 0x4
.long 0x998
L_177408:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movb 0x70(%rbp),%r15b
	movb %r15b,0x68(%rbp)
	cmpb $0x2,%r15b
	jne L_177410
L_177423:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x3A,%r14
	je L_177410
	cmpq $0x3D,%r14
	je L_453507
L_177424:
	andq $0x3,%r15
	jnz L_177425
L_177428:
L_177425:
	movl 0x14(%rbp),%r15d
	testl %r15d,%r15d
	jz L_453505
L_177427:
	movl $0x1,%ecx
	jmp L_177394
.p2align 0x4
L_453505:
L_177420:
	movl $0x0,0x14(%rbp)
	jmp L_177352
.p2align 0x4
L_453507:
L_177410:
	movl 0x14(%rbp),%r15d
	testl %r15d,%r15d
	jz L_177390
L_177412:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x49,%r14
	je L_453510
	cmpq $0x51,%r14
	je L_177403
L_177413:
	andq $0x3,%r15
	jnz L_177398
L_177414:
	jmp L_177398
.p2align 0x4
L_453510:
L_177415:
	movq 0x60(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_177416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeIsSmall_0
.p2align 0x4
.long 0x995
L_177373:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_177352
L_177374:
	movl 0x14(%rbp),%ecx
	jmp L_177348
.p2align 0x4
.long 0x246E
L_177364:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_453516
L_177365:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453515
L_177366:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_177342
.p2align 0x4
L_453515:
L_177367:
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453516:
L_177368:
	movl 0x68(%rbp),%r15d
	incl %r15d
	jo L_177369
L_177370:
	movl %r15d,0x68(%rbp)
	jmp loop_1785
.p2align 0x4
.long 0x2470
L_177521:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177522
L_177530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_177531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177531
.p2align 0x4
.long 0x2474
L_177531:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_177522:
	movq 0x78(%rbp),%r15
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_177524
L_177528:
	movl 0x50(%rbp),%r15d
	incl %r15d
	jo L_177369
L_177529:
	movl %r15d,0x50(%rbp)
	jmp loop_1790
.p2align 0x4
.long 0x995
L_177533:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177524
L_177535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_177536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177536
.p2align 0x4
.long 0x2131
L_177536:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_177524
.p2align 0x4
.long 0x911
L_177451:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453522
L_177452:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_177342
.p2align 0x4
L_453522:
L_177453:
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x995
L_177434:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x68(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x70(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_177358
L_177436:
	movl $0x0,0x50(%rbp)
loop_1787:
	movl 0x50(%rbp),%r15d
	cmpl %r15d,0x70(%rbp)
	je L_177352
L_177437:
	movslq %r15d,%r14
	cmpq 0x68(%rbp),%r14
	jnb L_177362
L_177439:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_177440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x912
L_177416:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_453527
L_177417:
	testl %r15d,%r15d
	jnz L_177420
	jmp L_177392
.p2align 0x4
L_453527:
L_177421:
	movl %r15d,%ecx
	jmp L_177394
.p2align 0x4
.long 0x2470
L_177440:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_453529
L_177441:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_453528
L_177442:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_177342
.p2align 0x4
L_453528:
L_177443:
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453529:
L_177444:
	movl 0x50(%rbp),%r15d
	incl %r15d
	jo L_177369
L_177445:
	movl %r15d,0x50(%rbp)
	jmp loop_1787
.text
.p2align 0x4
.globl typeIsSmall_0
.hidden typeIsSmall_0
typeIsSmall_0:
L_177545:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_177546
L_177572:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_177573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177573
.p2align 0x4
.long 0x45F
L_177573:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_177546:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_453531
L_177547:
	movq %r14,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_177548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_453531:
L_177571:
	movq (globalObjptr+0x50E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E3
L_177548:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,%r14
	andq $0x1,%r14
	jz L_177550
L_177568:
	shrq $0x1,%r15
	movl %r15d,%r14d
	testl %r14d,%r14d
	jnz L_453538
L_177550:
	movq 0x10(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,0x10(%r15)
	je L_177555
L_177551:
	movq 0x18(%rbp),%r15
	cmpq %r14,0x10(%r15)
	je L_453533
L_177553:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453533:
L_177555:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x10(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x18(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	je L_453534
L_177556:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453534:
L_177557:
	movl $0x0,0x1C(%rbp)
loop_1791:
	movl 0x1C(%rbp),%r15d
	cmpl 0x18(%rbp),%r15d
	je L_177553
L_177558:
	movslq %r15d,%r14
	cmpq 0x10(%rbp),%r14
	jnb L_453535
L_177560:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (not_46+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeIsSmall_0
.p2align 0x4
L_453535:
L_177559:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453538:
L_177562:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x496
not_46:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	testl %r15d,%r15d
	jz L_177562
L_177563:
	movl 0x1C(%rbp),%r15d
	incl %r15d
	jo L_453540
L_177565:
	movl %r15d,0x1C(%rbp)
	jmp loop_1791
.p2align 0x4
L_453540:
L_177564:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl clearExp_0
.hidden clearExp_0
clearExp_0:
L_177574:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_177575
L_177634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_177635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177635
.p2align 0x4
.long 0x451
L_177635:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_177575:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_177587
L_177576:
	movq 0x8(%r13),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_177577:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE99,%r14
	je L_453551
	cmpq $0xE9A,%r14
	je L_453547
	cmpq $0xE9B,%r14
	je L_453545
L_177578:
	movq 0x10(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x18(%r15),%r11
	movq 0x10(%r11),%r10
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r10)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%ecx
	movslq %ecx,%r15
	cmpq %r11,%r15
	jne L_453544
L_177581:
	cmpl $0x0,%ecx
	jl L_453543
L_177582:
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_1792:
	cmpl %ecx,%ebx
	jnl L_453542
L_177588:
	movslq %ebx,%r13
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r9)
	incl %ebx
	jmp loop_1792
.p2align 0x4
L_453542:
L_177583:
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_177584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp clearExp_0
.p2align 0x4
L_453543:
L_177590:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453544:
L_177580:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453545:
L_177630:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_453546
L_177631:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177577
.p2align 0x4
L_453546:
L_177587:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453547:
L_177623:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r11
	jne L_177580
L_177625:
	cmpl $0x0,%ecx
	jl L_177590
L_177626:
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_1795:
	cmpl %ecx,%ebx
	jnl L_453548
L_177628:
	movslq %ebx,%r13
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r9)
	incl %ebx
	jmp loop_1795
.p2align 0x4
L_453548:
L_177627:
	movq %r15,0x18(%rbp)
	movq $0x1,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_177584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
L_453551:
L_177591:
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r11)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA3,%r15
	je L_453565
	cmpq $0xEA4,%r15
	je L_453564
	cmpq $0xEA7,%r15
	je L_453553
L_177592:
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_177587
L_177593:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	jmp L_177577
.p2align 0x4
L_453553:
L_177598:
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1235,%r14
	je L_453560
L_177612:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_177580
L_177614:
	cmpl $0x0,%r13d
	jl L_177590
L_177615:
	movl $0x0,0x1C(%rbp)
.p2align 0x4,,0x7
loop_1794:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_453556
L_177604:
	cmpq $0x1,0x8(%rbp)
	jne L_453555
L_177606:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177587
L_177607:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177577
.p2align 0x4
L_453555:
L_177605:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_177584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp clearExp_0
.p2align 0x4
L_453556:
L_177617:
	movslq 0x1C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x10(%r14),%r10
	cmpq $0x1,%r10
	je L_453557
L_177618:
	movq 0x8(%r10),%r14
	movq 0x10(%r14),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq %r11,%r15
L_177619:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_177620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp clearExp_0
.p2align 0x4
L_453557:
	movq %r11,%r15
	jmp L_177619
.p2align 0x4
L_453560:
L_177599:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_177580
L_177601:
	cmpl $0x0,%r13d
	jl L_177590
L_177602:
	movl $0x0,0x1C(%rbp)
.p2align 0x4,,0x7
loop_1793:
	movl 0x1C(%rbp),%r15d
	cmpl 0x18(%rbp),%r15d
	jnl L_177604
L_177609:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r14,1),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_177610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp clearExp_0
.p2align 0x4
L_453564:
L_177596:
	movq 0x10(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	addq $0x20,%rbp
	leaq (L_177597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp clearExp_0
.p2align 0x4
L_453565:
L_177595:
	movq 0x18(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	addq $0x10,%rbp
	leaq (L_177584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp clearExp_0
.p2align 0x4
.long 0x4AF
L_177584:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177587
L_177585:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177577
.p2align 0x4
.long 0xB9C
L_177620:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_1794
.p2align 0x4
.long 0xB9C
L_177610:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_1793
.p2align 0x4
.long 0x51E
L_177597:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_177584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp clearExp_0
.text
.p2align 0x4
.globl get_107
.hidden get_107
get_107:
L_177636:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_177745
L_177637:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453601
L_177638:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_177639
L_177640:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_453599
L_177641:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x38(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_177643:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_177644
L_177731:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCDC,%r13
	jne L_177644
L_177732:
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x28(%rbp)
	je L_453592
L_177644:
	movl 0x38(%rbp),%r13d
	incl %r13d
	movl %r13d,0x3C(%rbp)
	jo L_177645
L_177646:
	cmpq $0x1,%r15
	je L_453569
L_177647:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x38(%rbp)
	jmp L_177643
.p2align 0x4
L_453569:
L_177648:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177649
L_177729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_177730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177730
.p2align 0x4
.long 0x634
L_177730:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_177649:
	movl 0x3C(%rbp),%ecx
L_177650:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_177651
L_177652:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_177654
L_177728:
	movl %ecx,0x0(%r15)
L_177654:
	movq 0x20(%rbp),%r11
	movq 0x0(%r11),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r10
	movq %r10,0x0(%r14)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r14,0x0(%r11)
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE96,%r14
	je L_453582
L_177676:
	movq 0x0(%r15),%r11
	movq 0x8(%r11),%r13
	movq 0x8(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_453581
L_177677:
	movq %r14,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_453580
L_177678:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x20(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_177680:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_177681
L_177717:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xCAE,%r11
	jne L_177681
L_177718:
	movq 0x8(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r14),%r11
	cmpq %r11,0x18(%rbp)
	je L_453573
L_177681:
	movl 0x20(%rbp),%r11d
	incl %r11d
	jo L_453572
L_177682:
	cmpq $0x1,%r15
	je L_453570
L_177683:
	movl %r11d,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_177680
.p2align 0x4
L_453570:
	movl %r11d,%ecx
L_177685:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_453571
L_177686:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_561
L_177716:
	movl %ecx,0x0(%r15)
x_561:
	movq 0x10(%r13),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_177688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_453571:
L_177651:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453572:
L_177645:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453573:
L_177720:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177721
L_177725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_177726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177726
.p2align 0x4
.long 0xDEC
L_177726:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_177721:
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_177651
L_177722:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_453575
L_177723:
	movq 0x38(%rbp),%r15
x_562:
	movl 0x0(%r15),%r14d
	movq $0x530D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
L_177664:
	movq $0x19B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2985,%r14
	je L_453574
L_177666:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq $0x530F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453574:
L_177665:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x5311,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	addq $0x20,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453575:
L_177724:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp x_562
.p2align 0x4
L_453580:
L_177727:
	xorl %ecx,%ecx
	jmp L_177685
.p2align 0x4
L_453581:
L_177639:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453582:
L_177655:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x48(%rbp)
	cmpq %r15,%r11
	je L_453583
L_177656:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453583:
L_177657:
	movq 0x48(%rbp),%r15
	testq %r15,%r15
	jz L_453587
L_177658:
	cmpq $0x7FFFFFFF,%r15
	ja L_453586
L_177659:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177660
L_177672:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_177673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177673
.p2align 0x4
.long 0xA9D
L_177673:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_177660:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1523,%rcx
	movq 0x48(%rbp),%rdx
	movq $0x70,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_177661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177661
.p2align 0x4
.long 0xA9D
L_177661:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_177662:
	movq $0x0,0x58(%rbp)
loop_1796:
	movq 0x48(%rbp),%r14
	cmpq %r14,0x58(%rbp)
	jl L_453584
L_177663:
	movq 0x50(%rbp),%r14
	movq $0xA5,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x530B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_177664
.p2align 0x4
L_453584:
L_177667:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x68,%rbp
	leaq (L_177668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_107
.p2align 0x4
L_453586:
L_177674:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453587:
L_177675:
	movq (globalObjptr+0x1CF0)(%rip),%r14
	movq %r14,0x50(%rbp)
	jmp L_177662
.p2align 0x4
L_453592:
L_177734:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177735
L_177742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_177743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177743
.p2align 0x4
.long 0x48C
L_177743:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_177735:
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2985,%r15
	je L_453595
L_177741:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movq $0x530F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,%r15
L_177737:
	movl 0x38(%rbp),%r14d
	movslq %r14d,%r13
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r13
	jo L_177651
L_177738:
	movq %r13,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_453593
L_177739:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453593:
L_177740:
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0x1078)(%rip),%r15
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453595:
L_177736:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x5311,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq %r14,%r15
	jmp L_177737
.p2align 0x4
L_453599:
L_177744:
	xorl %ecx,%ecx
	jmp L_177650
.p2align 0x4
L_453601:
L_177745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_177746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177746
.p2align 0x4
.long 0x4DE
L_177746:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_177638
.p2align 0x4
.long 0x1
L_177688:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_177689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1957
L_177668:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177669
L_177670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_177671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177671
.p2align 0x4
.long 0xBD1
L_177671:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_177669:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x58(%rbp),%r14
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x58(%rbp)
	jmp loop_1796
.p2align 0x4
.long 0x4AF
L_177689:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDEE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_177690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_177690:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_177691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_177691:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177692
L_177714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_177715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177715
.p2align 0x4
.long 0x4AE
L_177715:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_177692:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_177693:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_177645
L_177694:
	cmpq $0x1,%r14
	je L_453604
L_177695:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_177693
.p2align 0x4
L_453604:
L_177696:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177697
L_177712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_177713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177713
.p2align 0x4
.long 0x4E6
L_177713:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_177697:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_453605
L_177698:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_251:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_453605:
L_177711:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_251
.p2align 0x4
.long 0x1
rev_249:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_453611
L_177699:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_177700:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_453610
.p2align 0x4,,0x7
L_177701:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_453609
L_177702:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_177700
.p2align 0x4
L_453609:
L_177704:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_453610:
L_177708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_177709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177709
.p2align 0x4
.long 0x45B
L_177709:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_177701
.p2align 0x4
L_453611:
L_177710:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_177704
.p2align 0x4
.long 0x1
bug_465:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177705
L_177706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_177707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177707
.p2align 0x4
.long 0x451
L_177707:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_177705:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1192
.hidden x_1192
x_1192:
L_177747:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_177748
L_178357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_178358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178358
.p2align 0x4
.long 0x457
L_178358:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_177748:
	movslq 0x8(%rbp),%r15
	movq 0x0(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_453958
L_177750:
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x0(%r14,%r13,1),%r11
	salq $0x4,%r15
	movq 0x8(%r14,%r15,1),%r13
	movl 0x0(%r13),%r14d
	testl %r14d,%r14d
	jnz L_453957
L_177751:
	movl $0x1,0x0(%r13)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_177758
L_177752:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
L_177753:
	movq %r15,%rax
	subq $0x1,%rax
	cmpq $0xC,%rax
	ja L_453613
	leaq jumpTable_598(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_598:
.quad L_453954,L_453952,L_453950,L_177754,L_453947,L_453945,L_453943,L_177754,L_453941,L_453939,L_453937,L_177754,L_453935
.text
.p2align 0x4
L_453613:
L_177754:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x24B8,%rax
	cmpq $0x8A,%rax
	ja L_453614
	leaq jumpTable_599(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_599:
.quad L_453933,L_453931,L_453929,L_453924,L_453919,L_453914,L_453913,L_453912,L_453911,L_453909,L_453907,L_453905,L_453903,L_453898,L_453893,L_453888,L_453887,L_453886,L_453885,L_453884,L_453881,L_453878,L_453875,L_453872,L_453869,L_453866,L_453863,L_453860,L_453859,L_453858,L_453856,L_453854,L_453852,L_453850,L_453848,L_453846,L_453844,L_453842,L_453840,L_453838,L_453836,L_453834,L_453832,L_453830,L_453828,L_453826,L_453824,L_453822,L_453820,L_453818,L_453816,L_453814,L_453812,L_453810,L_453808,L_453806,L_453804,L_453802,L_453800,L_453798,L_453796,L_453794,L_453792,L_453790,L_453788,L_453786,L_453784,L_453782,L_453780,L_453778,L_453777,L_453776,L_453774,L_453772,L_453770,L_453768,L_453766,L_453764,L_453762,L_453760,L_453758,L_453756,L_453754,L_453752,L_453750,L_453748,L_453746,L_453744,L_453742,L_453740,L_453738,L_453736,L_453734,L_453732,L_453730,L_453728,L_453726,L_453724,L_453722,L_453720,L_453718,L_453716,L_453714,L_453712,L_453710,L_453708,L_453706,L_453704,L_453702,L_453700,L_453698,L_453696,L_453693,L_453691,L_453688,L_453685,L_453682,L_453679,L_453676,L_453673,L_453672,L_453671,L_453670,L_453665,L_453660,L_453655,L_453650,L_453648,L_453646,L_453644,L_453643,L_453642,L_453637,L_453632,L_453627,L_453622,L_453620,L_453618,L_453616
.text
.p2align 0x4
L_453614:
L_177755:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_453615
L_177756:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453615:
L_177758:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453616:
L_178324:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178325:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453618:
L_178321:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178322:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453620:
L_178318:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178319:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453622:
L_178307:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453626
L_178308:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_178309:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_453625
L_178310:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453623
L_178311:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_178309
.p2align 0x4
L_453623:
	movq %r14,%r15
	movq %r13,%r14
L_178313:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178314:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453625:
L_177778:
	movq (globalObjptr+0x7E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453626:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_178313
.p2align 0x4
L_453627:
L_178296:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453631
L_178297:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_178298:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_177778
L_178299:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453628
L_178300:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_178298
.p2align 0x4
L_453628:
	movq %r14,%r15
	movq %r13,%r14
L_178302:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178303:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453631:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_178302
.p2align 0x4
L_453632:
L_178285:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453636
L_178286:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_178287:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_177778
L_178288:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453633
L_178289:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_178287
.p2align 0x4
L_453633:
	movq %r14,%r15
	movq %r13,%r14
L_178291:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178292:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453636:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_178291
.p2align 0x4
L_453637:
L_178274:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453641
L_178275:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_178276:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_177778
L_178277:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453638
L_178278:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_178276
.p2align 0x4
L_453638:
	movq %r14,%r15
	movq %r13,%r14
L_178280:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178281:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453641:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_178280
.p2align 0x4
L_453642:
L_178273:
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%rbp
	leaq (L_177803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1187
.p2align 0x4
L_453643:
L_178272:
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%rbp
	leaq (L_177803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1188
.p2align 0x4
L_453644:
L_178269:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178270:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453646:
L_178266:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178267:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453648:
L_178263:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178264:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453650:
L_178252:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453654
L_178253:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_178254:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_177778
L_178255:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453651
L_178256:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_178254
.p2align 0x4
L_453651:
	movq %r14,%r15
	movq %r13,%r14
L_178258:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178259:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453654:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_178258
.p2align 0x4
L_453655:
L_178241:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453659
L_178242:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_178243:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_177778
L_178244:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453656
L_178245:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_178243
.p2align 0x4
L_453656:
	movq %r14,%r15
	movq %r13,%r14
L_178247:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178248:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453659:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_178247
.p2align 0x4
L_453660:
L_178230:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453664
L_178231:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_178232:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_177778
L_178233:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453661
L_178234:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_178232
.p2align 0x4
L_453661:
	movq %r14,%r15
	movq %r13,%r14
L_178236:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178237:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453664:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_178236
.p2align 0x4
L_453665:
L_178219:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453669
L_178220:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_178221:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_177778
L_178222:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453666
L_178223:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_178221
.p2align 0x4
L_453666:
	movq %r14,%r15
	movq %r13,%r14
L_178225:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178226:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453669:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_178225
.p2align 0x4
L_453670:
L_178209:
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_178210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_453671:
L_178199:
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_178200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_453672:
L_178198:
	movq 0x38(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x2(%r15),%r14b
	movb %r14b,0x38(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x39(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x50(%rbp)
	addq $0x10,%rbp
	leaq (L_177803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp diagnoseNonexhaustiveMatch_0
.p2align 0x4
L_453673:
L_178193:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_177778
L_178194:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178195:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453676:
L_178188:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_177778
L_178189:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178190:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453679:
L_178183:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_177778
L_178184:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178185:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453682:
L_178178:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_177778
L_178179:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178180:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453685:
L_178173:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_177778
L_178174:
	movq 0x8(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178175:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453688:
L_178168:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_177778
L_178169:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178170:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453691:
L_178165:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movl $0x0,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178166:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453693:
L_178160:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_177778
L_178161:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178162:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453696:
L_178157:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178158:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453698:
L_178154:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178155:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453700:
L_178151:
	movq 0x0(%r15),%r14
	movb $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178152:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453702:
L_178148:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178149:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453704:
L_178145:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178146:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453706:
L_178142:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178143:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453708:
L_178139:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178140:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453710:
L_178136:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178137:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453712:
L_178133:
	movq 0x0(%r15),%r14
	movb $0x7,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178134:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453714:
L_178130:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178131:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453716:
L_178127:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178128:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453718:
L_178124:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178125:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453720:
L_178121:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178122:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453722:
L_178118:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178119:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453724:
L_178115:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178116:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453726:
L_178112:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178113:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453728:
L_178109:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCBC0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178110:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453730:
L_178106:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178107:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453732:
L_178103:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178104:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453734:
L_178100:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178101:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453736:
L_178097:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178098:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453738:
L_178094:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178095:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453740:
L_178091:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178092:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453742:
L_178088:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x90)(%rip),%r13
	movq %r13,0x0(%r14)
	movl $0x1,0x8(%r14)
	movl $0x1,0xC(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178089:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453744:
L_178085:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178086:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453746:
L_178082:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178083:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453748:
L_178079:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178080:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453750:
L_178076:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178077:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453752:
L_178073:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178074:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453754:
L_178070:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178071:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453756:
L_178067:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178068:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453758:
L_178064:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178065:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453760:
L_178061:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178062:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453762:
L_178058:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178059:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453764:
L_178055:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA98)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178056:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453766:
L_178052:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA78)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178053:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453768:
L_178049:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178050:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453770:
L_178046:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178047:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453772:
L_178043:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178044:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453774:
L_178040:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178041:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453776:
L_178039:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_177803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1190
.p2align 0x4
L_453777:
L_178038:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_177803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1191
.p2align 0x4
L_453778:
L_178035:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178036:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453780:
L_178032:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x80)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178033:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453782:
L_178029:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178030:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453784:
L_178026:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178027:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453786:
L_178023:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA68)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178024:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453788:
L_178020:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA88)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178021:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453790:
L_178017:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCAA8)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178018:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453792:
L_178014:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178015:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453794:
L_178011:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178012:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453796:
L_178008:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178009:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453798:
L_178005:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178006:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453800:
L_178002:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178003:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453802:
L_177999:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178000:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453804:
L_177996:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177997:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453806:
L_177993:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177994:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453808:
L_177990:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177991:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453810:
L_177987:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177988:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453812:
L_177984:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177985:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453814:
L_177981:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x70)(%rip),%r13
	movq %r13,0x0(%r14)
	movl $0x1,0x8(%r14)
	movl $0x1,0xC(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177982:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453816:
L_177978:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xBDB0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177979:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453818:
L_177975:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177976:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453820:
L_177972:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177973:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453822:
L_177969:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177970:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453824:
L_177966:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177967:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453826:
L_177963:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177964:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453828:
L_177960:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCBB0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177961:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453830:
L_177957:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177958:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453832:
L_177954:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177955:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453834:
L_177951:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x60)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177952:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453836:
L_177948:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0x7F0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177949:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453838:
L_177945:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177946:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453840:
L_177942:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177943:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453842:
L_177939:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177940:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453844:
L_177936:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177937:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453846:
L_177933:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177934:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453848:
L_177930:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177931:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453850:
L_177927:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177928:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453852:
L_177924:
	movq 0x0(%r15),%r14
	movb $0x4,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177925:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453854:
L_177921:
	movq 0x0(%r15),%r14
	movb $0x3,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177922:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453856:
L_177918:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177919:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453858:
L_177917:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_177803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1192
.p2align 0x4
L_453859:
L_177916:
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x10,%rbp
	leaq (L_177803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1193
.p2align 0x4
L_453860:
L_177911:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_177778
L_177912:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177913:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453863:
L_177907:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r14d
	decl %r14d
	jo L_453865
L_177908:
	movl %r14d,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177909:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453865:
L_177877:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453866:
L_177901:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
L_177902:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_453868
L_177904:
	movq 0x0(%r11),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177905:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453868:
L_177903:
	movq (globalObjptr+0x560)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453869:
L_177896:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_177778
L_177897:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177898:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453872:
L_177891:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_177778
L_177892:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177893:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453875:
L_177886:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_177778
L_177887:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177888:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453878:
L_177881:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_177778
L_177882:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177883:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453881:
L_177876:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r14d
	decl %r14d
	jo L_177877
L_177878:
	movl %r14d,0x0(%r13)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177879:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453884:
L_177875:
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x10,%rbp
	leaq (L_177803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp diagnoseRedundantMatch_0
.p2align 0x4
L_453885:
L_177874:
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%rbp
	leaq (L_177803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp resolve_0
.p2align 0x4
L_453886:
L_177864:
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_177865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_453887:
L_177854:
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_177855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_453888:
L_177843:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453892
L_177844:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_177845:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_177778
L_177846:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453889
L_177847:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_177845
.p2align 0x4
L_453889:
	movq %r14,%r15
	movq %r13,%r14
L_177849:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177850:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453892:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_177849
.p2align 0x4
L_453893:
L_177832:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453897
L_177833:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_177834:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_177778
L_177835:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453894
L_177836:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_177834
.p2align 0x4
L_453894:
	movq %r14,%r15
	movq %r13,%r14
L_177838:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177839:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453897:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_177838
.p2align 0x4
L_453898:
L_177821:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453902
L_177822:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_177823:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_177778
L_177824:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453899
L_177825:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_177823
.p2align 0x4
L_453899:
	movq %r14,%r15
	movq %r13,%r14
L_177827:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177828:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453902:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_177827
.p2align 0x4
L_453903:
L_177818:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177819:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453905:
L_177815:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177816:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453907:
L_177812:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177813:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453909:
L_177809:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177810:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453911:
L_177808:
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x10,%rbp
	leaq (L_177803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1194
.p2align 0x4
L_453912:
L_177807:
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%rbp
	leaq (L_177803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1195
.p2align 0x4
L_453913:
L_177802:
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%rbp
	leaq (L_177803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1196
.p2align 0x4
L_453914:
L_177791:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453918
L_177792:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_177793:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_177778
L_177794:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453915
L_177795:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_177793
.p2align 0x4
L_453915:
	movq %r14,%r15
	movq %r13,%r14
L_177797:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177798:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453918:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_177797
.p2align 0x4
L_453919:
L_177780:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453923
L_177781:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_177782:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_177778
L_177783:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453920
L_177784:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_177782
.p2align 0x4
L_453920:
	movq %r14,%r15
	movq %r13,%r14
L_177786:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177787:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453923:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_177786
.p2align 0x4
L_453924:
L_177768:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_453928
L_177769:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_177770:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_177778
L_177771:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_453925
L_177772:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_177770
.p2align 0x4
L_453925:
	movq %r14,%r15
	movq %r13,%r14
L_177774:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177775:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453928:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_177774
.p2align 0x4
L_453929:
L_177765:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177766:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453931:
L_177762:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177763:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453933:
L_177759:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177760:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453935:
L_178352:
	movq (globalObjptr+0x838)(%rip),%r14
	movl $0x64,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178353:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453937:
L_178349:
	movq (globalObjptr+0x830)(%rip),%r14
	movl $0x8,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178350:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453939:
.p2align 0x4,,0x7
L_177804:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_177805:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453941:
L_178345:
	movq (globalObjptr+0x828)(%rip),%r14
	movl $0x3C,0x0(%r14)
	movl $0x140,0x4(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178346:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453943:
L_178342:
	movq (globalObjptr+0x820)(%rip),%r14
	movl $0x3,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178343:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453945:
L_178339:
	movq (globalObjptr+0x818)(%rip),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178340:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453947:
L_178336:
	movq (globalObjptr+0x810)(%rip),%r14
	movl $0x2710,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178337:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453950:
L_178333:
	movq (globalObjptr+0x808)(%rip),%r14
	movl $0x0,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178334:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453952:
L_178330:
	movq (globalObjptr+0x800)(%rip),%r14
	movl $0x1,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178331:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453954:
L_178327:
	movq (globalObjptr+0x7F8)(%rip),%r14
	movl $0x64,0x0(%r14)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_177758
L_178328:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_177753
.p2align 0x4
L_453957:
L_178356:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453958:
L_177749:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_177803:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_177804
.p2align 0x4
.long 0x4DD
L_178210:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_178211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4DD
L_178200:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_178201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4DD
L_177865:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_177866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4DD
L_177855:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_177856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x465
L_178211:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178212
L_178217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178218
.p2align 0x4
.long 0x45A
L_178218:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178212:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x465
L_178201:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178202
L_178207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178208
.p2align 0x4
.long 0x45A
L_178208:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178202:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x465
L_177866:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177867
L_177872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_177873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177873
.p2align 0x4
.long 0x45A
L_177873:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_177867:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_177868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x465
L_177856:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177857
L_177862:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_177863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177863
.p2align 0x4
.long 0x45A
L_177863:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_177857:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_177858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x966
L_178213:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178214
L_178215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_178216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178216
.p2align 0x4
.long 0x52C
L_178216:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_178214:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movb $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_177803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x966
L_178203:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178204
L_178205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_178206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178206
.p2align 0x4
.long 0x52C
L_178206:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_178204:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movb $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_177803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x966
L_177868:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177869
L_177870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_177871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177871
.p2align 0x4
.long 0x52C
L_177871:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_177869:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movb $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_177803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x966
L_177858:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_177859
L_177860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_177861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_177861
.p2align 0x4
.long 0x52C
L_177861:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_177859:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movb $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_177803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.text
.p2align 0x4
.globl resolve_0
.hidden resolve_0
resolve_0:
L_178359:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_178360
L_178388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_178389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178389
.p2align 0x4
.long 0x4AE
L_178389:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_178360:
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_178361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
.long 0x51E
L_178361:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_453970
L_178363:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_453969
L_178364:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453969:
L_178365:
	movq (globalObjptr+0xF580)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_178366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_453970:
L_178362:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51E
L_178366:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_178367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x65B
L_178367:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x556
L_178368:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x556
L_178369:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178370
L_178386:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_178387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178387
.p2align 0x4
.long 0x63C
L_178387:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_178370:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_178371:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_178372
L_178373:
	cmpq $0x1,%r14
	je L_453971
L_178374:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_178371
.p2align 0x4
L_453971:
L_178375:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178376
L_178384:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178385
.p2align 0x4
.long 0x56D
L_178385:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178376:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_453973
L_178377:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
L_178378:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_453972
L_178379:
	movl %r13d,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x8,%rbp
	leaq (L_178380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_453972:
L_178372:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453973:
L_178383:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178378
.p2align 0x4
.long 0x1
L_178380:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_453977
L_178381:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453977:
L_178382:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl diagnoseRedundantMatch_0
.hidden diagnoseRedundantMatch_0
diagnoseRedundantMatch_0:
L_178390:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_178391
L_178551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_178552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178552
.p2align 0x4
.long 0x1127
L_178552:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_178391:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x38(%rbp)
	cmpq %rdx,%r14
	jne L_178393
L_178394:
	testq %rdx,%rdx
	jz L_453993
L_178395:
	cmpq $0x7FFFFFFF,%rdx
	ja L_178539
L_178396:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15B7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_178397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178397
.p2align 0x4
.long 0x1128
L_178397:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_178398:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1797:
	cmpq 0x38(%rbp),%r15
	jnl L_453981
L_178541:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x10(%r11),%r14
	movl 0x0(%r11),%r13d
	testl %r13d,%r13d
	jnz L_453980
L_178542:
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_453979
L_178546:
	incl %ecx
	jo L_453978
L_178547:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r11,%r14
L_178545:
	movq 0x40(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_1797
.p2align 0x4
L_453978:
L_178419:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453979:
	movl %ecx,(localWord32+0x0)(%rip)
L_178544:
	movq $0x1,%r14
	jmp L_178545
.p2align 0x4
L_453980:
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_178544
.p2align 0x4
L_453981:
L_178399:
	movq 0x40(%rbp),%r15
	movq $0x1795,0xFFFFFFFFFFFFFFF8(%r15)
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	testq %rdx,%rdx
	jz L_453991
L_178400:
	cmpq $0x7FFFFFFF,%rdx
	ja L_453990
L_178401:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15B9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_178402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178402
.p2align 0x4
.long 0x136A
L_178402:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x38(%rbp)
L_178403:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1798:
	cmpq 0x30(%rbp),%r15
	jnl L_453985
.p2align 0x4,,0x7
loop_1799:
	movslq %ecx,%r14
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_453983
L_178536:
	incl %ecx
	jo L_178419
L_178537:
	jmp loop_1799
.p2align 0x4
L_453983:
L_178534:
	incl %ecx
	jo L_178419
L_178535:
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r10
	movq %r15,%r9
	movq %r15,%r8
	movq 0x8(%r11),%rsp
	movq 0x10(%r11),%rsi
	movq 0x18(%r11),%rdi
	movl 0x0(%r11),%edx
	movq 0x20(%r11),%rbx
	movq 0x38(%rbp),%r11
	movq %r11,%rax
	shrq $0x8,%rax
	movq %r12,(gcState+0x0)(%rip)
	movq (gcState+0x3C8)(%rip),%r12
	movb $0x1,0x0(%r12,%rax,1)
	imulq $0x28,%r14
	movq %rsp,0x8(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r12,%r14,1)
	imulq $0x28,%r13
	movq %rsi,0x10(%r11,%r13,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r12,%r14,1)
	imulq $0x28,%r10
	movq %rdi,0x18(%r11,%r10,1)
	imulq $0x28,%r9
	movl %edx,0x0(%r11,%r9,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r12,%r14,1)
	imulq $0x28,%r8
	movq %rbx,0x20(%r11,%r8,1)
	incq %r15
	movq (gcState+0x0)(%rip),%r12
	jmp loop_1798
.p2align 0x4
L_453985:
L_178404:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178405
L_178531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_178532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178532
.p2align 0x4
.long 0x102E
L_178532:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_178405:
	movq 0x38(%rbp),%r15
	movq $0xAF7,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x2C(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_453988
L_178407:
	testl %r13d,%r13d
	jz L_453987
L_178408:
	cmpb $0x2,0x28(%rbp)
	je L_453986
L_178409:
	movq $0x2B49,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
L_178410:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x4C30)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_178411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_453986:
L_178529:
	movq $0x2B4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
	jmp L_178410
.p2align 0x4
L_453987:
L_178530:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453988:
L_178393:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453990:
L_178539:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_453991:
L_178540:
	movq (globalObjptr+0x4C28)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_178403
.p2align 0x4
L_453993:
L_178550:
	movq (globalObjptr+0x4C20)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_178398
.p2align 0x4
.long 0xEAD
L_178411:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_178412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xEAD
L_178412:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xF588)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_178413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x102D
L_178413:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178414
L_178527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_178528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178528
.p2align 0x4
.long 0x102E
L_178528:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_178414:
	movq $0x3C8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_178415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x4DD
L_178415:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x4DD
L_178416:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178417
L_178525:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_178526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178526
.p2align 0x4
.long 0x1127
L_178526:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_178417:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454010
L_178418:
	decl %ecx
	jo L_178419
L_178420:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
L_178421:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_178422:
	addl 0x0(%r14),%ecx
	movl %ecx,0x20(%rbp)
	jo L_178419
L_178423:
	cmpq $0x1,%r15
	je L_453997
L_178424:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_178422
.p2align 0x4
L_453997:
L_178425:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178426
L_178522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178523
.p2align 0x4
.long 0x644
L_178523:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178426:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454006
L_178427:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
L_178428:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_454005
	cmpq $0x2,%r15
	je L_454004
	cmpq $0x3,%r15
	je L_454003
	cmpq $0x5,%r15
	je L_454002
	cmpq $0x6,%r15
	je L_454001
L_178429:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2544,%r14
	je L_454000
	cmpq $0x2545,%r14
	je L_453999
	cmpq $0x2546,%r14
	je L_453998
L_178430:
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_178431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_453998:
L_178500:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_178501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_453999:
L_178481:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_178482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454000:
L_178476:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_2
.p2align 0x4
L_454001:
L_178520:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_178451:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_178452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_454002:
L_178519:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
	jmp L_178451
.p2align 0x4
L_454003:
L_178518:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
	jmp L_178451
.p2align 0x4
L_454004:
L_178517:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
	jmp L_178451
.p2align 0x4
L_454005:
L_178516:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
	jmp L_178451
.p2align 0x4
L_454006:
L_178521:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178428
.p2align 0x4
L_454010:
L_178524:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178421
.p2align 0x4
.long 0x910
L_178431:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_178432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x10F4
L_178501:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl $0x1,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x10F4
L_178482:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x65C
L_178477:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178478
L_178479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178480
.p2align 0x4
.long 0x810
L_178480:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178478:
	movq 0x8(%rbp),%r15
	movl 0x28(%rbp),%ecx
	jmp L_178451
.p2align 0x4
.long 0x4DC
L_178452:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178453
L_178464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_178465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178465
.p2align 0x4
.long 0x659
L_178465:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_178453:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454016
L_178454:
	decl %ecx
	jo L_178419
L_178455:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
L_178456:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x15A4,%r13
	je L_454014
L_178458:
	movq 0x0(%r15),%r13
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r11d
	incl %r11d
	jo L_178419
L_178459:
	movl %r11d,0x0(%r15)
	movq %r14,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x8,%rbp
	leaq (L_178460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_454014:
L_178457:
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x0(%rbp)
	movq (globalObjptr+0xDD30)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp msg_0
.p2align 0x4
L_454016:
L_178463:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178456
.p2align 0x4
.long 0xE05
L_178432:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_178433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4DD
L_178502:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x4DD
L_178483:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178484
L_178498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_178499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178499
.p2align 0x4
.long 0x5F6
L_178499:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_178484:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x1
L_178460:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_454019
L_178461:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454019:
L_178462:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2475
L_178433:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_178434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x4DD
L_178503:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178504
L_178514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178515
.p2align 0x4
.long 0x4DE
L_178515:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178504:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_178505:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_178419
L_178506:
	cmpq $0x1,%r14
	je L_454020
L_178507:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_178505
.p2align 0x4
L_454020:
L_178508:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178509
L_178512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_178513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178513
.p2align 0x4
.long 0x1CD0
L_178513:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_178509:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454021
L_178510:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_178451
.p2align 0x4
L_454021:
L_178511:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178451
.p2align 0x4
.long 0x4DD
L_178485:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178486
L_178496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178497
.p2align 0x4
.long 0x4DE
L_178497:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178486:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_178487:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_178419
L_178488:
	cmpq $0x1,%r14
	je L_454025
L_178489:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_178487
.p2align 0x4
L_454025:
L_178490:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178491
L_178494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_178495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178495
.p2align 0x4
.long 0x1CD0
L_178495:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_178491:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454026
L_178492:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_178451
.p2align 0x4
L_454026:
L_178493:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178451
.p2align 0x4
.long 0x655
L_178434:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178435
L_178474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_178475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178475
.p2align 0x4
.long 0x657
L_178475:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_178435:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_178436:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_178419
L_178437:
	cmpq $0x1,%r14
	je L_454030
L_178438:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_178436
.p2align 0x4
L_454030:
L_178439:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178440
L_178472:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_178473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178473
.p2align 0x4
.long 0x136A
L_178473:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_178440:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454031
L_178441:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_178442:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
L_454031:
L_178471:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178442
.p2align 0x4
.long 0x4DD
L_178443:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178444
L_178469:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178470
.p2align 0x4
.long 0x4DE
L_178470:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178444:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_178445:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_178419
L_178446:
	cmpq $0x1,%r14
	je L_454035
L_178447:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_178445
.p2align 0x4
L_454035:
L_178448:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178449
L_178467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_178468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178468
.p2align 0x4
.long 0x1CD0
L_178468:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_178449:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454036
L_178450:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_178451
.p2align 0x4
L_454036:
L_178466:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178451
.text
.p2align 0x4
.globl x_1193
.hidden x_1193
x_1193:
L_178553:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_178554
L_178611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_178612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178612
.p2align 0x4
.long 0x45B
L_178612:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_178554:
	movq 0x8(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_454062
L_178556:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_454061
L_178557:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_178559:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_178560
L_178582:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xCDB,%r13
	jne L_178560
L_178583:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpq %r11,0x0(%rbp)
	je L_454048
L_178560:
	incl %ecx
	jo L_454047
L_178562:
	cmpq $0x1,%r14
	je L_454040
L_178563:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_178559
.p2align 0x4
L_454040:
L_178564:
L_178565:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_454046
L_178567:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_178569
L_178581:
	movl %ecx,0x0(%r15)
L_178569:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_454044
L_178572:
	cmpl $0x0,%r13d
	jl L_454043
L_178573:
	movl $0x0,0x1C(%rbp)
loop_1800:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_454041
L_178574:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454041:
L_178575:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2987,%r15
	je L_454042
L_178578:
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_178577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1193
.p2align 0x4
L_454042:
L_178576:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_178577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1192
.p2align 0x4
L_454043:
L_178580:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454044:
L_178571:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454046:
L_178566:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454047:
L_178561:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454048:
L_178585:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_178566
L_178586:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_454057
L_178609:
	movl %ecx,0x0(%r15)
	movq %r13,0x18(%rbp)
L_178588:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_178571
L_178590:
	cmpl $0x0,%r13d
	jl L_178580
L_178591:
	movl $0x0,0x24(%rbp)
.p2align 0x4,,0x7
loop_1801:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454054
.p2align 0x4,,0x7
L_178592:
	movl 0x24(%rbp),%r11d
	cmpl 0x20(%rbp),%r11d
	jnl L_454053
L_178594:
	movslq %r11d,%r15
	movq 0x10(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r14
	movq 0x18(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_454052
L_178596:
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x0(%r11,%r13,1),%r10
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r9
	movl 0x0(%r9),%r8d
	testl %r8d,%r8d
	jnz L_454050
L_178597:
	movq 0x0(%r10),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2987,%r15
	je L_454049
L_178601:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r9
	movq $0x49A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq %r10,%r15
L_178599:
	movq $0x1B55,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
.p2align 0x4,,0x7
L_178600:
	incl 0x24(%rbp)
	jmp loop_1801
.p2align 0x4
L_454049:
L_178598:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r11d
	movq $0x49AB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r10,%r15
	jmp L_178599
.p2align 0x4
L_454050:
L_178602:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2987,%r15
	je L_454051
L_178605:
	movq 0x10(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_178604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1193
.p2align 0x4
L_454051:
L_178603:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_178604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1192
.p2align 0x4
L_454052:
L_178595:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454053:
L_178593:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454054:
L_178606:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_178607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178607
.p2align 0x4
.long 0x45E
L_178607:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_178592
.p2align 0x4
L_454057:
L_178587:
	movq %r13,0x18(%rbp)
	jmp L_178588
.p2align 0x4
L_454061:
L_178610:
	xorl %ecx,%ecx
	jmp L_178565
.p2align 0x4
L_454062:
L_178555:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2476
L_178577:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_1800
.p2align 0x4
.long 0x609
L_178604:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_178600
.text
.p2align 0x4
.globl x_1191
.hidden x_1191
x_1191:
L_178613:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_178614
L_178677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_178678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178678
.p2align 0x4
.long 0x452
L_178678:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_178614:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_178621
L_178615:
	movq 0x8(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_178616:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz L_454069
L_178617:
	movq 0x10(%r14),%r15
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	cmpb $0x1,0x0(%r13)
	jne L_178618
L_178622:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	jne L_454065
.p2align 0x4,,0x7
L_178618:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_454064
L_178619:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_178616
.p2align 0x4
L_454064:
L_178621:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454065:
L_178623:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178624
L_178633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_178634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178634
.p2align 0x4
.long 0x71F
L_178634:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_178624:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x14AE,%r14
	je L_454066
L_178631:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_178632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_454066:
L_178625:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	leaq L_178627(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_178626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_454069:
L_178636:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movb 0x0(%r15),%r13b
	testb %r13b,%r13b
	jz L_178618
L_178637:
	movq 0x10(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r14),%r10
	movq %r10,0x38(%rbp)
	cmpb $0x1,%r13b
	jne L_178638
L_178661:
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	jne L_454077
.p2align 0x4,,0x7
L_178638:
	movq 0x28(%rbp),%r15
	cmpb $0x1,0x0(%r15)
	jne L_178639
L_178653:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x28(%r14),%r13
	movl 0x0(%r13),%r11d
	movq 0x8(%r13),%r10
	movl 0x0(%r10),%r15d
	testl %r15d,%r15d
	jz L_454075
.p2align 0x4,,0x7
L_178639:
	movq 0x28(%rbp),%r13
	movb $0x0,0x0(%r13)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_178618
L_178640:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x14AE,%r15
	je L_454073
L_178651:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
L_178642:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_454071
L_178648:
	movl %r11d,0x0(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_178621
L_178649:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_178616
.p2align 0x4
L_454071:
L_178643:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178644
L_178646:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_178647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178647
.p2align 0x4
.long 0x49D
L_178647:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_178644:
	movq (globalObjptr+0x4D8)(%rip),%r15
L_178645:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x20(%r13),%r11
	movq $0x1419,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq (globalObjptr+0xF598)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1933,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454073:
L_178641:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
	jmp L_178642
.p2align 0x4
L_454075:
L_178654:
	movl $0x1,0x0(%r10)
	movl %r11d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x40(%rbp)
	leaq L_178656(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_178655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_454077:
L_178662:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178663
L_178672:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_178673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178673
.p2align 0x4
.long 0x5EB
L_178673:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_178663:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x14AE,%r14
	je L_454078
L_178670:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	leaq L_178656(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_178671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_454078:
L_178664:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	leaq L_178666(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_178665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
.long 0x48F
L_178632:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_178618
.p2align 0x4
.long 0x519
L_178626:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_178618
.p2align 0x4
.long 0x72E
L_178627:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178628
L_178629:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_178630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178630
.p2align 0x4
.long 0x5E5
L_178630:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_178628:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq $0x1419,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq (globalObjptr+0xF590)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x510
L_178655:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	jmp L_178639
.p2align 0x4
.long 0x72E
L_178656:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178657
L_178658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_178659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178659
.p2align 0x4
.long 0x5E5
L_178659:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_178657:
	movq 0x18(%rbp),%r15
	jmp L_178645
.p2align 0x4
.long 0x510
L_178671:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_178638
.p2align 0x4
.long 0x510
L_178665:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_178638
.p2align 0x4
.long 0x72E
L_178666:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178667
L_178668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_178669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178669
.p2align 0x4
.long 0x5E5
L_178669:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_178667:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x20(%r13),%r15
	movq $0x1419,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq (globalObjptr+0xF590)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x1933,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp L_178645
.text
.p2align 0x4
.globl x_1190
.hidden x_1190
x_1190:
L_178679:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_178680
L_178703:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_178704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178704
.p2align 0x4
.long 0x452
L_178704:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_178680:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_178687
L_178681:
	movq 0x8(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_178682:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq 0x10(%r14),%r13
	movq 0x18(%r14),%r11
	movq 0x0(%r15),%r10
	andq $0x1,%r10
	jz L_178684
L_178688:
	movl 0x0(%r13),%r10d
	movl %r10d,0x0(%r11)
	movq $0x0,0x0(%r15)
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x24B0,%r15
	je L_454089
L_178692:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_454088
L_178684:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_454087
L_178685:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_178682
.p2align 0x4
L_454087:
L_178687:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454088:
L_178693:
	movl $0x1,0x0(%r15)
	movl %r13d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x30(%rbp)
	leaq L_178697(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_178694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_454089:
L_178689:
	movq 0x0(%r14),%r13
	movl $0x1,0x0(%r13)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_178687
L_178690:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_178682
.p2align 0x4
.long 0x519
L_178694:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r14d
	movl %r14d,0x28(%rbp)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_178687
L_178695:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_178682
.p2align 0x4
.long 0x72E
L_178697:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178698
L_178699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_178700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178700
.p2align 0x4
.long 0x5E5
L_178700:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_178698:
	movq 0x20(%rbp),%r15
	movq 0x20(%r15),%r14
	movq $0x1419,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x20,%r12
	movq (globalObjptr+0xE5E0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl diagnoseNonexhaustiveMatch_0
.hidden diagnoseNonexhaustiveMatch_0
diagnoseNonexhaustiveMatch_0:
L_178705:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_178706
L_178908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_178909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178909
.p2align 0x4
.long 0x247B
L_178909:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_178706:
	cmpb $0x2,0x40(%rbp)
	je L_454126
L_178707:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_178709
L_178710:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1802:
	cmpl %ebx,%ecx
	je L_454124
L_178711:
	movslq %ebx,%r14
	movq %r14,0x40(%rbp)
	cmpq %r15,%r14
	jnb L_178713
L_178714:
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x10(%r11),%r10
	movl 0x0(%r11),%r9d
	testl %r9d,%r9d
	jz L_178716
L_178719:
	cmpl $0x0,0x0(%r10)
	jg L_454097
L_178716:
	incl %ebx
	jo L_454096
L_178718:
	jmp loop_1802
.p2align 0x4
L_454096:
L_178717:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454097:
L_178721:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178722
L_178904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_178905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178905
.p2align 0x4
.long 0x247A
L_178905:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_178722:
	movq 0x30(%rbp),%rdx
	movq 0x0(%rdx),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_454120
L_178723:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %r14,%rdx
	jne L_178709
L_178725:
	testq %rdx,%rdx
	jz L_454118
L_178726:
	cmpq $0x7FFFFFFF,%rdx
	ja L_178876
L_178727:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15B3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_178728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178728
.p2align 0x4
.long 0x2477
L_178728:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_178729:
	movq $0x0,0x50(%rbp)
.p2align 0x4,,0x7
loop_1803:
	movq 0x50(%rbp),%r14
	cmpq 0x30(%rbp),%r14
	jnl L_454105
L_178883:
	movl %r14d,%ecx
	movslq %ecx,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	cmpq $0x1,%r11
	je L_454104
L_178884:
	movq 0x8(%r11),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_178885:
	incl %ecx
	jo L_178717
L_178886:
	cmpq $0x1,%r15
	je L_454098
L_178887:
	movq 0x8(%r15),%r15
	jmp L_178885
.p2align 0x4
L_454098:
L_178888:
L_178889:
	movslq %ecx,%r14
	movq %r14,0x60(%rbp)
	testq %r14,%r14
	jnz L_454101
L_178899:
	movq (globalObjptr+0x4C00)(%rip),%r15
.p2align 0x4,,0x7
L_178893:
	movq 0x58(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1805:
	cmpq 0x60(%rbp),%r14
	jnl L_454100
L_178895:
	cmpq $0x1,%r13
	je L_454099
L_178896:
	movq %r14,%r11
	movq %r14,%r10
	movq 0x0(%r13),%r9
	movq 0x8(%r13),%r13
	movq 0x8(%r9),%r8
	salq $0x4,%r11
	movl 0x0(%r9),%esp
	movl %esp,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	salq $0x4,%r10
	movq %r8,0x8(%r15,%r10,1)
	incq %r14
	jmp loop_1805
.p2align 0x4
L_454099:
L_178897:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454100:
L_178894:
	movq $0xC6D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x50(%rbp)
	jmp loop_1803
.p2align 0x4
L_454101:
L_178890:
	movq 0x60(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_454102
L_178891:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15B5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_178892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178892
.p2align 0x4
.long 0x2479
L_178892:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,%r15
	jmp L_178893
.p2align 0x4
L_454102:
L_178876:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454104:
L_178900:
	xorl %ecx,%ecx
	jmp L_178889
.p2align 0x4
L_454105:
L_178730:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178731
L_178881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_178882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178882
.p2align 0x4
.long 0x1117
L_178882:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_178731:
	movq 0x48(%rbp),%r15
	movq $0x1793,0xFFFFFFFFFFFFFFF8(%r15)
L_178732:
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_454115
L_178734:
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x30(%rbp)
	movb 0x29(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_454113
L_178735:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x38(%rbp)
	cmpq %rdx,%r15
	jne L_454112
L_178737:
	testq %rdx,%rdx
	jz L_454111
L_178738:
	cmpq $0x7FFFFFFF,%rdx
	ja L_178876
L_178739:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15A7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_178740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178740
.p2align 0x4
.long 0x1128
L_178740:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_178741:
	movl $0x0,0x2C(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1804:
	cmpq 0x38(%rbp),%r15
	jnl L_454108
L_178870:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq %r14,%r13
	salq $0x4,%r13
	salq $0x4,%r14
	movq 0x30(%rbp),%r11
	movq 0x8(%r11,%r14,1),%r10
	movl 0x0(%r11,%r13,1),%r9d
	testl %r9d,%r9d
	jnz L_454107
L_178871:
	movl 0x2C(%rbp),%ecx
	incl %ecx
	jo L_178717
	movq %r10,%r14
L_178873:
	movl %ecx,0x2C(%rbp)
	movq 0x40(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_1804
.p2align 0x4
L_454107:
L_178874:
	movl 0x2C(%rbp),%ecx
	movq $0x1,%r14
	jmp L_178873
.p2align 0x4
L_454108:
L_178742:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178743
L_178868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_178869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178869
.p2align 0x4
.long 0x136A
L_178869:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_178743:
	movq 0x40(%rbp),%r15
	movq $0xC71,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xC73,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x3705,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_178744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_15
.p2align 0x4
L_454111:
L_178877:
	movq (globalObjptr+0x4C10)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_178741
.p2align 0x4
L_454112:
L_178709:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454113:
L_178878:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_178709
L_178880:
	movl %r14d,0x40(%rbp)
	movq $0x3715,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_178744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_15
.p2align 0x4
L_454115:
L_178713:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454118:
L_178902:
	movq (globalObjptr+0x4BF8)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_178729
.p2align 0x4
L_454120:
L_178903:
	movq (globalObjptr+0x4C08)(%rip),%r14
	movq $0x1793,0xFFFFFFFFFFFFFFF8(%r14)
	xchgq %r14,%r15
	jmp L_178732
.p2align 0x4
L_454124:
L_178906:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454126:
L_178907:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1126
L_178744:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178745
L_178866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_178867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178867
.p2align 0x4
.long 0x1127
L_178867:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_178745:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x2C(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_178709
L_178747:
	testl %r13d,%r13d
	jz L_454129
L_178748:
	cmpb $0x2,0x28(%rbp)
	je L_454128
L_178749:
	movq $0x2B49,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
L_178750:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x4C18)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_178751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_454128:
L_178864:
	movq $0x2B4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
	jmp L_178750
.p2align 0x4
L_454129:
L_178865:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x577
L_178751:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_178752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x577
L_178752:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xF5A0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_178753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2478
L_178753:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178754
L_178862:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_178863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178863
.p2align 0x4
.long 0x1127
L_178863:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_178754:
	movq $0x3BE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_178755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x4DD
L_178755:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xDF80)(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_178756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp alignPrefix_0
.p2align 0x4
.long 0x4DD
L_178756:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178757
L_178860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_178861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178861
.p2align 0x4
.long 0x5F6
L_178861:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_178757:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_178758:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_178717
L_178759:
	cmpq $0x1,%r14
	je L_454133
L_178760:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_178758
.p2align 0x4
L_454133:
L_178761:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178762
L_178858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_178859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178859
.p2align 0x4
.long 0x8E5
L_178859:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_178762:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454142
L_178763:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_178764:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_454141
	cmpq $0x2,%r15
	je L_454140
	cmpq $0x3,%r15
	je L_454139
	cmpq $0x5,%r15
	je L_454138
	cmpq $0x6,%r15
	je L_454137
L_178765:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2544,%r14
	je L_454136
	cmpq $0x2545,%r14
	je L_454135
	cmpq $0x2546,%r14
	je L_454134
L_178766:
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_178767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454134:
L_178836:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_178837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454135:
L_178817:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_178818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454136:
L_178812:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_2
.p2align 0x4
L_454137:
L_178856:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_178787:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_178788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_454138:
L_178855:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
	jmp L_178787
.p2align 0x4
L_454139:
L_178854:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
	jmp L_178787
.p2align 0x4
L_454140:
L_178853:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
	jmp L_178787
.p2align 0x4
L_454141:
L_178852:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
	jmp L_178787
.p2align 0x4
L_454142:
L_178857:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178764
.p2align 0x4
.long 0x910
L_178767:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_178768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x10F4
L_178837:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl $0x1,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x10F4
L_178818:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x65C
L_178813:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178814
L_178815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178816
.p2align 0x4
.long 0x810
L_178816:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178814:
	movq 0x8(%rbp),%r15
	movl 0x28(%rbp),%ecx
	jmp L_178787
.p2align 0x4
.long 0x4DC
L_178788:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178789
L_178800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_178801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178801
.p2align 0x4
.long 0x659
L_178801:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_178789:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454150
L_178790:
	decl %ecx
	jo L_178717
L_178791:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
L_178792:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x15A4,%r13
	je L_454148
L_178794:
	movq 0x0(%r15),%r13
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r11d
	incl %r11d
	jo L_178717
L_178795:
	movl %r11d,0x0(%r15)
	movq %r14,0x8(%rbp)
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x8,%rbp
	leaq (L_178796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_454148:
L_178793:
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x0(%rbp)
	movq (globalObjptr+0xDD30)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp msg_0
.p2align 0x4
L_454150:
L_178799:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178792
.p2align 0x4
.long 0xE05
L_178768:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_178769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4DD
L_178838:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x4DD
L_178819:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178820
L_178834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_178835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178835
.p2align 0x4
.long 0x5F6
L_178835:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_178820:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x1
L_178796:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_454153
L_178797:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454153:
L_178798:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2475
L_178769:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl $0x1,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_178770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x4DD
L_178839:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178840
L_178850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178851
.p2align 0x4
.long 0x4DE
L_178851:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178840:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_178841:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_178717
L_178842:
	cmpq $0x1,%r14
	je L_454154
L_178843:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_178841
.p2align 0x4
L_454154:
L_178844:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178845
L_178848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_178849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178849
.p2align 0x4
.long 0x1CD0
L_178849:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_178845:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454155
L_178846:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_178787
.p2align 0x4
L_454155:
L_178847:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178787
.p2align 0x4
.long 0x4DD
L_178821:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178822
L_178832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178833
.p2align 0x4
.long 0x4DE
L_178833:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178822:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_178823:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_178717
L_178824:
	cmpq $0x1,%r14
	je L_454159
L_178825:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_178823
.p2align 0x4
L_454159:
L_178826:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178827
L_178830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_178831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178831
.p2align 0x4
.long 0x1CD0
L_178831:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_178827:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454160
L_178828:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_178787
.p2align 0x4
L_454160:
L_178829:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178787
.p2align 0x4
.long 0x655
L_178770:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178771
L_178810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_178811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178811
.p2align 0x4
.long 0x657
L_178811:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_178771:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_178772:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_178717
L_178773:
	cmpq $0x1,%r14
	je L_454164
L_178774:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_178772
.p2align 0x4
L_454164:
L_178775:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178776
L_178808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_178809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178809
.p2align 0x4
.long 0x136A
L_178809:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_178776:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454165
L_178777:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_178778:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
L_454165:
L_178807:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178778
.p2align 0x4
.long 0x4DD
L_178779:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178780
L_178805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178806
.p2align 0x4
.long 0x4DE
L_178806:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178780:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_178781:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_178717
L_178782:
	cmpq $0x1,%r14
	je L_454169
L_178783:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_178781
.p2align 0x4
L_454169:
L_178784:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178785
L_178803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_178804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178804
.p2align 0x4
.long 0x1CD0
L_178804:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_178785:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454170
L_178786:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_178787
.p2align 0x4
L_454170:
L_178802:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178787
.text
.p2align 0x4
.globl x_1188
.hidden x_1188
x_1188:
L_178910:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_178911
L_178994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_178995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178995
.p2align 0x4
.long 0xBEC
L_178995:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_178911:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xC(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_454177
L_178914:
	cmpl $0x0,%r13d
	jl L_454176
L_178915:
	movl $0x0,0x30(%rbp)
.p2align 0x4,,0x7
loop_1806:
	movl 0x30(%rbp),%r15d
	cmpl 0xC(%rbp),%r15d
	jnl L_454175
L_178917:
	movslq %r15d,%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpl %r15d,0x8(%rbp)
	jne L_454174
.p2align 0x4,,0x7
L_178966:
	incl 0x30(%rbp)
	jmp loop_1806
.p2align 0x4
L_454174:
L_178918:
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_178919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_454175:
L_178916:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454176:
L_178993:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454177:
L_178913:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xBDD
L_178919:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	movq %r15,%r13
	shrq $0x1,%r13
	cmpq $0x1448,%r13
	jne L_454185
L_178921:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_178922:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_178923
L_178984:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE78,%r15
	jne L_178923
L_178985:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_178923
L_178987:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_178913
L_178989:
	testl %r11d,%r11d
	jz L_178966
L_178923:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq %r14,0x38(%rbp)
	jb L_454179
L_178924:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454179:
L_178925:
	movq 0x10(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xEC20)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_178926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454185:
L_178920:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xBDE
L_178926:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xE2B8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_178927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xBDF
L_178927:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_178928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xBE0
L_178928:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_178929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0xBE1
L_178929:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_178930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xBE2
L_178930:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178931
L_178982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_178983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178983
.p2align 0x4
.long 0xBEB
L_178983:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_178931:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_178932:
	addl 0x0(%r15),%ecx
	movl %ecx,0x34(%rbp)
	jo L_178933
L_178934:
	cmpq $0x1,%r14
	je L_454186
L_178935:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_178932
.p2align 0x4
L_454186:
L_178936:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178937
L_178980:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_178981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178981
.p2align 0x4
.long 0xBEA
L_178981:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_178937:
	movl 0x34(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454191
L_178938:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_178939:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_178940:
	addl 0x0(%r14),%ecx
	movl %ecx,0x34(%rbp)
	jo L_454190
L_178941:
	cmpq $0x1,%r15
	je L_454187
L_178942:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_178940
.p2align 0x4
L_454187:
L_178943:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178944
L_178977:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_178978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178978
.p2align 0x4
.long 0xBE9
L_178978:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_178944:
	movl 0x34(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454188
L_178945:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_178946:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_178947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454188:
L_178976:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178946
.p2align 0x4
L_454190:
L_178933:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454191:
L_178979:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178939
.p2align 0x4
.long 0xBDF
L_178947:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl $0x1,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_178948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0xBE3
L_178948:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_178949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0xBE3
L_178949:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178950
L_178974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_178975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178975
.p2align 0x4
.long 0xBE8
L_178975:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_178950:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_178951:
	addl 0x0(%r15),%ecx
	movl %ecx,0x34(%rbp)
	jo L_178933
L_178952:
	cmpq $0x1,%r14
	je L_454195
L_178953:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_178951
.p2align 0x4
L_454195:
L_178954:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178955
L_178972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_178973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178973
.p2align 0x4
.long 0xBE7
L_178973:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_178955:
	movl 0x34(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454196
L_178956:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_178957:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_178958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_454196:
L_178971:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178957
.p2align 0x4
.long 0xBE4
L_178958:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_178959
L_178969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_178970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_178970
.p2align 0x4
.long 0xBE6
L_178970:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_178959:
	movl 0x34(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454202
L_178960:
	decl %ecx
	jo L_178933
L_178961:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
L_178962:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_178933
L_178963:
	movl %r13d,0x0(%r15)
	movq %r14,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x40,%rbp
	leaq (L_178964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_454202:
L_178968:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_178962
.p2align 0x4
.long 0xBE5
L_178964:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_178966
L_178967:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1187
.hidden x_1187
x_1187:
L_178996:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_178997
L_179044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_179045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179045
.p2align 0x4
.long 0x4AE
L_179045:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_178997:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_178998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x4A5
L_178998:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	movq %r15,%r13
	shrq $0x1,%r13
	cmpq $0x1448,%r13
	jne L_454211
L_179000:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_179001:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_179002
L_179036:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE78,%r15
	jne L_179002
L_179037:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_179002
L_179039:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_454207
L_179041:
	testl %r11d,%r11d
	jnz L_454206
L_179043:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454206:
L_179002:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq (globalObjptr+0xDD18)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_179003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454207:
L_179040:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454211:
L_178999:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A6
L_179003:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDD20)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_179004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A7
L_179004:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_179005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A8
L_179005:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_179006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x4A9
L_179006:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_179007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AA
L_179007:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179008
L_179034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_179035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179035
.p2align 0x4
.long 0x4AD
L_179035:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_179008:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179009:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_179010
L_179011:
	cmpq $0x1,%r14
	je L_454212
L_179012:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179009
.p2align 0x4
L_454212:
L_179013:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179014
L_179032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_179033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179033
.p2align 0x4
.long 0x4AC
L_179033:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_179014:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454218
L_179015:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_179016:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179017:
	addl 0x0(%r14),%ecx
	movl %ecx,0x38(%rbp)
	jo L_179010
L_179018:
	cmpq $0x1,%r15
	je L_454213
L_179019:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_179017
.p2align 0x4
L_454213:
L_179020:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179021
L_179029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179030
.p2align 0x4
.long 0x4AB
L_179030:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_179021:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454215
L_179022:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_179023:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_454214
L_179024:
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x8,%rbp
	leaq (L_179025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_454214:
L_179010:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454215:
L_179028:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179023
.p2align 0x4
L_454218:
L_179031:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_179016
.p2align 0x4
.long 0x1
L_179025:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_454222
L_179026:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454222:
L_179027:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl foreach_1
.hidden foreach_1
foreach_1:
L_179046:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_179047
L_179744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_179745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179745
.p2align 0x4
.long 0x45F
L_179745:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_179047:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_179049
L_179050:
	cmpl $0x0,%r13d
	jl L_179153
L_179051:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_1807:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454364
.p2align 0x4,,0x7
L_179052:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_454363
L_179054:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x18(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_454359
L_179055:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x19B4,%rax
	cmpq $0xA,%rax
	ja L_454223
	leaq jumpTable_600(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_600:
.quad L_454341,L_454340,L_454322,L_454315,L_454313,L_454306,L_454247,L_454246,L_454245,L_454226,L_454225
.text
.p2align 0x4
L_454223:
L_179056:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_454224
L_179094:
	movq %r11,0x68(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_179095+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_454224:
L_179057:
L_179058:
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_179059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454225:
L_179625:
	movq 0x0(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x68,%rbp
	leaq (L_179626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_454226:
L_179567:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq %r9,0x30(%rbp)
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_454244
L_179568:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_454243
L_179569:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_179571:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_454242
L_179617:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA0,%r11
	jne L_454241
L_179618:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_454238
L_179572:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_454237
L_179573:
	cmpq $0x1,%r15
	je L_454227
L_179574:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_179571
.p2align 0x4
L_454227:
L_179575:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454236
.p2align 0x4,,0x7
L_179576:
	movl 0x18(%rbp),%ecx
L_179577:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_454235
L_179578:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_179580
L_179614:
	movl %ecx,0x0(%r15)
L_179580:
	movq $0x2741,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x74B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1941,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r14,0x18(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_179581:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_179049
L_179583:
	cmpl $0x0,%r13d
	jl L_179153
L_179584:
	movl $0x0,0x34(%rbp)
loop_1819:
	movl 0x34(%rbp),%r15d
	cmpl 0x30(%rbp),%r15d
	jnl L_454231
L_179586:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x40(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_454230
L_179588:
	cmpl $0x0,%r14d
	jl L_454229
L_179589:
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_1820:
	movl 0x40(%rbp),%r15d
	cmpl %r15d,0x44(%rbp)
	jl L_454228
L_179590:
	incl 0x34(%rbp)
	jmp loop_1819
.p2align 0x4
L_454228:
L_179591:
	movslq 0x44(%rbp),%r15
	salq $0x4,%r15
	movq 0x38(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_179592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_57
.p2align 0x4
L_454229:
L_179153:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454230:
L_179049:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454231:
.p2align 0x4,,0x7
L_179083:
	incl 0x14(%rbp)
	jmp loop_1807
.p2align 0x4
L_454235:
L_179114:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454236:
L_179615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179616
.p2align 0x4
.long 0xF85
L_179616:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_179576
.p2align 0x4
L_454237:
L_179075:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454238:
L_179620:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179621:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_454239
L_179623:
	movl %ecx,0x0(%r15)
	movq %r11,0x18(%rbp)
	jmp L_179581
.p2align 0x4
L_454239:
L_179622:
	movq %r11,0x18(%rbp)
	jmp L_179581
.p2align 0x4
L_454241:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_179572
.p2align 0x4
L_454242:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_179572
.p2align 0x4
L_454243:
L_179624:
	xorl %ecx,%ecx
	jmp L_179577
.p2align 0x4
L_454244:
L_179103:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454245:
L_179536:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq $0x45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x40(%rbp)
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq %r13,0x8(%r11)
	movq 0x0(%r14),%r15
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_179537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_454246:
L_179490:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq $0x1E4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_179491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_454247:
L_179329:
	movq 0x0(%rbp),%r13
	movq 0x38(%r13),%r15
	movq 0x30(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x28(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x20(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x20(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movl %r10d,0x60(%rbp)
	movslq %r10d,%r14
	cmpq %r11,%r14
	jne L_179049
L_179331:
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_179103
L_179332:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_454303
L_179333:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x64(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_179335:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_454302
L_179479:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD39,%r11
	jne L_454301
L_179480:
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_454297
L_179336:
	movl 0x64(%rbp),%r11d
	incl %r11d
	movl %r11d,0x78(%rbp)
	jo L_179075
L_179337:
	cmpq $0x1,%r15
	je L_454248
L_179338:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x64(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_179335
.p2align 0x4
L_454248:
L_179339:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454295
.p2align 0x4,,0x7
L_179340:
	movl 0x78(%rbp),%ecx
L_179341:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179342:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_179344
L_179476:
	movl %ecx,0x0(%r15)
L_179344:
	movq $0x1381,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq $0x1A73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_179345:
	movq 0x0(%r15),%r14
	andq $0x1,%r14
	jnz L_454291
L_179367:
	movl 0x60(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_179103
L_179368:
	movq %r15,0x0(%r13)
	movq 0x70(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_454289
L_179369:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_179371:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_179372
L_179467:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD39,%r13
	jne L_179372
L_179468:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x30(%rbp)
	je L_454284
L_179372:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_179075
L_179373:
	cmpq $0x1,%r15
	je L_454249
L_179374:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_179371
.p2align 0x4
L_454249:
L_179375:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454282
.p2align 0x4,,0x7
L_179376:
	movl 0x28(%rbp),%ecx
L_179377:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179378:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_179380
L_179464:
	movl %ecx,0x0(%r15)
L_179380:
	movq $0x1381,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1A73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_179381:
	cmpl $0x0,0x60(%rbp)
	jl L_179153
L_179382:
	movl $0x0,0x18(%rbp)
loop_1816:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454278
.p2align 0x4,,0x7
L_179383:
	movl 0x18(%rbp),%r11d
	cmpl 0x60(%rbp),%r11d
	jnl L_179083
L_179385:
	movslq %r11d,%r15
	salq $0x4,%r15
	movq 0x20(%rbp),%r11
	movq 0x0(%r11,%r15,1),%r10
	movq %r10,0x28(%rbp)
	movq 0x40(%rbp),%r11
	movq 0x8(%r11),%r9
	movq %r9,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq 0x10(%r10),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_179103
L_179386:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_454275
L_179387:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x1C(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_179389:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_454274
L_179450:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA4,%r11
	jne L_454273
L_179451:
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_454269
L_179390:
	movl 0x1C(%rbp),%r11d
	incl %r11d
	movl %r11d,0x64(%rbp)
	jo L_179075
L_179391:
	cmpq $0x1,%r15
	je L_454250
L_179392:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x1C(%rbp)
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_179389
.p2align 0x4
L_454250:
L_179393:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454267
.p2align 0x4,,0x7
L_179394:
	movl 0x64(%rbp),%ecx
L_179395:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179396:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_179398
L_179447:
	movl %ecx,0x0(%r15)
L_179398:
	movq $0x1413,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1949,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_571:
	cmpb $0x2,0x0(%r15)
	jne L_454263
L_179420:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_179103
L_179421:
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_454261
L_179422:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_179424:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_179425
L_179438:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCA4,%r13
	jne L_179425
L_179439:
	movq 0x8(%r14),%r13
	movq 0x50(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_454256
L_179425:
	incl %ecx
	movl %ecx,0x1C(%rbp)
	jo L_179075
L_179426:
	cmpq $0x1,%r15
	je L_454251
L_179427:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_179424
.p2align 0x4
L_454251:
L_179428:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454254
.p2align 0x4,,0x7
L_179429:
	movl 0x1C(%rbp),%ecx
L_179430:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179431:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_179433
L_179435:
	movl %ecx,0x0(%r15)
L_179433:
	movq $0x1413,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1949,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_179434:
	incl 0x18(%rbp)
	jmp loop_1816
.p2align 0x4
L_454254:
L_179436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_179437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179437
.p2align 0x4
.long 0x2485
L_179437:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_179429
.p2align 0x4
L_454256:
L_179441:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179442:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_454257
L_179445:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_179444:
	movb $0x1,0x0(%r15)
	jmp L_179434
.p2align 0x4
L_454257:
L_179443:
	movq %r13,%r15
	jmp L_179444
.p2align 0x4
L_454261:
L_179446:
	xorl %ecx,%ecx
	jmp L_179430
.p2align 0x4
L_454263:
L_179399:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_454264
L_179418:
	movq %r11,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_179419+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_454264:
L_179400:
L_179401:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454267:
L_179448:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_179449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179449
.p2align 0x4
.long 0xF19
L_179449:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_179394
.p2align 0x4
L_454269:
L_179453:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454272
.p2align 0x4,,0x7
L_179454:
	movl 0x1C(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_179114
L_179455:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_454270
L_179456:
	movq 0x68(%rbp),%r15
	jmp x_571
.p2align 0x4
L_454270:
L_179457:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x1C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x68(%rbp),%r15
	jmp x_571
.p2align 0x4
L_454272:
L_179458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_179459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179459
.p2align 0x4
.long 0x146D
L_179459:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_179454
.p2align 0x4
L_454273:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_179390
.p2align 0x4
L_454274:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_179390
.p2align 0x4
L_454275:
L_179460:
	xorl %ecx,%ecx
	jmp L_179395
.p2align 0x4
L_454278:
L_179461:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_179462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179462
.p2align 0x4
.long 0x2486
L_179462:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_179383
.p2align 0x4
L_454282:
L_179465:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_179466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179466
.p2align 0x4
.long 0x1D91
L_179466:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_179376
.p2align 0x4
L_454284:
L_179470:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179471:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_454285
L_179474:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_179473:
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_179381
.p2align 0x4
L_454285:
L_179472:
	movq %r13,%r15
	jmp L_179473
.p2align 0x4
L_454289:
L_179475:
	xorl %ecx,%ecx
	jmp L_179377
.p2align 0x4
L_454291:
L_179346:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_454292
L_179365:
	movq %r11,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_179366+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_454292:
L_179347:
L_179348:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454295:
L_179477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_179478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179478
.p2align 0x4
.long 0x1D93
L_179478:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_179340
.p2align 0x4
L_454297:
L_179482:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454300
.p2align 0x4,,0x7
L_179483:
	movl 0x64(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_179114
L_179484:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_454298
L_179485:
	movq 0x78(%rbp),%r15
	jmp L_179345
.p2align 0x4
L_454298:
L_179486:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x64(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x78(%rbp),%r15
	jmp L_179345
.p2align 0x4
L_454300:
L_179487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_179488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179488
.p2align 0x4
.long 0x15F0
L_179488:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_179483
.p2align 0x4
L_454301:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_179336
.p2align 0x4
L_454302:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_179336
.p2align 0x4
L_454303:
L_179489:
	xorl %ecx,%ecx
	jmp L_179341
.p2align 0x4
L_454306:
L_179315:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq $0xB5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	addq $0x28,%r12
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_179049
L_179317:
	cmpl $0x0,%r13d
	jl L_179153
L_179318:
	movl $0x0,0x2C(%rbp)
loop_1814:
	movl 0x2C(%rbp),%r15d
	cmpl 0x28(%rbp),%r15d
	jnl L_179083
L_179320:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x38(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_179049
L_179322:
	cmpl $0x0,%r14d
	jl L_179153
L_179323:
	movl $0x0,0x3C(%rbp)
.p2align 0x4,,0x7
loop_1815:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x3C(%rbp)
	jl L_454307
L_179324:
	incl 0x2C(%rbp)
	jmp loop_1814
.p2align 0x4
L_454307:
L_179325:
	movslq 0x3C(%rbp),%r15
	salq $0x4,%r15
	movq 0x30(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_179326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_49
.p2align 0x4
L_454313:
L_179288:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_454314
L_179313:
	movq %r11,0x60(%rbp)
	movq %r13,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_179314+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_454314:
L_179289:
L_179290:
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_179291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454315:
L_179274:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movq 0x0(%r15),%r9
	movq $0xD5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	addq $0x30,%r12
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_179049
L_179276:
	cmpl $0x0,%r13d
	jl L_179153
L_179277:
	movl $0x0,0x2C(%rbp)
loop_1812:
	movl 0x2C(%rbp),%r15d
	cmpl 0x28(%rbp),%r15d
	jnl L_179083
L_179279:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x38(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_179049
L_179281:
	cmpl $0x0,%r14d
	jl L_179153
L_179282:
	movl $0x0,0x3C(%rbp)
.p2align 0x4,,0x7
loop_1813:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x3C(%rbp)
	jl L_454316
L_179283:
	incl 0x2C(%rbp)
	jmp loop_1812
.p2align 0x4
L_454316:
L_179284:
	movslq 0x3C(%rbp),%r15
	salq $0x4,%r15
	movq 0x30(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_179285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_48
.p2align 0x4
L_454322:
L_179219:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_179049
L_179221:
	cmpl $0x0,%r13d
	jl L_179153
L_179222:
	movl $0x0,0x3C(%rbp)
.p2align 0x4,,0x7
loop_1811:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454337
.p2align 0x4,,0x7
L_179223:
	movl 0x3C(%rbp),%r13d
	cmpl 0x38(%rbp),%r13d
	jnl L_179083
L_179225:
	movslq %r13d,%r15
	salq $0x4,%r15
	movq 0x18(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_179103
L_179226:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_454334
L_179227:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_179229:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_179230
L_179263:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD42,%r13
	jne L_179230
L_179264:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x40(%rbp)
	je L_454329
L_179230:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_179075
L_179231:
	cmpq $0x1,%r15
	je L_454323
L_179232:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_179229
.p2align 0x4
L_454323:
L_179233:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179234
L_179261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_179262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179262
.p2align 0x4
.long 0x2480
L_179262:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_179234:
	movl 0x50(%rbp),%ecx
L_179235:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179236:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_179238
L_179260:
	movl %ecx,0x0(%r15)
L_179238:
	movq $0x1371,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1A85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_567:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_454324
L_179239:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_179240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454324:
L_179256:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (x_569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454329:
L_179266:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179267:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_454330
L_179269:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp x_567
.p2align 0x4
L_454330:
L_179268:
	movq %r13,%r15
	jmp x_567
.p2align 0x4
L_454334:
L_179270:
	xorl %ecx,%ecx
	jmp L_179235
.p2align 0x4
L_454337:
L_179271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179272
.p2align 0x4
.long 0xF30
L_179272:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_179223
.p2align 0x4
L_454340:
L_179154:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	movq %r13,0x8(%r15)
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_179155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_454341:
L_179096:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_179049
L_179098:
	cmpl $0x0,%r13d
	jl L_179153
L_179099:
	movl $0x0,0x3C(%rbp)
.p2align 0x4,,0x7
loop_1808:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454356
.p2align 0x4,,0x7
L_179100:
	movl 0x3C(%rbp),%r13d
	cmpl 0x38(%rbp),%r13d
	jnl L_179083
L_179102:
	movslq %r13d,%r15
	salq $0x4,%r15
	movq 0x18(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_179103
L_179104:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_454353
L_179105:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_179107:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_179108
L_179142:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD48,%r13
	jne L_179108
L_179143:
	movq 0x8(%r14),%r13
	movq 0x40(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_454348
L_179108:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_179075
L_179109:
	cmpq $0x1,%r15
	je L_454342
L_179110:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_179107
.p2align 0x4
L_454342:
L_179111:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179112
L_179140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_179141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179141
.p2align 0x4
.long 0x2480
L_179141:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_179112:
	movl 0x50(%rbp),%ecx
L_179113:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179115:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_179117
L_179139:
	movl %ecx,0x0(%r15)
L_179117:
	movq $0x136B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1A91,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_564:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_454343
L_179118:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_179119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454343:
L_179135:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (x_566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454348:
L_179145:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179146:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_454349
L_179148:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp x_564
.p2align 0x4
L_454349:
L_179147:
	movq %r13,%r15
	jmp x_564
.p2align 0x4
L_454353:
L_179149:
	xorl %ecx,%ecx
	jmp L_179113
.p2align 0x4
L_454356:
L_179150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179151
.p2align 0x4
.long 0xF30
L_179151:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_179100
.p2align 0x4
L_454359:
L_179734:
	movq 0x18(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r13)
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r13
	jne L_179049
L_179736:
	cmpl $0x0,%ecx
	jl L_179153
L_179737:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1824:
	cmpl %ecx,%ebx
	jnl L_179083
L_179739:
	movslq %ebx,%r15
	salq $0x4,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq 0x10(%r13),%r11
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r11)
	incl %ebx
	jmp loop_1824
.p2align 0x4
L_454363:
L_179053:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454364:
L_179741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_179742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179742
.p2align 0x4
.long 0x45D
L_179742:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_179052
.p2align 0x4
.long 0x549
L_179095:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_179058
.p2align 0x4
.long 0x587
L_179059:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_179060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x549
L_179626:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179627
L_179732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_179733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179733
.p2align 0x4
.long 0x2496
L_179733:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_179627:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x60(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xF3E8)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1,0x78(%rbp)
	movl $0x0,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_179628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_7
.p2align 0x4
.long 0x2489
L_179592:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179593
L_179610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_179611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179611
.p2align 0x4
.long 0x248A
L_179611:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_179593:
	movq 0x48(%rbp),%r15
	movq 0x18(%rbp),%r13
	cmpq %r13,%r15
	je L_179600
L_179594:
	movq 0x8(%r15),%r14
	movq 0x8(%r13),%r15
	cmpq $0x1,%r14
	je L_454371
L_179595:
	cmpq $0x1,%r15
	je L_179600
L_179596:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_454369
L_179597:
L_179598:
	movq $0x41BF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r13,0x0(%r11)
	movq $0x2729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_179599:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
L_179600:
	incl 0x44(%rbp)
	jmp loop_1820
.p2align 0x4
L_454369:
L_179601:
	movq $0x41BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r15
	jmp L_179599
.p2align 0x4
L_454371:
L_179603:
	cmpq $0x1,%r15
	je L_179600
L_179604:
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_179600
L_179605:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x8(%r13)
	movl $0x0,0x0(%r13)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movb $0x13,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_179606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x57A
L_179537:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179538
L_179565:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_179566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179566
.p2align 0x4
.long 0x566
L_179566:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_179538:
	cmpq $0x1,0x50(%rbp)
	jne L_179526
L_179540:
	movq $0x196B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r14
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_179103
L_179541:
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_454386
L_179542:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_179544:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_179545
L_179557:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB0,%r13
	jne L_179545
L_179558:
	movq 0x28(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_454381
L_179545:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_179075
L_179546:
	cmpq $0x1,%r15
	je L_454376
L_179547:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_179544
.p2align 0x4
L_454376:
L_179548:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179549
L_179555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179556
.p2align 0x4
.long 0x52D
L_179556:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_179549:
	movl 0x20(%rbp),%ecx
L_179550:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179551:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_179553
L_179554:
	movl %ecx,0x0(%r15)
L_179553:
	movq $0x1961,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_179083
.p2align 0x4
L_454381:
L_179560:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179561:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_179526
L_179563:
	movl %ecx,0x0(%r15)
L_179526:
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454386:
L_179564:
	xorl %ecx,%ecx
	jmp L_179550
.p2align 0x4
.long 0x540
L_179491:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_179049
L_179493:
	cmpl $0x0,%r13d
	jl L_179153
L_179494:
	movl $0x0,0x4C(%rbp)
loop_1817:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_179083
L_179496:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x50(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movl 0x0(%r11),%ebx
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_179049
L_179498:
	cmpl $0x0,%ecx
	jl L_179153
L_179499:
	movl %ebx,0x68(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1818:
	cmpl %ecx,%ebx
	jnl L_454390
L_179533:
	movslq %ebx,%r15
	salq $0x4,%r15
	movl 0x68(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x58(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x68(%rbp)
	incl %ebx
	jmp loop_1818
.p2align 0x4
L_454390:
L_179500:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179501
L_179531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_179532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179532
.p2align 0x4
.long 0x2488
L_179532:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_179501:
	movq $0x1E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_179502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0x69B
L_179419:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_179401
.p2align 0x4
.long 0x1
toString_254:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x459
L_179366:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_179348
.p2align 0x4
.long 0x1
toString_253:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x2482
L_179326:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	incl 0x3C(%rbp)
	jmp loop_1815
.p2align 0x4
.long 0x5B5
L_179314:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_179290
.p2align 0x4
.long 0x597
L_179291:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_179292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2482
L_179285:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	incl 0x3C(%rbp)
	jmp loop_1813
.p2align 0x4
.long 0x5A4
L_179240:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_179241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_28
.p2align 0x4
.long 0xF2E
x_569:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179257
L_179258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_179259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179259
.p2align 0x4
.long 0x573
L_179259:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_179257:
	movq 0x40(%rbp),%r15
x_568:
	movq %r15,0x50(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_179249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x526
L_179155:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179156
L_179217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179218
.p2align 0x4
.long 0x563
L_179218:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_179156:
	cmpq $0x1,0x38(%rbp)
	je L_454406
L_179157:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_179049
L_179159:
	cmpl $0x0,%r13d
	jl L_179153
L_179160:
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_1809:
	movl 0x44(%rbp),%r15d
	cmpl 0x40(%rbp),%r15d
	jnl L_454401
L_179175:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x50(%rbp)
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_179049
L_179177:
	cmpl $0x0,%r14d
	jl L_179153
L_179178:
	movl $0x0,0x54(%rbp)
.p2align 0x4,,0x7
loop_1810:
	movl 0x50(%rbp),%r15d
	cmpl %r15d,0x54(%rbp)
	jl L_454398
L_179179:
	incl 0x44(%rbp)
	jmp loop_1809
.p2align 0x4
L_454398:
L_179180:
	movslq 0x54(%rbp),%r15
	salq $0x4,%r15
	movq 0x48(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_179181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_116
.p2align 0x4
L_454401:
L_179161:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179162
L_179173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_179174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179174
.p2align 0x4
.long 0x56D
L_179174:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_179162:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_454402
L_179163:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
L_179164:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x3DBF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_179165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_454402:
L_179169:
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_179083
.p2align 0x4
L_454406:
L_179184:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_454407
L_179215:
	movq %r11,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_179216+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_454407:
L_179185:
L_179186:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_179187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5A4
L_179119:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_179120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_27
.p2align 0x4
.long 0xF2E
x_566:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179136
L_179137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_179138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179138
.p2align 0x4
.long 0x573
L_179138:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_179136:
	movq 0x40(%rbp),%r15
x_565:
	movq %r15,0x50(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_179128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x549
L_179060:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_179061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
.long 0xEEF
L_179628:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179629
L_179730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_179731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179731
.p2align 0x4
.long 0x2495
L_179731:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_179629:
	movq $0x10B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x64(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_179049
L_179631:
	movq $0x37F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	movl %r13d,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_179632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_11
.p2align 0x4
.long 0x2489
L_179606:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_179600
.p2align 0x4
.long 0xEAE
L_179502:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179503
L_179529:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_179530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179530
.p2align 0x4
.long 0x15F7
L_179530:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_179503:
	movq $0x1379,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x20,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x58(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x40(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x50(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x68(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_179103
L_179504:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_454422
L_179505:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_179507:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_179508
L_179520:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD3C,%r13
	jne L_179508
L_179521:
	movq 0x30(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_454417
L_179508:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_179075
L_179509:
	cmpq $0x1,%r15
	je L_454412
L_179510:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_179507
.p2align 0x4
L_454412:
L_179511:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179512
L_179518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_179519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179519
.p2align 0x4
.long 0x2487
L_179519:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_179512:
	movl 0x50(%rbp),%ecx
L_179513:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179514:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_179516
L_179517:
	movl %ecx,0x0(%r15)
L_179516:
	movq $0x1A79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	incl 0x4C(%rbp)
	jmp loop_1817
.p2align 0x4
L_454417:
L_179523:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179524:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_179526
L_179527:
	movl %ecx,0x0(%r15)
	jmp L_179526
.p2align 0x4
L_454422:
L_179528:
	xorl %ecx,%ecx
	jmp L_179513
.p2align 0x4
.long 0x1
rev_252:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_454427
L_179402:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_179403:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454426
.p2align 0x4,,0x7
L_179404:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_454425
L_179405:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_179403
.p2align 0x4
L_454425:
L_179407:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_179408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_454426:
L_179415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_179416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179416
.p2align 0x4
.long 0x45B
L_179416:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_179404
.p2align 0x4
L_454427:
L_179417:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_179407
.p2align 0x4
.long 0x1
rev_251:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_454430
L_179349:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_179350:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454429
.p2align 0x4,,0x7
L_179351:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_454428
L_179352:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_179350
.p2align 0x4
L_454428:
L_179354:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_179355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_454429:
L_179362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_179363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179363
.p2align 0x4
.long 0x45B
L_179363:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_179351
.p2align 0x4
L_454430:
L_179364:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_179354
.p2align 0x4
.long 0x57A
L_179292:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179293
L_179311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_179312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179312
.p2align 0x4
.long 0x566
L_179312:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_179293:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_179049
L_179295:
	movl %r13d,0x68(%rbp)
	movq $0x3C67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_179296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x593
L_179241:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179242
L_179254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_179255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179255
.p2align 0x4
.long 0x5D0
L_179255:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_179242:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179243:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_179075
L_179244:
	cmpq $0x1,%r14
	je L_454433
L_179245:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179243
.p2align 0x4
L_454433:
L_179246:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179247
L_179252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_179253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179253
.p2align 0x4
.long 0x247F
L_179253:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_179247:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_454434
L_179248:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp x_568
.p2align 0x4
L_454434:
L_179251:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp x_568
.p2align 0x4
.long 0xF2E
L_179249:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_179250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x2481
L_179181:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	incl 0x54(%rbp)
	jmp loop_1810
.p2align 0x4
.long 0x526
L_179165:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179166
L_179170:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179171
.p2align 0x4
.long 0x563
L_179171:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_179166:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_179169
L_179167:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_179164
.p2align 0x4
.long 0x459
L_179216:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_179186
.p2align 0x4
.long 0x1
L_179187:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_179188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x593
L_179120:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179121
L_179133:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_179134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179134
.p2align 0x4
.long 0x5D0
L_179134:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_179121:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179122:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_179075
L_179123:
	cmpq $0x1,%r14
	je L_454440
L_179124:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179122
.p2align 0x4
L_454440:
L_179125:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179126
L_179131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_179132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179132
.p2align 0x4
.long 0x247F
L_179132:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_179126:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_454441
L_179127:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp x_565
.p2align 0x4
L_454441:
L_179130:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp x_565
.p2align 0x4
.long 0xF2E
L_179128:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_179129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5D3
L_179061:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je L_454445
L_179062:
	movq (globalObjptr+0xDF00)(%rip),%r15
L_179063:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_179064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454445:
L_179093:
	movq (globalObjptr+0xDF08)(%rip),%r15
	jmp L_179063
.p2align 0x4
.long 0x1DB8
L_179632:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179633
L_179728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_179729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179729
.p2align 0x4
.long 0x1DB9
L_179729:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_179633:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2733,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x6F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1363,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x88(%rbp)
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x28,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x10(%r11)
	movq 0x80(%rbp),%r13
	movq %r13,0x18(%r11)
	movq 0x18(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x90(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_179103
L_179634:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_454460
L_179635:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_179637:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_179638
L_179720:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD4F,%r13
	jne L_179638
L_179721:
	movq 0x28(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_454455
L_179638:
	incl %ecx
	movl %ecx,0x78(%rbp)
	jo L_179075
L_179639:
	cmpq $0x1,%r15
	je L_454446
L_179640:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_179637
.p2align 0x4
L_454446:
L_179641:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179642
L_179718:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_179719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179719
.p2align 0x4
.long 0x2494
L_179719:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_179642:
	movl 0x78(%rbp),%ecx
L_179643:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179644:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_179646
L_179717:
	movl %ecx,0x0(%r15)
L_179646:
	movq $0x1A9F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_179049
L_179648:
	cmpl $0x0,%ecx
	jl L_179153
L_179649:
	movl 0x60(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1821:
	cmpl %ecx,%ebx
	jnl L_454447
L_179715:
	movslq %ebx,%r15
	salq $0x4,%r15
	movl 0x30(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x70(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x30(%rbp)
	incl %ebx
	jmp loop_1821
.p2align 0x4
L_454447:
L_179650:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179651
L_179713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_179714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179714
.p2align 0x4
.long 0x2493
L_179714:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_179651:
	movq $0x1E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x80(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_179652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_454455:
L_179723:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179724:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_179526
L_179726:
	movl %ecx,0x0(%r15)
	jmp L_179526
.p2align 0x4
L_454460:
L_179727:
	xorl %ecx,%ecx
	jmp L_179643
.p2align 0x4
.long 0x1
L_179408:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179409
L_179413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_179414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179414
.p2align 0x4
.long 0x451
L_179414:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_179409:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF250)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_179355:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179356
L_179360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_179361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179361
.p2align 0x4
.long 0x451
L_179361:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_179356:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF250)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2483
L_179296:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDF80)(%rip),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_179297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp alignPrefix_0
.p2align 0x4
.long 0xF2E
L_179250:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	incl 0x3C(%rbp)
	jmp loop_1811
.p2align 0x4
.long 0x4AF
L_179188:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF5A8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_179189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xF2E
L_179129:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	incl 0x3C(%rbp)
	jmp loop_1808
.p2align 0x4
.long 0x5D3
L_179064:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179065
L_179091:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_179092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179092
.p2align 0x4
.long 0x5D8
L_179092:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_179065:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDF08)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_179066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x248B
L_179652:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_179653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1
bug_468:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179410
L_179411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_179412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179412
.p2align 0x4
.long 0x451
L_179412:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_179410:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_467:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179357
L_179358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_179359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179359
.p2align 0x4
.long 0x451
L_179359:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_179357:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2483
L_179297:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179298
L_179309:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_179310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179310
.p2align 0x4
.long 0x2484
L_179310:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_179298:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_179299:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_179075
L_179300:
	cmpq $0x1,%r14
	je L_454468
L_179301:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179299
.p2align 0x4
L_454468:
L_179302:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179303
L_179307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_179308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179308
.p2align 0x4
.long 0x1D95
L_179308:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_179303:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454469
L_179304:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
x_570:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x60(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_179305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_454469:
L_179306:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_570
.p2align 0x4
.long 0x5AF
L_179189:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_179190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5D3
L_179066:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_179067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x248C
L_179653:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179654
L_179711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_179712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179712
.p2align 0x4
.long 0x2492
L_179712:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_179654:
	movq $0x1E55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x755,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	addq $0x28,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x10(%r13)
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%r13)
	cmpl $0x0,0x64(%rbp)
	jl L_179153
L_179655:
	movl $0x0,0x28(%rbp)
loop_1822:
	movl 0x28(%rbp),%r15d
	cmpl 0x64(%rbp),%r15d
	jnl L_179083
L_179657:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x30(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x70(%rbp)
	cmpq %r14,%rdx
	movq %r15,0x68(%rbp)
	jne L_179049
L_179659:
	testq %rdx,%rdx
	jz L_454488
L_179660:
	cmpq $0x7FFFFFFF,%rdx
	ja L_454487
L_179661:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14B3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_179662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179662
.p2align 0x4
.long 0x248D
L_179662:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x78(%rbp)
L_179663:
	movq $0x0,0x80(%rbp)
.p2align 0x4,,0x7
loop_1823:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454486
.p2align 0x4,,0x7
L_179664:
	movq 0x80(%rbp),%r15
	cmpq 0x70(%rbp),%r15
	jnl L_454473
L_179705:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x68(%rbp),%r11
	movl 0x0(%r11,%r14,1),%r10d
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq $0x2733,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x6F9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x135F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq $0x16EB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x78(%rbp),%r13
	movl %r10d,0x0(%r13,%r14,1)
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r15,%r14
	salq $0x4,%r14
	movq %r11,0x8(%r13,%r14,1)
	incq %r15
	movq %r15,0x80(%rbp)
	jmp loop_1823
.p2align 0x4
L_454473:
L_179665:
	movq 0x78(%rbp),%r13
	movq $0x74F,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x2731,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x751,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movb $0x1,%r10b
	movzbl %r10b,%ecx
	movl %ecx,0x4(%r14)
	movq $0x2733,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x6F9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movl $0x0,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x757,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x68(%rbp)
	movq %r9,0x0(%r10)
	movq %r14,0x10(%r10)
	movq %r11,0x18(%r10)
	addq $0x30,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x8(%r10)
	movq %r13,0x20(%r10)
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_179103
L_179666:
	movq %r14,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_454484
L_179667:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	xchgq %r13,%r15
.p2align 0x4,,0x7
L_179669:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_179670
L_179697:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD4E,%r13
	jne L_179670
L_179698:
	movq 0x0(%r14),%r13
	cmpq %r13,0x40(%rbp)
	je L_454479
L_179670:
	incl %ecx
	movl %ecx,0x2C(%rbp)
	jo L_179075
L_179671:
	cmpq $0x1,%r15
	je L_454474
L_179672:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_179669
.p2align 0x4
L_454474:
L_179673:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179674
L_179695:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_179696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179696
.p2align 0x4
.long 0x2490
L_179696:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_179674:
	movl 0x2C(%rbp),%ecx
L_179675:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179676:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_179678
L_179694:
	movl %ecx,0x0(%r15)
L_179678:
	movq $0x1A9D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_179679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
L_454479:
L_179700:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_179114
L_179701:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_179526
L_179703:
	movl %ecx,0x0(%r15)
	jmp L_179526
.p2align 0x4
L_454484:
L_179704:
	xorl %ecx,%ecx
	jmp L_179675
.p2align 0x4
L_454486:
L_179706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_179707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179707
.p2align 0x4
.long 0x2491
L_179707:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_179664
.p2align 0x4
L_454487:
L_179708:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454488:
L_179709:
	movq (globalObjptr+0xE50)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_179663
.p2align 0x4
.long 0x5CC
L_179305:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_179082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x51E
L_179190:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179191
L_179213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_179214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179214
.p2align 0x4
.long 0x4AE
L_179214:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_179191:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_179192:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_179075
L_179193:
	cmpq $0x1,%r14
	je L_454493
L_179194:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179192
.p2align 0x4
L_454493:
L_179195:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179196
L_179211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_179212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179212
.p2align 0x4
.long 0x4E6
L_179212:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_179196:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454494
L_179197:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_252:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_454494:
L_179210:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_252
.p2align 0x4
.long 0x247C
L_179067:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179068
L_179089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_179090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179090
.p2align 0x4
.long 0x53D
L_179090:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_179068:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_179049
L_179070:
	movl %r13d,0x78(%rbp)
	movq $0x3C71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_179071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x248E
L_179679:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179680
L_179692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_179693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179693
.p2align 0x4
.long 0x248F
L_179693:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_179680:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_454501
L_179681:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_454500
L_179682:
L_179683:
	movq $0x41F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_179684:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_179685:
	incl 0x28(%rbp)
	jmp loop_1822
.p2align 0x4
L_454500:
L_179686:
	movq $0x41F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_179684
.p2align 0x4
L_454501:
L_179687:
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_179688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_43
.p2align 0x4
.long 0x523
L_179082:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_179083
.p2align 0x4
.long 0x1
rev_250:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_454505
L_179198:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_179199:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454504
.p2align 0x4,,0x7
L_179200:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_454503
L_179201:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_179199
.p2align 0x4
L_454503:
L_179203:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_454504:
L_179207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_179208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179208
.p2align 0x4
.long 0x45B
L_179208:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_179200
.p2align 0x4
L_454505:
L_179209:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_179203
.p2align 0x4
.long 0x247D
L_179071:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_179072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x248E
L_179688:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_179685
L_179689:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x2,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_179690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x1
bug_466:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179204
L_179205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_179206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179206
.p2align 0x4
.long 0x451
L_179206:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_179204:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x247D
L_179072:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179073
L_179087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_179088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179088
.p2align 0x4
.long 0x247E
L_179088:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_179073:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_179074:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_179075
L_179076:
	cmpq $0x1,%r14
	je L_454508
L_179077:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179074
.p2align 0x4
L_454508:
L_179078:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179079
L_179085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_179086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179086
.p2align 0x4
.long 0x1627
L_179086:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_179079:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454509
L_179080:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
x_563:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x68(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_179081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_454509:
L_179084:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_563
.p2align 0x4
.long 0x248E
L_179690:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_179685
.p2align 0x4
.long 0x1626
L_179081:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_179082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
