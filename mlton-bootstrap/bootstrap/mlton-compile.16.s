/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:08:51 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl foreachi_0
.hidden foreachi_0
foreachi_0:
L_51818:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_51819
L_54662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_54663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54663
.p2align 0x4
.long 0x45C
L_54663:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_51819:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_51821
L_51822:
	cmpl $0x0,%r13d
	jl L_51983
L_51823:
	movl $0x0,0x24(%rbp)
.p2align 0x4,,0x7
loop_641:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394085
.p2align 0x4,,0x7
L_51824:
	movl 0x24(%rbp),%r15d
	cmpl 0x20(%rbp),%r15d
	jnl L_394084
L_51826:
	movslq %r15d,%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_54655
	cmpq $0x2,%r15
	je L_394082
L_51827:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1AD3,%rax
	cmpq $0x2B,%rax
	ja L_393892
	leaq jumpTable_80(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_80:
.quad L_394081,L_394060,L_394034,L_394033,L_394020,L_394019,L_394017,L_394016,L_394015,L_394014,L_394013,L_394012,L_394011,L_394010,L_393983,L_393982,L_393981,L_393980,L_393979,L_393978,L_393977,L_393976,L_393963,L_393961,L_393960,L_393956,L_393955,L_393954,L_393941,L_393940,L_393939,L_393938,L_393937,L_393936,L_393925,L_393924,L_393923,L_393919,L_393918,L_393905,L_393904,L_393901,L_393900,L_393898
.text
.p2align 0x4
L_393892:
L_51828:
	movq 0x0(%rbp),%r15
	movq 0x78(%r15),%r14
	movq 0x70(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x68(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x58(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x50(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x98(%rbp)
	movq 0x0(%r15),%r13
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r11
	movq %r11,0xA0(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0xA8(%rbp)
	cmpq $0x1,%r11
	je L_51919
	cmpq $0x2,%r11
	je L_393896
L_51829:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1097,%r15
	jne L_393895
L_51830:
	movl 0xC(%r11),%r15d
	testl %r15d,%r15d
	jnz L_393894
L_51831:
	cmpb $0x7,0x0(%r13)
	jne L_393893
.p2align 0x4,,0x7
L_51919:
	incl 0x24(%rbp)
	jmp loop_641
.p2align 0x4
L_393893:
	movq %r14,%r15
L_51833:
	movl $0x0,0x30(%rbp)
doit_12:
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xA0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_51834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_31
.p2align 0x4
L_393894:
L_52125:
	movl $0x1,0x30(%rbp)
	movq %r14,%r15
	jmp doit_12
.p2align 0x4
L_393895:
L_52126:
	movl $0x1,0x30(%rbp)
	movq %r14,%r15
	jmp doit_12
.p2align 0x4
L_393896:
	movq %r14,%r15
	jmp L_51833
.p2align 0x4
L_393898:
L_53332:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xD8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xD0(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0xC8(%r14),%r10
	movq %r10,0x40(%rbp)
	movq 0xC0(%r14),%r10
	movq %r10,0x48(%rbp)
	movq 0xB8(%r14),%r10
	movq %r10,0x50(%rbp)
	movq 0xB0(%r14),%r10
	movq %r10,0x58(%rbp)
	movq 0xA8(%r14),%r10
	movq %r10,0x60(%rbp)
	movq 0xA0(%r14),%r10
	movq %r10,0x68(%rbp)
	movq 0x90(%r14),%r10
	movq %r10,0x70(%rbp)
	movq 0x58(%r14),%r10
	movq %r10,0x78(%rbp)
	movq 0x50(%r14),%r10
	movq %r10,0x80(%rbp)
	movq 0x48(%r14),%r10
	movq %r10,0x88(%rbp)
	movq 0x40(%r14),%r10
	movq %r10,0x90(%rbp)
	movq 0x38(%r14),%r10
	movq %r10,0x98(%rbp)
	movq 0x30(%r14),%r10
	movq %r10,0xA0(%rbp)
	movq 0x28(%r14),%r10
	movq %r10,0xA8(%rbp)
	movq 0x20(%r14),%r10
	movq %r10,0xB0(%rbp)
	movq 0x18(%r14),%r10
	movq %r10,0xB8(%rbp)
	movq 0x10(%r14),%r10
	movq %r10,0xC0(%rbp)
	movq 0x8(%r14),%r10
	movq %r10,0xC8(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0xD0(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x18(%r15),%r10
	movq %r10,0xF0(%rbp)
	movq 0x20(%r15),%r10
	movq %r10,0xF8(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x100(%rbp)
	cmpq %r15,0x10(%r13)
	jne L_393899
L_54617:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x110(%rbp)
	movq %r11,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_54618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_31
.p2align 0x4
L_393899:
L_53334:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xE8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_53335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_31
.p2align 0x4
L_393900:
L_53330:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	movq $0x3D71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	addq $0x38,%rbp
	leaq (L_53331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_393901:
L_53264:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x109A,%r15
	je L_393903
	cmpq $0x109D,%r15
	je L_393902
	jmp L_51919
.p2align 0x4
L_393902:
L_53275:
	movq %r11,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_53276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_32
.p2align 0x4
L_393903:
L_53265:
	movq %r11,0x50(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_53266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_32
.p2align 0x4
L_393904:
L_53245:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_53246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_32
.p2align 0x4
L_393905:
L_53220:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r15
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x53,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x1303,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x38(%rbp)
	movq %r10,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x20,%r12
	movq %r11,0x10(%r9)
	movq 0x10(%r15),%r11
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_393917
L_53221:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_393916
L_53222:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_53224:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_393915
L_53237:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD9D,%r11
	jne L_393914
L_53238:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_393911
L_53225:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_393910
L_53226:
	cmpq $0x1,%r15
	je L_393906
L_53227:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_53224
.p2align 0x4
L_393906:
L_53228:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_393909
.p2align 0x4,,0x7
L_53229:
	movl 0x30(%rbp),%ecx
L_53230:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_393908
L_53231:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_53233
L_53234:
	movl %ecx,0x0(%r15)
L_53233:
	movq $0x1B3B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_51919
.p2align 0x4
L_393908:
L_51915:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1080)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_393909:
L_53235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_53236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53236
.p2align 0x4
.long 0xC72
L_53236:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_53229
.p2align 0x4
L_393910:
L_51879:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_393911:
L_53240:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_53241:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_51929
L_53243:
	movl %ecx,0x0(%r15)
L_51929:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_393914:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_53225
.p2align 0x4
L_393915:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_53225
.p2align 0x4
L_393916:
L_53244:
	xorl %ecx,%ecx
	jmp L_53230
.p2align 0x4
L_393917:
L_51904:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1088)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_393918:
L_53173:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_53174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_393919:
L_53166:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r13
	movq 0x30(%rbp),%r11
	movq 0x0(%r11),%r14
	movq 0x28(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	jnb L_393922
L_53168:
	movq 0x0(%r15,%r11,8),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x109E,%r15
	jne L_393921
L_53170:
	movq 0x8(%r14),%r11
	movl 0x14(%r11),%r9d
	testl %r9d,%r9d
	jnz L_51919
	movq %r10,%r15
L_53169:
	movq %r14,0x38(%rbp)
	movq $0x36E3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x14A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq $0x16,0x0(%r15)
	movq $0xD,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
L_393921:
	movq %r10,%r15
	jmp L_53169
.p2align 0x4
L_393922:
L_51859:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_393923:
L_53145:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_53146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_393924:
L_53138:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_53139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_393925:
L_52843:
	movq 0x0(%rbp),%r15
	movq 0xA8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x98(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xA0(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0xE8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0xF0(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0xF8(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x100(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x109E,%r15
	je L_393926
L_52844:
	movq %r14,0x30(%rbp)
L_52845:
	movq 0xF0(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	sete %al
	movzbl %al,%eax
	movl %eax,0x38(%rbp)
	movq $0x174B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x108(%rbp)
	addq $0x68,%r12
	movl 0xA0(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xE8(%rbp),%r11
	movq %r11,0x10(%r14)
	movq 0x98(%rbp),%r11
	movq %r11,0x18(%r14)
	movq 0x90(%rbp),%r11
	movq %r11,0x20(%r14)
	movq 0x88(%rbp),%r11
	movq %r11,0x28(%r14)
	movq 0x80(%rbp),%r10
	movq %r10,0x30(%r14)
	movq 0x78(%rbp),%r9
	movq %r9,0x38(%r14)
	movq 0x70(%rbp),%r8
	movq %r8,0x40(%r14)
	movq 0x68(%rbp),%r8
	movq %r8,0x48(%r14)
	movq 0x60(%rbp),%rsp
	movq %rsp,0x50(%r14)
	movq 0x58(%rbp),%rsp
	movq %rsp,0x58(%r14)
	movq $0x174D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x110(%rbp)
	addq $0x30,%r12
	movq %r11,0x0(%r14)
	movq %rsp,0x8(%r14)
	movq %r15,0x10(%r14)
	movq 0xF8(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x100(%rbp),%r15
	movq %r15,0x20(%r14)
	movq $0x174F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x118(%rbp)
	addq $0x20,%r12
	movq %r10,0x0(%r15)
	movq %r9,0x8(%r15)
	movq %r8,0x10(%r15)
	movq $0x1751,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x120(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	movq $0x1753,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x128(%rbp)
	addq $0x28,%r12
	movl %eax,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq %r11,0x8(%r10)
	movq %r14,0x10(%r10)
	movq %r15,0x18(%r10)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x138(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_52846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bytesAllocated_0
.p2align 0x4
L_393926:
L_53100:
	movq 0x10(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x110(%rbp)
	movl 0x1C(%r15),%r13d
	testl %r13d,%r13d
	jnz L_393927
L_53101:
	movq %r14,0x30(%rbp)
	jmp L_52845
.p2align 0x4
L_393927:
L_53102:
	movq 0x110(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x118(%rbp)
	cmpq %r14,%rdx
	jne L_393935
L_53104:
	testq %rdx,%rdx
	jz L_393934
L_53105:
	cmpq $0x7FFFFFFF,%rdx
	ja L_393933
L_53106:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_53107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53107
.p2align 0x4
.long 0xD08
L_53107:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x120(%rbp)
L_53108:
	movq $0x0,0x128(%rbp)
.p2align 0x4,,0x7
loop_653:
	movq 0x128(%rbp),%r14
	cmpq 0x118(%rbp),%r14
	jnl L_393931
L_53113:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x110(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_393929
L_53114:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_393928
L_53117:
	movq %r13,%r15
.p2align 0x4,,0x7
L_53116:
	movq 0x120(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x128(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x128(%rbp)
	jmp loop_653
.p2align 0x4
L_393928:
	movq %r13,%r15
	jmp L_53116
.p2align 0x4
L_393929:
L_53118:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_393930
L_53119:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x130(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x148(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_53120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_393930:
L_53135:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_393931:
L_53109:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53110
L_53111:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_53112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53112
.p2align 0x4
.long 0xD09
L_53112:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_53110:
	movq 0x120(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x213D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x108(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x30(%rbp)
	jmp L_52845
.p2align 0x4
L_393933:
L_51986:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_393934:
L_53137:
	movq (globalObjptr+0xDA0)(%rip),%r15
	movq %r15,0x120(%rbp)
	jmp L_53108
.p2align 0x4
L_393935:
L_51821:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_393936:
L_52780:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_52781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_34
.p2align 0x4
L_393937:
L_52741:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x60,%rbp
	leaq (L_52742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
L_393938:
L_52739:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0xC83,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x38(%rbp)
	addq $0x20,%r12
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (L_52740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
L_393939:
L_52701:
	movq 0x0(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_52702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_36
.p2align 0x4
L_393940:
L_52692:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x20(%r15),%r11
	movq %r11,0x60(%rbp)
	movq $0x335D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_52693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_393941:
L_52659:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x20(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x10(%r11),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x58(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_51904
L_52660:
	movq %r15,0x0(%r11)
	movq 0x0(%r9),%r11
	cmpq $0x1,%r11
	je L_393952
L_52661:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_52663:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_393951
L_52684:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xC9E,%r11
	jne L_393950
L_52685:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_393947
L_52664:
	incl %ecx
	movl %ecx,0x60(%rbp)
	jo L_51879
L_52665:
	cmpq $0x1,%r15
	je L_393942
L_52666:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_52663
.p2align 0x4
L_393942:
L_52667:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52668
L_52682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_52683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52683
.p2align 0x4
.long 0xCA8
L_52683:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_52668:
	movl 0x60(%rbp),%ecx
L_52669:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_52670:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_52672
L_52681:
	movl %ecx,0x0(%r15)
L_52672:
	movq $0x193D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x3351,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_52673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_393947:
L_52687:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_52688:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_51929
L_52690:
	movl %ecx,0x0(%r15)
	jmp L_51929
.p2align 0x4
L_393950:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_52664
.p2align 0x4
L_393951:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_52664
.p2align 0x4
L_393952:
L_52691:
	xorl %ecx,%ecx
	jmp L_52669
.p2align 0x4
L_393954:
L_52651:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r11
	movq $0xCBF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	movq %r11,0x10(%r15)
	movq %r11,0x68(%rbp)
	addq $0x20,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_52652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_393955:
L_52650:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq $0x36DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x14A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq $0xF,0x0(%r14)
	movq $0x9,0x10(%r14)
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
L_393956:
L_52645:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r11
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_51879
L_52646:
	movl %r15d,0x0(%r14)
	movl 0x0(%r13),%r15d
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movl %r14d,%r10d
	movslq %r10d,%r9
	cmpq %r14,%r9
	jne L_51821
L_52648:
	addl %r15d,%r10d
	jo L_51879
L_52649:
	movl %r10d,0x0(%r13)
	jmp L_51919
.p2align 0x4
L_393960:
L_52636:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_52637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_23
.p2align 0x4
L_393961:
L_52631:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x109C,%r15
	jne L_51919
L_52632:
	movq %r14,0x38(%rbp)
	movq %r13,0x40(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (L_52633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_37
.p2align 0x4
L_393963:
L_52606:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r15
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x1351,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x38(%rbp)
	movq %r10,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x20,%r12
	movq %r11,0x10(%r9)
	movq 0x10(%r15),%r11
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_51904
L_52607:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_393974
L_52608:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_52610:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_393973
L_52623:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD69,%r11
	jne L_393972
L_52624:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_393969
L_52611:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_51879
L_52612:
	cmpq $0x1,%r15
	je L_393964
L_52613:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_52610
.p2align 0x4
L_393964:
L_52614:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_393967
.p2align 0x4,,0x7
L_52615:
	movl 0x30(%rbp),%ecx
L_52616:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_52617:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_52619
L_52620:
	movl %ecx,0x0(%r15)
L_52619:
	movq $0x1AD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_51919
.p2align 0x4
L_393967:
L_52621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_52622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52622
.p2align 0x4
.long 0xC72
L_52622:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_52615
.p2align 0x4
L_393969:
L_52626:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_52627:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_51929
L_52629:
	movl %ecx,0x0(%r15)
	jmp L_51929
.p2align 0x4
L_393972:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_52611
.p2align 0x4
L_393973:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_52611
.p2align 0x4
L_393974:
L_52630:
	xorl %ecx,%ecx
	jmp L_52616
.p2align 0x4
L_393976:
L_52599:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_52600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_393977:
L_52597:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	movq $0x3DC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	addq $0x38,%rbp
	leaq (L_52598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_393978:
L_52596:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq $0x36DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x14A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq $0xE,0x0(%r14)
	movq $0x7,0x10(%r14)
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
L_393979:
L_52594:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	movq $0x3DEF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	addq $0x38,%rbp
	leaq (L_52595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_393980:
L_52585:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_52586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_23
.p2align 0x4
L_393981:
L_52584:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_0
.p2align 0x4
L_393982:
L_52552:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_52553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_393983:
L_52496:
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x28(%rbp)
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x38(%rbp)
	movq 0x0(%r9),%r14
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_51904
L_52497:
	movq %r15,0x0(%r11)
	movq 0x0(%r9),%r11
	cmpq $0x1,%r11
	je L_394008
L_52498:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x30(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_52500:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_394007
L_52541:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD6B,%r11
	jne L_394006
L_52542:
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x18)(%rip)
	je L_394002
L_52501:
	movl 0x30(%rbp),%r11d
	incl %r11d
	movl %r11d,0x34(%rbp)
	jo L_51879
L_52502:
	cmpq $0x1,%r15
	je L_393984
L_52503:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x30(%rbp)
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_52500
.p2align 0x4
L_393984:
L_52504:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394000
.p2align 0x4,,0x7
L_52505:
	movl 0x34(%rbp),%ecx
L_52506:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_52507:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_52509
L_52538:
	movl %ecx,0x0(%r15)
L_52509:
	movq $0x134F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1AD7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_52510:
	cmpb $0x2,0x0(%r15)
	je L_51919
L_52511:
	movq 0x28(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_51904
L_52512:
	movq %r15,0x0(%r11)
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_393995
L_52513:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_52515:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_393994
L_52528:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD6B,%r11
	jne L_393993
L_52529:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_393990
L_52516:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_51879
L_52517:
	cmpq $0x1,%r15
	je L_393985
L_52518:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_52515
.p2align 0x4
L_393985:
L_52519:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_393988
.p2align 0x4,,0x7
L_52520:
	movl 0x28(%rbp),%ecx
L_52521:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_52522:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_52524
L_52525:
	movl %ecx,0x0(%r15)
L_52524:
	movq $0x134F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x3,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1AD7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_51919
.p2align 0x4
L_393988:
L_52526:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_52527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52527
.p2align 0x4
.long 0xCA1
L_52527:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_52520
.p2align 0x4
L_393990:
L_52531:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_52532:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_393991
L_52535:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_52534:
	movb $0x3,0x0(%r15)
	jmp L_51919
.p2align 0x4
L_393991:
L_52533:
	movq %r11,%r15
	jmp L_52534
.p2align 0x4
L_393993:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_52516
.p2align 0x4
L_393994:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_52516
.p2align 0x4
L_393995:
L_52536:
	xorl %ecx,%ecx
	jmp L_52521
.p2align 0x4
L_394000:
L_52539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_52540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52540
.p2align 0x4
.long 0xC72
L_52540:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_52505
.p2align 0x4
L_394002:
L_52544:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394005
.p2align 0x4,,0x7
L_52545:
	movl 0x30(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_51915
L_52546:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_394003
L_52547:
	movq 0x48(%rbp),%r15
	jmp L_52510
.p2align 0x4
L_394003:
L_52548:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x48(%rbp),%r15
	jmp L_52510
.p2align 0x4
L_394005:
L_52549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_52550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52550
.p2align 0x4
.long 0xCA2
L_52550:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_52545
.p2align 0x4
L_394006:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_52501
.p2align 0x4
L_394007:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_52501
.p2align 0x4
L_394008:
L_52551:
	xorl %ecx,%ecx
	jmp L_52506
.p2align 0x4
L_394010:
L_52495:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x307B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq $0x305B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xED00)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_1
.p2align 0x4
L_394011:
L_52429:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_52430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_394012:
L_52420:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x58(%rbp)
	movq $0x334D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_52421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_394013:
L_52355:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_52356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_35
.p2align 0x4
L_394014:
L_52317:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_52318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_31
.p2align 0x4
L_394015:
L_52315:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	movq $0x3D89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	addq $0x38,%rbp
	leaq (L_52316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_394016:
L_52304:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_52305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bytesAllocated_0
.p2align 0x4
L_394017:
L_52301:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r9
	movq 0x28(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_51859
L_52303:
	movq %r9,0x38(%rbp)
	movq 0x0(%r14,%r15,8),%r9
	movq $0x36D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x10(%r15)
	movq %r14,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movq $0x14A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq $0x3,0x0(%r14)
	movq $0x2,0x10(%r14)
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
L_394019:
L_52294:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_52295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_394020:
L_52269:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r15
	movq $0x83F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movw $0x0,%r10w
	movzwl %r10w,%ecx
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x841,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movw $0x0,%r9w
	movzwl %r9w,%r8d
	movl %r8d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x843,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x0(%r9)
	movq %r14,0x8(%r9)
	addq $0x20,%r12
	movq $0x1,0x10(%r9)
	movq $0xA43,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0xA45,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movq $0x2,0x0(%r8)
	movq $0xA47,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x0(%rsp)
	movq %r10,0x8(%rsp)
	movq %r14,0x10(%rsp)
	addq $0x20,%r12
	movq $0x83F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movw $0x0,%r10w
	movzwl %r10w,%r8d
	movl %r8d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x841,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movw $0x0,%r8w
	movzwl %r8w,%esi
	movl %esi,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x843,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x0(%r8)
	movq %r14,0x8(%r8)
	addq $0x20,%r12
	movq $0x1,0x10(%r8)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xA49,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x38(%rbp)
	movq %r14,0x0(%r10)
	movq %r8,0x8(%r10)
	movq %rsp,0x10(%r10)
	movq %r9,0x18(%r10)
	addq $0x30,%r12
	movq %r11,0x20(%r10)
	movq 0x10(%r15),%r11
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_51904
L_52270:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_394031
L_52271:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_52273:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_394030
L_52286:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xD9C,%r11
	jne L_394029
L_52287:
	cmpq 0x0(%r14),%r13
	movq %r13,(localObjptr+0x0)(%rip)
	je L_394026
L_52274:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_51879
L_52275:
	cmpq $0x1,%r15
	je L_394021
L_52276:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r13
	jmp L_52273
.p2align 0x4
L_394021:
L_52277:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394024
.p2align 0x4,,0x7
L_52278:
	movl 0x30(%rbp),%ecx
L_52279:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_52280:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_52282
L_52283:
	movl %ecx,0x0(%r15)
L_52282:
	movq $0x1B39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_51919
.p2align 0x4
L_394024:
L_52284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_52285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52285
.p2align 0x4
.long 0xC72
L_52285:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_52278
.p2align 0x4
L_394026:
L_52289:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_52290:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_51929
L_52292:
	movl %ecx,0x0(%r15)
	jmp L_51929
.p2align 0x4
L_394029:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_52274
.p2align 0x4
L_394030:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_52274
.p2align 0x4
L_394031:
L_52293:
	xorl %ecx,%ecx
	jmp L_52279
.p2align 0x4
L_394033:
L_52267:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	movq $0x3D73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	addq $0x38,%rbp
	leaq (L_52268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_394034:
L_52215:
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r14
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1099,%r13
	jne L_394059
L_52263:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_51821
L_52265:
	incl %r9d
	jo L_51879
L_52266:
	movl %r9d,0x30(%rbp)
	movq %r11,%r15
L_52217:
	cmpb $0x7,0x0(%r14)
	je L_394055
L_52218:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_51821
L_52220:
	cmpl $0x0,%ecx
	jl L_394053
L_52221:
	movl $0x0,0x34(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_647:
	cmpl %ecx,%ebx
	jnl L_394038
L_52252:
	movslq %ebx,%r14
	movq 0x0(%r15,%r14,8),%r13
L_52253:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_52254
L_52257:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1091,%r14
	jne L_394035
L_52258:
	movl 0x34(%rbp),%r14d
	xchgl %r14d,%ecx
	movl %r14d,(localWord32+0x0)(%rip)
L_52256:
	movl %ecx,0x34(%rbp)
	incl %ebx
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_647
.p2align 0x4
L_394035:
L_52254:
	movl 0x34(%rbp),%r14d
	incl %r14d
	jo L_51879
	xchgl %r14d,%ecx
	movl %r14d,(localWord32+0x0)(%rip)
	jmp L_52256
.p2align 0x4
L_394038:
L_52222:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394052
.p2align 0x4,,0x7
L_52223:
	movl 0x34(%rbp),%ecx
L_52224:
	addl 0x30(%rbp),%ecx
	jo L_51879
L_52225:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	addq $0x10,%r12
	movl $0x0,0x4(%r14)
	movq $0xFE9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x28A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xD07,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r15
	movq $0x23C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r14,0x0(%r11)
	movq 0x48(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_51904
L_52226:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_394049
L_52227:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_52229:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_52230
L_52242:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCC2,%r13
	jne L_52230
L_52243:
	movq 0x38(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_394044
L_52230:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_51879
L_52231:
	cmpq $0x1,%r15
	je L_394039
L_52232:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_52229
.p2align 0x4
L_394039:
L_52233:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394042
.p2align 0x4,,0x7
L_52234:
	movl 0x28(%rbp),%ecx
L_52235:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_52236:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_52238
L_52239:
	movl %ecx,0x0(%r15)
L_52238:
	movq $0x1985,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_51919
.p2align 0x4
L_394042:
L_52240:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_52241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52241
.p2align 0x4
.long 0xC70
L_52241:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_52234
.p2align 0x4
L_394044:
L_52245:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_52246:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_51929
L_52248:
	movl %ecx,0x0(%r15)
	jmp L_51929
.p2align 0x4
L_394049:
L_52249:
	xorl %ecx,%ecx
	jmp L_52235
.p2align 0x4
L_394052:
L_52250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_52251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52251
.p2align 0x4
.long 0xC71
L_52251:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_52223
.p2align 0x4
L_394053:
L_51983:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4F8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_394055:
L_52260:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_51821
	jmp L_52224
.p2align 0x4
L_394059:
L_52216:
	movl $0x1,0x30(%rbp)
	movq %r11,%r15
	jmp L_52217
.p2align 0x4
L_394060:
L_52164:
	movq 0x0(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x109D,%r14
	jne L_51919
L_52165:
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
L_52166:
	movq %r14,%r11
	andq $0x3,%r11
	jz L_394079
L_52167:
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x38(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_51904
L_52168:
	movq %r15,0x0(%r9)
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_394077
L_52169:
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r9
	movl $0x0,0x48(%rbp)
	movq %r9,%r15
	movq %r14,%r13
	movq %r11,%r14
.p2align 0x4,,0x7
L_52171:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_394076
L_52202:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCAD,%r11
	jne L_394075
L_52203:
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_394071
L_52172:
	movl 0x48(%rbp),%r11d
	incl %r11d
	movl %r11d,0x4C(%rbp)
	jo L_51879
L_52173:
	cmpq $0x1,%r15
	je L_394061
L_52174:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x48(%rbp)
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_52171
.p2align 0x4
L_394061:
L_52175:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394069
.p2align 0x4,,0x7
L_52176:
	movl 0x4C(%rbp),%ecx
L_52177:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_52178:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_52180
L_52199:
	movl %ecx,0x0(%r15)
L_52180:
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x11F3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x195B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq %r13,%r15
L_52181:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_52188
L_52182:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_52183:
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_51919
L_52184:
	cmpq $0x1,%r14
	je L_394062
L_52185:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_52183
.p2align 0x4
L_394062:
L_52186:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394064
.p2align 0x4,,0x7
L_52188:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_51919
L_52189:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_52190:
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_52191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp returnTo_0
.p2align 0x4
L_394064:
L_52195:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_52196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52196
.p2align 0x4
.long 0x5AB
L_52196:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_52188
.p2align 0x4
L_394069:
L_52200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_52201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52201
.p2align 0x4
.long 0xC6D
L_52201:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_52176
.p2align 0x4
L_394071:
L_52205:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394074
.p2align 0x4,,0x7
L_52206:
	movl 0x48(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_51915
L_52207:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_394072
L_52208:
	movq 0x50(%rbp),%r15
	jmp L_52181
.p2align 0x4
L_394072:
L_52209:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x48(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x50(%rbp),%r15
	jmp L_52181
.p2align 0x4
L_394074:
L_52210:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_52211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52211
.p2align 0x4
.long 0xC6E
L_52211:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_52206
.p2align 0x4
L_394075:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_52172
.p2align 0x4
L_394076:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_52172
.p2align 0x4
L_394077:
L_52212:
	xorl %ecx,%ecx
	jmp L_52177
.p2align 0x4
L_394079:
L_52213:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp returnTo_0
.p2align 0x4
L_394081:
L_52129:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (x_100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_32
.p2align 0x4
L_394082:
L_54655:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x2,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_54656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_394084:
L_51825:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_394085:
L_54659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_54660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54660
.p2align 0x4
.long 0x495
L_54660:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_51824
.p2align 0x4
.long 0xC52
L_51834:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xC0(%rbp)
	movl 0x30(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_394130
L_51836:
	movq 0xA8(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_51837
L_52079:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1097,%r15
	jne L_394128
L_52080:
	movl $0x1,0x30(%rbp)
	movq $0x1,%r15
L_52081:
	cmpq $0x1,%r15
	je L_394127
L_52082:
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x34(%rbp)
	movq $0x1,0xB0(%rbp)
.p2align 0x4,,0x7
L_52083:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394126
.p2align 0x4,,0x7
L_52084:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x34(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_394089
L_52085:
	movq %r15,0xB0(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movl %r15d,0x34(%rbp)
	jmp L_52083
.p2align 0x4
L_394089:
L_51838:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x34(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xA8(%rbp)
	cmpq $0x1,%r15
	je L_394125
L_51839:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xB0(%rbp)
	movq $0x1,0xC0(%rbp)
.p2align 0x4,,0x7
L_51840:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394124
.p2align 0x4,,0x7
L_51841:
	movq 0xC0(%rbp),%r14
	cmpq $0x1,%r14
	je L_51848
L_51842:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
.p2align 0x4,,0x7
L_51843:
	cmpl %ecx,0xB0(%rbp)
	je L_394121
L_51844:
	cmpq $0x1,%r15
	je L_394090
L_51845:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp L_51843
.p2align 0x4
L_394090:
L_51846:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394120
.p2align 0x4,,0x7
L_51848:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0xB0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_394091
L_51849:
	movq %r15,0xC0(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movl %r15d,0xB0(%rbp)
	jmp L_51840
.p2align 0x4
L_394091:
L_51850:
	movq %r15,0x28(%rbp)
L_51851:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_394119
L_51852:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
L_51853:
	xorl %ecx,%ebx
	cmpq $0x1,%r15
	je L_394092
L_51854:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp L_51853
.p2align 0x4
L_394092:
L_51855:
	movl %ebx,%ecx
L_51856:
	andl 0x34(%rbp),%ecx
	cmpl $0x0,%ecx
	jl L_51879
L_51857:
	movslq %ecx,%r15
	movq 0xA8(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_51859
L_51860:
	movq 0x0(%r14,%r15,8),%r14
	movq %r14,0xA8(%rbp)
.p2align 0x4,,0x7
loop_642:
	movq 0xA8(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0xB0(%rbp)
	cmpq $0x1,%r10
	je L_394115
L_51861:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x10DD,%r15
	je L_394096
L_52055:
	movq 0x10(%r10),%r14
	movq 0x8(%r10),%r15
	movl 0x0(%r10),%ecx
	movq 0x28(%rbp),%r11
	cmpq $0x1,%r11
	je L_394095
L_52056:
	movq 0x8(%r11),%r13
	movl 0x0(%r11),%ebx
.p2align 0x4,,0x7
L_52057:
	cmpl %ecx,%ebx
	je L_394094
L_52058:
	cmpq $0x1,%r13
	je L_394093
L_52059:
	movl 0x0(%r13),%ebx
	movq 0x8(%r13),%r13
	jmp L_52057
.p2align 0x4
L_394093:
	movq %r14,%r15
L_52061:
	movq %r15,0xA8(%rbp)
	jmp loop_642
.p2align 0x4
L_394094:
L_52062:
	movq %r15,0xA8(%rbp)
	jmp loop_642
.p2align 0x4
L_394095:
	movq %r14,%r15
	jmp L_52061
.p2align 0x4
L_394096:
L_51862:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_51863
L_52053:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_52054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52054
.p2align 0x4
.long 0xC65
L_52054:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_51863:
	movq 0xB0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xC8(%rbp)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_52030
L_51864:
	movq 0x8(%r14),%r13
	movq %r13,0xB0(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x34(%rbp)
.p2align 0x4,,0x7
L_51865:
	cmpq $0x1,%r15
	je L_394111
L_51866:
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xD8(%rbp)
	movq $0x1,0xE0(%rbp)
L_51867:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394110
.p2align 0x4,,0x7
L_51868:
	movl 0xD8(%rbp),%r15d
	cmpl 0x34(%rbp),%r15d
	je L_394098
L_51869:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xE0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0xD0(%rbp),%r15
	cmpq $0x1,%r15
	je L_394097
L_51870:
	movq %r14,0xE0(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r15
	movq %r15,0xD0(%rbp)
	movl %r14d,0xD8(%rbp)
	jmp L_51867
.p2align 0x4
L_394097:
L_51872:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x21BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x126F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x21BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xC8(%rbp),%r10
	movq %r10,0x0(%r14)
	movq 0xC0(%rbp),%r10
	movq %r10,0x8(%r14)
	movq $0x126F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	addq $0x10,%r12
	movq $0x21BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	movq %r10,0x10(%r14)
	addq $0x20,%r12
	movl 0x34(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xA8(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r14,0x0(%r11)
	movq %r13,0xA8(%rbp)
	movq %r15,0x28(%rbp)
L_51873:
	movq 0x28(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_51874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_394098:
L_52015:
	cmpq $0x1,0xD0(%rbp)
	je L_394107
L_52016:
	movq 0xE0(%rbp),%r14
	cmpq $0x1,%r14
	je L_52026
L_52017:
	movq 0x8(%r14),%r13
	movq %r13,0xD8(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x34(%rbp)
	movq $0x1,0xE0(%rbp)
L_52018:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394105
.p2align 0x4,,0x7
L_52019:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x34(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD8(%rbp),%r14
	cmpq $0x1,%r14
	je L_394099
L_52020:
	movq %r15,0xE0(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0xD8(%rbp)
	movl %r15d,0x34(%rbp)
	jmp L_52018
.p2align 0x4
L_394099:
L_52021:
	movq 0xD0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xD0(%rbp)
L_52022:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394104
.p2align 0x4,,0x7
L_52023:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x34(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_394100
L_52024:
	movq %r15,0xD8(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0xD0(%rbp)
	movl %r15d,0x34(%rbp)
	jmp L_52022
.p2align 0x4
L_394100:
L_52025:
	movq %r15,0xD0(%rbp)
L_52026:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_394101
L_52027:
	movl 0x0(%r14),%r13d
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movl %r13d,0x34(%rbp)
	movq 0xD0(%rbp),%r15
	jmp L_51865
.p2align 0x4
L_394101:
L_52028:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52029
L_52033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_52034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52034
.p2align 0x4
.long 0xC5F
L_52034:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_52029:
	movq 0xD0(%rbp),%r15
L_52030:
	cmpq $0x1,%r15
	je L_394102
L_52031:
	movl 0x0(%r15),%r14d
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x21BB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0xC8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0xC0(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x126F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x21BB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x126F,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	addq $0x10,%r12
	movq $0x21BD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r9,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq 0xA8(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	movq %r13,0x0(%r14)
	movq %r10,0xA8(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_51873
.p2align 0x4
L_394102:
L_52032:
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	jmp L_51873
.p2align 0x4
L_394104:
L_52035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_52036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52036
.p2align 0x4
.long 0xC60
L_52036:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_52023
.p2align 0x4
L_394105:
L_52037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_52038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52038
.p2align 0x4
.long 0xC61
L_52038:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	jmp L_52019
.p2align 0x4
L_394107:
L_52040:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_394108
L_52041:
	movl 0x0(%r14),%r13d
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movl %r13d,0x34(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,%r15
	jmp L_51865
.p2align 0x4
L_394108:
L_52042:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52043
L_52044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r13d
	movl %r13d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r13
	movq %r13,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_52045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52045
.p2align 0x4
.long 0xC62
L_52045:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_52043:
	movq 0xE0(%rbp),%r15
	jmp L_52030
.p2align 0x4
L_394110:
L_52046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_52047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52047
.p2align 0x4
.long 0xC63
L_52047:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	jmp L_51868
.p2align 0x4
L_394111:
L_52048:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_51872
L_52050:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_52051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52051
.p2align 0x4
.long 0xC64
L_52051:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_51872
.p2align 0x4
L_394115:
L_52064:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52065
L_52066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_52067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52067
.p2align 0x4
.long 0xC66
L_52067:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_52065:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x21BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0xA8(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r14,0x0(%r11)
	movq %r13,0xA8(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_51873
.p2align 0x4
L_394119:
L_52069:
	xorl %ecx,%ecx
	jmp L_51856
.p2align 0x4
L_394120:
L_52070:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_52071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52071
.p2align 0x4
.long 0xC67
L_52071:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_51848
.p2align 0x4
L_394121:
L_52072:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_394122
L_52073:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movl %r14d,0xB0(%rbp)
	jmp L_51840
.p2align 0x4
L_394122:
L_52074:
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_51851
.p2align 0x4
L_394124:
L_52076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_52077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52077
.p2align 0x4
.long 0xC67
L_52077:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_51841
.p2align 0x4
L_394125:
L_52078:
	movq $0x1,0x28(%rbp)
	jmp L_51851
.p2align 0x4
L_394126:
L_52087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_52088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52088
.p2align 0x4
.long 0xC65
L_52088:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_52084
.p2align 0x4
L_394127:
L_52089:
	movq $0x1,%r15
	jmp L_51838
.p2align 0x4
L_394128:
L_51837:
	movl $0x0,0x30(%rbp)
	movq $0x1,%r15
	jmp L_51838
.p2align 0x4
L_394130:
L_52090:
	movq 0xC0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_51821
L_52092:
	cmpl $0x0,%r13d
	jl L_51983
L_52093:
	movq $0x1,0xB0(%rbp)
	movl $0x0,0x34(%rbp)
.p2align 0x4,,0x7
loop_646:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394140
.p2align 0x4,,0x7
L_52094:
	movl 0x34(%rbp),%r15d
	cmpl 0x30(%rbp),%r15d
	jnl L_394135
L_52111:
	movslq %r15d,%r14
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
L_52112:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_52113
L_52115:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF59,%r15
	jne L_394133
L_52116:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x8(%r11),%r10
L_52117:
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_52118
L_52119:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	jne L_394131
L_52120:
	movq $0x1BC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
L_52114:
	movq %r15,0xB0(%rbp)
	incl 0x34(%rbp)
	jmp loop_646
.p2align 0x4
L_394131:
L_52118:
	movq 0xB0(%rbp),%r15
	jmp L_52114
.p2align 0x4
L_394133:
L_52113:
	movq 0xB0(%rbp),%r15
	jmp L_52114
.p2align 0x4
L_394135:
L_52096:
	movq 0xA8(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_52097
L_52107:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1097,%r13
	jne L_394137
L_52108:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_394136
L_52109:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movl $0x1,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
	movq %r13,%r15
L_52099:
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_52100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_394136:
L_52110:
	movl $0x1,0x30(%rbp)
	movq $0x1,%r13
	movq %r13,%r15
	jmp L_52081
.p2align 0x4
L_394137:
L_52097:
	movq 0xB0(%rbp),%r15
	cmpq $0x1,%r15
	je L_394138
L_52098:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
	movq %r14,%r15
	jmp L_52099
.p2align 0x4
L_394138:
L_52106:
	movl $0x0,0x30(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_52081
.p2align 0x4
L_394140:
L_52121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_52122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52122
.p2align 0x4
.long 0xC6A
L_52122:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_52094
.p2align 0x4
.long 0xDCF
L_54618:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%rdx
	movq 0x10(%rdx),%r15
	movq %r15,0x108(%rbp)
	movq %rdx,0x30(%rbp)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_394157
L_54619:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %r14,%rdx
	jne L_51821
L_54621:
	testq %rdx,%rdx
	jz L_394155
L_54622:
	cmpq $0x7FFFFFFF,%rdx
	ja L_51986
L_54623:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_54624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54624
.p2align 0x4
.long 0xDD0
L_54624:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq %rax,0x110(%rbp)
L_54625:
	movq $0x0,0x118(%rbp)
.p2align 0x4,,0x7
loop_692:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394153
.p2align 0x4,,0x7
L_54626:
	movq 0x118(%rbp),%r15
	cmpq 0x30(%rbp),%r15
	jnl L_394143
L_54648:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x1EC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq 0x110(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x118(%rbp)
	jmp loop_692
.p2align 0x4
L_394143:
L_54627:
	movq 0x110(%rbp),%r14
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x30(%rbp)
L_54628:
	movq 0x108(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x110(%rbp)
	cmpq %r14,%rdx
	jne L_51821
L_54630:
	testq %rdx,%rdx
	jz L_394151
L_54631:
	cmpq $0x7FFFFFFF,%rdx
	ja L_51986
L_54632:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_54633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54633
.p2align 0x4
.long 0xDD1
L_54633:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq %rax,0x118(%rbp)
L_54634:
	movq $0x0,0x120(%rbp)
.p2align 0x4,,0x7
loop_693:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394149
.p2align 0x4,,0x7
L_54635:
	movq 0x120(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnl L_394148
L_54637:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_54638:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_53135
L_54639:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF59,%r15
	je L_394146
	cmpq $0xF5A,%r15
	je L_394145
	cmpq $0xF5D,%r15
	je L_394144
	jmp L_53135
.p2align 0x4
L_394144:
L_54643:
	movq 0x0(%r13),%r15
	movq $0x1ECD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_54641:
	movq 0x118(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x120(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x120(%rbp)
	jmp loop_693
.p2align 0x4
L_394145:
L_54642:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x1ECB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_54641
.p2align 0x4
L_394146:
L_54640:
	movq 0x0(%r13),%r15
	movq $0x1EC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_54641
.p2align 0x4
L_394148:
L_54636:
	movq 0x118(%rbp),%r14
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r14)
	movq (globalObjptr+0xF68)(%rip),%r13
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1ED7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0xECD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	addq $0x40,%r12
	movq %r13,0x8(%r10)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r10)
	movq 0x50(%rbp),%r13
	movq %r13,0x18(%r10)
	movq %r14,0x20(%r10)
	movq 0x48(%rbp),%r14
	movq %r14,0x28(%r10)
	movq $0x2,0x30(%r10)
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq $0x23AF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r13)
	jmp L_53334
.p2align 0x4
L_394149:
L_54644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_54645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54645
.p2align 0x4
.long 0xDD2
L_54645:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp L_54635
.p2align 0x4
L_394151:
L_54647:
	movq (globalObjptr+0x7548)(%rip),%r15
	movq %r15,0x118(%rbp)
	jmp L_54634
.p2align 0x4
L_394153:
L_54649:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_54650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54650
.p2align 0x4
.long 0xDD3
L_54650:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_54626
.p2align 0x4
L_394155:
L_54652:
	movq (globalObjptr+0x7570)(%rip),%r15
	movq %r15,0x110(%rbp)
	jmp L_54625
.p2align 0x4
L_394157:
L_54653:
	movq $0x1,0x30(%rbp)
	jmp L_54628
.p2align 0x4
.long 0xD1C
L_53335:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x30(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x38(%rbp)
	movq 0x10(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x60(%rbp),%r10
	movq 0x8(%r10),%r13
	movq 0x0(%r10),%r14
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_51904
L_53336:
	movq %r15,0x0(%r10)
	movq 0x100(%rbp),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_394323
L_53337:
	movq 0x0(%r9),%r11
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
.p2align 0x4,,0x7
L_53339:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_394322
L_53378:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0xCBE,%r10
	jne L_394321
L_53379:
	movq 0x8(%r11),%r10
	cmpq 0x0(%r11),%r13
	movq %r13,(localObjptr+0x0)(%rip)
	je L_394161
L_53340:
	incl %ecx
	jo L_51879
L_53341:
	cmpq $0x1,%r15
	je L_394158
L_53342:
	movq 0x0(%r15),%r11
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r13
	jmp L_53339
.p2align 0x4
L_394158:
L_53343:
L_53344:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_51915
L_53345:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_106
L_53377:
	movl %ecx,0x0(%r15)
x_106:
	movq %r14,0x30(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_53347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_394161:
L_53381:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_53382:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_394319
L_54615:
	movl %ecx,0x0(%r15)
	movq %r10,0x28(%rbp)
L_53384:
	movq 0xE0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %r14,%rdx
	jne L_51821
L_53386:
	testq %rdx,%rdx
	jz L_394317
L_53387:
	cmpq $0x7FFFFFFF,%rdx
	ja L_51986
L_53388:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53389
.p2align 0x4
.long 0xD1D
L_53389:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x60(%rbp)
L_53390:
	movq $0x0,0x108(%rbp)
.p2align 0x4,,0x7
loop_654:
	movq 0x108(%rbp),%r15
	cmpq 0x58(%rbp),%r15
	jnl L_394186
L_54286:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0xE0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x110(%rbp)
	movq 0x70(%rbp),%r15
	movq 0xA8(%r15),%r14
	movq 0xA0(%r15),%r11
	movq 0x98(%r15),%r10
	movq %r10,0x118(%rbp)
	movq 0x90(%r15),%r10
	movq %r10,0x120(%rbp)
	movq 0x88(%r15),%r10
	movq %r10,0x128(%rbp)
	movq 0x80(%r15),%r10
	movq %r10,0x130(%rbp)
	movq 0x78(%r15),%r10
	movq %r10,0x138(%rbp)
	movq 0x70(%r15),%r10
	movq %r10,0x140(%rbp)
	movq 0x68(%r15),%r10
	movq %r10,0x148(%rbp)
	movq 0x60(%r15),%r10
	movq %r10,0x150(%rbp)
	movq 0x58(%r15),%r10
	movq %r10,0x158(%rbp)
	movq 0x50(%r15),%r10
	movq %r10,0x160(%rbp)
	movq 0x48(%r15),%r10
	movq %r10,0x168(%rbp)
	movq 0x40(%r15),%r10
	movq %r10,0x170(%rbp)
	movq 0x38(%r15),%r10
	movq %r10,0x178(%rbp)
	movq 0x30(%r15),%r10
	movq %r10,0x180(%rbp)
	movq 0x28(%r15),%r10
	movq %r10,0x188(%rbp)
	movq 0x20(%r15),%r10
	movq %r10,0x190(%rbp)
	movq 0x18(%r15),%r10
	movq %r10,0x198(%rbp)
	movq 0x10(%r15),%r10
	movq %r10,0x1A0(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x1A8(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x1B0(%rbp)
	cmpq $0x1,%r13
	je L_394183
	cmpq $0x2,%r13
	je L_394180
	cmpq $0x3,%r13
	je L_394178
L_54287:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1090,%r15
	je L_394174
	cmpq $0x1091,%r15
	je L_394171
	cmpq $0x1093,%r15
	je L_394166
	cmpq $0x1094,%r15
	je L_394165
	cmpq $0x1095,%r15
	je L_394164
	cmpq $0x1096,%r15
	je L_394162
L_54288:
	movq %r14,0x30(%rbp)
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (toString_43+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_22
.p2align 0x4
L_394162:
L_54470:
	movq 0x10(%r13),%r15
	movq %r15,0x130(%rbp)
	movq 0x8(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x138(%rbp)
	movl 0x0(%r13),%r15d
	testl %r15d,%r15d
	jnz L_394163
L_54471:
	movq %r11,0x150(%rbp)
	movq %r14,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_54472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1315
.p2align 0x4
L_394163:
L_54473:
	movq 0x138(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_54474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1315
.p2align 0x4
L_394164:
L_54455:
	movq 0x8(%r13),%r15
	movq %r15,0x118(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x138(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_54456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
L_394165:
L_54368:
	movq 0x10(%r13),%r15
	movq %r15,0x120(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x128(%rbp)
	movq 0x8(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_54369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1315
.p2align 0x4
L_394166:
L_54339:
	movq 0x10(%r13),%r14
	movq %r14,0x120(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x128(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x130(%rbp)
	andq $0xFF,%r14
	cmpq $0x43,%r14
	jne L_394167
L_54367:
	movq (globalObjptr+0xF68)(%rip),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
.p2align 0x4,,0x7
L_54317:
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x108(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x108(%rbp)
	jmp loop_654
.p2align 0x4
L_394167:
L_54340:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54341
L_54365:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_54366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54366
.p2align 0x4
.long 0xD97
L_54366:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_54341:
	movq 0x120(%rbp),%r15
	andq $0x3,%r15
	jnz L_54342
L_54364:
L_54342:
	movq 0x130(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_51821
L_54344:
	movq %r11,0x140(%rbp)
	movq $0x4085,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_54345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_394171:
L_54332:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54333
L_54337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_54338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54338
.p2align 0x4
.long 0xD8E
L_54338:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_54333:
	movq 0x110(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x1EC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl $0x0,0x4(%r15)
	movq %r15,0x118(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_54334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54334
.p2align 0x4
.long 0xD92
L_54334:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_684:
	cmpq $0x1,%r15
	jnl L_394172
L_54336:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x118(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_684
.p2align 0x4
L_394172:
L_54335:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_54317
.p2align 0x4
L_394174:
L_54306:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54307
L_54330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_54331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54331
.p2align 0x4
.long 0xD91
L_54331:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_54307:
	movq 0x110(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_53135
L_54308:
	movq 0x8(%r15),%r13
	movq %r13,0x110(%rbp)
	movq $0x1EA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x120(%rbp)
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq 0x178(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_394175
L_54309:
	movq %r14,0x140(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_54310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394175:
L_54324:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_54325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_394178:
L_54539:
	movq 0x140(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_394179
L_54540:
	movq %r14,0x1C0(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_54541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394179:
L_54608:
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_54609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_394180:
L_54517:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_53135
L_54518:
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_394181
L_54519:
	movq %r14,0x188(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_54520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394181:
L_54533:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_54534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_394183:
L_54495:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_53135
L_54496:
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_394184
L_54497:
	movq %r14,0x188(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_54498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394184:
L_54511:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_54512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_394186:
L_53391:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53392
L_54284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_54285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54285
.p2align 0x4
.long 0xD8B
L_54285:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53392:
	movq 0x60(%rbp),%r15
	movq $0x1749,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x58(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_51821
L_53394:
	testl %r15d,%r15d
	jz L_394313
L_53395:
	cmpl $0x0,%r15d
	movl %r15d,(localWord32+0x0)(%rip)
	jl L_51983
L_53396:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_655:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_394189
L_54278:
	movslq %ebx,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_51821
L_54280:
	addl %ecx,%r10d
	jo L_51879
L_54281:
	incl %ebx
	movl %r10d,%ecx
	jmp loop_655
.p2align 0x4
L_394189:
L_53397:
	cmpq $0x0,0x58(%rbp)
	jna L_51859
L_53399:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movslq %ecx,%rdx
	movq %rdx,0x70(%rbp)
	testq %rdx,%rdx
	jz L_394310
L_53400:
	cmpq $0x7FFFFFFF,%rdx
	ja L_51986
L_53401:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53402
.p2align 0x4
.long 0xD1E
L_53402:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0xE0(%rbp)
L_53403:
	xorl %ecx,%ecx
	movq 0x68(%rbp),%r14
	xorl %ebx,%ebx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_656:
	cmpq 0x70(%rbp),%r15
	jnl L_394195
.p2align 0x4,,0x7
loop_682:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_51821
L_54268:
	cmpl %r11d,%ecx
	jl L_394192
L_54269:
	incl %ebx
	jo L_51879
L_54270:
	movslq %ebx,%r13
	cmpq 0x58(%rbp),%r13
	jnb L_51859
L_54272:
	movq 0x60(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r14
	xorl %ecx,%ecx
	jmp loop_682
.p2align 0x4
L_394192:
L_54273:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_51859
L_54275:
	movq 0x0(%r14,%r11,8),%r13
	incl %ecx
	movq 0xE0(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_656
.p2align 0x4
L_394195:
L_53404:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53405
L_54264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_54265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54265
.p2align 0x4
.long 0xD8A
L_54265:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53405:
	movq 0xE0(%rbp),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x58(%rbp)
L_53406:
	movq 0x78(%rbp),%r14
	movq 0x90(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x88(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x80(%r14),%r13
	movq 0x78(%r14),%r10
	movq %r10,0x70(%rbp)
	movq 0x70(%r14),%r10
	movq %r10,0xE0(%rbp)
	movq 0x68(%r14),%r10
	movq %r10,0x108(%rbp)
	movq 0x60(%r14),%r10
	movq %r10,0x110(%rbp)
	movq 0x58(%r14),%r10
	movq %r10,0x118(%rbp)
	movq 0x50(%r14),%r10
	movq 0x48(%r14),%r9
	movq %r9,0x120(%rbp)
	movq 0x40(%r14),%r15
	movq 0x38(%r14),%r9
	movq 0x30(%r14),%r8
	movq %r8,0x128(%rbp)
	movq 0x28(%r14),%r8
	movq %r8,0x130(%rbp)
	movq 0x20(%r14),%r8
	movq 0x18(%r14),%rsp
	movq %rsp,0x138(%rbp)
	movq 0x10(%r14),%rsp
	movq %rsp,0x140(%rbp)
	movq 0x8(%r14),%rsp
	movq %rsp,0x148(%rbp)
	movq 0x0(%r14),%rsp
	movq %rsp,0x150(%rbp)
	movq 0xD8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x109A,%r11
	je L_394305
	cmpq $0x109B,%r11
	je L_394302
	cmpq $0x109C,%r11
	je L_394300
	cmpq $0x109D,%r11
	je L_394297
	cmpq $0x109E,%r11
	je L_394295
	cmpq $0x109F,%r11
	je L_394293
L_53407:
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%rsp
	movq %rsp,0x60(%rbp)
	movq 0x0(%r14),%rsp
	movq %rsp,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r14
	movl %r14d,%esp
	movslq %esp,%r11
	cmpq %r14,%r11
	jne L_51821
L_53409:
	cmpl $0x0,%esp
	je L_394288
	cmpl $0x1,%esp
	je L_394196
	movq %r13,%r11
x_107:
	movq %r11,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_53410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
L_394196:
L_53855:
	cmpq $0x1,0x60(%rbp)
	jne x_1311
L_53856:
	cmpq $0x0,%r14
	jna L_51859
L_53858:
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r11
	movq 0x0(%r11),%r10
	movq $0x1ED7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	addq $0x10,%r12
simple_13:
	movq (globalObjptr+0xF68)(%rip),%r14
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xF0(%rbp),%r13
	cmpq $0x1,%r13
	je L_394286
	cmpq $0x2,%r13
	je L_394284
L_53412:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1097,%r11
	je L_394220
L_53584:
	movq %r15,0x48(%rbp)
	movq %r14,0x60(%rbp)
L_53585:
	movq 0xF8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x68(%rbp)
	cmpq %r14,%rdx
	jne L_51821
L_53587:
	testq %rdx,%rdx
	jz L_394218
L_53588:
	cmpq $0x7FFFFFFF,%rdx
	ja L_51986
L_53589:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53590
.p2align 0x4
.long 0xD2A
L_53590:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x70(%rbp)
L_53591:
	movq $0x1,%r15
	movq $0x0,0x78(%rbp)
loop_664:
	movq 0x78(%rbp),%r14
	cmpq 0x68(%rbp),%r14
	jnl L_394197
L_53643:
	movq %r15,0x110(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r14
	movq 0xF8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xB0(%rbp)
	movq %r11,0x118(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x110,%rbp
	leaq (L_53644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp align_0
.p2align 0x4
L_394197:
L_53592:
	movq 0x70(%rbp),%r15
	movq $0x8FF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %r13,%rdx
	jne L_51821
L_53594:
	testq %rdx,%rdx
	jz L_394215
L_53595:
	cmpq $0x7FFFFFFF,%rdx
	ja L_51986
L_53596:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53597
.p2align 0x4
.long 0xD2B
L_53597:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x78(%rbp)
L_53598:
	movq $0x0,0x80(%rbp)
.p2align 0x4,,0x7
loop_665:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394213
.p2align 0x4,,0x7
L_53599:
	movq 0x80(%rbp),%r15
	cmpq 0x30(%rbp),%r15
	jnl L_394198
L_53638:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x70(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x1EC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq 0x78(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x80(%rbp)
	jmp loop_665
.p2align 0x4
L_394198:
L_53600:
	movq 0x78(%rbp),%r13
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r13)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_51904
L_53601:
	movq %r14,0x0(%r13)
	movq 0x100(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_394211
L_53602:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x80(%rbp)
	xchgq %r11,%r15
.p2align 0x4,,0x7
L_53604:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_53605
L_53613:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xDA0,%r13
	jne L_53605
L_53614:
	movq 0x0(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x98(%rbp),%r13
	cmpq %r13,0x8(%r14)
	je L_394203
L_53605:
	movl 0x80(%rbp),%r13d
	incl %r13d
	jo L_51879
L_53606:
	cmpq $0x1,%r15
	je L_394199
L_53607:
	movl %r13d,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_53604
.p2align 0x4
L_394199:
	movl %r13d,%ecx
L_53609:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_53610:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_53135
L_53612:
	movl %ecx,0x0(%r15)
	jmp L_53135
.p2align 0x4
L_394203:
L_53616:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53617
L_53635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_53636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53636
.p2align 0x4
.long 0xD31
L_53636:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_53617:
	movl 0x80(%rbp),%r15d
	movslq %r15d,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_51915
L_53618:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %r15d,0x0(%r14)
	jl L_394205
L_53619:
	movq 0x88(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_53135
L_53621:
	shrq $0x1,%r15
	movl %r15d,%ecx
L_53622:
	movq $0x1ED3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	movl %ecx,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x4099,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xF8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_53623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_394205:
L_53632:
	movq (globalObjptr+0x1078)(%rip),%r15
	movl 0x80(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_53135
L_53634:
	shrq $0x1,%r15
	movl %r15d,%ecx
	jmp L_53622
.p2align 0x4
L_394211:
L_53637:
	xorl %ecx,%ecx
	jmp L_53609
.p2align 0x4
L_394213:
L_53639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53640
.p2align 0x4
.long 0xD32
L_53640:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	jmp L_53599
.p2align 0x4
L_394215:
L_53642:
	movq (globalObjptr+0x7598)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_53598
.p2align 0x4
L_394218:
L_53662:
	movq (globalObjptr+0x7590)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_53591
.p2align 0x4
L_394220:
L_53413:
	movq %r15,0x30(%rbp)
	movq 0xF0(%rbp),%r9
	movl 0x1C(%r9),%r8d
	movl %r8d,(localWord32+0x0)(%rip)
	movq 0x40(%r9),%r15
	movb 0x21(%r9),%r8b
	movb %r8b,(localWord8+0x0)(%rip)
	movq 0x38(%r9),%r10
	movl 0x18(%r9),%r8d
	movl %r8d,(localWord32+0x4)(%rip)
	movq 0x30(%r9),%r11
	movl 0x14(%r9),%r8d
	movl %r8d,(localWord32+0x8)(%rip)
	movl 0x10(%r9),%r8d
	movl %r8d,(localWord32+0xC)(%rip)
	movl 0xC(%r9),%ebx
	movl 0x8(%r9),%ecx
	movb 0x20(%r9),%dl
	movq 0x0(%r9),%r8
	movq 0x28(%r9),%r13
	movq %r14,0x48(%rbp)
	movq %r8,%r14
L_53414:
	movq $0x1243,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x60(%rbp)
	movq %r14,0x0(%r9)
	movl (localWord32+0x0)(%rip),%r14d
	movl %r14d,0x8(%r9)
	movl (localWord32+0x4)(%rip),%r14d
	movl %r14d,0xC(%r9)
	movl (localWord32+0x8)(%rip),%r14d
	movl %r14d,0x10(%r9)
	movl (localWord32+0xC)(%rip),%r14d
	movl %r14d,0x14(%r9)
	movl %ebx,0x18(%r9)
	movl %ecx,0x1C(%r9)
	movq %r15,0x28(%r9)
	movq %r10,0x30(%r9)
	movq %r11,0x38(%r9)
	movq %r13,0x40(%r9)
	addq $0x50,%r12
	movzbl (localWord8+0x0)(%rip),%r15d
	movzbl %dl,%r14d
	shll $0x8,%r14d
	orl %r14d,%r15d
	movl %r15d,0x20(%r9)
	movl $0x0,0x24(%r9)
	movq 0xF8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_51821
L_53416:
	cmpl $0x0,%r15d
	je L_394223
	cmpl $0x1,%r15d
	je L_394221
L_53417:
	movq (globalObjptr+0x7588)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_394221:
L_53567:
	cmpq $0x0,%r14
	jna L_51859
L_53569:
	movq 0xF8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x110(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_53570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1315
.p2align 0x4
L_394223:
L_53418:
	movq $0x1,0x68(%rbp)
L_53419:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_51904
L_53420:
	movq %r15,0x0(%r13)
	movq 0x100(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_394281
L_53421:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x70(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_53423:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_53424
L_53556:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xDA0,%r13
	jne L_53424
L_53557:
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r14),%r13
	cmpq %r13,0x98(%rbp)
	je L_394275
L_53424:
	movl 0x70(%rbp),%r13d
	incl %r13d
	movl %r13d,0x74(%rbp)
	jo L_51879
L_53425:
	cmpq $0x1,%r15
	je L_394224
L_53426:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x70(%rbp)
	jmp L_53423
.p2align 0x4
L_394224:
L_53427:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53428
L_53554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53555
.p2align 0x4
.long 0xD27
L_53555:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_53428:
	movl 0x74(%rbp),%ecx
L_53429:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_53430:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_394271
L_53553:
	movl %ecx,0x0(%r14)
	xorq %r15,%r15
L_53432:
	movq $0x1ED1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%r14)
	movq (globalObjptr+0xF68)(%rip),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x60(%rbp)
	movq 0x48(%rbp),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x48(%rbp)
	movq %r15,0x30(%rbp)
L_53433:
	movq 0xC8(%rbp),%r11
	movb 0x0(%r11),%r13b
	testb %r13b,%r13b
	jz L_394257
L_53434:
	movq (globalObjptr+0xF68)(%rip),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x58(%rbp),%r14
L_53435:
	movq %r15,0x58(%rbp)
	movq $0x23B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x23B3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x23B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_53436:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394256
.p2align 0x4,,0x7
L_53437:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF63,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2979,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_394225
L_53438:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_53436
.p2align 0x4
L_394225:
L_53439:
	movq %r13,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_53440:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394255
.p2align 0x4,,0x7
L_53441:
	movq $0x2979,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_394226
L_53442:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_53440
.p2align 0x4
L_394226:
L_53443:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_394248
L_53444:
	movq 0x58(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_53445:
	addq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r13
	je L_394227
L_53446:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_53445
.p2align 0x4
L_394227:
L_53447:
	testq %r15,%r15
	jz L_394247
L_53448:
	cmpq $0x7FFFFFFF,%r15
	ja L_51986
L_53449:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53450
.p2align 0x4
.long 0xD20
L_53450:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,%r15
L_53451:
	movq 0x68(%rbp),%r10
	movq 0x58(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_657:
	cmpq 0x30(%rbp),%r14
	jnl L_394230
.p2align 0x4,,0x7
loop_660:
	cmpq 0x0(%r11),%r13
	jl L_394229
L_53490:
	cmpq $0x1,%r10
	je L_394228
L_53491:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_660
.p2align 0x4
L_394228:
L_53493:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_394229:
L_53494:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_657
.p2align 0x4
L_394230:
L_53452:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_394245
L_53453:
	movq %r14,0x30(%rbp)
	movq %r15,0x40(%rbp)
L_53454:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %r14,%rdx
	jne L_51821
L_53456:
	testq %rdx,%rdx
	jz L_394243
L_53457:
	cmpq $0x7FFFFFFF,%rdx
	ja L_51986
L_53458:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53459
.p2align 0x4
.long 0xD21
L_53459:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0x68(%rbp)
L_53460:
	movq $0x0,0x70(%rbp)
.p2align 0x4,,0x7
loop_658:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394241
.p2align 0x4,,0x7
L_53461:
	movq 0x70(%rbp),%r15
	cmpq 0x58(%rbp),%r15
	jnl L_394231
L_53483:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x1EC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq 0x68(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x70(%rbp)
	jmp loop_658
.p2align 0x4
L_394231:
L_53462:
	movq 0x68(%rbp),%r14
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x30(%rbp)
L_53463:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %rdx,%r14
	jne L_51821
L_53465:
	testq %rdx,%rdx
	jz L_394239
L_53466:
	cmpq $0x7FFFFFFF,%rdx
	ja L_51986
L_53467:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53468
.p2align 0x4
.long 0xD21
L_53468:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0x68(%rbp)
L_53469:
	movq $0x0,0x70(%rbp)
.p2align 0x4,,0x7
loop_659:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394237
.p2align 0x4,,0x7
L_53470:
	movq 0x70(%rbp),%r15
	cmpq 0x58(%rbp),%r15
	jnl L_394236
L_53472:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_53473:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_53135
L_53474:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF59,%r15
	je L_394234
	cmpq $0xF5A,%r15
	je L_394233
	cmpq $0xF5D,%r15
	je L_394232
	jmp L_53135
.p2align 0x4
L_394232:
L_53478:
	movq 0x0(%r13),%r15
	movq $0x1ECD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_53476:
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_659
.p2align 0x4
L_394233:
L_53477:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x1ECB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_53476
.p2align 0x4
L_394234:
L_53475:
	movq 0x0(%r13),%r15
	movq $0x1EC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_53476
.p2align 0x4
L_394236:
L_53471:
	movq 0x68(%rbp),%r14
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0xECD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x40,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x30(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x50(%rbp),%r11
	movq %r11,0x18(%r13)
	movq %r14,0x20(%r13)
	movq 0xE8(%rbp),%r14
	movq %r14,0x28(%r13)
	movq 0x48(%rbp),%r14
	movq %r14,0x30(%r13)
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r14
	movq $0x23AF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r10,0x0(%r11)
	jmp L_51919
.p2align 0x4
L_394237:
L_53479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53480
.p2align 0x4
.long 0xD22
L_53480:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_53470
.p2align 0x4
L_394239:
L_53482:
	movq (globalObjptr+0x7548)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_53469
.p2align 0x4
L_394241:
L_53484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53485
.p2align 0x4
.long 0xD22
L_53485:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_53461
.p2align 0x4
L_394243:
L_53487:
	movq (globalObjptr+0x75B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_53460
.p2align 0x4
L_394245:
L_53488:
	movq %r15,0x40(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_53463
.p2align 0x4
L_394247:
L_53496:
	movq (globalObjptr+0x75A8)(%rip),%r14
	xchgq %r14,%r15
	jmp L_53451
.p2align 0x4
L_394248:
L_53497:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r14)
	movq %r14,0x30(%rbp)
	je L_394253
L_53498:
	testq %r13,%r13
	jz L_394252
L_53499:
	cmpq $0x7FFFFFFF,%r13
	ja L_51986
L_53500:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53501
.p2align 0x4
.long 0xD21
L_53501:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,%r15
L_53502:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_661:
	cmpq 0x68(%rbp),%r14
	jnl L_394249
L_53506:
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_661
.p2align 0x4
L_394249:
L_53503:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_394250
L_53504:
	movq %r14,0x30(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_53454
.p2align 0x4
L_394250:
L_53505:
	movq %r15,0x40(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_53463
.p2align 0x4
L_394252:
L_53508:
	movq (globalObjptr+0x75B0)(%rip),%r15
	jmp L_53502
.p2align 0x4
L_394253:
L_53509:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_394254
L_53510:
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_53454
.p2align 0x4
L_394254:
L_53511:
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_53463
.p2align 0x4
L_394255:
L_53512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53513
.p2align 0x4
.long 0xD23
L_53513:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_53441
.p2align 0x4
L_394256:
L_53514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53515
.p2align 0x4
.long 0xD23
L_53515:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_53437
.p2align 0x4
L_394257:
L_53516:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x70(%rbp)
	movl %r14d,%r13d
	movl %r13d,0x78(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_51821
L_53518:
	testl %r13d,%r13d
	jz L_53523
L_53519:
	cmpq $0x0,%r14
	jna L_51859
L_53521:
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
L_53522:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_53523
L_53532:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF61,%r15
	jne L_394266
L_53533:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53534
.p2align 0x4
.long 0xD24
L_53534:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0x88(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_662:
	cmpq $0x1,%r15
	jnl L_394258
L_53551:
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_662
.p2align 0x4
L_394258:
L_53535:
	movq 0x88(%rbp),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x78(%rbp),%r15d
	decl %r15d
	jo L_51879
L_53536:
	movslq %r15d,%rdx
	movq %rdx,0x78(%rbp)
	testq %rdx,%rdx
	jz L_394264
L_53537:
	cmpq $0x7FFFFFFF,%rdx
	ja L_51986
L_53538:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53539
.p2align 0x4
.long 0xD25
L_53539:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0x80(%rbp)
L_53540:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_663:
	cmpq 0x78(%rbp),%r15
	jnl L_394261
L_53545:
	movl %r15d,%r14d
	incl %r14d
	jo L_51879
L_53546:
	movslq %r14d,%r13
	cmpq 0x70(%rbp),%r13
	jnb L_51859
L_53548:
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_663
.p2align 0x4
L_394261:
L_53541:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53542
L_53543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53544
.p2align 0x4
.long 0xD26
L_53544:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_53542:
	movq 0x80(%rbp),%r14
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x88(%rbp),%r15
	jmp L_53435
.p2align 0x4
L_394264:
L_53550:
	movq (globalObjptr+0x75A0)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_53540
.p2align 0x4
L_394266:
L_53523:
	movq 0xE8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_53524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_394271:
L_53431:
	xorq %r15,%r15
	jmp L_53432
.p2align 0x4
L_394275:
L_53559:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53560
L_53564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53565
.p2align 0x4
.long 0xD27
L_53565:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_53560:
	movl 0x70(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_51915
L_53561:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_394276
L_53562:
	movq 0x78(%rbp),%r15
	jmp L_53432
.p2align 0x4
L_394276:
L_53563:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x70(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x78(%rbp),%r15
	jmp L_53432
.p2align 0x4
L_394281:
L_53566:
	xorl %ecx,%ecx
	jmp L_53429
.p2align 0x4
L_394284:
L_53665:
	movq %r15,0x30(%rbp)
	movq %r14,0x48(%rbp)
L_53666:
	movq 0xF8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_51821
L_53668:
	movq %r11,0x118(%rbp)
	movq $0x409B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_53669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_394286:
L_53663:
L_53664:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0xF68)(%rip),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x48(%rbp)
	jmp L_53433
.p2align 0x4
x_1311:
	movq %r13,%r11
	jmp x_107
.p2align 0x4
L_394288:
L_53809:
	cmpq $0x1,0x60(%rbp)
	jne L_394291
L_53811:
	movq 0x10(%r9),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%r9),%r15
	movq %r15,0x68(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA8F,%rcx
	movq $0x2C,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_53812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53812
.p2align 0x4
.long 0xD4C
L_53812:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq %rax,0x70(%rbp)
	movq $0x0,0x78(%rbp)
loop_671:
	cmpq $0x2C,0x78(%rbp)
	jl L_394289
L_53813:
	movq 0x70(%rbp),%r15
	movq $0xEC9,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x140(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_53814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_38
.p2align 0x4
L_394289:
L_53846:
	movq 0x78(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	cmpq $0x2C,%r15
	jnb L_51859
L_53848:
	movq (globalObjptr+0xED30)(%rip),%r14
	movzbq 0x0(%r14,%r15,1),%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0xD8(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_53849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_394291:
L_53810:
	movq $0x1ED7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp simple_13
.p2align 0x4
L_394293:
L_54251:
	movq 0x20(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x78(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0xE0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_51821
L_54253:
	movq %r11,0x120(%rbp)
	movq $0x4085,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_54254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_394295:
L_54214:
	movq 0x10(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_51821
L_54216:
	movq %r11,0x168(%rbp)
	movq $0x4085,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_54217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_394297:
L_54070:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x78(%rbp)
	cmpq $0x1,%r15
	je L_394299
	cmpq $0x2,%r15
	je L_394298
L_54071:
	movq %r13,0x138(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x120(%rbp)
	movq %r14,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_54072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_31
.p2align 0x4
L_394298:
L_54209:
	movq $0x1,0x128(%rbp)
	movq $0x0,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_54210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_394299:
L_54204:
	movq $0x1,0x128(%rbp)
	movq $0x0,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_54205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_394300:
L_53949:
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_51821
L_53951:
	movq %r11,0x160(%rbp)
	movq $0x4085,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_53952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_394302:
L_53880:
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r10
	je L_53135
L_53881:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_51821
L_53883:
	movq %r13,0x138(%rbp)
	movq $0x4095,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r15,0x130(%rbp)
	addq $0x10,%r12
	addq $0x130,%rbp
	leaq (L_53884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_394305:
L_53859:
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r8
	je L_53135
L_53860:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_51821
L_53862:
	movq %r13,0x130(%rbp)
	movq $0x4097,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x0(%r15)
	movq %r15,0x128(%rbp)
	addq $0x10,%r12
	addq $0x128,%rbp
	leaq (L_53863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_394310:
L_54277:
	movq (globalObjptr+0x7580)(%rip),%r15
	movq %r15,0xE0(%rbp)
	jmp L_53403
.p2align 0x4
L_394313:
L_54283:
	movq (globalObjptr+0xF68)(%rip),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x58(%rbp)
	jmp L_53406
.p2align 0x4
L_394317:
L_54614:
	movq (globalObjptr+0x7578)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_53390
.p2align 0x4
L_394319:
L_53383:
	movq %r10,0x28(%rbp)
	jmp L_53384
.p2align 0x4
L_394321:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_53340
.p2align 0x4
L_394322:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_53340
.p2align 0x4
L_394323:
L_54616:
	xorl %ecx,%ecx
	jmp L_53344
.p2align 0x4
.long 0x56C
L_53331:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_51919
.p2align 0x4
.long 0x5BF
L_53276:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r10
	movq %r10,0x40(%rbp)
	movq 0x28(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x30(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_51904
L_53277:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_394334
L_53278:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	movl $0x0,0x28(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_53280:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_394333
L_53318:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xCC2,%r10
	jne L_394332
L_53319:
	movq 0x8(%r15),%r10
	movq %r10,0x48(%rbp)
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_394328
L_53281:
	movl 0x28(%rbp),%r10d
	incl %r10d
	jo L_51879
L_53282:
	cmpq $0x1,%r14
	je L_394325
L_53283:
	movl %r10d,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_53280
.p2align 0x4
L_394325:
	movl %r10d,%ecx
L_53285:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_53286:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_105
L_53317:
	movl %ecx,0x0(%r15)
x_105:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_53288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_394328:
L_53321:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53322
L_53327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_53328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53328
.p2align 0x4
.long 0xCA7
L_53328:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_53322:
	movl 0x28(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_51915
L_53323:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_394329
L_53324:
	movq 0x48(%rbp),%r15
L_53325:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x11F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x0(%r13),%r15
	movq $0x23C3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq %r11,0x0(%r13)
	jmp L_51919
.p2align 0x4
L_394329:
L_53326:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x48(%rbp),%r15
	jmp L_53325
.p2align 0x4
L_394332:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_53281
.p2align 0x4
L_394333:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_53281
.p2align 0x4
L_394334:
L_53329:
	xorl %ecx,%ecx
	jmp L_53285
.p2align 0x4
.long 0x543
L_53266:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_51919
L_53267:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
L_53268:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394337
.p2align 0x4,,0x7
L_53269:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x11F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r13
	movq $0x23C3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_51919
L_53270:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_53268
.p2align 0x4
L_394337:
L_53272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_53273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53273
.p2align 0x4
.long 0x5AB
L_53273:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_53269
.p2align 0x4
.long 0xC73
L_53246:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53247
L_53262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_53263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53263
.p2align 0x4
.long 0x5AA
L_53263:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_53247:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1099,%r14
	je L_394343
	cmpq $0x109C,%r14
	je L_394342
	cmpq $0x109E,%r14
	je L_394340
	cmpq $0x109F,%r14
	je L_394339
	jmp L_51919
.p2align 0x4
L_394339:
L_53260:
	movq 0x38(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_53261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp same_0
.p2align 0x4
L_394340:
L_53257:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_51919
L_53258:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp same_0
.p2align 0x4
L_394342:
L_53256:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp same_0
.p2align 0x4
L_394343:
L_53248:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r14
	je L_394344
L_53249:
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_53250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp same_0
.p2align 0x4
L_394344:
L_53252:
	movq $0x3635,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	movb $0x0,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
.long 0x5F9
L_53174:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_53175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xC6F
L_52214:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_51919
.p2align 0x4
.long 0xCA4
L_53146:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_53147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xC73
L_53139:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53140
L_53143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_53144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53144
.p2align 0x4
.long 0x538
L_53144:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_53140:
	movq 0x30(%rbp),%r15
	andq $0x1,%r15
	jnz L_51929
L_53141:
	movq $0x1955,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_51919
.p2align 0x4
.long 0xCC4
L_52846:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52847
L_53098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_53099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53099
.p2align 0x4
.long 0xD07
L_53099:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_52847:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x130E,%r14
	je L_394360
L_52958:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0xD0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x28(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_51859
L_52960:
	movl 0x0(%r14,%r15,4),%r11d
	testl %r11d,%r11d
	jz L_394348
L_53089:
	movq %r13,0x140(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_53090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maxPath_0
.p2align 0x4
L_394348:
L_52961:
L_52962:
	movq 0x30(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_52963
L_53038:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x108D,%r15
	jne L_394357
L_53039:
	movq 0x0(%r14),%r15
	movq $0x1,0x28(%rbp)
L_53041:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_53042
L_53043:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_394355
L_53044:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xD8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq %r13,%r15
	andq $0x1,%r15
	andq $0x1,%r15
	jz L_394352
L_53045:
	cmpq $0x1,%r13
	jl L_394351
L_53047:
	movq 0x30(%rbp),%r15
	movq $0x1,0x30(%rbp)
L_53048:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	cmpq $0x1,%r15
	je L_394349
L_53049:
	movq %r15,0x50(%rbp)
	movq $0x3,0x78(%rbp)
	movq $0x1,0x80(%rbp)
next_11:
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq $0x5,0x138(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_53050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
L_394349:
L_53073:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_394350
L_53074:
	movq $0x1,%r15
L_53061:
	movq %r15,0x138(%rbp)
	movq %r14,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_53062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
L_394350:
L_53075:
	movq $0x1,%r15
L_53064:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x138(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (heapCheckNonZero_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_394351:
L_53077:
	movq 0x30(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_53078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
L_394352:
L_53082:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53083
L_53087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_53088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53088
.p2align 0x4
.long 0xD04
L_53088:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_53083:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x30(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_53084:
	cmpl $0x0,%eax
	jl L_53077
	jmp L_53047
.p2align 0x4
L_394355:
L_53042:
	movq (globalObjptr+0xDA8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_394357:
L_52963:
	movq $0x1,0x28(%rbp)
L_52964:
	movq 0x68(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_52965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_394360:
L_52848:
	movq 0xD0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_51859
L_52850:
	movl 0x0(%r13,%r14,4),%r10d
	testl %r10d,%r10d
	jz L_394361
L_52953:
	movq %r11,0x140(%rbp)
	movl 0x24(%rbp),%r14d
	movl %r14d,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_52954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maxPath_0
.p2align 0x4
L_394361:
L_52851:
	movq $0x1,%r14
	xchgq %r14,%r15
L_52852:
	cmpq $0x1,%r15
	je L_394365
L_52853:
	movq %r15,0x28(%rbp)
heapCheckNonZero_0:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0x401,%r14
	andq $0x1,%r14
	jz L_394364
L_52854:
	cmpq $0x401,%r15
	jg csize_2
csize_0:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_394362
L_52856:
	movq %r14,0x130(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_52857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394362:
L_52885:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_52886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
csize_2:
csize_1:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_394363
L_52891:
	movq %r14,0x140(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x138(%rbp)
	leaq L_52900(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x138,%rbp
	leaq (L_52892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394363:
L_52920:
	movq %r11,0x110(%rbp)
	leaq L_52900(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_52921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_394364:
L_52925:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x401,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_52926:
	cmpl $0x0,%eax
	jg csize_1
	jmp csize_0
.p2align 0x4
L_394365:
L_52929:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_394366
L_52930:
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_51919
.p2align 0x4
L_394366:
L_52931:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_394367
L_52932:
	movq %r14,0x130(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_52933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394367:
L_52948:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_52949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xD0A
L_53120:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movl 0x140(%rbp),%r15d
	movl %r15d,0xA4(%rbp)
	movl %r15d,0x138(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (toIntInf_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maxPath_0
.p2align 0x4
.long 0x4BA
L_52781:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52782
L_52841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_52842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52842
.p2align 0x4
.long 0xC9E
L_52842:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_52782:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x60(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_394373
L_52783:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x109D,%r15
	jne L_394372
L_52785:
	movq 0x10(%r14),%r15
L_52786:
	cmpq $0x1,%r15
	je L_51919
	cmpq $0x2,%r15
	je L_51919
L_52787:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_52788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_34
.p2align 0x4
L_394372:
L_52784:
	movq $0x36E1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x14A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq $0x15,0x0(%r14)
	movq $0xB,0x10(%r14)
	movq %r14,0x30(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
L_394373:
L_52832:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movq $0x262D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x10(%r15)
	movw 0x0(%r14),%r15w
	movw %r15w,0x80(%rbp)
	movq %r13,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_52833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_0
.p2align 0x4
.long 0xCA4
L_52742:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52743
L_52778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_52779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52779
.p2align 0x4
.long 0xCA0
L_52779:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_52743:
	movq 0x30(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_52748
	cmpq $0x2,%r14
	je L_52748
L_52744:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1097,%r13
	jne L_52770
L_52745:
	movl 0xC(%r14),%r13d
	testl %r13d,%r13d
	jz L_394375
L_52770:
	movq %r15,0x68(%rbp)
	movq $0x338D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_52771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_394375:
L_52748:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_52749
L_52766:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1098,%r14
	jne L_394376
L_52767:
	movq $0x334B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_52768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_394376:
L_52749:
	movq 0x38(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_51919
L_52750:
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_51821
L_52752:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_651:
	cmpl %ebx,%ecx
	je L_51919
L_52753:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_51859
L_52755:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	je L_52760
	cmpq $0x2,%r11
	je L_52760
	cmpq $0x3,%r11
	je L_52760
L_52756:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x1090,%r14
	je L_394378
L_52757:
	incl %ebx
	jo L_51879
L_52758:
	jmp loop_651
.p2align 0x4
L_394378:
L_52760:
	movq 0x38(%rbp),%r15
	movl $0x1,0x0(%r15)
	jmp L_51919
.p2align 0x4
.long 0xC6F
L_52740:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_51919
.p2align 0x4
.long 0xCA9
L_52702:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52703
L_52737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_52738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52738
.p2align 0x4
.long 0xC9D
L_52738:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_52703:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq $0x335F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_52704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x5F9
L_52693:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52694
L_52699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_52700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52700
.p2align 0x4
.long 0xC71
L_52700:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_52694:
	movq $0x328F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_52695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0xCA5
L_52673:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52674
L_52679:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_52680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52680
.p2align 0x4
.long 0xCA7
L_52680:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_52674:
	movq $0x3291,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_52675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0xCA4
L_52652:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52653
L_52657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_52658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52658
.p2align 0x4
.long 0xCA0
L_52658:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_52653:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_394394
L_52654:
L_52655:
	movq $0x36D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x14A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq $0x9,0x0(%r15)
	movq $0x3,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
L_394394:
L_52656:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_52655
.p2align 0x4
.long 0x56C
L_52637:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52638
L_52643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_52644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52644
.p2align 0x4
.long 0x578
L_52644:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_52638:
	movq 0x30(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x2,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1AFF,%r13
	je L_394396
L_52641:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_52642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_394396:
L_52639:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_52640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0xC6F
L_52633:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	cmpl $0x1,0x0(%r13)
	jne L_51919
L_52635:
	movl $0x1,0x0(%r14)
	jmp L_51919
.p2align 0x4
.long 0xC73
L_52600:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52601
L_52604:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_52605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52605
.p2align 0x4
.long 0x538
L_52605:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_52601:
	movq 0x30(%rbp),%r15
	andq $0x1,%r15
	jnz L_51929
L_52602:
	movq $0x1955,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_51919
.p2align 0x4
.long 0x56C
L_52598:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_51919
.p2align 0x4
.long 0x56C
L_52595:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_51919
.p2align 0x4
.long 0x56C
L_52586:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52587
L_52592:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_52593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52593
.p2align 0x4
.long 0x578
L_52593:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_52587:
	movq 0x30(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x2,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1AFF,%r13
	je L_394401
L_52590:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_52591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_394401:
L_52588:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_52589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0xC95
L_52553:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52554
L_52582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_52583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52583
.p2align 0x4
.long 0xC97
L_52583:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_52554:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_394415
L_52555:
L_52556:
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_51904
L_52557:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_394413
L_52558:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_52560:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_52561
L_52573:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xC9E,%r13
	jne L_52561
L_52574:
	movq 0x28(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_394408
L_52561:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_51879
L_52562:
	cmpq $0x1,%r15
	je L_394403
L_52563:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_52560
.p2align 0x4
L_394403:
L_52564:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52565
L_52571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_52572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52572
.p2align 0x4
.long 0xCA3
L_52572:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_52565:
	movl 0x48(%rbp),%ecx
L_52566:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_52567:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_52569
L_52570:
	movl %ecx,0x0(%r15)
L_52569:
	movq $0x193D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_51919
.p2align 0x4
L_394408:
L_52576:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_52577:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_51929
L_52579:
	movl %ecx,0x0(%r15)
	jmp L_51929
.p2align 0x4
L_394413:
L_52580:
	xorl %ecx,%ecx
	jmp L_52566
.p2align 0x4
L_394415:
L_52581:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_52556
.p2align 0x4
.long 0xC95
L_52430:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_51821
L_52432:
	testl %r11d,%r11d
	jz L_394417
L_52433:
	movq (globalObjptr+0xE808)(%rip),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_52434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_394417:
L_52487:
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xDD38)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_52488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xC85
L_52421:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52422
L_52427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_52428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52428
.p2align 0x4
.long 0xC72
L_52428:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_52422:
	movq $0x328D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_52423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0xC85
L_52356:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_52357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xC78
L_52318:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_52319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x56C
L_52316:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_51919
.p2align 0x4
.long 0xC74
L_52305:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52306
L_52313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_52314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52314
.p2align 0x4
.long 0xC77
L_52314:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_52306:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x130E,%r14
	je L_394420
L_52308:
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_52309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_394420:
L_52307:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x21A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_51919
.p2align 0x4
.long 0xC73
L_52295:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52296
L_52299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_52300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52300
.p2align 0x4
.long 0x538
L_52300:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_52296:
	movq 0x30(%rbp),%r15
	andq $0x1,%r15
	jnz L_51929
L_52297:
	movq $0x1955,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_51919
.p2align 0x4
.long 0x56C
L_52268:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_51919
.p2align 0x4
.long 0x5BF
L_52191:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_51919
L_52192:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_52190
.p2align 0x4
.long 0x5F9
x_100:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_52130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
.long 0xC85
L_54656:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_54657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0xC53
L_51874:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_51875
L_52013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_52014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52014
.p2align 0x4
.long 0xC5E
L_52014:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_51875:
	movq 0x38(%rbp),%r15
	andq $0x1,%r15
	jnz L_394429
L_51876:
	movq $0xC59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq 0xA8(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_394428
L_51877:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_51878:
	incl %ecx
	movl %ecx,0x34(%rbp)
	jo L_51879
L_51880:
	cmpq $0x1,%r15
	je L_394425
L_51881:
	movq 0x8(%r15),%r15
	jmp L_51878
.p2align 0x4
L_394425:
L_51882:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_51883
L_52009:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_52010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52010
.p2align 0x4
.long 0xC55
L_52010:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_51883:
	movl 0x34(%rbp),%ecx
L_51884:
	movl %ecx,0xD0(%rbp)
	movq $0x377F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_51885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_1
.p2align 0x4
L_394428:
L_52011:
	xorl %ecx,%ecx
	jmp L_51884
.p2align 0x4
L_394429:
L_52012:
	movq 0x38(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x28(%rbp)
L_51898:
	movq 0x70(%rbp),%r15
	cmpb $0x2,0x0(%r15)
	je L_51901
L_51899:
	movq 0x78(%rbp),%r15
	cmpb $0x7,0x0(%r15)
	jne L_394471
L_51932:
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq (globalObjptr+0xAE0)(%rip),%r15
	movq 0x0(%r15),%r13
	incq %r13
	jo L_394470
L_51934:
	movq %r13,0x0(%r15)
	movq 0x88(%rbp),%r15
	movl 0x0(%r15),%r13d
	andl 0x28(%rbp),%r13d
	cmpl $0x0,%r13d
	jl L_51879
L_51935:
	movslq %r13d,%r15
	movq %r15,0x38(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_51859
L_51937:
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r13
	je L_51947
L_51938:
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
.p2align 0x4,,0x7
L_51939:
	movq (globalObjptr+0xAE8)(%rip),%r15
	movq 0x0(%r15),%r14
	incq %r14
	jo L_394466
L_51941:
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movl 0x0(%r15),%r14d
	movl 0x28(%rbp),%r13d
	cmpl %r13d,0x4(%r15)
	jne L_51943
L_51989:
	cmpl %r14d,0x30(%rbp)
	jne L_51943
L_51991:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394463
.p2align 0x4,,0x7
L_51992:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xB8(%rbp),%rsi
	movq 0x70(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_51993:
	testl %eax,%eax
	jnz L_394462
L_51943:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_394430
L_51944:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_51939
.p2align 0x4
L_394430:
L_51945:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_51947
L_51987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_51988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_51988
.p2align 0x4
.long 0xC5B
L_51988:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_51947:
	movq $0x11FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x28(%rbp),%r13d
	movl %r13d,0x4(%r15)
	movq 0xB8(%rbp),%r11
	movq %r11,0x8(%r15)
	movq 0x58(%rbp),%r10
	movq 0x0(%r10),%r9
	movq $0x23A9,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq %r8,0x0(%r10)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r10
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r10
	movq %r10,0x0(%r8)
	movq %r15,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r15)
	movq 0x68(%rbp),%r15
	movl 0x0(%r15),%r10d
	movl %r10d,%r8d
	movl %r8d,0x2C(%rbp)
	incl %r10d
	jo L_51879
L_51948:
	movl %r10d,0x0(%r15)
	movq $0xF95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl %r14d,0x0(%r15)
	movl %r13d,0x4(%r15)
	movl %r8d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq %r11,0x10(%r15)
	movq 0x90(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_51879
L_51949:
	movl %r13d,0x0(%r14)
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x2907,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r10)
	movq 0x38(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_51859
L_51951:
	movq %r11,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%r9,%r8,1)
	movq %r10,0x0(%r11,%r15,8)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_51821
L_51953:
	movl 0x0(%r14),%r15d
	imull $0x4,%r15d
	jo L_51879
L_51954:
	cmpl %r15d,%r10d
	jnl L_394455
L_51956:
	addl %r10d,%r10d
	jo L_51879
L_51957:
	movq 0x88(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x28(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_51986
L_51958:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xD47,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_51959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_51959
.p2align 0x4
.long 0xC58
L_51959:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_644:
	cmpq 0x30(%rbp),%r15
	jnl L_394431
L_51984:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_644
.p2align 0x4
L_394431:
L_51960:
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_51821
L_51962:
	cmpl $0x0,%r13d
	jl L_51983
L_51963:
	movl $0x0,0x4C(%rbp)
.p2align 0x4,,0x7
loop_645:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_394437
L_51968:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_51977
L_51969:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
L_51970:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394435
.p2align 0x4,,0x7
L_51971:
	movq 0x58(%rbp),%r15
	movl 0x4(%r15),%r14d
	andl 0x28(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_51879
L_51972:
	movslq %r14d,%r13
	cmpq 0x30(%rbp),%r13
	jnb L_51859
L_51974:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x2907,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_394432
L_51975:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_51970
.p2align 0x4
L_394432:
L_51977:
	incl 0x4C(%rbp)
	jmp loop_645
.p2align 0x4
L_394435:
L_51979:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_51980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_51980
.p2align 0x4
.long 0xC5A
L_51980:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_51971
.p2align 0x4
L_394437:
L_51964:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_51965
L_51966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_51967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_51967
.p2align 0x4
.long 0xC59
L_51967:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_51965:
	movq 0x80(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r15
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x2C(%rbp),%ebx
L_51903:
	movl %ebx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x28(%rbp)
	movq 0x98(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq 0xA0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_51904
L_51905:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_394448
L_51906:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_51908:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_394447
L_51923:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xDA0,%r11
	jne L_394446
L_51924:
	cmpq %r14,0x8(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_394443
L_51909:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_51879
L_51910:
	cmpq $0x1,%r15
	je L_394438
L_51911:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_51908
.p2align 0x4
L_394438:
L_51912:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_51913
L_51921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_51922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_51922
.p2align 0x4
.long 0xC57
L_51922:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_51913:
	movl 0x40(%rbp),%ecx
L_51914:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_51916:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_51918
L_51920:
	movl %ecx,0x0(%r15)
L_51918:
	movq $0x1B41,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_51919
.p2align 0x4
L_394443:
L_51926:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_51927:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_51929
L_51930:
	movl %ecx,0x0(%r15)
	jmp L_51929
.p2align 0x4
L_394446:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_51909
.p2align 0x4
L_394447:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_51909
.p2align 0x4
L_394448:
L_51931:
	xorl %ecx,%ecx
	jmp L_51914
.p2align 0x4
L_394455:
L_51955:
	movl 0x2C(%rbp),%ebx
	jmp L_51903
.p2align 0x4
L_394462:
L_51995:
	movq 0x50(%rbp),%r15
	movl 0x8(%r15),%ebx
	jmp L_51903
.p2align 0x4
L_394463:
L_51996:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_51997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_51997
.p2align 0x4
.long 0xC5C
L_51997:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_51992
.p2align 0x4
L_394466:
L_51940:
	movq (globalObjptr+0xAF0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_394470:
L_51933:
	movq (globalObjptr+0xAF8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_394471:
L_51901:
	movq $0x11FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x28(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x23A9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x68(%rbp),%r15
	movl 0x0(%r15),%ebx
	movl %ebx,%r14d
	incl %ebx
	jo L_51879
L_51902:
	movl %ebx,0x0(%r15)
	movl %r14d,%ebx
	jmp L_51903
.p2align 0x4
.long 0xC68
L_52100:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52101
L_52104:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_52105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52105
.p2align 0x4
.long 0xC69
L_52105:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_52101:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0xAC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_394475
L_52102:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_52099
.p2align 0x4
L_394475:
L_52103:
	movl 0xA8(%rbp),%r13d
	movl %r13d,0x30(%rbp)
	jmp L_52081
.p2align 0x4
.long 0x473
L_53347:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_53348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x473
toString_43:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (rev_44+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0xDB6
L_54472:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r14
	movq %r14,0x110(%rbp)
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10DB,%r15
	jne L_54473
L_54493:
	movq (globalObjptr+0xF68)(%rip),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_54317
.p2align 0x4
.long 0xDB7
L_54474:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x110(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10DB,%r15
	je L_394479
L_54490:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_53135
L_54491:
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
L_54476:
	movq 0x130(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_54477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
L_394479:
L_54475:
	movq 0x0(%r14),%r15
	movq %r15,0x110(%rbp)
	jmp L_54476
.p2align 0x4
.long 0xD93
L_54456:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_54457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp translateOperand_0
.p2align 0x4
.long 0xD98
L_54369:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x110(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10DB,%r15
	je L_394482
L_54452:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_53135
L_54453:
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
L_54371:
	movq 0x140(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_394480
L_54372:
	movq %r14,0x178(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_54373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394480:
L_54447:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_54448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_394482:
L_54370:
	movq 0x0(%r14),%r15
	movq %r15,0x110(%rbp)
	jmp L_54371
.p2align 0x4
.long 0xD93
L_54345:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x128(%rbp),%r15
	cmpq $0x1,%r15
	je L_394483
L_54346:
	movq 0x0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_54347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1315
.p2align 0x4
L_394483:
L_54363:
	movq $0x1,0x118(%rbp)
L_54351:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54352
L_54356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_54357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54357
.p2align 0x4
.long 0xD96
L_54357:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_54352:
	movq $0x1EC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x118(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x128(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_54353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54353
.p2align 0x4
.long 0xD95
L_54353:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_685:
	cmpq $0x1,%r15
	jnl L_394484
L_54355:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x128(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_685
.p2align 0x4
L_394484:
L_54354:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_54317
.p2align 0x4
.long 0xD8C
L_54310:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54311
L_54322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_54323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54323
.p2align 0x4
.long 0xD90
L_54323:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_54311:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1147,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1EB9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x118(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x11F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x138(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x128(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x150(%rbp)
	movq %r13,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_54312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_2
.p2align 0x4
.long 0x473
L_54325:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_97+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xDBA
L_54541:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54542
L_54606:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_54607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54607
.p2align 0x4
.long 0xDCE
L_54607:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_54542:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq $0x1CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x0,0x0(%r14)
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x118(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x180(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_394487
L_54543:
	movq %r14,0x1C0(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (word_12+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394487:
L_54601:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_54602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x473
L_54609:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xDB8
L_54520:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54521
L_54531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_54532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54532
.p2align 0x4
.long 0xDB9
L_54532:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_54521:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	movq $0x1147,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x11F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x120(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x170(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x128(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x138(%rbp)
	movq %r14,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_54522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_2
.p2align 0x4
.long 0x473
L_54534:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xDB8
L_54498:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54499
L_54509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_54510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54510
.p2align 0x4
.long 0xDB9
L_54510:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_54499:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	movq $0x1147,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x11F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x120(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x170(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x128(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x138(%rbp)
	movq %r14,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_54500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_2
.p2align 0x4
.long 0x473
L_54512:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xD1F
L_53410:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53411
L_53807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53808
.p2align 0x4
.long 0xD4B
L_53808:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53411:
	movq $0x1ED5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp simple_13
.p2align 0x4
.long 0xD33
L_53644:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53645
L_53659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53660
.p2align 0x4
.long 0xD3A
L_53660:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53645:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_53646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0xD2C
L_53623:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53624
L_53630:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53631
.p2align 0x4
.long 0xD30
L_53631:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_53624:
	movq $0x407D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xF8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_53625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0xD28
L_53570:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53571
L_53582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53583
.p2align 0x4
.long 0xD29
L_53583:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53571:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10DB,%r14
	je L_394499
L_53579:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_53135
L_53580:
	movq 0x0(%r14),%r15
L_53573:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_53135
L_53574:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_394496
	cmpq $0xF5A,%r14
	je L_394495
	cmpq $0xF5D,%r14
	je L_394494
	jmp L_53135
.p2align 0x4
L_394494:
L_53578:
	movq 0x0(%r15),%r14
	movq $0x1ECD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
L_53576:
	movq %r15,0x68(%rbp)
	jmp L_53419
.p2align 0x4
L_394495:
L_53577:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1ECB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	jmp L_53576
.p2align 0x4
L_394496:
L_53575:
	movq 0x0(%r15),%r14
	movq $0x1EC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp L_53576
.p2align 0x4
L_394499:
L_53572:
	movq 0x0(%r15),%r15
	jmp L_53573
.p2align 0x4
.long 0x473
L_53524:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53525
L_53530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_53531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53531
.p2align 0x4
.long 0x49D
L_53531:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_53525:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED20)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xED28)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_53526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xD3B
L_53669:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53670
L_53805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53806
.p2align 0x4
.long 0xD4A
L_53806:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53670:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x68(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_51821
L_53672:
	movq $0x37E3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xB0(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x110(%rbp)
	movl %r13d,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_53673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0xD4D
L_53814:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53815
L_53844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_53845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53845
.p2align 0x4
.long 0xD52
L_53845:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_53815:
	movq $0x4081,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movq $0x1,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_53816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0xD53
L_53849:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movl 0x140(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	movl %r15d,0x140(%rbp)
	movq $0x3,0x148(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_53850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xD87
L_54254:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq 0x118(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_54255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1315
.p2align 0x4
.long 0xD85
L_54217:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54218
L_54249:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_54250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54250
.p2align 0x4
.long 0xD86
L_54250:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_54218:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_54232
L_54219:
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_51904
L_54220:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_394516
L_54221:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movl $0x0,0x78(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_54223:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_54224
L_54237:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xDA0,%r13
	jne L_54224
L_54238:
	movq 0x0(%r15),%r13
	movq %r13,0xD8(%rbp)
	movq 0x8(%r15),%r13
	cmpq %r13,0x150(%rbp)
	je L_394510
L_54224:
	movl 0x78(%rbp),%r13d
	incl %r13d
	movl %r13d,0x7C(%rbp)
	jo L_51879
L_54225:
	cmpq $0x1,%r14
	je L_394505
L_54226:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movl %r13d,0x78(%rbp)
	jmp L_54223
.p2align 0x4
L_394505:
L_54227:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54228
L_54235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_54236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54236
.p2align 0x4
.long 0xD4B
L_54236:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_54228:
	movl 0x7C(%rbp),%ecx
L_54229:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_54230:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_394506
L_54234:
	movl %ecx,0x0(%r14)
	xorq %r15,%r15
L_54233:
	movq $0x1EDB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r14,%r15
	jmp simple_13
.p2align 0x4
L_394506:
L_54232:
	xorq %r15,%r15
	jmp L_54233
.p2align 0x4
L_394510:
L_54240:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54241
L_54245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_54246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54246
.p2align 0x4
.long 0xD4B
L_54246:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_54241:
	movl 0x78(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_51915
L_54242:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_394511
L_54243:
	movq 0xD8(%rbp),%r15
	jmp L_54233
.p2align 0x4
L_394511:
L_54244:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x78(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0xD8(%rbp),%r15
	jmp L_54233
.p2align 0x4
L_394516:
L_54247:
	xorl %ecx,%ecx
	jmp L_54229
.p2align 0x4
.long 0xD69
L_54072:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54073
L_54202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_54203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54203
.p2align 0x4
.long 0xD82
L_54203:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_54073:
	movq 0x128(%rbp),%r11
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r15
	movq 0xD8(%rbp),%r13
	cmpq $0x1,%r13
	je L_54200
	cmpq $0x2,%r13
	je L_394526
L_54074:
L_54075:
	movq %r15,0x128(%rbp)
	movq $0x23A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq 0x120(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r15,0xD8(%rbp)
	movq %r14,0x120(%rbp)
L_54076:
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x130(%rbp)
	cmpq %r11,%r14
	jne L_51821
L_54078:
	testq %r11,%r11
	jz L_394524
L_54079:
	cmpq $0x7FFFFFFF,%r11
	ja L_51986
L_54080:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54081
L_54195:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_54196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54196
.p2align 0x4
.long 0xD6A
L_54196:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_54081:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A5,%rcx
	movq 0x130(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_54082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54082
.p2align 0x4
.long 0xD6A
L_54082:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq %rax,0x138(%rbp)
L_54083:
	movq $0x1,0x140(%rbp)
	movq $0x0,0x148(%rbp)
loop_676:
	movq 0x130(%rbp),%r15
	cmpq %r15,0x148(%rbp)
	jl L_394521
L_54084:
	movq 0x138(%rbp),%r15
	movq $0x8FF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x70(%rbp)
	cmpq %r11,%r14
	jne L_51821
L_54086:
	movq $0x4083,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x148(%rbp)
	movq %r11,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_54087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_394521:
L_54174:
	movq 0x148(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x78(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x158(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_54175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
L_394524:
L_54198:
	movq (globalObjptr+0x7550)(%rip),%r15
	movq %r15,0x138(%rbp)
	jmp L_54083
.p2align 0x4
L_394526:
L_54200:
	movq $0x1,%r13
	jmp L_54075
.p2align 0x4
.long 0xD83
L_54210:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54211
L_54212:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_54213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54213
.p2align 0x4
.long 0xD84
L_54213:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_54211:
	movq $0x1,0x120(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq $0x1,0xD8(%rbp)
	jmp L_54076
.p2align 0x4
.long 0xD83
L_54205:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54206
L_54207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_54208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54208
.p2align 0x4
.long 0xD84
L_54208:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_54206:
	movq $0x1,0x120(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq $0x1,0xD8(%rbp)
	jmp L_54076
.p2align 0x4
.long 0xD64
L_53952:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r13
	movq %r13,0x60(%rbp)
	movq 0x70(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_51904
L_53953:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_394541
L_53954:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0xD8(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_53956:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_53957
L_53995:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xDA2,%r13
	jne L_53957
L_53996:
	movq 0x8(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x138(%rbp)
	je L_394534
L_53957:
	movl 0xD8(%rbp),%r13d
	incl %r13d
	jo L_51879
L_53958:
	cmpq $0x1,%r15
	je L_394531
L_53959:
	movl %r13d,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_53956
.p2align 0x4
L_394531:
	movl %r13d,%ecx
L_53961:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_53962:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_109
L_53994:
	movl %ecx,0x0(%r15)
x_109:
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_53964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_394534:
L_53998:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53999
L_54067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_54068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54068
.p2align 0x4
.long 0xD68
L_54068:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_53999:
	movl 0xD8(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_51915
L_54000:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_394536
L_54001:
	movq 0xE0(%rbp),%r15
L_54002:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_51821
L_54004:
	movq %r11,0x160(%rbp)
	movq $0x407F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_54005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_394536:
L_54066:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0xD8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0xE0(%rbp),%r15
	jmp L_54002
.p2align 0x4
L_394541:
L_54069:
	xorl %ecx,%ecx
	jmp L_53961
.p2align 0x4
.long 0xD5C
L_53884:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53885
L_53946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_53947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53947
.p2align 0x4
.long 0xD63
L_53947:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_53885:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_51821
L_53887:
	movq %r11,0x138(%rbp)
	movq $0x4085,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_53888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0xD57
L_53863:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53864
L_53877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_53878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53878
.p2align 0x4
.long 0xD5B
L_53878:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_53864:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_51821
L_53866:
	movq %r11,0x130(%rbp)
	movq $0x4085,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_53867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0x473
L_53288:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_53289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5C4
L_53261:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp same_0
.p2align 0x4
.long 0x5C4
L_53250:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53252
L_53253:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_53254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53254
.p2align 0x4
.long 0xD1B
L_53254:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_53252
.p2align 0x4
.long 0x5F9
L_53175:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_53176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xCA4
L_53147:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_53148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xD05
L_53090:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53091
L_53096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_53097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53097
.p2align 0x4
.long 0xD06
L_53097:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_53091:
L_53092:
	movq 0x30(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_52964
L_53094:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x108D,%r15
	jne L_52964
L_53095:
	movq 0x0(%r14),%r15
	jmp L_53041
.p2align 0x4
.long 0xCFA
L_53050:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq $0x5,0x138(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_53051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xCFE
L_53062:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53063
L_53065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_53066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53066
.p2align 0x4
.long 0xD00
L_53066:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_53063:
	movq 0x30(%rbp),%r15
	jmp L_53064
.p2align 0x4
.long 0xCFF
heapCheckNonZero_1:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp heapCheckNonZero_0
.p2align 0x4
.long 0xD03
L_53078:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53079
L_53080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_53081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53081
.p2align 0x4
.long 0xD04
L_53081:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_53079:
	movq 0x30(%rbp),%r15
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%rbp)
	jmp L_53048
.p2align 0x4
.long 0xCE6
L_52965:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movl 0x138(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52966
L_53036:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_53037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53037
.p2align 0x4
.long 0xCF9
L_53037:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_52966:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x3C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x70(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_394553
L_52967:
	movq 0x0(%r15),%r13
	movq %r13,0x138(%rbp)
	leaq L_53023(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_52968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394553:
L_53031:
	leaq L_53023(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x70(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_53032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xCE4
L_52954:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52955
L_52956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_52957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52957
.p2align 0x4
.long 0xCE5
L_52957:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_52955:
	movq 0x28(%rbp),%r15
	jmp L_52852
.p2align 0x4
.long 0xCC5
L_52857:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xC0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_52858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x473
L_52886:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_87+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xCD2
L_52892:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_52893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x25
L_52900:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52901
L_52918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_52919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52919
.p2align 0x4
.long 0xCDB
L_52919:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_52901:
	movq 0x28(%rbp),%r15
	cmpq $0x3,%r15
	je gotoHeapCheckTooLarge_1
L_52902:
	andq $0x3,%r15
	jnz L_52903
L_52904:
L_52903:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
gotoHeapCheckTooLarge_1:
gotoHeapCheckTooLarge_0:
	movq (globalObjptr+0xF48)(%rip),%r14
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq (globalObjptr+0xF40)(%rip),%r14
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xA8(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_394557
L_52906:
L_52907:
	movq $0x2139,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF40)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x30,%r12
	movq (globalObjptr+0xF48)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_51919
.p2align 0x4
L_394557:
L_52908:
	movq %r11,0x110(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x110,%rbp
	leaq (L_52909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0xCDC
L_52921:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (bug_88+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xCDD
L_52933:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xC0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_52934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x473
L_52949:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_89+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xD0B
toIntInf_0:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_394559
L_53121:
	movq %r14,0x148(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_53122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394559:
L_53129:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_53130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xCB3
L_52788:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52789
L_52828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_52829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52829
.p2align 0x4
.long 0xCC1
L_52829:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_52789:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_394561
	cmpq $0x2,%r15
	je L_394560
L_52790:
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_52791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_34
.p2align 0x4
L_394560:
L_52822:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x10(%r14),%r11
	movq $0x262D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r10)
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x10(%r14)
	movw 0x0(%r13),%r14w
	movw %r14w,0x78(%rbp)
	movq %r11,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_52823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_0
.p2align 0x4
L_394561:
L_52816:
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x10(%r14),%r11
	movq $0x262D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r10)
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x10(%r14)
	movw 0x0(%r13),%r14w
	movw %r14w,0x78(%rbp)
	movq %r11,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_52817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_0
.p2align 0x4
.long 0xCC2
L_52833:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52834
L_52839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_52840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52840
.p2align 0x4
.long 0xCC3
L_52840:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_52834:
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	cmpq $0x1,0x0(%r13)
	jne L_394564
L_52837:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x109D,%r15
	jne L_52784
L_52838:
	movq 0x10(%r14),%r15
	jmp L_52786
.p2align 0x4
L_394564:
L_52835:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x109D,%r15
	jne L_52784
L_52836:
	movq 0x10(%r14),%r15
	jmp L_52786
.p2align 0x4
.long 0xCA4
L_52771:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52748
L_52773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_52774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52774
.p2align 0x4
.long 0xCB2
L_52774:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_52748
.p2align 0x4
.long 0x543
L_52768:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_52749
.p2align 0x4
.long 0xCAA
L_52704:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52705
L_52735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_52736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52736
.p2align 0x4
.long 0xCB1
L_52736:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_52705:
	movq $0xCC1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
L_52706:
	movq 0x78(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_52707
L_52712:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1098,%r13
	jne L_52707
L_52713:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_52707
	cmpq $0x2,%r13
	je L_394568
L_52714:
	movq %r13,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_52715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_36
.p2align 0x4
L_394568:
L_52707:
	movq $0xDAD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r13
	movq 0x30(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x28(%r13),%r10
	movq %r10,0x80(%rbp)
	movq 0x20(%r13),%r9
	movq %r9,0x90(%rbp)
	movq 0x38(%r13),%r8
	movq 0x8(%r8),%rsp
	movq %rsp,0x98(%rbp)
	movq $0x3D5D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA0(%rbp)
	addq $0x20,%r12
	movq 0x40(%rbp),%r8
	movq %r8,0x0(%r13)
	movq 0x48(%rbp),%r8
	movq %r8,0x8(%r13)
	movq %r14,0x10(%r13)
	movq $0xCDF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x30,%r12
	movq %rsp,0x0(%r8)
	movq %r13,0x8(%r8)
	movq %r11,0x10(%r8)
	movq %r10,0x18(%r8)
	movq %r9,0x20(%r8)
	movq $0x3299,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r8,0x18(%r13)
	movq %r15,0x20(%r13)
	addq $0x30,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r13,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_52708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0xC85
L_52695:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52696
L_52697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_52698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52698
.p2align 0x4
.long 0xC72
L_52698:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_52696:
	movq $0x2A35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x14A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x12,0x0(%r14)
	movq $0xB,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x543
L_52675:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52676
L_52677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_52678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52678
.p2align 0x4
.long 0xCA6
L_52678:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_52676:
	movq $0x2A2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x14A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x6,0x0(%r14)
	movq $0x3,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x568
L_52642:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x568
L_52640:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x568
L_52591:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x568
L_52589:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xC96
L_52434:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x95F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_52435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52435
.p2align 0x4
.long 0xC97
L_52435:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_648:
	cmpq $0x1,%r15
	jnl L_394575
L_52486:
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_648
.p2align 0x4
L_394575:
L_52436:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52437
L_52484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_52485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52485
.p2align 0x4
.long 0xC9E
L_52485:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_52437:
	movq $0xA33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xA35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%r13)
	movq $0xA37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0xA3B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xA3D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x80(%rbp)
	addq $0x28,%r12
	movq %r15,0x0(%r11)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r13,0x18(%r11)
	movq (globalObjptr+0xD540)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_52438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xC9F
L_52488:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x95F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_52489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52489
.p2align 0x4
.long 0xCA0
L_52489:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_650:
	cmpq $0x1,%r15
	jnl L_394577
L_52494:
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_650
.p2align 0x4
L_394577:
L_52490:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52491
L_52492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_52493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52493
.p2align 0x4
.long 0xC97
L_52493:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_52491:
	movq $0xA33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xA35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%r13)
	movq $0xA37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA39,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r15,0x0(%rsi)
	movq %r13,%r15
	addq $0x18,%r12
	movq $0x1,0x8(%rsi)
	movq %rsi,%r9
	movq $0xA3B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq %r14,%rsp
	movq 0x50(%rbp),%r10
	movq %r10,%rdi
	movq %rsi,%r11
	movq %r13,%r8
	movq %r15,%r13
	movq %rdi,%r15
	movq %r9,%rsi
	movq %r14,%r9
	movq %rsp,%r14
L_52449:
	movq $0xA3D,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r14,0x0(%rsp)
	movq %r15,0x8(%rsp)
	movq %r11,0x10(%rsp)
	movq %r13,0x18(%rsp)
	addq $0x28,%r12
	movq $0xA3D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x0(%r15)
	movq %r10,0x8(%r15)
	movq %rsi,0x10(%r15)
	movq %r8,0x18(%r15)
	addq $0x28,%r12
	movq $0x134B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %rsp,0x0(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x48(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_51904
L_52450:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_394588
L_52451:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_52453:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_52454
L_52466:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD6F,%r13
	jne L_52454
L_52467:
	movq 0x38(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_394583
L_52454:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_51879
L_52455:
	cmpq $0x1,%r15
	je L_394578
L_52456:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_52453
.p2align 0x4
L_394578:
L_52457:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52458
L_52464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_52465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52465
.p2align 0x4
.long 0xC9A
L_52465:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_52458:
	movl 0x30(%rbp),%ecx
L_52459:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_52460:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_52462
L_52463:
	movl %ecx,0x0(%r15)
L_52462:
	movq $0x1ADF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_51919
.p2align 0x4
L_394583:
L_52469:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_52470:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_51929
L_52472:
	movl %ecx,0x0(%r15)
	jmp L_51929
.p2align 0x4
L_394588:
L_52473:
	xorl %ecx,%ecx
	jmp L_52459
.p2align 0x4
.long 0xC73
L_52423:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52424
L_52425:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_52426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52426
.p2align 0x4
.long 0x538
L_52426:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_52424:
	movq $0x2A37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x14A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x13,0x0(%r14)
	movq $0xD,0x8(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0xC86
L_52357:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_52358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xC79
L_52319:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_52320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xC75
L_52309:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52310
L_52311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_52312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52312
.p2align 0x4
.long 0xC76
L_52312:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_52310:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x28(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq (globalObjptr+0xF40)(%rip),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2139,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x30,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF48)(%rip),%r10
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r10)
	movq $0x35,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x10(%r9)
	addq $0x30,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	movq $0x1,0x18(%r9)
	movq %r15,0x20(%r9)
	movq 0x0(%r14),%r15
	movq $0x21A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_51919
.p2align 0x4
.long 0x5F9
L_52130:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52131
L_52162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_52163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52163
.p2align 0x4
.long 0x582
L_52163:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_52131:
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1452,%r14
	jne L_394606
L_52133:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_51904
L_52134:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_394604
L_52135:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x50(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_52137:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_52138
L_52151:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCAD,%r13
	jne L_52138
L_52152:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x28(%rbp)
	je L_394598
L_52138:
	movl 0x50(%rbp),%r13d
	incl %r13d
	movl %r13d,0x54(%rbp)
	jo L_51879
L_52139:
	cmpq $0x1,%r15
	je L_394593
L_52140:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x50(%rbp)
	jmp L_52137
.p2align 0x4
L_394593:
L_52141:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52142
L_52149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_52150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52150
.p2align 0x4
.long 0xC6B
L_52150:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_52142:
	movl 0x54(%rbp),%ecx
L_52143:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_52144:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_52146
L_52148:
	movl %ecx,0x0(%r15)
L_52146:
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x11F3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x23C5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x195B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x0(%r14)
	movq %r13,%r15
L_52147:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_51919
.p2align 0x4
L_394598:
L_52154:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52155
L_52159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_52160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52160
.p2align 0x4
.long 0xC6C
L_52160:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_52155:
	movl 0x50(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_51915
L_52156:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_394599
L_52157:
	movq 0x58(%rbp),%r15
	jmp L_52147
.p2align 0x4
L_394599:
L_52158:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x50(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x58(%rbp),%r15
	jmp L_52147
.p2align 0x4
L_394604:
L_52161:
	xorl %ecx,%ecx
	jmp L_52143
.p2align 0x4
L_394606:
L_52132:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x56C
L_54657:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptr+0xD98)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0xC54
L_51885:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r15,0x38(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%rdx
	movq %rdx,0xB0(%rbp)
	cmpq %r14,%rdx
	movq %r14,0xA8(%rbp)
	jne L_51821
L_51887:
	cmpq $0x7FFFFFFF,%rdx
	ja L_51986
L_51888:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xABB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_51889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_51889
.p2align 0x4
.long 0xC55
L_51889:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0xC0(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_643:
	cmpq 0xB0(%rbp),%r15
	jnl L_394609
L_52005:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0xA8(%rbp),%r13
	jnb L_51859
L_52007:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0xC0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_643
.p2align 0x4
L_394609:
L_51890:
	movq 0xC0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_51891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sortArray_1
.p2align 0x4
.long 0x473
L_53348:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_53349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x473
rev_44:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_394614
L_54289:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_54290:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394613
.p2align 0x4,,0x7
L_54291:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_394612
L_54292:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_54290
.p2align 0x4
L_394612:
L_54294:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_54295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_394613:
L_54303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_54304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54304
.p2align 0x4
.long 0x4FC
L_54304:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_54291
.p2align 0x4
L_394614:
L_54305:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_54294
.p2align 0x4
.long 0xDB2
L_54477:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54478
L_54488:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_54489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54489
.p2align 0x4
.long 0xDB5
L_54489:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_54478:
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x120(%rbp)
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x128(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x138(%rbp)
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_54479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_2
.p2align 0x4
.long 0xDB2
L_54457:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54458
L_54468:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_54469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54469
.p2align 0x4
.long 0xDB5
L_54469:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_54458:
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x120(%rbp)
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x128(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x138(%rbp)
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_54459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_2
.p2align 0x4
.long 0xD99
L_54373:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54374
L_54445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_54446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54446
.p2align 0x4
.long 0xDB1
L_54446:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_54374:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq $0x1CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x0,0x0(%r14)
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x140(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x148(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_394617
L_54375:
	movq %r14,0x178(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (word_11+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394617:
L_54440:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_54441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x473
L_54448:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xD94
L_54347:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54348
L_54361:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_54362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54362
.p2align 0x4
.long 0xD96
L_54362:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_54348:
	movq 0x118(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10DB,%r14
	je L_394620
L_54358:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_53135
L_54359:
	movq 0x0(%r14),%r15
L_54350:
	movq $0x2141,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x118(%rbp)
	addq $0x10,%r12
	jmp L_54351
.p2align 0x4
L_394620:
L_54349:
	movq 0x0(%r15),%r15
	jmp L_54350
.p2align 0x4
.long 0xD8D
L_54312:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movl 0x148(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54313
L_54320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_54321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54321
.p2align 0x4
.long 0xD8F
L_54321:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_54313:
	movl 0x110(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_394623
L_54314:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
new1_0:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_54315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54315
.p2align 0x4
.long 0xD8E
L_54315:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_683:
	cmpq $0x1,%r15
	jnl L_394622
L_54318:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_683
.p2align 0x4
L_394622:
L_54316:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_54317
.p2align 0x4
L_394623:
L_54319:
	movq $0x1,0x110(%rbp)
	jmp new1_0
.p2align 0x4
.long 0x473
bug_97:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54326
L_54327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_54328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54328
.p2align 0x4
.long 0x49D
L_54328:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_54326:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDBB
word_12:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54544
L_54599:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_54600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54600
.p2align 0x4
.long 0xDCD
L_54600:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_54544:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x120(%rbp)
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_53135
L_54545:
	movq 0x8(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_54546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1316
.p2align 0x4
.long 0x473
L_54602:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x473
bug_108:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54610
L_54611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_54612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54612
.p2align 0x4
.long 0x49D
L_54612:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_54610:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDB3
L_54522:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54523
L_54529:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_54530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54530
.p2align 0x4
.long 0xDB4
L_54530:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_54523:
	movl 0x110(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_394630
L_54524:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
new1_4:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_54525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54525
.p2align 0x4
.long 0xD8E
L_54525:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_690:
	cmpq $0x1,%r15
	jnl L_394629
L_54527:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_690
.p2align 0x4
L_394629:
L_54526:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_54317
.p2align 0x4
L_394630:
L_54528:
	movq $0x1,0x110(%rbp)
	jmp new1_4
.p2align 0x4
.long 0x473
bug_104:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54535
L_54536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_54537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54537
.p2align 0x4
.long 0x49D
L_54537:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_54535:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDB3
L_54500:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54501
L_54507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_54508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54508
.p2align 0x4
.long 0xDB4
L_54508:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_54501:
	movl 0x110(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_394634
L_54502:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
new1_3:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_54503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54503
.p2align 0x4
.long 0xD8E
L_54503:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_689:
	cmpq $0x1,%r15
	jnl L_394633
L_54505:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_689
.p2align 0x4
L_394633:
L_54504:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_54317
.p2align 0x4
L_394634:
L_54506:
	movq $0x1,0x110(%rbp)
	jmp new1_3
.p2align 0x4
.long 0x473
bug_103:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54513
L_54514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_54515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54515
.p2align 0x4
.long 0x49D
L_54515:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_54513:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD34
L_53646:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53647
L_53657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53658
.p2align 0x4
.long 0xD39
L_53658:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53647:
	movq $0x1147,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0xE0(%rbp)
	movq 0x90(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x120(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xF0(%rbp)
	movq $0x11,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_53648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0xD2D
L_53625:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0xF8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_53626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parallelMove_0
.p2align 0x4
.long 0x473
L_53526:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53527
L_53528:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_53529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53529
.p2align 0x4
.long 0x49D
L_53529:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_53527:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD3C
L_53673:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53674
L_53803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53804
.p2align 0x4
.long 0xD49
L_53804:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53674:
	movq 0xB8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_53685
L_53675:
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
.p2align 0x4,,0x7
L_53676:
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movq %r13,0xA8(%rbp)
	movl %r13d,%r15d
	movl %r15d,0x6C(%rbp)
	movslq %r15d,%r11
	cmpq %r11,%r13
	jne L_51821
L_53678:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_51821
L_53680:
	cmpl %r15d,%r11d
	je L_394661
L_53681:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_394639
L_53682:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	jmp L_53676
.p2align 0x4
L_394639:
L_53683:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53685
L_53787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53788
.p2align 0x4
.long 0xD3D
L_53788:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53685:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x88(%rbp)
	cmpq %r11,%r14
	jne L_51821
L_53687:
	testq %r11,%r11
	jz L_394658
L_53688:
	cmpq $0x7FFFFFFF,%r11
	ja L_51986
L_53689:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53690
L_53783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53784
.p2align 0x4
.long 0xD3D
L_53784:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53690:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	movq 0x88(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53691
.p2align 0x4
.long 0xD3D
L_53691:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x90(%rbp)
L_53692:
	movq $0x0,0xA0(%rbp)
loop_666:
	movq 0x88(%rbp),%r15
	cmpq %r15,0xA0(%rbp)
	jl L_394655
L_53693:
	movq 0x90(%rbp),%r15
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x11FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x78(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x23AD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq %r15,0x70(%rbp)
L_53694:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_51904
L_53695:
	movq %r15,0x0(%r13)
	movq 0x100(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_394653
L_53696:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x6C(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_53698:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_53699
L_53707:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xDA0,%r13
	jne L_53699
L_53708:
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x98(%rbp),%r13
	cmpq %r13,0x8(%r14)
	je L_394644
L_53699:
	movl 0x6C(%rbp),%r13d
	incl %r13d
	jo L_51879
L_53700:
	cmpq $0x1,%r15
	je L_394640
L_53701:
	movl %r13d,0x6C(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_53698
.p2align 0x4
L_394640:
	movl %r13d,%ecx
L_53703:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_53704:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_53135
L_53706:
	movl %ecx,0x0(%r15)
	jmp L_53135
.p2align 0x4
L_394644:
L_53710:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53711
L_53775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53776
.p2align 0x4
.long 0xD44
L_53776:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_53711:
	movl 0x6C(%rbp),%r15d
	movslq %r15d,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_51915
L_53712:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %r15d,0x0(%r14)
	jl L_394647
L_53713:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_53135
L_53715:
	shrq $0x1,%r15
	movl %r15d,%ecx
L_53716:
	movq $0x1ECF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	movl %ecx,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_51821
L_53718:
	movq %r11,0x100(%rbp)
	movq $0x407B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_53719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_394647:
L_53772:
	movq (globalObjptr+0x1078)(%rip),%r15
	movl 0x6C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_53135
L_53774:
	shrq $0x1,%r15
	movl %r15d,%ecx
	jmp L_53716
.p2align 0x4
L_394653:
L_53777:
	xorl %ecx,%ecx
	jmp L_53703
.p2align 0x4
L_394655:
L_53778:
	movq 0xA0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x70(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x110(%rbp)
	movl $0x0,0x118(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x110,%rbp
	leaq (L_53779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp new_25
.p2align 0x4
L_394658:
L_53786:
	movq (globalObjptr+0x7530)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_53692
.p2align 0x4
L_394661:
L_53789:
	movl $0x0,0xB0(%rbp)
loop_670:
	movl 0xB0(%rbp),%r15d
	cmpl %r15d,0x6C(%rbp)
	je L_394663
L_53790:
	movslq %r15d,%r14
	cmpq 0xA8(%rbp),%r14
	jnb L_51859
L_53792:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x118(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x110(%rbp)
	addq $0x110,%rbp
	leaq (not_7+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_394663:
L_53801:
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	jmp L_53694
.p2align 0x4
.long 0xD4D
L_53816:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x130(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xD8(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xE0(%rbp)
	addq $0x110,%rbp
	leaq (L_53817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0xD54
L_53850:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq %r15,0x140(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_53851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xD88
L_54255:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54256
L_54262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_54263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54263
.p2align 0x4
.long 0xD89
L_54263:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_54256:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10DB,%r14
	je L_394669
L_54259:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_53135
L_54260:
	movq 0x0(%r14),%r15
L_54258:
	movq $0x1EDD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xE0(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x78(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x20(%r14)
	movq %r14,%r15
	jmp simple_13
.p2align 0x4
L_394669:
L_54257:
	movq 0x0(%r15),%r15
	jmp L_54258
.p2align 0x4
.long 0xD6B
L_54087:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54088
L_54172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_54173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54173
.p2align 0x4
.long 0xD77
L_54173:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_54088:
	movq $0x4085,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x148(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_54089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0xD78
L_54175:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x160(%rbp)
	movq %r15,0x168(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x160,%rbp
	leaq (L_54176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp align_0
.p2align 0x4
.long 0x473
L_53964:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_53965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xD65
L_54005:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r10
	movq %r10,0x68(%rbp)
	movq 0x148(%rbp),%r10
	movq 0x8(%r10),%r13
	movq 0x0(%r10),%r14
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_51904
L_54006:
	movq %r15,0x0(%r10)
	movq 0x78(%rbp),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_394680
L_54007:
	movq 0x0(%r9),%r11
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
.p2align 0x4,,0x7
L_54009:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_394679
L_54048:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0xCBE,%r10
	jne L_394678
L_54049:
	cmpq %r13,0x0(%r11)
	movq %r13,(localObjptr+0x0)(%rip)
	je L_394675
L_54010:
	incl %ecx
	jo L_51879
L_54011:
	cmpq $0x1,%r15
	je L_394672
L_54012:
	movq 0x0(%r15),%r11
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r13
	jmp L_54009
.p2align 0x4
L_394672:
L_54013:
L_54014:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_51915
L_54015:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_110
L_54047:
	movl %ecx,0x0(%r15)
x_110:
	movq %r14,0x30(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_54017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_394675:
L_54051:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_51915
L_54052:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_54054
L_54064:
	movl %ecx,0x0(%r15)
L_54054:
	movq 0x60(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_54055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parallelMove_0
.p2align 0x4
L_394678:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_54010
.p2align 0x4
L_394679:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_54010
.p2align 0x4
L_394680:
L_54065:
	xorl %ecx,%ecx
	jmp L_54014
.p2align 0x4
.long 0xD5D
L_53888:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53889
L_53944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_53945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53945
.p2align 0x4
.long 0xD62
L_53945:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_53889:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x68(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_51821
L_53891:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r14
	jne L_51821
L_53893:
	cmpl %ecx,%r13d
	jne L_53724
L_53895:
	cmpl $0x0,%r13d
	jl L_394700
L_53896:
	movq $0x1,0x78(%rbp)
	xorl %ecx,%ecx
loop_673:
	cmpl 0x68(%rbp),%ecx
	jnl L_394682
L_53935:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x6C(%rbp)
	movslq %ecx,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x70(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x120(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x138(%rbp)
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_53936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_2
.p2align 0x4
L_394682:
L_53897:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_394699
L_53898:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_53899:
	incl %ecx
	jo L_51879
L_53900:
	cmpq $0x1,%r15
	je L_394683
L_53901:
	movq 0x8(%r15),%r15
	jmp L_53899
.p2align 0x4
L_394683:
L_53902:
L_53903:
	movslq %ecx,%rdx
	movq %rdx,0x60(%rbp)
	testq %rdx,%rdx
	jz L_394697
L_53904:
	cmpq $0x7FFFFFFF,%rdx
	ja L_51986
L_53905:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53906
.p2align 0x4
.long 0xD5E
L_53906:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x68(%rbp)
L_53907:
	movq 0x78(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_674:
	cmpq 0x60(%rbp),%r15
	jnl L_394685
L_53929:
	cmpq $0x1,%r14
	je L_394684
L_53930:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x68(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_674
.p2align 0x4
L_394684:
L_53757:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_394685:
L_53908:
	movq 0x68(%rbp),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x60(%rbp)
	cmpq %rdx,%r14
	jne L_51821
L_53910:
	decl %r13d
	movl %r13d,0x70(%rbp)
	jo L_51879
L_53911:
	testq %rdx,%rdx
	jz L_394693
L_53912:
	cmpq $0x7FFFFFFF,%rdx
	ja L_51986
L_53913:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53914
.p2align 0x4
.long 0xD5F
L_53914:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x78(%rbp)
L_53915:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_675:
	cmpq 0x60(%rbp),%r15
	jnl L_394687
L_53925:
	movl %r15d,%r14d
	movl 0x70(%rbp),%r13d
	subl %r14d,%r13d
	jo L_51879
L_53926:
	movslq %r13d,%r14
	movq 0x68(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x78(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_675
.p2align 0x4
L_394687:
L_53916:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53917
L_53923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53924
.p2align 0x4
.long 0xD5E
L_53924:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53917:
	movq 0x78(%rbp),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xF0(%rbp),%r14
	cmpq $0x1,%r14
	je L_394690
	cmpq $0x2,%r14
	je L_394689
L_53918:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1097,%r13
	je L_394688
L_53920:
	movq $0x2,0x48(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_53585
.p2align 0x4
L_394688:
L_53919:
	movq 0xF0(%rbp),%r9
	movl 0x1C(%r9),%r8d
	movl %r8d,(localWord32+0x0)(%rip)
	movq 0x40(%r9),%r8
	movb 0x21(%r9),%spl
	movb %spl,(localWord8+0x0)(%rip)
	movq 0x38(%r9),%r10
	movl 0x18(%r9),%esp
	movl %esp,(localWord32+0x4)(%rip)
	movq 0x30(%r9),%r11
	movl 0x14(%r9),%esp
	movl %esp,(localWord32+0x8)(%rip)
	movl 0x10(%r9),%esp
	movl %esp,(localWord32+0xC)(%rip)
	movl 0xC(%r9),%ebx
	movl 0x8(%r9),%ecx
	movb 0x20(%r9),%dl
	movq 0x0(%r9),%r14
	movq 0x28(%r9),%r13
	movq $0x2,0x30(%rbp)
	movq %r15,0x48(%rbp)
	movq %r8,%r15
	jmp L_53414
.p2align 0x4
L_394689:
L_53922:
	movq $0x2,0x30(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_53666
.p2align 0x4
L_394690:
L_53921:
	movq $0x2,%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
	jmp L_53664
.p2align 0x4
L_394693:
L_53928:
	movq (globalObjptr+0x2560)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_53915
.p2align 0x4
L_394697:
L_53933:
	movq (globalObjptr+0xD88)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_53907
.p2align 0x4
L_394699:
L_53934:
	xorl %ecx,%ecx
	jmp L_53903
.p2align 0x4
L_394700:
L_53724:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD58
L_53867:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x110(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_53868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parallelMove_0
.p2align 0x4
.long 0x473
L_53289:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_53290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xC9F
L_53176:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_53177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_21
.p2align 0x4
.long 0xC95
L_53148:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_53149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0xCFB
L_53051:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53052
L_53071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_53072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53072
.p2align 0x4
.long 0xD02
L_53072:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_53052:
	cmpq $0x1,0x50(%rbp)
	je L_394705
L_53053:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x138(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_53054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_394705:
L_53070:
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
L_53056:
	cmpq $0x1,0x98(%rbp)
	je L_394706
L_53057:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x138(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_53058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_394706:
L_53059:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_394707
L_53060:
	movq 0x50(%rbp),%r15
	jmp L_53061
.p2align 0x4
L_394707:
L_53067:
	movq 0x50(%rbp),%r15
	jmp L_53064
.p2align 0x4
.long 0xCE7
L_52968:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_52969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x25
L_53023:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53024
L_53029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53030
.p2align 0x4
.long 0xCDB
L_53030:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53024:
	movq 0x28(%rbp),%r15
	cmpq $0x3,%r15
	je gotoHeapCheckTooLarge_0
L_53025:
	andq $0x3,%r15
	jnz L_53026
L_53027:
L_53026:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xCDC
L_53032:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (bug_93+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xCC6
L_52858:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movl 0x128(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	movl %r15d,0x128(%rbp)
	movq $0x3,0x130(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_52859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x473
bug_87:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52887
L_52888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_52889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52889
.p2align 0x4
.long 0x49D
L_52889:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_52887:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xCD3
L_52893:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movl 0x138(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	movl %r15d,0x138(%rbp)
	movq $0x3,0x140(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_52894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xCD7
L_52909:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movl 0x110(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52910
L_52916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_52917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52917
.p2align 0x4
.long 0xCCC
L_52917:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_52910:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x38(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x1,0x110(%rbp)
	movl $0x0,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_52911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0xCDC
bug_88:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52922
L_52923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_52924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52924
.p2align 0x4
.long 0x504
L_52924:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_52922:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xCDE
L_52934:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movl 0x128(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x128(%rbp)
	movq $0x3,0x130(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_52935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x473
bug_89:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52950
L_52951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_52952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52952
.p2align 0x4
.long 0x49D
L_52952:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_52950:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD0A
L_53122:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x140(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x148(%rbp)
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_53123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x473
L_53130:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_94+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xCB4
L_52791:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52792
L_52814:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_52815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52815
.p2align 0x4
.long 0xCBE
L_52815:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_52792:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r15),%r11
	movq $0x262D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	movq %r14,0x78(%rbp)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x10(%r15)
	movw 0x0(%r13),%r15w
	movw %r15w,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_52793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_0
.p2align 0x4
.long 0xCBF
L_52823:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52824
L_52826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_52827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52827
.p2align 0x4
.long 0xCC0
L_52827:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_52824:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r15
	movq $0x262B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r11)
	movq %r13,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r13)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_52825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_1
.p2align 0x4
.long 0xCBF
L_52817:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52818
L_52820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_52821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52821
.p2align 0x4
.long 0xCC0
L_52821:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_52818:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r15
	movq $0x262B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r11)
	movq %r13,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r13)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_52819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_1
.p2align 0x4
.long 0xCAD
L_52715:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52716
L_52731:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_52732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52732
.p2align 0x4
.long 0xCB0
L_52732:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_52716:
	movq 0x78(%rbp),%r13
	movq 0x10(%r13),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_52723
L_52717:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_52718:
	movq 0x88(%rbp),%r13
	movq 0x0(%r15),%r11
	cmpq %r11,0x0(%r13)
	je L_394720
L_52719:
	cmpq $0x1,%r14
	je L_394718
L_52720:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_52718
.p2align 0x4
L_394718:
L_52721:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52723
L_52724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_52725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52725
.p2align 0x4
.long 0xCAE
L_52725:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_52723:
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2637,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_52707
.p2align 0x4
L_394720:
L_52726:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52707
L_52728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_52729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52729
.p2align 0x4
.long 0xCAF
L_52729:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_52707
.p2align 0x4
.long 0xCAB
L_52708:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52709
L_52710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_52711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52711
.p2align 0x4
.long 0xCAC
L_52711:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_52709:
	movq $0x2A2B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x36D7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x28,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r13)
	movq $0x2A4F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x90(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x80(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x78(%rbp),%r11
	movq %r11,0x10(%r14)
	movq 0xA0(%rbp),%r11
	movq %r11,0x18(%r14)
	movq 0x98(%rbp),%r11
	movq %r11,0x20(%r14)
	movq $0x14A9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x30(%rbp)
	addq $0x20,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0xC98
L_52438:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x95F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_52439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52439
.p2align 0x4
.long 0xC99
L_52439:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x60(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_649:
	cmpq $0x1,%r15
	jnl L_394725
L_52483:
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_649
.p2align 0x4
L_394725:
L_52440:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52441
L_52481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_52482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52482
.p2align 0x4
.long 0xC9D
L_52482:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_52441:
	movq $0xA33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xA35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x10(%r13)
	movq $0xA37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA39,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x90(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0xA3B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	addq $0x10,%r12
	movq $0x1,%r11
	movq %r11,0x0(%r13)
	cmpq $0x1,%r11
	je L_52448
L_52442:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
.p2align 0x4,,0x7
L_52443:
	movq 0x78(%rbp),%r13
	cmpq %r13,0x0(%r15)
	je L_394728
L_52444:
	cmpq $0x1,%r14
	je L_394726
L_52445:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_52443
.p2align 0x4
L_394726:
L_52446:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52448
L_52474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_52475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52475
.p2align 0x4
.long 0xC9B
L_52475:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_52448:
	movq 0x98(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x2637,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x80(%rbp),%rsp
	movq %rsp,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq 0x90(%rbp),%r11
	movq 0x88(%rbp),%r13
	movq 0x78(%rbp),%r9
	movq 0x50(%rbp),%r10
	movq 0x70(%rbp),%rsi
	movq 0x68(%rbp),%r8
	jmp L_52449
.p2align 0x4
L_394728:
L_52476:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52477
L_52478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_52479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52479
.p2align 0x4
.long 0xC9C
L_52479:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_52477:
	movq 0x98(%rbp),%r14
	movq 0x58(%rbp),%r15
	movq 0x90(%rbp),%r11
	movq 0x88(%rbp),%r13
	movq 0x78(%rbp),%r9
	movq 0x50(%rbp),%r10
	movq 0x70(%rbp),%rsi
	movq 0x68(%rbp),%r8
	jmp L_52449
.p2align 0x4
.long 0xC86
L_52358:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_52359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xC79
L_52320:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52321
L_52353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_52354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52354
.p2align 0x4
.long 0xC84
L_52354:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_52321:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x9D8)(%rip),%r14
	movq %r14,0x80(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_52322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0xC56
L_51891:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_51892
L_52003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_52004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52004
.p2align 0x4
.long 0xC5D
L_52004:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_51892:
	movq 0xB0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_51821
L_51894:
	movl %r14d,0xD0(%rbp)
	movq $0x3791,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_51895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_1
.p2align 0x4
.long 0x459
L_53349:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xED18)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_53350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x473
L_54295:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54296
L_54301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_54302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54302
.p2align 0x4
.long 0x49D
L_54302:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_54296:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED40)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_54297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xDB3
L_54479:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54480
L_54486:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_54487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54487
.p2align 0x4
.long 0xDB4
L_54487:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_54480:
	movl 0x110(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_394737
L_54481:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
new1_2:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_54482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54482
.p2align 0x4
.long 0xD8E
L_54482:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_688:
	cmpq $0x1,%r15
	jnl L_394736
L_54484:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_688
.p2align 0x4
L_394736:
L_54483:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_54317
.p2align 0x4
L_394737:
L_54485:
	movq $0x1,0x110(%rbp)
	jmp new1_2
.p2align 0x4
.long 0xDB3
L_54459:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54460
L_54466:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_54467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54467
.p2align 0x4
.long 0xDB4
L_54467:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_54460:
	movl 0x110(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_394740
L_54461:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
new1_1:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_54462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54462
.p2align 0x4
.long 0xD8E
L_54462:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_687:
	cmpq $0x1,%r15
	jnl L_394739
L_54464:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_687
.p2align 0x4
L_394739:
L_54463:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_54317
.p2align 0x4
L_394740:
L_54465:
	movq $0x1,0x110(%rbp)
	jmp new1_1
.p2align 0x4
.long 0xD9A
word_11:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54376
L_54438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_54439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54439
.p2align 0x4
.long 0xDB0
L_54439:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_54376:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1EBD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x148(%rbp)
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movl 0x128(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x168(%rbp)
	movq 0x150(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_394742
L_54377:
	movq %r14,0x180(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_54378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394742:
L_54433:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_54434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x473
L_54441:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x473
bug_102:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54449
L_54450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_54451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54451
.p2align 0x4
.long 0x49D
L_54451:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_54449:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDBC
L_54546:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54547
L_54596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_54597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54597
.p2align 0x4
.long 0xDCC
L_54597:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_54547:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x1B8(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_54548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x473
bug_107:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54603
L_54604:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_54605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54605
.p2align 0x4
.long 0x49D
L_54605:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_54603:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD35
L_53648:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq $0x1,%r15
	jne L_394747
L_53651:
	movq $0x11,0x110(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x110,%rbp
	leaq (L_53652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_394747:
L_53650:
	movq (globalObjptr+0x1510)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD2E
L_53626:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53627
L_53628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53629
.p2align 0x4
.long 0xD2F
L_53629:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_53627:
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_53433
.p2align 0x4
.long 0xD3E
L_53719:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53720
L_53770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53771
.p2align 0x4
.long 0xD43
L_53771:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_53720:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x6C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_51821
L_53722:
	cmpl 0x68(%rbp),%r13d
	jne L_53724
L_53725:
	cmpl $0x0,%r13d
	jl L_53724
L_53726:
	movq $0x1,0x80(%rbp)
	xorl %ecx,%ecx
loop_667:
	cmpl 0x6C(%rbp),%ecx
	jnl L_394749
L_53761:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x68(%rbp)
	movslq %ecx,%r15
	movq 0x70(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x100(%rbp)
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_53762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_2
.p2align 0x4
L_394749:
L_53727:
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_394763
L_53728:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_53729:
	incl %ecx
	jo L_51879
L_53730:
	cmpq $0x1,%r15
	je L_394750
L_53731:
	movq 0x8(%r15),%r15
	jmp L_53729
.p2align 0x4
L_394750:
L_53732:
L_53733:
	movslq %ecx,%rdx
	movq %rdx,0x60(%rbp)
	testq %rdx,%rdx
	jz L_394761
L_53734:
	cmpq $0x7FFFFFFF,%rdx
	ja L_51986
L_53735:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53736
.p2align 0x4
.long 0xD3F
L_53736:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0x68(%rbp)
L_53737:
	movq 0x80(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_668:
	cmpq 0x60(%rbp),%r15
	jnl L_394752
L_53754:
	cmpq $0x1,%r14
	je L_53757
L_53755:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x68(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_668
.p2align 0x4
L_394752:
L_53738:
	movq 0x68(%rbp),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x60(%rbp)
	cmpq %r14,%rdx
	jne L_51821
L_53740:
	decl %r13d
	movl %r13d,0x70(%rbp)
	jo L_51879
L_53741:
	testq %rdx,%rdx
	jz L_394757
L_53742:
	cmpq $0x7FFFFFFF,%rdx
	ja L_51986
L_53743:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53744
.p2align 0x4
.long 0xD40
L_53744:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0x80(%rbp)
L_53745:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_669:
	cmpq 0x60(%rbp),%r15
	jnl L_394754
L_53750:
	movl %r15d,%r14d
	movl 0x70(%rbp),%r13d
	subl %r14d,%r13d
	jo L_51879
L_53751:
	movslq %r13d,%r14
	movq 0x68(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_669
.p2align 0x4
L_394754:
L_53746:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53747
L_53748:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53749
.p2align 0x4
.long 0xD3F
L_53749:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_53747:
	movq 0x80(%rbp),%r15
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_53433
.p2align 0x4
L_394757:
L_53753:
	movq (globalObjptr+0x2560)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_53745
.p2align 0x4
L_394761:
L_53759:
	movq (globalObjptr+0xD88)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_53737
.p2align 0x4
L_394763:
L_53760:
	xorl %ecx,%ecx
	jmp L_53733
.p2align 0x4
.long 0xD45
L_53779:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movl 0x118(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	movl 0x11C(%rbp),%r15d
	movl %r15d,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53780
L_53781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53782
.p2align 0x4
.long 0xD46
L_53782:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53780:
	movq $0xFB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x6C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0xB0(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1ECD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x90(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA0(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0xA0(%rbp)
	jmp loop_666
.p2align 0x4
.long 0xD47
not_7:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movl 0x110(%rbp),%r15d
	movl %r15d,0xB4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53793
L_53799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53800
.p2align 0x4
.long 0xD48
L_53800:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53793:
	movl 0xB4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_394770
L_53794:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_53685
L_53795:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	jmp L_53676
.p2align 0x4
L_394770:
L_53797:
	movl 0xB0(%rbp),%r15d
	incl %r15d
	jo L_51879
L_53798:
	movl %r15d,0xB0(%rbp)
	jmp loop_670
.p2align 0x4
.long 0xD4E
L_53817:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movl 0x110(%rbp),%r15d
	movl %r15d,0x108(%rbp)
	cmpl $0x8,%r15d
	je objptr_3
	cmpl $0x10,%r15d
	je L_394778
	cmpl $0x20,%r15d
	je L_394777
	cmpl $0x40,%r15d
	je L_394773
L_53818:
	movq (globalObjptr+0x2440)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_394773:
L_53843:
	movq 0xD8(%rbp),%r15
	movq %r15,0x70(%rbp)
objptr_3:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53820
.p2align 0x4
.long 0xD4B
L_53820:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x78(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_672:
	cmpq $0x1,%r15
	jnl L_394774
L_53840:
	movq 0x78(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_672
.p2align 0x4
L_394774:
L_53821:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53822
L_53838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53839
.p2align 0x4
.long 0xD51
L_53839:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53822:
	movq 0x78(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_394775
L_53823:
	movq %r14,0x118(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_53824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394775:
L_53833:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_53834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_394777:
L_53842:
	movq 0x78(%rbp),%r14
	movq %r14,0x70(%rbp)
	jmp objptr_3
.p2align 0x4
L_394778:
L_53841:
	movq 0xE0(%rbp),%r14
	movq %r14,0x70(%rbp)
	jmp objptr_3
.p2align 0x4
.long 0xD55
L_53851:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53852
L_53853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_53854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53854
.p2align 0x4
.long 0xD56
L_53854:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_53852:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x78(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x78(%rbp)
	jmp loop_671
.p2align 0x4
.long 0xD6C
L_54089:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x148(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_54090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parallelMove_0
.p2align 0x4
.long 0xD79
L_54176:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54177
L_54193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_54194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54194
.p2align 0x4
.long 0xD81
L_54194:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_54177:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_54178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x473
L_53965:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_53966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x473
L_54017:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_54018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xD66
L_54055:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54056
L_54062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_54063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54063
.p2align 0x4
.long 0xD67
L_54063:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_54056:
	movq $0x1ED7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF0(%rbp),%r14
	cmpq $0x1,%r14
	je L_394783
	cmpq $0x2,%r14
	je L_394782
L_54057:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1097,%r13
	je L_394781
L_54059:
	movq %r15,0x48(%rbp)
	jmp L_53585
.p2align 0x4
L_394781:
L_54058:
	movq %r15,0x30(%rbp)
	movq 0xF0(%rbp),%r9
	movl 0x1C(%r9),%r8d
	movl %r8d,(localWord32+0x0)(%rip)
	movq 0x40(%r9),%r15
	movb 0x21(%r9),%r8b
	movb %r8b,(localWord8+0x0)(%rip)
	movq 0x38(%r9),%r10
	movl 0x18(%r9),%r8d
	movl %r8d,(localWord32+0x4)(%rip)
	movq 0x30(%r9),%r11
	movl 0x14(%r9),%r8d
	movl %r8d,(localWord32+0x8)(%rip)
	movl 0x10(%r9),%r8d
	movl %r8d,(localWord32+0xC)(%rip)
	movl 0xC(%r9),%ebx
	movl 0x8(%r9),%ecx
	movb 0x20(%r9),%dl
	movq 0x0(%r9),%r14
	movq 0x28(%r9),%r13
	movq 0x60(%rbp),%r9
	movq %r9,0x48(%rbp)
	jmp L_53414
.p2align 0x4
L_394782:
L_54061:
	movq %r15,0x30(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_53666
.p2align 0x4
L_394783:
L_54060:
	movq 0x60(%rbp),%r13
	xchgq %r13,%r14
	jmp L_53664
.p2align 0x4
.long 0xD60
L_53936:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53937
L_53941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_53942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53942
.p2align 0x4
.long 0xD61
L_53942:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_53937:
	movl 0xE0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_394785
L_53938:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
L_53939:
	movq $0x23BF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	movl 0x6C(%rbp),%ecx
	jmp loop_673
.p2align 0x4
L_394785:
L_53940:
	movq $0x1,%r15
	jmp L_53939
.p2align 0x4
.long 0xD59
L_53868:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53869
L_53875:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53876
.p2align 0x4
.long 0xD5A
L_53876:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53869:
	movq 0xF0(%rbp),%r15
	cmpq $0x1,%r15
	je L_394789
	cmpq $0x2,%r15
	je L_394788
L_53870:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1097,%r14
	je L_394787
L_53872:
	movq $0x1,0x48(%rbp)
	jmp L_53585
.p2align 0x4
L_394787:
L_53871:
	movq 0xF0(%rbp),%r9
	movl 0x1C(%r9),%r8d
	movl %r8d,(localWord32+0x0)(%rip)
	movq 0x40(%r9),%r15
	movb 0x21(%r9),%r8b
	movb %r8b,(localWord8+0x0)(%rip)
	movq 0x38(%r9),%r10
	movl 0x18(%r9),%r8d
	movl %r8d,(localWord32+0x4)(%rip)
	movq 0x30(%r9),%r11
	movl 0x14(%r9),%r8d
	movl %r8d,(localWord32+0x8)(%rip)
	movl 0x10(%r9),%r8d
	movl %r8d,(localWord32+0xC)(%rip)
	movl 0xC(%r9),%ebx
	movl 0x8(%r9),%ecx
	movb 0x20(%r9),%dl
	movq 0x0(%r9),%r14
	movq 0x28(%r9),%r13
	movq $0x1,0x30(%rbp)
	movq 0x60(%rbp),%r9
	movq %r9,0x48(%rbp)
	jmp L_53414
.p2align 0x4
L_394788:
L_53874:
	movq $0x1,0x30(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x48(%rbp)
	jmp L_53666
.p2align 0x4
L_394789:
L_53873:
	movq $0x1,%r13
	movq 0x60(%rbp),%r14
	xchgq %r13,%r15
	jmp L_53664
.p2align 0x4
.long 0x459
L_53290:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xED10)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_53291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xD14
L_53177:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq 0x0(%r14),%r13
	movw 0x0(%r13),%r11w
	movw %r11w,%r15w
	andw $0x3,%r15w
	cmpw $0x1,%r15w
	je L_394793
	cmpw $0x2,%r15w
	je L_394791
L_53178:
	movq (globalObjptr+0xDE10)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_53179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_394791:
L_53216:
	shrw $0x2,%r11w
	movb %r11b,%r14b
	testb %r14b,%r14b
	jnz L_394792
L_53217:
	movq (globalObjptr+0xDE30)(%rip),%r15
L_53218:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_53179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_394792:
L_53219:
	movq (globalObjptr+0xDE38)(%rip),%r15
	jmp L_53218
.p2align 0x4
L_394793:
L_53215:
	movq (globalObjptr+0xDE28)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_53179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xD10
L_53149:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_53150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maxPath_0
.p2align 0x4
.long 0xCFC
L_53054:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53056
L_53068:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_53069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53069
.p2align 0x4
.long 0xD01
L_53069:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	jmp L_53056
.p2align 0x4
.long 0xCFD
L_53058:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp next_11
.p2align 0x4
.long 0xCE8
L_52969:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movl 0x138(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	movl %r15d,0x138(%rbp)
	movq $0x3,0x140(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_52970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xCDC
bug_93:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53033
L_53034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_53035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53035
.p2align 0x4
.long 0x504
L_53035:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_53033:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xCC7
L_52859:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x128(%rbp)
	movq $0x1,0x130(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_52860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xCD4
L_52894:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x138(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_52895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xCD8
L_52911:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x110(%rbp)
	movl $0x0,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_52912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
.long 0xCDF
L_52935:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x128(%rbp)
	movq $0x1,0x130(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_52936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xD0C
L_53123:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movl 0x158(%rbp),%r15d
	movl %r15d,0xA4(%rbp)
	movl %r15d,0x158(%rbp)
	movq $0x3,0x160(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x158,%rbp
	leaq (L_53124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x473
bug_94:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53131
L_53132:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_53133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53133
.p2align 0x4
.long 0x49D
L_53133:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_53131:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xCB5
L_52793:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52794
L_52812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_52813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52813
.p2align 0x4
.long 0xCBD
L_52813:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_52794:
	movq $0xCB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xCB7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x10,%r12
	movq $0x2,0x0(%r13)
	movq $0xCB9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x20,%r12
	movq %r13,0x0(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_52795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1317
.p2align 0x4
.long 0xC6F
L_52825:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	jmp L_51919
.p2align 0x4
.long 0xC6F
L_52819:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	jmp L_51919
.p2align 0x4
.long 0xC87
L_52359:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52360
L_52418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_52419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52419
.p2align 0x4
.long 0xC94
L_52419:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_52360:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_51821
L_52362:
	movl %r13d,0x70(%rbp)
	movq $0x3CAB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_52363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0xC7A
L_52322:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_52323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xC54
L_51895:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_51896
L_52001:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_52002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52002
.p2align 0x4
.long 0xC55
L_52002:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_51896:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x23AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_51879
L_51897:
	movl %r14d,0x0(%r15)
	movq $0x1955,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r9,0x0(%r14)
	movl %r13d,0x28(%rbp)
	jmp L_51898
.p2align 0x4
.long 0x5ED
L_53350:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_53351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x473
L_54297:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54298
L_54299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_54300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54300
.p2align 0x4
.long 0x49D
L_54300:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_54298:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD9B
L_54378:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x138(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x128(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x150(%rbp)
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_54379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x473
L_54434:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x473
bug_101:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54442
L_54443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_54444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54444
.p2align 0x4
.long 0x49D
L_54444:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_54442:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDBD
L_54548:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_54549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0xD36
L_53652:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53653
L_53655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53656
.p2align 0x4
.long 0xD38
L_53656:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53653:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_53654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0xD41
L_53762:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movl 0xF8(%rbp),%r15d
	movl %r15d,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53763
L_53767:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_53768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53768
.p2align 0x4
.long 0xD42
L_53768:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_53763:
	movl 0x90(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_394805
L_53764:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
L_53765:
	movq $0x23BF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	movl 0x68(%rbp),%ecx
	jmp loop_667
.p2align 0x4
L_394805:
L_53766:
	movq $0x1,%r15
	jmp L_53765
.p2align 0x4
.long 0xD4F
L_53824:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53825
L_53831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53832
.p2align 0x4
.long 0xD4B
L_53832:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53825:
	movq $0x37CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movl $0x1,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_53826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x473
L_53834:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_96+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xD6D
L_54090:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x128(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x78(%rbp)
	cmpq %rdx,%r14
	jne L_51821
L_54092:
	testq %rdx,%rdx
	jz L_394839
L_54093:
	cmpq $0x7FFFFFFF,%rdx
	ja L_51986
L_54094:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_54095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54095
.p2align 0x4
.long 0xD6E
L_54095:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq %rax,0xE0(%rbp)
L_54096:
	movq $0x0,0x108(%rbp)
.p2align 0x4,,0x7
loop_677:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394837
.p2align 0x4,,0x7
L_54097:
	movq 0x108(%rbp),%r15
	cmpq 0x78(%rbp),%r15
	jnl L_394812
L_54161:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x128(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_54162:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_53135
L_54163:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF59,%r15
	je L_394810
	cmpq $0xF5A,%r15
	je L_394809
	cmpq $0xF5D,%r15
	je L_394808
	jmp L_53135
.p2align 0x4
L_394808:
L_54167:
	movq 0x0(%r13),%r15
	movq $0x1ECD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_54165:
	movq 0xE0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x108(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x108(%rbp)
	jmp loop_677
.p2align 0x4
L_394809:
L_54166:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x1ECB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_54165
.p2align 0x4
L_394810:
L_54164:
	movq 0x0(%r13),%r15
	movq $0x1EC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_54165
.p2align 0x4
L_394812:
L_54098:
	movq 0xE0(%rbp),%r14
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x70(%rbp),%rdx
	testq %rdx,%rdx
	jz L_394836
L_54099:
	cmpq $0x7FFFFFFF,%rdx
	ja L_51986
L_54100:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_54101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54101
.p2align 0x4
.long 0xD6F
L_54101:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq %rax,0x78(%rbp)
L_54102:
	movq $0x0,0x108(%rbp)
.p2align 0x4,,0x7
loop_678:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394834
.p2align 0x4,,0x7
L_54103:
	movq 0x108(%rbp),%r15
	cmpq 0x70(%rbp),%r15
	jnl L_394813
L_54156:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x138(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x1EC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq 0x78(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x108(%rbp)
	jmp loop_678
.p2align 0x4
L_394813:
L_54104:
	movq 0x78(%rbp),%r14
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x23B7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq %r13,0x70(%rbp)
	movq 0xE0(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,0xE0(%rbp)
.p2align 0x4,,0x7
L_54105:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394833
.p2align 0x4,,0x7
L_54106:
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF5B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2981,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_394814
L_54107:
	movq %r15,0xE0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_54105
.p2align 0x4
L_394814:
L_54108:
	movq %r13,0x78(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq $0x1,0xE0(%rbp)
.p2align 0x4,,0x7
L_54109:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394832
.p2align 0x4,,0x7
L_54110:
	movq $0x2981,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_394815
L_54111:
	movq %r15,0xE0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_54109
.p2align 0x4
L_394815:
L_54112:
	movq 0xE0(%rbp),%r13
	cmpq $0x1,%r13
	je L_394826
L_54113:
	movq 0x78(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_54114:
	addq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	cmpq $0x1,%r13
	je L_394816
L_54115:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_54114
.p2align 0x4
L_394816:
L_54116:
	testq %r15,%r15
	jz L_394825
L_54117:
	cmpq $0x7FFFFFFF,%r15
	ja L_51986
L_54118:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_54119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54119
.p2align 0x4
.long 0xD70
L_54119:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x108(%rbp)
L_54120:
	movq 0xE0(%rbp),%r11
	movq 0x78(%rbp),%r13
	xorq %r14,%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_679:
	cmpq 0x70(%rbp),%r15
	jnl L_394819
.p2align 0x4,,0x7
loop_680:
	cmpq 0x0(%r13),%r14
	jl L_394818
L_54132:
	cmpq $0x1,%r11
	je L_53493
L_54133:
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r11
	xorq %r14,%r14
	movq %r10,%r13
	jmp loop_680
.p2align 0x4
L_394818:
L_54135:
	movq 0x8(%r13),%r10
	movq 0x0(%r10,%r14,8),%r9
	incq %r14
	movq 0x108(%rbp),%r10
	movq %r10,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r9,0x0(%r10,%r15,8)
	incq %r15
	jmp loop_679
.p2align 0x4
L_394819:
L_54121:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54122
L_54129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_54130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54130
.p2align 0x4
.long 0xD71
L_54130:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_54122:
	movq 0x108(%rbp),%r15
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r15)
L_54123:
	movq $0x1ED9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0xF0(%rbp),%r15
	cmpq $0x1,%r15
	je L_394822
	cmpq $0x2,%r15
	je L_394821
L_54124:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1097,%r13
	je L_394820
L_54126:
	movq %r14,0x48(%rbp)
	jmp L_53585
.p2align 0x4
L_394820:
L_54125:
	movq %r14,0x30(%rbp)
	movq 0xF0(%rbp),%r9
	movl 0x1C(%r9),%r8d
	movl %r8d,(localWord32+0x0)(%rip)
	movq 0x40(%r9),%r15
	movb 0x21(%r9),%r8b
	movb %r8b,(localWord8+0x0)(%rip)
	movq 0x38(%r9),%r10
	movl 0x18(%r9),%r8d
	movl %r8d,(localWord32+0x4)(%rip)
	movq 0x30(%r9),%r11
	movl 0x14(%r9),%r8d
	movl %r8d,(localWord32+0x8)(%rip)
	movl 0x10(%r9),%r8d
	movl %r8d,(localWord32+0xC)(%rip)
	movl 0xC(%r9),%ebx
	movl 0x8(%r9),%ecx
	movb 0x20(%r9),%dl
	movq 0x0(%r9),%r14
	movq 0x28(%r9),%r13
	movq 0x60(%rbp),%r9
	movq %r9,0x48(%rbp)
	jmp L_53414
.p2align 0x4
L_394821:
L_54128:
	movq %r14,0x30(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x48(%rbp)
	jmp L_53666
.p2align 0x4
L_394822:
L_54127:
	movq 0x60(%rbp),%r13
	xchgq %r14,%r15
	xchgq %r13,%r14
	jmp L_53664
.p2align 0x4
L_394825:
L_54137:
	movq (globalObjptr+0x7560)(%rip),%r14
	movq %r14,0x108(%rbp)
	jmp L_54120
.p2align 0x4
L_394826:
L_54138:
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0xE0(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r14,0x70(%rbp)
	je L_394831
L_54139:
	testq %r13,%r13
	jz L_394830
L_54140:
	cmpq $0x7FFFFFFF,%r13
	ja L_51986
L_54141:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_54142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54142
.p2align 0x4
.long 0xD72
L_54142:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x78(%rbp)
L_54143:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_681:
	cmpq 0xE0(%rbp),%r15
	jnl L_394827
L_54148:
	movq 0x70(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x78(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_681
.p2align 0x4
L_394827:
L_54144:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54145
L_54146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_54147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54147
.p2align 0x4
.long 0xD73
L_54147:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_54145:
	movq 0x78(%rbp),%r15
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_54123
.p2align 0x4
L_394830:
L_54150:
	movq (globalObjptr+0x7568)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_54143
.p2align 0x4
L_394831:
L_54151:
	movq 0x70(%rbp),%r15
	jmp L_54123
.p2align 0x4
L_394832:
L_54152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_54153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54153
.p2align 0x4
.long 0xD74
L_54153:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	jmp L_54110
.p2align 0x4
L_394833:
L_54154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_54155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54155
.p2align 0x4
.long 0xD74
L_54155:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	jmp L_54106
.p2align 0x4
L_394834:
L_54157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_54158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54158
.p2align 0x4
.long 0xD75
L_54158:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	jmp L_54103
.p2align 0x4
L_394836:
L_54160:
	movq (globalObjptr+0x7558)(%rip),%r14
	movq %r14,0x78(%rbp)
	jmp L_54102
.p2align 0x4
L_394837:
L_54168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_54169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54169
.p2align 0x4
.long 0xD76
L_54169:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	jmp L_54097
.p2align 0x4
L_394839:
L_54171:
	movq (globalObjptr+0x7548)(%rip),%r15
	movq %r15,0xE0(%rbp)
	jmp L_54096
.p2align 0x4
.long 0xD7A
L_54178:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54179
L_54191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_54192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54192
.p2align 0x4
.long 0xD80
L_54192:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_54179:
	movq $0x1147,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x160(%rbp)
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0x168(%rbp)
	movq 0x110(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x190(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x170(%rbp)
	movq $0x11,0x180(%rbp)
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_54180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x459
L_53966:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xED38)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_53967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x473
L_54018:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_54019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5ED
L_53291:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_53292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xD15
L_53179:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53180
L_53213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_53214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53214
.p2align 0x4
.long 0xC97
L_53214:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_53180:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xD208)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movw 0x0(%r14),%r13w
	movw %r13w,%r15w
	andw $0x3,%r15w
	cmpw $0x1,%r15w
	je L_394844
	cmpw $0x2,%r15w
	je L_394842
L_53181:
	movq (globalObjptr+0xDE10)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_53182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_394842:
L_53209:
	shrw $0x2,%r13w
	movb %r13b,%r14b
	testb %r14b,%r14b
	jnz L_394843
L_53210:
	movq (globalObjptr+0xDE30)(%rip),%r15
L_53211:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_53182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_394843:
L_53212:
	movq (globalObjptr+0xDE38)(%rip),%r15
	jmp L_53211
.p2align 0x4
L_394844:
L_53208:
	movq (globalObjptr+0xDE28)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_53182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xD11
L_53150:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_53151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0xCE9
L_52970:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x138(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_52971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xCC8
L_52860:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52861
L_52883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_52884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52884
.p2align 0x4
.long 0xCD1
L_52884:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_52861:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x128(%rbp)
	addq $0x10,%r12
	movq 0x108(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_52862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp insert_0
.p2align 0x4
.long 0xCD5
L_52895:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52896
L_52898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_52899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52899
.p2align 0x4
.long 0xCD6
L_52899:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_52896:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x120(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x68(%rbp)
	movl $0x1,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_52897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp heapCheck_0
.p2align 0x4
.long 0xCD9
L_52912:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52913
L_52914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_52915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52915
.p2align 0x4
.long 0xCDA
L_52915:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_52913:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1243,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x38(%r14)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x0,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x0,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq (globalObjptr+0xED08)(%rip),%r13
	movq %r13,0x28(%r14)
	movq (globalObjptr+0xC68)(%rip),%r13
	movq %r13,0x30(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x40(%r14)
	movq (globalObjptr+0xF20)(%rip),%r13
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r13)
	movq (globalObjptr+0xF48)(%rip),%r11
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r11)
	movq (globalObjptr+0xF40)(%rip),%r10
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r10)
	movq $0x213D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq %r10,0x0(%r15)
	movq $0x1,0x10(%r15)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x30,%r12
	movq %r11,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq %r13,0x20(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	jmp L_52907
.p2align 0x4
.long 0xCE0
L_52936:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52937
L_52946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_52947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52947
.p2align 0x4
.long 0xCE3
L_52947:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_52937:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x128(%rbp)
	addq $0x10,%r12
	movq 0x108(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_52938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp insert_0
.p2align 0x4
.long 0xD0D
L_53124:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x130(%rbp),%r14
	movq %r14,0x150(%rbp)
	movq 0x148(%rbp),%r14
	movq %r14,0x158(%rbp)
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_53125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xCB6
L_52795:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52796
L_52810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_52811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52811
.p2align 0x4
.long 0xC77
L_52811:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_52796:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x262B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_52797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_1
.p2align 0x4
.long 0xC88
L_52363:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_52364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xC7A
L_52323:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq (globalObjptr+0xECE0)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_52324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x6FF
L_53351:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53352
L_53375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_53376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53376
.p2align 0x4
.long 0x5EE
L_53376:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_53352:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_53353:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_51879
L_53354:
	cmpq $0x1,%r14
	je L_394851
L_53355:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_53353
.p2align 0x4
L_394851:
L_53356:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53357
L_53373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_53374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53374
.p2align 0x4
.long 0x48C
L_53374:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_53357:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_394852
L_53358:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
toString_40:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (rev_41+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_394852:
L_53372:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_40
.p2align 0x4
.long 0xD9C
L_54379:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movl 0x178(%rbp),%r15d
	movl %r15d,0x138(%rbp)
	movl %r15d,0x178(%rbp)
	movq $0x3,0x180(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x178,%rbp
	leaq (L_54380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x473
bug_100:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54435
L_54436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_54437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54437
.p2align 0x4
.long 0x49D
L_54437:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_54435:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDBD
L_54549:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movl 0x1B8(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	movslq %r15d,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x130(%rbp)
	movq 0x198(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_394857
L_54550:
	movq %r14,0x1C0(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_54551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394857:
L_54591:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_54592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xD37
L_53654:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x78(%rbp),%r13
	movq 0xD8(%rbp),%r11
	movq %r11,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x78(%rbp)
	jmp loop_664
.p2align 0x4
.long 0xD50
L_53826:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x68(%rbp)
	movb $0x6,%r15b
	movzbq %r15b,%r14
	shlq $0x3,%r14
	orq $0x2,%r14
	movq %r14,0x110(%rbp)
	movl $0x1,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_53827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
.long 0x473
bug_96:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53835
L_53836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_53837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53837
.p2align 0x4
.long 0x49D
L_53837:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_53835:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD7B
L_54180:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq $0x1,%r15
	jne L_53650
L_54182:
	movq 0x168(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq $0x11,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_54183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x5ED
L_53967:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_53968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x459
L_54019:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xED18)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_54020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x6FF
L_53292:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53293
L_53315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_53316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53316
.p2align 0x4
.long 0x5EE
L_53316:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_53293:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_53294:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_51879
L_53295:
	cmpq $0x1,%r14
	je L_394860
L_53296:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_53294
.p2align 0x4
L_394860:
L_53297:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53298
L_53313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_53314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53314
.p2align 0x4
.long 0x48C
L_53314:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_53298:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_394861
L_53299:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
toString_39:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (rev_40+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_394861:
L_53312:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_39
.p2align 0x4
.long 0xD16
L_53182:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53183
L_53206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_53207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53207
.p2align 0x4
.long 0xC94
L_53207:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_53183:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE18)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_394866
	cmpq $0x2,%r13
	je L_394865
L_53184:
	movq %r13,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_53185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_394865:
L_53205:
	movq (globalObjptr+0xDE10)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_53186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_394866:
L_53204:
	movq (globalObjptr+0xDE28)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_53186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xD12
L_53151:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_53152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xCEA
L_52971:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52972
L_53021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_53022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53022
.p2align 0x4
.long 0xCF8
L_53022:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_52972:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xF48)(%rip),%r14
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_52973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52973
.p2align 0x4
.long 0xCEB
L_52973:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_652:
	cmpq $0x2,%r15
	jnl L_394870
L_53016:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_394869
	cmpl $0x1,%r14d
	je L_394868
L_53017:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4A8)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_394868:
L_53020:
	movq 0x30(%rbp),%r14
L_53019:
	movq 0x28(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_652
.p2align 0x4
L_394869:
L_53018:
	movq 0x48(%rbp),%r14
	jmp L_53019
.p2align 0x4
L_394870:
L_52974:
	movq 0x28(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xA8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r15
	je L_394872
L_52975:
	movq %r15,0x30(%rbp)
L_52976:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_394871
L_52977:
	movq 0x0(%r14),%r15
	movq %r15,0x138(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x58(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_52978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394871:
L_53001:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_53002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_394872:
L_53006:
	movq %r13,0x138(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x138,%rbp
	leaq (L_53007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0xCC9
L_52862:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52863
L_52881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_52882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52882
.p2align 0x4
.long 0xCD0
L_52882:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_52863:
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x128(%rbp)
	movq (globalWord64+0x100)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq (globalWord64+0xE8)(%rip),%r15
	movq %r15,0x138(%rbp)
	movq $0x11,0x140(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x128,%rbp
	leaq (L_52864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_0
.p2align 0x4
.long 0xC6F
L_52897:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_51919
.p2align 0x4
.long 0xCE1
L_52938:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52939
L_52944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_52945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52945
.p2align 0x4
.long 0xCE2
L_52945:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_52939:
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movq (globalWord64+0xFA0)(%rip),%r15
	movq %r15,0x120(%rbp)
	movq $0x11,0x128(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq (globalWord64+0xFB8)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_52940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_0
.p2align 0x4
.long 0xD0E
L_53125:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53126
L_53127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_53128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53128
.p2align 0x4
.long 0xD0F
L_53128:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_53126:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp L_53116
.p2align 0x4
.long 0xCB7
L_52797:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52798
L_52808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_52809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52809
.p2align 0x4
.long 0xCBC
L_52809:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_52798:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x262D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x10(%r15)
	movq 0x40(%rbp),%r15
	movw 0x0(%r15),%r13w
	movw %r13w,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_52799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_0
.p2align 0x4
.long 0xC88
L_52364:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52365
L_52416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_52417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52417
.p2align 0x4
.long 0xC94
L_52417:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_52365:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xECE8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_51821
L_52367:
	movl %r13d,0x80(%rbp)
	movq $0x3B2D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_52368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0xC7A
L_52324:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52325
L_52351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_52352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52352
.p2align 0x4
.long 0xC83
L_52352:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_52325:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_51821
L_52327:
	movl %r13d,0x80(%rbp)
	movq $0x3CAD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_52328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x473
rev_41:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_394884
L_53359:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_53360:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394883
.p2align 0x4,,0x7
L_53361:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_394882
L_53362:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_53360
.p2align 0x4
L_394882:
L_53364:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_53365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_394883:
L_53369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_53370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53370
.p2align 0x4
.long 0x4FC
L_53370:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_53361
.p2align 0x4
L_394884:
L_53371:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_53364
.p2align 0x4
.long 0xD9C
L_54380:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq %r15,0x170(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_54381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xDBE
L_54551:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x138(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x140(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x148(%rbp)
	movq %r15,0x1B8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_54552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x473
L_54592:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xD1F
L_53827:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53828
L_53829:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_53830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53830
.p2align 0x4
.long 0xD4B
L_53830:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_53828:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1243,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x38(%r14)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x0,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x0,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq (globalObjptr+0xDA18)(%rip),%r13
	movq %r13,0x28(%r14)
	movq (globalObjptr+0xC68)(%rip),%r13
	movq %r13,0x30(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x40(%r14)
	movq $0x1EDB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x28,%r12
	movq $0x0,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1,0x18(%r15)
	jmp simple_13
.p2align 0x4
.long 0xD7C
L_54183:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54184
L_54189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_54190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54190
.p2align 0x4
.long 0xD7F
L_54190:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_54184:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x170(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_54185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x6FF
L_53968:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53969
L_53992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_53993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53993
.p2align 0x4
.long 0x5EE
L_53993:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_53969:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_53970:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_51879
L_53971:
	cmpq $0x1,%r14
	je L_394887
L_53972:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_53970
.p2align 0x4
L_394887:
L_53973:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53974
L_53990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_53991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53991
.p2align 0x4
.long 0x48C
L_53991:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_53974:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_394888
L_53975:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
toString_41:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (rev_42+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_394888:
L_53989:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_41
.p2align 0x4
.long 0x5ED
L_54020:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_54021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x473
rev_40:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_394894
L_53300:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_53301:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394893
.p2align 0x4,,0x7
L_53302:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_394892
L_53303:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_53301
.p2align 0x4
L_394892:
L_53305:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_95+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_394893:
L_53309:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_53310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53310
.p2align 0x4
.long 0x4FC
L_53310:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_53302
.p2align 0x4
L_394894:
L_53311:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_53305
.p2align 0x4
.long 0xD17
L_53185:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_53186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xD17
L_53186:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53187
L_53202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_53203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53203
.p2align 0x4
.long 0xD1A
L_53203:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_53187:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE20)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_53188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xD12
L_53152:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53153
L_53164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_53165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53165
.p2align 0x4
.long 0xD13
L_53165:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_53153:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_53154:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_51879
L_53155:
	cmpq $0x1,%r14
	je L_394896
L_53156:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_53154
.p2align 0x4
L_394896:
L_53157:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53158
L_53162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_53163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53163
.p2align 0x4
.long 0xC8D
L_53163:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_53158:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_394897
L_53159:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
x_103:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x60(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_53160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_394897:
L_53161:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_103
.p2align 0x4
.long 0xCEC
L_52978:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52979
L_52999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_53000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53000
.p2align 0x4
.long 0xCF2
L_53000:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_52979:
	movq $0x217B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x70(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_394901
L_52980:
	movq 0x0(%r15),%r13
	movq %r13,0x138(%rbp)
	movq %r14,0x140(%rbp)
	addq $0x138,%rbp
	leaq (word_9+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394901:
L_52994:
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_52995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x473
L_53002:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_92+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xCF3
L_53007:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movl 0x138(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53008
L_53014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_53015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53015
.p2align 0x4
.long 0xCF7
L_53015:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_53008:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x3C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x1,0x138(%rbp)
	movl $0x0,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_53009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0xCCA
L_52864:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52865
L_52879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_52880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52880
.p2align 0x4
.long 0xCCF
L_52880:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_52865:
	movl 0x38(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_394905
L_52866:
	movq 0xF0(%rbp),%r13
	movq 0xF8(%rbp),%r14
	movq 0x100(%rbp),%r15
L_52867:
	movq $0x35,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x18(%r11)
	movq %r15,0x20(%r11)
	addq $0x30,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r11)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r15)
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_51919
L_52869:
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movq (globalWord64+0xFA0)(%rip),%r15
	movq %r15,0x120(%rbp)
	movq $0x11,0x128(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq (globalWord64+0xFB8)(%rip),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_52870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_0
.p2align 0x4
L_394905:
L_52874:
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x58(%rbp),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_52875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0xCCB
L_52940:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52941
L_52942:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_52943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52943
.p2align 0x4
.long 0xCCC
L_52943:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_52941:
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_51919
.p2align 0x4
.long 0xCB8
L_52799:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52800
L_52806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_52807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52807
.p2align 0x4
.long 0xCBB
L_52807:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_52800:
	movq $0xCB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xCB7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x10,%r12
	movq $0x2,0x0(%r13)
	movq $0xCB9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x20,%r12
	movq %r13,0x0(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_52801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1317
.p2align 0x4
.long 0xC89
L_52368:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_52369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xC7B
L_52328:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_52329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x473
L_53365:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53366
L_53367:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_53368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53368
.p2align 0x4
.long 0x49D
L_53368:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_53366:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD9D
L_54381:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54382
L_54431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_54432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54432
.p2align 0x4
.long 0xDAF
L_54432:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_54382:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x118(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x168(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x158(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_54383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1294
.p2align 0x4
.long 0xDBF
L_54552:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movl 0x1B8(%rbp),%r15d
	movl %r15d,0x138(%rbp)
	movl %r15d,0x1B8(%rbp)
	movq $0x3,0x1C0(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_54553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x473
bug_106:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54593
L_54594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_54595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54595
.p2align 0x4
.long 0x49D
L_54595:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_54593:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD7D
L_54185:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54186
L_54187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_54188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54188
.p2align 0x4
.long 0xD7E
L_54188:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_54186:
	movq 0x138(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x148(%rbp),%r14
	movq 0x160(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x148(%rbp)
	jmp loop_676
.p2align 0x4
.long 0x473
rev_42:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_394915
L_53976:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_53977:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394914
.p2align 0x4,,0x7
L_53978:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_394913
L_53979:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_53977
.p2align 0x4
L_394913:
L_53981:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_53982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_394914:
L_53986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_53987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53987
.p2align 0x4
.long 0x4FC
L_53987:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_53978
.p2align 0x4
L_394915:
L_53988:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_53981
.p2align 0x4
.long 0x6FF
L_54021:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54022
L_54045:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_54046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54046
.p2align 0x4
.long 0x5EE
L_54046:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_54022:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_54023:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_51879
L_54024:
	cmpq $0x1,%r14
	je L_394916
L_54025:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_54023
.p2align 0x4
L_394916:
L_54026:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54027
L_54043:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_54044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54044
.p2align 0x4
.long 0x48C
L_54044:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_54027:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_394917
L_54028:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
toString_42:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (rev_43+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_394917:
L_54042:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_42
.p2align 0x4
.long 0x473
bug_95:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53306
L_53307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_53308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53308
.p2align 0x4
.long 0x49D
L_53308:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_53306:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xD18
L_53188:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53189
L_53200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_53201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53201
.p2align 0x4
.long 0xD19
L_53201:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_53189:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_53190:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_51879
L_53191:
	cmpq $0x1,%r14
	je L_394922
L_53192:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_53190
.p2align 0x4
L_394922:
L_53193:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53194
L_53198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_53199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53199
.p2align 0x4
.long 0xCA6
L_53199:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_53194:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_394923
L_53195:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
x_104:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x58(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_53196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_394923:
L_53197:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_104
.p2align 0x4
.long 0x5CC
L_53160:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xCED
word_9:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52981
L_52992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_52993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52993
.p2align 0x4
.long 0xCF1
L_52993:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_52981:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x128(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq %r14,0x110(%rbp)
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x140(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x168(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x128(%rbp)
	movl $0x0,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_52982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp heapCheck_0
.p2align 0x4
.long 0x473
L_52995:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_91+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x473
bug_92:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53003
L_53004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_53005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53005
.p2align 0x4
.long 0x49D
L_53005:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_53003:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xCF4
L_53009:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x138(%rbp)
	movl $0x0,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_53010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
.long 0xCCB
L_52870:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52871
L_52872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_52873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52873
.p2align 0x4
.long 0xCCC
L_52873:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_52871:
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_51919
.p2align 0x4
.long 0xCCD
L_52875:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movl 0x128(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52876
L_52877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_52878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52878
.p2align 0x4
.long 0xCCE
L_52878:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_52876:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x3C(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r11
	movq %r11,0x18(%r13)
	movq $0x1,%r14
	movq (globalObjptr+0xF20)(%rip),%r15
	jmp L_52867
.p2align 0x4
.long 0xCB9
L_52801:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52802
L_52804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_52805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52805
.p2align 0x4
.long 0xCBA
L_52805:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_52802:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x262B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_52803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_1
.p2align 0x4
.long 0xC89
L_52369:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52370
L_52414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_52415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52415
.p2align 0x4
.long 0xC93
L_52415:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_52370:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xECF0)(%rip),%r14
	movq %r14,0x8(%r15)
	cmpq $0x1,0x50(%rbp)
	je L_394932
L_52371:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_52372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_394932:
L_52409:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_52410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xC7B
L_52329:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52330
L_52349:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_52350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52350
.p2align 0x4
.long 0xC82
L_52350:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_52330:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_52331:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_51879
L_52332:
	cmpq $0x1,%r14
	je L_394934
L_52333:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_52331
.p2align 0x4
L_394934:
L_52334:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52335
L_52347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_52348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52348
.p2align 0x4
.long 0xC81
L_52348:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_52335:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_394935
L_52336:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
x_101:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x80(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_52337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_394935:
L_52346:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_101
.p2align 0x4
.long 0xD9E
L_54383:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x130(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x148(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x158(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_394939
L_54384:
	movq 0x0(%r15),%r13
	movq %r13,0x178(%rbp)
	movq %r14,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_54385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394939:
L_54426:
	movq 0x158(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_54427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xDC0
L_54553:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq %r15,0x1B8(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1B8,%rbp
	leaq (L_54554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x473
L_53982:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53983
L_53984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_53985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53985
.p2align 0x4
.long 0x49D
L_53985:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_53983:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x473
rev_43:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_394943
L_54029:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_54030:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_394942
.p2align 0x4,,0x7
L_54031:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_394941
L_54032:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_54030
.p2align 0x4
L_394941:
L_54034:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_54035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_394942:
L_54039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_54040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54040
.p2align 0x4
.long 0x4FC
L_54040:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_54031
.p2align 0x4
L_394943:
L_54041:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_54034
.p2align 0x4
.long 0x59B
L_53196:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xCEE
L_52982:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_394944
L_52983:
	movq 0x0(%r14),%r15
	movq %r15,0x110(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (word_10+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394944:
L_52987:
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_52988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x473
bug_91:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52996
L_52997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_52998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52998
.p2align 0x4
.long 0x49D
L_52998:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_52996:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xCF5
L_53010:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_53011
L_53012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_53013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_53013
.p2align 0x4
.long 0xCF6
L_53013:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_53011:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1243,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x38(%r14)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x0,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x0,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r15b
	movzbl %r15b,%r13d
	movb $0x1,%r15b
	movzbl %r15b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq (globalObjptr+0xED08)(%rip),%r15
	movq %r15,0x28(%r14)
	movq (globalObjptr+0xC68)(%rip),%r15
	movq %r15,0x30(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%r14)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF48)(%rip),%r13
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r13)
	movq (globalObjptr+0xF40)(%rip),%r11
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r11)
	movq $0x213D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	addq $0x20,%r12
	movq %r11,0x0(%r10)
	movq $0x1,0x10(%r10)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	addq $0x30,%r12
	movq %r13,0x8(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r11
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r15)
	movq %r13,0x30(%rbp)
	jmp L_52976
.p2align 0x4
.long 0xC6F
L_52803:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	jmp L_51919
.p2align 0x4
.long 0xC8A
L_52372:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_52373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xC91
L_52410:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52411
L_52412:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_52413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52413
.p2align 0x4
.long 0xC92
L_52413:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_52411:
	movq 0x28(%rbp),%r15
L_52382:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE20)(%rip),%r13
	movq %r13,0x8(%r14)
	movl 0x48(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_394947
L_52383:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_52384:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_52385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_394947:
L_52403:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_52384
.p2align 0x4
.long 0xC7C
L_52337:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_52338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD9F
L_54385:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_54386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x473
L_54427:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_99+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xDC1
L_54554:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54555
L_54589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_54590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54590
.p2align 0x4
.long 0xDCB
L_54590:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_54555:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x408B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x1A0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x1B8(%rbp)
	movq $0x2,0x1C0(%rbp)
	addq $0x1B8,%rbp
	leaq (L_54556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0x473
L_54035:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54036
L_54037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_54038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54038
.p2align 0x4
.long 0x49D
L_54038:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_54036:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xCEF
word_10:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52984
L_52985:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_52986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52986
.p2align 0x4
.long 0xCF0
L_52986:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_52984:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x213F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x28(%r15)
	addq $0x38,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x30,%r12
	movq (globalObjptr+0xF48)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0xF0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0xF8(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x100(%rbp),%r15
	movq %r15,0x20(%r14)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_51919
.p2align 0x4
.long 0x473
L_52988:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_90+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xC8B
L_52373:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_52374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xC8C
L_52385:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52386
L_52401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_52402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52402
.p2align 0x4
.long 0xC8E
L_52402:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_52386:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xECF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_52387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xC7D
L_52338:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52339
L_52344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_52345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52345
.p2align 0x4
.long 0xC80
L_52345:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_52339:
	movq $0x3365,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_52340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0xDA0
L_54386:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movl 0x178(%rbp),%r15d
	movl %r15d,0x170(%rbp)
	movl %r15d,0x178(%rbp)
	movq $0x3,0x180(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x178,%rbp
	leaq (L_54387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x473
bug_99:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54428
L_54429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_54430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54430
.p2align 0x4
.long 0x49D
L_54430:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_54428:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDC2
L_54556:
	addq $0xFFFFFFFFFFFFFE48,%rbp
	movq 0x1B8(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54557
L_54587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B8,%rbp
	leaq (L_54588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54588
.p2align 0x4
.long 0xDCA
L_54588:
	addq $0xFFFFFFFFFFFFFE48,%rbp
L_54557:
	movq $0x2141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1EC5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x130(%rbp)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x9,0x10(%r13)
	movq $0x408B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1A8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x180(%rbp)
	movq $0x2,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_54558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0x473
bug_90:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52989
L_52990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_52991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52991
.p2align 0x4
.long 0x49D
L_52991:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_52989:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xC8B
L_52374:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52375
L_52407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_52408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52408
.p2align 0x4
.long 0xC90
L_52408:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_52375:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_52376:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_51879
L_52377:
	cmpq $0x1,%r14
	je L_394957
L_52378:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_52376
.p2align 0x4
L_394957:
L_52379:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52380
L_52405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_52406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52406
.p2align 0x4
.long 0xC8F
L_52406:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_52380:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_394958
L_52381:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_52382
.p2align 0x4
L_394958:
L_52404:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_52382
.p2align 0x4
.long 0x542
L_52387:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52388
L_52399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_52400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52400
.p2align 0x4
.long 0x5AB
L_52400:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_52388:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_52389:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_51879
L_52390:
	cmpq $0x1,%r14
	je L_394962
L_52391:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_52389
.p2align 0x4
L_394962:
L_52392:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52393
L_52397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_52398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52398
.p2align 0x4
.long 0xC8D
L_52398:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_52393:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_394963
L_52394:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
x_102:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x50(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_52395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_394963:
L_52396:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_102
.p2align 0x4
.long 0xC7E
L_52340:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_52341
L_52342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_52343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_52343
.p2align 0x4
.long 0xC7F
L_52343:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_52341:
	movq $0x328B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
.long 0xDA0
L_54387:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq %r15,0x178(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x178,%rbp
	leaq (L_54388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xDC3
L_54558:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54559
L_54585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_54586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54586
.p2align 0x4
.long 0xDC9
L_54586:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_54559:
	movq $0x2141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1EC5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x118(%rbp)
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0xA,0x10(%r14)
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_394968
L_54560:
	movq %r14,0x188(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_54561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394968:
L_54580:
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_54581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x5C0
L_52395:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_52214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xDA1
L_54388:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54389
L_54424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_54425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54425
.p2align 0x4
.long 0xDAE
L_54425:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_54389:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x408B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x5,0x8(%r15)
	movq %r15,0x178(%rbp)
	movq $0x2,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_54390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0xDC4
L_54561:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54562
L_54578:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_54579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54579
.p2align 0x4
.long 0xDC8
L_54579:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_54562:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	movq $0x1EBF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x120(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x138(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x170(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x128(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x150(%rbp)
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_54563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_2
.p2align 0x4
.long 0x473
L_54581:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xDA2
L_54390:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54391
L_54422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_54423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54423
.p2align 0x4
.long 0xDAD
L_54423:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_54391:
	movq $0x2141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1EC5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x9,0x10(%r14)
	movq 0x110(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_54392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_1
.p2align 0x4
.long 0xDC5
L_54563:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movl 0x148(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54564
L_54576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_54577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54577
.p2align 0x4
.long 0xDC7
L_54577:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_54564:
	movl 0x110(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_394977
L_54565:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x110(%rbp)
L_54566:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq $0x3,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_54567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54567
.p2align 0x4
.long 0xDC6
L_54567:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_691:
	cmpq $0x3,%r15
	jnl L_394976
L_54569:
	movl %r15d,%r13d
	cmpl $0x0,%r13d
	je L_394975
	cmpl $0x1,%r13d
	je L_394974
	cmpl $0x2,%r13d
	je L_394973
L_54570:
	movq (globalObjptr+0x4C0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_394973:
L_54574:
	movq 0x110(%rbp),%r13
L_54572:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_691
.p2align 0x4
L_394974:
L_54573:
	movq 0x118(%rbp),%r13
	jmp L_54572
.p2align 0x4
L_394975:
L_54571:
	movq 0x130(%rbp),%r13
	jmp L_54572
.p2align 0x4
L_394976:
L_54568:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_54317
.p2align 0x4
L_394977:
L_54575:
	movq $0x1,0x110(%rbp)
	jmp L_54566
.p2align 0x4
.long 0x473
bug_105:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54582
L_54583:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_54584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54584
.p2align 0x4
.long 0x49D
L_54584:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_54582:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDA3
L_54392:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54393
L_54420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_54421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54421
.p2align 0x4
.long 0xDAC
L_54421:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_54393:
	movq $0x1EBF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x118(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x11F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x160(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x148(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_394980
L_54394:
	movq 0x0(%r14),%r15
	movq %r15,0x178(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_54395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_394980:
L_54415:
	movq 0x158(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_54416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xDA4
L_54395:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_54396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x473
L_54416:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_98+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xDA5
L_54396:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movl 0x178(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movl %r15d,0x178(%rbp)
	movq $0x3,0x180(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x178,%rbp
	leaq (L_54397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x473
bug_98:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54417
L_54418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_54419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54419
.p2align 0x4
.long 0x49D
L_54419:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_54417:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDA6
L_54397:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq %r15,0x178(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x178,%rbp
	leaq (L_54398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xDA7
L_54398:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54399
L_54413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_54414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54414
.p2align 0x4
.long 0xDAB
L_54414:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_54399:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1EB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x408B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x5,0x8(%r15)
	movq %r15,0x178(%rbp)
	movq $0x2,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_54400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
.long 0xDA8
L_54400:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_54401
L_54411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_54412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54412
.p2align 0x4
.long 0xDAA
L_54412:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_54401:
	movq $0x1EC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x7540)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x9,0x10(%r15)
	movq %r15,0x118(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	movq $0x4,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_54402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_54402
.p2align 0x4
.long 0xDA9
L_54402:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_686:
	cmpq $0x4,%r15
	jnl L_394988
L_54404:
	movl %r15d,%r13d
	cmpl $0x0,%r13d
	je L_394987
	cmpl $0x1,%r13d
	je L_394986
	cmpl $0x2,%r13d
	je L_394985
	cmpl $0x3,%r13d
	je L_394984
L_54405:
	movq (globalObjptr+0x590)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_394984:
L_54410:
	movq 0x118(%rbp),%r13
L_54407:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_686
.p2align 0x4
L_394985:
L_54409:
	movq 0x160(%rbp),%r13
	jmp L_54407
.p2align 0x4
L_394986:
L_54408:
	movq 0x130(%rbp),%r13
	jmp L_54407
.p2align 0x4
L_394987:
L_54406:
	movq 0x168(%rbp),%r13
	jmp L_54407
.p2align 0x4
L_394988:
L_54403:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_54317
