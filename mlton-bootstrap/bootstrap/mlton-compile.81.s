/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:10:09 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_1999
.hidden x_1999
x_1999:
L_245259:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_245260
L_245364:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_245365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245365
.p2align 0x4
.long 0x45B
L_245365:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_245260:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq %r11,0x18(%rbp)
	cmpq $0x1,%r13
	je L_480692
L_245261:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_245262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_480692:
L_245343:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_245344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
.long 0x654
L_245262:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245263
L_245341:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_245342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245342
.p2align 0x4
.long 0x4DE
L_245342:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_245263:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_245270
L_245264:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x30(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_245265:
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106D,%r13
	je L_480700
L_245266:
	cmpq $0x1,%r15
	je L_480694
L_245267:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x30(%rbp)
	jmp L_245265
.p2align 0x4
L_480694:
L_245268:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245270
L_245334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_245335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245335
.p2align 0x4
.long 0x4DE
L_245335:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_245270:
	movq $0x1E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_839:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_480696
L_245271:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	movq 0x18(%r13),%r11
	movq 0x8(%r15),%r14
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_480695
L_245272:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
	movq %r11,%r15
L_245273:
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_245274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peekStrid_0
.p2align 0x4
L_480695:
L_245332:
	movq %r11,%r15
L_245279:
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_245280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peekStrid_0
.p2align 0x4
L_480696:
L_245333:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
L_245295:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	cmpq $0x1,%r15
	je L_480697
L_245296:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0x20(%rbp)
L_245297:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_245298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_480697:
L_245327:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_245315:
	testl %ecx,%ecx
	jz L_480698
L_245316:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_245317:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA460)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_245287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
L_480698:
L_245318:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_245317
.p2align 0x4
L_480700:
L_245336:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245337
L_245338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_245339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245339
.p2align 0x4
.long 0x658
L_245339:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_245337:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_839
.p2align 0x4
.long 0x4DC
L_245344:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245345
L_245362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_245363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245363
.p2align 0x4
.long 0x4AE
L_245363:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_245345:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_245352
L_245346:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x20(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_245347:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106D,%r13
	je L_480707
L_245348:
	cmpq $0x1,%r15
	je L_480704
L_245349:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x20(%rbp)
	jmp L_245347
.p2align 0x4
L_480704:
L_245350:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245352
L_245355:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_245356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245356
.p2align 0x4
.long 0x4AE
L_245356:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_245352:
	movq $0x1E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_840:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_480705
L_245353:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	movq 0x18(%r13),%r13
	movq 0x8(%r15),%r14
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x8(%r15)
	movq %r13,%r15
L_245282:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480705:
L_245284:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_245285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_16
.p2align 0x4
L_480707:
L_245357:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245358
L_245359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_245360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245360
.p2align 0x4
.long 0x659
L_245360:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_245358:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_840
.p2align 0x4
.long 0x655
L_245274:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245275
L_245330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_245331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245331
.p2align 0x4
.long 0x657
L_245331:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_245275:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_480712
L_245276:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_245279
L_245277:
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_245273
.p2align 0x4
L_480712:
L_245290:
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_245291:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_480714
.p2align 0x4,,0x7
L_245292:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_480713
L_245293:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_245291
.p2align 0x4
L_480713:
L_245294:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,%r15
	jmp L_245295
.p2align 0x4
L_480714:
L_245328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_245329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245329
.p2align 0x4
.long 0x4DE
L_245329:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_245292
.p2align 0x4
.long 0x788
L_245280:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r15
	je L_245284
L_245281:
	jmp L_245282
.p2align 0x4
.long 0x4A5
L_245298:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245299
L_245325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_245326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245326
.p2align 0x4
.long 0x637
L_245326:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_245299:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_480717
L_245300:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_245297
.p2align 0x4
L_480717:
L_245301:
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_245302:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_480719
.p2align 0x4,,0x7
L_245303:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_480718
L_245304:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_245302
.p2align 0x4
L_480718:
L_245305:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_245306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_480719:
L_245323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_245324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245324
.p2align 0x4
.long 0x637
L_245324:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_245303
.p2align 0x4
.long 0x1
L_245287:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_245285:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245286
L_245288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_245289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245289
.p2align 0x4
.long 0x4E1
L_245289:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_245286:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA460)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_245287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
.long 0x639
L_245306:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_245307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x517
L_245307:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245308
L_245321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_245322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245322
.p2align 0x4
.long 0x4E9
L_245322:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_245308:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_245309:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_480724
L_245311:
	cmpq $0x1,%r14
	je L_480722
L_245312:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_245309
.p2align 0x4
L_480722:
L_245313:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245314
L_245319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_245320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245320
.p2align 0x4
.long 0x463
L_245320:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_245314:
	movq 0x28(%rbp),%r15
	movl 0x18(%rbp),%ecx
	jmp L_245315
.p2align 0x4
L_480724:
L_245310:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1994
.hidden x_1994
x_1994:
L_245366:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_245367
L_245423:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_245424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245424
.p2align 0x4
.long 0x45F
L_245424:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_245367:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_480744
L_245368:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_245369:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_480743
.p2align 0x4,,0x7
L_245370:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_480742
L_245371:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x8(%r11),%r15
	movl 0x0(%r11),%r14d
	movq 0x18(%r11),%r13
	movq 0x20(%r11),%r10
	movq $0x111B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r14d,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r10,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq $0x2697,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_480726
L_245372:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_245369
.p2align 0x4
L_480726:
L_245373:
	movq %r15,0x10(%rbp)
L_245374:
	movq 0x0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_480741
L_245375:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_245376:
	incl %ecx
	jo L_245377
L_245378:
	cmpq $0x1,%r15
	je L_480727
L_245379:
	movq 0x8(%r15),%r15
	jmp L_245376
.p2align 0x4
L_480727:
L_245380:
L_245381:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_480739
L_245382:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6DF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_245383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245383
.p2align 0x4
.long 0x4A4
L_245383:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2778:
	cmpq 0x18(%rbp),%r15
	jnl L_480729
L_245414:
	cmpq $0x1,%r14
	je L_480728
L_245415:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x20(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2778
.p2align 0x4
L_480728:
L_245416:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480729:
L_245384:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245385
L_245412:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_245413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245413
.p2align 0x4
.long 0x49D
L_245413:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_245385:
	movq 0x18(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x28(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	je L_480730
L_245386:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480730:
L_245387:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_480737
L_245388:
	movq $0x17E3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	cmpq $0x0,0x18(%rbp)
	jna L_245390
L_245391:
	movq 0x0(%r13),%r14
	cmpl $0x0,%r15d
	jl L_480735
L_245392:
	movq %r14,0x38(%rbp)
	movl $0x0,0x2C(%rbp)
	movl $0x0,0x40(%rbp)
loop_2779:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x40(%rbp)
	jl L_480734
L_245393:
	decl %r15d
	movslq 0x2C(%rbp),%r14
	movq 0x18(%rbp),%r13
	cmpq %r13,%r14
	jnb L_245390
L_245395:
	movq 0x20(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_480732
L_245397:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_480731
L_245398:
	movl %r15d,0x38(%rbp)
	movl $0x0,0x3C(%rbp)
	movq %r11,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_245399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_25
.p2align 0x4
L_480731:
L_245377:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480732:
L_245390:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480734:
L_245405:
	movslq 0x40(%rbp),%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x48(%rbp)
	movq 0x18(%r11),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_245406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_480735:
L_245410:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480737:
L_245402:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480739:
L_245417:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480741:
L_245418:
	xorl %ecx,%ecx
	jmp L_245381
.p2align 0x4
L_480742:
L_245419:
	movq (globalObjptr+0x7E8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480743:
L_245420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_245421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245421
.p2align 0x4
.long 0x63C
L_245421:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_245370
.p2align 0x4
L_480744:
L_245422:
	movq $0x1,0x10(%rbp)
	jmp L_245374
.p2align 0x4
.long 0x3C1F
L_245399:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245400
L_245403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_245404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245404
.p2align 0x4
.long 0x4E6
L_245404:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_245400:
	movq $0x3D23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl $0x1,0x3C(%rbp)
	addq $0x30,%rbp
	leaq (L_245401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3C20
L_245406:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r14d
	movl %r14d,0x44(%rbp)
	testl %r14d,%r14d
	jnz L_480747
L_245407:
	movq 0x48(%rbp),%r15
	movl 0x40(%rbp),%ecx
L_245408:
	movq %r15,0x38(%rbp)
	movl %ecx,0x2C(%rbp)
	incl 0x40(%rbp)
	jmp loop_2779
.p2align 0x4
L_480747:
L_245409:
	movq 0x38(%rbp),%r15
	movl 0x2C(%rbp),%ecx
	jmp L_245408
.p2align 0x4
.long 0x459
L_245401:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_245402
.text
.p2align 0x4
.globl qsort_25
.hidden qsort_25
qsort_25:
L_245425:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_2780
L_245475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_245476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245476
.p2align 0x4
.long 0x4E8
L_245476:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_2780:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_245427
L_245428:
	cmpl $0x14,%r15d
	jng L_480749
L_245430:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_480748
L_245431:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_245432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_480748:
L_245427:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480749:
L_245429:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_245432:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_245433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E5
L_245433:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_245427
L_245434:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_245436
L_245437:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_245436
L_245439:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_245436
L_245441:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_245436
L_245443:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_245436
L_245445:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_245427
L_245446:
	movl %r15d,0x50(%rbp)
loop_2782:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_245427
L_245447:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_480751
L_245449:
	movq 0x48(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x18(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x70(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_245450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_480751:
L_245436:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_245450:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_480760
L_245451:
	movl 0x54(%rbp),%ecx
	jmp loop_2782
.p2align 0x4
L_480760:
L_245452:
	movl 0x50(%rbp),%ecx
loop_2783:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_245427
L_245453:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_245436
L_245455:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x18(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_245456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x4F6
L_245456:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_480763
L_245457:
	movl 0x50(%rbp),%ecx
	jmp loop_2783
.p2align 0x4
L_480763:
L_245458:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_480768
L_245459:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_245436
L_245461:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_245436
L_245463:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_245436
L_245465:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_245436
L_245467:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_2782
.p2align 0x4
L_480768:
L_245468:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_245436
L_245470:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_245436
L_245472:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_245427
L_245473:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_245474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_25
.p2align 0x4
.long 0x4F7
L_245474:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_2780
.text
.p2align 0x4
.globl x_1995
.hidden x_1995
x_1995:
L_245477:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_245478
L_245534:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_245535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245535
.p2align 0x4
.long 0x45F
L_245535:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_245478:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_480790
L_245479:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_245480:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_480789
.p2align 0x4,,0x7
L_245481:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_480788
L_245482:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x8(%r11),%r15
	movl 0x0(%r11),%r14d
	movq 0x18(%r11),%r13
	movq 0x20(%r11),%r10
	movq $0x111F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r14d,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r10,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq $0x2693,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_480772
L_245483:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_245480
.p2align 0x4
L_480772:
L_245484:
	movq %r15,0x10(%rbp)
L_245485:
	movq 0x0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_480787
L_245486:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_245487:
	incl %ecx
	jo L_245488
L_245489:
	cmpq $0x1,%r15
	je L_480773
L_245490:
	movq 0x8(%r15),%r15
	jmp L_245487
.p2align 0x4
L_480773:
L_245491:
L_245492:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_480785
L_245493:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x29,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_245494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245494
.p2align 0x4
.long 0x4A4
L_245494:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2784:
	cmpq 0x18(%rbp),%r15
	jnl L_480775
L_245525:
	cmpq $0x1,%r14
	je L_480774
L_245526:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x20(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2784
.p2align 0x4
L_480774:
L_245527:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480775:
L_245495:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245496
L_245523:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_245524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245524
.p2align 0x4
.long 0x49D
L_245524:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_245496:
	movq 0x18(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x28(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	je L_480776
L_245497:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480776:
L_245498:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_480783
L_245499:
	movq $0x17E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	cmpq $0x0,0x18(%rbp)
	jna L_245501
L_245502:
	movq 0x0(%r13),%r14
	cmpl $0x0,%r15d
	jl L_480781
L_245503:
	movq %r14,0x38(%rbp)
	movl $0x0,0x2C(%rbp)
	movl $0x0,0x40(%rbp)
loop_2785:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x40(%rbp)
	jl L_480780
L_245504:
	decl %r15d
	movslq 0x2C(%rbp),%r14
	movq 0x18(%rbp),%r13
	cmpq %r13,%r14
	jnb L_245501
L_245506:
	movq 0x20(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_480778
L_245508:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_480777
L_245509:
	movl %r15d,0x38(%rbp)
	movl $0x0,0x3C(%rbp)
	movq %r11,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_245510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_26
.p2align 0x4
L_480777:
L_245488:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480778:
L_245501:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480780:
L_245516:
	movslq 0x40(%rbp),%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x48(%rbp)
	movq 0x18(%r11),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_245517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_480781:
L_245521:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480783:
L_245513:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480785:
L_245528:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480787:
L_245529:
	xorl %ecx,%ecx
	jmp L_245492
.p2align 0x4
L_480788:
L_245530:
	movq (globalObjptr+0x7E8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480789:
L_245531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_245532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245532
.p2align 0x4
.long 0x63C
L_245532:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_245481
.p2align 0x4
L_480790:
L_245533:
	movq $0x1,0x10(%rbp)
	jmp L_245485
.p2align 0x4
.long 0x3C1F
L_245510:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245511
L_245514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_245515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245515
.p2align 0x4
.long 0x4E6
L_245515:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_245511:
	movq $0x3D25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl $0x1,0x3C(%rbp)
	addq $0x30,%rbp
	leaq (L_245512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3C20
L_245517:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r14d
	movl %r14d,0x44(%rbp)
	testl %r14d,%r14d
	jnz L_480793
L_245518:
	movq 0x48(%rbp),%r15
	movl 0x40(%rbp),%ecx
L_245519:
	movq %r15,0x38(%rbp)
	movl %ecx,0x2C(%rbp)
	incl 0x40(%rbp)
	jmp loop_2785
.p2align 0x4
L_480793:
L_245520:
	movq 0x38(%rbp),%r15
	movl 0x2C(%rbp),%ecx
	jmp L_245519
.p2align 0x4
.long 0x459
L_245512:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_245513
.text
.p2align 0x4
.globl qsort_26
.hidden qsort_26
qsort_26:
L_245536:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_2786
L_245586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_245587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245587
.p2align 0x4
.long 0x4E8
L_245587:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_2786:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_245538
L_245539:
	cmpl $0x14,%r15d
	jng L_480795
L_245541:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_480794
L_245542:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_245543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_480794:
L_245538:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480795:
L_245540:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_245543:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_245544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E5
L_245544:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_245538
L_245545:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_245547
L_245548:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_245547
L_245550:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_245547
L_245552:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_245547
L_245554:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_245547
L_245556:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_245538
L_245557:
	movl %r15d,0x50(%rbp)
loop_2788:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_245538
L_245558:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_480797
L_245560:
	movq 0x48(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x18(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x70(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_245561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_480797:
L_245547:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_245561:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_480806
L_245562:
	movl 0x54(%rbp),%ecx
	jmp loop_2788
.p2align 0x4
L_480806:
L_245563:
	movl 0x50(%rbp),%ecx
loop_2789:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_245538
L_245564:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_245547
L_245566:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x18(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_245567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x4F6
L_245567:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_480809
L_245568:
	movl 0x50(%rbp),%ecx
	jmp loop_2789
.p2align 0x4
L_480809:
L_245569:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_480814
L_245570:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_245547
L_245572:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_245547
L_245574:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_245547
L_245576:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_245547
L_245578:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_2788
.p2align 0x4
L_480814:
L_245579:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_245547
L_245581:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_245547
L_245583:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_245538
L_245584:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_245585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_26
.p2align 0x4
.long 0x4F7
L_245585:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_2786
.text
.p2align 0x4
.globl x_1996
.hidden x_1996
x_1996:
L_245588:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_245589
L_245645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_245646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245646
.p2align 0x4
.long 0x45F
L_245646:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_245589:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_480836
L_245590:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_245591:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_480835
.p2align 0x4,,0x7
L_245592:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_480834
L_245593:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x8(%r11),%r15
	movl 0x0(%r11),%r14d
	movq 0x18(%r11),%r13
	movq 0x20(%r11),%r10
	movq $0x1115,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r14d,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r10,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq $0x269D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_480818
L_245594:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_245591
.p2align 0x4
L_480818:
L_245595:
	movq %r15,0x10(%rbp)
L_245596:
	movq 0x0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_480833
L_245597:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_245598:
	incl %ecx
	jo L_245599
L_245600:
	cmpq $0x1,%r15
	je L_480819
L_245601:
	movq 0x8(%r15),%r15
	jmp L_245598
.p2align 0x4
L_480819:
L_245602:
L_245603:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_480831
L_245604:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_245605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245605
.p2align 0x4
.long 0x4A4
L_245605:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2790:
	cmpq 0x18(%rbp),%r15
	jnl L_480821
L_245636:
	cmpq $0x1,%r14
	je L_480820
L_245637:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x20(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2790
.p2align 0x4
L_480820:
L_245638:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480821:
L_245606:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245607
L_245634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_245635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245635
.p2align 0x4
.long 0x49D
L_245635:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_245607:
	movq 0x18(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x28(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	je L_480822
L_245608:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480822:
L_245609:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_480829
L_245610:
	movq $0x17E7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	cmpq $0x0,0x18(%rbp)
	jna L_245612
L_245613:
	movq 0x0(%r13),%r14
	cmpl $0x0,%r15d
	jl L_480827
L_245614:
	movq %r14,0x38(%rbp)
	movl $0x0,0x2C(%rbp)
	movl $0x0,0x40(%rbp)
loop_2791:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x40(%rbp)
	jl L_480826
L_245615:
	decl %r15d
	movslq 0x2C(%rbp),%r14
	movq 0x18(%rbp),%r13
	cmpq %r13,%r14
	jnb L_245612
L_245617:
	movq 0x20(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_480824
L_245619:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_480823
L_245620:
	movl %r15d,0x38(%rbp)
	movl $0x0,0x3C(%rbp)
	movq %r11,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_245621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_27
.p2align 0x4
L_480823:
L_245599:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480824:
L_245612:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480826:
L_245627:
	movslq 0x40(%rbp),%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x48(%rbp)
	movq 0x18(%r11),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_245628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_480827:
L_245632:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480829:
L_245624:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480831:
L_245639:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480833:
L_245640:
	xorl %ecx,%ecx
	jmp L_245603
.p2align 0x4
L_480834:
L_245641:
	movq (globalObjptr+0x7E8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480835:
L_245642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_245643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245643
.p2align 0x4
.long 0x63C
L_245643:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_245592
.p2align 0x4
L_480836:
L_245644:
	movq $0x1,0x10(%rbp)
	jmp L_245596
.p2align 0x4
.long 0x3C1F
L_245621:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245622
L_245625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_245626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245626
.p2align 0x4
.long 0x4E6
L_245626:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_245622:
	movq $0x3CEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl $0x1,0x3C(%rbp)
	addq $0x30,%rbp
	leaq (L_245623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3C20
L_245628:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r14d
	movl %r14d,0x44(%rbp)
	testl %r14d,%r14d
	jnz L_480839
L_245629:
	movq 0x48(%rbp),%r15
	movl 0x40(%rbp),%ecx
L_245630:
	movq %r15,0x38(%rbp)
	movl %ecx,0x2C(%rbp)
	incl 0x40(%rbp)
	jmp loop_2791
.p2align 0x4
L_480839:
L_245631:
	movq 0x38(%rbp),%r15
	movl 0x2C(%rbp),%ecx
	jmp L_245630
.p2align 0x4
.long 0x459
L_245623:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_245624
.text
.p2align 0x4
.globl qsort_27
.hidden qsort_27
qsort_27:
L_245647:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_2792
L_245697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_245698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245698
.p2align 0x4
.long 0x4E8
L_245698:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_2792:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_245649
L_245650:
	cmpl $0x14,%r15d
	jng L_480841
L_245652:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_480840
L_245653:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_245654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_480840:
L_245649:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480841:
L_245651:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_245654:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_245655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E5
L_245655:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_245649
L_245656:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_245658
L_245659:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_245658
L_245661:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_245658
L_245663:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_245658
L_245665:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_245658
L_245667:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_245649
L_245668:
	movl %r15d,0x50(%rbp)
loop_2794:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_245649
L_245669:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_480843
L_245671:
	movq 0x48(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x18(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x70(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_245672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_480843:
L_245658:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_245672:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_480852
L_245673:
	movl 0x54(%rbp),%ecx
	jmp loop_2794
.p2align 0x4
L_480852:
L_245674:
	movl 0x50(%rbp),%ecx
loop_2795:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_245649
L_245675:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_245658
L_245677:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x18(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_245678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x4F6
L_245678:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_480855
L_245679:
	movl 0x50(%rbp),%ecx
	jmp loop_2795
.p2align 0x4
L_480855:
L_245680:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_480860
L_245681:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_245658
L_245683:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_245658
L_245685:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_245658
L_245687:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_245658
L_245689:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_2794
.p2align 0x4
L_480860:
L_245690:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_245658
L_245692:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_245658
L_245694:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_245649
L_245695:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_245696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_27
.p2align 0x4
.long 0x4F7
L_245696:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_2792
.text
.p2align 0x4
.globl x_1997
.hidden x_1997
x_1997:
L_245699:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_245700
L_245756:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_245757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245757
.p2align 0x4
.long 0x45F
L_245757:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_245700:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_480882
L_245701:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_245702:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_480881
.p2align 0x4,,0x7
L_245703:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_480880
L_245704:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x8(%r11),%r15
	movl 0x0(%r11),%r14d
	movq 0x18(%r11),%r13
	movq 0x20(%r11),%r10
	movq $0x111D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r14d,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r10,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq $0x2695,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_480864
L_245705:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_245702
.p2align 0x4
L_480864:
L_245706:
	movq %r15,0x10(%rbp)
L_245707:
	movq 0x0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_480879
L_245708:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_245709:
	incl %ecx
	jo L_245710
L_245711:
	cmpq $0x1,%r15
	je L_480865
L_245712:
	movq 0x8(%r15),%r15
	jmp L_245709
.p2align 0x4
L_480865:
L_245713:
L_245714:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_480877
L_245715:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6CF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_245716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245716
.p2align 0x4
.long 0x4A4
L_245716:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2796:
	cmpq 0x18(%rbp),%r15
	jnl L_480867
L_245747:
	cmpq $0x1,%r14
	je L_480866
L_245748:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x20(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2796
.p2align 0x4
L_480866:
L_245749:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480867:
L_245717:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245718
L_245745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_245746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245746
.p2align 0x4
.long 0x49D
L_245746:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_245718:
	movq 0x18(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x28(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	je L_480868
L_245719:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480868:
L_245720:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_480875
L_245721:
	movq $0x17E9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	cmpq $0x0,0x18(%rbp)
	jna L_245723
L_245724:
	movq 0x0(%r13),%r14
	cmpl $0x0,%r15d
	jl L_480873
L_245725:
	movq %r14,0x38(%rbp)
	movl $0x0,0x2C(%rbp)
	movl $0x0,0x40(%rbp)
loop_2797:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x40(%rbp)
	jl L_480872
L_245726:
	decl %r15d
	movslq 0x2C(%rbp),%r14
	movq 0x18(%rbp),%r13
	cmpq %r13,%r14
	jnb L_245723
L_245728:
	movq 0x20(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_480870
L_245730:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_480869
L_245731:
	movl %r15d,0x38(%rbp)
	movl $0x0,0x3C(%rbp)
	movq %r11,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_245732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_28
.p2align 0x4
L_480869:
L_245710:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480870:
L_245723:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480872:
L_245738:
	movslq 0x40(%rbp),%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x48(%rbp)
	movq 0x18(%r11),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_245739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_480873:
L_245743:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480875:
L_245735:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480877:
L_245750:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480879:
L_245751:
	xorl %ecx,%ecx
	jmp L_245714
.p2align 0x4
L_480880:
L_245752:
	movq (globalObjptr+0x7E8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480881:
L_245753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_245754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245754
.p2align 0x4
.long 0x63C
L_245754:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_245703
.p2align 0x4
L_480882:
L_245755:
	movq $0x1,0x10(%rbp)
	jmp L_245707
.p2align 0x4
.long 0x3C1F
L_245732:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245733
L_245736:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_245737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245737
.p2align 0x4
.long 0x4E6
L_245737:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_245733:
	movq $0x3CE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl $0x1,0x3C(%rbp)
	addq $0x30,%rbp
	leaq (L_245734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3C20
L_245739:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r14d
	movl %r14d,0x44(%rbp)
	testl %r14d,%r14d
	jnz L_480885
L_245740:
	movq 0x48(%rbp),%r15
	movl 0x40(%rbp),%ecx
L_245741:
	movq %r15,0x38(%rbp)
	movl %ecx,0x2C(%rbp)
	incl 0x40(%rbp)
	jmp loop_2797
.p2align 0x4
L_480885:
L_245742:
	movq 0x38(%rbp),%r15
	movl 0x2C(%rbp),%ecx
	jmp L_245741
.p2align 0x4
.long 0x459
L_245734:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_245735
.text
.p2align 0x4
.globl qsort_28
.hidden qsort_28
qsort_28:
L_245758:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_2798
L_245808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_245809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245809
.p2align 0x4
.long 0x4E8
L_245809:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_2798:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_245760
L_245761:
	cmpl $0x14,%r15d
	jng L_480887
L_245763:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_480886
L_245764:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_245765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_480886:
L_245760:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480887:
L_245762:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_245765:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_245766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E5
L_245766:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_245760
L_245767:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_245769
L_245770:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_245769
L_245772:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_245769
L_245774:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_245769
L_245776:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_245769
L_245778:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_245760
L_245779:
	movl %r15d,0x50(%rbp)
loop_2800:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_245760
L_245780:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_480889
L_245782:
	movq 0x48(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x18(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x70(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_245783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_480889:
L_245769:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_245783:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_480898
L_245784:
	movl 0x54(%rbp),%ecx
	jmp loop_2800
.p2align 0x4
L_480898:
L_245785:
	movl 0x50(%rbp),%ecx
loop_2801:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_245760
L_245786:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_245769
L_245788:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x18(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_245789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x4F6
L_245789:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_480901
L_245790:
	movl 0x50(%rbp),%ecx
	jmp loop_2801
.p2align 0x4
L_480901:
L_245791:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_480906
L_245792:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_245769
L_245794:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_245769
L_245796:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_245769
L_245798:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_245769
L_245800:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_2800
.p2align 0x4
L_480906:
L_245801:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_245769
L_245803:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_245769
L_245805:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_245760
L_245806:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_245807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_28
.p2align 0x4
.long 0x4F7
L_245807:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_2798
.text
.p2align 0x4
.globl elabSigexp_0
.hidden elabSigexp_0
elabSigexp_0:
L_245810:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_245837
L_245811:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_480911
L_245812:
	movq 0x8(%rbp),%r15
	movq 0x60(%r15),%r14
	movq 0x50(%r15),%r13
	movq 0x160(%r13),%r11
	movq 0x158(%r13),%r10
	movq 0x150(%r13),%r9
	movq 0x148(%r13),%r8
	movq 0x140(%r13),%rsp
	movq 0x138(%r13),%rsi
	movq 0x130(%r13),%rdi
	movq 0x128(%r13),%rdx
	movq 0x120(%r13),%rcx
	movq 0x118(%r13),%rbx
	movq 0x110(%r13),%rax
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x108(%r13),%rax
	movq %rax,(localObjptr+0x68)(%rip)
	movq 0x100(%r13),%rax
	movq %rax,(localObjptr+0x70)(%rip)
	movq 0xF8(%r13),%rax
	movq %rax,(localObjptr+0x78)(%rip)
	movq 0xF0(%r13),%rax
	movq %rax,(localObjptr+0x80)(%rip)
	movq 0xE8(%r13),%rax
	movq %rax,(localObjptr+0x88)(%rip)
	movq 0xE0(%r13),%rax
	movq %rax,(localObjptr+0x90)(%rip)
	movq 0xD8(%r13),%rax
	movq %rax,(localObjptr+0x98)(%rip)
	movq 0xC8(%r13),%rax
	movq %rax,(localObjptr+0xA0)(%rip)
	movq 0x88(%r13),%rax
	movq %rax,(localObjptr+0xA8)(%rip)
	movq 0x80(%r13),%rax
	movq %rax,0x10(%rbp)
	movq 0x78(%r13),%rax
	movq %rax,(localObjptr+0xB0)(%rip)
	movq 0x70(%r13),%rax
	movq %rax,(localObjptr+0xB8)(%rip)
	movq 0x68(%r13),%rax
	movq %rax,(localObjptr+0xC0)(%rip)
	movq 0x40(%r13),%rax
	movq %rax,(localObjptr+0xC8)(%rip)
	movq 0x30(%r13),%rax
	movq %rax,(localObjptr+0xD0)(%rip)
	movq 0x20(%r13),%rax
	movq %rax,(localObjptr+0xD8)(%rip)
	movq 0x18(%r13),%rax
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE25,%r15
	je L_480910
L_245813:
	movq %r11,0x18(%rbp)
	movq %r10,0x20(%rbp)
	movq %r9,0x28(%rbp)
	movq %r8,0x30(%rbp)
	movq %rsp,0x38(%rbp)
	movq %rsi,0x40(%rbp)
	movq %rdi,0x48(%rbp)
	movq %rdx,0x50(%rbp)
	movq %rcx,0x58(%rbp)
	movq %rbx,0x60(%rbp)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (localObjptr+0x68)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (localObjptr+0x78)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (localObjptr+0x80)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (localObjptr+0x88)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (localObjptr+0x90)(%rip),%r15
	movq %r15,0x98(%rbp)
	movq (localObjptr+0x98)(%rip),%r15
	movq %r15,0xA0(%rbp)
	movq (localObjptr+0xA0)(%rip),%r15
	movq %r15,0xA8(%rbp)
	movq (localObjptr+0xA8)(%rip),%r15
	movq %r15,0xB0(%rbp)
	movq (localObjptr+0xB0)(%rip),%r15
	movq %r15,0xC0(%rbp)
	movq (localObjptr+0xB8)(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq (localObjptr+0xC0)(%rip),%r15
	movq %r15,0xD0(%rbp)
	movq (localObjptr+0xC8)(%rip),%r15
	movq %r15,0xD8(%rbp)
	movq (localObjptr+0xD0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq $0x4487,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rax,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq (localObjptr+0xD8)(%rip),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r15,0x0(%r11)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r14,0x10(%rbp)
	movl $0x1,0x0(%rbp)
	jmp elaborateSigexp_0
.p2align 0x4
L_480910:
L_245814:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	movq 0x20(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_245815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_480911:
L_245837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_245838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245838
.p2align 0x4
.long 0x45F
L_245838:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_245812
.p2align 0x4
.long 0x4A6
L_245815:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245816
L_245835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_245836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245836
.p2align 0x4
.long 0x720
L_245836:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_245816:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_245823
L_245817:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x38(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_245818:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106E,%r13
	je L_480916
L_245819:
	cmpq $0x1,%r15
	je L_480913
L_245820:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x38(%rbp)
	jmp L_245818
.p2align 0x4
L_480913:
L_245821:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245823
L_245828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_245829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245829
.p2align 0x4
.long 0x720
L_245829:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_245823:
	movq $0x15D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_841:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_480914
L_245824:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x18(%r15),%r11
	movq %r11,0x0(%rbp)
	movq 0x8(%r13),%r15
	movq $0x24DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x8(%r13)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480914:
L_245825:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_245826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_480916:
L_245830:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245831
L_245832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_245833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245833
.p2align 0x4
.long 0xA44
L_245833:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_245831:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_841
.p2align 0x4
.long 0x490
L_245826:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA458)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_245827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
.long 0x1
L_245827:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl elaborateSigexp_0
.hidden elaborateSigexp_0
elaborateSigexp_0:
L_245839:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_246276
L_245840:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_480923
L_245841:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE24,%r15
	je L_480921
	cmpq $0xE25,%r15
	je L_480920
L_245842:
	movq 0x0(%r14),%r15
	movq %r15,0x128(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x38(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xE8(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0xF0(%rbp)
	movq 0x10(%r13),%r9
	movq %r9,0xF8(%rbp)
	movq 0x10(%r9),%r13
	movq %r13,0x100(%rbp)
	movq %r9,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r13,1)
	movq $0x1,0x10(%r9)
	movq 0x10(%r10),%r13
	movq %r13,0x108(%rbp)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq $0x1,0x10(%r10)
	movq 0x10(%r11),%r13
	movq %r13,0x110(%rbp)
	movq %r11,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq $0x1,0x10(%r11)
	movq 0x0(%r14),%r13
	movq %r13,0x118(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x44D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r11,0x0(%r14)
	movq %r15,0x130(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x128,%rbp
	leaq (L_245843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateSpec_0
.p2align 0x4
L_480920:
L_246240:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq $0x141,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x0(%r14),%r11
	movq %r11,0xD8(%rbp)
	movq %r13,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_246241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_480921:
L_246029:
	movq 0x8(%r14),%r15
	movq %r15,0xE8(%rbp)
	movq 0x0(%r14),%r15
	movq (globalObjptr+0x4D18)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	movl %r13d,0xF0(%rbp)
	jo L_480922
L_246030:
	movq %r15,0x108(%rbp)
	movl %r13d,0x0(%r14)
	movl $0x0,0x100(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x100,%rbp
	leaq (L_246031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateSigexp_0
.p2align 0x4
L_480922:
L_245853:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480923:
L_246276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_246277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246277
.p2align 0x4
.long 0x344E
L_246277:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	jmp L_245841
.p2align 0x4
.long 0x3C21
L_245843:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0xF8(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_480989
L_245844:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_245845:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_480988
.p2align 0x4,,0x7
L_245846:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_245981
L_245847:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x18(%r11),%r15
	movq 0x20(%r11),%r14
	movq $0x1121,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x2691,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_480925
L_245848:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_245845
.p2align 0x4
L_480925:
L_245849:
	movq %r15,0x10(%rbp)
L_245850:
	movq 0xF8(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x100(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_480986
L_245851:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_245852:
	incl %ecx
	jo L_245853
L_245854:
	cmpq $0x1,%r15
	je L_480926
L_245855:
	movq 0x8(%r15),%r15
	jmp L_245852
.p2align 0x4
L_480926:
L_245856:
L_245857:
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_245961
L_245858:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA93,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_245859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245859
.p2align 0x4
.long 0x3C22
L_245859:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x20(%rbp)
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2802:
	cmpq 0x18(%rbp),%r15
	jnl L_480928
L_246020:
	cmpq $0x1,%r14
	je L_480927
L_246021:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x20(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2802
.p2align 0x4
L_480927:
L_245977:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480928:
L_245860:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245861
L_246018:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_246019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246019
.p2align 0x4
.long 0x3C24
L_246019:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_245861:
	movq 0x18(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x4(%rbp)
	movslq %r14d,%r13
	movq %r13,0x10(%rbp)
	cmpq %r15,%r13
	jne L_245863
L_245864:
	testl %r14d,%r14d
	jz L_480935
L_245865:
	movq $0x17FD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_245867
L_245868:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_480933
L_245869:
	movq %r15,0x30(%rbp)
	movl $0x0,0x38(%rbp)
	movl $0x0,0x3C(%rbp)
loop_2803:
	movl 0x4(%rbp),%r15d
	cmpl %r15d,0x3C(%rbp)
	jl L_480932
L_245870:
	decl %r15d
	movslq 0x38(%rbp),%r14
	movq 0x18(%rbp),%r13
	cmpq %r13,%r14
	jnb L_245867
L_245872:
	movq 0x20(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_480930
L_245874:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_245853
L_245875:
	movl %r15d,0x128(%rbp)
	movl $0x0,0x12C(%rbp)
	movq %r11,0x130(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_245876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_29
.p2align 0x4
L_480930:
L_245867:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480932:
L_246011:
	movslq 0x3C(%rbp),%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r11),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x130(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_246012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_480933:
L_245970:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480935:
L_245879:
	movq 0x10(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_245961
L_245880:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA93,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_245881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245881
.p2align 0x4
.long 0x3C24
L_245881:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2804:
	cmpq 0x10(%rbp),%r15
	jnl L_480936
L_246007:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2804
.p2align 0x4
L_480936:
L_245882:
	movq 0xF0(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_480980
L_245883:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_245884:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_480979
.p2align 0x4,,0x7
L_245885:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_245981
L_245886:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x18(%r11),%r15
	movq 0x20(%r11),%r14
	movq $0x1113,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x269F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_480937
L_245887:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_245884
.p2align 0x4
L_480937:
L_245888:
	movq %r15,0x10(%rbp)
L_245889:
	movq 0xF0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x108(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_480977
L_245890:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_245891:
	incl %ecx
	jo L_245853
L_245892:
	cmpq $0x1,%r15
	je L_480938
L_245893:
	movq 0x8(%r15),%r15
	jmp L_245891
.p2align 0x4
L_480938:
L_245894:
L_245895:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_245961
L_245896:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAD5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_245897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245897
.p2align 0x4
.long 0x3C25
L_245897:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x28(%rbp)
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2805:
	cmpq 0x20(%rbp),%r15
	jnl L_480940
L_245998:
	cmpq $0x1,%r14
	je L_245977
L_245999:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x28(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2805
.p2align 0x4
L_480940:
L_245898:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245899
L_245996:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_245997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245997
.p2align 0x4
.long 0x3C27
L_245997:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_245899:
	movq 0x20(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x4(%rbp)
	movslq %r14d,%r13
	movq %r13,0x10(%rbp)
	cmpq %r13,%r15
	jne L_245863
L_245901:
	testl %r14d,%r14d
	jz L_480947
L_245902:
	movq $0x17FB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_245867
L_245904:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_245970
L_245905:
	movq %r15,0x38(%rbp)
	movl $0x0,0x40(%rbp)
	movl $0x0,0x44(%rbp)
loop_2806:
	movl 0x4(%rbp),%r15d
	cmpl %r15d,0x44(%rbp)
	jl L_480944
L_245906:
	decl %r15d
	movslq 0x40(%rbp),%r14
	movq 0x20(%rbp),%r13
	cmpq %r13,%r14
	jnb L_245867
L_245908:
	movq 0x28(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_245867
L_245910:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_245853
L_245911:
	movl %r15d,0x128(%rbp)
	movl $0x0,0x12C(%rbp)
	movq %r11,0x130(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_245912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_30
.p2align 0x4
L_480944:
L_245989:
	movslq 0x44(%rbp),%r14
	movq 0x28(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r11),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x130(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_245990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_480947:
L_245915:
	movq 0x10(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_245961
L_245916:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAD5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_245917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245917
.p2align 0x4
.long 0x3C27
L_245917:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2807:
	cmpq 0x10(%rbp),%r15
	jnl L_480948
L_245985:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2807
.p2align 0x4
L_480948:
L_245918:
	movq 0xE8(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_480971
L_245919:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_245920:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_480970
.p2align 0x4,,0x7
L_245921:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_480969
L_245922:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x18(%r11),%r15
	movq 0x20(%r11),%r14
	movq $0x110F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x26A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_480949
L_245923:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_245920
.p2align 0x4
L_480949:
L_245924:
	movq %r15,0x10(%rbp)
L_245925:
	movq 0xE8(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x110(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_480968
L_245926:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_245927:
	incl %ecx
	jo L_245853
L_245928:
	cmpq $0x1,%r15
	je L_480950
L_245929:
	movq 0x8(%r15),%r15
	jmp L_245927
.p2align 0x4
L_480950:
L_245930:
L_245931:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_245961
L_245932:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA91,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_245933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245933
.p2align 0x4
.long 0x3C28
L_245933:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x30(%rbp)
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2808:
	cmpq 0x28(%rbp),%r15
	jnl L_480952
L_245974:
	cmpq $0x1,%r14
	je L_245977
L_245975:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x30(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2808
.p2align 0x4
L_480952:
L_245934:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245935
L_245972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_245973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245973
.p2align 0x4
.long 0x3C2A
L_245973:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_245935:
	movq 0x28(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x4(%rbp)
	movslq %r14d,%r13
	movq %r13,0x10(%rbp)
	cmpq %r15,%r13
	jne L_480964
L_245937:
	testl %r14d,%r14d
	jz L_480959
L_245938:
	movq $0x17F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_245867
L_245940:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_245970
L_245941:
	movq %r15,0x40(%rbp)
	movl $0x0,0x48(%rbp)
	movl $0x0,0x4C(%rbp)
loop_2809:
	movl 0x4(%rbp),%r15d
	cmpl %r15d,0x4C(%rbp)
	jl L_480956
L_245942:
	decl %r15d
	movslq 0x48(%rbp),%r14
	movq 0x28(%rbp),%r13
	cmpq %r13,%r14
	jnb L_245867
L_245944:
	movq 0x30(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_245867
L_245946:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_245853
L_245947:
	movl %r15d,0x128(%rbp)
	movl $0x0,0x12C(%rbp)
	movq %r11,0x130(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_245948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_31
.p2align 0x4
L_480956:
L_245964:
	movslq 0x4C(%rbp),%r14
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r11),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x130(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_245965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_480959:
L_245951:
	movq 0x10(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_480963
L_245952:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xFE1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_245953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245953
.p2align 0x4
.long 0x3C2A
L_245953:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2810:
	cmpq 0x10(%rbp),%r15
	jnl L_480960
L_245959:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0x28(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %rsp,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_2810
.p2align 0x4
L_480960:
L_245954:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245955
L_245957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_245958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245958
.p2align 0x4
.long 0x3C2B
L_245958:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_245955:
	movq $0xFDD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xFDF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq (globalObjptr+0x4D78)(%rip),%r11
	movl 0x0(%r11),%r10d
	incl %r10d
	jo L_245853
L_245956:
	movl %r10d,0x0(%r11)
	movq $0xFE3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r10d,0x0(%r11)
	movq %r13,0x20(%r11)
	movq %r14,0x30(%r11)
	movq %r15,0x38(%r11)
	addq $0x48,%r12
	movl 0x0(%rbp),%r15d
	movl %r15d,0x4(%r11)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%r11)
	movq 0x18(%rbp),%r15
	movq %r15,0x18(%r11)
	movq $0x1,0x28(%r11)
	movq $0x28B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x5C5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480963:
L_245961:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480964:
L_245863:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480968:
L_245979:
	xorl %ecx,%ecx
	jmp L_245931
.p2align 0x4
L_480969:
L_245981:
	movq (globalObjptr+0x7E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480970:
L_245982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_245983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245983
.p2align 0x4
.long 0x3C2D
L_245983:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_245921
.p2align 0x4
L_480971:
L_245984:
	movq $0x1,0x10(%rbp)
	jmp L_245925
.p2align 0x4
L_480977:
L_246002:
	xorl %ecx,%ecx
	jmp L_245895
.p2align 0x4
L_480979:
L_246004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_246005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246005
.p2align 0x4
.long 0x3C2F
L_246005:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_245885
.p2align 0x4
L_480980:
L_246006:
	movq $0x1,0x10(%rbp)
	jmp L_245889
.p2align 0x4
L_480986:
L_246024:
	xorl %ecx,%ecx
	jmp L_245857
.p2align 0x4
L_480988:
L_246026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_246027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246027
.p2align 0x4
.long 0x3C31
L_246027:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_245846
.p2align 0x4
L_480989:
L_246028:
	movq $0x1,0x10(%rbp)
	jmp L_245850
.p2align 0x4
.long 0x3C50
L_246241:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246242
L_246274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_246275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246275
.p2align 0x4
.long 0x3C52
L_246275:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_246242:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_246249
L_246243:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x38(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_246244:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106E,%r13
	je L_480993
L_246245:
	cmpq $0x1,%r15
	je L_480990
L_246246:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x38(%rbp)
	jmp L_246244
.p2align 0x4
L_480990:
L_246247:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246249
L_246267:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_246268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246268
.p2align 0x4
.long 0x3C52
L_246268:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_246249:
	movq $0x15D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_843:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_480991
L_246250:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x18(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq $0x24DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x8(%r13)
	movq 0xC0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq $0x1731,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_246251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3814
.p2align 0x4
L_480991:
L_246264:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_246265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_480993:
L_246269:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246270
L_246271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_246272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246272
.p2align 0x4
.long 0x3C53
L_246272:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_246270:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_843
.p2align 0x4
.long 0x3C32
L_246031:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_481000
L_246032:
	movq 0xE8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_245863
L_246034:
	cmpl $0x0,%r13d
	jl L_245970
L_246035:
	movl $0x0,0x24(%rbp)
loop_2811:
	movl 0x20(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_480997
L_246036:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_480997:
L_246037:
	movslq 0x24(%rbp),%r15
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x100(%rbp)
	movq %r15,0x108(%rbp)
	movq %r11,0x110(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_246038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookupLongtycon_1
.p2align 0x4
L_481000:
L_246239:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3C23
L_245876:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245877
L_246009:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_246010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246010
.p2align 0x4
.long 0x3C24
L_246010:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_245877:
	movq $0x3D2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x128(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	movl $0x1,0x134(%rbp)
	addq $0x128,%rbp
	leaq (L_245878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3C30
L_246012:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movl 0x128(%rbp),%r14d
	movl %r14d,0x48(%rbp)
	testl %r14d,%r14d
	jnz L_481002
L_246013:
	movq 0x40(%rbp),%r15
	movl 0x3C(%rbp),%ecx
L_246014:
	movq %r15,0x30(%rbp)
	movl %ecx,0x38(%rbp)
	incl 0x3C(%rbp)
	jmp loop_2803
.p2align 0x4
L_481002:
L_246015:
	movq 0x30(%rbp),%r15
	movl 0x38(%rbp),%ecx
	jmp L_246014
.p2align 0x4
.long 0x3C26
L_245912:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245913
L_245987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_245988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245988
.p2align 0x4
.long 0x3C27
L_245988:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_245913:
	movq $0x3CDD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x128(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	movl $0x1,0x134(%rbp)
	addq $0x128,%rbp
	leaq (L_245914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3C2E
L_245990:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movl 0x128(%rbp),%r14d
	movl %r14d,0x50(%rbp)
	testl %r14d,%r14d
	jnz L_481004
L_245991:
	movq 0x48(%rbp),%r15
	movl 0x44(%rbp),%ecx
L_245992:
	movq %r15,0x38(%rbp)
	movl %ecx,0x40(%rbp)
	incl 0x44(%rbp)
	jmp loop_2806
.p2align 0x4
L_481004:
L_245993:
	movq 0x38(%rbp),%r15
	movl 0x40(%rbp),%ecx
	jmp L_245992
.p2align 0x4
.long 0x3C29
L_245948:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_245949
L_245962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_245963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_245963
.p2align 0x4
.long 0x3C2A
L_245963:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_245949:
	movq $0x3D31,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x128(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	movl $0x1,0x134(%rbp)
	addq $0x128,%rbp
	leaq (L_245950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3C2C
L_245965:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movl 0x128(%rbp),%r14d
	movl %r14d,0x58(%rbp)
	testl %r14d,%r14d
	jnz L_481006
L_245966:
	movq 0x50(%rbp),%r15
	movl 0x4C(%rbp),%ecx
L_245967:
	movq %r15,0x40(%rbp)
	movl %ecx,0x48(%rbp)
	incl 0x4C(%rbp)
	jmp loop_2809
.p2align 0x4
L_481006:
L_245968:
	movq 0x40(%rbp),%r15
	movl 0x48(%rbp),%ecx
	jmp L_245967
.p2align 0x4
.long 0x7BF
L_246251:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r13
	movq %r13,0x40(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_246256
L_246252:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_246253:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14)
	cmpq $0x1,%r15
	je L_481007
L_246254:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_246253
.p2align 0x4
L_481007:
L_246256:
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_246261
L_246257:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_246258:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14)
	cmpq $0x1,%r15
	je L_481008
L_246259:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_246258
.p2align 0x4
L_481008:
L_246261:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3C51
L_246265:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA458)(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x8,%rbp
	leaq (L_246266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
.long 0x3C33
L_246038:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_481011
L_246039:
	movq 0x10(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x100,%rbp
	leaq (L_246040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateScheme_0
.p2align 0x4
L_481011:
L_246069:
	incl 0x24(%rbp)
	jmp loop_2811
.p2align 0x4
.long 0x3C23
L_245878:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_245879
.p2align 0x4
.long 0x3C26
L_245914:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_245915
.p2align 0x4
.long 0x3C29
L_245950:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_245951
.p2align 0x4
.long 0x1
L_246266:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	jmp L_246239
.p2align 0x4
.long 0x3C34
L_246040:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq 0x108(%rbp),%r10
	movq %r10,0x58(%rbp)
	movq 0x28(%rbp),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	movl %r8d,%esp
	movl %esp,0x60(%rbp)
	movslq %esp,%r15
	cmpq %r15,%r8
	jne L_245863
L_246042:
	movl %esp,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1058,%r15
	jne L_246043
L_246216:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq %r9,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_245863
L_246218:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ebx
	movslq %ebx,%r11
	cmpq %r13,%r11
	jne L_245863
L_246220:
	cmpl %ecx,%ebx
	jne L_246043
L_246222:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2814:
	cmpl %ebx,%ecx
	je L_481018
L_246223:
	movslq %ebx,%r11
	cmpq %r15,%r11
	jnb L_245867
L_246225:
	movq 0x0(%r14,%r11,8),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0x1056,%r9
	jne L_246043
L_246226:
	movq 0x0(%r10),%r9
	cmpq %r13,%r11
	jnb L_245867
L_246228:
	movq 0x30(%rbp),%r10
	movq 0x0(%r10,%r11,8),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r9),%rsi
	movq 0x8(%rsi),%rdi
	cmpq %rdi,0x8(%rsp)
	jne L_481013
L_246230:
	incl %ebx
	jo L_245853
L_246231:
	jmp loop_2814
.p2align 0x4
L_481013:
L_246043:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246044
L_246214:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246215
.p2align 0x4
.long 0x3C4E
L_246215:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_246044:
	movq $0x20B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
L_246045:
	movq 0xE0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x2A71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x100(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0x10560)(%rip),%r15
	movq %r15,0x110(%rbp)
	movl 0xF0(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_246046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getFlex_0
.p2align 0x4
L_481018:
L_246232:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246233
L_246234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246235
.p2align 0x4
.long 0x3C4F
L_246235:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_246233:
	movq $0x20B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	jmp L_246045
.p2align 0x4
.long 0x3C35
L_246046:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r14
	movq %r14,0x78(%rbp)
	cmpq $0x1,%r14
	je L_246069
L_246047:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_246048
L_246081:
	shrq $0x1,%r13
	movl %r13d,%r11d
	cmpl 0x60(%rbp),%r11d
	jne L_481028
L_246083:
	movq 0x8(%r14),%r15
loop_2812:
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x105C,%r14
	je L_481027
	cmpq $0x105D,%r14
	je L_481026
L_246084:
	movq 0x0(%r15),%r15
tyconAdmitsEquality_0:
	movq 0x70(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1054,%r14
	jne L_481025
L_246085:
	movq %r13,0x108(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_481025:
L_246197:
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_481026:
L_246212:
	movq 0x8(%r15),%r15
	jmp tyconAdmitsEquality_0
.p2align 0x4
L_481027:
L_246207:
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x100,%rbp
	leaq (L_246208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp expandTy_0
.p2align 0x4
L_481028:
L_246048:
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3C40
L_246086:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%dl
L_246087:
	testb %dl,%dl
	jnz L_481034
L_246144:
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x105C,%r15
	je L_481033
	cmpq $0x105D,%r15
	je L_481032
L_246145:
	movq 0x0(%r14),%r15
tyconAdmitsEquality_1:
	movq 0x70(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1054,%r14
	jne L_481031
L_246146:
	movq %r13,0x108(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_481031:
L_246174:
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_481032:
L_246196:
	movq 0x8(%r14),%r15
	jmp tyconAdmitsEquality_1
.p2align 0x4
L_481033:
L_246195:
	movq 0x0(%r14),%r15
L_246185:
	movq %r15,0x100(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x100,%rbp
	leaq (L_246186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp expandTy_0
.p2align 0x4
L_481034:
L_246089:
	movq 0x78(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
.long 0x3C40
L_246198:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	movq %r14,%r13
	shrq $0x1,%r13
	cmpq $0x144A,%r13
	jne L_481039
L_246199:
	movq 0x8(%r15),%r13
	movq 0x30(%r13),%r11
	movq 0x20(%r13),%r14
	movq 0x0(%r14),%r10
L_246200:
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_246178
L_246201:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xD5C,%r15
	jne L_481037
L_246202:
	movq 0x0(%r10),%r14
	cmpq $0x1,%r14
	je L_481036
L_246203:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x105E,%r15
	jne L_481035
L_246204:
	movq 0x8(%r14),%r14
	movq %r14,%r15
	jmp loop_2812
.p2align 0x4
L_481035:
L_246193:
	movq (globalObjptr+0x4D60)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481036:
L_246206:
	movb 0x0(%r11),%dl
	jmp L_246087
.p2align 0x4
L_481037:
L_246178:
	movq (globalObjptr+0x4D38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481039:
L_246092:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3C4D
L_246208:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_246209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3806
.p2align 0x4
.long 0x3C36
L_246049:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
.long 0x3C4B
L_246147:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%dl
L_246148:
	cmpb $0x1,%dl
	jne L_246089
L_246150:
	movq (globalObjptr+0x10588)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3C40
L_246175:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	movq %r14,%r13
	shrq $0x1,%r13
	cmpq $0x144A,%r13
	jne L_246092
L_246176:
	movq 0x8(%r15),%r13
	movq 0x30(%r13),%r11
	movq 0x20(%r13),%r14
	movq 0x0(%r14),%r10
L_246177:
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_246178
L_246179:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xD5C,%r15
	jne L_246178
L_246180:
	movq 0x0(%r10),%r15
	cmpq $0x1,%r15
	je L_481044
L_246181:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x105E,%r14
	jne L_246193
L_246182:
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x105C,%r15
	je L_481042
	cmpq $0x105D,%r15
	je L_481041
L_246183:
	movq 0x0(%r14),%r15
	jmp tyconAdmitsEquality_1
.p2align 0x4
L_481041:
L_246190:
	movq 0x8(%r14),%r15
	jmp tyconAdmitsEquality_1
.p2align 0x4
L_481042:
L_246184:
	movq 0x0(%r14),%r15
	jmp L_246185
.p2align 0x4
L_481044:
L_246194:
	movb 0x0(%r11),%dl
	jmp L_246148
.p2align 0x4
.long 0x3C4C
L_246186:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_246187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3806
.p2align 0x4
.long 0x3C41
L_246090:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246091
L_246142:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246143
.p2align 0x4
.long 0x3C4A
L_246143:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_246091:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144A,%r15
	jne L_246092
L_246093:
	movq 0x8(%r14),%r15
	movq 0x20(%r15),%r13
	movq %r13,0x50(%rbp)
	movl 0xC(%r15),%r13d
	testl %r13d,%r13d
	jz x_842
L_246095:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x105C,%r14
	jne x_2006
L_246096:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp expandTy_0
.p2align 0x4
x_2006:
x_842:
	movq $0x20BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1AB9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_246069
.p2align 0x4
.long 0x3C40
L_246209:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	testl %r15d,%r15d
	jnz L_481050
L_246210:
	movb $0x1,%dl
	jmp L_246087
.p2align 0x4
L_481050:
L_246211:
	xorb %dl,%dl
	jmp L_246087
.p2align 0x4
.long 0x3C37
L_246050:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x108(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246051
L_246079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246080
.p2align 0x4
.long 0x3C3F
L_246080:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_246051:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x10568)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3C43
L_246151:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
.long 0x3C4B
L_246187:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_481052
L_246188:
	movb $0x1,%dl
	jmp L_246148
.p2align 0x4
L_481052:
L_246189:
	xorb %dl,%dl
	jmp L_246148
.p2align 0x4
.long 0x3C42
L_246097:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r11
	movq %r11,0x60(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1058,%r15
	jne L_246098
L_246122:
	movq 0x8(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_245863
L_246124:
	movq 0x58(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ebx
	movslq %ebx,%r11
	cmpq %r13,%r11
	jne L_245863
L_246126:
	cmpl %ecx,%ebx
	jne L_246098
L_246128:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2813:
	cmpl %ebx,%ecx
	je L_481058
L_246129:
	movslq %ebx,%r11
	cmpq %r15,%r11
	jnb L_245867
L_246131:
	movq 0x0(%r14,%r11,8),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0x1056,%r9
	jne L_246098
L_246132:
	movq 0x0(%r10),%r9
	cmpq %r13,%r11
	jnb L_245867
L_246134:
	movq 0x58(%rbp),%r10
	movq 0x0(%r10,%r11,8),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r9),%rsi
	movq 0x8(%rsi),%rdi
	cmpq %rdi,0x8(%rsp)
	jne L_481054
L_246136:
	incl %ebx
	jo L_245853
L_246137:
	jmp loop_2813
.p2align 0x4
L_481054:
L_246098:
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481058:
L_246138:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb x_842
L_246140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246141
.p2align 0x4
.long 0x3C49
L_246141:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	jmp x_842
.p2align 0x4
.long 0x3C38
L_246052:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x80(%rbp),%r15
	andq $0x1,%r15
	jnz L_481063
L_246053:
	movq (globalObjptr+0x10570)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481063:
L_246077:
	movq 0x80(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_246078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x3C44
L_246152:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x108(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246153
L_246172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246173
.p2align 0x4
.long 0x3C48
L_246173:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_246153:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x10590)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3C43
L_246099:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
.long 0x3C39
L_246054:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x10578)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3C39
L_246078:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3C45
L_246154:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246155
L_246170:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246171
.p2align 0x4
.long 0x3C47
L_246171:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_246155:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_246156:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_245853
L_246157:
	cmpq $0x1,%r14
	je L_481065
L_246158:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_246156
.p2align 0x4
L_481065:
L_246159:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246160
L_246168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246169
.p2align 0x4
.long 0x3C46
L_246169:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_246160:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481067
L_246161:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_246162:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_245853
L_246163:
	movl %r13d,0x0(%r15)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x100(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x118(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_246164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_481067:
L_246167:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_246162
.p2align 0x4
.long 0x3C44
L_246100:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x108(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246101
L_246120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246121
.p2align 0x4
.long 0x3C48
L_246121:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_246101:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x10580)(%rip),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3C3A
L_246055:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x70(%rbp)
	movl 0x60(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_246056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x3C3C
L_246164:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_246069
L_246071:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3C45
L_246102:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246103
L_246118:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246119
.p2align 0x4
.long 0x3C47
L_246119:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_246103:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_246104:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_245853
L_246105:
	cmpq $0x1,%r14
	je L_481073
L_246106:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_246104
.p2align 0x4
L_481073:
L_246107:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246108
L_246116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246117
.p2align 0x4
.long 0x3C46
L_246117:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_246108:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481075
L_246109:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_246110:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_245853
L_246111:
	movl %r13d,0x0(%r15)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x100(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x118(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_246112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_481075:
L_246115:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_246110
.p2align 0x4
.long 0x3C3B
L_246056:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3C3C
L_246112:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_246071
	jmp L_246069
.p2align 0x4
.long 0x3C3B
L_246057:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246058
L_246075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246076
.p2align 0x4
.long 0x3C3E
L_246076:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_246058:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_246059:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_245853
L_246060:
	cmpq $0x1,%r14
	je L_481080
L_246061:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_246059
.p2align 0x4
L_481080:
L_246062:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246063
L_246073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246074
.p2align 0x4
.long 0x3C3D
L_246074:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_246063:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481082
L_246064:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_246065:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_245853
L_246066:
	movl %r13d,0x0(%r15)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x100(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x118(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_246067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_481082:
L_246072:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_246065
.p2align 0x4
.long 0x3C3C
L_246067:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_246071
	jmp L_246069
.text
.p2align 0x4
.globl elaborateSpec_0
.hidden elaborateSpec_0
elaborateSpec_0:
L_246278:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_246891
L_246279:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481163
L_246280:
	movq 0x0(%rbp),%r15
loop_2815:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_481162
L_246281:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xE19,%rax
	cmpq $0x9,%rax
	ja L_481087
	leaq jumpTable_740(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_740:
.quad L_481158,L_481157,L_481134,L_481132,L_481131,L_481127,L_481126,L_481121,L_481115,L_481091
.text
.p2align 0x4
L_481087:
L_246282:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_481090
L_246285:
	cmpl $0x0,%r13d
	jl L_481089
L_246286:
	movl $0x0,0x1C(%rbp)
loop_2816:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_481088
L_246287:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481088:
L_246288:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x30(%r14),%r13
	movq 0x28(%r14),%r11
	movq 0x20(%r14),%r10
	movq 0x18(%r14),%r9
	movq 0x10(%r14),%r8
	movq 0x8(%r14),%rsp
	movq 0x0(%r14),%rsi
	movq $0xB4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xB4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rsi,0x0(%r14)
	movq %rsp,0x8(%r14)
	movq %r8,0x10(%r14)
	movq %r9,0x18(%r14)
	movq %r10,0x20(%r14)
	movq %r11,0x28(%r14)
	movq %r13,0x30(%r14)
	addq $0x50,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x38(%r14)
	movq %r15,0x40(%r14)
	movq %r14,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_246289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3791
.p2align 0x4
L_481089:
L_246317:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481090:
L_246284:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481091:
L_246721:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x129D,%r14
	je L_481114
L_246737:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq %r13,0x60(%rbp)
	cmpq %r15,%r13
	movq %r11,0x58(%rbp)
	jne L_246284
L_246739:
	testq %r13,%r13
	jz L_481112
L_246740:
	cmpq $0x7FFFFFFF,%r13
	ja L_246313
L_246741:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246742
L_246886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_246887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246887
.p2align 0x4
.long 0x168D
L_246887:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_246742:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15D7,%rcx
	movq 0x60(%rbp),%rdx
	movq $0xE0,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_246743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246743
.p2align 0x4
.long 0x168D
L_246743:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_246744:
	movq $0x0,0x70(%rbp)
loop_2828:
	movq 0x60(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_481107
L_246745:
	movq 0x68(%rbp),%r15
	movq $0x17FF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x58(%rbp)
	cmpq %r11,%r14
	jne L_246284
L_246747:
	testq %r11,%r11
	jz L_481105
L_246748:
	cmpq $0x7FFFFFFF,%r11
	ja L_481104
L_246749:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246750
L_246874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_246875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246875
.p2align 0x4
.long 0x9DE
L_246875:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_246750:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15D9,%rcx
	movq 0x58(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_246751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246751
.p2align 0x4
.long 0x9DE
L_246751:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x60(%rbp)
L_246752:
	movq $0x0,0x70(%rbp)
loop_2829:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_481101
L_246753:
	movq 0x60(%rbp),%r15
	movq $0x1807,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x38(%rbp),%r14
	movl $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_246284
L_246755:
	cmpl $0x0,%r13d
	jl L_246317
L_246756:
	movl $0x0,0x1C(%rbp)
loop_2830:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_481095
L_246757:
	movq 0x38(%rbp),%r15
	movl $0x0,0x0(%r15)
.p2align 0x4,,0x7
L_246758:
	movl $0x0,0x1C(%rbp)
	movl $0x0,0x20(%rbp)
.p2align 0x4,,0x7
loop_2831:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x20(%rbp)
	jl L_481093
L_246759:
	movl 0x1C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_246758
L_246760:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481093:
L_246762:
	movslq 0x20(%rbp),%r15
	movq %r15,%r14
	imulq $0x30,%r14
	movq 0x60(%rbp),%r13
	movq 0x10(%r13,%r14,1),%r11
	imulq $0x30,%r15
	movq 0x28(%r13,%r15,1),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1054,%r15
	je L_481094
L_246784:
	movq 0x0(%r11),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_246785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_481094:
L_246763:
	movq 0x8(%r11),%r15
	movq %r15,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_246764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_481095:
L_246787:
	movslq 0x1C(%rbp),%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	imulq $0x30,%r14
	movq 0x60(%rbp),%r10
	movq 0x10(%r10,%r14,1),%r9
	movq %r9,0x20(%rbp)
	imulq $0x30,%r13
	movq 0x18(%r10,%r13,1),%r14
	movq %r14,0x28(%rbp)
	imulq $0x30,%r11
	movq 0x0(%r10,%r11,1),%r14
	movq %r14,0x30(%rbp)
	imulq $0x30,%r15
	movq 0x20(%r10,%r15,1),%r14
	movq %r14,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x68(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_246284
L_246789:
	cmpl $0x0,%r13d
	jl L_246317
L_246790:
	movl $0x0,0x6C(%rbp)
loop_2833:
	movl 0x68(%rbp),%r15d
	cmpl %r15d,0x6C(%rbp)
	jl L_481096
L_246791:
	movq $0x20BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1111,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_246792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_1
.p2align 0x4
L_481096:
L_246796:
	movslq 0x6C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x58(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x78(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x88(%rbp)
	movb $0x2,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x78,%rbp
	leaq (L_246797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendVid_0
.p2align 0x4
L_481101:
L_246803:
	movq 0x70(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	imulq $0x28,%r14
	movq 0x68(%rbp),%r9
	movq 0x8(%r9,%r14,1),%r8
	movq %r8,0x78(%rbp)
	imulq $0x28,%r13
	movq 0x10(%r9,%r13,1),%r14
	movq %r14,0x80(%rbp)
	imulq $0x28,%r11
	movq 0x18(%r9,%r11,1),%r14
	movq %r14,0x88(%rbp)
	imulq $0x28,%r10
	movq 0x0(%r9,%r10,1),%r14
	movq %r14,0x90(%rbp)
	imulq $0x28,%r15
	movq 0x20(%r9,%r15,1),%r14
	movq %r14,0x98(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_246284
L_246805:
	movl %r14d,0xB0(%rbp)
	movq $0x3AD7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r8,0x0(%r15)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_246806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_2
.p2align 0x4
L_481104:
L_246313:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481105:
L_246877:
	movq (globalObjptr+0x4E40)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_246752
.p2align 0x4
L_481107:
L_246878:
	movq 0x70(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x80(%rbp)
	movq 0x10(%r13),%r9
	movq %r9,0x88(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_246284
L_246880:
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x90(%rbp)
	movq $0xFF7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xFF9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq (globalObjptr+0x4D18)(%rip),%r11
	movl 0x0(%r11),%r9d
	movq $0xFFB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq (globalObjptr+0x4D50)(%rip),%r8
	movq %r8,0x0(%r11)
	movq (globalObjptr+0x4D20)(%rip),%r8
	movl 0x0(%r8),%esp
	incl %esp
	jo L_481108
L_246881:
	movl %esp,0x0(%r8)
	movq $0x13,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movq $0x1,0x0(%r8)
	movq $0xFFD,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movl %esp,0x8(%rsi)
	movl %r9d,0x10(%rsi)
	movq %r8,0x18(%rsi)
	movq %r11,0x20(%rsi)
	movq %r13,0x28(%rsi)
	movq %r14,0x30(%rsi)
	addq $0x40,%r12
	movq %r15,0x0(%rsi)
	movl $0x1,0xC(%rsi)
	movl $0x0,0x14(%rsi)
	movq $0x2895,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rsi,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xFF5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x20AB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x98(%rbp)
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x20B7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x1111,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xA8(%rbp)
	movq %r10,0xB0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xA8,%rbp
	leaq (L_246882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_1
.p2align 0x4
L_481108:
L_246292:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481112:
L_246889:
	movq (globalObjptr+0x4E38)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_246744
.p2align 0x4
L_481114:
L_246722:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_246723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookupLongtycon_0
.p2align 0x4
L_481115:
L_246720:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movl $0x1,0x10(%rbp)
elaborateTypedescs_0:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x14(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_246284
L_246357:
	cmpl $0x0,%r13d
	jl L_246317
L_246358:
	movl $0x0,0x28(%rbp)
loop_2820:
	movl 0x14(%rbp),%r15d
	cmpl %r15d,0x28(%rbp)
	jl L_481116
L_246359:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481116:
L_246360:
	movslq 0x28(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_246284
L_246362:
	movl %r9d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x38(%rbp)
	movq $0xFF7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xFF9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq (globalObjptr+0x4D18)(%rip),%r11
	movl 0x0(%r11),%r10d
	movq $0xFFB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq (globalObjptr+0x4D50)(%rip),%r9
	movq %r9,0x0(%r11)
	movq (globalObjptr+0x4D20)(%rip),%r9
	movl 0x0(%r9),%r8d
	incl %r8d
	jo L_246292
L_246363:
	movl %r8d,0x0(%r9)
	movq $0x13,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq $0x1,0x0(%r9)
	movq $0xFFD,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x8(%rsp)
	movl %r10d,0x10(%rsp)
	movq %r9,0x18(%rsp)
	movq %r11,0x20(%rsp)
	movq %r13,0x28(%rsp)
	movq %r14,0x30(%rsp)
	addq $0x40,%r12
	movq %r15,0x0(%rsp)
	movl $0x0,0xC(%rsp)
	movl $0x0,0x14(%rsp)
	movq $0x2895,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xFF5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x20AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x0(%r15)
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	addq $0x50,%rbp
	leaq (L_246364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_481121:
L_246698:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_246284
L_246700:
	cmpl $0x0,%r13d
	jl L_246317
L_246701:
	movl $0x0,0x1C(%rbp)
loop_2826:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_481122
L_246702:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481122:
L_246703:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq %r10,0x20(%rbp)
	cmpq $0x1,%r11
	je L_481123
L_246704:
	movq %r11,0xE0(%rbp)
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xD8,%rbp
	leaq (L_246705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateScheme_0
.p2align 0x4
L_481123:
L_246718:
	movq 0xC0(%rbp),%r15
L_246709:
	movq (globalObjptr+0xEF8)(%rip),%r14
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x110B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r13,0xD8(%rbp)
	movb $0x1,0xE0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xD8,%rbp
	leaq (L_246710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendVid_0
.p2align 0x4
L_481126:
L_246694:
	movq 0x8(%r14),%r15
	movq %r15,0xE0(%rbp)
	movq 0x0(%r14),%r13
	movq $0x10D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xF8(%rbp)
	movl $0x0,0xF0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0xF0,%rbp
	leaq (L_246695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateSigexp_0
.p2align 0x4
L_481127:
L_246652:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_246284
L_246654:
	cmpl $0x0,%r13d
	jl L_246317
L_246655:
	movl $0x0,0x1C(%rbp)
loop_2825:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_481128
L_246656:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481128:
L_246657:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x0(%r14),%r11
	movq %r11,0xD0(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_246658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_481131:
L_246647:
	movq 0x8(%r14),%r15
	movq %r15,0xE0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xF0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0xF0,%rbp
	leaq (L_246648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateSpec_0
.p2align 0x4
L_481132:
L_246459:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq (globalObjptr+0x4D18)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	movl %r13d,0xE8(%rbp)
	jo L_246292
L_246460:
	movq %r15,0xF8(%rbp)
	movl %r13d,0x0(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0xF8,%rbp
	leaq (L_246461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateSpec_0
.p2align 0x4
L_481134:
L_246378:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0xE8(%rbp)
	cmpq %r14,%r11
	movq %r15,0xE0(%rbp)
	jne L_246284
L_246380:
	testq %r11,%r11
	jz L_481155
L_246381:
	cmpq $0x7FFFFFFF,%r11
	ja L_246313
L_246382:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246383
L_246455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246456
.p2align 0x4
.long 0x3C5C
L_246456:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_246383:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15D5,%rcx
	movq 0xE8(%rbp),%rdx
	movq $0xE0,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246384
.p2align 0x4
.long 0x3C5C
L_246384:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0xF0(%rbp)
L_246385:
	movq $0x0,0xF8(%rbp)
loop_2821:
	movq 0xE8(%rbp),%r15
	cmpq %r15,0xF8(%rbp)
	jl L_481152
L_246386:
	movq 0xF0(%rbp),%r15
	movq $0x1809,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_246284
L_246388:
	cmpl $0x0,%r13d
	jl L_246317
L_246389:
	movl $0x0,0x14(%rbp)
loop_2822:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,0x14(%rbp)
	jl L_481135
L_246390:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481135:
L_246391:
	movslq 0x14(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xF0(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x18(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r11),%r13
	movq %r13,0x28(%rbp)
	movq 0x80(%rbp),%r13
	movq 0x10(%r13),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x40(%rbp)
	movq 0x8(%rbp),%r13
	movq 0x50(%r13),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x38(%r13),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x50(%rbp)
	movq 0x0(%r9),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r11),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_481149
L_246393:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_481148
L_246394:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x70(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_246396:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_246397
L_246435:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_246397
L_246436:
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x58(%rbp)
	je L_481142
L_246397:
	movl 0x70(%rbp),%r13d
	incl %r13d
	movl %r13d,0x74(%rbp)
	jo L_246292
L_246398:
	cmpq $0x1,%r15
	je L_481136
L_246399:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x70(%rbp)
	jmp L_246396
.p2align 0x4
L_481136:
L_246400:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246401
L_246433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246434
.p2align 0x4
.long 0x3C64
L_246434:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_246401:
	movl 0x74(%rbp),%ecx
L_246402:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_481139
L_246404:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_246406
L_246432:
	movl %ecx,0x0(%r15)
L_246406:
	movq $0x1133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x112F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x112B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_246407:
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je new_9
L_246408:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0x48(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	jne new_37
L_246415:
	movq 0x38(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_481137
L_246416:
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10598)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA460)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA438)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_481137:
L_246426:
	movq 0x30(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
new_37:
new_9:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x267B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x10(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_481139:
L_246403:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481142:
L_246438:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246439
L_246443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246444
.p2align 0x4
.long 0x3C65
L_246444:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_246439:
	movl 0x70(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_246403
L_246440:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_481143
L_246441:
	movq 0x78(%rbp),%r15
	jmp L_246407
.p2align 0x4
L_481143:
L_246442:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x70(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x78(%rbp),%r15
	jmp L_246407
.p2align 0x4
L_481148:
L_246445:
	xorl %ecx,%ecx
	jmp L_246402
.p2align 0x4
L_481149:
L_246392:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481152:
L_246447:
	movq 0xF8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0xE0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x118(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x100(%rbp)
	movl $0x0,0x110(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	addq $0x110,%rbp
	leaq (L_246448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateSigexp_0
.p2align 0x4
L_481155:
L_246458:
	movq (globalObjptr+0x4E30)(%rip),%r15
	movq %r15,0xF0(%rbp)
	jmp L_246385
.p2align 0x4
L_481157:
L_246355:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movl $0x0,0x10(%rbp)
	jmp elaborateTypedescs_0
.p2align 0x4
L_481158:
L_246318:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_246284
L_246320:
	cmpl $0x0,%r13d
	jl L_246317
L_246321:
	movl $0x0,0x24(%rbp)
loop_2818:
	movl 0x20(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_481159
L_246322:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481159:
L_246323:
	movslq 0x24(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x38(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r11,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (L_246324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateScheme_0
.p2align 0x4
L_481162:
L_246890:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481163:
L_246891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_246892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246892
.p2align 0x4
.long 0x16D7
L_246892:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_246280
.p2align 0x4
.long 0x3C54
L_246289:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r13
	je L_481172
L_246290:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_246291:
	incl %ecx
	jo L_246292
L_246293:
	cmpq $0x1,%r15
	je L_481165
L_246294:
	movq 0x8(%r15),%r15
	jmp L_246291
.p2align 0x4
L_481165:
L_246295:
L_246296:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	testq %rdx,%rdx
	jz L_481170
L_246297:
	cmpq $0x7FFFFFFF,%rdx
	ja L_246313
L_246298:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1497,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_246299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246299
.p2align 0x4
.long 0x3C55
L_246299:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x40(%rbp)
L_246300:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2817:
	cmpq 0x28(%rbp),%r15
	jnl L_481167
L_246309:
	cmpq $0x1,%r14
	je L_481166
L_246310:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2817
.p2align 0x4
L_481166:
L_246311:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481167:
L_246301:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246302
L_246307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_246308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246308
.p2align 0x4
.long 0x3C57
L_246308:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_246302:
	movq 0x40(%rbp),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x110B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xA0(%rbp)
	movb $0x0,0xA8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xA0,%rbp
	leaq (L_246303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendVid_0
.p2align 0x4
L_481170:
L_246314:
	movq (globalObjptr+0xD20)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_246300
.p2align 0x4
L_481172:
L_246315:
	xorl %ecx,%ecx
	jmp L_246296
.p2align 0x4
.long 0x3C8C
L_246785:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144A,%r15
	jne L_481180
L_246786:
	movq 0x8(%r14),%r15
	movq 0x30(%r15),%r13
	movq %r13,0x30(%rbp)
L_246765:
	movq 0x30(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x1,%r15b
	je L_246781
	cmpb $0x2,%r15b
	je L_481178
L_246766:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x38(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_246284
L_246768:
	movl $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_2832:
	movl 0x40(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	je L_481176
L_246769:
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_481175
L_246771:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	jne L_481174
.p2align 0x4,,0x7
L_246777:
	movl 0x40(%rbp),%r15d
	incl %r15d
	jo L_246292
L_246778:
	movl %r15d,0x40(%rbp)
	jmp loop_2832
.p2align 0x4
L_481174:
L_246772:
	movq %r13,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x70,%rbp
	leaq (L_246773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp expandTy_0
.p2align 0x4
L_481175:
L_246342:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481176:
L_246781:
	movl 0x1C(%rbp),%ecx
L_246775:
	movl %ecx,0x1C(%rbp)
	incl 0x20(%rbp)
	jmp loop_2831
.p2align 0x4
L_481178:
L_246783:
	movq (globalObjptr+0x4E48)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481180:
L_246366:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3C8C
L_246764:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq 0x10(%r15),%r15
	movq %r15,0x30(%rbp)
	jmp L_246765
.p2align 0x4
.long 0x3C8F
L_246792:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246793
L_246794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_246795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246795
.p2align 0x4
.long 0x3C90
L_246795:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_246793:
	incl 0x1C(%rbp)
	jmp loop_2830
.p2align 0x4
.long 0x3C91
L_246797:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246798
L_246799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_246800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246800
.p2align 0x4
.long 0x3C92
L_246800:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_246798:
	incl 0x6C(%rbp)
	jmp loop_2833
.p2align 0x4
.long 0x3C93
L_246806:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246807
L_246872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_246873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246873
.p2align 0x4
.long 0x3C9C
L_246873:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_246807:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq %r13,0x8(%r14)
	je L_481197
L_246808:
	movq $0x143,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x0(%r15),%r13
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1BD9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xA0(%rbp)
L_246809:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0xB8(%rbp)
	cmpq %r14,%r11
	jne L_246284
L_246811:
	testq %r11,%r11
	jz L_481195
L_246812:
	cmpq $0x7FFFFFFF,%r11
	ja L_246313
L_246813:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246814
L_246867:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_246868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246868
.p2align 0x4
.long 0x3C94
L_246868:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_246814:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15DB,%rcx
	movq 0xB8(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_246815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246815
.p2align 0x4
.long 0x3C94
L_246815:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0xC0(%rbp)
L_246816:
	movq $0x0,0xC8(%rbp)
loop_2834:
	movq 0xB8(%rbp),%r15
	cmpq %r15,0xC8(%rbp)
	jl L_481191
L_246817:
	movq 0xC0(%rbp),%r15
	movq $0x1803,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x98(%rbp)
	cmpq %r14,%rdx
	jne L_246284
L_246819:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0xA0(%rbp)
	je L_481189
L_246820:
	cmpq $0x7FFFFFFF,%rdx
	ja L_246313
L_246821:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15CB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_246822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246822
.p2align 0x4
.long 0x3C95
L_246822:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq %rax,0xA8(%rbp)
L_246823:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2835:
	cmpq 0x98(%rbp),%r15
	jnl L_481183
L_246836:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	salq $0x4,%r10
	movq 0xC0(%rbp),%r14
	movq 0x8(%r14,%r10,1),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0xA8(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %rsp,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_2835
.p2align 0x4
L_481183:
L_246824:
	movq 0xA8(%rbp),%r15
	movq $0x689,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0xA0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_481187
L_246825:
	movq 0x98(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_246313
L_246826:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15DD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_246827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246827
.p2align 0x4
.long 0x3C96
L_246827:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq %rax,0xA0(%rbp)
L_246828:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2836:
	cmpq 0x98(%rbp),%r15
	jnl L_481184
L_246833:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0xC0(%rbp),%r14
	movq 0x0(%r14,%r13,1),%r11
	movq 0xA0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2836
.p2align 0x4
L_481184:
L_246829:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246830
L_246831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_246832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246832
.p2align 0x4
.long 0x3C97
L_246832:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_246830:
	movq 0xA0(%rbp),%r15
	movq $0x1805,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r13,%r10
	imulq $0x30,%r10
	movq 0x78(%rbp),%r9
	movq %r9,0x8(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x30,%r10
	movq 0x80(%rbp),%r9
	movq %r9,0x10(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x30,%r10
	movq 0x88(%rbp),%r9
	movq %r9,0x18(%r14,%r10,1)
	movq %r13,%r10
	imulq $0x30,%r10
	movq 0x90(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x30,%r10
	movq 0xA8(%rbp),%r9
	movq %r9,0x20(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	imulq $0x30,%r11
	movq %r15,0x28(%r14,%r11,1)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_2829
.p2align 0x4
L_481187:
L_246835:
	movq (globalObjptr+0x4E60)(%rip),%r15
	movq %r15,0xA0(%rbp)
	jmp L_246828
.p2align 0x4
L_481189:
L_246838:
	movq (globalObjptr+0x4E58)(%rip),%r15
	movq %r15,0xA8(%rbp)
	jmp L_246823
.p2align 0x4
L_481191:
L_246839:
	movq 0xC8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x98(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq %r10,0xD0(%rbp)
	cmpq $0x1,%r11
	je L_481192
L_246840:
	movq $0x3ADB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movl $0x2,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_246841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_2
.p2align 0x4
L_481192:
L_246866:
	movq 0xA0(%rbp),%r15
	movq $0x1,0xD8(%rbp)
L_246845:
	movq $0x65D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r14,0xF0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xE8,%rbp
	leaq (L_246846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elaborateScheme_0
.p2align 0x4
L_481195:
L_246870:
	movq (globalObjptr+0x4E50)(%rip),%r15
	movq %r15,0xC0(%rbp)
	jmp L_246816
.p2align 0x4
L_481197:
L_246871:
	movq $0x1BDD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1BD7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r13,0xA0(%rbp)
	addq $0x10,%r12
	jmp L_246809
.p2align 0x4
.long 0x3C9D
L_246882:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246883
L_246884:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_246885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246885
.p2align 0x4
.long 0x3C9E
L_246885:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_246883:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x70(%rbp),%r14
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x78(%rbp),%r10
	movq %r10,0x8(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x98(%rbp),%r10
	movq %r10,0x10(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x80(%rbp),%r10
	movq %r10,0x18(%r15,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x90(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	imulq $0x28,%r13
	movq 0x88(%rbp),%r11
	movq %r11,0x20(%r15,%r13,1)
	incq %r14
	movq %r14,0x70(%rbp)
	jmp loop_2828
.p2align 0x4
.long 0x3C8A
L_246723:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_481200
L_246724:
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_246725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_1
.p2align 0x4
L_481200:
L_246736:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x9AC
L_246364:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246365
L_246375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_246376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246376
.p2align 0x4
.long 0x3C5B
L_246376:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_246365:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144A,%r14
	jne L_246366
L_246367:
	movq 0x8(%r15),%r14
	movq 0x30(%r14),%r13
	movl 0x10(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_481201
L_246368:
	movb $0x1,%dl
	movq %r13,%r15
L_246369:
	movb %dl,0x0(%r15)
	movq $0x20B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1111,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_246370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_1
.p2align 0x4
L_481201:
L_246374:
	xorb %dl,%dl
	movq %r13,%r15
	jmp L_246369
.p2align 0x4
.long 0x3C85
L_246705:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246706
L_246716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_246717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246717
.p2align 0x4
.long 0x3C89
L_246717:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_246706:
	movq $0x3AF5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD8(%rbp)
	movl $0x2,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_246707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_10
.p2align 0x4
.long 0x3C86
L_246710:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246711
L_246712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_246713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246713
.p2align 0x4
.long 0x3C87
L_246713:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_246711:
	incl 0x1C(%rbp)
	jmp loop_2826
.p2align 0x4
.long 0x3C84
L_246695:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_481206
L_246696:
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%rbp),%r14
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp openInterface_0
.p2align 0x4
L_481206:
L_246697:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3C7E
L_246658:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246659
L_246691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_246692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246692
.p2align 0x4
.long 0x3C82
L_246692:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_246659:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_246666
L_246660:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x38(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_246661:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106E,%r13
	je L_481210
L_246662:
	cmpq $0x1,%r15
	je L_481207
L_246663:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x38(%rbp)
	jmp L_246661
.p2align 0x4
L_481207:
L_246664:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246666
L_246684:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_246685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246685
.p2align 0x4
.long 0x3C82
L_246685:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_246666:
	movq $0x15D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_844:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481208
L_246667:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x18(%r15),%r11
	movq %r11,0xC8(%rbp)
	movq 0x8(%r13),%r15
	movq $0x24DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x8(%r13)
	movq 0xB8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0xE0(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq $0x1731,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_246668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3814
.p2align 0x4
L_481208:
L_246682:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_246683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481210:
L_246686:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246687
L_246688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_246689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246689
.p2align 0x4
.long 0x3C83
L_246689:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_246687:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_844
.p2align 0x4
.long 0x3451
L_246648:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246649
L_246650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_246651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246651
.p2align 0x4
.long 0x344E
L_246651:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_246649:
	movq 0xE0(%rbp),%r15
	jmp loop_2815
.p2align 0x4
.long 0x3C68
L_246461:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movl $0x0,0x10(%rbp)
.p2align 0x4,,0x7
loop_2823:
	movl 0x10(%rbp),%r15d
	cmpl $0x1,%r15d
	jnl L_481257
L_246463:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0xE0(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1337,%r15
	je L_481216
L_246621:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_481215
.p2align 0x4,,0x7
L_246534:
	incl 0x10(%rbp)
	jmp loop_2823
.p2align 0x4
L_481215:
L_246622:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
L_246623:
	movq 0x20(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_246624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookupLongtycon_0
.p2align 0x4
L_481216:
L_246464:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_246534
L_246465:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_246466:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481255
.p2align 0x4,,0x7
L_246467:
	movq 0x20(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq %r9,0x30(%rbp)
	cmpq $0x1,%r10
	jne L_481235
L_246587:
	movq 0x8(%rbp),%r13
	movq 0x38(%r13),%r11
	movq 0x10(%r11),%r8
	movq 0x0(%r8),%rsp
	movq %rsp,0x38(%rbp)
	movq 0x8(%r9),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_246392
L_246588:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_481233
L_246589:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x14(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_246591:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_246592
L_246607:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_246592
L_246608:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x38(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_481227
L_246592:
	movl 0x14(%rbp),%r13d
	incl %r13d
	movl %r13d,0x50(%rbp)
	jo L_246292
L_246593:
	cmpq $0x1,%r15
	je L_481217
L_246594:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x14(%rbp)
	jmp L_246591
.p2align 0x4
L_481217:
L_246595:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481225
.p2align 0x4,,0x7
L_246596:
	movl 0x50(%rbp),%ecx
L_246597:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_246403
L_246598:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_246600
L_246604:
	movl %ecx,0x0(%r15)
L_246600:
	movq $0x1133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x112F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x112B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_246601:
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_481222
L_246602:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0x18(%r15),%r11
	movq 0x8(%r14),%r15
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r11,0x30(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x8(%r14)
.p2align 0x4,,0x7
L_246558:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481221
.p2align 0x4,,0x7
L_246559:
	movq $0x1135,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2675,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_481218
L_246560:
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_246466
.p2align 0x4
L_481218:
L_246561:
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
L_246526:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481220
.p2align 0x4,,0x7
L_246527:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_246534
L_246528:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
L_246529:
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x110(%rbp)
	movq $0x180B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movl 0xE8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r15)
	movq %r15,0x130(%rbp)
	movq $0x1,0xF8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x108(%rbp)
	movl %r14d,0x118(%rbp)
	movq %r13,0x128(%rbp)
	addq $0xF8,%rbp
	leaq (L_246530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp share_0
.p2align 0x4
L_481220:
L_246538:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246539
.p2align 0x4
.long 0x3C70
L_246539:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_246527
.p2align 0x4
L_481221:
L_246562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246563
.p2align 0x4
.long 0x3C75
L_246563:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_246559
.p2align 0x4
L_481222:
L_246603:
	movq 0x40(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (error_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481225:
L_246605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246606
.p2align 0x4
.long 0x3C74
L_246606:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_246596
.p2align 0x4
L_481227:
L_246610:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481230
.p2align 0x4,,0x7
L_246611:
	movl 0x14(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_246403
L_246612:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_481228
L_246613:
	movq 0x50(%rbp),%r15
	jmp L_246601
.p2align 0x4
L_481228:
L_246614:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x14(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x50(%rbp),%r15
	jmp L_246601
.p2align 0x4
L_481230:
L_246615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246616
.p2align 0x4
.long 0x3C7A
L_246616:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_246611
.p2align 0x4
L_481233:
L_246617:
	xorl %ecx,%ecx
	jmp L_246597
.p2align 0x4
L_481235:
L_246468:
	movq 0x8(%r10),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r10),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%rbp),%r11
	movq 0x38(%r11),%r10
	movq 0x10(%r10),%r8
	movq 0x0(%r8),%rsp
	movq %rsp,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r11),%r13
	movq %r13,0x60(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_246392
L_246469:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_481253
L_246470:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x14(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_246472:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_246473
L_246576:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_246473
L_246577:
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x48(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_481247
L_246473:
	movl 0x14(%rbp),%r13d
	incl %r13d
	movl %r13d,0x68(%rbp)
	jo L_246292
L_246474:
	cmpq $0x1,%r15
	je L_481236
L_246475:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x14(%rbp)
	jmp L_246472
.p2align 0x4
L_481236:
L_246476:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246477
L_246574:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246575
.p2align 0x4
.long 0x3C77
L_246575:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_246477:
	movl 0x68(%rbp),%ecx
L_246478:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_246403
L_246479:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_246481
L_246573:
	movl %ecx,0x0(%r15)
L_246481:
	movq $0x1133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x112F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x112B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_246482:
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_481242
L_246483:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0x18(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x8(%r14)
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_481241
L_246484:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_246485:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481240
.p2align 0x4,,0x7
L_246486:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_481237
L_246487:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_246485
.p2align 0x4
L_481237:
L_246488:
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_246489:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481239
.p2align 0x4,,0x7
L_246490:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_481238
L_246491:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_246489
.p2align 0x4
L_481238:
L_246492:
	movq 0x50(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq $0x1,0x48(%rbp)
L_246493:
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_246494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_481239:
L_246567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246568
.p2align 0x4
.long 0x3C76
L_246568:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_246490
.p2align 0x4
L_481240:
L_246569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246570
.p2align 0x4
.long 0x3C77
L_246570:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_246486
.p2align 0x4
L_481241:
L_246571:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq $0x1,0x48(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_246493
.p2align 0x4
L_481242:
L_246572:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (error_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481247:
L_246579:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246580
L_246584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246585
.p2align 0x4
.long 0x3C79
L_246585:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_246580:
	movl 0x14(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_246403
L_246581:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_481248
L_246582:
	movq 0x68(%rbp),%r15
	jmp L_246482
.p2align 0x4
L_481248:
L_246583:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x14(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x68(%rbp),%r15
	jmp L_246482
.p2align 0x4
L_481253:
L_246586:
	xorl %ecx,%ecx
	jmp L_246478
.p2align 0x4
L_481255:
L_246618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246619
.p2align 0x4
.long 0x3C7B
L_246619:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_246467
.p2align 0x4
L_481257:
L_246462:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3C5F
L_246417:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_246418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3C62
L_246427:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246428
L_246429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246430
.p2align 0x4
.long 0x3C63
L_246430:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_246428:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1131,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x267D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_246412:
	incl 0x14(%rbp)
	jmp loop_2822
.p2align 0x4
.long 0x3C5D
L_246410:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246411
L_246413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246414
.p2align 0x4
.long 0x3C5E
L_246414:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_246411:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1131,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x267D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_246412
.p2align 0x4
.long 0x3C66
L_246448:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246449
L_246453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_246454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246454
.p2align 0x4
.long 0x3C67
L_246454:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_246449:
	movq 0x108(%rbp),%r15
	cmpq $0x1,%r15
	je L_481260
L_246450:
L_246451:
	movq 0xF0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xF8(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x4,%r15
	movq 0x100(%rbp),%r11
	movq %r11,0x8(%r14,%r15,1)
	incq %r13
	movq %r13,0xF8(%rbp)
	jmp loop_2821
.p2align 0x4
L_481260:
L_246452:
	movq 0x78(%rbp),%r14
	xchgq %r14,%r15
	jmp L_246451
.p2align 0x4
.long 0xB60
L_246324:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r11
	movq %r11,0x40(%rbp)
	movq 0x50(%rbp),%r10
	movq %r10,0x48(%rbp)
	movq 0x28(%rbp),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	movl %r8d,%ecx
	movslq %ecx,%r15
	cmpq %r8,%r15
	jne L_246284
L_246326:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1058,%r15
	jne L_246327
L_246333:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq %r9,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_246284
L_246335:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ebx
	movslq %ebx,%r11
	cmpq %r13,%r11
	jne L_246284
L_246337:
	cmpl %ebx,%ecx
	jne L_246327
L_246339:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2819:
	cmpl %ecx,%ebx
	je L_481268
L_246340:
	movslq %ebx,%r11
	cmpq %r15,%r11
	jnb L_246342
L_246343:
	movq 0x0(%r14,%r11,8),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0x1056,%r9
	jne L_246327
L_246344:
	movq 0x0(%r10),%r9
	cmpq %r13,%r11
	jnb L_246342
L_246346:
	movq 0x8(%r9),%r10
	movq 0x40(%rbp),%r8
	movq 0x0(%r8,%r11,8),%rsp
	movq 0x8(%rsp),%rsi
	movq 0x8(%rsi),%rdi
	cmpq %rdi,0x8(%r10)
	jne L_481263
L_246348:
	incl %ebx
	jo L_246292
L_246349:
	jmp loop_2819
.p2align 0x4
L_481263:
L_246327:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246328
L_246331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_246332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246332
.p2align 0x4
.long 0x3C58
L_246332:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_246328:
	movq $0x20B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
L_246329:
	movq $0x1111,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_246330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_1
.p2align 0x4
L_481268:
L_246350:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246351
L_246352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_246353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246353
.p2align 0x4
.long 0x3C59
L_246353:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_246351:
	movq $0x20B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_246329
.p2align 0x4
.long 0x1E24
L_246303:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246304
L_246305:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_246306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246306
.p2align 0x4
.long 0x3C56
L_246306:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_246304:
	incl 0x1C(%rbp)
	jmp loop_2816
.p2align 0x4
.long 0x3C8D
L_246773:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (not_57+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3806
.p2align 0x4
.long 0x3C98
L_246841:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246842
L_246864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_246865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246865
.p2align 0x4
.long 0x3C9B
L_246865:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_246842:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0xA8(%rbp),%r11
	cmpq %r11,0x8(%r13)
	je L_481276
L_246843:
	movq $0x143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x0(%r14),%r13
	movq $0x145,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1BD9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
L_246844:
	movq 0x20(%rbp),%r14
	movq %r14,0xD8(%rbp)
	jmp L_246845
.p2align 0x4
L_481276:
L_246863:
	movq $0x1BDD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1BD7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r15
	jmp L_246844
.p2align 0x4
.long 0x3C99
L_246846:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246847
L_246861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246862
.p2align 0x4
.long 0x3C9A
L_246862:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_246847:
	movq $0x110B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0xE8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1801,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0xD8(%rbp),%r10
	cmpq $0x1,%r10
	je L_481283
L_246848:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1058,%r15
	jne L_246849
L_246850:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1054,%r13
	jne L_246849
L_246851:
	movq 0x8(%r14),%r13
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r13)
	jne L_481280
L_246853:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq $0x0,%r14
	jna L_246342
L_246855:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	jna L_246342
L_246857:
	movq %r11,%r15
	movq %r13,%r14
L_246858:
	movq 0xC0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0xC8(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r14,0x0(%r13,%r9,1)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,%r14
	salq $0x4,%r14
	movq %r15,0x8(%r13,%r14,1)
	incq %r11
	movq %r11,0xC8(%rbp)
	jmp loop_2834
.p2align 0x4
L_481280:
L_246849:
	movq (globalObjptr+0x4E68)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481283:
L_246860:
	movq $0x1,%r14
	movq %r11,%r15
	jmp L_246858
.p2align 0x4
.long 0x3C8B
L_246725:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x105D,%r15
	jne L_481288
L_246735:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
L_246727:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_246284
L_246729:
	cmpl $0x0,%r13d
	jl L_246317
L_246730:
	movl $0x0,0x1C(%rbp)
loop_2827:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_481285
L_246731:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481285:
L_246732:
	movslq 0x1C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x50(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x60(%rbp)
	movb $0x2,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_246733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendVid_0
.p2align 0x4
L_481288:
L_246726:
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_246727
.p2align 0x4
.long 0x3C5A
L_246370:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246371
L_246372:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_246373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246373
.p2align 0x4
.long 0x9AB
L_246373:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_246371:
	incl 0x28(%rbp)
	jmp loop_2820
.p2align 0x4
.long 0x3C85
L_246707:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246708
L_246714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_246715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246715
.p2align 0x4
.long 0x3C88
L_246715:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_246708:
	movq $0x20B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_246709
.p2align 0x4
.long 0x3C7F
L_246668:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r13
	movq %r13,0x38(%rbp)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_246673
L_246669:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_246670:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14)
	cmpq $0x1,%r15
	je L_481291
L_246671:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_246670
.p2align 0x4
L_481291:
L_246673:
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_246678
L_246674:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_246675:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14)
	cmpq $0x1,%r15
	je L_481292
L_246676:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_246675
.p2align 0x4
L_481292:
L_246678:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (L_246679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp openInterface_0
.p2align 0x4
.long 0x3C81
L_246683:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xA458)(%rip),%r15
	movq %r15,0xD0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (L_246679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
.long 0x3C78
L_246624:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246625
L_246644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246645
.p2align 0x4
.long 0x3C75
L_246645:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_246625:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_481297
L_246626:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_481295
L_246627:
	movq 0x0(%r13),%r11
	movq 0x20(%rbp),%r10
	movq 0x0(%r10),%r9
	movq $0x409D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r13,0x0(%r8)
	addq $0x10,%r12
	movq $0x180D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r8,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r13,0x108(%rbp)
	addq $0x20,%r12
	movq $0x409D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r10,0x0(%r14)
	movq $0x180D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r9,0x8(%r13)
	addq $0x20,%r12
	movq %r15,0x10(%r13)
	movq %r13,0x100(%rbp)
	movl 0xE8(%rbp),%r15d
	movl %r15d,0xF8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xF8,%rbp
	leaq (L_246628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2009
.p2align 0x4
L_481295:
L_246634:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_246534
L_246635:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r13,0x20(%rbp)
	jmp L_246623
.p2align 0x4
L_481297:
L_246637:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_481299
L_246638:
	movq $0x2679,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_246534
L_246639:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_246623
.p2align 0x4
L_481299:
L_246641:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_246534
L_246642:
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r11,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_246623
.p2align 0x4
.long 0x3C6E
L_246530:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246531
L_246535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246536
.p2align 0x4
.long 0x3C6F
L_246536:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_246531:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_246534
L_246532:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_246529
.p2align 0x4
.long 0x3C78
error_5:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x30(%rbp)
error_4:
	movq %r15,0xF8(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0xA460)(%rip),%r15
	movq %r15,0x100(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xF8,%rbp
	leaq (L_246522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
.long 0x3C69
L_246494:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x145C,%r14
	jne L_246366
L_246495:
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r14
	jne L_246284
L_246497:
	cmpl $0x0,%ecx
	jl L_246317
L_246498:
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_2824:
	cmpl %ecx,%ebx
	jnl L_481307
L_246552:
	movslq %ebx,%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x38(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r13),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r10)
	je L_481304
L_246553:
	incl %ebx
	jmp loop_2824
.p2align 0x4
L_481304:
L_246554:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246555
L_246564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246565
.p2align 0x4
.long 0x3C76
L_246565:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_246555:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_481305
L_246556:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	jmp L_246493
.p2align 0x4
L_481305:
L_246557:
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_246558
.p2align 0x4
L_481307:
L_246499:
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_246500:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481309
.p2align 0x4,,0x7
L_246501:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_481308
L_246502:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_246500
.p2align 0x4
L_481308:
L_246503:
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq $0x1,0x38(%rbp)
L_246504:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_246505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481309:
L_246550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246551
.p2align 0x4
.long 0x3C74
L_246551:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_246501
.p2align 0x4
.long 0x3C5F
L_246418:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_246292
L_246419:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x100(%rbp)
	movq %r15,0x108(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x118(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_246420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x742
L_246330:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	incl 0x24(%rbp)
	jmp loop_2818
.p2align 0x4
.long 0x3C8E
not_57:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x44(%rbp)
	testl %r15d,%r15d
	jnz L_246777
L_246774:
	movq 0x30(%rbp),%r15
	movb $0x1,0x0(%r15)
	movl $0x1,%ecx
	jmp L_246775
.p2align 0x4
.long 0xAA6
L_246733:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	incl 0x1C(%rbp)
	jmp loop_2827
.p2align 0x4
.long 0x3C80
L_246679:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	incl 0x1C(%rbp)
	jmp loop_2825
.p2align 0x4
.long 0x3C7C
L_246628:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246629
L_246632:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246633
.p2align 0x4
.long 0x3C7D
L_246633:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_246629:
	movq $0x2679,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_246534
L_246630:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_246623
.p2align 0x4
.long 0x3C6D
L_246522:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_481317
L_246523:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_246466
.p2align 0x4
L_481317:
L_246524:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_246534
L_246525:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	jmp L_246526
.p2align 0x4
.long 0x3C6A
L_246505:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246506
L_246548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246549
.p2align 0x4
.long 0x3C73
L_246549:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_246506:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_481319
L_246507:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_246504
.p2align 0x4
L_481319:
L_246508:
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_246509:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481321
.p2align 0x4,,0x7
L_246510:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_481320
L_246511:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_246509
.p2align 0x4
L_481320:
L_246512:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_246513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481321:
L_246546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246547
.p2align 0x4
.long 0x3C73
L_246547:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_246510
.p2align 0x4
.long 0x3C60
L_246420:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246421
L_246424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_246425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246425
.p2align 0x4
.long 0x3C61
L_246425:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_246421:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_246412
L_246423:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3C6B
L_246513:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_246514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3C6C
L_246514:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246515
L_246544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246545
.p2align 0x4
.long 0x3C72
L_246545:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_246515:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_246516:
	addl 0x0(%r15),%ecx
	movl %ecx,0x14(%rbp)
	jo L_246292
L_246517:
	cmpq $0x1,%r14
	je L_481325
L_246518:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_246516
.p2align 0x4
L_481325:
L_246519:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246520
L_246542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_246543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246543
.p2align 0x4
.long 0x3C71
L_246543:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_246520:
	movl 0x14(%rbp),%r15d
	testl %r15d,%r15d
	jz L_481326
L_246521:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp error_4
.p2align 0x4
L_481326:
L_246541:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp error_4
.text
.p2align 0x4
.globl extendVid_0
.hidden extendVid_0
extendVid_0:
L_246893:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_246947
L_246894:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481344
L_246895:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x40(%rbp)
	movq $0x110D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x48(%rbp)
	addq $0x18,%r12
	movzbl 0x8(%rbp),%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x0(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x18(%rbp),%r11
	movq 0x50(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x50(%rbp)
	movq 0x38(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x58(%rbp)
	movq 0x0(%r9),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x8(%r11),%r13
	movq %r13,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_481343
L_246897:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_481342
L_246898:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x18(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_246900:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_246901
L_246936:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_246901
L_246937:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x60(%rbp)
	je L_481336
L_246901:
	movl 0x18(%rbp),%r13d
	incl %r13d
	movl %r13d,0x1C(%rbp)
	jo L_481335
L_246903:
	cmpq $0x1,%r15
	je L_481330
L_246904:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x18(%rbp)
	jmp L_246900
.p2align 0x4
L_481330:
L_246905:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246906
L_246934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_246935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246935
.p2align 0x4
.long 0x7EE
L_246935:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_246906:
	movl 0x1C(%rbp),%ecx
L_246907:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_481333
L_246909:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_246911
L_246933:
	movl %ecx,0x0(%r15)
L_246911:
	movq $0x1133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x112F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x112B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_246912:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je new_10
L_246913:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0x50(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	jne new_39
L_246919:
	movq 0x38(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_481331
L_246920:
	movq 0x68(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10598)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xF260)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA438)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_246921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_481331:
L_246927:
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_246928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
new_39:
new_10:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2683,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x10(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_246915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_481333:
L_246908:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481335:
L_246902:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481336:
L_246939:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246940
L_246944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_246945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246945
.p2align 0x4
.long 0x3CA3
L_246945:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_246940:
	movl 0x18(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_246908
L_246941:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_481337
L_246942:
	movq 0x20(%rbp),%r15
	jmp L_246912
.p2align 0x4
L_481337:
L_246943:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x18(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x20(%rbp),%r15
	jmp L_246912
.p2align 0x4
L_481342:
L_246946:
	xorl %ecx,%ecx
	jmp L_246907
.p2align 0x4
L_481343:
L_246896:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481344:
L_246947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_246948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246948
.p2align 0x4
.long 0x659
L_246948:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_246895
.p2align 0x4
.long 0x6DA
L_246921:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_246922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CA1
L_246928:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246929
L_246930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_246931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246931
.p2align 0x4
.long 0x3CA2
L_246931:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_246929:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1129,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x2685,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3C9F
L_246915:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246916
L_246917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_246918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246918
.p2align 0x4
.long 0x3CA0
L_246918:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_246916:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1129,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x2685,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x6DA
L_246922:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_246902
L_246923:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x8,%rbp
	leaq (L_246924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x1
L_246924:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_481349
L_246925:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481349:
L_246926:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl elaborateScheme_0
.hidden elaborateScheme_0
elaborateScheme_0:
L_246949:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_247063
L_246950:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481350
L_246951:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0x30(%r13),%r11
	movq 0x28(%r13),%r10
	movq 0x20(%r13),%r9
	movq 0x18(%r13),%r8
	movq 0x10(%r13),%rsp
	movq 0x8(%r13),%rsi
	movq 0x0(%r13),%rdi
	movq $0xB4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xB4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rdi,0x0(%r14)
	movq %rsi,0x8(%r14)
	movq %rsp,0x10(%r14)
	movq %r8,0x18(%r14)
	movq %r9,0x20(%r14)
	movq %r10,0x28(%r14)
	movq %r11,0x30(%r14)
	addq $0x50,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x38(%r14)
	movq %r15,0x40(%r14)
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_246952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3791
.p2align 0x4
L_481350:
L_247063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_247064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247064
.p2align 0x4
.long 0x4AE
L_247064:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_246951
.p2align 0x4
.long 0xB9E
L_246952:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r13
	je L_481359
L_246953:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_246954:
	incl %ecx
	jo L_481358
L_246956:
	cmpq $0x1,%r15
	je L_481352
L_246957:
	movq 0x8(%r15),%r15
	jmp L_246954
.p2align 0x4
L_481352:
L_246958:
L_246959:
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	testq %rdx,%rdx
	jz L_481357
L_246960:
	cmpq $0x7FFFFFFF,%rdx
	ja L_481356
L_246961:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1497,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_246962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_246962
.p2align 0x4
.long 0xA44
L_246962:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_246963:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2837:
	cmpq 0x30(%rbp),%r15
	jnl L_481354
L_247057:
	cmpq $0x1,%r14
	je L_481353
L_247058:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2837
.p2align 0x4
L_481353:
L_247059:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481354:
L_246964:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246965
L_247055:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_247056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247056
.p2align 0x4
.long 0xC48
L_247056:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_246965:
	movq 0x40(%rbp),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x3225,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_246966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp keepAllMapi_0
.p2align 0x4
L_481356:
L_247033:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481357:
L_247061:
	movq (globalObjptr+0xD20)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_246963
.p2align 0x4
L_481358:
L_246955:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481359:
L_247062:
	xorl %ecx,%ecx
	jmp L_246959
.p2align 0x4
.long 0x95D
L_246966:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246967
L_247053:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_247054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247054
.p2align 0x4
.long 0x70E
L_247054:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_246967:
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x38(%rbp)
	movslq %r11d,%r15
	cmpq %r13,%r15
	jne L_246969
L_246970:
	testl %r11d,%r11d
	jz L_481362
L_246971:
	movq 0x40(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_481361
L_246974:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r10
	movq %r10,0x48(%rbp)
	cmpl $0x1,%r11d
	jg L_481360
L_246975:
	movq (globalObjptr+0xA058)(%rip),%r15
L_246976:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA18)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x105A0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_246977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_481360:
L_247051:
	movq (globalObjptr+0xE7E8)(%rip),%r15
	jmp L_246976
.p2align 0x4
L_481361:
L_246973:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481362:
L_247006:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %r14,%rdx
	jne L_246969
L_247008:
	testq %rdx,%rdx
	jz L_481373
L_247009:
	cmpq $0x7FFFFFFF,%rdx
	ja L_247033
L_247010:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1497,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_247011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247011
.p2align 0x4
.long 0x17B1
L_247011:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,%r15
L_247012:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2838:
	cmpq 0x20(%rbp),%r14
	jnl L_481371
L_247014:
	movl %r14d,%ebx
	movslq %ebx,%r13
	movq 0x10(%rbp),%r10
	movq 0x0(%r10,%r13,8),%r9
	movq 0x40(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r11
	movl %r11d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r11
	jne L_481370
L_247016:
	xorl %ebx,%ebx
	movq %r9,%r13
.p2align 0x4,,0x7
loop_2839:
	cmpl %ebx,%ecx
	je L_247029
L_247017:
	movslq %ebx,%r10
	cmpq %r11,%r10
	jnb L_246973
L_247019:
	movq 0x40(%rbp),%rsp
	movq 0x0(%rsp,%r10,8),%rsi
	movq 0x8(%r13),%rsp
	movq 0x10(%rsp),%rdi
	movq 0x8(%rsi),%rsp
	movq 0x10(%rsp),%rdx
	cmpq %rdi,%rdx
	je L_481367
L_247020:
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r9
	cmpq %r9,0xFFFFFFFFFFFFFFF0(%rdx)
	jne L_481366
L_247024:
	xorq %r8,%r8
	xchgq %rdi,%r15
	xchgq %rdx,%r14
	movq %rsi,%r10
	movq %rdi,(localObjptr+0x0)(%rip)
	movq %rdx,(localWord64+0x0)(%rip)
.p2align 0x4,,0x7
vectorEqualLoop_193:
	cmpq %r9,%r8
	je L_481365
L_247025:
	movb 0x0(%r14,%r8,1),%spl
	cmpb %spl,0x0(%r15,%r8,1)
	jne L_481363
L_247027:
	incq %r8
	jmp vectorEqualLoop_193
.p2align 0x4
L_481363:
L_247022:
	incl %ebx
	jo L_246955
L_247023:
	movq (localObjptr+0x0)(%rip),%r15
	movq (localWord64+0x0)(%rip),%r14
	jmp loop_2839
.p2align 0x4
L_481365:
L_247028:
	movq %r10,%r13
	movq (localObjptr+0x0)(%rip),%r15
	movq (localWord64+0x0)(%rip),%r14
L_247029:
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2838
.p2align 0x4
L_481366:
	movq %r15,(localObjptr+0x0)(%rip)
	movq %r14,(localWord64+0x0)(%rip)
	jmp L_247022
.p2align 0x4
L_481367:
L_247030:
	movq %rsi,%r13
	jmp L_247029
.p2align 0x4
L_481370:
L_246969:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481371:
L_247013:
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481373:
L_247034:
	movq (globalObjptr+0x4E28)(%rip),%r15
	jmp L_247012
.p2align 0x4
.long 0x704
L_246977:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_246978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x704
L_246978:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246979
L_247049:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_247050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247050
.p2align 0x4
.long 0x1A14
L_247050:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_246979:
	movq $0x3C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_246980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0xA84
L_246980:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246981
L_247047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_247048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247048
.p2align 0x4
.long 0x98C
L_247048:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_246981:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_481378
L_246982:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_246983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481378:
L_247046:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_246991:
	testl %ecx,%ecx
	jz L_481384
L_246992:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_246993:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_246994:
	addl 0x0(%r14),%ecx
	movl %ecx,0x50(%rbp)
	jo L_246955
L_246995:
	cmpq $0x1,%r15
	je L_481379
L_246996:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_246994
.p2align 0x4
L_481379:
L_246997:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246998
L_247039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_247040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247040
.p2align 0x4
.long 0x3CA6
L_247040:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_246998:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481381
L_246999:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_247000:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_246955
L_247001:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_247002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_481381:
L_247038:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_247000
.p2align 0x4
L_481384:
L_247041:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_246993
.p2align 0x4
.long 0x1A01
L_246983:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_246984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3CA5
L_247002:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247003
L_247036:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_247037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247037
.p2align 0x4
.long 0x86D
L_247037:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_247003:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_481386
L_247004:
	movq $0xB49,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_247005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3790
.p2align 0x4
L_481386:
L_247035:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3CA4
L_246984:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246985
L_247044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_247045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247045
.p2align 0x4
.long 0x3CA7
L_247045:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_246985:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_246986:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_246955
L_246987:
	cmpq $0x1,%r14
	je L_481388
L_246988:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_246986
.p2align 0x4
L_481388:
L_246989:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_246990
L_247042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_247043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247043
.p2align 0x4
.long 0xE02
L_247043:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_246990:
	movq 0x58(%rbp),%r15
	movl 0x38(%rbp),%ecx
	jmp L_246991
.p2align 0x4
.long 0x1A69
L_247005:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_247006
.text
.p2align 0x4
.globl extendTycon_1
.hidden extendTycon_1
extendTycon_1:
L_247065:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_247119
L_247066:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481406
L_247067:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x10(%rbp),%r11
	movq 0x50(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x38(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x0(%r9),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r11),%r13
	movq %r13,0x60(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_481405
L_247069:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_481404
L_247070:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x10(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_247072:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_247073
L_247108:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_247073
L_247109:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x50(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_481398
L_247073:
	movl 0x10(%rbp),%r13d
	incl %r13d
	movl %r13d,0x14(%rbp)
	jo L_481397
L_247075:
	cmpq $0x1,%r15
	je L_481392
L_247076:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x10(%rbp)
	jmp L_247072
.p2align 0x4
L_481392:
L_247077:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247078
L_247106:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_247107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247107
.p2align 0x4
.long 0xF3E
L_247107:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_247078:
	movl 0x14(%rbp),%ecx
L_247079:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_481395
L_247081:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_247083
L_247105:
	movl %ecx,0x0(%r15)
L_247083:
	movq $0x1133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x112F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x112B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_247084:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je new_11
L_247085:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0x40(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	jne new_41
L_247091:
	movq 0x30(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_481393
L_247092:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10598)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA440)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA438)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_247093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_481393:
L_247099:
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_247100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
new_41:
new_11:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x267F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x10(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_247087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_481395:
L_247080:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481397:
L_247074:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481398:
L_247111:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247112
L_247116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_247117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247117
.p2align 0x4
.long 0x1DA9
L_247117:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_247112:
	movl 0x10(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_247080
L_247113:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_481399
L_247114:
	movq 0x18(%rbp),%r15
	jmp L_247084
.p2align 0x4
L_481399:
L_247115:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x10(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x18(%rbp),%r15
	jmp L_247084
.p2align 0x4
L_481404:
L_247118:
	xorl %ecx,%ecx
	jmp L_247079
.p2align 0x4
L_481405:
L_247068:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481406:
L_247119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_247120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247120
.p2align 0x4
.long 0x4AE
L_247120:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_247067
.p2align 0x4
.long 0x7CB
L_247093:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_247094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xE06
L_247100:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247101
L_247102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_247103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247103
.p2align 0x4
.long 0xE07
L_247103:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_247101:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x112D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x2681,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1369
L_247087:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247088
L_247089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_247090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247090
.p2align 0x4
.long 0x335D
L_247090:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_247088:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x112D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x2681,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7CB
L_247094:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_247074
L_247095:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x8,%rbp
	leaq (L_247096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x1
L_247096:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_481411
L_247097:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481411:
L_247098:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl share_0
.hidden share_0
share_0:
L_247121:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_247122
L_247258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_247259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247259
.p2align 0x4
.long 0x1026
L_247259:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_247122:
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_247123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x1025
L_247123:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_247124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x102A
L_247124:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	cmpq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	je L_481413
L_247125:
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_247126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_481413:
L_247257:
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp ensureFlexible_0
.p2align 0x4
.long 0x1025
L_247126:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_481414
L_247128:
	movq 0x8(%r14),%r15
	movq 0x28(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_247129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_481414:
L_247127:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x102A
L_247129:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_247127
L_247130:
	movq 0x8(%r14),%r15
	movq 0x28(%r15),%r13
	movq %r13,0x48(%rbp)
L_247131:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_247132
L_247251:
	andq $0x3,%r13
	jnz L_481415
L_247252:
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_247253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_481415:
L_247132:
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_247133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x3CAD
L_247253:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_247254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x57F
L_247133:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_247127
L_247134:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_247135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x102A
L_247254:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r15,0x40(%rbp)
	jne L_247132
L_247256:
	jmp loop_3942
.p2align 0x4
.long 0x3CA8
L_247135:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_247127
L_247136:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x50(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r11
	cmpq %r11,%r14
	jne L_247138
L_247139:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x58(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x60(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_247138
L_247141:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
both_0:
	cmpl 0x24(%rbp),%ecx
	jnl L_247143
L_247201:
	cmpl 0x60(%rbp),%ebx
	jnl L_247143
L_247203:
	movslq %ecx,%r15
	cmpq 0x50(%rbp),%r15
	jnb L_247154
L_247205:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r14
	movslq %ebx,%r15
	cmpq 0x58(%rbp),%r15
	jnb L_247154
L_247207:
	movl %ebx,0x64(%rbp)
	movl %ecx,0x68(%rbp)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
loop_2842:
	movq 0x0(%r15),%rsp
	movq %rsp,0x70(%rbp)
	movq 0x8(%r15),%rsp
	movq %rsp,0x78(%rbp)
	movq 0x0(%r14),%rdi
	movq %rdi,0x80(%rbp)
	movq 0x8(%rsp),%rdi
	movq 0x10(%rdi),%rsi
	movq 0x8(%r14),%rsp
	movq 0x8(%rsp),%rdi
	movq 0x10(%rdi),%r8
	movq 0xFFFFFFFFFFFFFFF0(%rsi),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r9
	xorq %r11,%r11
	xorq %r13,%r13
.p2align 0x4,,0x7
loop_2843:
	cmpq %r10,%r13
	jl L_481459
L_247208:
	movl $0x1,%ecx
L_247209:
	cmpq %r9,%r11
	jnl L_247211
L_247236:
	testl %ecx,%ecx
	jnz L_247242
L_247237:
	movb 0x0(%rsi,%r13,1),%spl
	movb 0x0(%r8,%r11,1),%dil
	cmpb %dil,%spl
	jb L_481453
L_247238:
	cmpb %spl,%dil
	jb L_481420
L_247239:
	incq %r13
	incq %r11
	jmp loop_2843
.p2align 0x4
L_481420:
L_247211:
	cmpq %r8,%rsi
	je L_481451
L_247212:
	cmpq %r10,%r9
	jne L_247214
L_247220:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_195:
	cmpq %r10,%r14
	je L_481448
L_247221:
	movb 0x0(%rsi,%r14,1),%r13b
	cmpb %r13b,0x0(%r8,%r14,1)
	jne L_481421
L_247223:
	incq %r14
	jmp vectorEqualLoop_195
.p2align 0x4
L_481421:
L_247214:
	movl 0x64(%rbp),%r13d
	incl %r13d
	jo L_247165
L_247215:
	cmpl 0x60(%rbp),%r13d
	jnl L_481423
L_247217:
	movslq %r13d,%r14
	cmpq 0x58(%rbp),%r14
	jnb L_481422
L_247219:
	movl %r13d,0x64(%rbp)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,%r14
	jmp loop_2842
.p2align 0x4
L_481422:
L_247154:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481423:
L_247143:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x38(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_247138
L_247145:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_481445
L_247147:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
both_1:
	cmpl 0x24(%rbp),%ecx
	jnl L_247149
L_247150:
	cmpl 0x48(%rbp),%ebx
	jnl L_247149
L_247152:
	movslq %ecx,%r15
	cmpq 0x38(%rbp),%r15
	jnb L_247154
L_247155:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r14
	movslq %ebx,%r15
	cmpq 0x40(%rbp),%r15
	jnb L_247154
L_247157:
	movl %ebx,0x4C(%rbp)
	movl %ecx,0x50(%rbp)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
loop_2840:
	movq 0x0(%r15),%rsp
	movq %rsp,0x58(%rbp)
	movq 0x8(%r15),%rsp
	movq %rsp,0x60(%rbp)
	movq 0x0(%r14),%rdi
	movq %rdi,0x68(%rbp)
	movq 0x8(%rsp),%rdi
	movq 0x10(%rdi),%rsi
	movq 0x8(%r14),%rsp
	movq 0x8(%rsp),%rdi
	movq 0x10(%rdi),%r8
	movq 0xFFFFFFFFFFFFFFF0(%rsi),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r9
	xorq %r11,%r11
	xorq %r13,%r13
.p2align 0x4,,0x7
loop_2841:
	cmpq %r10,%r13
	jl L_481440
L_247158:
	movl $0x1,%ecx
L_247159:
	cmpq %r9,%r11
	jnl L_247161
L_247187:
	testl %ecx,%ecx
	jnz L_247193
L_247188:
	movb 0x0(%rsi,%r13,1),%spl
	movb 0x0(%r8,%r11,1),%dil
	cmpb %dil,%spl
	jb L_481434
L_247189:
	cmpb %spl,%dil
	jb L_481424
L_247190:
	incq %r13
	incq %r11
	jmp loop_2841
.p2align 0x4
L_481424:
L_247161:
	cmpq %r8,%rsi
	je L_481432
L_247162:
	cmpq %r10,%r9
	jne L_247164
L_247171:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_194:
	cmpq %r10,%r14
	je L_481429
L_247172:
	movb 0x0(%r8,%r14,1),%r13b
	cmpb %r13b,0x0(%rsi,%r14,1)
	jne L_481425
L_247174:
	incq %r14
	jmp vectorEqualLoop_194
.p2align 0x4
L_481425:
L_247164:
	movl 0x4C(%rbp),%r13d
	incl %r13d
	jo L_481428
L_247166:
	cmpl 0x48(%rbp),%r13d
	jnl L_481427
L_247168:
	movslq %r13d,%r14
	cmpq 0x40(%rbp),%r14
	jnb L_247154
L_247170:
	movl %r13d,0x4C(%rbp)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,%r14
	jmp loop_2840
.p2align 0x4
L_481427:
L_247149:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481428:
L_247165:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481429:
L_247175:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247177
L_247181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_247182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247182
.p2align 0x4
.long 0x3CAA
L_247182:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_247177:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x409F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x20,%r12
	movq 0x60(%rbp),%r9
	movq %r9,0x0(%r10)
	movq 0x0(%rbp),%r8
	movq %r8,0x8(%r10)
	movq %r15,0x10(%r10)
	movq $0x180D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x70(%rbp)
	movq $0x409F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r9,0x0(%r15)
	movq %r8,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x180D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x20,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x68(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_247178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2009
.p2align 0x4
L_481432:
L_247183:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247177
L_247185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_247186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247186
.p2align 0x4
.long 0x3CAA
L_247186:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_247177
.p2align 0x4
L_481434:
L_247193:
	movl 0x50(%rbp),%r13d
	incl %r13d
	jo L_247165
L_247194:
	cmpl 0x24(%rbp),%r13d
	jnl L_247149
L_247196:
	movslq %r13d,%r15
	cmpq 0x38(%rbp),%r15
	jnb L_247154
L_247198:
	movl %r13d,0x50(%rbp)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,%r15
	jmp loop_2840
.p2align 0x4
L_481440:
L_247200:
	xorl %ecx,%ecx
	jmp L_247159
.p2align 0x4
L_481445:
L_247138:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481448:
L_247224:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247226
L_247230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_247231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247231
.p2align 0x4
.long 0x3CAC
L_247231:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_247226:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0x78,%rbp
	leaq (L_247227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp share_0
.p2align 0x4
L_481451:
L_247232:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247226
L_247234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_247235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247235
.p2align 0x4
.long 0x3CAC
L_247235:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_247226
.p2align 0x4
L_481453:
L_247242:
	movl 0x68(%rbp),%r13d
	incl %r13d
	jo L_247165
L_247243:
	cmpl 0x24(%rbp),%r13d
	jnl L_247143
L_247245:
	movslq %r13d,%r15
	cmpq 0x50(%rbp),%r15
	jnb L_247154
L_247247:
	movl %r13d,0x68(%rbp)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,%r15
	jmp loop_2842
.p2align 0x4
L_481459:
L_247249:
	xorl %ecx,%ecx
	jmp L_247209
.p2align 0x4
.long 0x3CA9
L_247178:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x50(%rbp),%ecx
	incl %ecx
	jo L_247165
L_247179:
	movl 0x4C(%rbp),%ebx
	incl %ebx
	jo L_247165
L_247180:
	jmp both_1
.p2align 0x4
.long 0x3CAB
L_247227:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x68(%rbp),%ecx
	incl %ecx
	jo L_247165
L_247228:
	movl 0x64(%rbp),%ebx
	incl %ebx
	jo L_247165
L_247229:
	jmp both_0
.text
.p2align 0x4
.globl x_2009
.hidden x_2009
x_2009:
L_247260:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_247469
L_247261:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481476
L_247262:
	movq 0x18(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r14),%r15
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	andq $0x1,%r14
	jnz L_481473
L_247263:
	andq $0x1,%r11
	jnz L_481472
L_247401:
	movq 0x38(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x204E,%r14
	je L_481471
L_247464:
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq $0x2A73,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq %r13,%r14
L_247403:
	movq %r14,0x68(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x105B8)(%rip),%r15
	movq %r15,0x78(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x68,%rbp
	leaq (L_247404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getFlex_0
.p2align 0x4
L_481471:
L_247402:
	movq 0x0(%r13),%r14
	movq $0x2A75,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_247403
.p2align 0x4
L_481472:
L_247264:
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_247265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481473:
L_247465:
	movq 0x60(%rbp),%r14
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_247264
L_247466:
	shrq $0x1,%r11
	movl %r11d,%r14d
	cmpl %r14d,%r13d
	jne L_247264
	jmp L_247401
.p2align 0x4
L_481476:
L_247469:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_247470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247470
.p2align 0x4
.long 0x4E7
L_247470:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_247262
.p2align 0x4
.long 0x3CC0
L_247404:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247405
L_247462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_247463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247463
.p2align 0x4
.long 0x3CC4
L_247463:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_247405:
	movq 0x48(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x204E,%r15
	je L_481478
L_247461:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x2A73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq %r14,%r15
L_247407:
	movq %r15,0x18(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x105B8)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	addq $0x18,%rbp
	leaq (L_247408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getFlex_0
.p2align 0x4
L_481478:
L_247406:
	movq 0x0(%r14),%r15
	movq $0x2A75,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_247407
.p2align 0x4
.long 0x3CAE
L_247265:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247266
L_247398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_247399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247399
.p2align 0x4
.long 0x3CBB
L_247399:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_247266:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x204E,%r14
	je L_481495
L_247354:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x70(%rbp)
	cmpq $0x1,%r14
	je L_481494
L_247355:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_247356:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481493
.p2align 0x4,,0x7
L_247357:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_481480
L_247358:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_247356
.p2align 0x4
L_481480:
L_247360:
	movq $0x26AB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x26AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_247361:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481492
.p2align 0x4,,0x7
L_247362:
	movq $0x26AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_481481
L_247363:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_247361
.p2align 0x4
L_481481:
L_247364:
	movq 0x70(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_247365:
	cmpq $0x1,%r15
	je L_247375
L_247366:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
L_247367:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481490
.p2align 0x4,,0x7
L_247368:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_481482
L_247369:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_247367
.p2align 0x4
L_481482:
L_247370:
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
L_247371:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481489
.p2align 0x4,,0x7
L_247372:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_481483
L_247373:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_247371
.p2align 0x4
L_481483:
L_247374:
	movq %r15,0x58(%rbp)
L_247375:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_481484
L_247376:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_247365
.p2align 0x4
L_481484:
L_247377:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247378
L_247386:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_247387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247387
.p2align 0x4
.long 0x3CBC
L_247387:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_247378:
	movq $0x143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	cmpq $0x1,%r14
	je L_481487
L_247379:
	movq 0x0(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r13),%r14
	cmpq $0x1,%r10
	je L_247382
L_247380:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r14
	je L_481485
L_247381:
	movq 0x8(%r14),%r10
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r10,0x8(%r14)
	addq $0x18,%r12
L_247382:
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_247268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
L_481485:
L_247383:
	movq %r10,%r14
	jmp L_247382
.p2align 0x4
L_481487:
L_247385:
	movq 0x0(%r13),%r11
	xchgq %r11,%r14
	jmp L_247382
.p2align 0x4
L_481489:
L_247388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_247389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247389
.p2align 0x4
.long 0x3CBD
L_247389:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_247372
.p2align 0x4
L_481490:
L_247390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_247391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247391
.p2align 0x4
.long 0x3CBE
L_247391:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_247368
.p2align 0x4
L_481492:
L_247393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_247394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247394
.p2align 0x4
.long 0x3CBF
L_247394:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_247362
.p2align 0x4
L_481493:
L_247395:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_247396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247396
.p2align 0x4
.long 0x3CBE
L_247396:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_247357
.p2align 0x4
L_481494:
L_247397:
	movq $0x1,%r15
	jmp L_247360
.p2align 0x4
L_481495:
L_247267:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_247268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
.long 0x521
L_247408:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
L_247409:
	movq 0x8(%rbp),%r15
	andq $0x3,%r15
	jz L_481497
L_247410:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481497:
L_247412:
	movq 0x10(%rbp),%r15
	andq $0x3,%r15
	jz L_481498
L_247413:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481498:
L_247414:
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_247415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
.long 0x3CAF
L_247268:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x80(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247269
L_247352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_247353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247353
.p2align 0x4
.long 0x3CBB
L_247353:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_247269:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x10568)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_247270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E5
L_247415:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144A,%r15
	jne L_481500
L_247417:
	movq 0x8(%r14),%r15
	movq 0x18(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movl 0x8(%r15),%r13d
	movl %r13d,0x28(%rbp)
	movl 0xC(%r15),%r13d
	movl %r13d,0x2C(%rbp)
	movl 0x10(%r15),%r13d
	movl %r13d,0x30(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_247418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_481500:
L_247416:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3CB0
L_247270:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	andq $0x1,%r15
	jnz L_481501
L_247271:
	movq (globalObjptr+0x10570)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_247272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481501:
L_247350:
	movq 0x60(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_247351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x744
L_247418:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144A,%r15
	jne L_247416
L_247419:
	movq 0x8(%r14),%r15
	movl 0xC(%r15),%r13d
	movl %r13d,0x34(%rbp)
	movl 0x10(%r15),%r13d
	movl %r13d,0x40(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_247420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
.long 0x3CB1
L_247272:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x105A8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_247273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CB1
L_247351:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_247272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CC1
L_247420:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_247421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
.long 0x3CB2
L_247273:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247274
L_247348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_247349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247349
.p2align 0x4
.long 0x1351
L_247349:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_247274:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x204E,%r14
	je L_481518
L_247304:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x78(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	cmpq $0x1,%r14
	je L_481517
L_247305:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x88(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_247306:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481516
.p2align 0x4,,0x7
L_247307:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_481503
L_247308:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_247306
.p2align 0x4
L_481503:
L_247310:
	movq $0x26AB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x26AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_247311:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481515
.p2align 0x4,,0x7
L_247312:
	movq $0x26AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_481504
L_247313:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_247311
.p2align 0x4
L_481504:
L_247314:
	movq 0x80(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x78(%rbp),%r15
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_247315:
	cmpq $0x1,%r15
	je L_247325
L_247316:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x1,0x90(%rbp)
L_247317:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481513
.p2align 0x4,,0x7
L_247318:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_481505
L_247319:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_247317
.p2align 0x4
L_481505:
L_247320:
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
L_247321:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481512
.p2align 0x4,,0x7
L_247322:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_481506
L_247323:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_247321
.p2align 0x4
L_481506:
L_247324:
	movq %r15,0x78(%rbp)
L_247325:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_481507
L_247326:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_247315
.p2align 0x4
L_481507:
L_247327:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247328
L_247336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_247337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247337
.p2align 0x4
.long 0x3CB8
L_247337:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_247328:
	movq $0x143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r15)
	cmpq $0x1,%r14
	je L_481510
L_247329:
	movq 0x0(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r13),%r14
	cmpq $0x1,%r10
	je L_247332
L_247330:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r14
	je L_481508
L_247331:
	movq 0x8(%r14),%r10
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r10,0x8(%r14)
	addq $0x18,%r12
L_247332:
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_247276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
L_481508:
L_247333:
	movq %r10,%r14
	jmp L_247332
.p2align 0x4
L_481510:
L_247335:
	movq 0x0(%r13),%r11
	xchgq %r11,%r14
	jmp L_247332
.p2align 0x4
L_481512:
L_247338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_247339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247339
.p2align 0x4
.long 0x3CB9
L_247339:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_247322
.p2align 0x4
L_481513:
L_247340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_247341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247341
.p2align 0x4
.long 0x1365
L_247341:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_247318
.p2align 0x4
L_481515:
L_247343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_247344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247344
.p2align 0x4
.long 0x3CBA
L_247344:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_247312
.p2align 0x4
L_481516:
L_247345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_247346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247346
.p2align 0x4
.long 0x1365
L_247346:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_247307
.p2align 0x4
L_481517:
L_247347:
	movq $0x1,%r15
	jmp L_247310
.p2align 0x4
L_481518:
L_247275:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_247276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
.long 0x3CC2
L_247421:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247422
L_247459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_247460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247460
.p2align 0x4
.long 0x3CC3
L_247460:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_247422:
	movq 0x50(%rbp),%r15
	movq 0x10(%rbp),%r14
	cmpq %r14,%r15
	je L_247429
L_247423:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x144A,%r11
	jne L_247424
L_247425:
	movl 0x0(%r13),%r11d
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x144A,%r10
	jne L_247424
L_247426:
	movl 0x0(%r13),%r10d
	cmpl %r10d,%r11d
	jl L_481531
L_247427:
	movq $0x2897,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r13,0x0(%r14)
	cmpl %r10d,%r11d
	jne L_247429
L_247453:
	movq 0x0(%r15),%r14
	movq %r14,%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x144A,%r10
	jne L_481529
L_247454:
	movl 0x0(%r13),%r11d
	incl %r11d
	jo L_481528
L_247455:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144A,%r13
	jne L_481527
L_247456:
	movq 0x8(%r14),%r13
	movq $0x2895,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r14,0x0(%r15)
L_247429:
	movq 0x48(%rbp),%r15
	movb 0x0(%r15),%r14b
	movq 0x38(%rbp),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x0,%r15b
	je L_481525
	cmpb $0x2,%r15b
	je L_247448
L_247430:
	cmpb $0x0,%r14b
	je L_481523
	cmpb $0x2,%r14b
	je L_481522
L_247431:
	movb $0x1,%dl
L_247432:
	movq $0xFF7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movzbl %dl,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xFF9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movl 0x40(%rbp),%ecx
	cmpl %ecx,0x30(%rbp)
	jl L_481521
L_247433:
L_247434:
	movq $0xFFB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq (globalObjptr+0x4D50)(%rip),%r11
	movq %r11,0x0(%r13)
	movl 0x2C(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_481520
L_247435:
	movl 0x34(%rbp),%ebx
L_247436:
	movq $0xFFD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x10(%rbp)
	movl %ebx,0xC(%r11)
	movl %ecx,0x10(%r11)
	movq %r13,0x20(%r11)
	movq %r15,0x28(%r11)
	movq %r14,0x30(%r11)
	addq $0x40,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r11)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x8(%r11)
	movl $0x0,0x14(%r11)
	movq 0x18(%rbp),%r15
	movq %r15,0x18(%r11)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_247437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_481520:
L_247443:
	movl $0x1,%ebx
	jmp L_247436
.p2align 0x4
L_481521:
L_247444:
	movl 0x30(%rbp),%r13d
	xchgl %r13d,%ecx
	jmp L_247434
.p2align 0x4
L_481522:
L_247448:
	movb $0x2,%dl
	jmp L_247432
.p2align 0x4
L_481523:
L_247446:
	xorb %dl,%dl
	jmp L_247432
.p2align 0x4
L_481525:
L_247449:
	cmpb $0x2,%r14b
	je L_247448
	jmp L_247446
.p2align 0x4
L_481527:
L_247439:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481528:
L_247284:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481529:
L_247424:
	movq (globalObjptr+0x1688)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481531:
L_247457:
	movq $0x2897,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_247429
.p2align 0x4
.long 0x3CB3
L_247276:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl 0x80(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247277
L_247302:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_247303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247303
.p2align 0x4
.long 0x3CB7
L_247303:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_247277:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x18,%r12
	movl 0x70(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x10568)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_247278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2B
L_247437:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247438
L_247441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_247442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247442
.p2align 0x4
.long 0x2C
L_247442:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_247438:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144A,%r13
	jne L_247439
L_247440:
	movl 0x0(%r14),%r13d
	movq $0x2895,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3CB4
L_247278:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x68(%rbp),%r15
	andq $0x1,%r15
	jnz L_481539
L_247279:
	movq (globalObjptr+0x10570)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_247280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481539:
L_247300:
	movq 0x68(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x88(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_247301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x3CB5
L_247280:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x105B0)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_247281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CB5
L_247301:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_247280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3792
L_247281:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247282
L_247298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_247299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247299
.p2align 0x4
.long 0x7E5
L_247299:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_247282:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_247283:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_247284
L_247285:
	cmpq $0x1,%r14
	je L_481540
L_247286:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_247283
.p2align 0x4
L_481540:
L_247287:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247288
L_247296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_247297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247297
.p2align 0x4
.long 0x3CB6
L_247297:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_247288:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481542
L_247289:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
L_247290:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_247284
L_247291:
	movl %r13d,0x0(%r15)
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x8,%rbp
	leaq (L_247292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_481542:
L_247295:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_247290
.p2align 0x4
.long 0x1
L_247292:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_481546
L_247293:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481546:
L_247294:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl getFlex_0
.hidden getFlex_0
getFlex_0:
L_247471:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_247472
L_247618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_247619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247619
.p2align 0x4
.long 0xFCF
L_247619:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_247472:
	movq 0x28(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x105C,%r15
	je L_481552
	cmpq $0x105D,%r15
	je L_481550
L_247473:
	movq 0x0(%r13),%r13
	movq %r13,%r15
loopTycon_0:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1054,%r14
	je L_481547
L_247571:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
L_247572:
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_247573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_481547:
L_247474:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
L_247475:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481548
L_247476:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_247477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setTyconNames_0
.p2align 0x4
L_481548:
L_247478:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_481549
L_247568:
	movq %r11,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_247569+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_481549:
L_247479:
L_247480:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (toString_352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481550:
L_247617:
	movq 0x8(%r13),%r13
	movq %r13,%r15
L_247609:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1054,%r14
	je L_481551
L_247611:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp L_247572
.p2align 0x4
L_481551:
L_247610:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	jmp L_247475
.p2align 0x4
L_481552:
L_247616:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_247584:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_247585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp expandTy_0
.p2align 0x4
.long 0x251A
L_247573:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	movq %r14,%r13
	shrq $0x1,%r13
	cmpq $0x144A,%r13
	jne L_481561
L_247575:
	movq 0x8(%r15),%r13
	movl 0x10(%r13),%r11d
	movq 0x20(%r13),%r14
	movq 0x0(%r14),%r10
L_247576:
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_247577
L_247578:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xD5C,%r15
	jne L_481559
L_247579:
	movq 0x0(%r10),%r15
	cmpq $0x1,%r15
	je L_481557
L_247580:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x105E,%r14
	jne L_481556
L_247581:
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x105C,%r15
	je L_481555
	cmpq $0x105D,%r15
	je L_481554
L_247582:
	movq 0x0(%r14),%r15
	jmp loopTycon_0
.p2align 0x4
L_481554:
L_247608:
	movq 0x8(%r14),%r15
	jmp L_247609
.p2align 0x4
L_481555:
L_247583:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	jmp L_247584
.p2align 0x4
L_481556:
L_247612:
	movq (globalObjptr+0x4D70)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481557:
L_247613:
	cmpl 0x18(%rbp),%r11d
	jl L_481558
L_247614:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481558:
L_247615:
	movq (globalObjptr+0x105E0)(%rip),%r15
	movq %r15,0x18(%rbp)
error_7:
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_247489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481559:
L_247577:
	movq (globalObjptr+0x4D38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481561:
L_247574:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3CC5
L_247477:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_247478
.p2align 0x4
.long 0x3CC9
L_247569:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_247480
.p2align 0x4
.long 0x3CC6
toString_352:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (rev_350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x251A
L_247585:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r10
	movq %r10,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1058,%r15
	jne L_247586
L_247587:
	movq 0x8(%r10),%r13
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_247589
L_247590:
	movq 0x20(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r11
	movl %r11d,%ebx
	movslq %ebx,%r10
	cmpq %r11,%r10
	jne L_481570
L_247592:
	cmpl %ecx,%ebx
	jne L_247586
L_247594:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2844:
	cmpl %ecx,%ebx
	je L_481567
L_247595:
	movslq %ebx,%r10
	cmpq %r14,%r10
	jnb L_247597
L_247598:
	movq 0x0(%r13,%r10,8),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r8
	shrq $0x1,%r8
	cmpq $0x1056,%r8
	jne L_247586
L_247599:
	movq 0x0(%r9),%r8
	cmpq %r11,%r10
	jnb L_481564
L_247601:
	movq 0x20(%rbp),%r9
	movq 0x0(%r9,%r10,8),%rsp
	movq 0x8(%rsp),%rsi
	movq 0x8(%r8),%rdi
	movq 0x8(%rdi),%rdx
	cmpq %rdx,0x8(%rsi)
	jne L_481563
L_247603:
	incl %ebx
	jo L_481562
L_247604:
	jmp loop_2844
.p2align 0x4
L_481562:
L_247498:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481563:
L_247586:
	movq (globalObjptr+0x105D8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp error_7
.p2align 0x4
L_481564:
L_247597:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481567:
L_247605:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1054,%r14
	je L_481568
L_247607:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp L_247572
.p2align 0x4
L_481568:
L_247606:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	jmp L_247475
.p2align 0x4
L_481570:
L_247589:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2478
L_247489:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247490
L_247561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_247562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247562
.p2align 0x4
.long 0x1127
L_247562:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_247490:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1539,%r14
	je L_481574
	cmpq $0x153A,%r14
	je L_481573
L_247491:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_247492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
L_481573:
L_247560:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_247492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
L_481574:
L_247516:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x40(%rbp)
	cmpq $0x1,%r14
	je L_481589
L_247517:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_247518:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481588
.p2align 0x4,,0x7
L_247519:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_481575
L_247520:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_247518
.p2align 0x4
L_481575:
L_247522:
	movq $0x26AB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x26AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x38(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_247523:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481587
.p2align 0x4,,0x7
L_247524:
	movq $0x26AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_481576
L_247525:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_247523
.p2align 0x4
L_481576:
L_247526:
	movq 0x48(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_247527:
	cmpq $0x1,%r15
	je L_247537
L_247528:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
L_247529:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481585
.p2align 0x4,,0x7
L_247530:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_481577
L_247531:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_247529
.p2align 0x4
L_481577:
L_247532:
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
L_247533:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481584
.p2align 0x4,,0x7
L_247534:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_481578
L_247535:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_247533
.p2align 0x4
L_481578:
L_247536:
	movq %r15,0x40(%rbp)
L_247537:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_481579
L_247538:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_247527
.p2align 0x4
L_481579:
L_247539:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247540
L_247548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_247549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247549
.p2align 0x4
.long 0xAA4
L_247549:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_247540:
	movq $0x143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	cmpq $0x1,%r14
	je L_481582
L_247541:
	movq 0x0(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r13),%r14
	cmpq $0x1,%r10
	je L_247544
L_247542:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r14
	je L_481580
L_247543:
	movq 0x8(%r14),%r10
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r10,0x8(%r14)
	addq $0x18,%r12
L_247544:
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	addq $0x40,%rbp
	leaq (L_247492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
L_481580:
L_247545:
	movq %r10,%r14
	jmp L_247544
.p2align 0x4
L_481582:
L_247547:
	movq 0x0(%r13),%r11
	xchgq %r11,%r14
	jmp L_247544
.p2align 0x4
L_481584:
L_247550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_247551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247551
.p2align 0x4
.long 0x85C
L_247551:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_247534
.p2align 0x4
L_481585:
L_247552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_247553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247553
.p2align 0x4
.long 0x9E0
L_247553:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_247530
.p2align 0x4
L_481587:
L_247555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_247556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247556
.p2align 0x4
.long 0x8A7
L_247556:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_247524
.p2align 0x4
L_481588:
L_247557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_247558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247558
.p2align 0x4
.long 0x9E0
L_247558:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_247519
.p2align 0x4
L_481589:
L_247559:
	movq $0x1,%r15
	jmp L_247522
.p2align 0x4
.long 0x3CC6
rev_350:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_481593
L_247481:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_247482:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481592
.p2align 0x4,,0x7
L_247483:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_481591
L_247484:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_247482
.p2align 0x4
L_481591:
L_247486:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_247487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_481592:
L_247565:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_247566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247566
.p2align 0x4
.long 0x646
L_247566:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_247483
.p2align 0x4
L_481593:
L_247567:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_247486
.p2align 0x4
.long 0x811
L_247492:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247493
L_247514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_247515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247515
.p2align 0x4
.long 0x73D
L_247515:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_247493:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x105C8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x105D0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_247494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x3CC6
L_247487:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247488
L_247563:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_247564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247564
.p2align 0x4
.long 0x97F
L_247564:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_247488:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x105C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (error_6+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x3CC7
L_247494:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_247495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CC6
error_6:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp error_7
.p2align 0x4
.long 0x3CC7
L_247495:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247496
L_247512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_247513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247513
.p2align 0x4
.long 0x3CC8
L_247513:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_247496:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_247497:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_247498
L_247499:
	cmpq $0x1,%r14
	je L_481596
L_247500:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_247497
.p2align 0x4
L_481596:
L_247501:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247502
L_247510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_247511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247511
.p2align 0x4
.long 0x797
L_247511:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_247502:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481598
L_247503:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
L_247504:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_247498
L_247505:
	movl %r13d,0x0(%r15)
	movq %r14,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_247506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_481598:
L_247509:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_247504
.p2align 0x4
.long 0x1
L_247506:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_481602
L_247507:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481602:
L_247508:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3942
.hidden loop_3942
loop_3942:
L_247620:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_247621
L_247682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_247683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247683
.p2align 0x4
.long 0x645
L_247683:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_247621:
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_247622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x27C7
L_247622:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_481604
L_247624:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x40(%rbp)
	movl 0x4(%r15),%r13d
	movl %r13d,0x24(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_247625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_481604:
L_247623:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x102A
L_247625:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247626
L_247680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_247681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247681
.p2align 0x4
.long 0x3CCF
L_247681:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_247626:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_247623
L_247627:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x50(%rbp)
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jz L_481605
L_247660:
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_247661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_481605:
L_247629:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x8(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_247631
L_247632:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_247631
L_247634:
	cmpl %ecx,%r13d
	jne L_247636
L_247637:
	cmpl $0x0,%r13d
	jl L_247636
L_247638:
	xorl %ecx,%ecx
loop_2845:
	cmpl 0x8(%rbp),%ecx
	jnl L_481606
L_247654:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0xC(%rbp)
	movslq %ecx,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r9
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r8
	movq $0x409F,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	addq $0x20,%r12
	movq %r10,0x0(%rsp)
	movq 0x0(%rbp),%rsi
	movq %rsi,0x8(%rsp)
	movq %r15,0x10(%rsp)
	movq $0x180D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x70(%rbp)
	addq $0x20,%r12
	movq $0x409F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	addq $0x20,%r12
	movq %rsi,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x180D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r8,0x8(%r14)
	movq %r9,0x10(%r14)
	movq %r14,0x68(%rbp)
	addq $0x20,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_247655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2009
.p2align 0x4
L_481606:
L_247639:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x8(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_247631
L_247641:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_481610
L_247643:
	cmpl %r13d,%ecx
	jne L_247636
L_247645:
	cmpl $0x0,%r13d
	jl L_481608
L_247646:
	xorl %ecx,%ecx
loop_2846:
	cmpl 0x8(%rbp),%ecx
	jnl L_481607
L_247648:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0xC(%rbp)
	movslq %ecx,%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x8(%r13),%r11
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r10
	movq %r10,0x68(%rbp)
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x60,%rbp
	leaq (L_247649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3942
.p2align 0x4
L_481607:
L_247647:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481608:
L_247636:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481610:
L_247631:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3CCD
L_247661:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_247662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x3CCB
L_247655:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247656
L_247657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_247658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247658
.p2align 0x4
.long 0x3CCC
L_247658:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_247656:
	movl 0xC(%rbp),%ecx
	jmp loop_2845
.p2align 0x4
.long 0x2A48
L_247649:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247650
L_247651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_247652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247652
.p2align 0x4
.long 0x3CCA
L_247652:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_247650:
	movl 0xC(%rbp),%ecx
	jmp loop_2846
.p2align 0x4
.long 0x3CCE
L_247662:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247663
L_247678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_247679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247679
.p2align 0x4
.long 0x2E28
L_247679:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_247663:
	movq 0x10(%rbp),%r15
	movq 0x8(%rbp),%r14
	cmpq %r14,%r15
	je L_247629
L_247664:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x145C,%r11
	jne L_247665
L_247666:
	movl 0x0(%r13),%r11d
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x145C,%r10
	jne L_247665
L_247667:
	movl 0x0(%r13),%r10d
	cmpl %r10d,%r11d
	jl L_481624
L_247668:
	movq $0x28BB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r13,0x0(%r14)
	cmpl %r11d,%r10d
	jne L_247629
L_247670:
	movq 0x0(%r15),%r14
	movq %r14,%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x145C,%r10
	jne L_481622
L_247671:
	movl 0x0(%r13),%r11d
	incl %r11d
	jo L_481621
L_247673:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145C,%r13
	jne L_481620
L_247675:
	movq 0x8(%r14),%r13
	movq $0x28B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_247629
.p2align 0x4
L_481620:
L_247674:
	movq (globalObjptr+0x1508)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481621:
L_247672:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481622:
L_247665:
	movq (globalObjptr+0x1688)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481624:
L_247676:
	movq $0x28BB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_247629
.text
.p2align 0x4
.globl ensureFlexible_0
.hidden ensureFlexible_0
ensureFlexible_0:
L_247684:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_247742
L_247685:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481629
L_247686:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_247687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_481629:
L_247742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_247743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247743
.p2align 0x4
.long 0x45B
L_247743:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_247686
.p2align 0x4
.long 0x27C7
L_247687:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_481631
L_247689:
	movq 0x8(%r14),%r15
	movq 0x20(%r15),%r13
	movq %r13,0x38(%rbp)
	movq %r13,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_247690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_481631:
L_247688:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1025
L_247690:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247691
L_247740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_247741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247741
.p2align 0x4
.long 0x1030
L_247741:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_247691:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_481634
L_247692:
	movq $0x1,0x38(%rbp)
L_247693:
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_481632
L_247694:
	movl $0x1,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_247695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_481632:
L_247707:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_481633
L_247708:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
L_247709:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x3DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_247710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_481633:
L_247714:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481634:
L_247734:
	movq 0x8(%rbp),%r14
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_247735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0xF78
L_247695:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247696
L_247731:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_247732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247732
.p2align 0x4
.long 0x1026
L_247732:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_247696:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_247688
L_247697:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x24(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_247699
L_247700:
	cmpl $0x0,%r14d
	jl L_247724
L_247701:
	movl $0x0,0x48(%rbp)
loop_2847:
	movl 0x24(%rbp),%r15d
	cmpl %r15d,0x48(%rbp)
	jl L_481639
L_247702:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_481638
L_247704:
	cmpl $0x0,%r13d
	jl L_481637
L_247705:
	movl $0x0,0x14(%rbp)
loop_2848:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_247707
L_247718:
	movslq %r15d,%r14
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x8(%r13),%r11
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x2A73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x20,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0x105B8)(%rip),%r15
	movq %r15,0x58(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x48,%rbp
	leaq (L_247719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getFlex_0
.p2align 0x4
L_481637:
L_247724:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481638:
L_247699:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481639:
L_247725:
	movslq 0x48(%rbp),%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r13),%r11
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_247726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ensureFlexible_0
.p2align 0x4
.long 0x512
L_247710:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247711
L_247715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_247716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247716
.p2align 0x4
.long 0x514
L_247716:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_247711:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_247714
L_247712:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_247709
.p2align 0x4
.long 0x1025
L_247735:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247736
L_247738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_247739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247739
.p2align 0x4
.long 0x1030
L_247739:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_247736:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x145C,%r14
	jne L_247688
L_247737:
	movq 0x8(%r15),%r14
	movq 0x20(%r14),%r13
	movq $0x28DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1953,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x38(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r11)
	movq %r15,0x38(%rbp)
	movq %r14,%r15
	jmp L_247693
.p2align 0x4
.long 0x57F
L_247719:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247720
L_247721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_247722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247722
.p2align 0x4
.long 0x5C3
L_247722:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_247720:
	incl 0x14(%rbp)
	jmp loop_2848
.p2align 0x4
.long 0x3CD0
L_247726:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247727
L_247728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_247729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247729
.p2align 0x4
.long 0x3CD1
L_247729:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_247727:
	incl 0x48(%rbp)
	jmp loop_2847
.text
.p2align 0x4
.globl openInterface_0
.hidden openInterface_0
openInterface_0:
L_247744:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_247745
L_247932:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_247933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247933
.p2align 0x4
.long 0x4AE
L_247933:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_247745:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_247746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x3CD2
L_247746:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247747
L_247930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_247931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247931
.p2align 0x4
.long 0x103C
L_247931:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_247747:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_481702
L_247749:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x40(%rbp)
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_247751
L_247752:
	cmpl $0x0,%r14d
	jl L_247821
L_247753:
	movl $0x0,0x44(%rbp)
loop_2849:
	movl 0x40(%rbp),%r15d
	cmpl %r15d,0x44(%rbp)
	jl L_481685
L_247754:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_247751
L_247756:
	cmpl $0x0,%r13d
	jl L_247821
L_247757:
	movl $0x0,0x24(%rbp)
loop_2850:
	movl 0x20(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_481668
L_247758:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_481667
L_247760:
	cmpl $0x0,%r13d
	jl L_481666
L_247761:
	movl $0x0,0x1C(%rbp)
loop_2851:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_481651
L_247762:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481651:
L_247763:
	movslq 0x1C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x20(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r11
	movq %r11,0x28(%rbp)
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r10
	movq %r10,0x38(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x48(%rbp)
	movq 0x10(%rbp),%r13
	movq 0x50(%r13),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x50(%rbp)
	movq 0x38(%r13),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x58(%rbp)
	movq 0x0(%r9),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r11),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_481665
L_247765:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_481664
L_247766:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x78(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_247768:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_247769
L_247809:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_247769
L_247810:
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x60(%rbp)
	je L_481658
L_247769:
	movl 0x78(%rbp),%r13d
	incl %r13d
	movl %r13d,0x7C(%rbp)
	jo L_481657
L_247771:
	cmpq $0x1,%r15
	je L_481652
L_247772:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x78(%rbp)
	jmp L_247768
.p2align 0x4
L_481652:
L_247773:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247774
L_247807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_247808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247808
.p2align 0x4
.long 0x3CD7
L_247808:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_247774:
	movl 0x7C(%rbp),%ecx
L_247775:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_481655
L_247777:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_247779
L_247806:
	movl %ecx,0x0(%r15)
L_247779:
	movq $0x1133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x112F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x112B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_247780:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je new_12
L_247781:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r14)
	jne new_43
L_247788:
	movq 0x40(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_481653
L_247789:
	movq 0x68(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10598)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xF260)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA438)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_247790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_481653:
L_247800:
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_247801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
new_43:
new_12:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2683,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x10(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_247783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_481655:
L_247776:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481657:
L_247770:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481658:
L_247812:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247813
L_247817:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_247818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247818
.p2align 0x4
.long 0x3CD8
L_247818:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_247813:
	movl 0x78(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_247776
L_247814:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_481659
L_247815:
	movq 0x80(%rbp),%r15
	jmp L_247780
.p2align 0x4
L_481659:
L_247816:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x78(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x80(%rbp),%r15
	jmp L_247780
.p2align 0x4
L_481664:
L_247819:
	xorl %ecx,%ecx
	jmp L_247775
.p2align 0x4
L_481665:
L_247764:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481666:
L_247821:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481667:
L_247751:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481668:
L_247822:
	movslq 0x24(%rbp),%r15
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x10(%rbp),%r13
	movq 0x50(%r13),%r11
	movq 0x0(%r11),%r9
	movq %r9,0x60(%rbp)
	movq 0x38(%r13),%r11
	movq 0x8(%r11),%r9
	movq %r9,0x68(%rbp)
	movq 0x0(%r9),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%r10),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x80(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_247764
L_247823:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_481681
L_247824:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x88(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_247826:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_247827
L_247864:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_247827
L_247865:
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x70(%rbp)
	je L_481675
L_247827:
	movl 0x88(%rbp),%r13d
	incl %r13d
	movl %r13d,0x8C(%rbp)
	jo L_247770
L_247828:
	cmpq $0x1,%r15
	je L_481669
L_247829:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x88(%rbp)
	jmp L_247826
.p2align 0x4
L_481669:
L_247830:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247831
L_247862:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_247863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247863
.p2align 0x4
.long 0x3CDE
L_247863:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_247831:
	movl 0x8C(%rbp),%ecx
L_247832:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_247776
L_247833:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_247835
L_247861:
	movl %ecx,0x0(%r15)
L_247835:
	movq $0x1133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x112F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x112B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_247836:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je new_13
L_247837:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0x60(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	jne new_45
L_247844:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_481670
L_247845:
	movq 0x78(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10598)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA440)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA438)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_247846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_481670:
L_247855:
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_247856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
new_45:
new_13:
	movq 0x68(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x267F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x10(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_247839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_481675:
L_247867:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247868
L_247872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_247873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247873
.p2align 0x4
.long 0x3CDF
L_247873:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_247868:
	movl 0x88(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_247776
L_247869:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_481676
L_247870:
	movq 0x90(%rbp),%r15
	jmp L_247836
.p2align 0x4
L_481676:
L_247871:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x88(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x90(%rbp),%r15
	jmp L_247836
.p2align 0x4
L_481681:
L_247874:
	xorl %ecx,%ecx
	jmp L_247832
.p2align 0x4
L_481685:
L_247876:
	movslq 0x44(%rbp),%r15
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x10(%rbp),%r13
	movq 0x50(%r13),%r11
	movq 0x0(%r11),%r9
	movq %r9,0x70(%rbp)
	movq 0x38(%r13),%r11
	movq 0x10(%r11),%r9
	movq %r9,0x78(%rbp)
	movq 0x0(%r9),%r13
	movq %r13,0x80(%rbp)
	movq 0x8(%r10),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x90(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_247764
L_247877:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_481698
L_247878:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x98(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_247880:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_247881
L_247918:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD89,%r13
	jne L_247881
L_247919:
	movq 0x8(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x80(%rbp)
	je L_481692
L_247881:
	movl 0x98(%rbp),%r13d
	incl %r13d
	movl %r13d,0x9C(%rbp)
	jo L_247770
L_247882:
	cmpq $0x1,%r15
	je L_481686
L_247883:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x98(%rbp)
	jmp L_247880
.p2align 0x4
L_481686:
L_247884:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247885
L_247916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_247917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247917
.p2align 0x4
.long 0x3CE6
L_247917:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_247885:
	movl 0x9C(%rbp),%ecx
L_247886:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_247776
L_247887:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_247889
L_247915:
	movl %ecx,0x0(%r15)
L_247889:
	movq $0x1133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x112F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x112B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1315,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1B13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	movq %r11,%r15
L_247890:
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je new_14
L_247891:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x70(%rbp),%r14
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r14)
	jne new_47
L_247898:
	movq 0x60(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_481687
L_247899:
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10598)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA460)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA438)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_247900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_481687:
L_247909:
	movq 0x58(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_247910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
new_47:
new_14:
	movq 0x78(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x267B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x10(%r15)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_247893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_481692:
L_247921:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247922
L_247926:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_247927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247927
.p2align 0x4
.long 0x3CE7
L_247927:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_247922:
	movl 0x98(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_247776
L_247923:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_481693
L_247924:
	movq 0xA0(%rbp),%r15
	jmp L_247890
.p2align 0x4
L_481693:
L_247925:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x98(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0xA0(%rbp),%r15
	jmp L_247890
.p2align 0x4
L_481698:
L_247928:
	xorl %ecx,%ecx
	jmp L_247886
.p2align 0x4
L_481702:
L_247748:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1042
L_247790:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_247791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CD5
L_247801:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247802
L_247803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_247804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247804
.p2align 0x4
.long 0x3CD6
L_247804:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_247802:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1129,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x2685,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_247785:
	incl 0x1C(%rbp)
	jmp loop_2851
.p2align 0x4
.long 0x3CD3
L_247783:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247784
L_247786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_247787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247787
.p2align 0x4
.long 0x3CD4
L_247787:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_247784:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1129,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x2685,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_247785
.p2align 0x4
.long 0x3CDB
L_247846:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_247847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CDC
L_247856:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247857
L_247858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_247859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247859
.p2align 0x4
.long 0x3CDD
L_247859:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_247857:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x112D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x48(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x2681,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_247841:
	incl 0x24(%rbp)
	jmp loop_2850
.p2align 0x4
.long 0x3CD9
L_247839:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247840
L_247842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_247843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247843
.p2align 0x4
.long 0x3CDA
L_247843:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_247840:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x112D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x48(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x2681,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_247841
.p2align 0x4
.long 0x3CE2
L_247900:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_247901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CE4
L_247910:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247911
L_247912:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_247913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247913
.p2align 0x4
.long 0x3CE5
L_247913:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_247911:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1131,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x58(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x267D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_247895:
	incl 0x44(%rbp)
	jmp loop_2849
.p2align 0x4
.long 0x3CE0
L_247893:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247894
L_247896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_247897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247897
.p2align 0x4
.long 0x3CE1
L_247897:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_247894:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1131,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl 0x58(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x267D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_247895
.p2align 0x4
.long 0x1042
L_247791:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_247770
L_247792:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r14
	movq %r14,0x58(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_247793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x3CDB
L_247847:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_247770
L_247848:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_247849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x3CE2
L_247901:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_247770
L_247902:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_247903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x3CC6
L_247793:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247794
L_247798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_247799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247799
.p2align 0x4
.long 0x1EEB
L_247799:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_247794:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_247785
L_247797:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x27C7
L_247849:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247850
L_247853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_247854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247854
.p2align 0x4
.long 0x645
L_247854:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_247850:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_247797
	jmp L_247841
.p2align 0x4
.long 0x3CE3
L_247903:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_247904
L_247907:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_247908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247908
.p2align 0x4
.long 0x795
L_247908:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_247904:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_247797
	jmp L_247895
