/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:09:01 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl replaceLabelVar_0
.hidden replaceLabelVar_0
replaceLabelVar_0:
L_95446:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_95722
L_95447:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413585
L_95448:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_413584
L_95449:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBE,%r14
	je L_413582
	cmpq $0xEBF,%r14
	je L_413580
	cmpq $0xEC0,%r14
	je L_413574
	cmpq $0xEC1,%r14
	je L_413552
	cmpq $0xEC2,%r14
	je L_413550
	cmpq $0xEC3,%r14
	je L_413548
L_95450:
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_413547
L_95453:
	movl %r13d,0x38(%rbp)
	movq $0x4011,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_95454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_413547:
L_95452:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413548:
L_95679:
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_95452
L_95681:
	movl %r13d,0x48(%rbp)
	movq $0x4011,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_95682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_413550:
L_95620:
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_95452
L_95622:
	movl %r13d,0x38(%rbp)
	movq $0x4011,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_95623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_413552:
L_95513:
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_413556
L_95514:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x203A,%r13
	je L_413555
	cmpq $0x203B,%r13
	je L_413554
	cmpq $0x203C,%r13
	je L_413553
L_95515:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x10(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_95516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1396
.p2align 0x4
L_413553:
L_95608:
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_95609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_413554:
L_95596:
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_95597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_413555:
L_95585:
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_95586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_54
.p2align 0x4
L_413556:
L_95617:
	movq 0x28(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1206,%r11
	je L_413572
L_95619:
	movq 0x0(%r13),%r11
	movq %r11,0x10(%rbp)
L_95550:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq %r14,%rdx
	jne L_95452
L_95552:
	testq %rdx,%rdx
	jz L_413570
L_95553:
	cmpq $0x7FFFFFFF,%rdx
	ja L_413569
L_95554:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14DF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95555
.p2align 0x4
.long 0x764
L_95555:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
L_95556:
	movq $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_1081:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413568
.p2align 0x4,,0x7
L_95557:
	movq 0x38(%rbp),%r15
	cmpq 0x28(%rbp),%r15
	jnl L_413562
L_95561:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x48(%rbp)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_95565
	cmpq $0x2,%r15
	je L_413559
L_95562:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1CC8,%r14
	je L_413558
	cmpq $0x1CC9,%r14
	je L_413557
L_95563:
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_95564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1468
.p2align 0x4
L_413557:
L_95570:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_95571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_413558:
L_95569:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_95564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp route_0
.p2align 0x4
L_413559:
.p2align 0x4,,0x7
L_95565:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413560
.p2align 0x4,,0x7
L_95566:
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x38(%rbp)
	jmp loop_1081
.p2align 0x4
L_413560:
L_95567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_95568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95568
.p2align 0x4
.long 0x1577
L_95568:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_95566
.p2align 0x4
L_413562:
L_95558:
	movq 0x30(%rbp),%r14
	movq $0xB03,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x240F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_413567
L_95559:
	movq %r14,0x10(%rbp)
	movq %r13,0x20(%rbp)
L_95527:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_413566
	cmpq $0x2,%r15
	je L_413565
L_95528:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1CC8,%r14
	je L_413564
	cmpq $0x1CC9,%r14
	je L_413563
L_95529:
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_95530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1468
.p2align 0x4
L_413563:
L_95537:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_95538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_413564:
L_95536:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_95530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp route_0
.p2align 0x4
L_413565:
L_95545:
	movq 0x10(%rbp),%r14
	xchgq %r14,%r15
L_95532:
	movq 0x18(%rbp),%r13
	movq 0x20(%rbp),%r14
L_95533:
	movq $0x1D83,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r11,0x0(%rbp)
	addq $0x20,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413566:
L_95544:
	movq 0x10(%rbp),%r14
	xchgq %r14,%r15
	jmp L_95532
.p2align 0x4
L_413567:
L_95560:
	movq 0x18(%rbp),%r11
	movq $0x1,%r10
	xchgq %r10,%r15
	xchgq %r13,%r14
	xchgq %r11,%r13
	jmp L_95533
.p2align 0x4
L_413568:
L_95576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_95577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95577
.p2align 0x4
.long 0x1579
L_95577:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_95557
.p2align 0x4
L_413569:
L_95578:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413570:
L_95579:
	movq (globalObjptr+0x1E28)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_95556
.p2align 0x4
L_413572:
L_95618:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq %r10,0x10(%rbp)
	xchgq %r11,%r15
L_95521:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_95452
L_95523:
	movl %r13d,0x38(%rbp)
	movq $0x397F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_95524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_27
.p2align 0x4
L_413574:
L_95489:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_413579
	cmpq $0x2,%r15
	je L_413577
L_95490:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1CC8,%r13
	je L_413576
	cmpq $0x1CC9,%r13
	je L_413575
L_95491:
	movq 0x18(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_95492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1468
.p2align 0x4
L_413575:
L_95504:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_95505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_413576:
L_95503:
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_95492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp route_0
.p2align 0x4
L_413577:
L_95512:
	movq %r14,0x8(%rbp)
L_95494:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_95452
L_95496:
	movq $0x4011,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x18(%rbp)
	movl %r13d,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_95497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_413579:
L_95511:
	movq %r14,0x8(%rbp)
	jmp L_95494
.p2align 0x4
L_413580:
L_95482:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_95452
L_95484:
	movl %r13d,0x10(%rbp)
	movq $0x4011,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_413582:
L_95475:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_95452
L_95477:
	movl %r13d,0x10(%rbp)
	movq $0x4011,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_413584:
L_95721:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413585:
L_95722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_95723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95723
.p2align 0x4
.long 0x45B
L_95723:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_95448
.p2align 0x4
.long 0x5FF
L_95454:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95455
L_95473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_95474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95474
.p2align 0x4
.long 0x4E9
L_95474:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_95455:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_413590
	cmpq $0x2,%r15
	je L_413589
L_95456:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1CC8,%r14
	je L_413588
	cmpq $0x1CC9,%r14
	je L_413587
L_95457:
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_95458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1468
.p2align 0x4
L_413587:
L_95464:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_95465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_413588:
L_95463:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_95458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp route_0
.p2align 0x4
L_413589:
L_95472:
	movq 0x18(%rbp),%r14
	xchgq %r14,%r15
L_95460:
	movq $0x1D7B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413590:
L_95471:
	movq 0x18(%rbp),%r14
	xchgq %r14,%r15
	jmp L_95460
.p2align 0x4
.long 0x990
L_95682:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95683
L_95719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_95720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95720
.p2align 0x4
.long 0x4F0
L_95720:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_95683:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_413595
	cmpq $0x2,%r15
	je L_413594
L_95684:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1CC8,%r14
	je L_413593
	cmpq $0x1CC9,%r14
	je L_413592
L_95685:
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_95686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1468
.p2align 0x4
L_413592:
L_95710:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_95711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_413593:
L_95709:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_95686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp route_0
.p2align 0x4
L_413594:
L_95718:
	movq 0x20(%rbp),%r14
	movq 0x30(%rbp),%r13
	xchgq %r13,%r15
L_95693:
	movq $0x1D87,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x18(%r13)
	addq $0x30,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413595:
L_95717:
	movq 0x20(%rbp),%r14
	movq 0x30(%rbp),%r13
	xchgq %r13,%r15
	jmp L_95693
.p2align 0x4
.long 0x5FF
L_95623:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95624
L_95677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_95678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95678
.p2align 0x4
.long 0x4E9
L_95678:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_95624:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_413610
	cmpq $0x2,%r15
	je L_413609
L_95625:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_413606
	cmpq $0x2,%r15
	je L_413599
L_95626:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1CC8,%r13
	je L_413598
	cmpq $0x1CC9,%r13
	je L_413597
L_95627:
	movq 0x18(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_95628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1468
.p2align 0x4
L_413597:
L_95657:
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_95658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_413598:
L_95656:
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_95628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp route_0
.p2align 0x4
L_413599:
L_95671:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_413605
	cmpq $0x2,%r13
	je L_413604
L_95672:
	movq %r13,0x18(%rbp)
	movq %r14,0x28(%rbp)
L_95632:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_413603
	cmpq $0x2,%r15
	je L_413602
L_95633:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1CC8,%r14
	je L_413601
	cmpq $0x1CC9,%r14
	je L_413600
L_95634:
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_95635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1468
.p2align 0x4
L_413600:
L_95643:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_95644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_413601:
L_95642:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_95635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp route_0
.p2align 0x4
L_413602:
L_95651:
	movq 0x18(%rbp),%r14
	xchgq %r14,%r15
L_95637:
	movq 0x28(%rbp),%r13
	movq %r15,%r14
	movq %r13,%r15
L_95638:
	movq $0x240B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_95639:
	movq $0x1D85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413603:
L_95650:
	movq 0x18(%rbp),%r14
	xchgq %r14,%r15
	jmp L_95637
.p2align 0x4
L_413604:
L_95674:
	movq $0x2,%r11
	xchgq %r14,%r15
	xchgq %r11,%r14
	jmp L_95638
.p2align 0x4
L_413605:
L_95673:
	movq $0x1,%r11
	xchgq %r14,%r15
	xchgq %r11,%r14
	jmp L_95638
.p2align 0x4
L_413606:
L_95667:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_413608
	cmpq $0x2,%r13
	je L_413607
L_95668:
	movq %r13,0x18(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_95632
.p2align 0x4
L_413607:
L_95670:
	movq $0x2,%r11
	xchgq %r14,%r15
	xchgq %r11,%r14
	jmp L_95638
.p2align 0x4
L_413608:
L_95669:
	movq $0x1,%r11
	xchgq %r14,%r15
	xchgq %r11,%r14
	jmp L_95638
.p2align 0x4
L_413609:
L_95676:
	movq $0x2,%r14
	xchgq %r14,%r15
	jmp L_95639
.p2align 0x4
L_413610:
L_95675:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_95639
.p2align 0x4
.long 0x4E3
L_95516:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_95517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp global_0
.p2align 0x4
.long 0x679
L_95609:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95610
L_95615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95616
.p2align 0x4
.long 0x637
L_95616:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95610:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_413613
L_95611:
L_95600:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1206,%r13
	je L_413612
L_95602:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp L_95550
.p2align 0x4
L_413612:
L_95601:
	movq %r15,0x18(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	jmp L_95521
.p2align 0x4
L_413613:
L_95612:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1206,%r13
	je L_413614
L_95614:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp L_95550
.p2align 0x4
L_413614:
L_95613:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x10(%rbp)
	movq %r13,%r15
	jmp L_95521
.p2align 0x4
.long 0x679
L_95597:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95598
L_95606:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95607
.p2align 0x4
.long 0x637
L_95607:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95598:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_413616
L_95599:
	jmp L_95600
.p2align 0x4
L_413616:
L_95603:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1206,%r13
	je L_413617
L_95605:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp L_95550
.p2align 0x4
L_413617:
L_95604:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x10(%rbp)
	movq %r13,%r15
	jmp L_95521
.p2align 0x4
.long 0x679
L_95586:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95587
L_95594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95595
.p2align 0x4
.long 0x637
L_95595:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95587:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_413620
L_95588:
	movq 0x0(%r13),%r15
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1206,%r13
	je L_413619
L_95590:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp L_95550
.p2align 0x4
L_413619:
L_95589:
	movq %r15,0x18(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	jmp L_95521
.p2align 0x4
L_413620:
L_95591:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1206,%r14
	je L_413621
L_95593:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_95550
.p2align 0x4
L_413621:
L_95592:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq %r14,%r15
	jmp L_95521
.p2align 0x4
.long 0x1576
L_95564:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_95565
.p2align 0x4
.long 0x1578
L_95571:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_95565
L_95572:
	movq %r15,0x40(%rbp)
	jmp L_95565
.p2align 0x4
.long 0x519
L_95530:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95531
L_95534:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95535
.p2align 0x4
.long 0x51C
L_95535:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95531:
	movq 0x28(%rbp),%r15
	jmp L_95532
.p2align 0x4
.long 0x8A9
L_95538:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95539
L_95542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95543
.p2align 0x4
.long 0x51F
L_95543:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95539:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_413625
L_95540:
	jmp L_95532
.p2align 0x4
L_413625:
L_95541:
	movq 0x10(%rbp),%r14
	xchgq %r14,%r15
	jmp L_95532
.p2align 0x4
.long 0x4A5
L_95524:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95525
L_95547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95548
.p2align 0x4
.long 0x637
L_95548:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95525:
	movq $0x240D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_413627
L_95526:
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_95527
.p2align 0x4
L_413627:
L_95546:
	movq 0x18(%rbp),%r13
	movq $0x1,%r11
	xchgq %r15,%r14
	xchgq %r11,%r15
	jmp L_95533
.p2align 0x4
.long 0x966
L_95492:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95494
L_95501:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_95502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95502
.p2align 0x4
.long 0x52C
L_95502:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_95494
.p2align 0x4
.long 0x458
L_95505:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95506
L_95509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_95510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95510
.p2align 0x4
.long 0x561
L_95510:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_95506:
	cmpq $0x1,0x8(%rbp)
	jne L_95494
L_95508:
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp L_95494
.p2align 0x4
.long 0x521
L_95497:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95498
L_95499:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_95500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95500
.p2align 0x4
.long 0x4E8
L_95500:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_95498:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_95485:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95486
L_95487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_95488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95488
.p2align 0x4
.long 0x451
L_95488:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_95486:
	movq $0x1D7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_95478:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95479
L_95480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_95481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95481
.p2align 0x4
.long 0x451
L_95481:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_95479:
	movq $0x1D7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2
L_95458:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95459
L_95461:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_95462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95462
.p2align 0x4
.long 0x4B1
L_95462:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_95459:
	movq 0x18(%rbp),%r15
	jmp L_95460
.p2align 0x4
.long 0x8A9
L_95465:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95466
L_95469:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95470
.p2align 0x4
.long 0x51F
L_95470:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95466:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_413636
L_95467:
	jmp L_95460
.p2align 0x4
L_413636:
L_95468:
	movq 0x18(%rbp),%r14
	xchgq %r14,%r15
	jmp L_95460
.p2align 0x4
.long 0x4E3
L_95686:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95688
L_95707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_95708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95708
.p2align 0x4
.long 0x4F0
L_95708:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_95688:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_413641
	cmpq $0x2,%r15
	je L_413640
L_95689:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1CC8,%r14
	je L_413639
	cmpq $0x1CC9,%r14
	je L_413638
L_95690:
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_95691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1468
.p2align 0x4
L_413638:
L_95697:
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_95698:
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_95699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_413639:
L_95696:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_95691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp route_0
.p2align 0x4
L_413640:
L_95706:
	movq 0x20(%rbp),%r14
	movq 0x30(%rbp),%r13
	xchgq %r13,%r15
	jmp L_95693
.p2align 0x4
L_413641:
L_95705:
	movq 0x20(%rbp),%r14
	movq 0x30(%rbp),%r13
	xchgq %r13,%r15
	jmp L_95693
.p2align 0x4
.long 0x4ED
L_95711:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95712
L_95715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_95716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95716
.p2align 0x4
.long 0x4EF
L_95716:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_95712:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_413643
L_95713:
	movq %r15,0x30(%rbp)
	jmp L_95688
.p2align 0x4
L_413643:
L_95714:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_95698
.p2align 0x4
.long 0x639
L_95628:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95629
L_95654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95655
.p2align 0x4
.long 0x637
L_95655:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95629:
	movq 0x18(%rbp),%r15
L_95630:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_413646
	cmpq $0x2,%r14
	je L_413645
L_95631:
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_95632
.p2align 0x4
L_413645:
L_95653:
	movq $0x2,%r13
	xchgq %r13,%r14
	jmp L_95638
.p2align 0x4
L_413646:
L_95652:
	movq $0x1,%r13
	xchgq %r13,%r14
	jmp L_95638
.p2align 0x4
.long 0xBC0
L_95658:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95659
L_95665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_95666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95666
.p2align 0x4
.long 0x4F0
L_95666:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_95659:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_413648
L_95660:
	jmp L_95630
.p2align 0x4
L_413648:
L_95661:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_413650
	cmpq $0x2,%r14
	je L_413649
L_95662:
	movq %r14,0x18(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_95632
.p2align 0x4
L_413649:
L_95664:
	movq $0x2,%r13
	movq 0x30(%rbp),%r11
	xchgq %r11,%r15
	xchgq %r13,%r14
	jmp L_95638
.p2align 0x4
L_413650:
L_95663:
	movq $0x1,%r13
	movq 0x30(%rbp),%r11
	xchgq %r11,%r15
	xchgq %r13,%r14
	jmp L_95638
.p2align 0x4
.long 0x796
L_95635:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95636
L_95640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95641
.p2align 0x4
.long 0x51F
L_95641:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95636:
	movq 0x18(%rbp),%r15
	jmp L_95637
.p2align 0x4
.long 0x4A6
L_95644:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95645
L_95648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_95649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95649
.p2align 0x4
.long 0x720
L_95649:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_95645:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_413653
L_95646:
	jmp L_95637
.p2align 0x4
L_413653:
L_95647:
	movq 0x18(%rbp),%r14
	xchgq %r14,%r15
	jmp L_95637
.p2align 0x4
.long 0x679
L_95517:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95518
L_95583:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95584
.p2align 0x4
.long 0x637
L_95584:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95518:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_413656
L_95519:
	movq 0x8(%r15),%r14
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1206,%r13
	je L_413655
L_95549:
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_95550
.p2align 0x4
L_413655:
L_95520:
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq %r14,%r15
	jmp L_95521
.p2align 0x4
L_413656:
L_95580:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1206,%r13
	je L_413657
L_95582:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp L_95550
.p2align 0x4
L_413657:
L_95581:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x10(%rbp)
	movq %r13,%r15
	jmp L_95521
.p2align 0x4
.long 0x786
L_95691:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95692
L_95694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_95695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95695
.p2align 0x4
.long 0x720
L_95695:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_95692:
	movq 0x20(%rbp),%r14
	movq 0x30(%rbp),%r15
	jmp L_95693
.p2align 0x4
.long 0x4A7
L_95699:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95700
L_95703:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_95704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95704
.p2align 0x4
.long 0x4B0
L_95704:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_95700:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_413660
L_95701:
	movq 0x30(%rbp),%r15
	jmp L_95693
.p2align 0x4
L_413660:
L_95702:
	movq 0x20(%rbp),%r13
	movq 0x30(%rbp),%r15
	xchgq %r13,%r14
	jmp L_95693
.text
.p2align 0x4
.globl tabulate_31
.hidden tabulate_31
tabulate_31:
L_95724:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_95725
L_95994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_95995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95995
.p2align 0x4
.long 0x457
L_95995:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_95725:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_413726
L_95726:
	cmpq $0x7FFFFFFF,%rdx
	ja L_413725
L_95727:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x146F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_95728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95728
.p2align 0x4
.long 0x452
L_95728:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_95729:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_1082:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_413724
L_95731:
	movl %r15d,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1C51,%rax
	cmpq $0x15,%rax
	ja L_413662
	leaq jumpTable_227(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_227:
.quad L_413723,L_413720,L_413717,L_413716,L_413715,L_413712,L_413709,L_413706,L_413703,L_413702,L_413701,L_413698,L_413695,L_413693,L_413690,L_413687,L_413676,L_413675,L_413672,L_413669,L_413666,L_413665
.text
.p2align 0x4
L_413662:
L_95732:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95733
L_95745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_95746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95746
.p2align 0x4
.long 0x495
L_95746:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_95733:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movslq 0x20(%rbp),%r14
	movq 0x10(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1EB0,%r15
	je L_413663
L_95741:
	movq 0x58(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x50(%r13),%r10
	movq 0x48(%r13),%r9
	movq 0x40(%r13),%r8
	movq 0x38(%r13),%rsp
	movq 0x30(%r13),%rsi
	movq 0x28(%r13),%rdi
	movq 0x20(%r13),%rdx
	movq 0x18(%r13),%rcx
	movq 0x10(%r13),%rbx
	movq 0x8(%r13),%rax
	movq $0x8C5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r10,0x10(%r13)
	movq %r9,0x18(%r13)
	movq %r8,0x20(%r13)
	movq %rsp,0x28(%r13)
	movq %rsi,0x30(%r13)
	movq %rdi,0x38(%r13)
	movq %rdx,0x40(%r13)
	movq %rcx,0x48(%r13)
	movq %rbx,0x50(%r13)
	movq %rax,0x58(%r13)
	addq $0x68,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x48(%rbp)
	movq %r11,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_95742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_413663:
L_95734:
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq %r11,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_95735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1315
.p2align 0x4
L_413665:
L_95969:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movslq 0x20(%rbp),%r14
	movq 0x20(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r11),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_95970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_413666:
L_95965:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movslq 0x20(%rbp),%r13
	movq 0x10(%r14),%r11
	movq 0x0(%r11,%r13,8),%r10
	salq $0x4,%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r11,%r13,1),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,0x8(%r8)
	jne L_413668
L_95967:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_413667
L_95968:
	movl %r14d,0x0(%r15)
	movq %r10,%r15
.p2align 0x4,,0x7
L_95739:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_1082
.p2align 0x4
L_413667:
L_95737:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413668:
L_95966:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413669:
L_95961:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movslq 0x20(%rbp),%r13
	movq 0x10(%r14),%r11
	movq 0x0(%r11,%r13,8),%r10
	salq $0x4,%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r11,%r13,1),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,0x8(%r8)
	jne L_413671
L_95963:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_95737
L_95964:
	movl %r14d,0x0(%r15)
	movq %r10,%r15
	jmp L_95739
.p2align 0x4
L_413671:
L_95962:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413672:
L_95957:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movslq 0x20(%rbp),%r13
	movq 0x10(%r14),%r11
	movq 0x0(%r11,%r13,8),%r10
	salq $0x4,%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r11,%r13,1),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,0x8(%r8)
	jne L_413674
L_95959:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_95737
L_95960:
	movl %r14d,0x0(%r15)
	movq %r10,%r15
	jmp L_95739
.p2align 0x4
L_413674:
L_95958:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413675:
L_95929:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movslq 0x20(%rbp),%r14
	movq 0x28(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x48(%rbp)
	movq 0x20(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x50(%rbp)
	addq $0x60,%rbp
	leaq (L_95930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_413676:
L_95867:
	movq 0x0(%rbp),%r9
	movq 0x0(%r9),%r8
	movq %r8,0x28(%rbp)
	movslq 0x20(%rbp),%r15
	movq 0x10(%r9),%r8
	movq 0x0(%r8,%r15,8),%rsp
	movq %rsp,0x30(%rbp)
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%r11
	movq 0x0(%r8),%rsi
	movq 0x8(%rsi),%r10
	movq 0x0(%rsi),%r13
	movq 0x10(%rsp),%r15
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r14
	incq %r14
	jo L_413686
L_95869:
	movq %r14,0x0(%r9)
	movq 0x0(%r15),%r9
	cmpq $0x1,%r9
	je L_413685
L_95870:
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
.p2align 0x4,,0x7
L_95872:
	movq %r14,%r9
	andq $0x3,%r9
	jnz L_413684
L_95911:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r9
	shrq $0x1,%r9
	cmpq $0xCB1,%r9
	jne L_413683
L_95912:
	movq 0x8(%r14),%r9
	cmpq %r10,0x0(%r14)
	movq %r10,(localObjptr+0x20)(%rip)
	je L_413680
	movq %r11,(localObjptr+0x10)(%rip)
L_95873:
	incl %ecx
	jo L_95737
L_95874:
	cmpq $0x1,%r15
	je L_413677
L_95875:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r11
	movq (localObjptr+0x20)(%rip),%r10
	jmp L_95872
.p2align 0x4
L_413677:
L_95876:
L_95877:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_413678
L_95879:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_285
L_95910:
	movl %ecx,0x0(%r15)
x_285:
	movq %r13,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_413678:
L_95878:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413680:
L_95914:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_95878
L_95915:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_413681
L_95927:
	movl %ecx,0x0(%r14)
	movq %r9,%r15
	movq %r11,(localObjptr+0x10)(%rip)
L_95917:
	movq %r15,0x40(%rbp)
	movq (localObjptr+0x10)(%rip),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (isUnit_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_413681:
L_95916:
	movq %r9,%r15
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_95917
.p2align 0x4
L_413683:
	movq %r10,(localObjptr+0x20)(%rip)
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_95873
.p2align 0x4
L_413684:
	movq %r10,(localObjptr+0x20)(%rip)
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_95873
.p2align 0x4
L_413685:
L_95928:
	xorl %ecx,%ecx
	jmp L_95877
.p2align 0x4
L_413686:
L_95868:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413687:
L_95863:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movslq 0x20(%rbp),%r13
	movq 0x10(%r14),%r11
	movq 0x0(%r11,%r13,8),%r10
	salq $0x4,%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r11,%r13,1),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,0x8(%r8)
	jne L_413689
L_95865:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_95737
L_95866:
	movl %r14d,0x0(%r15)
	movq %r10,%r15
	jmp L_95739
.p2align 0x4
L_413689:
L_95864:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413690:
L_95859:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movslq 0x20(%rbp),%r13
	movq 0x10(%r14),%r11
	movq 0x0(%r11,%r13,8),%r10
	salq $0x4,%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r11,%r13,1),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,0x8(%r8)
	jne L_413692
L_95861:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_95737
L_95862:
	movl %r14d,0x0(%r15)
	movq %r10,%r15
	jmp L_95739
.p2align 0x4
L_413692:
L_95860:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413693:
L_95834:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x38(%rbp)
	movslq 0x20(%rbp),%r15
	movq 0x20(%r14),%r11
	movq 0x0(%r11,%r15,8),%r10
	cmpq $0x1,%r10
	jne L_413694
L_95858:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413694:
L_95835:
	movq %r13,0x48(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x20(%rbp)
	addq $0x48,%rbp
	leaq (L_95836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_413695:
L_95830:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movslq 0x20(%rbp),%r13
	movq 0x10(%r14),%r11
	movq 0x0(%r11,%r13,8),%r10
	salq $0x4,%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11,%r13,1),%r9
	movl 0x0(%r9),%r8d
	testl %r8d,%r8d
	jnz L_413697
L_95831:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_95737
L_95832:
	movl %r14d,0x0(%r15)
	movq %r10,%r15
	jmp L_95739
.p2align 0x4
L_413697:
L_95833:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413698:
L_95826:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movslq 0x20(%rbp),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	je L_413700
L_95827:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_95737
L_95828:
	movl %r14d,0x0(%r15)
	movq %r10,%r15
	jmp L_95739
.p2align 0x4
L_413700:
L_95829:
	movq %r10,%r15
	jmp L_95739
.p2align 0x4
L_413701:
L_95825:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movslq 0x20(%rbp),%r15
	salq $0x4,%r15
	movq 0x0(%r13,%r15,1),%r13
	movq %r13,%r15
	jmp L_95739
.p2align 0x4
L_413702:
L_95820:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movslq 0x20(%rbp),%r14
	movq 0x18(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_95821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp keepVar_0
.p2align 0x4
L_413703:
L_95816:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movslq 0x20(%rbp),%r13
	movq 0x10(%r14),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq 0x8(%r14),%r11
	movq 0x0(%r11,%r13,8),%r9
	andq $0x1,%r10
	jnz L_413705
L_95818:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_95737
L_95819:
	movl %r14d,0x0(%r15)
	movq %r9,%r15
	jmp L_95739
.p2align 0x4
L_413705:
L_95817:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413706:
L_95812:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movslq 0x20(%rbp),%r13
	movq 0x10(%r14),%r11
	movq 0x0(%r11,%r13,8),%r10
	salq $0x4,%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r11,%r13,1),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,0x8(%r8)
	jne L_413708
L_95814:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_95737
L_95815:
	movl %r14d,0x0(%r15)
	movq %r10,%r15
	jmp L_95739
.p2align 0x4
L_413708:
L_95813:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413709:
L_95808:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movslq 0x20(%rbp),%r13
	movq 0x10(%r14),%r11
	movq 0x0(%r11,%r13,8),%r10
	salq $0x4,%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r11,%r13,1),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,0x8(%r8)
	jne L_413711
L_95810:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_95737
L_95811:
	movl %r14d,0x0(%r15)
	movq %r10,%r15
	jmp L_95739
.p2align 0x4
L_413711:
L_95809:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413712:
L_95804:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movslq 0x20(%rbp),%r13
	movq 0x10(%r14),%r11
	movq 0x0(%r11,%r13,8),%r10
	salq $0x4,%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r11,%r13,1),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,0x8(%r8)
	jne L_413714
L_95806:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_95737
L_95807:
	movl %r14d,0x0(%r15)
	movq %r10,%r15
	jmp L_95739
.p2align 0x4
L_413714:
L_95805:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413715:
L_95779:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movslq 0x20(%rbp),%r14
	movq 0x28(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x40(%rbp)
	movq 0x20(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x50(%rbp)
	movq 0x18(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_95780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_413716:
L_95778:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movslq 0x20(%rbp),%r15
	salq $0x4,%r15
	movq 0x0(%r13,%r15,1),%r13
	movq %r13,%r15
	jmp L_95739
.p2align 0x4
L_413717:
L_95774:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movslq 0x20(%rbp),%r13
	movq 0x10(%r14),%r11
	movq 0x0(%r11,%r13,8),%r10
	salq $0x4,%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r11,%r13,1),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,0x8(%r8)
	jne L_413719
L_95776:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_95737
L_95777:
	movl %r14d,0x0(%r15)
	movq %r10,%r15
	jmp L_95739
.p2align 0x4
L_413719:
L_95775:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413720:
L_95770:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movslq 0x20(%rbp),%r13
	movq 0x10(%r14),%r11
	movq 0x0(%r11,%r13,8),%r10
	salq $0x4,%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r11,%r13,1),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,0x8(%r8)
	jne L_413722
L_95772:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_95737
L_95773:
	movl %r14d,0x0(%r15)
	movq %r10,%r15
	jmp L_95739
.p2align 0x4
L_413722:
L_95771:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413723:
L_95747:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movslq 0x20(%rbp),%r14
	movq 0x20(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r11),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_95748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_413724:
L_95730:
	movq 0x8(%rbp),%r14
	movq $0x92F,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413725:
L_95992:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413726:
L_95993:
	movq (globalObjptr+0xC08)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_95729
.p2align 0x4
.long 0x56E
L_95742:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x20(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jz L_413728
L_95744:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413728:
L_95736:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_95737
L_95738:
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r15
	jmp L_95739
.p2align 0x4
.long 0x56E
L_95735:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10DC,%r15
	jne L_95736
L_95740:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
.long 0x571
L_95970:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq %r14,%r15
	andq $0x1,%r15
	jz L_95972
L_95988:
	shrq $0x1,%r14
	movl %r14d,%r13d
	testl %r13d,%r13d
	jz L_413732
L_95990:
	movq 0x38(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_95737
L_95991:
	movl %r13d,0x0(%r14)
	movq 0x40(%rbp),%r15
	jmp L_95739
.p2align 0x4
L_413732:
L_95972:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_95973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0xC95
L_95930:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144C,%r14
	jne L_413735
L_95932:
	cmpq $0x1,0x8(%r15)
	je L_413734
L_95933:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413734:
L_95934:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_95935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1394
.p2align 0x4
L_413735:
L_95931:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_95881:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_95882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x56E
isUnit_1:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r14),%r15
L_95918:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_95919
L_95921:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB2,%r14
	jne L_95919
L_95922:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_413738
L_95924:
	testl %r11d,%r11d
	jnz L_413736
L_95926:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413736:
L_95919:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_95737
L_95920:
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r15
	jmp L_95739
.p2align 0x4
L_413738:
L_95923:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x55F
L_95836:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95837
L_95856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_95857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95857
.p2align 0x4
.long 0x68C
L_95857:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_95837:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x40(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_95838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x56E
L_95821:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r14d
	movl %r14d,0x20(%rbp)
	testl %r14d,%r14d
	jnz L_413742
L_95822:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413742:
L_95823:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_95737
L_95824:
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r15
	jmp L_95739
.p2align 0x4
.long 0x571
L_95780:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x58(%rbp),%r13
	movq %r13,0x48(%rbp)
	testl %r14d,%r14d
	jnz L_413744
L_95781:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413744:
L_95782:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_95783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1394
.p2align 0x4
.long 0x571
L_95748:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq %r14,%r15
	andq $0x1,%r15
	jz L_95750
L_95766:
	shrq $0x1,%r14
	movl %r14d,%r13d
	testl %r13d,%r13d
	jz L_413746
L_95768:
	movq 0x38(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_95737
L_95769:
	movl %r13d,0x0(%r14)
	movq 0x40(%rbp),%r15
	jmp L_95739
.p2align 0x4
L_413746:
L_95750:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_95751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x529
L_95973:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95974
L_95986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_95987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95987
.p2align 0x4
.long 0x5A2
L_95987:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_95974:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x38(%rbp),%r11
	cmpq %r11,%r14
	je x_286
L_95975:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
x_286:
	cmpb $0x1,0x0(%r15)
	je L_413748
L_95976:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413748:
L_95977:
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_95978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x5B7
L_95935:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_95936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
.long 0x1
L_95882:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_95883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x157E
L_95838:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x68(%rbp)
	movq $0x3,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_95839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x529
L_95783:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_95784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
.long 0x529
L_95751:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95752
L_95764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_95765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95765
.p2align 0x4
.long 0x5A2
L_95765:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_95752:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x38(%rbp),%r14
	movq 0x0(%r13),%r11
	cmpq %r11,%r14
	je x_284
L_95753:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r11d
	movl %r11d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x48(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r11)
	movq %r13,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r13)
	movb $0x1,0x0(%r15)
x_284:
	cmpb $0x1,0x0(%r15)
	je L_413750
L_95754:
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
L_413750:
L_95755:
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_95756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
.long 0x100D
L_95978:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95979
L_95983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_95984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95984
.p2align 0x4
.long 0x157A
L_95984:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_95979:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x38(%rbp),%r11
	cmpq %r11,%r14
	je L_95981
L_95980:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_95981:
	movb $0x0,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
.long 0x5B6
L_95936:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x28(%rbp)
	testl %r15d,%r15d
	jnz L_413754
L_95937:
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_95938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_413754:
L_95956:
	movq 0x48(%rbp),%r15
L_95942:
	movq 0x40(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_95737
L_95943:
	movl %r13d,0x0(%r14)
	jmp L_95739
.p2align 0x4
.long 0x4AF
L_95883:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF90)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_95884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x157F
L_95839:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_95840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x100D
L_95784:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movq 0x60(%rbp),%r14
	movq %r14,0x28(%rbp)
	testl %r15d,%r15d
	movl %r15d,0x20(%rbp)
	jnz L_413756
L_95785:
	movq 0x30(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_95786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_5
.p2align 0x4
L_413756:
L_95803:
	movq 0x40(%rbp),%r15
L_95789:
	movq 0x38(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_95737
L_95790:
	movl %r13d,0x0(%r14)
	jmp L_95739
.p2align 0x4
.long 0x100D
L_95756:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95757
L_95761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_95762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95762
.p2align 0x4
.long 0x157A
L_95762:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_95757:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x38(%rbp),%r11
	cmpq %r11,%r14
	je L_95759
L_95758:
	movb 0x0(%r15),%r10b
	movq $0x1141,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x10(%r9)
	addq $0x28,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x18(%r9)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x2659,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r11,0x0(%r13)
	movb $0x1,0x0(%r15)
L_95759:
	movb $0x0,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x1,%r15
	jmp L_95739
.p2align 0x4
.long 0x543
L_95938:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_95939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_5
.p2align 0x4
.long 0x5AF
L_95884:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_95885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xF80
L_95840:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95841
L_95854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_95855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95855
.p2align 0x4
.long 0xF81
L_95855:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_95841:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1D77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_95842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x157B
L_95786:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95787
L_95801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_95802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95802
.p2align 0x4
.long 0x14BF
L_95802:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_95787:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_413761
L_95788:
	jmp L_95789
.p2align 0x4
L_413761:
L_95791:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	movq 0x28(%rbp),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_95792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1581
L_95939:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95940
L_95954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_95955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95955
.p2align 0x4
.long 0x1585
L_95955:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_95940:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_413763
L_95941:
	jmp L_95942
.p2align 0x4
L_413763:
L_95944:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	movq 0x48(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_95945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x51E
L_95885:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95886
L_95908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_95909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95909
.p2align 0x4
.long 0x4AE
L_95909:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_95886:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_95887:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_95737
L_95888:
	cmpq $0x1,%r14
	je L_413765
L_95889:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_95887
.p2align 0x4
L_413765:
L_95890:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95891
L_95906:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_95907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95907
.p2align 0x4
.long 0x4E6
L_95907:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_95891:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_413766
L_95892:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_122:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_413766:
L_95905:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_122
.p2align 0x4
.long 0x1580
L_95842:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95843
L_95852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_95853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95853
.p2align 0x4
.long 0x11AB
L_95853:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_95843:
	movslq 0x28(%rbp),%r15
	movq 0x58(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_413771
L_95845:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_413770
L_95846:
	movl 0x0(%r13),%r15d
	movl %r15d,0x60(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_95847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_413770:
L_95851:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413771:
L_95844:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x157C
L_95792:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95793
L_95799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_95800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95800
.p2align 0x4
.long 0x11BC
L_95800:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_95793:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCA28)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x3885,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movl $0x1,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_95794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x1582
L_95945:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95946
L_95952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_95953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95953
.p2align 0x4
.long 0x1584
L_95953:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_95946:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCA28)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x3885,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movl $0x1,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_95947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x1
rev_122:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_413777
L_95893:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_95894:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413776
.p2align 0x4,,0x7
L_95895:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_413775
L_95896:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_95894
.p2align 0x4
L_413775:
L_95898:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_413776:
L_95902:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_95903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95903
.p2align 0x4
.long 0x45B
L_95903:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_95895
.p2align 0x4
L_413777:
L_95904:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_95898
.p2align 0x4
.long 0xCA5
L_95847:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95848
L_95849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_95850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95850
.p2align 0x4
.long 0x137B
L_95850:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_95848:
	movq $0x9D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
	jmp L_95739
.p2align 0x4
.long 0x157D
L_95794:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x68(%rbp)
	movl $0x0,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_95795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1583
L_95947:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_95948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1
bug_254:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95899
L_95900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_95901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95901
.p2align 0x4
.long 0x451
L_95901:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_95899:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x157B
L_95795:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95796
L_95797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_95798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95798
.p2align 0x4
.long 0x14BF
L_95798:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_95796:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x35,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x9D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq $0x1969,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq %r9,0x0(%r13)
	jmp L_95789
.p2align 0x4
.long 0x1374
L_95948:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_95949
L_95950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_95951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_95951
.p2align 0x4
.long 0x111C
L_95951:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_95949:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x35,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x9D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x50(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq $0x1969,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq %r9,0x0(%r13)
	jmp L_95942
.text
.p2align 0x4
.globl x_1315
.hidden x_1315
x_1315:
L_95996:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_95997
L_96051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_96052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96052
.p2align 0x4
.long 0x45F
L_96052:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_95997:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_413791
L_95999:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_413790
L_96000:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_96002:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_413789
L_96043:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xDA1,%r10
	jne L_413788
L_96044:
	movq 0x8(%r14),%r10
	cmpq %r11,0x0(%r14)
	movq %r11,(localObjptr+0x8)(%rip)
	je L_413785
L_96003:
	incl %ecx
	jo L_413784
L_96005:
	cmpq $0x1,%r15
	je L_413782
L_96006:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_96002
.p2align 0x4
L_413782:
L_96007:
L_96008:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_413783
L_96010:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_287
L_96042:
	movl %ecx,0x0(%r15)
x_287:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_413783:
L_96009:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413784:
L_96004:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413785:
L_96046:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96009
L_96047:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_413786
L_96049:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413786:
L_96048:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413788:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_96003
.p2align 0x4
L_413789:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_96003
.p2align 0x4
L_413790:
L_96050:
	xorl %ecx,%ecx
	jmp L_96008
.p2align 0x4
L_413791:
L_95998:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_96012:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_96013:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_96014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_96014:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF130)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_96015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_96015:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_96016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_96016:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96017
L_96040:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_96041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96041
.p2align 0x4
.long 0x4AE
L_96041:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_96017:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_96018:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_96004
L_96019:
	cmpq $0x1,%r14
	je L_413793
L_96020:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_96018
.p2align 0x4
L_413793:
L_96021:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96022
L_96038:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_96039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96039
.p2align 0x4
.long 0x4E6
L_96039:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_96022:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_413794
L_96023:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_123:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_413794:
L_96037:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_123
.p2align 0x4
.long 0x1
rev_123:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_413800
L_96024:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_96025:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413799
.p2align 0x4,,0x7
L_96026:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_413798
L_96027:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_96025
.p2align 0x4
L_413798:
L_96029:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_413799:
L_96034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_96035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96035
.p2align 0x4
.long 0x45B
L_96035:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_96026
.p2align 0x4
L_413800:
L_96036:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_96029
.p2align 0x4
.long 0x1
L_96030:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96031
L_96032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_96033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96033
.p2align 0x4
.long 0x451
L_96033:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_96031:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl keepVar_0
.hidden keepVar_0
keepVar_0:
L_96053:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_96054
L_96116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_96117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96117
.p2align 0x4
.long 0x45F
L_96117:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_96054:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_96055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1428
.p2align 0x4
.long 0x65C
L_96055:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_96056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_20
.p2align 0x4
.long 0x458
L_96056:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%rbp)
	cmpq $0x1,%r11
	je L_413816
	cmpq $0x2,%r11
	je L_413815
L_96057:
	movq 0x8(%r11),%r15
	movq 0x18(%rbp),%r11
	cmpq %r15,0x8(%r11)
	je L_413814
L_96058:
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r13
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_413813
L_96060:
	movq %r14,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_413812
L_96061:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_96063:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_413811
L_96104:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xCF4,%r11
	jne L_413810
L_96105:
	movq 0x8(%r15),%r11
	cmpq 0x0(%r15),%r13
	movq %r13,(localObjptr+0x8)(%rip)
	je L_413807
L_96064:
	incl %ecx
	jo L_413806
L_96066:
	cmpq $0x1,%r14
	je L_413803
L_96067:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x8)(%rip),%r13
	jmp L_96063
.p2align 0x4
L_413803:
L_96068:
L_96069:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_413805
L_96071:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_96073
L_96103:
	movl %ecx,0x0(%r15)
L_96073:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_413805:
L_96070:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413806:
L_96065:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413807:
L_96107:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96070
L_96108:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_413808
L_96111:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_96110:
	movq 0x0(%rbp),%r14
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413808:
L_96109:
	movq %r11,%r15
	jmp L_96110
.p2align 0x4
L_413810:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_96064
.p2align 0x4
L_413811:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_96064
.p2align 0x4
L_413812:
L_96112:
	xorl %ecx,%ecx
	jmp L_96069
.p2align 0x4
L_413813:
L_96059:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413814:
L_96113:
	movq 0x0(%rbp),%r15
	jmp L_96110
.p2align 0x4
L_413815:
L_96115:
	movq 0x0(%rbp),%r15
	jmp L_96110
.p2align 0x4
L_413816:
L_96114:
	movq 0x0(%rbp),%r15
	jmp L_96110
.p2align 0x4
.long 0x1
L_96074:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_96075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_96075:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDFF0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_96076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_96076:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_96077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_96077:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96078
L_96101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_96102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96102
.p2align 0x4
.long 0x4AE
L_96102:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_96078:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_96079:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_96065
L_96080:
	cmpq $0x1,%r14
	je L_413817
L_96081:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_96079
.p2align 0x4
L_413817:
L_96082:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96083
L_96099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_96100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96100
.p2align 0x4
.long 0x4E6
L_96100:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_96083:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_413818
L_96084:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_124:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_413818:
L_96098:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_124
.p2align 0x4
.long 0x1
rev_124:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_413824
L_96085:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_96086:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413823
.p2align 0x4,,0x7
L_96087:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_413822
L_96088:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_96086
.p2align 0x4
L_413822:
L_96090:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_413823:
L_96095:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_96096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96096
.p2align 0x4
.long 0x45B
L_96096:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_96087
.p2align 0x4
L_413824:
L_96097:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_96090
.p2align 0x4
.long 0x1
L_96091:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96092
L_96093:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_96094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96094
.p2align 0x4
.long 0x451
L_96094:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_96092:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl concat_2
.hidden concat_2
concat_2:
L_96118:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_96119
L_96162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_96163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96163
.p2align 0x4
.long 0x451
L_96163:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_96119:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_413841
L_96120:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_96121:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413840
.p2align 0x4,,0x7
L_96122:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x296F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_413826
L_96123:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_96121
.p2align 0x4
L_413826:
L_96124:
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_96125:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413839
.p2align 0x4,,0x7
L_96126:
	movq $0x296F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_413827
L_96127:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_96125
.p2align 0x4
L_413827:
L_96128:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_413834
L_96129:
	movq 0x8(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_96130:
	addq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	je L_413828
L_96131:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_96130
.p2align 0x4
L_413828:
L_96132:
	testq %r15,%r15
	jz L_413833
L_96133:
	cmpq $0x7FFFFFFF,%r15
	ja L_413832
L_96134:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1429,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_96135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96135
.p2align 0x4
.long 0x49B
L_96135:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_96136:
	movq 0x10(%rbp),%r10
	movq 0x8(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1083:
	cmpq 0x18(%rbp),%r14
	jnl L_413831
.p2align 0x4,,0x7
loop_1084:
	cmpq 0x0(%r11),%r13
	jl L_413830
L_96139:
	cmpq $0x1,%r10
	je L_413829
L_96140:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_1084
.p2align 0x4
L_413829:
L_96141:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413830:
L_96142:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_1083
.p2align 0x4
L_413831:
L_96137:
	movq $0x19,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413832:
L_96144:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413833:
L_96145:
	movq (globalObjptr+0x6A8)(%rip),%r14
	xchgq %r14,%r15
	jmp L_96136
.p2align 0x4
L_413834:
L_96146:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%rdx
	movq %rdx,0x18(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%rdx
	movq %r13,0x10(%rbp)
	je L_413838
L_96147:
	testq %rdx,%rdx
	jz L_413837
L_96148:
	cmpq $0x7FFFFFFF,%rdx
	ja L_96144
L_96149:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1429,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_96150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96150
.p2align 0x4
.long 0x4A4
L_96150:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_96151:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1085:
	cmpq 0x18(%rbp),%r14
	jnl L_413835
L_96153:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_1085
.p2align 0x4
L_413835:
L_96152:
	movq $0x19,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413837:
L_96155:
	movq (globalObjptr+0x6B0)(%rip),%r15
	jmp L_96151
.p2align 0x4
L_413838:
L_96156:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413839:
L_96157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_96158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96158
.p2align 0x4
.long 0x45B
L_96158:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_96126
.p2align 0x4
L_413840:
L_96159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_96160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96160
.p2align 0x4
.long 0x45B
L_96160:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_96122
.p2align 0x4
L_413841:
L_96161:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp unfoldi_6
.text
.p2align 0x4
.globl get_40
.hidden get_40
get_40:
L_96164:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_96165
L_96219:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_96220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96220
.p2align 0x4
.long 0x45F
L_96220:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_96165:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_413852
L_96167:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_413851
L_96168:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_96170:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_413850
L_96211:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD10,%r10
	jne L_413849
L_96212:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_413846
L_96171:
	incl %ecx
	jo L_413845
L_96173:
	cmpq $0x1,%r14
	je L_413843
L_96174:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_96170
.p2align 0x4
L_413843:
L_96175:
L_96176:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_413844
L_96178:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_288
L_96210:
	movl %ecx,0x0(%r15)
x_288:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_413844:
L_96177:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413845:
L_96172:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413846:
L_96214:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96177
L_96215:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_413847
L_96217:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413847:
L_96216:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413849:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_96171
.p2align 0x4
L_413850:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_96171
.p2align 0x4
L_413851:
L_96218:
	xorl %ecx,%ecx
	jmp L_96176
.p2align 0x4
L_413852:
L_96166:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_96180:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_96181:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_96182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_96182:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDF28)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_96183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_96183:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_96184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_96184:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96185
L_96208:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_96209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96209
.p2align 0x4
.long 0x4AE
L_96209:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_96185:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_96186:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_96172
L_96187:
	cmpq $0x1,%r14
	je L_413854
L_96188:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_96186
.p2align 0x4
L_413854:
L_96189:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96190
L_96206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_96207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96207
.p2align 0x4
.long 0x4E6
L_96207:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_96190:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_413855
L_96191:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_125:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_413855:
L_96205:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_125
.p2align 0x4
.long 0x1
rev_125:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_413861
L_96192:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_96193:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413860
.p2align 0x4,,0x7
L_96194:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_413859
L_96195:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_96193
.p2align 0x4
L_413859:
L_96197:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_413860:
L_96202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_96203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96203
.p2align 0x4
.long 0x45B
L_96203:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_96194
.p2align 0x4
L_413861:
L_96204:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_96197
.p2align 0x4
.long 0x1
L_96198:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96199
L_96200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_96201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96201
.p2align 0x4
.long 0x451
L_96201:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_96199:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1335
.hidden x_1335
x_1335:
L_96221:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_96222
L_96275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_96276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96276
.p2align 0x4
.long 0x45F
L_96276:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_96222:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_413872
L_96224:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_413871
L_96225:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_96227:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_413870
L_96267:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xCF5,%r10
	jne L_413869
L_96268:
	movq 0x8(%r14),%r10
	cmpq 0x0(%r14),%r11
	movq %r11,(localObjptr+0x8)(%rip)
	je L_413866
L_96228:
	incl %ecx
	jo L_413865
L_96230:
	cmpq $0x1,%r15
	je L_413863
L_96231:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_96227
.p2align 0x4
L_413863:
L_96232:
L_96233:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_413864
L_96235:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_289
L_96266:
	movl %ecx,0x0(%r15)
x_289:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_413864:
L_96234:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413865:
L_96229:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413866:
L_96270:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96234
L_96271:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_413867
L_96273:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413867:
L_96272:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413869:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_96228
.p2align 0x4
L_413870:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_96228
.p2align 0x4
L_413871:
L_96274:
	xorl %ecx,%ecx
	jmp L_96233
.p2align 0x4
L_413872:
L_96223:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_96237:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_96238:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_96239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_96239:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF138)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_96240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_96240:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_96241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_96241:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96242
L_96264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_96265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96265
.p2align 0x4
.long 0x4AE
L_96265:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_96242:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_96243:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_96229
L_96244:
	cmpq $0x1,%r14
	je L_413874
L_96245:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_96243
.p2align 0x4
L_413874:
L_96246:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96247
L_96262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_96263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96263
.p2align 0x4
.long 0x4E6
L_96263:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_96247:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_413875
L_96248:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_126:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_413875:
L_96261:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_126
.p2align 0x4
.long 0x1
rev_126:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_413881
L_96249:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_96250:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413880
.p2align 0x4,,0x7
L_96251:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_413879
L_96252:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_96250
.p2align 0x4
L_413879:
L_96254:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_413880:
L_96258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_96259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96259
.p2align 0x4
.long 0x45B
L_96259:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_96251
.p2align 0x4
L_413881:
L_96260:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_96254
.p2align 0x4
.long 0x1
bug_255:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96255
L_96256:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_96257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96257
.p2align 0x4
.long 0x451
L_96257:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_96255:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl keepAllMap_0
.hidden keepAllMap_0
keepAllMap_0:
L_96277:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_96278
L_96707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_96708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96708
.p2align 0x4
.long 0x45C
L_96708:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_96278:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %r14,%rdx
	jne L_96280
L_96281:
	testq %rdx,%rdx
	jz L_413933
L_96282:
	cmpq $0x7FFFFFFF,%rdx
	ja L_413932
L_96283:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14DB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_96284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96284
.p2align 0x4
.long 0x495
L_96284:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_96285:
	movl $0x0,0x30(%rbp)
	movq $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_1086:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413931
.p2align 0x4,,0x7
L_96286:
	movq 0x38(%rbp),%r14
	cmpq 0x20(%rbp),%r14
	jnl L_413930
L_96288:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_413928
L_96289:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1909,%r15
	je L_413914
	cmpq $0x190A,%r15
	je L_413912
	cmpq $0x190B,%r15
	je L_413911
	cmpq $0x190C,%r15
	je L_413898
	cmpq $0x190D,%r15
	je L_413897
L_96290:
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r10
	movq 0x48(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x40(%r10),%r9
	movq %r9,0x50(%rbp)
	movq 0x30(%r10),%r9
	movq %r9,0x58(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x60(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq %r10,0x70(%rbp)
	cmpq $0x1,%r14
	jne L_413896
L_96458:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xEB9,%r15
	je L_413884
	cmpq $0xEBA,%r15
	je L_413883
L_96459:
	movl 0x30(%rbp),%ecx
	movq $0x1,%r15
.p2align 0x4,,0x7
L_96296:
	movl %ecx,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x38(%rbp)
	jmp loop_1086
.p2align 0x4
L_413883:
L_96461:
	movq %r11,0x80(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x78(%rbp)
L_96429:
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_96430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1435
.p2align 0x4
L_413884:
L_96460:
	movq %r11,0x48(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
yes_1:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413895
.p2align 0x4,,0x7
L_96298:
	movq 0x58(%rbp),%r15
	movq 0x48(%r15),%r14
	movq 0x40(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x38(%r15),%r13
	movq 0x30(%r15),%r11
	movq 0x28(%r15),%r10
	movq 0x20(%r15),%r9
	movq 0x10(%r15),%r8
	movq %r8,0x60(%rbp)
	movq 0x8(%r15),%r8
	movq %r8,0x78(%rbp)
	movq 0x0(%r15),%r8
	movq %r8,0x80(%rbp)
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r8
	shrq $0x1,%r8
	cmpq $0xEB6,%r8
	je L_413894
	cmpq $0xEB7,%r8
	je L_413892
	cmpq $0xEB8,%r8
	je L_413891
	cmpq $0xEBA,%r8
	je L_413889
	cmpq $0xEBB,%r8
	je L_413888
	cmpq $0xEBC,%r8
	je L_413887
L_96299:
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
L_96300:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413886
.p2align 0x4,,0x7
L_96301:
	movq $0x9D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
.p2align 0x4,,0x7
L_96302:
	movl 0x30(%rbp),%r14d
	incl %r14d
	jno L_413885
L_96303:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413885:
	movl %r14d,%ecx
	jmp L_96296
.p2align 0x4
L_413886:
L_96305:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96306
.p2align 0x4
.long 0x1588
L_96306:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_96301
.p2align 0x4
L_413887:
L_96407:
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_96408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_19
.p2align 0x4
L_413888:
L_96406:
	movq %r15,0x40(%rbp)
	jmp L_96300
.p2align 0x4
L_413889:
L_96386:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r8d
	movslq %r8d,%rsp
	cmpq %rsp,%r15
	jne L_413890
L_96388:
	movl %r8d,0x80(%rbp)
	movq $0x3EA1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r10,0x10(%r15)
	movq %r9,0x18(%r15)
	movq %r14,0x20(%r15)
	movq %r15,0x78(%rbp)
	addq $0x30,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x78,%rbp
	leaq (unzip_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
L_413890:
L_96280:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413891:
L_96341:
	movq %r9,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x34(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (detupleSlots_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1394
.p2align 0x4
L_413892:
L_96308:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_413893
L_96309:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_96310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_413893:
L_96340:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413894:
L_96307:
	movq %r15,0x40(%rbp)
	jmp L_96300
.p2align 0x4
L_413895:
L_96426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_96427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96427
.p2align 0x4
.long 0x1595
L_96427:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_96298
.p2align 0x4
L_413896:
L_96291:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_96292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1394
.p2align 0x4
L_413897:
L_96692:
	movq 0x40(%r14),%r15
	movq 0x38(%r14),%r11
	movq 0x30(%r14),%r10
	movq 0x28(%r14),%r9
	movq 0x20(%r14),%r8
	movq 0x18(%r14),%rsp
	movq 0x10(%r14),%rsi
	movq 0x8(%r14),%rdi
	movq 0x0(%r14),%rdx
	movq $0xCCB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r10,0x10(%r14)
	movq %r9,0x18(%r14)
	movq %r8,0x20(%r14)
	movq %rsp,0x28(%r14)
	movq %rsi,0x30(%r14)
	movq %rdi,0x38(%r14)
	movq %rdx,0x40(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_96693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyStatement_0
.p2align 0x4
L_413898:
L_96632:
	movq 0x0(%r14),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x68(%rbp)
	cmpq $0x1,%r15
	jne L_413910
.p2align 0x4,,0x7
keep_0:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413909
.p2align 0x4,,0x7
L_96642:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB7,%r14
	je L_413907
	cmpq $0xEB8,%r14
	je L_413906
	cmpq $0xEB9,%r14
	je L_413905
	cmpq $0xEBA,%r14
	je L_413903
	cmpq $0xEBB,%r14
	je L_413901
	cmpq $0xEBC,%r14
	je L_413899
L_96643:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_96644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1396
.p2align 0x4
L_413899:
L_96681:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_96280
L_96683:
	movl %r13d,0x78(%rbp)
	movq $0x4025,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x70,%rbp
	leaq (L_96684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_413901:
L_96680:
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
L_96649:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_413902
.p2align 0x4,,0x7
L_96650:
	movq $0x9D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_96302
.p2align 0x4
L_413902:
L_96651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96652
.p2align 0x4
.long 0x15AF
L_96652:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_96650
.p2align 0x4
L_413903:
L_96673:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_96280
L_96675:
	movl %r13d,0x78(%rbp)
	movq $0x4025,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x70,%rbp
	leaq (L_96676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_413905:
L_96672:
	movq %r15,0x40(%rbp)
	jmp L_96649
.p2align 0x4
L_413906:
L_96663:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x34(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_96664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1396
.p2align 0x4
L_413907:
L_96656:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_96280
L_96658:
	movl %r13d,0x78(%rbp)
	movq $0x4025,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x70,%rbp
	leaq (L_96659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_413909:
L_96688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96689
.p2align 0x4
.long 0x15B2
L_96689:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_96642
.p2align 0x4
L_413910:
L_96633:
	movq %r11,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_96634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1396
.p2align 0x4
L_413911:
L_96587:
	movq 0x30(%r14),%r15
	movq %r15,0x98(%rbp)
	movq 0x28(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x78(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x80(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x90,%rbp
	leaq (L_96588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp canon_0
.p2align 0x4
L_413912:
L_96539:
	movq 0x18(%r14),%r11
	movq 0x10(%r14),%r10
	movq %r10,0x48(%rbp)
	movq 0x8(%r14),%r10
	movq %r10,0x50(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0x58(%rbp)
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_413913
L_96586:
	movq %r13,%r15
	jmp L_96302
.p2align 0x4
L_413913:
L_96540:
	movq %r14,0x68(%rbp)
	movq %r11,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x68,%rbp
	leaq (L_96541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_53
.p2align 0x4
L_413914:
L_96462:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xEB9,%r13
	je L_413927
L_96463:
	cmpq $0x1,%r14
	jne L_413926
.p2align 0x4,,0x7
L_96466:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB6,%r14
	je L_413924
	cmpq $0xEB7,%r14
	je L_413922
	cmpq $0xEB8,%r14
	je L_413920
	cmpq $0xEBA,%r14
	je L_413919
	cmpq $0xEBB,%r14
	je L_413917
	cmpq $0xEBC,%r14
	je L_413915
L_96467:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_413915:
L_96525:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_96526:
	cmpq $0x1,%r15
	jne L_413916
.p2align 0x4,,0x7
L_96432:
	movl 0x30(%rbp),%ecx
	movq $0x1,%r15
	jmp L_96296
.p2align 0x4
L_413916:
L_96527:
	movq %r15,0x40(%rbp)
doitP_0:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_96471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_413917:
L_96521:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_96522:
	cmpq $0x1,%r15
	je L_96432
L_96523:
	movq %r15,0x40(%rbp)
	jmp doitP_0
.p2align 0x4
L_413919:
L_96514:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq $0x1,0x40(%rbp)
L_96515:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_96516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1435
.p2align 0x4
L_413920:
L_96510:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_96511:
	cmpq $0x1,%r15
	je L_96432
L_96512:
	movq %r15,0x40(%rbp)
	jmp doitP_0
.p2align 0x4
L_413922:
L_96506:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_96507:
	cmpq $0x1,%r15
	je L_96432
L_96508:
	movq %r15,0x40(%rbp)
	jmp doitP_0
.p2align 0x4
L_413924:
L_96468:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_96469:
	cmpq $0x1,%r15
	je L_96432
L_96470:
	movq %r15,0x40(%rbp)
	jmp doitP_0
.p2align 0x4
L_413926:
L_96464:
	movq %r15,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_96465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
L_413927:
L_96538:
	movq 0x40(%rbp),%r15
	jmp L_96302
.p2align 0x4
L_413928:
L_96700:
	movq 0x10(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xEB9,%r15
	je L_413929
L_96701:
	movq %r13,%r15
	jmp L_96302
.p2align 0x4
L_413929:
L_96702:
	movl 0x30(%rbp),%ecx
	movq $0x1,%r15
	jmp L_96296
.p2align 0x4
L_413930:
L_96287:
	movq 0x28(%rbp),%r15
	movq $0x9D5,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x9D7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	movq $0x3F01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	jmp unfoldi_6
.p2align 0x4
L_413931:
L_96703:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_96704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96704
.p2align 0x4
.long 0x15B3
L_96704:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_96286
.p2align 0x4
L_413932:
L_96705:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413933:
L_96706:
	movq (globalObjptr+0xFC8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_96285
.p2align 0x4
.long 0x1596
L_96430:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movb 0x90(%rbp),%r15b
	movb %r15b,0x34(%rbp)
	testb %r15b,%r15b
	jnz L_96432
L_96433:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x7,%r14
	je array_1
	cmpq $0x45,%r14
	je L_413937
L_96434:
	movq %r15,%r14
	andq $0x3,%r14
	jnz yes_2
L_96435:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEF5,%r14
	je array_2
yes_2:
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp yes_1
.p2align 0x4
array_2:
array_1:
	movq 0x50(%rbp),%r15
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_413936
L_96438:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x48(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (x_290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1394
.p2align 0x4
L_413936:
L_96332:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413937:
L_96447:
	movq 0x50(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_96332
L_96449:
	movq 0x0(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x48(%rbp),%r14
	movq %r14,0x98(%rbp)
	addq $0x90,%rbp
	leaq (deref_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1394
.p2align 0x4
.long 0x1591
L_96408:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96409
L_96424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96425
.p2align 0x4
.long 0x1594
L_96425:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96409:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	movl %r8d,%esp
	movslq %esp,%rsi
	cmpq %rsi,%r8
	jne L_96280
L_96411:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r8
	movl %r8d,%esi
	movslq %esi,%rdi
	cmpq %r8,%rdi
	jne L_96280
L_96413:
	cmpl %esp,%esi
	jne L_413940
L_96415:
	movl %esp,0x88(%rbp)
	movq $0x38AB,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r13,0x8(%r8)
	movq %r11,0x10(%r8)
	movq %r10,0x18(%r8)
	movq %r14,0x20(%r8)
	addq $0x38,%r12
	movq %r15,0x0(%r8)
	movq %r9,0x28(%r8)
	movq %r8,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_96416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
L_413940:
L_96321:
	movq (globalObjptr+0x4E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x14A0
unzip_0:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96389
L_96404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96405
.p2align 0x4
.long 0x158B
L_96405:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96389:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x34(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_96280
L_96391:
	movq $0x400D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	movl %r13d,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_96392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x14A0
detupleSlots_0:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_96342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x1589
L_96310:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96311
L_96338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_96339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96339
.p2align 0x4
.long 0x158C
L_96339:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_96311:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_413950
L_96313:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1C,%r15
	jne L_413949
L_96315:
	movq 0x0(%r13),%r15
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x50(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_96280
L_96317:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r11
	jne L_96280
L_96319:
	cmpl %r10d,%r9d
	jne L_96321
L_96322:
	movq $0x38C5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x20(%r11)
	addq $0x38,%r12
	movq %r14,0x0(%r11)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%r11)
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%r11)
	movl %r10d,0x80(%rbp)
	movq %r13,0x28(%r11)
	movq %r11,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_96323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
L_413949:
L_96314:
	movq (globalObjptr+0x2140)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_413950:
L_96312:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1586
L_96292:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x88(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_96293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
.long 0x15A5
L_96693:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96694
L_96698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_96699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96699
.p2align 0x4
.long 0x5C6
L_96699:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_96694:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_96432
	cmpq $0x2,%r14
	je L_413952
L_96695:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x9D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movq %r14,%r15
	jmp L_96302
.p2align 0x4
L_413952:
L_96697:
	movq (globalObjptr+0xFD0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1582
L_96644:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp global_0
.p2align 0x4
.long 0x15AE
L_96684:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96685
L_96686:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96687
.p2align 0x4
.long 0x15B0
L_96687:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_96685:
	movq $0x1D79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	jmp L_96649
.p2align 0x4
.long 0x1582
L_96676:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96677
L_96678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96679
.p2align 0x4
.long 0x159B
L_96679:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_96677:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x40(%rbp)
	jmp L_96649
.p2align 0x4
.long 0x1582
L_96664:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp global_0
.p2align 0x4
.long 0x15B1
L_96659:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96660
L_96661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96662
.p2align 0x4
.long 0x15AF
L_96662:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_96660:
	movq $0x1D6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	jmp L_96649
.p2align 0x4
.long 0x1599
L_96634:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_96635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp global_0
.p2align 0x4
.long 0x15A2
L_96588:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96589
L_96630:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_96631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96631
.p2align 0x4
.long 0x15AC
L_96631:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_96589:
	movq $0x9D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x88(%rbp)
	addq $0x20,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x80(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x40(%rbp),%r11
	movq %r11,0x10(%r14)
	cmpq $0x1,%r13
	je L_413964
L_96590:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xEBA,%r15
	jne doit_87
L_96599:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq %r15,%r13
	andq $0xFF,%r13
	cmpq $0x1,%r13
	je L_413962
	cmpq $0x3,%r13
	je length_58
	cmpq $0x6,%r13
	je L_413960
	cmpq $0x59,%r13
	je length_57
L_96600:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_96601
L_96605:
L_96601:
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_96602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1435
.p2align 0x4
length_57:
	movq %r14,%r15
length_14:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_96332
L_96612:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_96613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_413960:
L_96619:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_96332
L_96621:
	movq 0x0(%r14),%r15
	movq %r15,0x98(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_96622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
length_58:
	movq %r14,%r15
	jmp length_14
.p2align 0x4
L_413962:
L_96606:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_96332
L_96608:
	movq 0x0(%r14),%r15
knownLength_0:
	movq $0x31A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x98(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_96609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_9
.p2align 0x4
doit_87:
doit_21:
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_96591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1404
.p2align 0x4
L_413964:
L_96629:
	movq 0x88(%rbp),%r15
	jmp L_96302
.p2align 0x4
.long 0x15A0
L_96541:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	movq %r14,0x60(%rbp)
	jz L_413967
L_96543:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
L_96544:
	andq $0x3,%r13
	jz L_413966
L_96545:
	movq 0x40(%rbp),%r15
	jmp L_96302
.p2align 0x4
L_413966:
L_96546:
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_66
.p2align 0x4
L_413967:
L_96542:
	movq 0x40(%rbp),%r15
	jmp L_96302
.p2align 0x4
.long 0x149F
L_96471:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96472
L_96503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96504
.p2align 0x4
.long 0x1590
L_96504:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96472:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBA,%r14
	je L_413969
	cmpq $0xEBC,%r14
	je L_413968
L_96473:
L_96474:
	movq $0x9D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_96302
.p2align 0x4
L_413968:
L_96482:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_96483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_18
.p2align 0x4
L_413969:
L_96475:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_96280
L_96477:
	movl %r13d,0x78(%rbp)
	movq $0x3877,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_96478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x159F
L_96516:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movb 0x78(%rbp),%r15b
	movb %r15b,0x34(%rbp)
	testb %r15b,%r15b
	jz L_413973
L_96517:
	cmpq $0x1,0x40(%rbp)
	je L_96432
	jmp doitP_0
.p2align 0x4
L_413973:
L_96520:
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp doitP_0
.p2align 0x4
.long 0x1599
L_96465:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,0x8(%r14)
	jne L_96466
L_96529:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB6,%r14
	je L_413979
	cmpq $0xEB7,%r14
	je L_413978
	cmpq $0xEB8,%r14
	je L_413977
	cmpq $0xEBA,%r14
	je L_413976
	cmpq $0xEBB,%r14
	je L_413975
	cmpq $0xEBC,%r14
	je L_413974
L_96530:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_413974:
L_96536:
	movq 0x58(%rbp),%r15
	jmp L_96526
.p2align 0x4
L_413975:
L_96535:
	movq 0x58(%rbp),%r15
	jmp L_96522
.p2align 0x4
L_413976:
L_96534:
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x58(%rbp),%r14
	movq %r14,0x40(%rbp)
	jmp L_96515
.p2align 0x4
L_413977:
L_96533:
	movq 0x58(%rbp),%r15
	jmp L_96511
.p2align 0x4
L_413978:
L_96532:
	movq 0x58(%rbp),%r15
	jmp L_96507
.p2align 0x4
L_413979:
L_96531:
	movq 0x58(%rbp),%r15
	jmp L_96469
.p2align 0x4
.long 0x1597
x_290:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_96439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x1597
deref_0:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_96450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x1592
L_96416:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96417
L_96422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_96423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96423
.p2align 0x4
.long 0x1593
L_96423:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_96417:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x931,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x70(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x80(%rbp)
	movq $0x403F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_96418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x149F
L_96392:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96393
L_96402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96403
.p2align 0x4
.long 0x1590
L_96403:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96393:
	movq $0x3883,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	movl 0x34(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_96394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x14A0
L_96342:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96343
L_96384:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96385
.p2align 0x4
.long 0x158B
L_96385:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96343:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_96312
L_96344:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1C,%r15
	jne L_96314
L_96345:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96280
L_96347:
	movl %r13d,0x80(%rbp)
	movq $0x38E3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x10,%r12
	addq $0x78,%rbp
	leaq (L_96348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_0
.p2align 0x4
.long 0x14A0
L_96323:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96324
L_96336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96337
.p2align 0x4
.long 0x158B
L_96337:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96324:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x931,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x80(%rbp)
	movq $0x3FD5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_96325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1587
L_96293:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r14d
	movl %r14d,0x34(%rbp)
	movq 0x88(%rbp),%r13
	movq %r13,0x50(%rbp)
	testl %r14d,%r14d
	jnz L_413990
L_96294:
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB9,%r15
	je L_413989
	cmpq $0xEBA,%r15
	je L_413988
L_96295:
	movl 0x30(%rbp),%ecx
	movq $0x1,%r15
	jmp L_96296
.p2align 0x4
L_413988:
L_96428:
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	jmp L_96429
.p2align 0x4
L_413989:
L_96297:
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp yes_1
.p2align 0x4
L_413990:
L_96457:
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp yes_1
.p2align 0x4
.long 0x15AE
L_96645:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96646
L_96654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96655
.p2align 0x4
.long 0x15B0
L_96655:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_96646:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_413991
L_96647:
	movq 0x8(%r14),%r15
L_96648:
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x10,%r12
	jmp L_96649
.p2align 0x4
L_413991:
L_96653:
	movq 0x40(%rbp),%r15
	jmp L_96648
.p2align 0x4
.long 0x15AE
L_96665:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96666
L_96670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96671
.p2align 0x4
.long 0x15B0
L_96671:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_96666:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_413993
L_96667:
	movq 0x8(%r14),%r15
L_96668:
	movq $0x1D71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x34(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	jmp L_96649
.p2align 0x4
L_413993:
L_96669:
	movq 0x40(%rbp),%r15
	jmp L_96668
.p2align 0x4
.long 0x15AD
L_96635:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je keep_0
L_96636:
	movq 0x68(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEBA,%r15
	je L_413995
L_96637:
	movl 0x30(%rbp),%ecx
	movq $0x1,%r15
	jmp L_96296
.p2align 0x4
L_413995:
L_96638:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_96639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1435
.p2align 0x4
.long 0x15A7
L_96602:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movb 0x98(%rbp),%r14b
	movb %r14b,0x34(%rbp)
	cmpb $0x2,%r14b
	je doit_21
L_96603:
	movq 0x88(%rbp),%r15
	jmp L_96302
.p2align 0x4
.long 0x15A7
L_96613:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96614
L_96617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_96618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96618
.p2align 0x4
.long 0x15A9
L_96618:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_96614:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je doit_21
L_96615:
replace_0:
	movq $0x31A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_96595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_9
.p2align 0x4
.long 0x15AA
L_96622:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96623
L_96626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_96627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96627
.p2align 0x4
.long 0x15AB
L_96627:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_96623:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_413997
L_96624:
	jmp knownLength_0
.p2align 0x4
L_413997:
L_96625:
	movq 0x88(%rbp),%r14
	xchgq %r14,%r15
	jmp L_96302
.p2align 0x4
.long 0x15A8
L_96609:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x88(%rbp),%r15
	jmp L_96302
.p2align 0x4
.long 0x15A3
L_96591:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	movl %r15d,0x98(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0x98,%rbp
	leaq (L_96592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_3
.p2align 0x4
.long 0x1582
L_96547:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96548
L_96584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96585
.p2align 0x4
.long 0x159B
L_96585:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_96548:
	movq 0x48(%rbp),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,0x8(%r11)
	je L_96582
L_96549:
	movq 0x60(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x50(%rbp),%r13
	cmpq %r11,0x10(%r13)
	je L_414012
L_96550:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_414011
L_96552:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_414010
L_96553:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x34(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_96555:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_96556
L_96570:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD15,%r13
	jne L_96556
L_96571:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x58(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_414004
L_96556:
	movl 0x34(%rbp),%r13d
	incl %r13d
	movl %r13d,0x50(%rbp)
	jo L_96303
L_96557:
	cmpq $0x1,%r15
	je L_413999
L_96558:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x34(%rbp)
	jmp L_96555
.p2align 0x4
L_413999:
L_96559:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96560
L_96568:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96569
.p2align 0x4
.long 0x15A1
L_96569:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96560:
	movl 0x50(%rbp),%ecx
L_96561:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_414001
L_96563:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_96565
L_96567:
	movl %ecx,0x0(%r15)
L_96565:
	movq $0x9A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1A2B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_96566:
	movq 0x0(%r15),%r14
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movl 0x30(%rbp),%ecx
	movq $0x1,%r15
	jmp L_96296
.p2align 0x4
L_414001:
L_96562:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414004:
L_96573:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96574
L_96578:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_96579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96579
.p2align 0x4
.long 0xC9A
L_96579:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_96574:
	movl 0x34(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_96562
L_96575:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_414005
L_96576:
	movq 0x50(%rbp),%r15
	jmp L_96566
.p2align 0x4
L_414005:
L_96577:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x34(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x50(%rbp),%r15
	jmp L_96566
.p2align 0x4
L_414010:
L_96580:
	xorl %ecx,%ecx
	jmp L_96561
.p2align 0x4
L_414011:
L_96551:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414012:
L_96582:
	movq 0x40(%rbp),%r15
	jmp L_96302
.p2align 0x4
.long 0x1582
L_96483:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96484
L_96501:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96502
.p2align 0x4
.long 0x159B
L_96502:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_96484:
	movq 0x48(%rbp),%r13
	movq 0x8(%r13),%r11
	movb 0x4(%r11),%r14b
	testb %r14b,%r14b
	jz L_414015
L_96485:
	movq 0x0(%r13),%r14
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_96474
.p2align 0x4
L_414015:
L_96486:
	movq 0x18(%r13),%r15
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x68(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x60(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_96280
L_96488:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r9d
	movslq %r9d,%r8
	cmpq %r11,%r8
	jne L_96280
L_96490:
	cmpl %r10d,%r9d
	jne L_96321
L_96492:
	movl %r10d,0x80(%rbp)
	movq $0x38B1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x20,%r12
	movq %r14,0x0(%r11)
	movq %r13,0x10(%r11)
	movq %r11,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_96493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x159A
L_96478:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96479
L_96480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_96481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96481
.p2align 0x4
.long 0x159B
L_96481:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_96479:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_96474
.p2align 0x4
.long 0x1597
L_96439:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_96312
L_96440:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1F,%r15
	jne L_414021
L_96442:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_96443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_414021:
L_96441:
	movq (globalObjptr+0x2148)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1597
L_96450:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_96312
L_96451:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1D,%r15
	jne L_414023
L_96453:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_96454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_414023:
L_96452:
	movq (globalObjptr+0x2158)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x14A0
L_96418:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96419
L_96420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96421
.p2align 0x4
.long 0x158B
L_96421:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96419:
	movq $0x1D79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	jmp L_96300
.p2align 0x4
.long 0x158F
L_96394:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96395
L_96400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96401
.p2align 0x4
.long 0x1590
L_96401:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96395:
	movq $0x177F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_96396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1493
.p2align 0x4
.long 0x14A0
L_96348:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movl %r14d,0x58(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_96280
L_96350:
	movl 0x34(%rbp),%ecx
	movl $0x0,0x5C(%rbp)
	movl $0x0,0x34(%rbp)
.p2align 0x4,,0x7
loop_1087:
	movl 0x5C(%rbp),%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jnb L_96332
L_96352:
	movq 0x50(%rbp),%r11
	movl 0x0(%r11,%r13,4),%r10d
	testl %ecx,%ecx
	jz L_414031
L_96353:
	incl %r14d
	jo L_96303
L_96354:
	decl %ecx
	jo L_96303
L_96355:
	testl %r10d,%r10d
	jnz L_414027
L_96356:
	movl %r14d,0x5C(%rbp)
	jmp loop_1087
.p2align 0x4
L_414027:
L_96357:
	movl 0x34(%rbp),%r13d
	incl %r13d
	jo L_96303
L_96358:
	movl %r13d,0x34(%rbp)
	movl %r14d,0x5C(%rbp)
	jmp loop_1087
.p2align 0x4
L_414031:
L_96359:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96360
L_96382:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96383
.p2align 0x4
.long 0x158B
L_96383:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96360:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_414033
L_96363:
	movl 0x5C(%rbp),%r15d
	incl %r15d
	jo L_96303
L_96364:
	movl %r15d,0x84(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x3D1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	leaq L_96370(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_96365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_414033:
L_96362:
	movq $0x1D71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x34(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	jmp L_96300
.p2align 0x4
.long 0x158A
L_96325:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96326
L_96334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96335
.p2align 0x4
.long 0x1588
L_96335:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96326:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_96280
L_96328:
	cmpl $0x1,%r13d
	jne L_414038
L_96330:
	cmpq $0x0,%r14
	jna L_96332
L_96333:
	movq 0x0(%r15),%r14
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	jmp L_96300
.p2align 0x4
L_414038:
L_96329:
	movq $0x1D6F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	jmp L_96300
.p2align 0x4
.long 0x15AD
L_96639:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movb 0x78(%rbp),%r15b
	movb %r15b,0x34(%rbp)
	testb %r15b,%r15b
	jz keep_0
	jmp L_96432
.p2align 0x4
.long 0x15A5
L_96595:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_96432
.p2align 0x4
.long 0x15A4
L_96592:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96593
L_96597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_96598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96598
.p2align 0x4
.long 0x15A6
L_96598:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_96593:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x78(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	jne replace_0
L_96596:
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x27D9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq %r11,0x0(%r13)
	movq 0x88(%rbp),%r15
	jmp L_96302
.p2align 0x4
.long 0x159C
L_96493:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96494
L_96499:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96500
.p2align 0x4
.long 0x1590
L_96500:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96494:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x931,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x68(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x70(%rbp)
	movq $0x3FE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	addq $0x68,%rbp
	leaq (L_96495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1598
L_96443:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,0x40(%rbp)
	testl %r15d,%r15d
	jnz yes_2
	jmp L_96432
.p2align 0x4
.long 0x1598
L_96454:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,0x40(%rbp)
	testl %r15d,%r15d
	jnz yes_2
	jmp L_96432
.p2align 0x4
.long 0x158F
L_96396:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96397
L_96398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96399
.p2align 0x4
.long 0x1590
L_96399:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96397:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x40(%rbp)
	jmp L_96300
.p2align 0x4
.long 0x158D
L_96365:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96367
L_96368:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96369
.p2align 0x4
.long 0x1588
L_96369:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96367:
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	jmp L_96300
.p2align 0x4
.long 0x25
L_96370:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96372
L_96380:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_96381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96381
.p2align 0x4
.long 0x158E
L_96381:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_96372:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_96373
L_96374:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xC9D,%r14
	jne L_414047
L_96375:
	movl 0x0(%r15),%r14d
	movq 0x60(%rbp),%r13
	cmpq %r13,0x8(%r15)
	jne L_414046
L_96377:
	testl %r14d,%r14d
	jnz L_96367
	jmp L_96362
.p2align 0x4
L_414046:
L_96376:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x50(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414047:
L_96373:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x50(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x159D
L_96495:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96496
L_96497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96498
.p2align 0x4
.long 0x159E
L_96498:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96496:
	movq $0x1D79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_96474
.text
.p2align 0x4
.globl get_66
.hidden get_66
get_66:
L_96709:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_96739
L_96710:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414063
L_96711:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_414062
L_96713:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_414061
L_96714:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_96716:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_96717
L_96731:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD11,%r13
	jne L_96717
L_96732:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x8(%rbp)
	je L_414056
L_96717:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_414055
L_96719:
	cmpq $0x1,%r15
	je L_414051
L_96720:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_96716
.p2align 0x4
L_414051:
L_96721:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96722
L_96729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_96730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96730
.p2align 0x4
.long 0x49B
L_96730:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_96722:
	movl 0x18(%rbp),%ecx
L_96723:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_414053
L_96725:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_96727
L_96728:
	movl %ecx,0x0(%r15)
L_96727:
	movq $0x741,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x27A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x73D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x27A7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x73B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x27A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x739,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x743,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r10,0x10(%r14)
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movq $0x1A23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414053:
L_96724:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414055:
L_96718:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414056:
L_96734:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96724
L_96735:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_414057
L_96737:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414057:
L_96736:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414061:
L_96738:
	xorl %ecx,%ecx
	jmp L_96723
.p2align 0x4
L_414062:
L_96712:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414063:
L_96739:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_96740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96740
.p2align 0x4
.long 0x45F
L_96740:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_96711
.text
.p2align 0x4
.globl simplifyStatement_0
.hidden simplifyStatement_0
simplifyStatement_0:
L_96741:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_97044
L_96742:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414078
L_96743:
	movq 0x8(%rbp),%r11
	movq 0x40(%r11),%r15
	movq 0x38(%r11),%r10
	movq 0x28(%r11),%r9
	movq %r9,0x10(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r9
	movq %r9,0x18(%rbp)
	movq 0x8(%r11),%r8
	movq %r8,0x20(%rbp)
	movq 0x10(%r11),%r8
	movq %r8,0x28(%rbp)
	cmpq $0x1,%r9
	je L_414077
L_96744:
	movq 0x10(%r15),%r10
	movq 0x8(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r9),%r11
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_414076
L_96746:
	movq %r15,0x0(%r9)
	movq 0x0(%r11),%r9
	cmpq $0x1,%r9
	je L_414075
L_96747:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r10,%r14
.p2align 0x4,,0x7
L_96749:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_414074
L_97035:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB1,%r11
	jne L_414073
L_97036:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_414070
L_96750:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_414069
L_96752:
	cmpq $0x1,%r15
	je L_414065
L_96753:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_96749
.p2align 0x4
L_414065:
L_96754:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96755
L_97033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_97034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97034
.p2align 0x4
.long 0x15BA
L_97034:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_96755:
	movl 0x48(%rbp),%ecx
L_96756:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_414067
L_96758:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_96760
L_97032:
	movl %ecx,0x0(%r15)
L_96760:
	movq $0x1963,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_96761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_414067:
L_96757:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414069:
L_96751:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414070:
L_97038:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96757
L_97039:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_414071
L_97041:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414071:
L_97040:
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414073:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_96750
.p2align 0x4
L_414074:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_96750
.p2align 0x4
L_414075:
L_97042:
	xorl %ecx,%ecx
	jmp L_96756
.p2align 0x4
L_414076:
L_96745:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414077:
L_97043:
	movq 0x8(%r10),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_96761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_414078:
L_97044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_97045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97045
.p2align 0x4
.long 0x45F
L_97045:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_96743
.p2align 0x4
.long 0x4E2
L_96761:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96762
L_97030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_97031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97031
.p2align 0x4
.long 0x51F
L_97031:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_96762:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
L_96763:
	movq %r14,%r15
	andq $0x3,%r15
	jnz simplifyExp_0
L_97009:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB2,%r15
	jne simplifyExp_0
L_97010:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_96768
L_97012:
	testl %r11d,%r11d
	jnz simplifyExp_0
L_97014:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB9,%r14
	je simplifyExp_1
	cmpq $0xEBA,%r14
	je L_414080
L_97016:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414080:
L_97020:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_97021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1435
.p2align 0x4
simplifyExp_1:
simplifyExp_0:
	movq 0x10(%rbp),%r14
	movq 0x40(%r14),%r13
	movq 0x38(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x28(%r14),%r11
	movq 0x20(%r14),%r10
	movq %r10,0x40(%rbp)
	movq 0x18(%r14),%r10
	movq %r10,0x48(%rbp)
	movq 0x10(%r14),%r10
	movq %r10,0x50(%rbp)
	movq 0x8(%r14),%r10
	movq 0x0(%r14),%r9
	movq %r9,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB7,%r14
	je L_414121
	cmpq $0xEB8,%r14
	je L_414097
	cmpq $0xEBA,%r14
	je L_414082
	cmpq $0xEBC,%r14
	je L_414081
L_96764:
L_96765:
	movq $0x2789,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414081:
L_96975:
	movq %r13,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_96976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1434
.p2align 0x4
L_414082:
L_96888:
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x39,%r15
	je equal_5
	cmpq $0x3A,%r15
	je equal_4
L_96889:
	andq $0x3,%r14
	jnz normal_4
L_96902:
normal_4:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_414083
L_96891:
	movl %r13d,0x68(%rbp)
	movq $0x3897,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_96892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_414083:
L_96768:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
equal_4:
	movq %r10,%r15
equal_0:
	movq 0x40(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_96768
L_96905:
	cmpl $0x2,%ecx
	jne L_414095
L_96907:
	cmpq $0x0,%r14
	jna L_414094
L_96909:
	movq 0x0(%r10),%r13
	movq 0x8(%r15),%r10
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r9
	movq 0x0(%r14),%r11
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r8
	movq 0x0(%r8),%r14
	incq %r14
	jo L_96745
L_96910:
	movq %r14,0x0(%r8)
	movq 0x0(%r15),%r8
	cmpq $0x1,%r8
	je L_414092
L_96911:
	movq 0x0(%r8),%r14
	movq 0x8(%r8),%r8
	xorl %ecx,%ecx
	movq %r8,%r15
.p2align 0x4,,0x7
L_96913:
	movq %r14,%r8
	andq $0x3,%r8
	jnz L_414091
L_96951:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r8
	shrq $0x1,%r8
	cmpq $0xCB1,%r8
	jne L_414090
L_96952:
	movq 0x8(%r14),%r8
	cmpq %r9,0x0(%r14)
	movq %r9,(localObjptr+0x20)(%rip)
	je L_414087
	movq %r10,(localObjptr+0x8)(%rip)
L_96914:
	incl %ecx
	jo L_96751
L_96915:
	cmpq $0x1,%r15
	je L_414084
L_96916:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r10
	movq (localObjptr+0x20)(%rip),%r9
	jmp L_96913
.p2align 0x4
L_414084:
L_96917:
L_96918:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96757
L_96919:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_292
L_96950:
	movl %ecx,0x0(%r15)
x_292:
	movq %r13,0x8(%rbp)
	movq %r11,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_96921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_414087:
L_96954:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96757
L_96955:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_414088
L_96972:
	movl %ecx,0x0(%r14)
	movq %r8,%r15
	movq %r10,(localObjptr+0x8)(%rip)
L_96957:
	movq %r15,0x68(%rbp)
	movq (localObjptr+0x8)(%rip),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (isUnit_4+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_414088:
L_96956:
	movq %r8,%r15
	movq %r10,(localObjptr+0x8)(%rip)
	jmp L_96957
.p2align 0x4
L_414090:
	movq %r10,(localObjptr+0x8)(%rip)
	movq %r9,(localObjptr+0x20)(%rip)
	jmp L_96914
.p2align 0x4
L_414091:
	movq %r10,(localObjptr+0x8)(%rip)
	movq %r9,(localObjptr+0x20)(%rip)
	jmp L_96914
.p2align 0x4
L_414092:
L_96973:
	xorl %ecx,%ecx
	jmp L_96918
.p2align 0x4
L_414094:
L_96779:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414095:
L_96906:
	movq (globalObjptr+0x2108)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
equal_5:
	movq %r10,%r15
	jmp equal_0
.p2align 0x4
L_414097:
L_96785:
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movl 0x0(%r15),%r10d
	movl %r10d,0x38(%rbp)
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r8
	movq 0x0(%r8),%r14
	incq %r14
	jo L_96745
L_96786:
	movq %r14,0x0(%r8)
	movq 0x0(%r15),%r8
	cmpq $0x1,%r8
	je L_414119
L_96787:
	movq 0x0(%r8),%r14
	movq 0x8(%r8),%r8
	movl $0x0,0x28(%rbp)
	movq %r8,%r15
	movq %r9,%r13
	movq %r10,%r11
.p2align 0x4,,0x7
L_96789:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_414118
L_96827:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xCB1,%r10
	jne L_414117
L_96828:
	movq 0x8(%r14),%r10
	movq %r10,0x48(%rbp)
	cmpq %r11,0x0(%r14)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_414101
L_96790:
	movl 0x28(%rbp),%r10d
	incl %r10d
	jo L_96751
L_96791:
	cmpq $0x1,%r15
	je L_414098
L_96792:
	movl %r10d,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_96789
.p2align 0x4
L_414098:
	movl %r10d,%ecx
L_96794:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_96757
L_96795:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_291
L_96826:
	movl %ecx,0x0(%r15)
x_291:
	movq %r13,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_414101:
L_96830:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96831
L_96885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_96886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96886
.p2align 0x4
.long 0x1037
L_96886:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_96831:
	movl 0x28(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_96757
L_96832:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_414114
L_96833:
	movq 0x48(%rbp),%r15
L_96834:
	movq 0x8(%r15),%r14
L_96835:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_96836
L_96837:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB2,%r15
	jne L_414112
L_96838:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x3C(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_96768
L_96840:
	cmpl $0x0,%r13d
	jl L_96881
L_96841:
	movl 0x38(%rbp),%ecx
	movl $0x0,0x48(%rbp)
	movl $0x0,0x38(%rbp)
loop_1088:
	movl 0x48(%rbp),%r15d
	cmpl 0x3C(%rbp),%r15d
	jnl L_414109
L_96843:
	movslq %r15d,%r14
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	testl %ecx,%ecx
	jz L_414103
L_96844:
	decl %ecx
	movl %ecx,0x4C(%rbp)
	jo L_96751
L_96845:
	movq %r13,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (isUnit_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_414103:
L_96859:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_414108
L_96862:
	movl 0x48(%rbp),%r15d
	incl %r15d
	cmpl $0x0,%r15d
	jl L_96881
L_96863:
	cmpl %r15d,0x3C(%rbp)
	jl L_414106
L_96864:
	movl %r15d,0x48(%rbp)
loop_1089:
	movl 0x48(%rbp),%r15d
	movl 0x3C(%rbp),%r14d
	cmpl %r14d,%r15d
	jnl L_96866
L_96867:
	movslq %r15d,%r13
	movq 0x28(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpl %r15d,%r14d
	je L_414104
L_96868:
	movq %r10,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (isUnit_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_414104:
L_96866:
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_96765
.p2align 0x4
L_414106:
L_96881:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414108:
L_96861:
	movq $0x1D71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_96765
.p2align 0x4
L_414109:
L_96842:
	movq (globalObjptr+0x2110)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414112:
L_96836:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414114:
L_96884:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x48(%rbp),%r15
	jmp L_96834
.p2align 0x4
L_414117:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_96790
.p2align 0x4
L_414118:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_96790
.p2align 0x4
L_414119:
L_96887:
	xorl %ecx,%ecx
	movq %r9,%r13
	jmp L_96794
.p2align 0x4
L_414121:
L_96766:
	movq 0x0(%r15),%r14
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_96768
L_96769:
	movl %r11d,0x50(%rbp)
	movq $0x38C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq %r15,0x0(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_96770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x4A6
L_97021:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movb 0x38(%rbp),%r15b
	movb %r15b,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97022
L_97026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_97027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97027
.p2align 0x4
.long 0xBC7
L_97027:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_97022:
	movb 0x30(%rbp),%r15b
	testb %r15b,%r15b
	jz simplifyExp_0
L_97023:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB9,%r14
	je simplifyExp_0
	jmp L_97016
.p2align 0x4
.long 0x1032
L_96976:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96977
L_97007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_97008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97008
.p2align 0x4
.long 0x4AD
L_97008:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_96977:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movb 0x0(%r13),%r15b
	cmpb $0x1,%r15b
	je L_414128
	cmpb $0x2,%r15b
	je L_414127
L_96978:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_96768
L_96980:
	movl %r11d,0x58(%rbp)
	movq $0x38C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_96981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
L_414127:
L_97006:
	movq $0x2,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414128:
L_96989:
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_96768
L_96991:
	movl %r11d,0x40(%rbp)
	movq $0x38C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	movq %r13,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_96992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x15B6
L_96892:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96893
L_96900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_96901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96901
.p2align 0x4
.long 0x15B7
L_96901:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_96893:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_96768
L_96895:
	movq $0x403B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r14)
	movl %r13d,0x50(%rbp)
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_96896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1
L_96921:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA3D
isUnit_4:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96958
L_96970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96971
.p2align 0x4
.long 0x8C0
L_96971:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96958:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
L_96959:
	movq %r14,%r15
	andq $0x3,%r15
	jnz normal_4
L_96960:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB2,%r15
	jne normal_4
L_96961:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_96768
L_96963:
	testl %r11d,%r11d
	jnz normal_4
L_96965:
	movq $0x1,0x68(%rbp)
	movl $0x0,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_96966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1
L_96797:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_96798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x15B4
isUnit_2:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96846
L_96857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_96858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96858
.p2align 0x4
.long 0x15B5
L_96858:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_96846:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
L_96847:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_96848
L_96851:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB2,%r15
	jne L_96848
L_96852:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_96768
L_96854:
	testl %r11d,%r11d
	jnz L_414135
L_96856:
	movl 0x38(%rbp),%ecx
L_96850:
	movl %ecx,0x38(%rbp)
	incl 0x48(%rbp)
	movl 0x4C(%rbp),%ecx
	jmp loop_1088
.p2align 0x4
L_414135:
L_96848:
	movl 0x38(%rbp),%ecx
	incl %ecx
	jo L_96751
	jmp L_96850
.p2align 0x4
.long 0x15B4
isUnit_3:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96869
L_96877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_96878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96878
.p2align 0x4
.long 0x15B5
L_96878:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_96869:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
L_96870:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_96861
L_96871:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB2,%r15
	jne L_96861
L_96872:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_96768
L_96874:
	testl %r11d,%r11d
	jnz L_96861
L_96876:
	incl 0x48(%rbp)
	jmp loop_1089
.p2align 0x4
.long 0x5E3
L_96770:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96771
L_96783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_96784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96784
.p2align 0x4
.long 0x5E6
L_96784:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_96771:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x931,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x38(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x38(%rbp)
	movq $0x3FDB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	addq $0x30,%rbp
	leaq (L_96772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x843
L_96981:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96982
L_96987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_96988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96988
.p2align 0x4
.long 0x845
L_96988:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_96982:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x931,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x58(%rbp)
	movq $0x3FDB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	addq $0x50,%rbp
	leaq (L_96983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x71D
L_96992:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96993
L_97004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_97005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97005
.p2align 0x4
.long 0x71F
L_97005:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_96993:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x931,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x38(%rbp)
	movq $0x3FDB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	addq $0x30,%rbp
	leaq (L_96994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x8E8
L_96896:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96897
L_96898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_96899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96899
.p2align 0x4
.long 0x5E7
L_96899:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_96897:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_96765
.p2align 0x4
.long 0x1
L_96922:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_96923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x15B8
L_96966:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96967
L_96968:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_96969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96969
.p2align 0x4
.long 0x15B9
L_96969:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_96967:
	movq $0x1D79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_96765
.p2align 0x4
.long 0x1
L_96798:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_96799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x519
L_96772:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96773
L_96781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_96782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96782
.p2align 0x4
.long 0x51C
L_96782:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_96773:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_96768
L_96775:
	cmpl $0x1,%r13d
	jne L_414152
L_96777:
	cmpq $0x0,%r15
	jna L_96779
L_96780:
	movq 0x0(%r14),%r15
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_96765
.p2align 0x4
L_414152:
L_96776:
	movq $0x1D6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	jmp L_96765
.p2align 0x4
.long 0x842
L_96983:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96984
L_96985:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_96986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96986
.p2align 0x4
.long 0xA26
L_96986:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_96984:
	movq $0x1D79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_96765
.p2align 0x4
.long 0x519
L_96994:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96995
L_97002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_97003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97003
.p2align 0x4
.long 0x51C
L_97003:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_96995:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_96768
L_96997:
	cmpl $0x1,%r13d
	jne L_414157
L_96999:
	cmpq $0x0,%r15
	jna L_96779
L_97001:
	movq 0x0(%r14),%r15
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_96765
.p2align 0x4
L_414157:
L_96998:
	movq $0x1D6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	jmp L_96765
.p2align 0x4
.long 0x4AF
L_96923:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF90)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_96924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_96799:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF90)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_96800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_96924:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_96925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_96800:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_96801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_96925:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96926
L_96948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_96949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96949
.p2align 0x4
.long 0x4AE
L_96949:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_96926:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_96927:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_96751
L_96928:
	cmpq $0x1,%r14
	je L_414160
L_96929:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_96927
.p2align 0x4
L_414160:
L_96930:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96931
L_96946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_96947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96947
.p2align 0x4
.long 0x4E6
L_96947:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_96931:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_414161
L_96932:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_128:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_414161:
L_96945:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_128
.p2align 0x4
.long 0x51E
L_96801:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96802
L_96824:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_96825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96825
.p2align 0x4
.long 0x4AE
L_96825:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_96802:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_96803:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_96751
L_96804:
	cmpq $0x1,%r14
	je L_414165
L_96805:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_96803
.p2align 0x4
L_414165:
L_96806:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96807
L_96822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_96823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96823
.p2align 0x4
.long 0x4E6
L_96823:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_96807:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_414166
L_96808:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_127:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_414166:
L_96821:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_127
.p2align 0x4
.long 0x1
rev_128:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_414172
L_96933:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_96934:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414171
.p2align 0x4,,0x7
L_96935:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_414170
L_96936:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_96934
.p2align 0x4
L_414170:
L_96938:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_414171:
L_96942:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_96943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96943
.p2align 0x4
.long 0x45B
L_96943:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_96935
.p2align 0x4
L_414172:
L_96944:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_96938
.p2align 0x4
.long 0x1
rev_127:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_414175
L_96809:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_96810:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414174
.p2align 0x4,,0x7
L_96811:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_414173
L_96812:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_96810
.p2align 0x4
L_414173:
L_96814:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_414174:
L_96818:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_96819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96819
.p2align 0x4
.long 0x45B
L_96819:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_96811
.p2align 0x4
L_414175:
L_96820:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_96814
.p2align 0x4
.long 0x1
bug_257:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96939
L_96940:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_96941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96941
.p2align 0x4
.long 0x451
L_96941:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_96939:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_256:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_96815
L_96816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_96817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_96817
.p2align 0x4
.long 0x451
L_96817:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_96815:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_87
.hidden get_87
get_87:
L_97046:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_97047
L_97101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_97102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97102
.p2align 0x4
.long 0x45F
L_97102:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_97047:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_414187
L_97049:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_414186
L_97050:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_97052:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_414185
L_97093:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD09,%r10
	jne L_414184
L_97094:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_414181
L_97053:
	incl %ecx
	jo L_414180
L_97055:
	cmpq $0x1,%r14
	je L_414178
L_97056:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_97052
.p2align 0x4
L_414178:
L_97057:
L_97058:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_414179
L_97060:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_293
L_97092:
	movl %ecx,0x0(%r15)
x_293:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_97062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_414179:
L_97059:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414180:
L_97054:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414181:
L_97096:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97059
L_97097:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_414182
L_97099:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414182:
L_97098:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414184:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_97053
.p2align 0x4
L_414185:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_97053
.p2align 0x4
L_414186:
L_97100:
	xorl %ecx,%ecx
	jmp L_97058
.p2align 0x4
L_414187:
L_97048:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_97062:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_97063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_97063:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_97064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_97064:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF140)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_97065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_97065:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_97066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_97066:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97067
L_97090:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_97091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97091
.p2align 0x4
.long 0x4AE
L_97091:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_97067:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_97068:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_97054
L_97069:
	cmpq $0x1,%r14
	je L_414189
L_97070:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_97068
.p2align 0x4
L_414189:
L_97071:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97072
L_97088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_97089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97089
.p2align 0x4
.long 0x4E6
L_97089:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_97072:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_414190
L_97073:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_129:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_414190:
L_97087:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_129
.p2align 0x4
.long 0x1
rev_129:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_414196
L_97074:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_97075:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414195
.p2align 0x4,,0x7
L_97076:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_414194
L_97077:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_97075
.p2align 0x4
L_414194:
L_97079:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_97080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_414195:
L_97084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_97085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97085
.p2align 0x4
.long 0x45B
L_97085:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_97076
.p2align 0x4
L_414196:
L_97086:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_97079
.p2align 0x4
.long 0x1
L_97080:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97081
L_97082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_97083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97083
.p2align 0x4
.long 0x451
L_97083:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_97081:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl foreachi_4
.hidden foreachi_4
foreachi_4:
L_97103:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_97104
L_99861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_99862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99862
.p2align 0x4
.long 0x45F
L_99862:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_97104:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_97106
L_97107:
	cmpl $0x0,%r13d
	jl L_414593
L_97108:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_1090:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414592
.p2align 0x4,,0x7
L_97109:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_414591
L_97111:
	movslq %r15d,%r14
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_414590
L_97112:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1A86,%rax
	cmpq $0x4B,%rax
	ja L_414198
	leaq jumpTable_228(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_228:
.quad L_414589,L_414587,L_414586,L_414585,L_414584,L_414533,L_414532,L_414514,L_414513,L_414512,L_414511,L_414479,L_414478,L_414473,L_414470,L_414457,L_414454,L_414421,L_414418,L_414415,L_414414,L_414413,L_414412,L_414399,L_414389,L_414388,L_414387,L_414386,L_414385,L_414374,L_414373,L_414346,L_414344,L_414341,L_414340,L_414339,L_414338,L_414337,L_414336,L_414323,L_414322,L_414321,L_414320,L_414318,L_414317,L_414304,L_414293,L_414291,L_414290,L_414289,L_414276,L_414272,L_414271,L_414270,L_414269,L_414268,L_414265,L_414262,L_414252,L_414249,L_414248,L_414244,L_414231,L_414230,L_414229,L_414228,L_414227,L_414226,L_414225,L_414223,L_414222,L_414221,L_414220,L_414219,L_414216,L_414199
.text
.p2align 0x4
L_414198:
L_97113:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (x_294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_68
.p2align 0x4
L_414199:
L_99824:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x18(%rbp),%r11
	movq 0x0(%r11),%r15
	movq 0x10(%r11),%r14
	movq 0x18(%r11),%r10
L_99825:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_414215
L_99852:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xEBD,%r11
	je L_414214
	cmpq $0xEC2,%r11
	je L_414213
	cmpq $0xEC3,%r11
	je L_414212
	movq %r10,%r15
L_99826:
	xorl %ecx,%ecx
L_99827:
	movq $0x4B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x4B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x1385,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x18(%rbp)
	movl %ecx,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r11,0x10(%r9)
	movq %r15,0x18(%r9)
	addq $0x28,%r12
	movl $0x0,0x4(%r9)
	movq 0x10(%r14),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_414211
L_99828:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_414210
L_99829:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_99831:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_414209
L_99844:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xD36,%r11
	jne L_414208
L_99845:
	cmpq 0x0(%r14),%r13
	movq %r13,(localObjptr+0x0)(%rip)
	je L_414205
L_99832:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_414204
L_99833:
	cmpq $0x1,%r15
	je L_414200
L_99834:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r13
	jmp L_99831
.p2align 0x4
L_414200:
L_99835:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414203
.p2align 0x4,,0x7
L_99836:
	movl 0x30(%rbp),%ecx
L_99837:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_414202
L_99838:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_99840
L_99841:
	movl %ecx,0x0(%r15)
L_99840:
	movq $0x1A6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
.p2align 0x4,,0x7
L_97116:
	incl 0x14(%rbp)
	jmp loop_1090
.p2align 0x4
L_414202:
L_97141:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414203:
L_99842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_99843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99843
.p2align 0x4
.long 0xEAC
L_99843:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_99836
.p2align 0x4
L_414204:
L_97135:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414205:
L_99847:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_99848:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_99850:
	movl %ecx,0x0(%r15)
L_97154:
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414208:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_99832
.p2align 0x4
L_414209:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_99832
.p2align 0x4
L_414210:
L_99851:
	xorl %ecx,%ecx
	jmp L_99837
.p2align 0x4
L_414211:
L_97129:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414212:
L_99855:
	movl $0x1,%ecx
	movq %r10,%r15
	jmp L_99827
.p2align 0x4
L_414213:
L_99854:
	movl $0x1,%ecx
	movq %r10,%r15
	jmp L_99827
.p2align 0x4
L_414214:
L_99853:
	movl $0x1,%ecx
	movq %r10,%r15
	jmp L_99827
.p2align 0x4
L_414215:
	movq %r10,%r15
	jmp L_99826
.p2align 0x4
L_414216:
L_99782:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
L_99783:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_97116
L_99784:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEC2,%r15
	jne L_97116
L_99785:
	movq %r14,0x40(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_99786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_89
.p2align 0x4
L_414219:
L_99781:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq $0x3345,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_414220:
L_99729:
	movq 0x0(%rbp),%r15
	movq 0x78(%r15),%r14
	movq 0x70(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x68(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x58(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x50(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x98(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq $0x33FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xB0(%rbp)
	addq $0x10,%r12
	movq %r13,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_99730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_414221:
L_99728:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq $0x3683,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq $0x2,0x20(%rbp)
	movq $0x2,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
L_414222:
L_99708:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_99709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_79
.p2align 0x4
L_414223:
L_99623:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_414224
L_99625:
	movl %r14d,0x60(%rbp)
	movq $0x388D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (fromTypes_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_414224:
L_97106:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414225:
L_99622:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r13
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r10
	movq 0x8(%r15),%r9
	movq 0x0(%r15),%r8
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%rsp
	movq %rsp,0x28(%rbp)
	movq 0x10(%r15),%rsp
	movq $0xDAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x0(%r15)
	movq %r10,0x8(%r15)
	movq %rsp,0x10(%r15)
	movq %r11,0x18(%r15)
	movq %r13,0x20(%r15)
	movq %r14,0x28(%r15)
	addq $0x38,%r12
	movq $0x32F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r8,0x8(%r14)
	movq %r14,0x20(%rbp)
	addq $0x18,%r12
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_414226:
L_99617:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x48(%rbp)
	movq $0x32FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_99618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_414227:
L_99595:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x50,%rbp
	leaq (L_99596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_73
.p2align 0x4
L_414228:
L_99494:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_99495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_73
.p2align 0x4
L_414229:
L_99489:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r10
	movq %r10,0x38(%rbp)
	movq 0x18(%r15),%r10
	movq %r10,0x50(%rbp)
	movq $0x3435,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_99490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_414230:
L_99431:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_99432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_71
.p2align 0x4
L_414231:
L_99406:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r15
	movq $0x1D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x1D7,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq $0x1,0x0(%r9)
	movq $0x1D9,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x28(%rbp)
	movq %r9,0x0(%r8)
	movq %r10,0x8(%r8)
	movq %r13,0x18(%r8)
	addq $0x28,%r12
	movq %r11,0x10(%r8)
	movq 0x10(%r15),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_97129
L_99407:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_414242
L_99408:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_99410:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_414241
L_99423:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD0E,%r11
	jne L_414240
L_99424:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_414237
L_99411:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_99412:
	cmpq $0x1,%r15
	je L_414232
L_99413:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_99410
.p2align 0x4
L_414232:
L_99414:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414235
.p2align 0x4,,0x7
L_99415:
	movl 0x18(%rbp),%ecx
L_99416:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_99417:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_99419
L_99420:
	movl %ecx,0x0(%r15)
L_99419:
	movq $0x1A1D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_97116
.p2align 0x4
L_414235:
L_99421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_99422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99422
.p2align 0x4
.long 0x575
L_99422:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_99415
.p2align 0x4
L_414237:
L_99426:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_99427:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_99429:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414240:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_99411
.p2align 0x4
L_414241:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_99411
.p2align 0x4
L_414242:
L_99430:
	xorl %ecx,%ecx
	jmp L_99416
.p2align 0x4
L_414244:
L_99396:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r11
L_99397:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_97116
L_99398:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xEC2,%r15
	jne L_97116
L_99399:
	movq 0x8(%r11),%r15
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	je L_97116
L_99400:
	movq %r15,0x30(%rbp)
	movq %r13,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_99401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_87
.p2align 0x4
L_414248:
L_99383:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x60,%rbp
	leaq (L_99384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_414249:
L_99375:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
L_99376:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_97116
L_99377:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEC2,%r15
	jne L_97116
L_99378:
	movq %r14,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_99379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_88
.p2align 0x4
L_414252:
L_99337:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r11
L_99338:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_97116
L_99339:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xEBE,%r15
	je L_414259
	cmpq $0xEBF,%r15
	je L_414257
	cmpq $0xEC0,%r15
	je L_414256
	cmpq $0xEC1,%r15
	je L_414254
	cmpq $0xEC2,%r15
	je L_414253
	jmp L_97116
.p2align 0x4
L_414253:
L_99350:
	movq %r14,0x58(%rbp)
	movq 0x10(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	addq $0x50,%rbp
	leaq (L_99351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_90
.p2align 0x4
L_414254:
L_99348:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1207,%r14
	jne L_97116
L_99349:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x3613,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	movb $0x8,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_414256:
L_99346:
	movq 0x0(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_99347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1462
.p2align 0x4
L_414257:
L_99343:
	movq 0x0(%r11),%r15
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_414258
L_99344:
	movq %r14,0x20(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_0
.p2align 0x4
L_414258:
L_99345:
	movq (globalObjptr+0xDD8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414259:
L_99340:
	movq 0x0(%r11),%r15
	cmpq $0x1,0x20(%rbp)
	je L_414260
L_99341:
	movq 0x28(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_0
.p2align 0x4
L_414260:
L_99342:
	movq (globalObjptr+0xDE0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414262:
L_99324:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
L_99325:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_97116
L_99326:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEC2,%r15
	jne L_97116
L_99327:
	movq %r14,0x58(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_99328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_91
.p2align 0x4
L_414265:
L_99271:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
L_99272:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_97116
L_99273:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEC2,%r15
	jne L_97116
L_99274:
	movq %r14,0x60(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_99275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_91
.p2align 0x4
L_414268:
L_99266:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r9
	movq %r9,0x40(%rbp)
	movq 0x18(%r15),%r9
	movq %r9,0x58(%rbp)
	movq $0x3431,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq %r10,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r13,0x10(%r15)
	movq %r14,0x18(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_99267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_414269:
L_99244:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x50,%rbp
	leaq (L_99245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
L_414270:
L_99143:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_99144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
L_414271:
L_99142:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq $0x36A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq $0x1F,0x20(%rbp)
	movq $0x1E,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
L_414272:
L_99111:
	movq 0x0(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x68(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x70(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_97106
L_99113:
	movl $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_1106:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x70(%rbp)
	je L_97116
L_99114:
	movslq %r15d,%r14
	cmpq 0x68(%rbp),%r14
	jnb L_414273
L_99116:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (not_9+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp keepVar_0
.p2align 0x4
L_414273:
L_99115:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414276:
L_99086:
	movq 0x0(%rbp),%r11
	movq 0x20(%r11),%r14
	movq 0x18(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x18(%rbp),%r11
	movq 0x18(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x10(%r11),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_97129
L_99087:
	movq %r15,0x0(%r11)
	movq 0x0(%r9),%r11
	cmpq $0x1,%r11
	je L_414287
L_99088:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_99090:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_414286
L_99103:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCF5,%r11
	jne L_414285
L_99104:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_414282
L_99091:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_99092:
	cmpq $0x1,%r15
	je L_414277
L_99093:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_99090
.p2align 0x4
L_414277:
L_99094:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99095
L_99101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_99102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99102
.p2align 0x4
.long 0x5A2
L_99102:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_99095:
	movl 0x18(%rbp),%ecx
L_99096:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_99097:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_99099
L_99100:
	movl %ecx,0x0(%r15)
L_99099:
	movq $0x19EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq $0x340D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x10(%r15)
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_414282:
L_99106:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_99107:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_99109:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414285:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_99091
.p2align 0x4
L_414286:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_99091
.p2align 0x4
L_414287:
L_99110:
	xorl %ecx,%ecx
	jmp L_99096
.p2align 0x4
L_414289:
L_99070:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_99071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_56
.p2align 0x4
L_414290:
L_99063:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq %r13,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_99064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_414291:
L_99032:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_97106
L_99034:
	movl %r11d,0x50(%rbp)
	movq $0x3881,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq %r13,0x8(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_99035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_414293:
L_98928:
	movq 0x0(%rbp),%r8
	movq 0x10(%r8),%r10
	movq 0x8(%r8),%rsp
	movq %rsp,0x20(%rbp)
	movq 0x0(%r8),%rsp
	movq %rsp,0x28(%rbp)
	movq 0x18(%rbp),%rsp
	movq 0x10(%rsp),%r13
	movq 0x18(%r8),%rsp
	movq 0x8(%rsp),%r9
	movq 0x0(%rsp),%r11
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r8
	movq 0x0(%r8),%r14
	incq %r14
	jo L_97129
L_98929:
	movq %r14,0x0(%r8)
	movq 0x0(%r15),%r8
	cmpq $0x1,%r8
	je L_414302
L_98930:
	movq 0x0(%r8),%r14
	movq 0x8(%r8),%r8
	xorl %ecx,%ecx
	movq %r8,%r15
.p2align 0x4,,0x7
L_98932:
	movq %r14,%r8
	andq $0x3,%r8
	jnz L_414301
L_98971:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r8
	shrq $0x1,%r8
	cmpq $0xCEA,%r8
	jne L_414300
L_98972:
	movq 0x8(%r14),%r8
	cmpq 0x0(%r14),%r9
	movq %r9,(localObjptr+0x18)(%rip)
	je L_414297
	movq %r10,(localObjptr+0x8)(%rip)
L_98933:
	incl %ecx
	jo L_97135
L_98934:
	cmpq $0x1,%r15
	je L_414294
L_98935:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r10
	movq (localObjptr+0x18)(%rip),%r9
	jmp L_98932
.p2align 0x4
L_414294:
L_98936:
L_98937:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98938:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_301
L_98970:
	movl %ecx,0x0(%r15)
x_301:
	movq %r13,0x8(%rbp)
	movq %r11,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_98940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_414297:
L_98974:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98975:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_414298
L_99030:
	movl %ecx,0x0(%r14)
	movq %r8,%r15
	movq %r10,(localObjptr+0x8)(%rip)
L_98977:
	movq %r13,0x38(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x38,%rbp
	leaq (L_98978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_414298:
L_98976:
	movq %r8,%r15
	movq %r10,(localObjptr+0x8)(%rip)
	jmp L_98977
.p2align 0x4
L_414300:
	movq %r9,(localObjptr+0x18)(%rip)
	movq %r10,(localObjptr+0x8)(%rip)
	jmp L_98933
.p2align 0x4
L_414301:
	movq %r9,(localObjptr+0x18)(%rip)
	movq %r10,(localObjptr+0x8)(%rip)
	jmp L_98933
.p2align 0x4
L_414302:
L_99031:
	xorl %ecx,%ecx
	jmp L_98937
.p2align 0x4
L_414304:
L_98903:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r15
	movq $0x137B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x13E9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x28(%rbp)
	movq %r13,0x0(%r10)
	addq $0x18,%r12
	movq %r11,0x8(%r10)
	movq 0x10(%r15),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_97129
L_98904:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_414315
L_98905:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_98907:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_414314
L_98920:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCEA,%r11
	jne L_414313
L_98921:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_414310
L_98908:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_98909:
	cmpq $0x1,%r15
	je L_414305
L_98910:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_98907
.p2align 0x4
L_414305:
L_98911:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414308
.p2align 0x4,,0x7
L_98912:
	movl 0x18(%rbp),%ecx
L_98913:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98914:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_98916
L_98917:
	movl %ecx,0x0(%r15)
L_98916:
	movq $0x19D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_97116
.p2align 0x4
L_414308:
L_98918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_98919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98919
.p2align 0x4
.long 0x575
L_98919:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_98912
.p2align 0x4
L_414310:
L_98923:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98924:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_98926:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414313:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_98908
.p2align 0x4
L_414314:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_98908
.p2align 0x4
L_414315:
L_98927:
	xorl %ecx,%ecx
	jmp L_98913
.p2align 0x4
L_414317:
L_98902:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq $0x369D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq $0x16,0x20(%rbp)
	movq $0x15,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
L_414318:
L_98871:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r9
	cmpq %r9,%r15
	jne L_97106
L_98873:
	movl %r14d,0x50(%rbp)
	movq $0x38F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r10,0x8(%r15)
	addq $0x20,%r12
	movq %r13,0x10(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_98874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_414320:
L_98866:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x40(%rbp)
	movq $0x341D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_98867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_414321:
L_98831:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq 0x18(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_98832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_414322:
L_98825:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_98826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_9
.p2align 0x4
L_414323:
L_98800:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_97129
L_98801:
	movq %r15,0x0(%r11)
	movq 0x0(%r9),%r11
	cmpq $0x1,%r11
	je L_414334
L_98802:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_98804:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_414333
L_98817:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xC9F,%r11
	jne L_414332
L_98818:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_414329
L_98805:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_97135
L_98806:
	cmpq $0x1,%r15
	je L_414324
L_98807:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_98804
.p2align 0x4
L_414324:
L_98808:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414327
.p2align 0x4,,0x7
L_98809:
	movl 0x30(%rbp),%ecx
L_98810:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98811:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_98813
L_98814:
	movl %ecx,0x0(%r15)
L_98813:
	movq $0x193F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_97116
.p2align 0x4
L_414327:
L_98815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_98816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98816
.p2align 0x4
.long 0xEAC
L_98816:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_98809
.p2align 0x4
L_414329:
L_98820:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98821:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_98823:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414332:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_98805
.p2align 0x4
L_414333:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_98805
.p2align 0x4
L_414334:
L_98824:
	xorl %ecx,%ecx
	jmp L_98810
.p2align 0x4
L_414336:
L_98768:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_98769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_414337:
L_98761:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq %r13,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_98762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_414338:
L_98759:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x38(%rbp)
	movq $0x3DC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	addq $0x30,%rbp
	leaq (L_98760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_414339:
L_98757:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x38(%rbp)
	movq $0x3DC1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	addq $0x30,%rbp
	leaq (L_98758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_414340:
L_98423:
	movq 0x0(%rbp),%r15
	movq 0x68(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x58(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x50(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x98(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0xA8(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0xE0(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0xB0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0xC8(%rbp)
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_98424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_414341:
L_98353:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
L_98354:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_97116
L_98355:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEC2,%r15
	jne L_97116
L_98356:
	movq %r14,0x58(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_98357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_92
.p2align 0x4
L_414344:
L_98347:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r15),%r11
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_97135
L_98348:
	movl %r15d,0x0(%r14)
	movq %r11,0x48(%rbp)
	movq $0x341F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_98349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_414346:
L_98303:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x18(%rbp),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x30(%rbp)
	movq 0x10(%r11),%r10
	movq 0x8(%r10),%r8
	movq %r8,0x38(%rbp)
	movq 0x0(%r10),%r14
	movq 0x10(%r9),%r11
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_97129
L_98304:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_414371
L_98305:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x18(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_98307:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_414370
L_98336:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB3,%r11
	jne L_414369
L_98337:
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_414365
L_98308:
	movl 0x18(%rbp),%r11d
	incl %r11d
	movl %r11d,0x1C(%rbp)
	jo L_97135
L_98309:
	cmpq $0x1,%r15
	je L_414347
L_98310:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x18(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_98307
.p2align 0x4
L_414347:
L_98311:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414363
.p2align 0x4,,0x7
L_98312:
	movl 0x1C(%rbp),%ecx
L_98313:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98314:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_98316
L_98333:
	movl %ecx,0x0(%r15)
L_98316:
	movq $0x1411,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_300:
	cmpb $0x2,0x0(%r15)
	jne L_414360
L_98332:
	movq 0x28(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r14
	movb $0x1,0x18(%rbp)
	movq 0x30(%rbp),%r15
set_4:
	movq 0x10(%r15),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_97129
L_98278:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_414358
L_98279:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_98281:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_414357
L_98294:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB3,%r11
	jne L_414356
L_98295:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_414353
L_98282:
	incl %ecx
	movl %ecx,0x1C(%rbp)
	jo L_97135
L_98283:
	cmpq $0x1,%r15
	je L_414348
L_98284:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_98281
.p2align 0x4
L_414348:
L_98285:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414351
.p2align 0x4,,0x7
L_98286:
	movl 0x1C(%rbp),%ecx
L_98287:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98288:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_98290
L_98291:
	movl %ecx,0x0(%r15)
L_98290:
	movq $0x1411,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movzbl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_97116
.p2align 0x4
L_414351:
L_98292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_98293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98293
.p2align 0x4
.long 0x579
L_98293:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_98286
.p2align 0x4
L_414353:
L_98297:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98298:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_414354
L_98301:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_98300:
	movb 0x18(%rbp),%r14b
	movb %r14b,0x0(%r15)
	jmp L_97116
.p2align 0x4
L_414354:
L_98299:
	movq %r11,%r15
	jmp L_98300
.p2align 0x4
L_414356:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_98282
.p2align 0x4
L_414357:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_98282
.p2align 0x4
L_414358:
L_98302:
	xorl %ecx,%ecx
	jmp L_98287
.p2align 0x4
L_414360:
L_98317:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_98318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_414363:
L_98334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_98335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98335
.p2align 0x4
.long 0xF84
L_98335:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_98312
.p2align 0x4
L_414365:
L_98339:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414368
.p2align 0x4,,0x7
L_98340:
	movl 0x18(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_97141
L_98341:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_414366
L_98342:
	movq 0x48(%rbp),%r15
	jmp x_300
.p2align 0x4
L_414366:
L_98343:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x18(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x48(%rbp),%r15
	jmp x_300
.p2align 0x4
L_414368:
L_98344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_98345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98345
.p2align 0x4
.long 0x15F8
L_98345:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_98340
.p2align 0x4
L_414369:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_98308
.p2align 0x4
L_414370:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_98308
.p2align 0x4
L_414371:
L_98346:
	xorl %ecx,%ecx
	jmp L_98313
.p2align 0x4
L_414373:
L_98277:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r14
	movq 0x18(%rbp),%r13
	movq 0x10(%r13),%r15
	movb $0x0,0x18(%rbp)
	jmp set_4
.p2align 0x4
L_414374:
L_98173:
	movq 0x0(%rbp),%r8
	movq 0x10(%r8),%r10
	movq 0x8(%r8),%rsp
	movq %rsp,0x20(%rbp)
	movq 0x0(%r8),%rsp
	movq %rsp,0x28(%rbp)
	movq 0x18(%rbp),%rsp
	movq 0x10(%rsp),%r13
	movq 0x18(%r8),%rsp
	movq 0x8(%rsp),%r9
	movq 0x0(%rsp),%r11
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r8
	movq 0x0(%r8),%r14
	incq %r14
	jo L_97129
L_98174:
	movq %r14,0x0(%r8)
	movq 0x0(%r15),%r8
	cmpq $0x1,%r8
	je L_414383
L_98175:
	movq 0x0(%r8),%r14
	movq 0x8(%r8),%r8
	xorl %ecx,%ecx
	movq %r8,%r15
.p2align 0x4,,0x7
L_98177:
	movq %r14,%r8
	andq $0x3,%r8
	jnz L_414382
L_98216:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r8
	shrq $0x1,%r8
	cmpq $0xCEA,%r8
	jne L_414381
L_98217:
	movq 0x8(%r14),%r8
	cmpq 0x0(%r14),%r9
	movq %r9,(localObjptr+0x18)(%rip)
	je L_414378
	movq %r10,(localObjptr+0x8)(%rip)
L_98178:
	incl %ecx
	jo L_97135
L_98179:
	cmpq $0x1,%r15
	je L_414375
L_98180:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r10
	movq (localObjptr+0x18)(%rip),%r9
	jmp L_98177
.p2align 0x4
L_414375:
L_98181:
L_98182:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98183:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_299
L_98215:
	movl %ecx,0x0(%r15)
x_299:
	movq %r13,0x8(%rbp)
	movq %r11,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_98185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_414378:
L_98219:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98220:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_414379
L_98275:
	movl %ecx,0x0(%r14)
	movq %r8,%r15
	movq %r10,(localObjptr+0x8)(%rip)
L_98222:
	movq %r13,0x38(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x38,%rbp
	leaq (L_98223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_414379:
L_98221:
	movq %r8,%r15
	movq %r10,(localObjptr+0x8)(%rip)
	jmp L_98222
.p2align 0x4
L_414381:
	movq %r9,(localObjptr+0x18)(%rip)
	movq %r10,(localObjptr+0x8)(%rip)
	jmp L_98178
.p2align 0x4
L_414382:
	movq %r9,(localObjptr+0x18)(%rip)
	movq %r10,(localObjptr+0x8)(%rip)
	jmp L_98178
.p2align 0x4
L_414383:
L_98276:
	xorl %ecx,%ecx
	jmp L_98182
.p2align 0x4
L_414385:
L_98171:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x38(%rbp)
	movq $0x3D9F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	addq $0x30,%rbp
	leaq (L_98172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_414386:
L_98169:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x38(%rbp)
	movq $0x3DB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	addq $0x30,%rbp
	leaq (L_98170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_414387:
L_98164:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movl 0x0(%r15),%r11d
	movl %r11d,0x30(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r9
	movq %r9,0x40(%rbp)
	movq 0x18(%r15),%r9
	movq %r9,0x58(%rbp)
	movq $0x340F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r10,0x8(%r15)
	movq %r13,0x10(%r15)
	movq %r14,0x18(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_98165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_414388:
L_98061:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x40(%rbp)
	movq %r13,0x50(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_98062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_414389:
L_98005:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_97116
L_98006:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xEBE,%r15
	je L_97116
	cmpq $0xEBF,%r15
	je L_97116
	cmpq $0xEC0,%r15
	je L_414395
	cmpq $0xEC1,%r15
	je L_414393
	cmpq $0xEC2,%r15
	je L_414391
	cmpq $0xEC3,%r15
	je L_414390
L_98007:
	movq 0x10(%r11),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x38,%rbp
	leaq (L_98008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1335
.p2align 0x4
L_414390:
L_98053:
	movq 0x18(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_98054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1335
.p2align 0x4
L_414391:
L_98042:
	movq 0x10(%r11),%r15
L_98043:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_97116
L_98044:
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_98045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1335
.p2align 0x4
L_414393:
L_98032:
	movq 0x8(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1206,%r13
	je L_414394
L_98041:
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq $0x3625,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movb $0x11,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_98034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_414394:
L_98033:
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq $0x3647,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movb $0x9,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_98034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_414395:
L_98014:
	movq %r13,0x40(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x18(%rbp)
	addq $0x38,%rbp
	leaq (L_98015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1335
.p2align 0x4
L_414399:
L_97980:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r15
	movq 0x18(%r11),%r13
	movq $0x13DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x4B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x13DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x28(%rbp)
	movq %r10,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r11,0x10(%r9)
	addq $0x20,%r12
	movq 0x10(%r15),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_97129
L_97981:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_414410
L_97982:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_97984:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_414409
L_97997:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCF8,%r11
	jne L_414408
L_97998:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_414405
L_97985:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_97986:
	cmpq $0x1,%r15
	je L_414400
L_97987:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_97984
.p2align 0x4
L_414400:
L_97988:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414403
.p2align 0x4,,0x7
L_97989:
	movl 0x18(%rbp),%ecx
L_97990:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97991:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97993
L_97994:
	movl %ecx,0x0(%r15)
L_97993:
	movq $0x19F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_97116
.p2align 0x4
L_414403:
L_97995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_97996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97996
.p2align 0x4
.long 0x575
L_97996:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_97989
.p2align 0x4
L_414405:
L_98000:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98001:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_98003:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414408:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_97985
.p2align 0x4
L_414409:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_97985
.p2align 0x4
L_414410:
L_98004:
	xorl %ecx,%ecx
	jmp L_97990
.p2align 0x4
L_414412:
L_97965:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq $0x330F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	addq $0x38,%rbp
	leaq (L_97966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_414413:
L_97936:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x50,%rbp
	leaq (L_97937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
L_414414:
L_97930:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_97931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
L_414415:
L_97922:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
L_97923:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_97116
L_97924:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEC2,%r15
	jne L_97116
L_97925:
	movq %r14,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_97926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getFuncNode_0
.p2align 0x4
L_414418:
L_97909:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
L_97910:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_97116
L_97911:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEC2,%r15
	jne L_97116
L_97912:
	movq %r14,0x58(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_97913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_91
.p2align 0x4
L_414421:
L_97826:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x50(%rbp)
	jne L_97106
L_97828:
	testq %rdx,%rdx
	jz L_414452
L_97829:
	cmpq $0x7FFFFFFF,%rdx
	ja L_414451
L_97830:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14B1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_97831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97831
.p2align 0x4
.long 0xF3C
L_97831:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x18(%rbp)
L_97832:
	movq $0x0,0x60(%rbp)
.p2align 0x4,,0x7
loop_1102:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414450
.p2align 0x4,,0x7
L_97833:
	movq 0x60(%rbp),%r15
	cmpq 0x58(%rbp),%r15
	jnl L_414437
L_97859:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
L_97860:
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_97861
L_97903:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xEB2,%r15
	jne L_414435
L_97904:
	movq $0x27BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x28A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x72B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
.p2align 0x4,,0x7
L_97872:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414434
.p2align 0x4,,0x7
L_97873:
	movq $0x13C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13CB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x78(%rbp)
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq 0x70(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x0(%r11),%r14
	movq 0x68(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x88(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_97129
L_97874:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_414432
L_97875:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_97877:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_414431
L_97890:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD05,%r11
	jne L_414430
L_97891:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_414427
L_97878:
	incl %ecx
	movl %ecx,0x68(%rbp)
	jo L_97135
L_97879:
	cmpq $0x1,%r15
	je L_414422
L_97880:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_97877
.p2align 0x4
L_414422:
L_97881:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414425
.p2align 0x4,,0x7
L_97882:
	movl 0x68(%rbp),%ecx
L_97883:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97884:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97886
L_97887:
	movl %ecx,0x0(%r15)
L_97886:
	movq $0x1A0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x60(%rbp),%r14
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x60(%rbp)
	jmp loop_1102
.p2align 0x4
L_414425:
L_97888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_97889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97889
.p2align 0x4
.long 0x15DC
L_97889:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_97882
.p2align 0x4
L_414427:
L_97893:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97894:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_97896:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414430:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_97878
.p2align 0x4
L_414431:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_97878
.p2align 0x4
L_414432:
L_97897:
	xorl %ecx,%ecx
	jmp L_97883
.p2align 0x4
L_414434:
L_97898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_97899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97899
.p2align 0x4
.long 0x15DD
L_97899:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_97873
.p2align 0x4
L_414435:
L_97861:
	movq $0x27BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x28A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x72B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_97862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_414437:
L_97834:
	movq 0x18(%rbp),%r13
	movq $0xB07,0xFFFFFFFFFFFFFFF8(%r13)
	movq 0x48(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_97129
L_97835:
	movq %r14,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_414448
L_97836:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	xchgq %r13,%r15
.p2align 0x4,,0x7
L_97838:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_97839
L_97851:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD04,%r13
	jne L_97839
L_97852:
	movq 0x28(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_414443
L_97839:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_97135
L_97840:
	cmpq $0x1,%r15
	je L_414438
L_97841:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_97838
.p2align 0x4
L_414438:
L_97842:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97843
L_97849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_97850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97850
.p2align 0x4
.long 0x15D9
L_97850:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_97843:
	movl 0x48(%rbp),%ecx
L_97844:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97845:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97847
L_97848:
	movl %ecx,0x0(%r15)
L_97847:
	movq $0x1A09,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x332F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_414443:
L_97854:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97855:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_97857:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414448:
L_97858:
	xorl %ecx,%ecx
	jmp L_97844
.p2align 0x4
L_414450:
L_97905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97906
.p2align 0x4
.long 0x15DF
L_97906:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_97833
.p2align 0x4
L_414451:
L_97348:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414452:
L_97908:
	movq (globalObjptr+0x1FF8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_97832
.p2align 0x4
L_414454:
L_97822:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
L_97823:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_97116
L_97824:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEC2,%r15
	jne L_97116
L_97825:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414457:
L_97767:
	movq 0x0(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r13
	movq 0x18(%rbp),%r10
	movq 0x0(%r10),%r15
L_97768:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_97116
L_97769:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xEC2,%r11
	jne L_97116
L_97770:
	movq 0x8(%r15),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r11
	incq %r11
	jo L_97129
L_97771:
	movq %r11,0x0(%r9)
	movq 0x0(%r15),%r9
	cmpq $0x1,%r9
	je L_414466
L_97772:
	movq 0x0(%r9),%r11
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
.p2align 0x4,,0x7
L_97774:
	movq %r11,%r9
	andq $0x3,%r9
	jnz L_414465
L_97813:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r9
	shrq $0x1,%r9
	cmpq $0xD08,%r9
	jne L_414464
L_97814:
	movq 0x8(%r11),%r9
	cmpq %r13,0x0(%r11)
	movq %r13,(localObjptr+0x8)(%rip)
	je L_414461
L_97775:
	incl %ecx
	jo L_97135
L_97776:
	cmpq $0x1,%r15
	je L_414458
L_97777:
	movq 0x0(%r15),%r11
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r13
	jmp L_97774
.p2align 0x4
L_414458:
L_97778:
L_97779:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_97141
L_97780:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_297
L_97812:
	movl %ecx,0x0(%r15)
x_297:
	movq %r10,0x8(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_97782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_414461:
L_97816:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97817:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_414462
L_97820:
	movl %ecx,0x0(%r14)
	movq %r9,%r15
L_97819:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	jmp L_97116
.p2align 0x4
L_414462:
L_97818:
	movq %r9,%r15
	jmp L_97819
.p2align 0x4
L_414464:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_97775
.p2align 0x4
L_414465:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_97775
.p2align 0x4
L_414466:
L_97821:
	xorl %ecx,%ecx
	jmp L_97779
.p2align 0x4
L_414470:
L_97759:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
L_97760:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_97116
L_97761:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEC2,%r15
	jne L_97116
L_97762:
	movq %r14,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_97763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_87
.p2align 0x4
L_414473:
L_97750:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r11
L_97751:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_97116
L_97752:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xEC2,%r15
	jne L_97116
L_97753:
	movq 0x10(%r11),%r15
	movq 0x8(%r11),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r14)
	jne L_97116
L_97755:
	cmpq $0x1,%r15
	jne L_97116
L_97757:
	movl $0x1,0x0(%r13)
	jmp L_97116
.p2align 0x4
L_414478:
L_97749:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r14),%r13
	movq $0x368D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x28(%rbp)
	addq $0x18,%r12
	movq $0xA,0x20(%rbp)
	movq $0xA,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
L_414479:
L_97682:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x48(%rbp)
	cmpq %r15,%r11
	jne L_97106
L_97684:
	testq %r11,%r11
	jnz L_414508
L_97748:
	movq (globalObjptr+0xDB8)(%rip),%r15
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
L_97688:
	movq $0x0,0x50(%rbp)
loop_1101:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414507
.p2align 0x4,,0x7
L_97689:
	movq 0x48(%rbp),%r13
	cmpq %r13,0x50(%rbp)
	jl L_414492
L_97690:
	movq 0x18(%rbp),%r13
	movq $0x13BF,0xFFFFFFFFFFFFFFF8(%r13)
	movq 0x38(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_97129
L_97691:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_414490
L_97692:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_97694:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_97695
L_97707:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD10,%r13
	jne L_97695
L_97708:
	movq 0x28(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_414485
L_97695:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_97135
L_97696:
	cmpq $0x1,%r15
	je L_414480
L_97697:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_97694
.p2align 0x4
L_414480:
L_97698:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414483
.p2align 0x4,,0x7
L_97699:
	movl 0x38(%rbp),%ecx
L_97700:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97701:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97703
L_97704:
	movl %ecx,0x0(%r15)
L_97703:
	movq $0x1A21,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_97116
.p2align 0x4
L_414483:
L_97705:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_97706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97706
.p2align 0x4
.long 0xFEA
L_97706:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_97699
.p2align 0x4
L_414485:
L_97710:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97711:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_97713:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414490:
L_97714:
	xorl %ecx,%ecx
	jmp L_97700
.p2align 0x4
L_414492:
L_97715:
	movq 0x50(%rbp),%r11
	movl %r11d,%ecx
	movslq %ecx,%r15
	movq 0x40(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x58(%rbp)
	movq 0x8(%r10),%r14
	movq 0x8(%r9),%r15
L_97716:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_97717
L_97719:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEB2,%r13
	jne L_414505
L_97720:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1095,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x1,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x1095,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x1097,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x60(%rbp)
	addq $0x28,%r12
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r15,0x10(%r9)
	movq %r13,0x18(%r9)
	movq $0x27AB,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x68(%rbp)
	movq %r13,0x0(%r9)
	movq %r15,0x8(%r9)
	movq %r10,0x10(%r9)
	movq %r11,0x18(%r9)
	addq $0x28,%r12
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x70(%rbp)
	movq 0x0(%r11),%r10
	movq 0x10(%r14),%r11
	movq %r11,0x78(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r15
	incq %r15
	jo L_97129
L_97721:
	movq %r15,0x0(%r9)
	movq 0x0(%r11),%r9
	cmpq $0x1,%r9
	je L_414503
L_97722:
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
	movq %r10,%r14
.p2align 0x4,,0x7
L_97724:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_414502
L_97737:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD0F,%r11
	jne L_414501
L_97738:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x28)(%rip)
	je L_414498
L_97725:
	incl %ecx
	movl %ecx,0x80(%rbp)
	jo L_97135
L_97726:
	cmpq $0x1,%r15
	je L_414493
L_97727:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x28)(%rip),%r14
	jmp L_97724
.p2align 0x4
L_414493:
L_97728:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414496
.p2align 0x4,,0x7
L_97729:
	movl 0x80(%rbp),%ecx
L_97730:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97731:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97733
L_97734:
	movl %ecx,0x0(%r15)
L_97733:
	movq $0x1A1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x27AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
L_97718:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x50(%rbp)
	jmp loop_1101
.p2align 0x4
L_414496:
L_97735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_97736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97736
.p2align 0x4
.long 0x15D8
L_97736:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_97729
.p2align 0x4
L_414498:
L_97740:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97741:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_97743:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414501:
	movq %r14,(localObjptr+0x28)(%rip)
	jmp L_97725
.p2align 0x4
L_414502:
	movq %r14,(localObjptr+0x28)(%rip)
	jmp L_97725
.p2align 0x4
L_414503:
L_97744:
	xorl %ecx,%ecx
	jmp L_97730
.p2align 0x4
L_414505:
L_97717:
	movq $0x1,%r15
	jmp L_97718
.p2align 0x4
L_414507:
L_97745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_97746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97746
.p2align 0x4
.long 0x15CC
L_97746:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_97689
.p2align 0x4
L_414508:
L_97685:
	movq 0x48(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_97348
L_97686:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14AD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_97687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97687
.p2align 0x4
.long 0xF7E
L_97687:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x18(%rbp)
	jmp L_97688
.p2align 0x4
L_414511:
L_97667:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq $0x3337,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	addq $0x38,%rbp
	leaq (L_97668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_414512:
L_97638:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x50,%rbp
	leaq (L_97639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_73
.p2align 0x4
L_414513:
L_97632:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_97633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_73
.p2align 0x4
L_414514:
L_97594:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x50(%rbp)
	cmpq %r11,%r15
	jne L_97106
L_97596:
	testq %r11,%r11
	jnz L_414529
L_97631:
	movq (globalObjptr+0xDB0)(%rip),%r15
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
L_97600:
	movq $0x0,0x58(%rbp)
loop_1100:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414528
.p2align 0x4,,0x7
L_97601:
	movq 0x50(%rbp),%r13
	cmpq %r13,0x58(%rbp)
	jl L_414527
L_97602:
	movq 0x18(%rbp),%r13
	movq $0xC11,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13B1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x38(%rbp)
	movq %r15,0x8(%r11)
	addq $0x28,%r12
	movq 0x48(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r13,0x10(%r11)
	movq 0x40(%rbp),%r13
	movq %r13,0x18(%r11)
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_97129
L_97603:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_414525
L_97604:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_97606:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_97607
L_97619:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD18,%r13
	jne L_97607
L_97620:
	movq 0x0(%r14),%r13
	cmpq %r13,0x20(%rbp)
	je L_414520
L_97607:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_97608:
	cmpq $0x1,%r15
	je L_414515
L_97609:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_97606
.p2align 0x4
L_414515:
L_97610:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414518
.p2align 0x4,,0x7
L_97611:
	movl 0x18(%rbp),%ecx
L_97612:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97613:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97615
L_97616:
	movl %ecx,0x0(%r15)
L_97615:
	movq $0x1A31,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_97116
.p2align 0x4
L_414518:
L_97617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_97618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97618
.p2align 0x4
.long 0x15D7
L_97618:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_97611
.p2align 0x4
L_414520:
L_97622:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97623:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_97625:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414525:
L_97626:
	xorl %ecx,%ecx
	jmp L_97612
.p2align 0x4
L_414527:
L_97627:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r10
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	movq %r15,%r11
	salq $0x4,%r11
	movq %r14,0x0(%r13,%r11,1)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r15,%r14
	salq $0x4,%r14
	movq %r10,0x8(%r13,%r14,1)
	incq %r15
	movq %r15,0x58(%rbp)
	jmp loop_1100
.p2align 0x4
L_414528:
L_97628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_97629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97629
.p2align 0x4
.long 0x15CF
L_97629:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_97601
.p2align 0x4
L_414529:
L_97597:
	movq 0x50(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_97348
L_97598:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14AB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_97599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97599
.p2align 0x4
.long 0x5FC
L_97599:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x18(%rbp)
	jmp L_97600
.p2align 0x4
L_414532:
L_97593:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movq 0x0(%r15),%r9
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r8
	movq %r8,0x28(%rbp)
	movq 0x10(%r15),%r8
	movq $0x3341,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r8,0x10(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	movq %r9,0x28(%r15)
	movq %r15,0x20(%rbp)
	addq $0x38,%r12
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_414533:
L_97352:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
L_97353:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_97116
L_97354:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEBE,%r15
	je L_414555
	cmpq $0xEC0,%r15
	je L_414537
	cmpq $0xEC1,%r15
	je L_414535
	cmpq $0xEC2,%r15
	je L_414534
	jmp L_97116
.p2align 0x4
L_414534:
L_97480:
	movq %r14,0x60(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	addq $0x58,%rbp
	leaq (L_97481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_93
.p2align 0x4
L_414535:
L_97478:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1207,%r14
	jne L_97116
L_97479:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x3629,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	movb $0x13,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_414537:
L_97417:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x50(%rbp)
	cmpq %rdx,%r14
	movq %r15,0x30(%rbp)
	jne L_97106
L_97419:
	testq %rdx,%rdx
	jz L_414553
L_97420:
	cmpq $0x7FFFFFFF,%rdx
	ja L_97348
L_97421:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1547,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_97422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97422
.p2align 0x4
.long 0x15CD
L_97422:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x20(%rbp)
L_97423:
	movq $0x0,0x58(%rbp)
.p2align 0x4,,0x7
loop_1094:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414551
.p2align 0x4,,0x7
L_97424:
	movq 0x58(%rbp),%r13
	cmpq 0x50(%rbp),%r13
	jnl L_414550
L_97448:
	movl %r13d,%ecx
	movslq %ecx,%r15
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x60(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_97129
L_97449:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_414548
L_97450:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_97452:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_97453
L_97466:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD20,%r13
	jne L_97453
L_97467:
	movq 0x8(%r14),%r13
	movq 0x38(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_414543
L_97453:
	incl %ecx
	movl %ecx,0x68(%rbp)
	jo L_97135
L_97454:
	cmpq $0x1,%r15
	je L_414538
L_97455:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_97452
.p2align 0x4
L_414538:
L_97456:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414541
.p2align 0x4,,0x7
L_97457:
	movl 0x68(%rbp),%ecx
L_97458:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97459:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97461
L_97463:
	movl %ecx,0x0(%r15)
L_97461:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x10A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1A41,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
L_97462:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_1094
.p2align 0x4
L_414541:
L_97464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97465
.p2align 0x4
.long 0x15CE
L_97465:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_97457
.p2align 0x4
L_414543:
L_97469:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97470:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_414544
L_97472:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_97462
.p2align 0x4
L_414544:
L_97471:
	movq %r13,%r15
	jmp L_97462
.p2align 0x4
L_414548:
L_97473:
	xorl %ecx,%ecx
	jmp L_97458
.p2align 0x4
L_414550:
L_97425:
	movq 0x20(%rbp),%r15
	movq $0xD7F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_97426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_79
.p2align 0x4
L_414551:
L_97474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_97475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97475
.p2align 0x4
.long 0x15CF
L_97475:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_97424
.p2align 0x4
L_414553:
L_97477:
	movq (globalObjptr+0x20A0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_97423
.p2align 0x4
L_414555:
L_97355:
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x48(%rbp)
	cmpq %r14,%r11
	jne L_97106
L_97357:
	testq %r11,%r11
	jnz L_414580
L_97416:
	movq (globalObjptr+0x20A0)(%rip),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_97361:
	movq $0x0,0x50(%rbp)
loop_1092:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414579
.p2align 0x4,,0x7
L_97362:
	movq 0x48(%rbp),%r15
	cmpq %r15,0x50(%rbp)
	jl L_414566
L_97363:
	movq 0x20(%rbp),%r15
	movq $0xD7F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_414565
L_97364:
	movq 0x28(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	movq %r10,0x38(%rbp)
	cmpq %r10,%r13
	jne L_97106
L_97366:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r9
	cmpq %r15,%r9
	jne L_97106
L_97368:
	cmpl %r13d,%r11d
	jne L_414562
L_97370:
	testq %r10,%r10
	jnz L_414560
L_97385:
	movq (globalObjptr+0x2098)(%rip),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_97374:
	movq $0x0,0x40(%rbp)
loop_1093:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414559
.p2align 0x4,,0x7
L_97375:
	movq 0x38(%rbp),%r15
	cmpq %r15,0x40(%rbp)
	jl L_414558
L_97376:
	movq 0x28(%rbp),%r15
	movq $0x12B5,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_97106
L_97378:
	cmpl $0x1,%r13d
	jng L_97116
L_97380:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1E29,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_97116
.p2align 0x4
L_414558:
L_97381:
	movq 0x40(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r10
	movq $0x10A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x40(%rbp)
	jmp loop_1093
.p2align 0x4
L_414559:
L_97382:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97383
.p2align 0x4
.long 0x15CA
L_97383:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_97375
.p2align 0x4
L_414560:
L_97371:
	movq 0x38(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_97348
L_97372:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1545,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_97373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97373
.p2align 0x4
.long 0xFEA
L_97373:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x28(%rbp)
	jmp L_97374
.p2align 0x4
L_414562:
L_97279:
	movq (globalObjptr+0x4E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414565:
L_97386:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414566:
L_97387:
	movq 0x50(%rbp),%r13
	movl %r13d,%ecx
	movslq %ecx,%r15
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x58(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_97129
L_97388:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_414577
L_97389:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_97391:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_97392
L_97405:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD20,%r13
	jne L_97392
L_97406:
	movq 0x8(%r14),%r13
	movq 0x38(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_414572
L_97392:
	incl %ecx
	movl %ecx,0x60(%rbp)
	jo L_97135
L_97393:
	cmpq $0x1,%r15
	je L_414567
L_97394:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_97391
.p2align 0x4
L_414567:
L_97395:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414570
.p2align 0x4,,0x7
L_97396:
	movl 0x60(%rbp),%ecx
L_97397:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97398:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97400
L_97402:
	movl %ecx,0x0(%r15)
L_97400:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x10A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1A41,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
L_97401:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x50(%rbp)
	jmp loop_1092
.p2align 0x4
L_414570:
L_97403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97404
.p2align 0x4
.long 0x15CB
L_97404:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_97396
.p2align 0x4
L_414572:
L_97408:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97409:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_414573
L_97411:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_97401
.p2align 0x4
L_414573:
L_97410:
	movq %r13,%r15
	jmp L_97401
.p2align 0x4
L_414577:
L_97412:
	xorl %ecx,%ecx
	jmp L_97397
.p2align 0x4
L_414579:
L_97413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_97414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97414
.p2align 0x4
.long 0x15CC
L_97414:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_97362
.p2align 0x4
L_414580:
L_97358:
	movq 0x48(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_97348
L_97359:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1547,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_97360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97360
.p2align 0x4
.long 0x15C9
L_97360:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x20(%rbp)
	jmp L_97361
.p2align 0x4
L_414584:
L_97256:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_97257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_79
.p2align 0x4
L_414585:
L_97195:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_97196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_414586:
L_97159:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_97160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_414587:
L_97124:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r9
	cmpq %r9,%r15
	jne L_97106
L_97126:
	movl %r14d,0x50(%rbp)
	movq $0x39B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r10,0x8(%r15)
	addq $0x20,%r12
	movq %r13,0x10(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_97127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_24
.p2align 0x4
L_414589:
L_97119:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r10
	movq %r10,0x38(%rbp)
	movq 0x18(%r15),%r10
	movq %r10,0x50(%rbp)
	movq $0x33F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_97120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_414590:
L_99856:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r11)
	movq $0x2,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_99857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_414591:
L_97110:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414592:
L_99858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_99859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99859
.p2align 0x4
.long 0x45D
L_99859:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_97109
.p2align 0x4
L_414593:
L_99860:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x557
x_294:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97114
L_97117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_97118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97118
.p2align 0x4
.long 0x45A
L_97118:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_97114:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x3681,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1,0x20(%rbp)
	movq $0x1,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x525
L_99786:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je coerceRaise_0
	cmpq $0x2,%r15
	je L_97116
L_99787:
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_97116
	cmpq $0x2,%r13
	je coerceRaise_1
L_99788:
	cmpq $0x1,%r14
	je L_97116
L_99789:
	movq %r13,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_99790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1339
.p2align 0x4
coerceRaise_1:
coerceRaise_0:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_97116
L_99805:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_414603
L_99806:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x18(%rbp)
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_97106
L_99808:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_97106
L_99810:
	cmpl %r11d,%ecx
	jne L_98021
L_99812:
	cmpl $0x0,%r11d
	jl L_414599
L_99813:
	xorl %ecx,%ecx
loop_1110:
	cmpl 0x18(%rbp),%ecx
	jnl L_97116
L_99815:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x1C(%rbp)
	movslq %ecx,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x50(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_99816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_2
.p2align 0x4
L_414599:
L_98021:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414603:
L_99818:
	movq (globalObjptr+0xDF0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x523
L_97115:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_97116
.p2align 0x4
.long 0x163D
L_99730:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99731
L_99779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_99780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99780
.p2align 0x4
.long 0x1642
L_99780:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_99731:
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0xA8(%rbp)
	cmpq %r11,%r14
	jne L_97106
L_99733:
	testq %r11,%r11
	jz L_414624
L_99734:
	cmpq $0x7FFFFFFF,%r11
	ja L_97348
L_99735:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99736
L_99775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_99776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99776
.p2align 0x4
.long 0x163E
L_99776:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_99736:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14AF,%rcx
	movq 0xA8(%rbp),%rdx
	movq $0x120,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_99737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99737
.p2align 0x4
.long 0x163E
L_99737:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0xB0(%rbp)
L_99738:
	movq $0x0,0xB8(%rbp)
loop_1108:
	movq 0xA8(%rbp),%r11
	cmpq %r11,0xB8(%rbp)
	jl L_414621
L_99739:
	movq 0xB0(%rbp),%r11
	movq $0x70D,0xFFFFFFFFFFFFFFF8(%r11)
	movq $0x2791,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x711,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x20(%rbp)
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x715,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x717,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0xA0(%rbp)
	movq %r15,0x0(%r9)
	addq $0x28,%r12
	movq %r10,0x8(%r9)
	movq 0x28(%rbp),%r10
	movq %r10,0x10(%r9)
	movq %r11,0x18(%r9)
	movq 0x30(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0xA8(%rbp)
	movq 0x0(%r11),%r14
	movq 0x98(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0xB8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_97129
L_99740:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_414619
L_99741:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_99743:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_414618
L_99762:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD29,%r11
	jne L_414617
L_99763:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x10)(%rip)
	je L_414614
L_99744:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_97135
L_99745:
	cmpq $0x1,%r15
	je L_414607
L_99746:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_99743
.p2align 0x4
L_414607:
L_99747:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99748
L_99760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_99761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99761
.p2align 0x4
.long 0x163F
L_99761:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_99748:
	movl 0x30(%rbp),%ecx
L_99749:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_99750:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_99752
L_99759:
	movl %ecx,0x0(%r15)
L_99752:
	movq $0x1A53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_414609
L_99753:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_414608
L_99754:
L_99755:
	movq $0x41C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x78,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x48(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x50(%rbp),%r11
	movq %r11,0x18(%r13)
	movq 0x58(%rbp),%r11
	movq %r11,0x20(%r13)
	movq 0x28(%rbp),%r11
	movq %r11,0x28(%r13)
	movq 0x60(%rbp),%r11
	movq %r11,0x30(%r13)
	movq 0x68(%rbp),%r11
	movq %r11,0x38(%r13)
	movq 0x70(%rbp),%r11
	movq %r11,0x40(%r13)
	movq 0x78(%rbp),%r11
	movq %r11,0x48(%r13)
	movq 0x80(%rbp),%r11
	movq %r11,0x50(%r13)
	movq 0x88(%rbp),%r11
	movq %r11,0x58(%r13)
	movq 0x90(%rbp),%r11
	movq %r11,0x60(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x68(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_99756:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_97116
.p2align 0x4
L_414608:
L_99757:
	movq $0x41C3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x78,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x20(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x28(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x30(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x38(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x40(%r14)
	movq 0x78(%rbp),%r13
	movq %r13,0x48(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x50(%r14)
	movq 0x88(%rbp),%r13
	movq %r13,0x58(%r14)
	movq 0x90(%rbp),%r13
	movq %r13,0x60(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x68(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_99756
.p2align 0x4
L_414609:
L_99758:
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1370
.p2align 0x4
L_414614:
L_99765:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_99766:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_99768:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414617:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_99744
.p2align 0x4
L_414618:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_99744
.p2align 0x4
L_414619:
L_99769:
	xorl %ecx,%ecx
	jmp L_99749
.p2align 0x4
L_414621:
L_99770:
	movq 0xB8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xC0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xD0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_99771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
L_414624:
L_99778:
	movq (globalObjptr+0xDE8)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_99738
.p2align 0x4
.long 0x55F
L_99709:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xEDD8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_99710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x597
fromTypes_0:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99626
L_99706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_99707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99707
.p2align 0x4
.long 0x59F
L_99707:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_99626:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %r14,%rdx
	jne L_97106
L_99628:
	testq %rdx,%rdx
	jz L_414644
L_99629:
	cmpq $0x7FFFFFFF,%rdx
	ja L_97348
L_99630:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1547,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_99631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99631
.p2align 0x4
.long 0x100F
L_99631:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
L_99632:
	movq $0x1,0x68(%rbp)
	movq $0x0,0x70(%rbp)
.p2align 0x4,,0x7
loop_1107:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414642
.p2align 0x4,,0x7
L_99633:
	movq 0x70(%rbp),%r13
	cmpq 0x58(%rbp),%r13
	jnl L_414640
L_99673:
	movl %r13d,%r11d
	movslq %r11d,%r15
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x78(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_97129
L_99674:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_414638
L_99675:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x80(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_99677:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_99678
L_99691:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD1C,%r13
	jne L_99678
L_99692:
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x50(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_414632
L_99678:
	movl 0x80(%rbp),%r13d
	incl %r13d
	movl %r13d,0x84(%rbp)
	jo L_97135
L_99679:
	cmpq $0x1,%r15
	je L_414627
L_99680:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x80(%rbp)
	jmp L_99677
.p2align 0x4
L_414627:
L_99681:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414630
.p2align 0x4,,0x7
L_99682:
	movl 0x84(%rbp),%ecx
L_99683:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_99684:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_99686
L_99688:
	movl %ecx,0x0(%r15)
L_99686:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1A39,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq 0x50(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r13,0x8(%r11)
	movq 0x0(%r14),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r14)
	movq %r13,%r14
L_99687:
	movq %r15,0x68(%rbp)
	movq $0x10A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_1107
.p2align 0x4
L_414630:
L_99689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_99690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99690
.p2align 0x4
.long 0x1639
L_99690:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_99682
.p2align 0x4
L_414632:
L_99694:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414635
.p2align 0x4,,0x7
L_99695:
	movl 0x80(%rbp),%r13d
	movslq %r13d,%r15
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r15
	jo L_97141
L_99696:
	movq %r15,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r11
	cmpl %r13d,0x0(%r11)
	jl L_414633
L_99697:
	movq 0x68(%rbp),%r15
	movq 0x88(%rbp),%r14
	jmp L_99687
.p2align 0x4
L_414633:
L_99698:
	movq (globalObjptr+0x1078)(%rip),%r13
	movl 0x80(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movq 0x68(%rbp),%r15
	movq 0x88(%rbp),%r14
	jmp L_99687
.p2align 0x4
L_414635:
L_99699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_99700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99700
.p2align 0x4
.long 0x163A
L_99700:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_99695
.p2align 0x4
L_414638:
L_99701:
	xorl %ecx,%ecx
	jmp L_99683
.p2align 0x4
L_414640:
L_99634:
	movq 0x60(%rbp),%r15
	movq $0xD7F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_414641
L_99635:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
L_99636:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x3DE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_99637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_414641:
L_99641:
	movq $0x33FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_99642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_414642:
L_99702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_99703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99703
.p2align 0x4
.long 0x163B
L_99703:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_99633
.p2align 0x4
L_414644:
L_99705:
	movq (globalObjptr+0x2090)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_99632
.p2align 0x4
.long 0x576
L_99618:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99619
L_99620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_99621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99621
.p2align 0x4
.long 0x575
L_99621:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_99619:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x33DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	movq $0xA,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x2A,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x528
L_99596:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99597
L_99615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_99616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99616
.p2align 0x4
.long 0x530
L_99616:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_99597:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_97116
L_99598:
	cmpq $0x1,%r15
	je L_414648
L_99599:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movb $0xF,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_99600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_414648:
L_99602:
	movq $0x3437,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_99603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
.long 0x5C9
L_99495:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
L_99496:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_97116
L_99497:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBD,%r14
	je L_414652
	cmpq $0xEC2,%r14
	je L_414651
	jmp L_97116
.p2align 0x4
L_414651:
L_99510:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq %r14,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_99511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_66
.p2align 0x4
L_414652:
L_99498:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_97116
L_99500:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x4F,%r15
	je L_414654
L_99501:
	andq $0x3,%r14
	jnz L_97116
L_99502:
	jmp L_97116
.p2align 0x4
L_414654:
L_99503:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_414655
L_99504:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movb $0xE,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_99505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_414655:
L_99506:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_97116
L_99507:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0xE,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x55F
L_99490:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99491
L_99492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_99493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99493
.p2align 0x4
.long 0xF85
L_99493:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_99491:
	movq $0x3303,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x576
L_99432:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_99433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x456
L_99401:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99402
L_99403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_99404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99404
.p2align 0x4
.long 0x561
L_99404:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_99402:
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r15,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp L_97116
.p2align 0x4
.long 0x5B5
L_99384:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99385
L_99394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_99395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99395
.p2align 0x4
.long 0x11AE
L_99395:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_99385:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%r13)
	movq $0x31A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x10(%r15)
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_99386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_9
.p2align 0x4
.long 0x456
L_99379:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99380
L_99381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_99382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99382
.p2align 0x4
.long 0x561
L_99382:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_99380:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r15,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp L_97116
.p2align 0x4
.long 0x57E
L_99351:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_99352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_0
.p2align 0x4
.long 0x558
L_99347:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_0
.p2align 0x4
.long 0x57E
L_99328:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_99329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getFuncNode_0
.p2align 0x4
.long 0x57A
L_99275:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	movq %r15,0x50(%rbp)
	jz L_97116
L_99277:
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_99278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getFuncNode_0
.p2align 0x4
.long 0x528
L_99267:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99268
L_99269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_99270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99270
.p2align 0x4
.long 0xF84
L_99270:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_99268:
	movq $0x330B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x528
L_99245:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99246
L_99264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_99265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99265
.p2align 0x4
.long 0x530
L_99265:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_99246:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_97116
L_99247:
	cmpq $0x1,%r15
	je L_414665
L_99248:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movb $0x9,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_99249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_414665:
L_99251:
	movq $0x342D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_99252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
.long 0x5C9
L_99144:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
L_99145:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_97116
L_99146:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBD,%r14
	je L_414669
	cmpq $0xEC2,%r14
	je L_414668
	jmp L_97116
.p2align 0x4
L_414668:
L_99159:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq %r14,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_99160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_67
.p2align 0x4
L_414669:
L_99147:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_97116
L_99149:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x4F,%r15
	je L_414671
L_99150:
	andq $0x3,%r14
	jnz L_97116
L_99151:
	jmp L_97116
.p2align 0x4
L_414671:
L_99152:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_414672
L_99153:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movb $0xA,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_99154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_414672:
L_99155:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_97116
L_99156:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0xA,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x1622
not_9:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	testl %r15d,%r15d
	jnz L_414676
L_99117:
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_99118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_414676:
L_99139:
	movl 0x18(%rbp),%r15d
	incl %r15d
	jo L_97135
L_99140:
	movl %r15d,0x18(%rbp)
	jmp loop_1106
.p2align 0x4
.long 0x523
L_99071:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99072
L_99084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_99085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99085
.p2align 0x4
.long 0x524
L_99085:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_99072:
	movq 0x18(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r14
	movq $0x19D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	cmpq $0x1,%r14
	je L_414681
L_99073:
	movq 0x8(%r14),%r14
	xorl %ecx,%ecx
	movq %r14,%r15
.p2align 0x4,,0x7
L_99074:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_99075:
	cmpq $0x1,%r15
	je L_414678
L_99076:
	movq 0x8(%r15),%r15
	jmp L_99074
.p2align 0x4
L_414678:
L_99077:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99078
L_99081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_99082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99082
.p2align 0x4
.long 0x575
L_99082:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_99078:
	movl 0x18(%rbp),%ecx
L_99079:
	movl %ecx,0x40(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_99080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_414681:
L_99083:
	xorl %ecx,%ecx
	jmp L_99079
.p2align 0x4
.long 0x557
L_99064:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99065
L_99068:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_99069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99069
.p2align 0x4
.long 0x579
L_99069:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_99065:
	movq 0x18(%rbp),%r15
	andq $0x1,%r15
	jnz L_97154
L_99066:
	movq $0x1955,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_97116
.p2align 0x4
.long 0x540
L_99035:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99036
L_99061:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_99062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99062
.p2align 0x4
.long 0x530
L_99062:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_99036:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x13E3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x0(%r13)
	addq $0x28,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x38(%rbp),%r11
	movq %r11,0x18(%r13)
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_97129
L_99037:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_414695
L_99038:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_99040:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_99041
L_99053:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCEE,%r13
	jne L_99041
L_99054:
	movq 0x0(%r14),%r13
	cmpq %r13,0x20(%rbp)
	je L_414690
L_99041:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_99042:
	cmpq $0x1,%r15
	je L_414685
L_99043:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_99040
.p2align 0x4
L_414685:
L_99044:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99045
L_99051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_99052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99052
.p2align 0x4
.long 0x15BB
L_99052:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_99045:
	movl 0x18(%rbp),%ecx
L_99046:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_99047:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_99049
L_99050:
	movl %ecx,0x0(%r15)
L_99049:
	movq $0x19DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_97116
.p2align 0x4
L_414690:
L_99056:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_99057:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_99059:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414695:
L_99060:
	xorl %ecx,%ecx
	jmp L_99046
.p2align 0x4
.long 0x1
L_98940:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_98941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x525
L_98978:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_98979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x540
L_98874:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98875
L_98900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_98901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98901
.p2align 0x4
.long 0x530
L_98901:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_98875:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x13EF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x0(%r13)
	addq $0x28,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x38(%rbp),%r11
	movq %r11,0x18(%r13)
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_97129
L_98876:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_414708
L_98877:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_98879:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_98880
L_98892:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCE7,%r13
	jne L_98880
L_98893:
	movq 0x20(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_414703
L_98880:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_98881:
	cmpq $0x1,%r15
	je L_414698
L_98882:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_98879
.p2align 0x4
L_414698:
L_98883:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98884
L_98890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_98891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98891
.p2align 0x4
.long 0x15BB
L_98891:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_98884:
	movl 0x18(%rbp),%ecx
L_98885:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98886:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_98888
L_98889:
	movl %ecx,0x0(%r15)
L_98888:
	movq $0x19CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_97116
.p2align 0x4
L_414703:
L_98895:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98896:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_98898:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414708:
L_98899:
	xorl %ecx,%ecx
	jmp L_98885
.p2align 0x4
.long 0x557
L_98867:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98868
L_98869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_98870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98870
.p2align 0x4
.long 0x579
L_98870:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_98868:
	movq $0x331B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x5B5
L_98832:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98833
L_98864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_98865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98865
.p2align 0x4
.long 0x566
L_98865:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_98833:
	cmpq $0x1,0x18(%rbp)
	jne L_98835
L_98863:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r11,0x0(%r9)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r15)
	movq $0x196B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	movq %r11,0x18(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
L_98835:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (label_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x456
L_98826:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98827
L_98829:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_98830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98830
.p2align 0x4
.long 0x5E0
L_98830:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_98827:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1B65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x2,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x38(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_98828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x587
L_98769:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98770
L_98798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_98799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98799
.p2align 0x4
.long 0x589
L_98799:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_98770:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_414727
L_98771:
	movq %r15,0x40(%rbp)
L_98772:
	movq 0x40(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_97129
L_98773:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_414725
L_98774:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_98776:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_98777
L_98789:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xC9F,%r13
	jne L_98777
L_98790:
	movq 0x0(%r14),%r13
	cmpq %r13,0x28(%rbp)
	je L_414720
L_98777:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_97135
L_98778:
	cmpq $0x1,%r15
	je L_414715
L_98779:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_98776
.p2align 0x4
L_414715:
L_98780:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98781
L_98787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_98788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98788
.p2align 0x4
.long 0x1621
L_98788:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_98781:
	movl 0x50(%rbp),%ecx
L_98782:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98783:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_98785
L_98786:
	movl %ecx,0x0(%r15)
L_98785:
	movq $0x193F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x369F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	movq $0x17,0x20(%rbp)
	movq $0x16,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
L_414720:
L_98792:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98793:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_98795:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414725:
L_98796:
	xorl %ecx,%ecx
	jmp L_98782
.p2align 0x4
L_414727:
L_98797:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	movq %r11,0x40(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r10,0x0(%r13)
	jmp L_98772
.p2align 0x4
.long 0x557
L_98762:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98763
L_98766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_98767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98767
.p2align 0x4
.long 0x579
L_98767:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_98763:
	movq 0x18(%rbp),%r15
	andq $0x1,%r15
	jnz L_97154
L_98764:
	movq $0x1955,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_97116
.p2align 0x4
.long 0x456
L_98760:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_97116
.p2align 0x4
.long 0x456
L_98758:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_97116
.p2align 0x4
.long 0x15FA
L_98424:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98425
L_98755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_98756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98756
.p2align 0x4
.long 0x1620
L_98756:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_98425:
	cmpq $0x1,0x18(%rbp)
	jne L_98427
L_98754:
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r11,0x0(%r9)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r15)
	movq $0x196B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	movq %r11,0x18(%rbp)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
L_98427:
	movq $0xCFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_414740
L_98428:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEBE,%r13
	je L_414738
	cmpq $0xEBF,%r13
	je L_414736
	cmpq $0xEC0,%r13
	je L_414735
	cmpq $0xEC1,%r13
	je L_414733
	cmpq $0xEC2,%r13
	je L_414732
	cmpq $0xEC3,%r13
	je L_414731
L_98429:
	movq 0x10(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movb $0x0,0xB8(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xB8,%rbp
	leaq (L_98430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp edge_1
.p2align 0x4
L_414731:
L_98731:
	movq 0x18(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movb $0x0,0xC0(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r14
	movq %r14,0xC8(%rbp)
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (L_98732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp edge_1
.p2align 0x4
L_414732:
L_98695:
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_98696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_414733:
L_98683:
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1206,%r14
	je L_414734
L_98694:
	movq 0x0(%r13),%r14
	movq %r14,0xD0(%rbp)
	movq $0x361D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xC8(%rbp)
	movb $0xD,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_98685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_414734:
L_98684:
	movq 0x8(%r13),%r14
	movq %r14,0xD0(%rbp)
	movq $0x364F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xC8(%rbp)
	movb $0xD,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_98685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_414735:
L_98661:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x28(%rbp)
	movb $0x0,0xB8(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r14
	movq %r14,0xC0(%rbp)
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xB8,%rbp
	leaq (L_98662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp edge_1
.p2align 0x4
L_414736:
L_98644:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_97106
L_98646:
	movl %r11d,0xC0(%rbp)
	movq $0x3C3D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_98647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_414738:
L_98627:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_97106
L_98629:
	movl %r11d,0xC0(%rbp)
	movq $0x3B93,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_98630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_414740:
L_98753:
	movq (globalObjptr+0xDC8)(%rip),%r13
	xchgq %r13,%r15
L_98441:
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_98442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x57E
L_98357:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98358
L_98421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_98422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98422
.p2align 0x4
.long 0x59F
L_98422:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_98358:
	movq 0x48(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_97129
L_98359:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_414770
L_98360:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x58(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_98362:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_98363
L_98410:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCAC,%r13
	jne L_98363
L_98411:
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_414764
L_98363:
	movl 0x58(%rbp),%r13d
	incl %r13d
	movl %r13d,0x5C(%rbp)
	jo L_97135
L_98364:
	cmpq $0x1,%r15
	je L_414743
L_98365:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x58(%rbp)
	jmp L_98362
.p2align 0x4
L_414743:
L_98366:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98367
L_98408:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_98409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98409
.p2align 0x4
.long 0x1003
L_98409:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_98367:
	movl 0x5C(%rbp),%ecx
L_98368:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98369:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_98371
L_98407:
	movl %ecx,0x0(%r15)
L_98371:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13B7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x1959,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x0(%r14)
	movq %r11,%r15
L_98372:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x18(%rbp),%r11
	cmpq $0x1,%r11
	je L_414759
	cmpq $0x2,%r11
	je L_414758
L_98373:
	movl $0x1,%ecx
	movq %r13,%r15
L_98374:
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_97116
L_98375:
	movl $0x1,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x114D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x20,%r12
	movq 0x48(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r15,0x10(%r11)
	movq 0x0(%r14),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	testl %ecx,%ecx
	jnz L_414756
L_98376:
	movq (globalObjptr+0xDC0)(%rip),%r15
	movq %r15,0x20(%rbp)
L_98377:
	movq 0x40(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_97129
L_98378:
	movq %r15,0x0(%r11)
	movq 0x18(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_414754
L_98379:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_98381:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_414753
L_98394:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCBF,%r11
	jne L_414752
L_98395:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_414749
L_98382:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_97135
L_98383:
	cmpq $0x1,%r15
	je L_414744
L_98384:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_98381
.p2align 0x4
L_414744:
L_98385:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98386
L_98392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_98393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98393
.p2align 0x4
.long 0xEAC
L_98393:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_98386:
	movl 0x30(%rbp),%ecx
L_98387:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98388:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_98390
L_98391:
	movl %ecx,0x0(%r15)
L_98390:
	movq $0x197F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_97116
.p2align 0x4
L_414749:
L_98397:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98398:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_98400:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414752:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_98382
.p2align 0x4
L_414753:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_98382
.p2align 0x4
L_414754:
L_98401:
	xorl %ecx,%ecx
	jmp L_98387
.p2align 0x4
L_414756:
L_98402:
	movq $0x1,0x20(%rbp)
	jmp L_98377
.p2align 0x4
L_414758:
	movq %r14,%r15
L_98405:
	xorl %ecx,%ecx
	jmp L_98374
.p2align 0x4
L_414759:
	movq %r14,%r15
	jmp L_98405
.p2align 0x4
L_414764:
L_98413:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98414
L_98418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_98419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98419
.p2align 0x4
.long 0x15F9
L_98419:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_98414:
	movl 0x58(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_97141
L_98415:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_414765
L_98416:
	movq 0x60(%rbp),%r15
	jmp L_98372
.p2align 0x4
L_414765:
L_98417:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x58(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x60(%rbp),%r15
	jmp L_98372
.p2align 0x4
L_414770:
L_98420:
	xorl %ecx,%ecx
	jmp L_98368
.p2align 0x4
.long 0x576
L_98349:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98350
L_98351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_98352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98352
.p2align 0x4
.long 0x575
L_98352:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_98350:
	movq $0x3321,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x1
L_98318:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_98185:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_98186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x525
L_98223:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_98224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x456
L_98172:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_97116
.p2align 0x4
.long 0x456
L_98170:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_97116
.p2align 0x4
.long 0x541
L_98165:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98166
L_98167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_98168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98168
.p2align 0x4
.long 0x15F6
L_98168:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_98166:
	movq $0x3313,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x528
L_98062:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_98063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x558
L_98008:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98009
L_98010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_98011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98011
.p2align 0x4
.long 0x45A
L_98011:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_98009:
	movq $0x342B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
.long 0x57F
L_98054:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98055
L_98058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_98059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98059
.p2align 0x4
.long 0x563
L_98059:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_98055:
	movq $0x342B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_98056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
.long 0x57F
L_98045:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98046
L_98051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_98052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98052
.p2align 0x4
.long 0x563
L_98052:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_98046:
	movq $0x342B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_98047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
.long 0x556
L_98034:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_97116
L_98035:
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_98036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1335
.p2align 0x4
.long 0x558
L_98015:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x30(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_97106
L_98017:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_97106
L_98019:
	cmpl %ecx,%r11d
	jne L_98021
L_98022:
	cmpl $0x0,%r11d
	jl L_98021
L_98023:
	xorl %ecx,%ecx
loop_1103:
	cmpl 0x30(%rbp),%ecx
	jnl L_97116
L_98025:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x34(%rbp)
	movslq %ecx,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_98026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1428
.p2align 0x4
.long 0x557
L_97966:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97968
L_97978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_97979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97979
.p2align 0x4
.long 0x579
L_97979:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_97968:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_97116
L_97969:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBD,%r14
	je L_414787
	cmpq $0xEC3,%r14
	je L_414784
	jmp L_97116
.p2align 0x4
L_414784:
L_97974:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x52,%r15
	je L_414786
L_97975:
	andq $0x3,%r14
	jnz L_97116
L_97976:
	jmp L_97116
.p2align 0x4
L_414786:
L_97977:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414787:
L_97970:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x52,%r15
	je L_414789
L_97971:
	andq $0x3,%r14
	jnz L_97116
L_97972:
	jmp L_97116
.p2align 0x4
L_414789:
L_97973:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x528
L_97937:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97938
L_97963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97964
.p2align 0x4
.long 0x530
L_97964:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_97938:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_97116
L_97939:
	cmpq $0x1,%r15
	je L_414792
L_97940:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movb $0xC,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_97941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_414792:
L_97943:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_414793
L_97944:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movb $0x9,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_97945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_414793:
L_97947:
	movq $0x340B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_97948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
.long 0x528
L_97931:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97932
L_97934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97935
.p2align 0x4
.long 0x530
L_97935:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_97932:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,0x8(%r14)
	jne L_97116
L_97933:
	movq $0x3691,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x28(%rbp)
	movq $0xD,0x20(%rbp)
	movq $0xD,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x456
L_97926:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97927
L_97928:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_97929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97929
.p2align 0x4
.long 0x561
L_97929:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_97927:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x114D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x20,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r15,0x10(%r11)
	movq 0x0(%r14),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_97116
.p2align 0x4
.long 0x57E
L_97913:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_97914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getFuncNode_0
.p2align 0x4
.long 0x15DA
L_97862:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1450,%r15
	jne L_414800
L_97864:
	movq 0x8(%r14),%r15
	movq %r15,0x78(%rbp)
	cmpq $0x1,%r15
	je L_97872
L_97865:
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_97866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_414800:
L_97863:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_97782:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_97783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x525
L_97763:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_414802
L_97764:
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_97135
L_97765:
	movl %r15d,0x0(%r14)
	jmp L_97116
.p2align 0x4
L_414802:
L_97766:
	movq 0x28(%rbp),%r15
	movl $0x1,0x0(%r15)
	jmp L_97116
.p2align 0x4
.long 0x557
L_97668:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97670
L_97680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_97681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97681
.p2align 0x4
.long 0x579
L_97681:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_97670:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_97116
L_97671:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBD,%r14
	je L_414806
	cmpq $0xEC3,%r14
	je L_414803
	jmp L_97116
.p2align 0x4
L_414803:
L_97676:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x52,%r15
	je L_414805
L_97677:
	andq $0x3,%r14
	jnz L_97116
L_97678:
	jmp L_97116
.p2align 0x4
L_414805:
L_97679:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_414806:
L_97672:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x52,%r15
	je L_414808
L_97673:
	andq $0x3,%r14
	jnz L_97116
L_97674:
	jmp L_97116
.p2align 0x4
L_414808:
L_97675:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x528
L_97639:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97640
L_97665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97666
.p2align 0x4
.long 0x530
L_97666:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_97640:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_97116
L_97641:
	cmpq $0x1,%r15
	je L_414811
L_97642:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movb $0x7,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_97643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_414811:
L_97645:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_414812
L_97646:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movb $0xF,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_97647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_414812:
L_97649:
	movq $0x3401,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_97650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
.long 0x528
L_97633:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97634
L_97636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97637
.p2align 0x4
.long 0x530
L_97637:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_97634:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,0x8(%r14)
	jne L_97116
L_97635:
	movq $0x36B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x28(%rbp)
	movq $0x2B,0x20(%rbp)
	movq $0x27,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x57A
L_97481:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x78(%rbp)
	cmpq %r14,%rdx
	jne L_97106
L_97483:
	testq %rdx,%rdx
	jz L_414863
L_97484:
	cmpq $0x7FFFFFFF,%rdx
	ja L_97348
L_97485:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1547,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_97486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97486
.p2align 0x4
.long 0x15D0
L_97486:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,0x20(%rbp)
L_97487:
	movq $0x0,0x50(%rbp)
.p2align 0x4,,0x7
loop_1096:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414861
.p2align 0x4,,0x7
L_97488:
	movq 0x50(%rbp),%r13
	cmpq 0x78(%rbp),%r13
	jnl L_414829
L_97563:
	movl %r13d,%ecx
	movslq %ecx,%r15
	movq 0x48(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x80(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_97129
L_97564:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_414827
L_97565:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_97567:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_97568
L_97581:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD20,%r13
	jne L_97568
L_97582:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x68(%rbp)
	je L_414822
L_97568:
	incl %ecx
	movl %ecx,0x88(%rbp)
	jo L_97135
L_97569:
	cmpq $0x1,%r15
	je L_414817
L_97570:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_97567
.p2align 0x4
L_414817:
L_97571:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414820
.p2align 0x4,,0x7
L_97572:
	movl 0x88(%rbp),%ecx
L_97573:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97574:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97576
L_97578:
	movl %ecx,0x0(%r15)
L_97576:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x10A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1A41,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
L_97577:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x50(%rbp)
	jmp loop_1096
.p2align 0x4
L_414820:
L_97579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_97580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97580
.p2align 0x4
.long 0x15D5
L_97580:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_97572
.p2align 0x4
L_414822:
L_97584:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97585:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_414823
L_97587:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_97577
.p2align 0x4
L_414823:
L_97586:
	movq %r13,%r15
	jmp L_97577
.p2align 0x4
L_414827:
L_97588:
	xorl %ecx,%ecx
	jmp L_97573
.p2align 0x4
L_414829:
L_97489:
	movq 0x20(%rbp),%r15
	movq $0xD7F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r13
	movq %r13,0x50(%rbp)
	cmpq %r14,%r13
	jne L_97106
L_97491:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r10d
	movslq %r10d,%r9
	cmpq %r14,%r9
	jne L_97106
L_97493:
	cmpl %r11d,%r10d
	jne L_97279
L_97495:
	testq %r13,%r13
	jz L_414857
L_97496:
	cmpq $0x7FFFFFFF,%r13
	ja L_97348
L_97497:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1545,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97498
.p2align 0x4
.long 0x15D1
L_97498:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x28(%rbp)
L_97499:
	movq $0x0,0x68(%rbp)
.p2align 0x4,,0x7
loop_1097:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414855
.p2align 0x4,,0x7
L_97500:
	movq 0x68(%rbp),%r15
	cmpq 0x50(%rbp),%r15
	jnl L_414830
L_97558:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r10
	movq $0x10A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x68(%rbp)
	jmp loop_1097
.p2align 0x4
L_414830:
L_97501:
	movq 0x28(%rbp),%r14
	movq $0x12B5,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_97106
L_97503:
	cmpl $0x1,%r11d
	jg L_414851
L_97504:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_414833
	cmpq $0x2,%r14
	je L_97116
L_97505:
	movq 0x0(%r14),%r13
	xchgq %r13,%r15
L_97506:
	cmpq $0x1,0x58(%rbp)
	je L_97116
L_97507:
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_97508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_79
.p2align 0x4
L_414833:
L_97549:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_97116
L_97551:
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_97116
L_97552:
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
unify_0:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %rdx,%r14
	jne L_97106
L_97510:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	movq %r10,0x38(%rbp)
	jne L_97106
L_97512:
	cmpl %r11d,%r13d
	jne L_97279
L_97514:
	testq %rdx,%rdx
	jz L_414845
L_97515:
	cmpq $0x7FFFFFFF,%rdx
	ja L_97348
L_97516:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1545,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_97517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97517
.p2align 0x4
.long 0x15D3
L_97517:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_97518:
	movq $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_1098:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414843
.p2align 0x4,,0x7
L_97519:
	movq 0x48(%rbp),%r15
	cmpq 0x30(%rbp),%r15
	jnl L_414834
L_97541:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r10
	movq $0x10A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x48(%rbp)
	jmp loop_1098
.p2align 0x4
L_414834:
L_97520:
	movq 0x40(%rbp),%r14
	movq $0x12B5,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_97106
L_97522:
	cmpl $0x1,%r11d
	jng L_97524
L_97540:
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1E29,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,0x0(%r10)
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_97524:
	movq 0x38(%rbp),%rdx
	testq %rdx,%rdx
	jz L_414840
L_97525:
	cmpq $0x7FFFFFFF,%rdx
	ja L_97348
L_97526:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1545,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_97527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97527
.p2align 0x4
.long 0x15D3
L_97527:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x30(%rbp)
L_97528:
	movq $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_1099:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414838
.p2align 0x4,,0x7
L_97529:
	movq 0x40(%rbp),%r15
	cmpq 0x38(%rbp),%r15
	jnl L_414835
L_97535:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r10
	movq $0x10A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x40(%rbp)
	jmp loop_1099
.p2align 0x4
L_414835:
L_97530:
	movq 0x30(%rbp),%r14
	movq $0x12B5,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_97106
L_97532:
	cmpl $0x1,%r11d
	jng L_97116
L_97534:
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1E29,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,0x0(%r10)
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	jmp L_97116
.p2align 0x4
L_414838:
L_97536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97537
.p2align 0x4
.long 0x15CA
L_97537:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_97529
.p2align 0x4
L_414840:
L_97539:
	movq (globalObjptr+0x2098)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_97528
.p2align 0x4
L_414843:
L_97542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_97543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97543
.p2align 0x4
.long 0x15D4
L_97543:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_97519
.p2align 0x4
L_414845:
L_97545:
	movq (globalObjptr+0x2098)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_97518
.p2align 0x4
L_414851:
L_97554:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1E29,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_97549
	cmpq $0x2,%r14
	je L_97116
L_97555:
	movq 0x0(%r14),%r13
	xchgq %r13,%r15
	jmp L_97506
.p2align 0x4
L_414855:
L_97559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97560
.p2align 0x4
.long 0x15C8
L_97560:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_97500
.p2align 0x4
L_414857:
L_97562:
	movq (globalObjptr+0x2098)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_97499
.p2align 0x4
L_414861:
L_97589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_97590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97590
.p2align 0x4
.long 0x15D6
L_97590:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_97488
.p2align 0x4
L_414863:
L_97592:
	movq (globalObjptr+0x20A0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_97487
.p2align 0x4
.long 0x557
L_97426:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x38(%rbp)
	cmpq %rdx,%r13
	jne L_97106
L_97428:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r14,%r10
	jne L_97106
L_97430:
	cmpl %r11d,%r13d
	jne L_97279
L_97432:
	testq %rdx,%rdx
	jz L_414870
L_97433:
	cmpq $0x7FFFFFFF,%rdx
	ja L_97348
L_97434:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1545,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_97435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97435
.p2align 0x4
.long 0xFEA
L_97435:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x28(%rbp)
L_97436:
	movq $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_1095:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414868
.p2align 0x4,,0x7
L_97437:
	movq 0x40(%rbp),%r15
	cmpq 0x38(%rbp),%r15
	jnl L_414865
L_97443:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r10
	movq $0x10A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x40(%rbp)
	jmp loop_1095
.p2align 0x4
L_414865:
L_97438:
	movq 0x28(%rbp),%r14
	movq $0x12B5,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_97106
L_97440:
	cmpl $0x1,%r11d
	jng L_97116
L_97442:
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1E29,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,0x0(%r10)
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	jmp L_97116
.p2align 0x4
L_414868:
L_97444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97445
.p2align 0x4
.long 0x15CA
L_97445:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_97437
.p2align 0x4
L_414870:
L_97447:
	movq (globalObjptr+0x2098)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_97436
.p2align 0x4
.long 0x528
L_97257:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97258
L_97350:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97351
.p2align 0x4
.long 0x530
L_97351:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_97258:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x50(%rbp)
	cmpq %rdx,%r14
	jne L_97106
L_97260:
	testq %rdx,%rdx
	jz L_414894
L_97261:
	cmpq $0x7FFFFFFF,%rdx
	ja L_97348
L_97262:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1549,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_97263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97263
.p2align 0x4
.long 0xFE8
L_97263:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
L_97264:
	movq $0x1,0x60(%rbp)
	movq $0x0,0x68(%rbp)
.p2align 0x4,,0x7
loop_1091:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414892
.p2align 0x4,,0x7
L_97265:
	movq 0x68(%rbp),%r13
	cmpq 0x50(%rbp),%r13
	jnl L_414887
L_97316:
	movl %r13d,%r11d
	movl %r11d,0x70(%rbp)
	movslq %r11d,%r15
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x78(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_97129
L_97317:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_414885
L_97318:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_97320:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_97321
L_97337:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB6,%r13
	jne L_97321
L_97338:
	movq 0x8(%r14),%r13
	movq 0x48(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_414880
L_97321:
	incl %ecx
	movl %ecx,0x74(%rbp)
	jo L_97135
L_97322:
	cmpq $0x1,%r15
	je L_414874
L_97323:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_97320
.p2align 0x4
L_414874:
L_97324:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_414878
.p2align 0x4,,0x7
L_97325:
	movl 0x74(%rbp),%ecx
L_97326:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97327:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97329
L_97334:
	movl %ecx,0x0(%r15)
L_97329:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x0,0x0(%r13)
	movq $0x196D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq 0x48(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r13,0x8(%r11)
	movq 0x0(%r15),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r15)
	movq %r13,%r15
L_97330:
	movq 0x0(%r15),%r13
	movq %r13,%r11
	andq $0x1,%r11
	jnz L_414875
L_97331:
	movl 0x70(%rbp),%r13d
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0x0(%r15)
	xorq %r15,%r15
L_97332:
	movq 0x58(%rbp),%r13
	movq 0x68(%rbp),%r11
	movq %r15,0x0(%r13,%r11,8)
	movq %r14,0x60(%rbp)
	incq %r11
	movq %r11,0x68(%rbp)
	jmp loop_1091
.p2align 0x4
L_414875:
L_97333:
	shrq $0x1,%r13
	movl %r13d,%r11d
	movl %r11d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp L_97332
.p2align 0x4
L_414878:
L_97335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_97336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97336
.p2align 0x4
.long 0x15C7
L_97336:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_97325
.p2align 0x4
L_414880:
L_97340:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r15
	jo L_97141
L_97341:
	movq %r15,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r11
	cmpl %ecx,0x0(%r11)
	jnl L_414881
L_97343:
	movl %ecx,0x0(%r11)
	movq 0x60(%rbp),%r14
	movq %r13,%r15
	jmp L_97330
.p2align 0x4
L_414881:
L_97342:
	movq 0x60(%rbp),%r14
	movq %r13,%r15
	jmp L_97330
.p2align 0x4
L_414885:
L_97344:
	xorl %ecx,%ecx
	jmp L_97326
.p2align 0x4
L_414887:
L_97266:
	movq 0x58(%rbp),%r15
	movq $0xC15,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_414888
L_97267:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
L_97268:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x3DCF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_97269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_414888:
L_97273:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_97106
L_97275:
	movq 0x58(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_97106
L_97277:
	cmpl %r11d,%r9d
	jne L_97279
L_97280:
	movl %r11d,0x70(%rbp)
	movq $0x371F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x28,%r12
	movq %r15,0x0(%r11)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r14,0x18(%r11)
	movq %r11,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_97281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_30
.p2align 0x4
L_414892:
L_97345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_97346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97346
.p2align 0x4
.long 0x15C8
L_97346:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_97265
.p2align 0x4
L_414894:
L_97349:
	movq (globalObjptr+0x20A8)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_97264
.p2align 0x4
.long 0x55F
L_97196:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_97197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x576
L_97160:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_97161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x540
L_97127:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97128
L_97157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97158
.p2align 0x4
.long 0x530
L_97158:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_97128:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1387,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x0(%r13)
	addq $0x28,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x38(%rbp),%r11
	movq %r11,0x18(%r13)
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_97129
L_97130:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_414907
L_97131:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_97133:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_97134
L_97148:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD34,%r13
	jne L_97134
L_97149:
	movq 0x0(%r14),%r13
	cmpq %r13,0x20(%rbp)
	je L_414902
L_97134:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_97136:
	cmpq $0x1,%r15
	je L_414897
L_97137:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_97133
.p2align 0x4
L_414897:
L_97138:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97139
L_97146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_97147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97147
.p2align 0x4
.long 0x15BB
L_97147:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_97139:
	movl 0x18(%rbp),%ecx
L_97140:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97142:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97144
L_97145:
	movl %ecx,0x0(%r15)
L_97144:
	movq $0x1A69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_97116
.p2align 0x4
L_414902:
L_97151:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97152:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_97155:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414907:
L_97156:
	xorl %ecx,%ecx
	jmp L_97140
.p2align 0x4
.long 0x55F
L_97120:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97121
L_97122:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_97123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97123
.p2align 0x4
.long 0xF85
L_97123:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_97121:
	movq $0x32F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x456
L_99857:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x5C0
L_99790:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_97106
L_99792:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_97106
L_99794:
	cmpl %r13d,%ecx
	jne L_98021
L_99796:
	cmpl $0x0,%r13d
	jl L_98021
L_99797:
	xorl %ecx,%ecx
loop_1109:
	cmpl 0x20(%rbp),%ecx
	jnl L_97116
L_99799:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x24(%rbp)
	movslq %ecx,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x50(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_99800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_2
.p2align 0x4
.long 0x531
L_99816:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x1C(%rbp),%ecx
	jmp loop_1110
.p2align 0x4
.long 0x1640
L_99771:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99772
L_99773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_99774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99774
.p2align 0x4
.long 0x1641
L_99774:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_99772:
	movq 0xB0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xB8(%rbp),%r14
	movq %r14,%r11
	salq $0x4,%r11
	movq 0xC0(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq 0xC8(%rbp),%r11
	movq %r11,0x8(%r15,%r13,1)
	incq %r14
	movq %r14,0xB8(%rbp)
	jmp loop_1108
.p2align 0x4
.long 0x540
L_99710:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_99711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x9F9
L_99637:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99638
L_99670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_99671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99671
.p2align 0x4
.long 0x9FE
L_99671:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_99638:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_99641
L_99639:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_99636
.p2align 0x4
.long 0x1636
L_99642:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99643
L_99668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_99669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99669
.p2align 0x4
.long 0x1638
L_99669:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_99643:
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_97129
L_99644:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_414929
L_99645:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_99647:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_99648
L_99660:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD1F,%r13
	jne L_99648
L_99661:
	movq 0x20(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_414924
L_99648:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_97135
L_99649:
	cmpq $0x1,%r15
	je L_414919
L_99650:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_99647
.p2align 0x4
L_414919:
L_99651:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99652
L_99658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_99659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99659
.p2align 0x4
.long 0x1637
L_99659:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_99652:
	movl 0x30(%rbp),%ecx
L_99653:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_99654:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_99656
L_99657:
	movl %ecx,0x0(%r15)
L_99656:
	movq $0x1A3F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_97116
.p2align 0x4
L_414924:
L_99663:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_99664:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_99666:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414929:
L_99667:
	xorl %ecx,%ecx
	jmp L_99653
.p2align 0x4
.long 0x528
L_99600:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99602
L_99611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_99612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99612
.p2align 0x4
.long 0xF84
L_99612:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_99602
.p2align 0x4
.long 0x55F
L_99603:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99604
L_99609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_99610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99610
.p2align 0x4
.long 0xF85
L_99610:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_99604:
	movq $0x3339,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_99605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x162A
L_99511:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%r15),%r14
	cmpb $0x2,0x0(%r14)
	je L_414934
L_99512:
	movb $0x0,0x0(%r14)
get_3:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_99513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_414934:
L_99594:
	movb $0x1,0x0(%r14)
	jmp get_3
.p2align 0x4
.long 0x59B
L_99505:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_99506
.p2align 0x4
.long 0x525
L_99433:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_99434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1634
L_99386:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99387
L_99392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_99393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99393
.p2align 0x4
.long 0x1635
L_99393:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_99387:
	movq $0x3405,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_99388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
.long 0x162F
L_99352:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_414943
	cmpq $0x2,%r15
	je L_97116
L_99353:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,0x50(%rbp)
	je L_414936
L_99354:
	movq %r14,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_99355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1462
.p2align 0x4
L_414936:
L_99357:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_97116
	cmpq $0x2,%r15
	je L_414938
L_99358:
	cmpq $0x1,0x58(%rbp)
	je L_97116
L_99359:
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_99360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1462
.p2align 0x4
L_414938:
L_99364:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_97116
L_99366:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_97116
L_99367:
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unifys_1
.p2align 0x4
L_414943:
L_99370:
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_99364
L_99372:
	movq 0x20(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_99364
L_99373:
	movq %r13,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (unifyRaises_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unifys_1
.p2align 0x4
.long 0x15E0
L_99329:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99331
L_99335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_99336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99336
.p2align 0x4
.long 0x565
L_99336:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_99331:
	movq 0x18(%rbp),%r15
	andq $0x3,%r15
	jz L_99333
L_99332:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
L_99333:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x114D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x20,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r15,0x10(%r11)
	movq 0x0(%r14),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_97116
.p2align 0x4
.long 0x57D
L_99278:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99279
L_99322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_99323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99323
.p2align 0x4
.long 0x530
L_99323:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_99279:
	movq 0x18(%rbp),%r15
	cmpq $0x2,%r15
	je L_414949
L_99280:
	andq $0x3,%r15
	jz L_414948
L_99281:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x114D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x20,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r15,0x10(%r11)
	movq 0x0(%r14),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_97116
.p2align 0x4
L_414948:
L_99282:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x58(%rbp)
	movq %r14,0x68(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_99283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getContData_0
.p2align 0x4
L_414949:
L_99321:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r10)
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r14
	movq $0x261B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r13)
	jmp L_97116
.p2align 0x4
.long 0x528
L_99249:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99251
L_99260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_99261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99261
.p2align 0x4
.long 0xF84
L_99261:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_99251
.p2align 0x4
.long 0x55F
L_99252:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99253
L_99258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_99259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99259
.p2align 0x4
.long 0xF85
L_99259:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_99253:
	movq $0x330D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_99254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x162A
L_99160:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%r15),%r14
	cmpb $0x2,0x0(%r14)
	je L_414953
L_99161:
	movb $0x0,0x0(%r14)
get_2:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_99162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_414953:
L_99243:
	movb $0x1,0x0(%r14)
	jmp get_2
.p2align 0x4
.long 0x59B
L_99154:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_99155
.p2align 0x4
.long 0x1623
L_99118:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_99119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x557
L_99080:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_97116
.p2align 0x4
.long 0x1
L_98941:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_98942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x525
L_98979:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_98980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x558
label_0:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98836
L_98861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_98862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98862
.p2align 0x4
.long 0x45A
L_98862:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_98836:
	movq $0x10AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x1,%r11b
	movzbl %r11b,%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2773,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x2767,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2769,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x30(%rbp)
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq 0x28(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r11),%r14
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_97129
L_98837:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_414964
L_98838:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_98840:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_414963
L_98853:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCC0,%r11
	jne L_414962
L_98854:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x18)(%rip)
	je L_414959
L_98841:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_98842:
	cmpq $0x1,%r15
	je L_414954
L_98843:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_98840
.p2align 0x4
L_414954:
L_98844:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98845
L_98851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_98852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98852
.p2align 0x4
.long 0x5B4
L_98852:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_98845:
	movl 0x18(%rbp),%ecx
L_98846:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98847:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_98849
L_98850:
	movl %ecx,0x0(%r15)
L_98849:
	movq $0x1981,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_97116
.p2align 0x4
L_414959:
L_98856:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98857:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_98859:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_414962:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_98841
.p2align 0x4
L_414963:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_98841
.p2align 0x4
L_414964:
L_98860:
	xorl %ecx,%ecx
	jmp L_98846
.p2align 0x4
.long 0x456
L_98828:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x15FB
L_98430:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98431
L_98625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98626
.p2align 0x4
.long 0x1614
L_98626:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98431:
	movq $0x3CCF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB8,%rbp
	leaq (toString_133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_3
.p2align 0x4
.long 0x161E
L_98732:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movb $0x2,0xB8(%rbp)
	movq (globalObjptr+0xCDD8)(%rip),%r15
	movq %r15,0xC0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB8,%rbp
	leaq (L_98733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp edge_1
.p2align 0x4
.long 0x1617
L_98696:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98697
L_98729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98730
.p2align 0x4
.long 0x161C
L_98730:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98697:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_97106
L_98699:
	movl %r13d,0xC8(%rbp)
	movq $0x3B95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_98700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x1617
L_98685:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_414970
L_98686:
	movb $0x0,0xB8(%rbp)
	movq (globalObjptr+0xCAD0)(%rip),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB8,%rbp
	leaq (L_98687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp edge_1
.p2align 0x4
L_414970:
L_98688:
	movq 0x20(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_98689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x15FB
L_98662:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_98663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x15FC
L_98647:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB8,%rbp
	leaq (toString_141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x15FC
L_98630:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB8,%rbp
	leaq (toString_140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x15FC
L_98442:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98443
L_98616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98617
.p2align 0x4
.long 0x1612
L_98617:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98443:
	movq $0x10AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2773,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x98(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r13
	jne L_97106
L_98445:
	decl %ecx
	jo L_97135
L_98446:
	movq %r14,0x20(%rbp)
loop_1104:
	cmpl $0x0,%ecx
	jl L_414980
L_98447:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x28(%rbp)
	movslq %ecx,%r15
	movq 0x98(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x10(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xEB7,%r15
	je L_414978
	cmpq $0xEB8,%r15
	je L_414977
	cmpq $0xEB9,%r15
	je L_414976
	cmpq $0xEBA,%r15
	je L_414975
	cmpq $0xEBB,%r15
	je L_414974
	cmpq $0xEBC,%r15
	je L_414971
L_98448:
	movq 0x0(%r11),%r15
	movq %r15,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_98449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_414971:
L_98535:
	movq 0x0(%r11),%r15
	movq %r15,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r11),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xB8(%rbp)
	movq 0x18(%r15),%r10
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_414972
L_98554:
	movq %r10,0xC8(%rbp)
	movq %r14,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_98555+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_414972:
L_98536:
	movq %r15,0xB8(%rbp)
L_98537:
	movq 0xB0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_97106
L_98539:
	movl %r13d,0xD0(%rbp)
	movq $0x3B91,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_98540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_414974:
L_98525:
	movq 0x0(%r11),%r15
	movq %r15,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (toString_137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_32
.p2align 0x4
L_414975:
L_98512:
	movq 0x8(%r11),%r15
	movq %r15,0xC8(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0xC0(%rbp)
	movq $0x3CC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB8,%rbp
	leaq (toString_136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_3
.p2align 0x4
L_414976:
L_98511:
	movq 0x0(%r11),%r15
	movq %r15,0xB8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_98449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_543
.p2align 0x4
L_414977:
L_98505:
	movq 0x8(%r11),%r15
	movq %r15,0xB0(%rbp)
	movl 0x0(%r11),%r15d
	movl %r15d,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_98506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_414978:
L_98492:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_97106
L_98494:
	movl %r13d,0xC0(%rbp)
	movq $0x3C3F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_98495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_414980:
L_98559:
	movq 0xA0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_98560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1
toString_132:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
L_98186:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_98187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x525
L_98224:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_98225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x528
L_98063:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_98064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x15E2
L_98056:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_98057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1335
.p2align 0x4
.long 0x15E2
L_98047:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_98048:
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_97116
L_98049:
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_98050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1335
.p2align 0x4
.long 0x56E
L_98036:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98037
L_98038:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_98039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98039
.p2align 0x4
.long 0x56F
L_98039:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_98037:
	movq $0x342B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
.long 0xF2C
L_98026:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_98027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1428
.p2align 0x4
.long 0x57E
L_97941:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97943
L_97959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97960
.p2align 0x4
.long 0x530
L_97960:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_97943
.p2align 0x4
.long 0x528
L_97945:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97947
L_97956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97957
.p2align 0x4
.long 0xF84
L_97957:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_97947
.p2align 0x4
.long 0x55F
L_97948:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97949
L_97954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_97955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97955
.p2align 0x4
.long 0xF85
L_97955:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_97949:
	movq $0x332B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_97950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x15E0
L_97914:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97916
L_97920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_97921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97921
.p2align 0x4
.long 0x565
L_97921:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_97916:
	movq 0x18(%rbp),%r15
	andq $0x3,%r15
	jz L_97918
L_97917:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
L_97918:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x114D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x20,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r15,0x10(%r11)
	movq 0x0(%r14),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_97116
.p2align 0x4
.long 0x15DB
L_97866:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97867
L_97900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_97901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97901
.p2align 0x4
.long 0x15DE
L_97901:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_97867:
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1450,%r13
	jne L_414991
L_97869:
	movl 0x0(%r14),%r13d
	movq $0x28A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movb $0xD,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_97870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_414991:
L_97868:
	movq (globalObjptr+0x1508)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_97783:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_97784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x57E
L_97643:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97645
L_97661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97662
.p2align 0x4
.long 0x530
L_97662:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_97645
.p2align 0x4
.long 0x528
L_97647:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97649
L_97658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97659
.p2align 0x4
.long 0xF84
L_97659:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_97649
.p2align 0x4
.long 0x55F
L_97650:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97651
L_97656:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_97657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97657
.p2align 0x4
.long 0xF85
L_97657:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_97651:
	movq $0x3301,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_97652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x15D2
L_97508:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp unify_0
.p2align 0x4
.long 0x549
L_97269:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97270
L_97313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97314
.p2align 0x4
.long 0x53D
L_97314:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_97270:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_97273
L_97271:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_97268
.p2align 0x4
.long 0x15C3
L_97281:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97282
L_97311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_97312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97312
.p2align 0x4
.long 0x15C6
L_97312:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_97282:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x9F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x70(%rbp)
	movq $0x3E6B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	addq $0x68,%rbp
	leaq (L_97283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x55F
L_97197:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_97198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x576
L_97161:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_97162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xEAD
L_99800:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x24(%rbp),%ecx
	jmp loop_1109
.p2align 0x4
.long 0x586
L_99711:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_99712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x56E
L_99605:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99606
L_99607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_99608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99608
.p2align 0x4
.long 0x578
L_99608:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_99606:
	movq $0x2B79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x6,0x20(%rbp)
	movq $0x2,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x162B
L_99513:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_415000
L_99514:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_99515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_415000:
L_99564:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_99565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x525
L_99434:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_99435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x52B
L_99388:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99389
L_99390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_99391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99391
.p2align 0x4
.long 0x5C1
L_99391:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_99389:
	movq $0x3309,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x1630
L_99355:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_99356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unifys_1
.p2align 0x4
.long 0x1632
L_99360:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x20(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unifys_1
.p2align 0x4
.long 0x1633
unifyRaises_1:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_99364
.p2align 0x4
.long 0xF1A
L_99283:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99284
L_99319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_99320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99320
.p2align 0x4
.long 0xFFD
L_99320:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_99284:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_415002
L_99285:
	movq %r15,0x18(%rbp)
L_99286:
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_99287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getContData_0
.p2align 0x4
L_415002:
L_99294:
	movq $0x45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x18(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x47,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x60(%rbp)
	movq %r15,0x0(%r10)
	addq $0x18,%r12
	movq %r11,0x8(%r10)
	movq 0x50(%rbp),%r9
	movq 0x0(%r9),%r15
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r10,0x0(%r14)
	movq %r9,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r14,0x0(%r9)
	movq $0x27C1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x68(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r9
	movq %r9,0x0(%r10)
	movq 0x28(%rbp),%r9
	movq %r9,0x8(%r10)
	movq 0x58(%rbp),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x70(%rbp)
	movq 0x0(%r10),%r14
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_97129
L_99295:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_415013
L_99296:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_99298:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_415012
L_99311:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCFF,%r11
	jne L_415011
L_99312:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x18)(%rip)
	je L_415008
L_99299:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_97135
L_99300:
	cmpq $0x1,%r15
	je L_415003
L_99301:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_99298
.p2align 0x4
L_415003:
L_99302:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99303
L_99309:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_99310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99310
.p2align 0x4
.long 0x162E
L_99310:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_99303:
	movl 0x50(%rbp),%ecx
L_99304:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_99305:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_99307
L_99308:
	movl %ecx,0x0(%r15)
L_99307:
	movq $0x19FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x18(%rbp)
	jmp L_99286
.p2align 0x4
L_415008:
L_99314:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_99315:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_99317:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_415011:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_99299
.p2align 0x4
L_415012:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_99299
.p2align 0x4
L_415013:
L_99318:
	xorl %ecx,%ecx
	jmp L_99304
.p2align 0x4
.long 0x56E
L_99254:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99255
L_99256:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_99257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99257
.p2align 0x4
.long 0x578
L_99257:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_99255:
	movq $0x2B7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23,0x20(%rbp)
	movq $0x7,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x162B
L_99162:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_415017
L_99163:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_99164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_415017:
L_99213:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_99214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1623
L_99119:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_99120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_98942:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_98943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x526
L_98980:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_415018
L_98981:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_98982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_415018:
L_99025:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_99026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x15FC
toString_133:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98432
L_98623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98624
.p2align 0x4
.long 0x1612
L_98624:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98432:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xC0(%rbp)
	movq $0x1,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (rev_133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x161F
L_98733:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98734
L_98751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98752
.p2align 0x4
.long 0x1600
L_98752:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98734:
	movq $0x3CCB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB8,%rbp
	leaq (toString_144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_3
.p2align 0x4
.long 0x1601
L_98700:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xD0(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (toString_143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x15FF
L_98687:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_98688
.p2align 0x4
.long 0x15FC
L_98689:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98690
L_98691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98692
.p2align 0x4
.long 0x1612
L_98692:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98690:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE388)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_98441
.p2align 0x4
.long 0x1615
L_98663:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98664
L_98681:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98682
.p2align 0x4
.long 0x1614
L_98682:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98664:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_97106
L_98666:
	movl %r13d,0xC0(%rbp)
	movq $0x3C3B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_98667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x15FC
toString_141:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (rev_141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x15FC
toString_140:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (rev_140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x15FD
L_98449:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98450
L_98490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98491
.p2align 0x4
.long 0x1602
L_98491:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98450:
	movq 0x90(%rbp),%r14
	movq 0x8(%r14),%r15
L_98451:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_98452
L_98484:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB2,%r14
	jne L_98452
L_98485:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_97106
L_98487:
	testl %r11d,%r11d
	jnz L_415024
L_98489:
	movq 0xB0(%rbp),%r15
L_98460:
	movq $0x10AB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movb $0x0,%r15b
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2773,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	movl 0x28(%rbp),%ecx
	jmp loop_1104
.p2align 0x4
L_415024:
L_98452:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_415025
L_98453:
	movq %r15,0xC0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_98454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_415025:
L_98483:
	movq 0xB0(%rbp),%r14
	xchgq %r14,%r15
	jmp L_98460
.p2align 0x4
.long 0x1608
L_98555:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98556
L_98557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_98558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98558
.p2align 0x4
.long 0x1603
L_98558:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_98556:
	movq 0xB8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0xB8(%rbp)
	jmp L_98537
.p2align 0x4
.long 0x1605
L_98540:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0xD0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xD8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (toString_138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x15FD
toString_137:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (rev_137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x15FD
toString_136:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98513
L_98523:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98524
.p2align 0x4
.long 0x1602
L_98524:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98513:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x2C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xC0(%rbp)
	movq $0x1,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (rev_136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1604
L_98506:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_98507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x15FD
L_98495:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB8,%rbp
	leaq (toString_135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1609
L_98560:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98561
L_98614:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98615
.p2align 0x4
.long 0x1611
L_98615:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98561:
	movq 0xA8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_97106
L_98563:
	movl %r13d,0xA0(%rbp)
	movq $0x3713,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x78(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	movq %r14,0x98(%rbp)
	addq $0x98,%rbp
	leaq (vector_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_15
.p2align 0x4
.long 0x1
rev_132:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_415036
L_98319:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_98320:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415035
.p2align 0x4,,0x7
L_98321:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_415034
L_98322:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_98320
.p2align 0x4
L_415034:
L_98324:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_98325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415035:
L_98329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_98330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98330
.p2align 0x4
.long 0x45B
L_98330:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_98321
.p2align 0x4
L_415036:
L_98331:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_98324
.p2align 0x4
.long 0x4AF
L_98187:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_98188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x526
L_98225:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_415037
L_98226:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_98227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_415037:
L_98270:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_98271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x57E
L_98064:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_98065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_56
.p2align 0x4
.long 0x59B
L_98057:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
.long 0x59B
L_98050:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
.long 0x15E1
L_98027:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98028
L_98029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_98030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98030
.p2align 0x4
.long 0x547
L_98030:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_98028:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x114D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x20,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r15,0x10(%r11)
	movq 0x0(%r14),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movl 0x34(%rbp),%ecx
	jmp loop_1103
.p2align 0x4
.long 0x56E
L_97950:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97951
L_97952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_97953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97953
.p2align 0x4
.long 0x578
L_97953:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_97951:
	movq $0x2B7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x11,0x20(%rbp)
	movq $0x3,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x15DA
L_97870:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_97872
.p2align 0x4
.long 0x4AF
L_97784:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF128)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_97785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x56E
L_97652:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97653
L_97654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_97655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97655
.p2align 0x4
.long 0x578
L_97655:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_97653:
	movq $0x2B81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27,0x20(%rbp)
	movq $0x9,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x15C4
L_97283:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97284
L_97309:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_97310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97310
.p2align 0x4
.long 0x15C5
L_97310:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_97284:
	movq $0x13A9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x38(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_97129
L_97285:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_415051
L_97286:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_97288:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_97289
L_97301:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD22,%r13
	jne L_97289
L_97302:
	movq 0x28(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_415046
L_97289:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_97290:
	cmpq $0x1,%r15
	je L_415041
L_97291:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_97288
.p2align 0x4
L_415041:
L_97292:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97293
L_97299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97300
.p2align 0x4
.long 0x5A8
L_97300:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_97293:
	movl 0x18(%rbp),%ecx
L_97294:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97295:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97297
L_97298:
	movl %ecx,0x0(%r15)
L_97297:
	movq $0x1A45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_97116
.p2align 0x4
L_415046:
L_97304:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_97305:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_97154
L_97307:
	movl %ecx,0x0(%r15)
	jmp L_97154
.p2align 0x4
L_415051:
L_97308:
	xorl %ecx,%ecx
	jmp L_97294
.p2align 0x4
.long 0x540
L_97198:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_97199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_72
.p2align 0x4
.long 0x526
L_97162:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_97163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
.long 0x586
L_99712:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_99713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x162C
L_99515:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99516
L_99562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_99563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99563
.p2align 0x4
.long 0x162D
L_99563:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_99516:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_415059
L_99517:
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x0(%r10)
	movq %r13,0x10(%r10)
	movq 0x0(%r15),%r14
	movq $0x261B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movl 0x38(%rbp),%r14d
	testl %r14d,%r14d
	jz L_97116
L_99519:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_415055
L_99520:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_415054
L_99521:
L_99522:
	movq $0x41CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_99523:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_97116
.p2align 0x4
L_415054:
L_99524:
	movq $0x41CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_99523
.p2align 0x4
L_415055:
L_99525:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_415056
L_99526:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movb $0xE,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_99527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_415056:
L_99528:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_97116
L_99529:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0xE,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_415059:
L_99532:
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_99533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1
L_99565:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_99566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x526
L_99435:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_415061
L_99436:
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_99437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_415061:
L_99484:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_99485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1631
L_99356:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_99357
.p2align 0x4
.long 0x55A
L_99287:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99288
L_99292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_99293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99293
.p2align 0x4
.long 0x554
L_99293:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_99288:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_99290
L_99289:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r10)
	movq %r15,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movl $0x1,0x0(%r14)
L_99290:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x114D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x20,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r15,0x10(%r11)
	movq 0x0(%r14),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_97116
.p2align 0x4
.long 0x162C
L_99164:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99165
L_99211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_99212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99212
.p2align 0x4
.long 0x162D
L_99212:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_99165:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_415069
L_99166:
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x0(%r10)
	movq %r13,0x10(%r10)
	movq 0x0(%r15),%r14
	movq $0x261B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movl 0x38(%rbp),%r14d
	testl %r14d,%r14d
	jz L_97116
L_99168:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_415065
L_99169:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_415064
L_99170:
L_99171:
	movq $0x41D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_99172:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_97116
.p2align 0x4
L_415064:
L_99173:
	movq $0x41D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_99172
.p2align 0x4
L_415065:
L_99174:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_415066
L_99175:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movb $0xA,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_99176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_415066:
L_99177:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_97116
L_99178:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movb $0xA,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_415069:
L_99181:
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_99182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1
L_99214:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_99215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1624
L_99120:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99121
L_99137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_99138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99138
.p2align 0x4
.long 0x1629
L_99138:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_99121:
	movq $0x3C49,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x60(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_99122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x5AF
L_98943:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_98944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x540
L_98982:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_415072
L_98983:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movl $0x0,0x48(%rbp)
	movq $0x1,0x50(%rbp)
L_98984:
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_98985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1262
.p2align 0x4
L_415072:
L_99024:
	movq $0x1,%r15
L_98994:
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_98995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x5BF
L_99026:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99027
L_99028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_99029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99029
.p2align 0x4
.long 0x5C3
L_99029:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_99027:
	movq 0x18(%rbp),%r15
L_99003:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_99004:
	addl 0x0(%r14),%ecx
	movl %ecx,0x20(%rbp)
	jo L_97135
L_99005:
	cmpq $0x1,%r15
	je L_415073
L_99006:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_99004
.p2align 0x4
L_415073:
L_99007:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99008
L_99013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_99014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99014
.p2align 0x4
.long 0x56D
L_99014:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_99008:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_415074
L_99009:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
L_99010:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_99011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_415074:
L_99012:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_99010
.p2align 0x4
.long 0x15FC
rev_133:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_415080
L_98433:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_98434:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415079
.p2align 0x4,,0x7
L_98435:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_415078
L_98436:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_98434
.p2align 0x4
L_415078:
L_98438:
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_98439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415079:
L_98620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98621
.p2align 0x4
.long 0x1613
L_98621:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_98435
.p2align 0x4
L_415080:
L_98622:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_98438
.p2align 0x4
.long 0x15FC
toString_144:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98735
L_98749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98750
.p2align 0x4
.long 0x1612
L_98750:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98735:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xC0(%rbp)
	movq $0x1,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (rev_144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1601
toString_143:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (rev_143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x15FF
L_98667:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB8,%rbp
	leaq (toString_142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x15FC
rev_141:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_415084
L_98648:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_98649:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415083
.p2align 0x4,,0x7
L_98650:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_415082
L_98651:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_98649
.p2align 0x4
L_415082:
L_98653:
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_98654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415083:
L_98658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98659
.p2align 0x4
.long 0x1613
L_98659:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_98650
.p2align 0x4
L_415084:
L_98660:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_98653
.p2align 0x4
.long 0x15FC
rev_140:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_415087
L_98631:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_98632:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415086
.p2align 0x4,,0x7
L_98633:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_415085
L_98634:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_98632
.p2align 0x4
L_415085:
L_98636:
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_98637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415086:
L_98641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98642
.p2align 0x4
.long 0x1613
L_98642:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_98633
.p2align 0x4
L_415087:
L_98643:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_98636
.p2align 0x4
.long 0x15FE
L_98454:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98455
L_98481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98482
.p2align 0x4
.long 0x1602
L_98482:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98455:
	movq 0x78(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_415088
L_98456:
	movq (globalObjptr+0xA058)(%rip),%r15
L_98457:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xAEC8)(%rip),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_98458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415088:
L_98463:
	movq 0x90(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (toString_134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
.long 0x1605
toString_138:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq $0x1,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (rev_138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x15FD
rev_137:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq $0x1,%r15
	je L_415092
L_98526:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xB0(%rbp)
	movq %r14,0xB8(%rbp)
	movq $0x1,0xC0(%rbp)
.p2align 0x4,,0x7
L_98527:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415091
.p2align 0x4,,0x7
L_98528:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_415090
L_98529:
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	jmp L_98527
.p2align 0x4
L_415090:
L_98531:
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_98449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415091:
L_98532:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_98533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98533
.p2align 0x4
.long 0x1603
L_98533:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_98528
.p2align 0x4
L_415092:
L_98534:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_98531
.p2align 0x4
.long 0x15FD
rev_136:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq $0x1,%r15
	je L_415095
L_98514:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xB0(%rbp)
	movq %r14,0xB8(%rbp)
	movq $0x1,0xC0(%rbp)
.p2align 0x4,,0x7
L_98515:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415094
.p2align 0x4,,0x7
L_98516:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_415093
L_98517:
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	jmp L_98515
.p2align 0x4
L_415093:
L_98519:
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_98449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415094:
L_98520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_98521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98521
.p2align 0x4
.long 0x1603
L_98521:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_98516
.p2align 0x4
L_415095:
L_98522:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_98519
.p2align 0x4
.long 0x1605
L_98507:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98508
L_98509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_98510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98510
.p2align 0x4
.long 0x1606
L_98510:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_98508:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD0A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_98449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x15FD
toString_135:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (rev_135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x160A
vector_0:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	movq %r14,0x40(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
loop_1105:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415098
.p2align 0x4,,0x7
L_98564:
	movq 0x40(%rbp),%r15
	cmpq $0x0,%r15
	jl L_415097
L_98565:
	movq %r15,%r14
	decq %r14
	movq 0x30(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r14,0x40(%rbp)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	jmp loop_1105
.p2align 0x4
L_415097:
L_98566:
	movq 0x38(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r14
	movq %r14,0xA0(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r14
	movq %r14,0xA8(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r14
	movq %r14,0xB0(%rbp)
	addq $0x98,%rbp
	leaq (toString_139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_415098:
L_98612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_98613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98613
.p2align 0x4
.long 0x1610
L_98613:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_98564
.p2align 0x4
.long 0x1
L_98325:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEFF8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x5AF
L_98188:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_98189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x540
L_98227:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_415099
L_98228:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movl $0x0,0x48(%rbp)
	movq $0x1,0x50(%rbp)
L_98229:
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_98230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1262
.p2align 0x4
L_415099:
L_98269:
	movq $0x1,%r15
L_98239:
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_98240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x5BF
L_98271:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98272
L_98273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_98274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98274
.p2align 0x4
.long 0x5C3
L_98274:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_98272:
	movq 0x18(%rbp),%r15
L_98248:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_98249:
	addl 0x0(%r14),%ecx
	movl %ecx,0x20(%rbp)
	jo L_97135
L_98250:
	cmpq $0x1,%r15
	je L_415100
L_98251:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_98249
.p2align 0x4
L_415100:
L_98252:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98253
L_98258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_98259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98259
.p2align 0x4
.long 0x56D
L_98259:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_98253:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_415101
L_98254:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
L_98255:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_98256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_415101:
L_98257:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_98255
.p2align 0x4
.long 0x58E
L_98065:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x38(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x40(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r15
	movq %r14,0x28(%rbp)
	cmpq $0x1,%r15
	je L_415105
L_98066:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x78(%rbp)
	movq $0x1,0x80(%rbp)
	movq %r14,%r15
L_98067:
	movq %r15,0x90(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_98068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_415105:
L_98163:
	movq $0x1,%r15
L_98078:
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x80,%rbp
	leaq (L_98079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x5AF
L_97785:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_97786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x586
L_97199:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	movq %r14,0x20(%rbp)
	cmpq $0x1,%r15
	je L_415107
L_97200:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x38(%rbp)
	movq $0x1,0x48(%rbp)
	movq %r14,%r15
L_97201:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF16,%r15
	je L_415106
L_97254:
	movq 0x0(%r14),%r15
	movq %r15,0x78(%rbp)
	movq %r13,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_97204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_32
.p2align 0x4
L_415106:
L_97202:
	movq 0x0(%r14),%r15
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_97203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_415107:
L_97255:
	movq $0x1,%r15
L_97228:
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_97229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x532
L_97163:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97164
L_97193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_97194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97194
.p2align 0x4
.long 0x53F
L_97194:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_97164:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_97106
L_97166:
	movl %r13d,0x50(%rbp)
	movq $0x3C57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	addq $0x48,%rbp
	leaq (L_97167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x5A4
L_99713:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_99714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1514
.p2align 0x4
.long 0x59B
L_99527:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_99528
.p2align 0x4
.long 0x1
L_99533:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_99534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_99566:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_99567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x540
L_99437:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,0x18(%rbp)
	je L_415110
L_99438:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_99439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_415110:
L_99479:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_99480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5BF
L_99485:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99486
L_99487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_99488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99488
.p2align 0x4
.long 0x5C3
L_99488:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_99486:
	movq 0x18(%rbp),%r15
L_99456:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF1A0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_99457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x59B
L_99176:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_99177
.p2align 0x4
.long 0x1
L_99182:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_99183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_99215:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_99216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1625
L_99122:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_99123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x51E
L_98944:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98945
L_98968:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_98969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98969
.p2align 0x4
.long 0x4AE
L_98969:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_98945:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_98946:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_97135
L_98947:
	cmpq $0x1,%r14
	je L_415112
L_98948:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_98946
.p2align 0x4
L_415112:
L_98949:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98950
L_98966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_98967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98967
.p2align 0x4
.long 0x4E6
L_98967:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_98950:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_415113
L_98951:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_145:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_415113:
L_98965:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_145
.p2align 0x4
.long 0xEAE
L_98985:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98986
L_99022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_99023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99023
.p2align 0x4
.long 0x15F7
L_99023:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_98986:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x48(%rbp),%r14d
	incl %r14d
	jo L_97135
L_98987:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_415117
L_98988:
	movl %r14d,0x48(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	jmp L_98984
.p2align 0x4
L_415117:
L_98989:
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_98990:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415119
.p2align 0x4,,0x7
L_98991:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_98994
L_98992:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_98990
.p2align 0x4
L_415119:
L_99020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_99021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99021
.p2align 0x4
.long 0x59F
L_99021:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_98991
.p2align 0x4
.long 0x571
L_98995:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98996
L_99018:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_99019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99019
.p2align 0x4
.long 0x572
L_99019:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_98996:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_98997:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_98998:
	cmpq $0x1,%r14
	je L_415122
L_98999:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_98997
.p2align 0x4
L_415122:
L_99000:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99001
L_99016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_99017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99017
.p2align 0x4
.long 0xF85
L_99017:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_99001:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_415123
L_99002:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_99003
.p2align 0x4
L_415123:
L_99015:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_99003
.p2align 0x4
.long 0x56C
L_99011:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x15FC
L_98439:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98440
L_98618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98619
.p2align 0x4
.long 0x1612
L_98619:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98440:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	jmp L_98441
.p2align 0x4
.long 0x15FC
rev_144:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_415130
L_98736:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_98737:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415129
.p2align 0x4,,0x7
L_98738:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_415128
L_98739:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_98737
.p2align 0x4
L_415128:
L_98741:
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_98742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415129:
L_98746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98747
.p2align 0x4
.long 0x1613
L_98747:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_98738
.p2align 0x4
L_415130:
L_98748:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_98741
.p2align 0x4
.long 0x1601
rev_143:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_415133
L_98701:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x90(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_98702:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415132
.p2align 0x4,,0x7
L_98703:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_415131
L_98704:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_98702
.p2align 0x4
L_415131:
L_98706:
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_98707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415132:
L_98726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_98727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98727
.p2align 0x4
.long 0x161D
L_98727:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_98703
.p2align 0x4
L_415133:
L_98728:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_98706
.p2align 0x4
.long 0x15FF
toString_142:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (rev_142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x15FC
L_98654:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98655
L_98656:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98657
.p2align 0x4
.long 0x1612
L_98657:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98655:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE360)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_98441
.p2align 0x4
.long 0x15FC
L_98637:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98638
L_98639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98640
.p2align 0x4
.long 0x1612
L_98640:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98638:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE970)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_98441
.p2align 0x4
.long 0x15FF
L_98458:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98459
L_98461:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98462
.p2align 0x4
.long 0x1600
L_98462:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98459:
	movq 0x58(%rbp),%r15
	jmp L_98460
.p2align 0x4
.long 0x1601
toString_134:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq $0x1,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (rev_134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1605
rev_138:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq $0x1,%r15
	je L_415139
L_98541:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xB0(%rbp)
	movq %r14,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
.p2align 0x4,,0x7
L_98542:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415138
.p2align 0x4,,0x7
L_98543:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_415137
L_98544:
	movq %r15,0xC8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xC0(%rbp)
	jmp L_98542
.p2align 0x4
L_415137:
L_98546:
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_98547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415138:
L_98551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_98552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98552
.p2align 0x4
.long 0x1607
L_98552:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_98543
.p2align 0x4
L_415139:
L_98553:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_98546
.p2align 0x4
.long 0x15FD
rev_135:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq $0x1,%r15
	je L_415142
L_98496:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xB0(%rbp)
	movq %r14,0xB8(%rbp)
	movq $0x1,0xC0(%rbp)
.p2align 0x4,,0x7
L_98497:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415141
.p2align 0x4,,0x7
L_98498:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_415140
L_98499:
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	jmp L_98497
.p2align 0x4
L_415140:
L_98501:
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_98449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415141:
L_98502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_98503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98503
.p2align 0x4
.long 0x1603
L_98503:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_98498
.p2align 0x4
L_415142:
L_98504:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_98501
.p2align 0x4
.long 0x160A
toString_139:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (rev_139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
bug_258:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98326
L_98327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_98328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98328
.p2align 0x4
.long 0x451
L_98328:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_98326:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51E
L_98189:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98190
L_98213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_98214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98214
.p2align 0x4
.long 0x4AE
L_98214:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_98190:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_98191:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_97135
L_98192:
	cmpq $0x1,%r14
	je L_415144
L_98193:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_98191
.p2align 0x4
L_415144:
L_98194:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98195
L_98211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_98212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98212
.p2align 0x4
.long 0x4E6
L_98212:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_98195:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_415145
L_98196:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_131:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_415145:
L_98210:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_131
.p2align 0x4
.long 0xEAE
L_98230:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98231
L_98267:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_98268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98268
.p2align 0x4
.long 0x15F7
L_98268:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_98231:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x48(%rbp),%r14d
	incl %r14d
	jo L_97135
L_98232:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_415149
L_98233:
	movl %r14d,0x48(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	jmp L_98229
.p2align 0x4
L_415149:
L_98234:
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_98235:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415151
.p2align 0x4,,0x7
L_98236:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_98239
L_98237:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_98235
.p2align 0x4
L_415151:
L_98265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_98266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98266
.p2align 0x4
.long 0x59F
L_98266:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_98236
.p2align 0x4
.long 0x571
L_98240:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98241
L_98263:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_98264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98264
.p2align 0x4
.long 0x572
L_98264:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_98241:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_98242:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_98243:
	cmpq $0x1,%r14
	je L_415154
L_98244:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_98242
.p2align 0x4
L_415154:
L_98245:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98246
L_98261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_98262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98262
.p2align 0x4
.long 0xF85
L_98262:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_98246:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_415155
L_98247:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_98248
.p2align 0x4
L_415155:
L_98260:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_98248
.p2align 0x4
.long 0x56C
L_98256:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x15E3
L_98068:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_98069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xEDF
L_98079:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98080
L_98157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_98158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98158
.p2align 0x4
.long 0x9FC
L_98158:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_98080:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF150)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_97106
L_98082:
	movl %r13d,0x90(%rbp)
	movq $0x3B8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x10,%r12
	addq $0x88,%rbp
	leaq (L_98083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x51E
L_97786:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97787
L_97810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_97811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97811
.p2align 0x4
.long 0x4AE
L_97811:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_97787:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_97788:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_97135
L_97789:
	cmpq $0x1,%r14
	je L_415161
L_97790:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_97788
.p2align 0x4
L_415161:
L_97791:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97792
L_97808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_97809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97809
.p2align 0x4
.long 0x4E6
L_97809:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_97792:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_415162
L_97793:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_130:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_415162:
L_97807:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_130
.p2align 0x4
.long 0x15BC
L_97204:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_97205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x15BC
L_97203:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_97204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xF00
L_97229:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97230
L_97241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97242
.p2align 0x4
.long 0x635
L_97242:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_97230:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_97231:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_97232:
	cmpq $0x1,%r14
	je L_415166
L_97233:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_97231
.p2align 0x4
L_415166:
L_97234:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97235
L_97239:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_97240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97240
.p2align 0x4
.long 0x578
L_97240:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_97235:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_415167
L_97236:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
x_296:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x48(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_97237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_415167:
L_97238:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_296
.p2align 0x4
.long 0x57F
L_97167:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (L_97168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x163C
L_99714:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99715
L_99726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_99727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99727
.p2align 0x4
.long 0x58F
L_99727:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_99715:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_99716:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_99717:
	cmpq $0x1,%r14
	je L_415171
L_99718:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_99716
.p2align 0x4
L_415171:
L_99719:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99720
L_99724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_99725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99725
.p2align 0x4
.long 0x578
L_99725:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_99720:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_415172
L_99721:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
x_304:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x48(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_99722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_415172:
L_99723:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_304
.p2align 0x4
.long 0x1
L_99534:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_99535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_99567:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF198)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_99568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x57E
L_99439:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_99440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x571
L_99480:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99481
L_99482:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_99483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99483
.p2align 0x4
.long 0x572
L_99483:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_99481:
	movq 0x18(%rbp),%r15
L_99449:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_99450:
	addl 0x0(%r14),%ecx
	movl %ecx,0x20(%rbp)
	jo L_97135
L_99451:
	cmpq $0x1,%r15
	je L_415176
L_99452:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_99450
.p2align 0x4
L_415176:
L_99453:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99454
L_99472:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_99473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99473
.p2align 0x4
.long 0x5C3
L_99473:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_99454:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_415177
L_99455:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_99456
.p2align 0x4
L_415177:
L_99471:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_99456
.p2align 0x4
.long 0x5BF
L_99457:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99458
L_99469:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_99470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99470
.p2align 0x4
.long 0x5C3
L_99470:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_99458:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_99459:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_99460:
	cmpq $0x1,%r14
	je L_415181
L_99461:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_99459
.p2align 0x4
L_415181:
L_99462:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99463
L_99467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_99468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99468
.p2align 0x4
.long 0x579
L_99468:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_99463:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_415182
L_99464:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
x_303:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_99465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_415182:
L_99466:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_303
.p2align 0x4
.long 0x1
L_99183:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_99184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_99216:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF198)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_99217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1625
L_99123:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99124
L_99135:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_99136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99136
.p2align 0x4
.long 0x1628
L_99136:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_99124:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_99125:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_99126:
	cmpq $0x1,%r14
	je L_415186
L_99127:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_99125
.p2align 0x4
L_415186:
L_99128:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99129
L_99133:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_99134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99134
.p2align 0x4
.long 0x1627
L_99134:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_99129:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_415187
L_99130:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
x_302:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x68(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_99131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_415187:
L_99132:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_302
.p2align 0x4
.long 0x1
rev_145:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_415193
L_98952:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_98953:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415192
.p2align 0x4,,0x7
L_98954:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_415191
L_98955:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_98953
.p2align 0x4
L_415191:
L_98957:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_98958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415192:
L_98962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_98963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98963
.p2align 0x4
.long 0x45B
L_98963:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_98954
.p2align 0x4
L_415193:
L_98964:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_98957
.p2align 0x4
.long 0x15FC
L_98742:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98743
L_98744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98745
.p2align 0x4
.long 0x1612
L_98745:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98743:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	jmp L_98441
.p2align 0x4
.long 0x1601
L_98707:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98708
L_98724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98725
.p2align 0x4
.long 0x161C
L_98725:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98708:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_98715
	cmpq $0x2,%r15
	je L_415195
L_98709:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movb $0x1,0xC0(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (L_98710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp edge_1
.p2align 0x4
L_415195:
L_98715:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_98441
.p2align 0x4
.long 0x15FF
rev_142:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_415200
L_98668:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_98669:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415199
.p2align 0x4,,0x7
L_98670:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_415198
L_98671:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_98669
.p2align 0x4
L_415198:
L_98673:
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_98674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415199:
L_98678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98679
.p2align 0x4
.long 0x1616
L_98679:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_98670
.p2align 0x4
L_415200:
L_98680:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_98673
.p2align 0x4
.long 0x1601
rev_134:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq $0x1,%r15
	je L_415203
L_98464:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0xB8(%rbp)
	movq $0x1,0xC0(%rbp)
.p2align 0x4,,0x7
L_98465:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415202
.p2align 0x4,,0x7
L_98466:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_415201
L_98467:
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0xB8(%rbp)
	jmp L_98465
.p2align 0x4
L_415201:
L_98469:
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_98470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415202:
L_98478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_98479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98479
.p2align 0x4
.long 0x1603
L_98479:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_98466
.p2align 0x4
L_415203:
L_98480:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_98469
.p2align 0x4
.long 0x1605
L_98547:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98548
L_98549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_98550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98550
.p2align 0x4
.long 0x1606
L_98550:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_98548:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_98449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x160A
rev_139:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_415207
L_98567:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_98568:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415206
.p2align 0x4,,0x7
L_98569:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_415205
L_98570:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_98568
.p2align 0x4
L_415205:
L_98572:
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_98573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415206:
L_98609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_98610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98610
.p2align 0x4
.long 0x160F
L_98610:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_98569
.p2align 0x4
L_415207:
L_98611:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_98572
.p2align 0x4
.long 0x1
rev_131:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_415210
L_98197:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_98198:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415209
.p2align 0x4,,0x7
L_98199:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_415208
L_98200:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_98198
.p2align 0x4
L_415208:
L_98202:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_98203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415209:
L_98207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_98208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98208
.p2align 0x4
.long 0x45B
L_98208:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_98199
.p2align 0x4
L_415210:
L_98209:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_98202
.p2align 0x4
.long 0x15E3
L_98069:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98070
L_98161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_98162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98162
.p2align 0x4
.long 0x15F5
L_98162:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_98070:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x78(%rbp),%r14d
	incl %r14d
	jo L_97135
L_98071:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_415211
L_98072:
	movl %r14d,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	jmp L_98067
.p2align 0x4
L_415211:
L_98073:
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_98074:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415213
.p2align 0x4,,0x7
L_98075:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_98078
L_98076:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_98074
.p2align 0x4
L_415213:
L_98159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_98160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98160
.p2align 0x4
.long 0x9FD
L_98160:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_98075
.p2align 0x4
.long 0x15E4
L_98083:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0x88,%rbp
	leaq (L_98084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1
rev_130:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_415218
L_97794:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_97795:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415217
.p2align 0x4,,0x7
L_97796:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_415216
L_97797:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_97795
.p2align 0x4
L_415216:
L_97799:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_97800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415217:
L_97804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_97805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97805
.p2align 0x4
.long 0x45B
L_97805:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_97796
.p2align 0x4
L_415218:
L_97806:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_97799
.p2align 0x4
.long 0x15BD
L_97205:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x58(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_415221
	cmpq $0x2,%r15
	je L_415220
	cmpq $0x3,%r15
	je L_415219
L_97206:
	movq (globalObjptr+0xCD40)(%rip),%r15
L_97207:
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_97208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_415219:
L_97253:
	movq (globalObjptr+0xE2A0)(%rip),%r15
	jmp L_97207
.p2align 0x4
L_415220:
L_97252:
	movq (globalObjptr+0xEB48)(%rip),%r15
	jmp L_97207
.p2align 0x4
L_415221:
L_97251:
	movq (globalObjptr+0xF148)(%rip),%r15
	jmp L_97207
.p2align 0x4
.long 0x568
L_97237:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x57F
L_97168:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97169
L_97191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_97192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97192
.p2align 0x4
.long 0x563
L_97192:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_97169:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xDF28)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,0x8(%r14)
	je L_415222
L_97170:
	movq (globalObjptr+0xDF00)(%rip),%r15
L_97171:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_97172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_415222:
L_97190:
	movq (globalObjptr+0xDF08)(%rip),%r15
	jmp L_97171
.p2align 0x4
.long 0x568
L_99722:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x4AF
L_99535:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF198)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_99536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_99568:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_99569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xC9F
L_99440:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_99441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x56C
L_99465:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x4AF
L_99184:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF198)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_99185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_99217:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_99218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1626
L_99131:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
L_98958:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98959
L_98960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_98961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98961
.p2align 0x4
.long 0x451
L_98961:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_98959:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1618
L_98710:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98711
L_98720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98721
.p2align 0x4
.long 0x161B
L_98721:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98711:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_98715
	cmpq $0x2,%r15
	je L_98715
L_98712:
	movb $0x2,0xB8(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xB8,%rbp
	leaq (L_98713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp edge_1
.p2align 0x4
.long 0x15FF
L_98674:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98675
L_98676:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98677
.p2align 0x4
.long 0x1614
L_98677:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_98675:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_98441
.p2align 0x4
.long 0x1601
L_98470:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98471
L_98476:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98477
.p2align 0x4
.long 0x1602
L_98477:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98471:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_98472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x160A
L_98573:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98574
L_98607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_98608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98608
.p2align 0x4
.long 0x160E
L_98608:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_98574:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_98575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_98203:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98204
L_98205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_98206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98206
.p2align 0x4
.long 0x451
L_98206:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_98204:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x15E4
L_98084:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98085
L_98155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_98156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98156
.p2align 0x4
.long 0x15F4
L_98156:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_98085:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xEF40)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_97106
L_98087:
	movl %r13d,0x90(%rbp)
	movq $0x3C45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x10,%r12
	addq $0x88,%rbp
	leaq (L_98088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x1
L_97800:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97801
L_97802:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_97803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97803
.p2align 0x4
.long 0x451
L_97803:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_97801:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x15BE
L_97208:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_97209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5A9
L_97172:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97173
L_97188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97189
.p2align 0x4
.long 0x547
L_97189:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_97173:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDF08)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_97174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x5AF
L_99536:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_99537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_99569:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99570
L_99592:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_99593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99593
.p2align 0x4
.long 0x4AE
L_99593:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_99570:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_99571:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_97135
L_99572:
	cmpq $0x1,%r14
	je L_415236
L_99573:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_99571
.p2align 0x4
L_415236:
L_99574:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99575
L_99590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_99591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99591
.p2align 0x4
.long 0x4E6
L_99591:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_99575:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_415237
L_99576:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_149:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_415237:
L_99589:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_149
.p2align 0x4
.long 0xC9F
L_99441:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99442
L_99477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_99478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99478
.p2align 0x4
.long 0x1001
L_99478:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_99442:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_99443:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_99444:
	cmpq $0x1,%r14
	je L_415241
L_99445:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_99443
.p2align 0x4
L_415241:
L_99446:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99447
L_99475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_99476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99476
.p2align 0x4
.long 0xF84
L_99476:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_99447:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_415242
L_99448:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_99449
.p2align 0x4
L_415242:
L_99474:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_99449
.p2align 0x4
.long 0x5AF
L_99185:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_99186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_99218:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99219
L_99241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_99242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99242
.p2align 0x4
.long 0x4AE
L_99242:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_99219:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_99220:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_97135
L_99221:
	cmpq $0x1,%r14
	je L_415246
L_99222:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_99220
.p2align 0x4
L_415246:
L_99223:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99224
L_99239:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_99240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99240
.p2align 0x4
.long 0x4E6
L_99240:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_99224:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_415247
L_99225:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_147:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_415247:
L_99238:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_147
.p2align 0x4
.long 0x1619
L_98713:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98715
L_98716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_98717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98717
.p2align 0x4
.long 0x161A
L_98717:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_98715
.p2align 0x4
.long 0x1601
L_98472:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98473
L_98474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_98475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98475
.p2align 0x4
.long 0x1602
L_98475:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_98473:
	movq 0x90(%rbp),%r15
	jmp L_98457
.p2align 0x4
.long 0x160B
L_98575:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98576
L_98605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_98606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98606
.p2align 0x4
.long 0x160D
L_98606:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_98576:
	movq $0x10AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2773,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x18(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_97129
L_98577:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_415264
L_98578:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x18(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_98580:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_98581
L_98594:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCC3,%r13
	jne L_98581
L_98595:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x88(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_415258
L_98581:
	movl 0x18(%rbp),%r13d
	incl %r13d
	movl %r13d,0x1C(%rbp)
	jo L_97135
L_98582:
	cmpq $0x1,%r15
	je L_415253
L_98583:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x18(%rbp)
	jmp L_98580
.p2align 0x4
L_415253:
L_98584:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98585
L_98592:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_98593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98593
.p2align 0x4
.long 0x160C
L_98593:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_98585:
	movl 0x1C(%rbp),%ecx
L_98586:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_97141
L_98587:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_98589
L_98591:
	movl %ecx,0x0(%r15)
L_98589:
	movq $0x1407,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1987,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_98590:
	movq $0x2767,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%r15),%r13
	movq $0x2769,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_97116
.p2align 0x4
L_415258:
L_98597:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98598
L_98602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_98603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98603
.p2align 0x4
.long 0x591
L_98603:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_98598:
	movl 0x18(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_97141
L_98599:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_415259
L_98600:
	movq 0x20(%rbp),%r15
	jmp L_98590
.p2align 0x4
L_415259:
L_98601:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x18(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x20(%rbp),%r15
	jmp L_98590
.p2align 0x4
L_415264:
L_98604:
	xorl %ecx,%ecx
	jmp L_98586
.p2align 0x4
.long 0xEE4
L_98088:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0x88,%rbp
	leaq (L_98089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x15BF
L_97209:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF16,%r14
	je L_415267
L_97250:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_97212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_32
.p2align 0x4
L_415267:
L_97210:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_97211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x532
L_97174:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97175
L_97186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_97187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97187
.p2align 0x4
.long 0x53F
L_97187:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_97175:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_97176:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_97177:
	cmpq $0x1,%r14
	je L_415268
L_97178:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_97176
.p2align 0x4
L_415268:
L_97179:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97180
L_97184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_97185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97185
.p2align 0x4
.long 0x578
L_97185:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_97180:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_415269
L_97181:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
x_295:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x40(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_97182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_415269:
L_97183:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_295
.p2align 0x4
.long 0x51E
L_99537:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99538
L_99560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_99561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99561
.p2align 0x4
.long 0x4AE
L_99561:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_99538:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_99539:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_97135
L_99540:
	cmpq $0x1,%r14
	je L_415273
L_99541:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_99539
.p2align 0x4
L_415273:
L_99542:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99543
L_99558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_99559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99559
.p2align 0x4
.long 0x4E6
L_99559:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_99543:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_415274
L_99544:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_148:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_415274:
L_99557:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_148
.p2align 0x4
.long 0x1
rev_149:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_415280
L_99577:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_99578:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415279
.p2align 0x4,,0x7
L_99579:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_415278
L_99580:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_99578
.p2align 0x4
L_415278:
L_99582:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415279:
L_99586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_99587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99587
.p2align 0x4
.long 0x45B
L_99587:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_99579
.p2align 0x4
L_415280:
L_99588:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_99582
.p2align 0x4
.long 0x51E
L_99186:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99187
L_99209:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_99210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99210
.p2align 0x4
.long 0x4AE
L_99210:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_99187:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_99188:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_97135
L_99189:
	cmpq $0x1,%r14
	je L_415281
L_99190:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_99188
.p2align 0x4
L_415281:
L_99191:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99192
L_99207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_99208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99208
.p2align 0x4
.long 0x4E6
L_99208:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_99192:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_415282
L_99193:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_146:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_415282:
L_99206:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_146
.p2align 0x4
.long 0x1
rev_147:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_415288
L_99226:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_99227:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415287
.p2align 0x4,,0x7
L_99228:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_415286
L_99229:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_99227
.p2align 0x4
L_415286:
L_99231:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415287:
L_99235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_99236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99236
.p2align 0x4
.long 0x45B
L_99236:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_99228
.p2align 0x4
L_415288:
L_99237:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_99231
.p2align 0x4
.long 0xEE4
L_98089:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98090
L_98153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_98154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98154
.p2align 0x4
.long 0x15F3
L_98154:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_98090:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF158)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_97106
L_98092:
	movl %r13d,0x90(%rbp)
	movq $0x3B8D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x10,%r12
	addq $0x88,%rbp
	leaq (L_98093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x15C0
L_97212:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97213
L_97248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_97249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97249
.p2align 0x4
.long 0x15C2
L_97249:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_97213:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_97214:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_97135
L_97215:
	cmpq $0x1,%r14
	je L_415291
L_97216:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_97214
.p2align 0x4
L_415291:
L_97217:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_97218
L_97246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_97247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97247
.p2align 0x4
.long 0x15C1
L_97247:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_97218:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_415296
L_97219:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_97220:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movl 0x38(%rbp),%r13d
	incl %r13d
	jo L_97135
L_97221:
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_415292
L_97222:
	movl %r13d,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,0x20(%rbp)
	movq %r14,%r15
	jmp L_97201
.p2align 0x4
L_415292:
L_97223:
	movq %r14,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_97224:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415294
.p2align 0x4,,0x7
L_97225:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_97228
L_97226:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_97224
.p2align 0x4
L_415294:
L_97243:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_97244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_97244
.p2align 0x4
.long 0x530
L_97244:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_97225
.p2align 0x4
L_415296:
L_97245:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_97220
.p2align 0x4
.long 0x15C0
L_97211:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_97212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x56C
L_97182:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
rev_148:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_415302
L_99545:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_99546:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415301
.p2align 0x4,,0x7
L_99547:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_415300
L_99548:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_99546
.p2align 0x4
L_415300:
L_99550:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415301:
L_99554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_99555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99555
.p2align 0x4
.long 0x45B
L_99555:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_99547
.p2align 0x4
L_415302:
L_99556:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_99550
.p2align 0x4
.long 0x1
bug_262:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99583
L_99584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_99585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99585
.p2align 0x4
.long 0x451
L_99585:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_99583:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
rev_146:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_415306
L_99194:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_99195:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_415305
.p2align 0x4,,0x7
L_99196:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_415304
L_99197:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_99195
.p2align 0x4
L_415304:
L_99199:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_415305:
L_99203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_99204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99204
.p2align 0x4
.long 0x45B
L_99204:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_99196
.p2align 0x4
L_415306:
L_99205:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_99199
.p2align 0x4
.long 0x1
bug_260:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99232
L_99233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_99234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99234
.p2align 0x4
.long 0x451
L_99234:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_99232:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x15E5
L_98093:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0x88,%rbp
	leaq (L_98094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1
bug_261:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99551
L_99552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_99553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99553
.p2align 0x4
.long 0x451
L_99553:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_99551:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_259:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_99200
L_99201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_99202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_99202
.p2align 0x4
.long 0x451
L_99202:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_99200:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x15E5
L_98094:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98095
L_98151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_98152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98152
.p2align 0x4
.long 0x15F2
L_98152:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_98095:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF160)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_98096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x15E6
L_98096:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_98097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x15E6
L_98097:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98098
L_98149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_98150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98150
.p2align 0x4
.long 0x15F1
L_98150:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_98098:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF168)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_415312
L_98099:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1492,%r15
	jne L_415311
L_98100:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xF170)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_98101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_415311:
L_98143:
	movq (globalObjptr+0xF188)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_98144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_415312:
L_98148:
	movq (globalObjptr+0xF190)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_98144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x15E7
L_98101:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98102
L_98141:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_98142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98142
.p2align 0x4
.long 0x15EE
L_98142:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_98102:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_97106
L_98104:
	movl %r13d,0x90(%rbp)
	movq $0x3C47,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_98105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x15EF
L_98144:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98145
L_98146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_98147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98147
.p2align 0x4
.long 0x15F0
L_98147:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_98145:
	movq 0x28(%rbp),%r15
L_98114:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF178)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_97106
L_98116:
	movl %r13d,0x90(%rbp)
	movq $0x3B8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_98117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x15E8
L_98105:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0x88,%rbp
	leaq (L_98106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x15E9
L_98117:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0x88,%rbp
	leaq (L_98118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x15E8
L_98106:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98107
L_98139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_98140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98140
.p2align 0x4
.long 0x15EE
L_98140:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_98107:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_98108:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_97135
L_98109:
	cmpq $0x1,%r14
	je L_415318
L_98110:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_98108
.p2align 0x4
L_415318:
L_98111:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98112
L_98137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_98138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98138
.p2align 0x4
.long 0x15ED
L_98138:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_98112:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_415319
L_98113:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_98114
.p2align 0x4
L_415319:
L_98136:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_98114
.p2align 0x4
.long 0x15E9
L_98118:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98119
L_98134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_98135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98135
.p2align 0x4
.long 0x15EC
L_98135:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_98119:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF180)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_98120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x15EA
L_98120:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98121
L_98132:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_98133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98133
.p2align 0x4
.long 0x15EB
L_98133:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_98121:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_98122:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_97135
L_98123:
	cmpq $0x1,%r14
	je L_415324
L_98124:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_98122
.p2align 0x4
L_415324:
L_98125:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_98126
L_98130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_98131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_98131
.p2align 0x4
.long 0x538
L_98131:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_98126:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_415325
L_98127:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
x_298:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x50(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_98128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_415325:
L_98129:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_298
.p2align 0x4
.long 0x5C0
L_98128:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_97115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
