/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:10:50 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl get_130
.hidden get_130
get_130:
L_334294:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_334295
L_334348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_334349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334349
.p2align 0x4
.long 0x45B
L_334349:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_334295:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_515694
L_334297:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_515693
L_334298:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_334300:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_334301
L_334340:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xD77,%r13
	jne L_334301
L_334341:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpq %r11,0x10(%rbp)
	je L_515688
L_334301:
	incl %ecx
	jo L_515687
L_334303:
	cmpq $0x1,%r14
	je L_515685
L_334304:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_334300
.p2align 0x4
L_515685:
L_334305:
L_334306:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_515686
L_334308:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_1053
L_334339:
	movl %ecx,0x0(%r15)
x_1053:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_334310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_515686:
L_334307:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515687:
L_334302:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515688:
L_334343:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_334307
L_334344:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_515689
L_334346:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515689:
L_334345:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515693:
L_334347:
	xorl %ecx,%ecx
	jmp L_334306
.p2align 0x4
L_515694:
L_334296:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_334310:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_334311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_334311:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_334312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_334312:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF160)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_334313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_334313:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_334314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_334314:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334315
L_334337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_334338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334338
.p2align 0x4
.long 0x4AE
L_334338:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_334315:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_334316:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_334302
L_334317:
	cmpq $0x1,%r14
	je L_515696
L_334318:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_334316
.p2align 0x4
L_515696:
L_334319:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334320
L_334335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_334336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334336
.p2align 0x4
.long 0x4E6
L_334336:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_334320:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_515697
L_334321:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_471:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_515697:
L_334334:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_471
.p2align 0x4
.long 0x1
rev_474:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_515703
L_334322:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_334323:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515702
.p2align 0x4,,0x7
L_334324:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_515701
L_334325:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_334323
.p2align 0x4
L_515701:
L_334327:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_515702:
L_334331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_334332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334332
.p2align 0x4
.long 0x45B
L_334332:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_334324
.p2align 0x4
L_515703:
L_334333:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_334327
.p2align 0x4
.long 0x1
bug_673:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334328
L_334329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_334330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334330
.p2align 0x4
.long 0x451
L_334330:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_334328:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl setLiveOperands_0
.hidden setLiveOperands_0
setLiveOperands_0:
L_334350:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_334432
L_334351:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515737
L_334352:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_515736
L_334353:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_334354:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515735
.p2align 0x4,,0x7
L_334355:
L_334356:
	movq 0x28(%rbp),%r11
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_334357
L_334389:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10E8,%r15
	jne L_515732
L_334390:
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x18(%r10),%r11
	movq 0x28(%r11),%r14
	movq 0x18(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_334423
L_334391:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_334392:
	movl 0x0(%r15),%r11d
	movl %r11d,0x28(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x2C(%rbp)
	cmpl %r10d,%r11d
	jnl L_515720
L_334419:
	cmpq $0x1,%r13
	je L_515705
L_334420:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_334392
.p2align 0x4
L_515705:
L_334421:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515719
.p2align 0x4,,0x7
L_334423:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_515706
L_334424:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_334354
.p2align 0x4
L_515706:
L_334425:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
L_334360:
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r11),%r14
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_515718
L_334362:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_515717
L_334363:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_334365:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_515716
L_334380:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD7E,%r11
	jne L_515715
L_334381:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_515712
L_334366:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_515711
L_334368:
	cmpq $0x1,%r15
	je L_515707
L_334369:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_334365
.p2align 0x4
L_515707:
L_334370:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334371
L_334378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_334379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334379
.p2align 0x4
.long 0x4F2
L_334379:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_334371:
	movl 0x20(%rbp),%ecx
L_334372:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_515709
L_334374:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_334376
L_334377:
	movl %ecx,0x0(%r15)
L_334376:
	movq $0x1AFD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515709:
L_334373:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515711:
L_334367:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515712:
L_334383:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_334373
L_334384:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_515713
L_334387:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_334386:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515713:
L_334385:
	movq %r13,%r15
	jmp L_334386
.p2align 0x4
L_515715:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_334366
.p2align 0x4
L_515716:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_334366
.p2align 0x4
L_515717:
L_334388:
	xorl %ecx,%ecx
	jmp L_334372
.p2align 0x4
L_515718:
L_334361:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515719:
L_334426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_334427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334427
.p2align 0x4
.long 0xA27
L_334427:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_334423
.p2align 0x4
L_515720:
L_334393:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515730
.p2align 0x4,,0x7
L_334394:
	movl 0x28(%rbp),%r13d
	cmpl %r13d,0x2C(%rbp)
	jl L_515728
L_334395:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_334402
L_334396:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_334397:
	movq 0x38(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_515724
L_334398:
	cmpq $0x1,%r14
	je L_515721
L_334399:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_334397
.p2align 0x4
L_515721:
L_334400:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515723
.p2align 0x4,,0x7
L_334402:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_515722
L_334403:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_334354
.p2align 0x4
L_515722:
L_334404:
	movq %r15,0x10(%rbp)
	jmp L_334360
.p2align 0x4
L_515723:
L_334405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_334406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334406
.p2align 0x4
.long 0x735
L_334406:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_334402
.p2align 0x4
L_515724:
L_334407:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515726
.p2align 0x4,,0x7
L_334408:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_515725
L_334409:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_334354
.p2align 0x4
L_515725:
L_334410:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_334360
.p2align 0x4
L_515726:
L_334411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_334412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334412
.p2align 0x4
.long 0xA27
L_334412:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_334408
.p2align 0x4
L_515728:
L_334414:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_515729
L_334415:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_334354
.p2align 0x4
L_515729:
L_334416:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_334360
.p2align 0x4
L_515730:
L_334417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_334418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334418
.p2align 0x4
.long 0x735
L_334418:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_334394
.p2align 0x4
L_515732:
L_334357:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_515733
L_334358:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_334354
.p2align 0x4
L_515733:
L_334359:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_334360
.p2align 0x4
L_515735:
L_334429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_334430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334430
.p2align 0x4
.long 0x4F0
L_334430:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_334355
.p2align 0x4
L_515736:
L_334431:
	movq $0x1,0x10(%rbp)
	jmp L_334360
.p2align 0x4
L_515737:
L_334432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_334433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334433
.p2align 0x4
.long 0x4AE
L_334433:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_334352
.text
.p2align 0x4
.globl mayAlias_1
.hidden mayAlias_1
mayAlias_1:
L_334434:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_334435
L_334556:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_334557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334557
.p2align 0x4
.long 0x6FE
L_334557:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_334435:
	movq 0x8(%rbp),%r14
	movq 0x18(%r14),%r15
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x28(%r13),%r14
	movq 0x28(%r15),%r10
	movl 0x0(%r10),%r9d
	cmpl %r9d,0x0(%r14)
	jne L_334437
L_334438:
	movb 0x0(%r15),%dl
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r10
	movq %r10,%r11
	movq 0x18(%r15),%r9
	movq 0x20(%r15),%r10
	cmpq $0x1,%r10
	je L_515772
L_334439:
	cmpq $0x1,%r11
	jne L_334440
L_334441:
	cmpq $0x1,%r14
	je L_515766
L_334442:
	movb 0x0(%r13),%cl
	movq 0x8(%r13),%r15
	movq 0x10(%r13),%r11
	movq 0x18(%r13),%r8
	movq 0x20(%r13),%rsp
L_334443:
	movq %rsp,%r13
	andq $0x3,%r13
	jnz L_334440
L_334444:
	cmpq $0x1,%r11
	jne L_334440
L_334446:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_334440
L_334447:
	movq 0x8(%r10),%r13
	cmpq %r13,0x8(%rsp)
	je L_515762
L_334448:
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	jne L_334440
L_334450:
	movq %r8,%r15
	movq %r9,%r11
mayAliasImmIndex_1:
	movq 0x10(%rbp),%r13
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x30(%rbp)
	cmpb $0x1,%dl
	je L_334521
	cmpb $0x2,%dl
	je L_515759
	cmpb $0x3,%dl
	je L_515758
	cmpb $0x6,%dl
	je L_515757
	cmpb $0x7,%dl
	je L_515756
L_334452:
	movl $0x4,%r13d
	movb %cl,%dl
	movl %r13d,%ecx
L_334453:
	movslq %ecx,%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0x38(%rbp)
	cmpb $0x1,%dl
	je L_334513
	cmpb $0x2,%dl
	je L_515754
	cmpb $0x3,%dl
	je L_515753
	cmpb $0x6,%dl
	je L_515752
	cmpb $0x7,%dl
	je L_515751
L_334455:
	movl $0x4,%ecx
L_334456:
	movslq %ecx,%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r11
	je L_515750
L_334457:
	movq %r11,%r13
L_334458:
	movq 0x10(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0x10E3,%r13
	je L_515748
	cmpq $0x10E4,%r13
	je L_515746
L_334459:
	cmpq $0x1,%r15
	je L_515745
L_334460:
	movq $0x1,%r14
L_334461:
	movq 0x10(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10E3,%r15
	je L_515743
	cmpq $0x10E4,%r15
	je L_515741
L_334463:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_334440
L_334464:
	movq $0x1,0x48(%rbp)
	movq %r14,%r15
L_334466:
	movq 0x48(%rbp),%r14
	andq $0x3,%r14
	jnz L_515739
L_334467:
	movq %r15,0x58(%rbp)
	leaq L_334478(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_334468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_515739:
L_334440:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515741:
L_334501:
	movq 0x0(%r13),%r15
L_334502:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_334440
L_334503:
	movq %r15,0x48(%rbp)
	movq %r14,%r15
	jmp L_334466
.p2align 0x4
L_515743:
L_334499:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_334440
L_334500:
	movq $0x1,0x48(%rbp)
	movq %r14,%r15
	jmp L_334466
.p2align 0x4
L_515745:
L_334504:
	movq $0x1,%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_334461
.p2align 0x4
L_515746:
L_334508:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r15
	je L_515747
L_334509:
	movq %r13,%r14
	jmp L_334461
.p2align 0x4
L_515747:
L_334510:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_334461
.p2align 0x4
L_515748:
L_334505:
	cmpq $0x1,%r15
	je L_515749
L_334506:
	movq $0x1,%r14
	jmp L_334461
.p2align 0x4
L_515749:
L_334507:
	movq $0x1,%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_334461
.p2align 0x4
L_515750:
L_334511:
	movq %r14,%r13
	jmp L_334458
.p2align 0x4
L_515751:
L_334519:
	movl $0x1,%ecx
	jmp L_334456
.p2align 0x4
L_515752:
L_334513:
	movl $0x2,%ecx
	jmp L_334456
.p2align 0x4
L_515753:
L_334515:
	movl $0x8,%ecx
	jmp L_334456
.p2align 0x4
L_515754:
L_334514:
	movl $0xA,%ecx
	jmp L_334456
.p2align 0x4
L_515756:
L_334527:
	movl $0x1,%r13d
	movb %cl,%dl
	movl %r13d,%ecx
	jmp L_334453
.p2align 0x4
L_515757:
L_334521:
	movl $0x2,%r13d
	movb %cl,%dl
	movl %r13d,%ecx
	jmp L_334453
.p2align 0x4
L_515758:
L_334523:
	movl $0x8,%r13d
	movb %cl,%dl
	movl %r13d,%ecx
	jmp L_334453
.p2align 0x4
L_515759:
L_334522:
	movl $0xA,%r13d
	movb %cl,%dl
	movl %r13d,%ecx
	jmp L_334453
.p2align 0x4
L_515762:
L_334437:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515766:
L_334529:
	movb 0x0(%r13),%cl
	movq 0x8(%r13),%r15
	movq 0x10(%r13),%r14
	movq 0x18(%r13),%r11
	movq 0x20(%r13),%r8
L_334530:
	movq %r8,%r13
	andq $0x3,%r13
	jnz L_334440
L_334531:
	cmpq $0x1,%r14
	jne L_334440
L_334532:
	cmpq $0x1,%r15
	jne L_334440
L_334533:
	movq 0x8(%r8),%r14
	cmpq %r14,0x8(%r10)
	jne L_334437
L_334535:
	movq %r11,%r15
	movq %r9,%r11
	jmp mayAliasImmIndex_1
.p2align 0x4
L_515772:
L_334537:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_334440
L_334538:
	cmpq $0x1,%r14
	je L_515778
L_334539:
	movb 0x0(%r13),%cl
	movq 0x8(%r13),%r15
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r8
	cmpq $0x1,0x20(%r13)
	jne L_334440
L_334541:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_334440
L_334543:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_334440
L_334544:
	movq 0x10(%r11),%r13
	cmpq %r13,0x10(%r10)
	jne L_334440
L_334546:
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	jne L_334440
L_334548:
	movq %r8,%r15
	movq %r9,%r11
	jmp mayAliasImmIndex_1
.p2align 0x4
L_515778:
L_334549:
	movb 0x0(%r13),%cl
	movq 0x8(%r13),%r15
	movq 0x10(%r13),%r14
	movq 0x18(%r13),%r10
	cmpq $0x1,0x20(%r13)
	jne L_334440
L_334551:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_334440
L_334552:
	cmpq $0x1,%r15
	jne L_334440
L_334553:
	movq 0x10(%r11),%r13
	cmpq %r13,0x10(%r14)
	jne L_334440
L_334555:
	movq %r10,%r15
	movq %r9,%r11
	jmp mayAliasImmIndex_1
.p2align 0x4
.long 0x2120
L_334468:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_334469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x48A
L_334478:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x3,%r15
	je L_334437
L_334479:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_334480
L_334481:
L_334480:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10E6
L_334469:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334470
L_334496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_334497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334497
.p2align 0x4
.long 0xF52
L_334497:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_334470:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	movq 0x28(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_515789
L_334471:
	cmpq %r13,%r15
	jl L_515788
L_334473:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_334474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_515788:
L_334484:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_334485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_515789:
L_334489:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334490
L_334494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_334495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334495
.p2align 0x4
.long 0xF52
L_334495:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_334490:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x28(%rbp),%rsi
	movq 0x50(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_334491:
	cmpl $0x0,%eax
	jl L_334484
	jmp L_334473
.p2align 0x4
.long 0x61B
L_334474:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,%r14
	movq 0x50(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_515793
L_334475:
	cmpq %r15,%r13
	setl %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515793:
L_334476:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_334477:
	cmpl $0x0,%eax
	setl %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_334485:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,%r14
	movq 0x28(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_515794
L_334486:
	cmpq %r15,%r13
	setl %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515794:
L_334487:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_334488:
	cmpl $0x0,%eax
	setl %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_4384
.hidden loop_4384
loop_4384:
L_334558:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_334620
L_334559:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515814
L_334560:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_515813
L_334561:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x12EF,%r14
	je L_515812
	cmpq $0x12F0,%r14
	je L_515811
	cmpq $0x12F1,%r14
	je L_515810
	cmpq $0x12F2,%r14
	je L_515809
L_334562:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x0(%rbp)
.p2align 0x4,,0x7
L_334563:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515808
.p2align 0x4,,0x7
L_334564:
	movq $0x25E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_515807
L_334565:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x12EF,%r13
	je L_515806
	cmpq $0x12F0,%r13
	je L_515800
	cmpq $0x12F1,%r13
	je L_515796
	cmpq $0x12F2,%r13
	je L_515795
L_334566:
	movq %r15,0x10(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_334563
.p2align 0x4
L_515795:
L_334599:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x0(%rbp)
	movq %r13,%r14
L_334600:
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_334601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_4384
.p2align 0x4
L_515796:
L_334585:
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r15
L_334586:
	cmpq $0x1,%r15
	je L_515799
L_334587:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_334588:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515798
.p2align 0x4,,0x7
L_334589:
	movq $0x25E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_515797
L_334590:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_334588
.p2align 0x4
L_515797:
L_334591:
	movq 0x10(%rbp),%r13
	movq 0x0(%rbp),%r15
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%rbp)
	xchgq %r13,%r14
L_334592:
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_334593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_4384
.p2align 0x4
L_515798:
L_334596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_334597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334597
.p2align 0x4
.long 0x4AE
L_334597:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_334589
.p2align 0x4
L_515799:
L_334598:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515800:
L_334569:
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r15
L_334570:
	cmpq $0x1,%r15
	je L_515805
L_334571:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_334572:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515804
.p2align 0x4,,0x7
L_334573:
	movq $0x25E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_515801
L_334574:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_334572
.p2align 0x4
L_515801:
L_334575:
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
.p2align 0x4,,0x7
L_334576:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515803
.p2align 0x4,,0x7
L_334577:
	movq $0x25E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_515802
L_334578:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_334576
.p2align 0x4
L_515802:
L_334579:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515803:
L_334580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_334581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334581
.p2align 0x4
.long 0x45B
L_334581:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_334577
.p2align 0x4
L_515804:
L_334582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_334583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334583
.p2align 0x4
.long 0x4AE
L_334583:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_334573
.p2align 0x4
L_515805:
L_334584:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515806:
L_334567:
	movq 0x18(%r14),%r11
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r9
	movq 0x0(%r14),%r8
	movq %r9,%r14
	movq %r15,%r10
	movq %r8,%r15
L_334568:
	movq $0x1163,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r14,0x10(%r9)
	movq %r15,0x18(%r9)
	addq $0x28,%r12
	movq $0x25E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x0(%r15)
	movq %r10,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515807:
L_334612:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515808:
L_334613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_334614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334614
.p2align 0x4
.long 0x45B
L_334614:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_334564
.p2align 0x4
L_515809:
L_334618:
	movq 0x8(%r15),%r14
	movq 0x0(%rbp),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x0(%rbp)
	movq %r13,%r15
	jmp L_334600
.p2align 0x4
L_515810:
L_334617:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_334586
.p2align 0x4
L_515811:
L_334616:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_334570
.p2align 0x4
L_515812:
L_334615:
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r9
	movq 0x0(%rbp),%r10
	movq %r9,%r15
	jmp L_334568
.p2align 0x4
L_515813:
L_334619:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515814:
L_334620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_334621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334621
.p2align 0x4
.long 0x45F
L_334621:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_334560
.p2align 0x4
.long 0x4AF
L_334601:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334602
L_334610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_334611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334611
.p2align 0x4
.long 0x45F
L_334611:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_334602:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_515820
L_334603:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x12EF,%r14
	je L_515819
	cmpq $0x12F0,%r14
	je L_515818
	cmpq $0x12F1,%r14
	je L_515817
	cmpq $0x12F2,%r14
	je L_515816
L_334604:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_334563
.p2align 0x4
L_515816:
L_334608:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	movq 0x8(%rbp),%r15
	jmp L_334600
.p2align 0x4
L_515817:
L_334607:
	movq 0x0(%r15),%r14
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq %r14,%r15
	jmp L_334586
.p2align 0x4
L_515818:
L_334606:
	movq 0x0(%r15),%r14
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq %r14,%r15
	jmp L_334570
.p2align 0x4
L_515819:
L_334605:
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r9
	movq 0x8(%rbp),%r10
	movq %r9,%r15
	jmp L_334568
.p2align 0x4
L_515820:
L_334609:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_334593:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_515822
L_334594:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	jmp L_334592
.p2align 0x4
L_515822:
L_334595:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl simplify_2
.hidden simplify_2
simplify_2:
L_334622:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_334623
L_334800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_334801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334801
.p2align 0x4
.long 0x968
L_334801:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_334623:
	movq 0x28(%rbp),%r15
	movq 0x118(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x108(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x100(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0xF0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0xE8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0xE0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0xD8(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0xD0(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0xC8(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0xC0(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0xB8(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0xB0(%r15),%r13
	movq %r13,0x98(%rbp)
	movq 0xA8(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq 0xA0(%r15),%r13
	movq %r13,0xA8(%rbp)
	movq 0x98(%r15),%r13
	movq %r13,0xB0(%rbp)
	movq 0x90(%r15),%r13
	movq %r13,0xB8(%rbp)
	movq 0x88(%r15),%r13
	movq %r13,0xC0(%rbp)
	movq 0x80(%r15),%r13
	movq %r13,0xC8(%rbp)
	movq 0x78(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x70(%r15),%r13
	movq %r13,0xD8(%rbp)
	movq 0x68(%r15),%r13
	movq %r13,0xE0(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0xE8(%rbp)
	movq 0x58(%r15),%r13
	movq %r13,0xF0(%rbp)
	movq 0x50(%r15),%r13
	movq %r13,0xF8(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x100(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x108(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x110(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x118(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x120(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x128(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x130(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x138(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x140(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x148(%rbp)
	movq 0x38(%r14),%r15
	movq %r15,0x150(%rbp)
	movq 0x30(%r14),%r15
	movq %r15,0x158(%rbp)
	movq 0x28(%r14),%r15
	movq %r15,0x160(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x168(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x170(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x178(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x180(%rbp)
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x0,%r13b
	je L_334776
	cmpb $0x1,%r13b
	je L_515823
L_334624:
	movq 0x8(%rbp),%r14
	movq %r14,0x158(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x160(%rbp)
	movq %r15,0x168(%rbp)
	addq $0x158,%rbp
	leaq (L_334625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp completeLiveInfo_1
.p2align 0x4
L_515823:
L_334776:
	movq 0x180(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x190,%rbp
	leaq (L_334777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x48C3
L_334625:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334627
L_334773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_334774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334774
.p2align 0x4
.long 0x48D6
L_334774:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_334627:
	movq 0x70(%rbp),%r14
	movq 0x30(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x150(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x158(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x168(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x170(%rbp)
	movq 0x0(%r14),%r11
	movb 0x0(%r11),%r13b
	testb %r13b,%r13b
	jz L_515847
L_334628:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_515844
L_334629:
	movq 0x8(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_334630:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1130,%r15
	je L_515843
	cmpq $0x1131,%r15
	je L_515842
	cmpq $0x1132,%r15
	je L_515841
	cmpq $0x1133,%r15
	je L_334633
L_334631:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movl 0x14(%r13),%r11d
	testl %r11d,%r11d
	jz L_334633
get_9:
	movq 0x10(%r15),%r13
	movq %r13,0x150(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_515838
L_334659:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_515837
L_334660:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_334662:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_334663
L_334680:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCBA,%r13
	jne L_334663
L_334681:
	movq 0x8(%r14),%r13
	movq 0x10(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_515832
L_334663:
	incl %ecx
	movl %ecx,0x4(%rbp)
	jo L_515831
L_334665:
	cmpq $0x1,%r15
	je L_515826
L_334666:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_334662
.p2align 0x4
L_515826:
L_334667:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334668
L_334678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_334679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334679
.p2align 0x4
.long 0x48C8
L_334679:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_334668:
	movl 0x4(%rbp),%ecx
L_334669:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_515829
L_334671:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_334673
L_334677:
	movl %ecx,0x0(%r15)
L_334673:
	movq $0x140D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalWord64+0x1078)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1975,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x150(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_334674:
	movq 0x0(%r15),%r14
	andq $0x1,%r14
	jz L_334633
L_334676:
	movq $0x0,0x0(%r15)
L_334633:
	movq 0x70(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (loop_3620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nearTargets_1
.p2align 0x4
L_515829:
L_334670:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1080)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515831:
L_334664:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515832:
L_334683:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_334670
L_334684:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_515833
L_334686:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_334674
.p2align 0x4
L_515833:
L_334685:
	movq %r13,%r15
	jmp L_334674
.p2align 0x4
L_515837:
L_334687:
	xorl %ecx,%ecx
	jmp L_334669
.p2align 0x4
L_515838:
L_334658:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1088)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515841:
L_334690:
	movq 0x0(%r14),%r15
	jmp get_9
.p2align 0x4
L_515842:
L_334689:
	movq 0x8(%r14),%r15
	jmp get_9
.p2align 0x4
L_515843:
L_334688:
	movq 0x8(%r14),%r15
	jmp get_9
.p2align 0x4
L_515844:
L_334644:
	movl 0x0(%rbp),%r14d
	cmpl $0x0,%r14d
	je L_515846
	cmpl $0x1,%r14d
	je L_515845
L_334645:
	movq 0x20(%rbp),%r15
loop_3621:
	movq %r15,0x158(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x68(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x200(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x208(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x210(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x218(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x220(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x228(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x230(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x238(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x248(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x158,%rbp
	leaq (L_334646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp optimizer_1
.p2align 0x4
L_515845:
L_334650:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x130(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq 0x138(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x138(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0xF8(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xF8(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0xB0(%rbp),%r14
	movq %r14,0xF0(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0xE8(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0xE0(%rbp),%r15
	movq 0xC0(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0xC8(%rbp),%r15
	movq 0xD8(%rbp),%r14
	movq %r14,0xC8(%rbp)
	movq %r15,0xD8(%rbp)
	addq $0x48,%rbp
	leaq (L_334651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp optimizer_1
.p2align 0x4
L_515846:
L_334649:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515847:
L_334693:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x170(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_334694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x48D7
L_334777:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x190(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x188(%rbp)
	leaq L_334789(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_334778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp completeLiveInfo_1
.p2align 0x4
.long 0x48C4
loop_3620:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334634
L_334655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_334656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334656
.p2align 0x4
.long 0x48C7
L_334656:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_334634:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_515849
L_334635:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
L_334636:
	movq %r15,0x158(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_334637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
L_515849:
L_334641:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_334644
L_334642:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_334630
.p2align 0x4
.long 0x48C6
L_334646:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x160(%rbp),%r14d
	movl %r14d,0x28(%rbp)
	testl %r14d,%r14d
	jnz loop_3621
L_334647:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x904
L_334651:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x50(%rbp),%r14d
	movl %r14d,0x48(%rbp)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48C9
L_334694:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334695
L_334771:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_334772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334772
.p2align 0x4
.long 0x48D5
L_334772:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_334695:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_515871
L_334696:
	movq 0x8(%r13),%r14
	movq %r14,0x180(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_334697:
	movq 0x0(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x18(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1130,%r15
	je L_515870
	cmpq $0x1131,%r15
	je L_515869
	cmpq $0x1132,%r15
	je L_515868
	cmpq $0x1133,%r15
	je L_334700
L_334698:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movl 0x14(%r13),%r11d
	testl %r11d,%r11d
	jz L_334700
get_10:
	movq 0x10(%r15),%r13
	movq %r13,0x190(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_515865
L_334737:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_515864
L_334738:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_334740:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_334741
L_334758:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCBA,%r13
	jne L_334741
L_334759:
	movq 0x8(%r14),%r13
	movq 0x10(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_515859
L_334741:
	incl %ecx
	movl %ecx,0x4(%rbp)
	jo L_515858
L_334743:
	cmpq $0x1,%r15
	je L_515853
L_334744:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_334740
.p2align 0x4
L_515853:
L_334745:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334746
L_334756:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_334757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334757
.p2align 0x4
.long 0x48D4
L_334757:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_334746:
	movl 0x4(%rbp),%ecx
L_334747:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_515856
L_334749:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_334751
L_334755:
	movl %ecx,0x0(%r15)
L_334751:
	movq $0x140D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalWord64+0x1078)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1975,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x190(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_334752:
	movq 0x0(%r15),%r14
	andq $0x1,%r14
	jz L_334700
L_334754:
	movq $0x0,0x0(%r15)
L_334700:
	movq 0x188(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x190,%rbp
	leaq (loop_3622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nearTargets_1
.p2align 0x4
L_515856:
L_334748:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,0x40(%rbp)
L_334720:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5668)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_334721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_515858:
L_334742:
	movq $0x3,0x40(%rbp)
	jmp L_334720
.p2align 0x4
L_515859:
L_334761:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_334748
L_334762:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_515860
L_334764:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_334752
.p2align 0x4
L_515860:
L_334763:
	movq %r13,%r15
	jmp L_334752
.p2align 0x4
L_515864:
L_334765:
	xorl %ecx,%ecx
	jmp L_334747
.p2align 0x4
L_515865:
L_334736:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_334720
.p2align 0x4
L_515868:
L_334768:
	movq 0x0(%r14),%r15
	jmp get_10
.p2align 0x4
L_515869:
L_334767:
	movq 0x8(%r14),%r15
	jmp get_10
.p2align 0x4
L_515870:
L_334766:
	movq 0x8(%r14),%r15
	jmp get_10
.p2align 0x4
L_515871:
L_334711:
	leaq L_334719(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x170(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x188,%rbp
	leaq (L_334712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x48D8
L_334778:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x198,%rbp
	leaq (L_334779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x651
L_334789:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5660)(%rip),%r15
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_334790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x48C5
L_334637:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334638
L_334652:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_334653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334653
.p2align 0x4
.long 0x48C7
L_334653:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_334638:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_334641
L_334639:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	jmp L_334636
.p2align 0x4
.long 0x48CA
loop_3622:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x190(%rbp),%r15
	movq %r15,0x188(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334701
L_334733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_334734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334734
.p2align 0x4
.long 0x48D3
L_334734:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_334701:
	movq 0x188(%rbp),%r14
	cmpq $0x1,%r14
	je L_515875
L_334702:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x188(%rbp)
L_334703:
	movq %r15,0x198(%rbp)
	leaq L_334719(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x198,%rbp
	leaq (L_334704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
L_515875:
L_334708:
	movq 0x180(%rbp),%r14
	cmpq $0x1,%r14
	je L_334711
L_334709:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x180(%rbp)
	jmp L_334697
.p2align 0x4
.long 0x6DA
L_334721:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334722
L_334724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_334725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334725
.p2align 0x4
.long 0x9DB
L_334725:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_334722:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x0,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_334723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x48CC
L_334712:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x168(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x188(%rbp)
	movq 0x178(%rbp),%r14
	movq %r14,0x198(%rbp)
	movq %r15,0x1A0(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_334713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x651
L_334719:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_334720
.p2align 0x4
.long 0x48CD
L_334779:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x170(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x190(%rbp)
	movq 0x188(%rbp),%r14
	movq %r14,0x1A0(%rbp)
	movq %r15,0x1A8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_334780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x48DE
L_334790:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334791
L_334793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_334794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334794
.p2align 0x4
.long 0x48DF
L_334794:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_334791:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x1,0x58(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_334792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x48CB
L_334704:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334705
L_334730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_334731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334731
.p2align 0x4
.long 0x48D3
L_334731:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_334705:
	movq 0x188(%rbp),%r14
	cmpq $0x1,%r14
	je L_334708
L_334706:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x188(%rbp)
	jmp L_334703
.p2align 0x4
.long 0x847
L_334723:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48CD
L_334713:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334714
L_334728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_334729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334729
.p2align 0x4
.long 0x48D2
L_334729:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_334714:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x178(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x188(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x180(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_334715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x48D9
L_334780:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x180(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334781
L_334797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_334798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334798
.p2align 0x4
.long 0x48E1
L_334798:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_334781:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x180(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x190(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x188(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x188,%rbp
	leaq (L_334782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x847
L_334792:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48CE
L_334715:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x168(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x150(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x190,%rbp
	leaq (L_334716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x48DA
L_334782:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x170(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x158(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_334783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x48CF
L_334716:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x190(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334717
L_334726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_334727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334727
.p2align 0x4
.long 0x48D1
L_334727:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_334717:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x180(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_334718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x48DB
L_334783:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334784
L_334795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_334796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334796
.p2align 0x4
.long 0x48E0
L_334796:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_334784:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x188(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x168(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_334785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x48D0
L_334718:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x150(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_334644
.p2align 0x4
.long 0x48DC
L_334785:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334786
L_334787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_334788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334788
.p2align 0x4
.long 0x48DD
L_334788:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_334786:
	movq 0x158(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_334627
.text
.p2align 0x4
.globl completeLiveInfo_1
.hidden completeLiveInfo_1
completeLiveInfo_1:
L_334802:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_335101
L_334803:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515898
L_334804:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x703,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x28(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	cmpq $0x1,%r14
	je L_515891
L_334805:
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
L_334806:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1130,%r15
	je L_515890
	cmpq $0x1131,%r15
	je L_515889
	cmpq $0x1132,%r15
	je L_515888
	cmpq $0x1133,%r15
	je L_515887
L_334807:
	movq 0x18(%r14),%r15
	movq %r15,0x48(%rbp)
L_334808:
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_334809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515887:
L_335099:
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	jmp L_334808
.p2align 0x4
L_515888:
L_335098:
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	jmp L_334808
.p2align 0x4
L_515889:
L_335097:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	jmp L_334808
.p2align 0x4
L_515890:
L_335096:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	jmp L_334808
.p2align 0x4
L_515891:
L_335100:
	movq $0x1,%r15
L_334825:
	movq $0x19D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x10,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	cmpq $0x1,%r15
	je L_515892
L_334826:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl $0x0,0x38(%rbp)
L_334827:
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	movq $0x1,0x58(%rbp)
L_334828:
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_334829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515892:
L_334885:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_515897
L_334886:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_334887:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515896
.p2align 0x4,,0x7
L_334888:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_515893
L_334889:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_334887
.p2align 0x4
L_515893:
L_334891:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
loop_3623:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_515894
L_334892:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x30(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq %r11,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_334893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515894:
L_335044:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_515895
L_335045:
	movq 0x8(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x30(%rbp)
L_335046:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x3DF5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_335047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_515895:
L_335051:
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515896:
L_335055:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_335056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335056
.p2align 0x4
.long 0x63B
L_335056:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_334888
.p2align 0x4
L_515897:
L_335057:
	movq $0x1,%r15
	jmp L_334891
.p2align 0x4
L_515898:
L_335101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_335102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335102
.p2align 0x4
.long 0x45B
L_335102:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_334804
.p2align 0x4
.long 0x7EF
L_334809:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_334810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nearTargets_1
.p2align 0x4
.long 0x1F5D
L_334829:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_515900
L_334830:
	movq 0x0(%r13),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_334831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nearTargets_1
.p2align 0x4
L_515900:
L_335043:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x655
L_334893:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r13
	je L_335043
L_334894:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_334895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessTransfer_1
.p2align 0x4
.long 0x510
L_335047:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335048
L_335052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335053
.p2align 0x4
.long 0x5E7
L_335053:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_335048:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_335051
L_335049:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335046
.p2align 0x4
.long 0x48E2
L_334810:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334811
L_335094:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_335095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335095
.p2align 0x4
.long 0x2666
L_335095:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_334811:
	movq 0x60(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r14
	movl $0x0,0x0(%r14)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_515904
L_334812:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r15
L_334813:
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_334814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515904:
L_334818:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_515905
L_334819:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_334806
.p2align 0x4
L_515905:
L_334820:
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_334821:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515907
.p2align 0x4,,0x7
L_334822:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_334825
L_334823:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_334821
.p2align 0x4
L_515907:
L_335089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335090
.p2align 0x4
.long 0x657
L_335090:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_334822
.p2align 0x4
.long 0x1F5D
L_334831:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334832
L_335085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_335086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335086
.p2align 0x4
.long 0x48E6
L_335086:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_334832:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_515909
L_334833:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movl $0x0,0x3C(%rbp)
L_334834:
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_334835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515909:
L_335084:
	xorl %ecx,%ecx
L_334842:
	cmpl %ecx,0x38(%rbp)
	je L_515916
L_334843:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_515910
L_334844:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_334828
.p2align 0x4
L_515910:
L_334845:
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
L_334846:
	cmpq $0x1,%r15
	je L_515911
L_334847:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
L_334848:
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_334849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515911:
L_335075:
	movq $0x1,0x48(%rbp)
L_334859:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_515912
L_334860:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
L_334861:
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_334862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515912:
L_334867:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_515913
L_334868:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
L_334869:
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_334870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515913:
L_334881:
	movl 0x38(%rbp),%r13d
	incl %r13d
	jo L_515915
L_334882:
	movq 0x40(%rbp),%r11
	cmpq $0x1,%r11
	je L_334885
L_334883:
	movl %r13d,0x38(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	jmp L_334827
.p2align 0x4
L_515915:
L_334838:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515916:
L_335076:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_515917
L_335077:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_334828
.p2align 0x4
L_515917:
L_335078:
	movq 0x58(%rbp),%r14
	movq %r14,0x40(%rbp)
	jmp L_334846
.p2align 0x4
.long 0x7F1
L_334895:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_515921
L_334896:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x60(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_334897:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515920
.p2align 0x4,,0x7
L_334898:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_515919
L_334899:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_334897
.p2align 0x4
L_515919:
L_334900:
	movq 0x70(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq %r14,0x60(%rbp)
L_334901:
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x78,%rbp
	leaq (L_334902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp uses_defs_kills_0
.p2align 0x4
L_515920:
L_335039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_335040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335040
.p2align 0x4
.long 0x678
L_335040:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_334898
.p2align 0x4
L_515921:
L_335041:
	movq 0x68(%rbp),%r14
	xchgq %r14,%r15
L_334907:
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_334908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessEntry_1
.p2align 0x4
.long 0x1F57
L_334814:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334815
L_335091:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_335092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335092
.p2align 0x4
.long 0x80A
L_335092:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_334815:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_334818
L_334816:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_334813
.p2align 0x4
.long 0x48E3
L_334835:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334836
L_335082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_335083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335083
.p2align 0x4
.long 0x48E7
L_335083:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_334836:
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpl $0xFFFFFFFF,0x0(%r13)
	je L_515926
L_334837:
	movl 0x3C(%rbp),%r14d
	incl %r14d
	jo L_334838
L_334839:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_515924
L_334840:
	movl %r14d,0x3C(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x60(%rbp)
	jmp L_334834
.p2align 0x4
L_515924:
	movl %r14d,%ecx
	jmp L_334842
.p2align 0x4
L_515926:
L_335079:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_515927
L_335080:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_334834
.p2align 0x4
L_515927:
L_335081:
	movl 0x3C(%rbp),%ecx
	jmp L_334842
.p2align 0x4
.long 0x1F5D
L_334849:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334850
L_335073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_335074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335074
.p2align 0x4
.long 0x48E6
L_335074:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_334850:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_515933
L_334851:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_515929
L_334852:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_334848
.p2align 0x4
L_515929:
L_334853:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_515932
L_334854:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_334855:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515931
.p2align 0x4,,0x7
L_334856:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_515930
L_334857:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_334855
.p2align 0x4
L_515930:
L_334858:
	movq %r15,0x48(%rbp)
	jmp L_334859
.p2align 0x4
L_515931:
L_335067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_335068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335068
.p2align 0x4
.long 0x1F60
L_335068:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_334856
.p2align 0x4
L_515932:
L_335069:
	movq $0x1,0x48(%rbp)
	jmp L_334859
.p2align 0x4
L_515933:
L_335070:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_515934
L_335071:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_334848
.p2align 0x4
L_515934:
L_335072:
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_334855
.p2align 0x4
.long 0x1F5D
L_334862:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334863
L_335064:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_335065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335065
.p2align 0x4
.long 0x48E6
L_335065:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_334863:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movl 0x0(%r15),%r13d
	movl %r13d,%r11d
	incl %r13d
	jo L_334838
L_334864:
	movl %r13d,0x0(%r15)
	movl %r11d,0x0(%r14)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_334867
L_334865:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_334861
.p2align 0x4
.long 0x1F5E
L_334870:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334871
L_335061:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_335062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335062
.p2align 0x4
.long 0x1F5F
L_335062:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_334871:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_515939
L_334872:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_334873:
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_334874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp topo_sort_1
.p2align 0x4
L_515939:
L_334878:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_334881
L_334879:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_334869
.p2align 0x4
.long 0x65F
L_334902:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_334903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp liveness_uses_defs_1
.p2align 0x4
.long 0x1F56
L_334908:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_334909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
.long 0x1B7F
L_334874:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334875
L_335058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_335059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335059
.p2align 0x4
.long 0x1F5F
L_335059:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_334875:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_334878
L_334876:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_334873
.p2align 0x4
.long 0x65E
L_334903:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_334904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp liveness_1
.p2align 0x4
.long 0x1F5E
L_334909:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334910
L_335037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_335038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335038
.p2align 0x4
.long 0x80A
L_335038:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_334910:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_335008
L_334911:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
.p2align 0x4,,0x7
L_334912:
	movq 0x38(%rbp),%r10
	cmpq $0x1,%r10
	je L_515974
L_334913:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
.p2align 0x4,,0x7
L_334914:
	movq 0x10(%r14),%r10
	cmpq %r10,0x10(%r13)
	je L_515965
L_334915:
	cmpq $0x1,%r11
	je L_515944
L_334916:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	jmp L_334914
.p2align 0x4
L_515944:
L_334917:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334919
L_335002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_335003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335003
.p2align 0x4
.long 0x21CF
L_335003:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_334919:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r11),%r14
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_515963
L_334921:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_515962
L_334922:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x30(%rbp)
	movl $0x0,0x58(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_334924:
	movq 0x30(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_515961
L_334990:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD7E,%r11
	jne L_515960
L_334991:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_515956
L_334925:
	movl 0x58(%rbp),%r13d
	incl %r13d
	movl %r13d,0x30(%rbp)
	jo L_334838
L_334926:
	cmpq $0x1,%r15
	je L_515945
L_334927:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x58(%rbp)
	movq %r14,0x30(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_334924
.p2align 0x4
L_515945:
L_334928:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334929
L_334988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_334989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334989
.p2align 0x4
.long 0x11C9
L_334989:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_334929:
	movl 0x30(%rbp),%ecx
L_334930:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_515953
L_334932:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_334934
L_334987:
	movl %ecx,0x0(%r15)
L_334934:
	movq $0x1AFD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_334935:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je loop_3623
L_334936:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_334937:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_515951
L_334985:
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_334971:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515950
.p2align 0x4,,0x7
L_334972:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_515949
L_334973:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x40(%rbp)
L_334974:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515948
.p2align 0x4,,0x7
L_334975:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_515946
L_334976:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_334974
.p2align 0x4
L_515946:
L_334977:
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_334950:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515947
.p2align 0x4,,0x7
L_334951:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je loop_3623
L_334952:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_334937
.p2align 0x4
L_515947:
L_334954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_334955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334955
.p2align 0x4
.long 0x657
L_334955:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_334951
.p2align 0x4
L_515948:
L_334978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_334979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334979
.p2align 0x4
.long 0x80A
L_334979:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_334975
.p2align 0x4
L_515949:
L_334980:
	movq %r15,0x38(%rbp)
	jmp L_334950
.p2align 0x4
L_515950:
L_334981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_334982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334982
.p2align 0x4
.long 0x63B
L_334982:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_334972
.p2align 0x4
L_515951:
L_334938:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x50(%rbp)
L_334939:
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_334940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
L_515953:
L_334931:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515956:
L_334993:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334994
L_334999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_335000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335000
.p2align 0x4
.long 0x48E5
L_335000:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_334994:
	movl 0x58(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_334931
L_334995:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_515957
L_334996:
	movq 0x30(%rbp),%r15
L_334997:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_334935
.p2align 0x4
L_515957:
L_334998:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x58(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r15
	jmp L_334997
.p2align 0x4
L_515960:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_334925
.p2align 0x4
L_515961:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_334925
.p2align 0x4
L_515962:
L_335001:
	xorl %ecx,%ecx
	jmp L_334930
.p2align 0x4
L_515963:
L_334920:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515965:
L_335004:
	cmpq $0x1,%r15
	je L_515966
L_335005:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_334912
.p2align 0x4
L_515966:
L_335006:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335008
L_335030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_335031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335031
.p2align 0x4
.long 0x80A
L_335031:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_335008:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je loop_3623
L_335009:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
.p2align 0x4,,0x7
L_335010:
	movq 0x48(%rbp),%r10
	cmpq $0x1,%r10
	je L_515971
L_335011:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
.p2align 0x4,,0x7
L_335012:
	movq 0x10(%r13),%r10
	cmpq %r10,0x10(%r14)
	je L_515969
L_335013:
	cmpq $0x1,%r11
	je L_515967
L_335014:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	jmp L_335012
.p2align 0x4
L_515967:
L_335015:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334919
L_335017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_335018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335018
.p2align 0x4
.long 0x21CF
L_335018:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_334919
.p2align 0x4
L_515969:
L_335019:
	cmpq $0x1,%r15
	je L_515970
L_335020:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_335010
.p2align 0x4
L_515970:
L_335021:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb loop_3623
L_335023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_335024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335024
.p2align 0x4
.long 0x4DE
L_335024:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp loop_3623
.p2align 0x4
L_515971:
L_335025:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334919
L_335027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_335028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335028
.p2align 0x4
.long 0x21CF
L_335028:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_334919
.p2align 0x4
L_515974:
L_335032:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334919
L_335034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_335035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335035
.p2align 0x4
.long 0x21CF
L_335035:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_334919
.p2align 0x4
.long 0x7F1
L_334904:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0x78(%rbp),%r13
	movq %r13,0x70(%rbp)
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_515978
L_334905:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_334901
.p2align 0x4
L_515978:
L_334906:
	movq %r14,%r15
	jmp L_334907
.p2align 0x4
.long 0x7F1
L_334940:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_334941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
.long 0x48E4
L_334941:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_334942
L_334983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_334984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334984
.p2align 0x4
.long 0x7F4
L_334984:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_334942:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movl 0x68(%rbp),%r15d
	cmpl %r13d,%r15d
	jl L_515986
L_334943:
	cmpl %r15d,%r13d
	jl L_515982
L_334944:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_515981
L_334945:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
.p2align 0x4,,0x7
L_334946:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515980
.p2align 0x4,,0x7
L_334947:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_515979
L_334948:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_334946
.p2align 0x4
L_515979:
L_334949:
	movq %r15,0x38(%rbp)
	jmp L_334950
.p2align 0x4
L_515980:
L_334956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_334957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334957
.p2align 0x4
.long 0x80A
L_334957:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_334947
.p2align 0x4
L_515981:
L_334958:
	movq 0x58(%rbp),%r14
	movq %r14,0x38(%rbp)
	jmp L_334950
.p2align 0x4
L_515982:
L_334959:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_515985
L_334960:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
L_334961:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_515984
.p2align 0x4,,0x7
L_334962:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_515983
L_334963:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_334961
.p2align 0x4
L_515983:
L_334964:
	movq %r15,0x38(%rbp)
	jmp L_334950
.p2align 0x4
L_515984:
L_334965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_334966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_334966
.p2align 0x4
.long 0x80A
L_334966:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_334962
.p2align 0x4
L_515985:
L_334967:
	movq %r15,0x38(%rbp)
	jmp L_334950
.p2align 0x4
L_515986:
L_334968:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_515987
L_334969:
	movq %r14,0x50(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x48(%rbp)
	movq %r13,0x58(%rbp)
	movq 0x8(%r13),%r13
	movq %r13,0x40(%rbp)
	jmp L_334939
.p2align 0x4
L_515987:
L_334970:
	movq %r14,0x40(%rbp)
	jmp L_334971
.text
.p2align 0x4
.globl get_131
.hidden get_131
get_131:
L_335103:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_335133
L_335104:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516001
L_335105:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_516000
L_335107:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_515999
L_335108:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_335110:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_335111
L_335125:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD76,%r13
	jne L_335111
L_335126:
	movq 0x8(%r14),%r13
	movq 0x10(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_515994
L_335111:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_515993
L_335113:
	cmpq $0x1,%r15
	je L_515989
L_335114:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_335110
.p2align 0x4
L_515989:
L_335115:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335116
L_335123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_335124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335124
.p2align 0x4
.long 0x650
L_335124:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_335116:
	movl 0x28(%rbp),%ecx
L_335117:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_515991
L_335119:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_335121
L_335122:
	movl %ecx,0x0(%r15)
L_335121:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1339,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x133B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r15,0x8(%r9)
	movq %r13,0x10(%r9)
	addq $0x20,%r12
	movq $0x1AED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	movq %r9,0x0(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515991:
L_335118:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515993:
L_335112:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515994:
L_335128:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_335118
L_335129:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_515995
L_335131:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515995:
L_335130:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_515999:
L_335132:
	xorl %ecx,%ecx
	jmp L_335117
.p2align 0x4
L_516000:
L_335106:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516001:
L_335133:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_335134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335134
.p2align 0x4
.long 0x45F
L_335134:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_335105
.text
.p2align 0x4
.globl nearTargets_1
.hidden nearTargets_1
nearTargets_1:
L_335135:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_335164
L_335136:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516015
L_335137:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1134,%r14
	je L_516013
	cmpq $0x1137,%r14
	je L_516011
	cmpq $0x1139,%r14
	je L_516005
	cmpq $0x113A,%r14
	je L_516004
	cmpq $0x113B,%r14
	je L_516003
L_335138:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516003:
L_335163:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516004:
L_335162:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516005:
L_335146:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_516010
L_335147:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_335148:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516009
.p2align 0x4,,0x7
L_335149:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_516006
L_335150:
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_335148
.p2align 0x4
L_516006:
L_335151:
	movq %r14,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_335152:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516008
.p2align 0x4,,0x7
L_335153:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516007
L_335154:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_335152
.p2align 0x4
L_516007:
L_335156:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516008:
L_335157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_335158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335158
.p2align 0x4
.long 0x4E9
L_335158:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_335153
.p2align 0x4
L_516009:
L_335159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_335160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335160
.p2align 0x4
.long 0x4E9
L_335160:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_335149
.p2align 0x4
L_516010:
L_335161:
	movq $0x1,%r15
	jmp L_335156
.p2align 0x4
L_516011:
L_335142:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r15
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_516012
L_335143:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
L_335144:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516012:
L_335145:
	movq $0x1,%r14
	jmp L_335144
.p2align 0x4
L_516013:
L_335139:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	cmpq $0x1,%r14
	je L_335138
L_335140:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516015:
L_335164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_335165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335165
.p2align 0x4
.long 0x451
L_335165:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_335137
.text
.p2align 0x4
.globl topo_sort_1
.hidden topo_sort_1
topo_sort_1:
L_335166:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_335167
L_335183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_335184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335184
.p2align 0x4
.long 0x4AE
L_335184:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_335167:
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_335168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_131
.p2align 0x4
.long 0x65B
L_335168:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335169
L_335181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_335182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335182
.p2align 0x4
.long 0x63C
L_335182:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_335169:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_516020
L_335171:
	movq 0x10(%rbp),%r14
	movl 0x0(%r14),%r11d
	movl %r11d,%r10d
	incl %r11d
	jo L_516019
L_335173:
	movl %r11d,0x0(%r14)
	movl %r10d,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x0(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_516018
L_335174:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_335175:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_335176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp topo_sort_1
.p2align 0x4
L_516018:
L_335179:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516019:
L_335172:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516020:
L_335170:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A5
L_335176:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_335179
L_335177:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_335175
.text
.p2align 0x4
.globl livenessTransfer_1
.hidden livenessTransfer_1
livenessTransfer_1:
L_335185:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_335186
L_335307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_335308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335308
.p2align 0x4
.long 0x45B
L_335308:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_335186:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_335187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nearTargets_1
.p2align 0x4
.long 0x51E
L_335187:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335188
L_335305:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_335306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335306
.p2align 0x4
.long 0x4AE
L_335306:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_335188:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_516024
L_335189:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
L_335190:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_335191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getLive_1
.p2align 0x4
L_516024:
L_335304:
	movq $0x1,0x8(%rbp)
L_335208:
	movq 0x10(%rbp),%r13
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1134,%r15
	je L_516026
	cmpq $0x1139,%r15
	je L_516025
L_335209:
	movq $0x1,%r14
	movq $0x1,%r15
L_335210:
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_335211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp liveness_uses_defs_1
.p2align 0x4
L_516025:
L_335289:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_335210
.p2align 0x4
L_516026:
L_335258:
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq 0x30(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_335259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_1
.p2align 0x4
.long 0x4DD
L_335191:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335192
L_335302:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_335303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335303
.p2align 0x4
.long 0x4DE
L_335303:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_335192:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516037
L_335193:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_335194:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516036
.p2align 0x4,,0x7
L_335195:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_335202
L_335196:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335197:
	movq 0x30(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_516032
L_335198:
	cmpq $0x1,%r14
	je L_516028
L_335199:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335197
.p2align 0x4
L_516028:
L_335200:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516031
.p2align 0x4,,0x7
L_335202:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_516029
L_335203:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335194
.p2align 0x4
L_516029:
L_335205:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_516030
L_335206:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_335190
.p2align 0x4
L_516030:
L_335207:
	movq %r15,0x8(%rbp)
	jmp L_335208
.p2align 0x4
L_516031:
L_335290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335291
.p2align 0x4
.long 0x657
L_335291:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335202
.p2align 0x4
L_516032:
L_335292:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516034
.p2align 0x4,,0x7
L_335293:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516033
L_335294:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335194
.p2align 0x4
L_516033:
L_335295:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335205
.p2align 0x4
L_516034:
L_335296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335297
.p2align 0x4
.long 0x647
L_335297:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335293
.p2align 0x4
L_516036:
L_335299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335300
.p2align 0x4
.long 0x657
L_335300:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335195
.p2align 0x4
L_516037:
L_335301:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335205
.p2align 0x4
.long 0x456
L_335211:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1135,%r15
	je L_516058
	cmpq $0x1136,%r15
	je L_516056
	cmpq $0x1137,%r15
	je L_516054
	cmpq $0x1138,%r15
	je L_516039
L_335212:
	movq 0x8(%rbp),%r15
L_335213:
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp liveness_1
.p2align 0x4
L_516039:
L_335255:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_516053
L_335256:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_335217:
	movq 0x30(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x20(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_335246
L_335218:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_335219:
	movl 0x0(%r15),%r11d
	movl %r11d,0x40(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x44(%rbp)
	cmpl %r10d,%r11d
	jnl L_516042
L_335243:
	cmpq $0x1,%r13
	je L_516040
L_335244:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_335219
.p2align 0x4
L_516040:
L_335246:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516041
L_335247:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335217
.p2align 0x4
L_516041:
L_335248:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335213
.p2align 0x4
L_516042:
L_335220:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516051
.p2align 0x4,,0x7
L_335221:
	movl 0x40(%rbp),%r13d
	cmpl %r13d,0x44(%rbp)
	jl L_516049
L_335222:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_335229
L_335223:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335224:
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_516046
L_335225:
	cmpq $0x1,%r14
	je L_516043
L_335226:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335224
.p2align 0x4
L_516043:
L_335227:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516045
.p2align 0x4,,0x7
L_335229:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_335213
L_335230:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335217
.p2align 0x4
L_516045:
L_335232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335233
.p2align 0x4
.long 0x4B0
L_335233:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335229
.p2align 0x4
L_516046:
L_335234:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516047
L_335235:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335217
.p2align 0x4
L_516047:
L_335236:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335213
.p2align 0x4
L_516049:
L_335238:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516050
L_335239:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335217
.p2align 0x4
L_516050:
L_335240:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335213
.p2align 0x4
L_516051:
L_335241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_335242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335242
.p2align 0x4
.long 0x516
L_335242:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_335221
.p2align 0x4
L_516053:
L_335257:
	movq 0x8(%rbp),%r15
	jmp L_335213
.p2align 0x4
L_516054:
L_335252:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_516055
L_335253:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp L_335217
.p2align 0x4
L_516055:
L_335254:
	movq 0x8(%rbp),%r15
	jmp L_335213
.p2align 0x4
L_516056:
L_335251:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
L_335215:
	cmpq $0x1,%r15
	je L_516057
L_335216:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp L_335217
.p2align 0x4
L_516057:
L_335250:
	movq 0x8(%rbp),%r15
	jmp L_335213
.p2align 0x4
L_516058:
L_335214:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_335215
.p2align 0x4
.long 0x4DD
L_335259:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_516068
L_335260:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_335261:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516067
.p2align 0x4,,0x7
L_335262:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_516059
L_335263:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335261
.p2align 0x4
L_516059:
L_335264:
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_335265:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516066
.p2align 0x4,,0x7
L_335266:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_516060
L_335267:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335265
.p2align 0x4
L_516060:
L_335268:
	movq %r15,0x28(%rbp)
L_335269:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_516065
L_335270:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_335271:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516064
.p2align 0x4,,0x7
L_335272:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_516061
L_335273:
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335271
.p2align 0x4
L_516061:
L_335274:
	movq %r14,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_335275:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516063
.p2align 0x4,,0x7
L_335276:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516062
L_335277:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335275
.p2align 0x4
L_516062:
L_335278:
	movq 0x28(%rbp),%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
	jmp L_335210
.p2align 0x4
L_516063:
L_335279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335280
.p2align 0x4
.long 0x657
L_335280:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335276
.p2align 0x4
L_516064:
L_335281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335282
.p2align 0x4
.long 0x657
L_335282:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335272
.p2align 0x4
L_516065:
L_335283:
	movq $0x1,%r14
	movq 0x28(%rbp),%r13
	xchgq %r13,%r15
	jmp L_335210
.p2align 0x4
L_516066:
L_335284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335285
.p2align 0x4
.long 0x657
L_335285:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335266
.p2align 0x4
L_516067:
L_335286:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335287
.p2align 0x4
.long 0x657
L_335287:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335262
.p2align 0x4
L_516068:
L_335288:
	movq $0x1,0x28(%rbp)
	jmp L_335269
.text
.p2align 0x4
.globl liveness_uses_defs_1
.hidden liveness_uses_defs_1
liveness_uses_defs_1:
L_335309:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_335310
L_335490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_335491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335491
.p2align 0x4
.long 0x45B
L_335491:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_335310:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_516140
L_335311:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_335312:
L_335313:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_335314
L_335455:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E8,%r14
	jne L_516137
L_335456:
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x18(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_335485
L_335457:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_335458:
	movl 0x0(%r15),%r11d
	movl %r11d,0x38(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x3C(%rbp)
	cmpl %r10d,%r11d
	jnl L_516126
L_335482:
	cmpq $0x1,%r13
	je L_516069
L_335483:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_335458
.p2align 0x4
L_516069:
L_335485:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516070
L_335486:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_335312
.p2align 0x4
L_516070:
L_335487:
	movq 0x28(%rbp),%r15
L_335317:
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_335324
L_335318:
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r13),%r11
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_335319:
L_335320:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_516124
L_335414:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10E8,%r13
	jne L_516122
L_335415:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,%r11
	je L_516121
L_335416:
	movq %r14,0x38(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_335417:
	movq 0x30(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x20(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_335449
L_335418:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_335419:
	movl 0x0(%r15),%r11d
	movl %r11d,0x40(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x44(%rbp)
	cmpl %r10d,%r11d
	jnl L_516110
L_335446:
	cmpq $0x1,%r13
	je L_516071
L_335447:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_335419
.p2align 0x4
L_516071:
L_335449:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516072
L_335450:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335417
.p2align 0x4
L_516072:
L_335451:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
L_335432:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_516073
L_335433:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	xchgq %r14,%r15
	jmp L_335319
.p2align 0x4
L_516073:
L_335324:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_516109
L_335325:
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r13),%r11
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_335326:
L_335327:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_516108
L_335373:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x10E8,%r13
	jne L_516106
L_335374:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,%r11
	je L_516105
L_335375:
	movq %r14,0x38(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_335376:
	movq 0x30(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x20(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_335408
L_335377:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_335378:
	movl 0x0(%r15),%r11d
	movl %r11d,0x40(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x44(%rbp)
	cmpl %r10d,%r11d
	jnl L_516094
L_335405:
	cmpq $0x1,%r13
	je L_516074
L_335406:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_335378
.p2align 0x4
L_516074:
L_335408:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516075
L_335409:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335376
.p2align 0x4
L_516075:
L_335410:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
L_335391:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_516076
L_335392:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	xchgq %r14,%r15
	jmp L_335326
.p2align 0x4
L_516076:
L_335393:
	movq %r15,0x10(%rbp)
L_335331:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_516093
L_335332:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_335333:
L_335334:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_335335
L_335338:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E8,%r14
	jne L_516090
L_335339:
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x18(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_335368
L_335340:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_335341:
	movl 0x0(%r15),%r11d
	movl %r11d,0x38(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x3C(%rbp)
	cmpl %r10d,%r11d
	jnl L_516079
L_335365:
	cmpq $0x1,%r13
	je L_516077
L_335366:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_335341
.p2align 0x4
L_516077:
L_335368:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516078
L_335369:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_335333
.p2align 0x4
L_516078:
L_335370:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516079:
L_335342:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516088
.p2align 0x4,,0x7
L_335343:
	movl 0x38(%rbp),%r13d
	cmpl %r13d,0x3C(%rbp)
	jl L_516086
L_335344:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_335351
L_335345:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335346:
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_516083
L_335347:
	cmpq $0x1,%r14
	je L_516080
L_335348:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335346
.p2align 0x4
L_516080:
L_335349:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516082
.p2align 0x4,,0x7
L_335351:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516081
L_335352:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_335333
.p2align 0x4
L_516081:
L_335353:
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516082:
L_335354:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_335355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335355
.p2align 0x4
.long 0x720
L_335355:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_335351
.p2align 0x4
L_516083:
L_335356:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516084
L_335357:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_335333
.p2align 0x4
L_516084:
L_335358:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516086:
L_335360:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516087
L_335361:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_335333
.p2align 0x4
L_516087:
L_335362:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516088:
L_335363:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335364
.p2align 0x4
.long 0x787
L_335364:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335343
.p2align 0x4
L_516090:
L_335335:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516091
L_335336:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_335333
.p2align 0x4
L_516091:
L_335337:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516093:
L_335372:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516094:
L_335379:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516103
.p2align 0x4,,0x7
L_335380:
	movl 0x40(%rbp),%r13d
	cmpl %r13d,0x44(%rbp)
	jl L_516101
L_335381:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_335388
L_335382:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335383:
	movq 0x30(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_516098
L_335384:
	cmpq $0x1,%r14
	je L_516095
L_335385:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335383
.p2align 0x4
L_516095:
L_335386:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516097
.p2align 0x4,,0x7
L_335388:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_335391
L_335389:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335376
.p2align 0x4
L_516097:
L_335394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335395
.p2align 0x4
.long 0x4EB
L_335395:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335388
.p2align 0x4
L_516098:
L_335396:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516099
L_335397:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335376
.p2align 0x4
L_516099:
L_335398:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335391
.p2align 0x4
L_516101:
L_335400:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516102
L_335401:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335376
.p2align 0x4
L_516102:
L_335402:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335391
.p2align 0x4
L_516103:
L_335403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_335404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335404
.p2align 0x4
.long 0x67D
L_335404:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_335380
.p2align 0x4
L_516105:
L_335412:
	movq %r14,%r15
	jmp L_335391
.p2align 0x4
L_516106:
	movq %r14,(localObjptr+0x8)(%rip)
L_335328:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_516107
L_335329:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_335326
.p2align 0x4
L_516107:
L_335330:
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_335331
.p2align 0x4
L_516108:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_335328
.p2align 0x4
L_516109:
L_335413:
	movq %r15,0x10(%rbp)
	jmp L_335331
.p2align 0x4
L_516110:
L_335420:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516119
.p2align 0x4,,0x7
L_335421:
	movl 0x40(%rbp),%r13d
	cmpl %r13d,0x44(%rbp)
	jl L_516117
L_335422:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_335429
L_335423:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335424:
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_516114
L_335425:
	cmpq $0x1,%r14
	je L_516111
L_335426:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335424
.p2align 0x4
L_516111:
L_335427:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516113
.p2align 0x4,,0x7
L_335429:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_335432
L_335430:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335417
.p2align 0x4
L_516113:
L_335435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335436
.p2align 0x4
.long 0x4EB
L_335436:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335429
.p2align 0x4
L_516114:
L_335437:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516115
L_335438:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335417
.p2align 0x4
L_516115:
L_335439:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335432
.p2align 0x4
L_516117:
L_335441:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_516118
L_335442:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_335417
.p2align 0x4
L_516118:
L_335443:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335432
.p2align 0x4
L_516119:
L_335444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_335445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335445
.p2align 0x4
.long 0x67D
L_335445:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_335421
.p2align 0x4
L_516121:
L_335453:
	movq %r14,%r15
	jmp L_335432
.p2align 0x4
L_516122:
	movq %r14,(localObjptr+0x8)(%rip)
L_335321:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_516123
L_335322:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_335319
.p2align 0x4
L_516123:
L_335323:
	movq (localObjptr+0x8)(%rip),%r15
	jmp L_335324
.p2align 0x4
L_516124:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_335321
.p2align 0x4
L_516126:
L_335459:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516135
.p2align 0x4,,0x7
L_335460:
	movl 0x38(%rbp),%r13d
	cmpl %r13d,0x3C(%rbp)
	jl L_516133
L_335461:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_335468
L_335462:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335463:
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_516130
L_335464:
	cmpq $0x1,%r14
	je L_516127
L_335465:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335463
.p2align 0x4
L_516127:
L_335466:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516129
.p2align 0x4,,0x7
L_335468:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_335317
L_335469:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_335312
.p2align 0x4
L_516129:
L_335471:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_335472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335472
.p2align 0x4
.long 0x646
L_335472:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_335468
.p2align 0x4
L_516130:
L_335473:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516131
L_335474:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_335312
.p2align 0x4
L_516131:
L_335475:
	movq 0x28(%rbp),%r15
	jmp L_335317
.p2align 0x4
L_516133:
L_335477:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516134
L_335478:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_335312
.p2align 0x4
L_516134:
L_335479:
	movq 0x28(%rbp),%r15
	jmp L_335317
.p2align 0x4
L_516135:
L_335480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335481
.p2align 0x4
.long 0x634
L_335481:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335460
.p2align 0x4
L_516137:
L_335314:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516138
L_335315:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_335312
.p2align 0x4
L_516138:
L_335316:
	movq 0x28(%rbp),%r15
	jmp L_335317
.p2align 0x4
L_516140:
L_335489:
	movq $0x1,%r15
	jmp L_335317
.text
.p2align 0x4
.globl liveness_1
.hidden liveness_1
liveness_1:
L_335492:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_335493
L_335581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_335582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335582
.p2align 0x4
.long 0x45B
L_335582:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_335493:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_516173
L_335494:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_335495:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516172
.p2align 0x4,,0x7
L_335496:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_335503
L_335497:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335498:
	movq 0x20(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_516169
L_335499:
	cmpq $0x1,%r14
	je L_516142
L_335500:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335498
.p2align 0x4
L_516142:
L_335501:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516168
.p2align 0x4,,0x7
L_335503:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_516143
L_335504:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_335495
.p2align 0x4
L_516143:
L_335505:
	movq %r15,0x18(%rbp)
L_335506:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_335519
L_335507:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_335508:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516166
.p2align 0x4,,0x7
L_335509:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_335516
L_335510:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335511:
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_516163
L_335512:
	cmpq $0x1,%r14
	je L_516144
L_335513:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335511
.p2align 0x4
L_516144:
L_335514:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516162
.p2align 0x4,,0x7
L_335516:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516145
L_335517:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_335508
.p2align 0x4
L_516145:
L_335518:
	movq %r15,0x18(%rbp)
L_335519:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_516161
L_335520:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_335521:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516160
.p2align 0x4,,0x7
L_335522:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_335529
L_335523:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335524:
	movq 0x28(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_516156
L_335525:
	cmpq $0x1,%r14
	je L_516146
L_335526:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335524
.p2align 0x4
L_516146:
L_335527:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516155
.p2align 0x4,,0x7
L_335529:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516147
L_335530:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_335521
.p2align 0x4
L_516147:
L_335531:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_335532:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516154
.p2align 0x4,,0x7
L_335533:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_335540
L_335534:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335535:
	movq 0x20(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_516151
L_335536:
	cmpq $0x1,%r14
	je L_516148
L_335537:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335535
.p2align 0x4
L_516148:
L_335538:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516150
.p2align 0x4,,0x7
L_335540:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516149
L_335541:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_335532
.p2align 0x4
L_516149:
L_335542:
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516150:
L_335543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_335544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335544
.p2align 0x4
.long 0x637
L_335544:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_335540
.p2align 0x4
L_516151:
L_335545:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_516152
L_335546:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_335532
.p2align 0x4
L_516152:
L_335547:
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516154:
L_335549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_335550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335550
.p2align 0x4
.long 0x637
L_335550:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_335533
.p2align 0x4
L_516155:
L_335551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_335552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335552
.p2align 0x4
.long 0x4F0
L_335552:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_335529
.p2align 0x4
L_516156:
L_335553:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_516157
L_335554:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_335521
.p2align 0x4
L_516157:
L_335555:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
L_335556:
	cmpq $0x1,%r15
	je L_516158
L_335557:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_335532
.p2align 0x4
L_516158:
L_335558:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516160:
L_335560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_335561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335561
.p2align 0x4
.long 0x4F0
L_335561:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_335522
.p2align 0x4
L_516161:
L_335562:
	movq 0x10(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335556
.p2align 0x4
L_516162:
L_335563:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_335564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335564
.p2align 0x4
.long 0x4F0
L_335564:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_335516
.p2align 0x4
L_516163:
L_335565:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_516164
L_335566:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_335508
.p2align 0x4
L_516164:
L_335567:
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%rbp)
	jmp L_335519
.p2align 0x4
L_516166:
L_335569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_335570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335570
.p2align 0x4
.long 0x4F0
L_335570:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_335509
.p2align 0x4
L_516168:
L_335572:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_335573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335573
.p2align 0x4
.long 0x4DE
L_335573:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_335503
.p2align 0x4
L_516169:
L_335574:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_516170
L_335575:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_335495
.p2align 0x4
L_516170:
L_335576:
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_335506
.p2align 0x4
L_516172:
L_335578:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_335579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335579
.p2align 0x4
.long 0x4DE
L_335579:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_335496
.p2align 0x4
L_516173:
L_335580:
	movq $0x1,0x18(%rbp)
	jmp L_335506
.text
.p2align 0x4
.globl livenessEntry_1
.hidden livenessEntry_1
livenessEntry_1:
L_335583:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_335584
L_335656:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_335657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335657
.p2align 0x4
.long 0x45B
L_335657:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_335584:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x112F,%r13
	jne L_516175
L_335630:
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq 0x30(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_335631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cReturnTemps_1
.p2align 0x4
L_516175:
L_335585:
	movq $0x1,%r14
	movq $0x1,%r13
	xchgq %r13,%r15
L_335586:
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_335587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp liveness_uses_defs_1
.p2align 0x4
.long 0x4DD
L_335631:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_516185
L_335632:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_335633:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516184
.p2align 0x4,,0x7
L_335634:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x222B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_516177
L_335635:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335633
.p2align 0x4
L_516177:
L_335636:
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_335637:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516183
.p2align 0x4,,0x7
L_335638:
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_516178
L_335639:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_335637
.p2align 0x4
L_516178:
L_335640:
	movq %r15,0x28(%rbp)
L_335641:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_516182
L_335643:
	decl %r13d
	jo L_516181
L_335645:
	movl %r13d,0x38(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
loop_3624:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516180
.p2align 0x4,,0x7
L_335646:
	movl 0x38(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_516179
L_335647:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq 0x8(%r14),%r11
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	jmp loop_3624
.p2align 0x4
L_516179:
L_335648:
	movq 0x28(%rbp),%r14
	movq 0x30(%rbp),%r13
	movq %r13,%r15
	jmp L_335586
.p2align 0x4
L_516180:
L_335649:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335650
.p2align 0x4
.long 0x634
L_335650:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335646
.p2align 0x4
L_516181:
L_335644:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516182:
L_335642:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516183:
L_335651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335652
.p2align 0x4
.long 0x657
L_335652:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335638
.p2align 0x4
L_516184:
L_335653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_335654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335654
.p2align 0x4
.long 0x657
L_335654:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_335634
.p2align 0x4
L_516185:
L_335655:
	movq $0x1,0x28(%rbp)
	jmp L_335641
.p2align 0x4
.long 0x456
L_335587:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1130,%r13
	je L_335589
	cmpq $0x1131,%r13
	je L_516201
	cmpq $0x1132,%r13
	je L_516186
L_335588:
L_335589:
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x10(%rbp)
	jmp liveness_1
.p2align 0x4
L_516186:
L_335627:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_335589
L_335628:
	movq 0x8(%r13),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
L_335593:
	movq 0x18(%rbp),%r11
	movq 0x18(%r11),%r10
	movq 0x28(%r10),%r14
	movq 0x20(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r15
	cmpq $0x1,%r15
	je L_335622
L_335594:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_335595:
	movl 0x0(%r15),%r11d
	movl %r11d,0x30(%rbp)
	movl 0x0(%r14),%r10d
	movl %r10d,0x34(%rbp)
	cmpl %r10d,%r11d
	jnl L_516189
L_335619:
	cmpq $0x1,%r13
	je L_516187
L_335620:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	jmp L_335595
.p2align 0x4
L_516187:
L_335622:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_516188
L_335623:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_335593
.p2align 0x4
L_516188:
L_335624:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335589
.p2align 0x4
L_516189:
L_335596:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516198
.p2align 0x4,,0x7
L_335597:
	movl 0x30(%rbp),%r13d
	cmpl %r13d,0x34(%rbp)
	jl L_516196
L_335598:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_335605
L_335599:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_335600:
	movq 0x18(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_516193
L_335601:
	cmpq $0x1,%r14
	je L_516190
L_335602:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_335600
.p2align 0x4
L_516190:
L_335603:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516192
.p2align 0x4,,0x7
L_335605:
	movq $0x21CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_335589
L_335606:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_335593
.p2align 0x4
L_516192:
L_335608:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_335609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335609
.p2align 0x4
.long 0x4DE
L_335609:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_335605
.p2align 0x4
L_516193:
L_335610:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_516194
L_335611:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_335593
.p2align 0x4
L_516194:
L_335612:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335589
.p2align 0x4
L_516196:
L_335614:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_516197
L_335615:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_335593
.p2align 0x4
L_516197:
L_335616:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_335589
.p2align 0x4
L_516198:
L_335617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_335618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335618
.p2align 0x4
.long 0x5F6
L_335618:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_335597
.p2align 0x4
L_516201:
L_335591:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq $0x1,%r13
	je L_335589
L_335592:
	movq 0x8(%r13),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
	jmp L_335593
.text
.p2align 0x4
.globl optimizer_1
.hidden optimizer_1
optimizer_1:
L_335658:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x130(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_335659
L_336004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_336005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336005
.p2align 0x4
.long 0x4942
L_336005:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335659:
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516204
L_335660:
	movq 0x118(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x140,%rbp
	leaq (L_335661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elimGoto_1
.p2align 0x4
L_516204:
L_335981:
	movq 0x108(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x48E8
L_335661:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movl 0x148(%rbp),%r15d
	movl %r15d,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335662
L_335979:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335980
.p2align 0x4
.long 0x4937
L_335980:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335662:
	movq 0xE0(%rbp),%r15
	movl 0xF8(%rbp),%r14d
	movl %r14d,0xE0(%rbp)
L_335663:
	movq 0x0(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_516207
L_335664:
	movq 0x8(%r14),%r15
	movq %r15,0x100(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x118(%rbp)
	movl $0x0,0xE4(%rbp)
	movq $0x1,0x120(%rbp)
L_335665:
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516206
L_335666:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xD0(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_335667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlockP_1
.p2align 0x4
L_516206:
L_335956:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x108(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516207:
L_335978:
	xorl %ecx,%ecx
	movq $0x1,%r15
L_335719:
	movq $0x18E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xF8(%rbp),%r15
	movq %r15,0x0(%r14)
	movl 0xE0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_516210
L_335720:
	movl %ecx,0x18(%rbp)
L_335721:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r15),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x0,%r13b
	je L_335726
	cmpb $0x1,%r13b
	je L_516208
L_335722:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq %r14,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp completeLiveInfo_1
.p2align 0x4
L_516208:
L_335726:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x50(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516210:
L_335747:
	movl $0x1,0x18(%rbp)
	jmp L_335721
.p2align 0x4
.long 0x4938
L_335982:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	leaq L_335994(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x118(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x150,%rbp
	leaq (L_335983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elimGoto_1
.p2align 0x4
.long 0x48E9
L_335667:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movl 0x140(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r14
	movq %r14,0x138(%rbp)
	movl 0xE4(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_516213
L_335668:
	movl %r15d,0xE4(%rbp)
	movq %r14,0x118(%rbp)
L_335669:
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516212
L_335670:
	movq 0xB0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x118(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x150(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x158(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x160(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x170(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_335671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessTransfer_1
.p2align 0x4
L_516212:
L_335924:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x108(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516213:
L_335955:
	movl $0x1,0xE4(%rbp)
	movq %r14,0x118(%rbp)
	jmp L_335669
.p2align 0x4
.long 0x48FD
L_335957:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	leaq L_335968(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xD0(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_335958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlockP_1
.p2align 0x4
.long 0x48EF
L_335723:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335724:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F0
L_335727:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x60(%rbp)
	leaq L_335736(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp completeLiveInfo_1
.p2align 0x4
.long 0x4939
L_335983:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0x100(%rbp)
	movl 0x158(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x150,%rbp
	leaq (L_335984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x2DC4
L_335994:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5AE0)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x48EA
L_335671:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x180(%rbp),%r15
	movq %r15,0x170(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335672
L_335922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_335923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335923
.p2align 0x4
.long 0x4927
L_335923:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_335672:
	movq $0x125B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x168(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x170(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x18EB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x178(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x148(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x150(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq %r14,0x190(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x188,%rbp
	leaq (L_335673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toLivenessStatements_0
.p2align 0x4
.long 0x48FD
L_335925:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xB0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x118(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x160(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x168(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x170(%rbp)
	leaq L_335941(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x180(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_335926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessTransfer_1
.p2align 0x4
.long 0x48FE
L_335958:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_335959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x2DC4
L_335968:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5AE8)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x48F1
L_335728:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x2DC4
L_335736:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5660)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x493A
L_335984:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0xF8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x150(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x160(%rbp)
	movq %r15,0x168(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x160,%rbp
	leaq (L_335985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4905
L_335995:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335996
L_335998:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335999
.p2align 0x4
.long 0x4907
L_335999:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335996:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x50EF
L_335673:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq %r15,0x188(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x188,%rbp
	leaq (L_335674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessEntry_1
.p2align 0x4
.long 0x4928
L_335926:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x180(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335927
L_335953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_335954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335954
.p2align 0x4
.long 0x4925
L_335954:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_335927:
	movq $0x125B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x178(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x180(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x18EB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x188(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x158(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x160(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq %r14,0x1A0(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_335928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toLivenessStatements_0
.p2align 0x4
.long 0x2DC4
L_335941:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5AF0)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x48FF
L_335959:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0xC8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x170(%rbp)
	movq %r15,0x178(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_335960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4905
L_335969:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335970
L_335972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335973
.p2align 0x4
.long 0x4907
L_335973:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335970:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x48F2
L_335729:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x140(%rbp)
	movq %r15,0x148(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x48F7
L_335737:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335738
L_335740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335741
.p2align 0x4
.long 0x48F9
L_335741:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335738:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x1,0x148(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x493B
L_335985:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335986
L_336002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_336003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336003
.p2align 0x4
.long 0x4941
L_336003:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_335986:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x148(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_335987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4906
L_335997:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48ED
L_335674:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335675
L_335920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_335921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335921
.p2align 0x4
.long 0x4924
L_335921:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_335675:
	movq $0x125B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x18ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x160(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x148(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
L_335676:
	movq $0x18EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x98(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_516220
L_335677:
	movq %r15,0x138(%rbp)
	movl $0x0,0x118(%rbp)
L_335678:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x11040)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq (globalObjptr+0x11528)(%rip),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_335679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_516220:
L_335897:
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516221
L_335898:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x140(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp moveHoist_1
.p2align 0x4
L_516221:
L_335900:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x108(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_335901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x50F0
L_335928:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq %r15,0x198(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_335929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp livenessEntry_1
.p2align 0x4
.long 0x4905
L_335942:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335943
L_335945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335946
.p2align 0x4
.long 0x4907
L_335946:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335943:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4900
L_335960:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335961
L_335976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_335977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335977
.p2align 0x4
.long 0x4909
L_335977:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_335961:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_335962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4906
L_335971:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F3
L_335730:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335731
L_335744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335745
.p2align 0x4
.long 0x48FB
L_335745:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335731:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x140(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_335732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x48F8
L_335739:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x493C
L_335987:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xF8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0xE0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x158,%rbp
	leaq (L_335988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x48EE
L_335679:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	movl 0xE4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_516227
L_335680:
	movl 0x118(%rbp),%r15d
	movl %r15d,0xE4(%rbp)
L_335681:
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516226
L_335682:
	movq 0x78(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_335683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlock_1
.p2align 0x4
L_516226:
L_335876:
	movq 0x108(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_335877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516227:
L_335896:
	movl $0x1,0xE4(%rbp)
	jmp L_335681
.p2align 0x4
.long 0x48E9
L_335899:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movl 0x140(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x138(%rbp)
	jmp L_335678
.p2align 0x4
.long 0x491D
L_335901:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	leaq L_335910(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x118(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x168,%rbp
	leaq (L_335902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp moveHoist_1
.p2align 0x4
.long 0x492B
L_335929:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x158(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335930
L_335951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_335952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335952
.p2align 0x4
.long 0x4934
L_335952:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_335930:
	movq $0x125B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x18ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x160(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x170(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x108(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x198,%rbp
	leaq (L_335931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x4906
L_335944:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4901
L_335962:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xC8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x168,%rbp
	leaq (L_335963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x48F4
L_335732:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x493D
L_335988:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335989
L_336000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_336001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336001
.p2align 0x4
.long 0x4940
L_336001:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_335989:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x140(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_335990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x48E9
L_335683:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movl 0x140(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x138(%rbp)
L_335684:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x11050)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq (globalObjptr+0x11528)(%rip),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_335685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x48EE
L_335877:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x140(%rbp)
	leaq L_335886(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x78(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_335878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlock_1
.p2align 0x4
.long 0x491E
L_335902:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movl 0x168(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_335903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x2DC4
L_335910:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5AF8)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x492C
L_335931:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0xA8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x158(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x198(%rbp)
	movq %r15,0x1A0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_335932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4902
L_335963:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335964
L_335974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_335975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335975
.p2align 0x4
.long 0x4908
L_335975:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_335964:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x158(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_335965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x48F5
L_335733:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335734
L_335742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335743
.p2align 0x4
.long 0x48FA
L_335743:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335734:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x140(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_335735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x493E
L_335990:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335991
L_335992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335993
.p2align 0x4
.long 0x493F
L_335993:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335991:
	movq 0xE0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x100(%rbp),%r15
	movl 0x118(%rbp),%r14d
	movl %r14d,0xE0(%rbp)
	jmp L_335663
.p2align 0x4
.long 0x48EE
L_335685:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	movl 0xE4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_516239
L_335686:
	movl 0x118(%rbp),%r15d
	movl %r15d,0xE4(%rbp)
L_335687:
	movq 0x60(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_516233
L_335688:
	movl $0x0,0x118(%rbp)
L_335689:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x11058)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq (globalObjptr+0x11528)(%rip),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_335690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_516233:
L_335843:
	movq 0x138(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_516238
L_335844:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_335845:
	incl %ecx
	jo L_516237
L_335846:
	cmpq $0x1,%r15
	je L_516234
L_335847:
	movq 0x8(%r15),%r15
	jmp L_335845
.p2align 0x4
L_516234:
L_335848:
L_335849:
	cmpl $0x3E8,%ecx
	jg L_516236
L_335850:
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516235
L_335851:
	movq 0xB8(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp copyPropagate_1
.p2align 0x4
L_516235:
L_335853:
	movq 0x108(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_335854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516236:
L_335873:
	movl $0x0,0x118(%rbp)
	jmp L_335689
.p2align 0x4
L_516237:
L_335807:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516238:
L_335874:
	xorl %ecx,%ecx
	jmp L_335849
.p2align 0x4
L_516239:
L_335875:
	movl $0x1,0xE4(%rbp)
	jmp L_335687
.p2align 0x4
.long 0x4917
L_335878:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0x138(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_335879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x2DC4
L_335886:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5B00)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x491F
L_335903:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x88(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x158(%rbp),%r14
	movq %r14,0x170(%rbp)
	movq %r15,0x178(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_335904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4905
L_335911:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335912
L_335914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335915
.p2align 0x4
.long 0x4907
L_335915:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335912:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x492D
L_335932:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335933
L_335949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_335950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335950
.p2align 0x4
.long 0x4933
L_335950:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_335933:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x198(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x198,%rbp
	leaq (L_335934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4903
L_335965:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0xC0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movl 0xE4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_516242
L_335966:
	movl 0x118(%rbp),%r15d
	movl %r15d,0xE4(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x118(%rbp)
	jmp L_335669
.p2align 0x4
L_516242:
L_335967:
	movl $0x1,0xE4(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x118(%rbp)
	jmp L_335669
.p2align 0x4
.long 0x48F6
L_335735:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_335724
.p2align 0x4
.long 0x48EE
L_335690:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	movl 0xE4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_516244
L_335691:
	movl 0x118(%rbp),%r15d
	movl %r15d,0xE4(%rbp)
L_335692:
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516243
L_335693:
	movq 0x40(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_335694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlock_1
.p2align 0x4
L_516243:
L_335822:
	movq 0x108(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_335823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516244:
L_335842:
	movl $0x1,0xE4(%rbp)
	jmp L_335692
.p2align 0x4
.long 0x48E9
L_335852:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movl 0x140(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x138(%rbp)
	jmp L_335689
.p2align 0x4
.long 0x48EE
L_335854:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x140(%rbp)
	leaq L_335863(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x150,%rbp
	leaq (L_335855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp copyPropagate_1
.p2align 0x4
.long 0x4918
L_335879:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x170(%rbp)
	movq %r15,0x178(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_335880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4905
L_335887:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335888
L_335890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335891
.p2align 0x4
.long 0x4907
L_335891:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335888:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4920
L_335904:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335905
L_335918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_335919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335919
.p2align 0x4
.long 0x4909
L_335919:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_335905:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_335906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4906
L_335913:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x492E
L_335934:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x198,%rbp
	leaq (L_335935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x48E9
L_335694:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movl 0x140(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x138(%rbp)
L_335695:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x11060)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq (globalObjptr+0x11528)(%rip),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_335696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x48EE
L_335823:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x140(%rbp)
	leaq L_335832(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_335824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlock_1
.p2align 0x4
.long 0x4917
L_335855:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0x138(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_335856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x2DC4
L_335863:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5B08)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4919
L_335880:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335881
L_335894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_335895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335895
.p2align 0x4
.long 0x491C
L_335895:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_335881:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_335882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4906
L_335889:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4921
L_335906:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x168,%rbp
	leaq (L_335907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x492F
L_335935:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335936
L_335947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_335948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335948
.p2align 0x4
.long 0x4932
L_335948:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_335936:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x198(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x198,%rbp
	leaq (L_335937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x48EE
L_335696:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335697
L_335820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_335821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335821
.p2align 0x4
.long 0x48FC
L_335821:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_335697:
	movl 0xE4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_516256
L_335698:
	movl 0x118(%rbp),%r15d
	movl %r15d,0xE4(%rbp)
L_335699:
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516255
L_335700:
	movq 0x138(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x140(%rbp)
	movq 0x18(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x148(%rbp)
	cmpq $0x1,%r14
	je L_516254
L_335701:
	movq 0x8(%r14),%r15
	movq %r15,0x138(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x150(%rbp)
	movq $0x1,0x158(%rbp)
.p2align 0x4,,0x7
L_335702:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516253
.p2align 0x4,,0x7
L_335703:
	movq 0x150(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x138(%rbp),%r13
	cmpq $0x1,%r13
	je L_516249
L_335704:
	movq %r15,0x158(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x138(%rbp)
	movq %r15,0x150(%rbp)
	jmp L_335702
.p2align 0x4
L_516249:
L_335705:
	movq %r14,0x150(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq $0x1,0x158(%rbp)
.p2align 0x4,,0x7
L_335706:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516252
.p2align 0x4,,0x7
L_335707:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x138(%rbp),%r14
	cmpq $0x1,%r14
	je L_516250
L_335708:
	movq %r15,0x158(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x138(%rbp)
	movq %r15,0x150(%rbp)
	jmp L_335706
.p2align 0x4
L_516250:
L_335710:
	movq 0x118(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x140(%rbp),%r13
	movq 0x148(%rbp),%r14
	movq %r15,%r11
	movq %r9,%r15
L_335711:
	movq $0x1165,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x118(%rbp)
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	movq %r13,0x10(%r10)
	movq %r14,0x18(%r10)
	addq $0x28,%r12
	movq 0x110(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516251
L_335712:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x59A0)(%rip),%r15
	movq %r15,0x140(%rbp)
	movq %r10,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_335713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlockP_1
.p2align 0x4
L_516251:
L_335751:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x108(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516252:
L_335776:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_335777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335777
.p2align 0x4
.long 0x490A
L_335777:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	jmp L_335707
.p2align 0x4
L_516253:
L_335778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_335779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335779
.p2align 0x4
.long 0x490A
L_335779:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	jmp L_335703
.p2align 0x4
L_516254:
L_335780:
	movq $0x1,%r15
	jmp L_335710
.p2align 0x4
L_516255:
L_335781:
	movq 0x108(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_335782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516256:
L_335819:
	movl $0x1,0xE4(%rbp)
	jmp L_335699
.p2align 0x4
.long 0x4917
L_335824:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0x138(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_335825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x2DC4
L_335832:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5B10)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4918
L_335856:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x170(%rbp)
	movq %r15,0x178(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_335857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4905
L_335864:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335865
L_335867:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335868
.p2align 0x4
.long 0x4907
L_335868:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335865:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x491A
L_335882:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x168,%rbp
	leaq (L_335883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4922
L_335907:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335908
L_335916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_335917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335917
.p2align 0x4
.long 0x4923
L_335917:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_335908:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x148(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_335909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4930
L_335937:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335938
L_335939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_335940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335940
.p2align 0x4
.long 0x4931
L_335940:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_335938:
	movq 0xA0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x118(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x118(%rbp)
	jmp L_335676
.p2align 0x4
.long 0x48E9
L_335713:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movl 0x140(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335714
L_335749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_335750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335750
.p2align 0x4
.long 0x48FC
L_335750:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_335714:
	movl 0xE4(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_516262
L_335715:
	movl 0x118(%rbp),%ecx
	movq 0x138(%rbp),%r15
L_335716:
	movq $0x25BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x120(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x100(%rbp),%r15
	cmpq $0x1,%r15
	je L_516261
L_335717:
	movl %ecx,0xE4(%rbp)
	movq %r14,0x120(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x100(%rbp)
	movq %r14,0x118(%rbp)
	jmp L_335665
.p2align 0x4
L_516261:
L_335718:
	xchgq %r14,%r15
	jmp L_335719
.p2align 0x4
L_516262:
L_335748:
	movl $0x1,%ecx
	movq 0x138(%rbp),%r15
	jmp L_335716
.p2align 0x4
.long 0x48FD
L_335752:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	leaq L_335766(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x59A0)(%rip),%r15
	movq %r15,0x150(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_335753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlockP_1
.p2align 0x4
.long 0x48EE
L_335782:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x138(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x150(%rbp)
	movq 0x18(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x158(%rbp)
	cmpq $0x1,%r14
	je L_516268
L_335783:
	movq 0x8(%r14),%r15
	movq %r15,0x138(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x160(%rbp)
	movq $0x1,0x168(%rbp)
.p2align 0x4,,0x7
L_335784:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516267
.p2align 0x4,,0x7
L_335785:
	movq 0x160(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x168(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x138(%rbp),%r13
	cmpq $0x1,%r13
	je L_516264
L_335786:
	movq %r15,0x168(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x138(%rbp)
	movq %r15,0x160(%rbp)
	jmp L_335784
.p2align 0x4
L_516264:
L_335787:
	movq %r14,0x160(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq $0x1,0x168(%rbp)
.p2align 0x4,,0x7
L_335788:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516266
.p2align 0x4,,0x7
L_335789:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x168(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x138(%rbp),%r14
	cmpq $0x1,%r14
	je L_516265
L_335790:
	movq %r15,0x168(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x138(%rbp)
	movq %r15,0x160(%rbp)
	jmp L_335788
.p2align 0x4
L_516265:
L_335791:
	movq %r15,0x138(%rbp)
L_335792:
	movq 0x148(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x160(%rbp)
	leaq L_335803(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x108(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_335793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516266:
L_335814:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_335815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335815
.p2align 0x4
.long 0x4916
L_335815:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	jmp L_335789
.p2align 0x4
L_516267:
L_335816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_335817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335817
.p2align 0x4
.long 0x4916
L_335817:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	jmp L_335785
.p2align 0x4
L_516268:
L_335818:
	movq $0x1,0x138(%rbp)
	jmp L_335792
.p2align 0x4
.long 0x4918
L_335825:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x170(%rbp)
	movq %r15,0x178(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_335826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4905
L_335833:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335834
L_335836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335837
.p2align 0x4
.long 0x4907
L_335837:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335834:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4919
L_335857:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335858
L_335871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_335872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335872
.p2align 0x4
.long 0x491C
L_335872:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_335858:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_335859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4906
L_335866:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4902
L_335883:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335884
L_335892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_335893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335893
.p2align 0x4
.long 0x491B
L_335893:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_335884:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x158(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_335885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x48EE
L_335909:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_335678
.p2align 0x4
.long 0x48FE
L_335753:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_335754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x2DC4
L_335766:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5B20)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x490B
L_335793:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x170(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x180(%rbp)
	movq %r15,0x188(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x180,%rbp
	leaq (L_335794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2DC4
L_335803:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5B18)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_335804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4919
L_335826:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335827
L_335840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_335841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335841
.p2align 0x4
.long 0x491C
L_335841:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_335827:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_335828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4906
L_335835:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x491A
L_335859:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x168,%rbp
	leaq (L_335860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4903
L_335885:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq %r15,0x118(%rbp)
	movl 0x138(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x138(%rbp)
	jmp L_335684
.p2align 0x4
.long 0x48FF
L_335754:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x160(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,0x170(%rbp)
	movq %r15,0x178(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_335755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4905
L_335767:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335768
L_335770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335771
.p2align 0x4
.long 0x4907
L_335771:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335768:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x490C
L_335794:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335795
L_335812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_335813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335813
.p2align 0x4
.long 0x4915
L_335813:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_335795:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x170(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x170(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_335796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4911
L_335804:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335805
L_335808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_335809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335809
.p2align 0x4
.long 0x4913
L_335809:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_335805:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movb $0x0,0x148(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_335806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x491A
L_335828:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x168,%rbp
	leaq (L_335829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4902
L_335860:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335861
L_335869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_335870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335870
.p2align 0x4
.long 0x491B
L_335870:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_335861:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x158(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_335862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4900
L_335755:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335756
L_335774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_335775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335775
.p2align 0x4
.long 0x4909
L_335775:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_335756:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_335757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4906
L_335769:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490D
L_335796:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x178,%rbp
	leaq (L_335797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4912
L_335806:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_335807
.p2align 0x4
.long 0x4902
L_335829:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335830
L_335838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_335839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335839
.p2align 0x4
.long 0x491B
L_335839:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_335830:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x158(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_335831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4903
L_335862:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq %r15,0x118(%rbp)
	movl 0x138(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x138(%rbp)
	jmp L_335689
.p2align 0x4
.long 0x4901
L_335757:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x168,%rbp
	leaq (L_335758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x490E
L_335797:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335798
L_335810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_335811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335811
.p2align 0x4
.long 0x4914
L_335811:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_335798:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x168(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x170(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_335799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4903
L_335831:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq %r15,0x118(%rbp)
	movl 0x138(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x138(%rbp)
	jmp L_335695
.p2align 0x4
.long 0x4902
L_335758:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335759
L_335772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_335773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335773
.p2align 0x4
.long 0x4908
L_335773:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_335759:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x158(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_335760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x490F
L_335799:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335800
L_335801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_335802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335802
.p2align 0x4
.long 0x4910
L_335802:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_335800:
	movq 0x20(%rbp),%r10
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq 0x118(%rbp),%r9
	movq %r9,0x0(%r10)
	movq 0x160(%rbp),%r15
	movq 0x138(%rbp),%r11
	movq 0x150(%rbp),%r13
	movq 0x158(%rbp),%r14
	jmp L_335711
.p2align 0x4
.long 0x4903
L_335760:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_335761
L_335764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_335765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_335765
.p2align 0x4
.long 0x4904
L_335765:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_335761:
	movq 0x10(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x138(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0xE4(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_516282
L_335762:
	movl 0x118(%rbp),%ecx
	movq 0x148(%rbp),%r15
	jmp L_335716
.p2align 0x4
L_516282:
L_335763:
	movl $0x1,%ecx
	movq 0x148(%rbp),%r15
	jmp L_335716
.text
.p2align 0x4
.globl elimGoto_1
.hidden elimGoto_1
elimGoto_1:
L_336006:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_336007
L_336114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_336115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336115
.p2align 0x4
.long 0x75C
L_336115:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_336007:
	movq 0x18(%rbp),%r15
	movq 0x68(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movl $0x0,0x18(%rbp)
loop_3625:
	movq 0x38(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516284
L_336008:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elimSimpleGoto_1
.p2align 0x4
L_516284:
L_336091:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x4943
L_336009:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336010
L_336089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336090
.p2align 0x4
.long 0x6E9
L_336090:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336010:
	movq 0x10(%rbp),%r15
	movl 0x1C(%rbp),%r14d
	movl %r14d,0x10(%rbp)
L_336011:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq $0x443D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1263,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x20,%r12
	movq (globalObjptr+0x5A08)(%rip),%r15
	movq %r15,0x0(%r11)
	movq (globalObjptr+0x59E8)(%rip),%r15
	movq %r15,0x10(%r11)
	movq $0x2283,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x4443,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r13,0x0(%r11)
	movq $0x1263,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq (globalObjptr+0x5A20)(%rip),%r11
	movq %r11,0x0(%r10)
	movq (globalObjptr+0x59D0)(%rip),%r11
	movq %r11,0x10(%r10)
	movq $0x2283,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x443B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x1263,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq (globalObjptr+0x5A28)(%rip),%r15
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x59B8)(%rip),%r15
	movq %r15,0x10(%r13)
	movq $0x2283,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	cmpq $0x1,%r14
	je L_516288
L_336012:
	movq 0x8(%r14),%r15
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB8(%rbp)
	movq $0x1,0xC0(%rbp)
.p2align 0x4,,0x7
L_336013:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516287
.p2align 0x4,,0x7
L_336014:
	movq $0x25BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_516286
L_336015:
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	jmp L_336013
.p2align 0x4
L_516286:
L_336016:
	movq 0xC0(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq 0xB8(%rbp),%r15
	movl $0x0,0x14(%rbp)
	movq $0x1,0xB8(%rbp)
L_336017:
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xA8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_336018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peepholeBlockP_1
.p2align 0x4
L_516287:
L_336086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_336087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336087
.p2align 0x4
.long 0x495A
L_336087:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_336014
.p2align 0x4
L_516288:
L_336088:
	xorl %ecx,%ecx
	movq $0x1,%r15
L_336023:
	movq $0x18E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,0x0(%r14)
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_336079
L_336024:
	testl %ecx,%ecx
	jnz L_516290
L_336025:
	movq 0x38(%rbp),%r13
	movb 0x0(%r13),%r15b
	testb %r15b,%r15b
	jz L_516289
L_336026:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elimComplexGoto_1
.p2align 0x4
L_516289:
L_336058:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_336059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_516290:
L_336079:
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl $0x1,0x18(%rbp)
	jmp loop_3625
.p2align 0x4
.long 0x6E3
L_336092:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	leaq L_336104(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_336093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elimSimpleGoto_1
.p2align 0x4
.long 0x4944
L_336018:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336019
L_336084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_336085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336085
.p2align 0x4
.long 0x495A
L_336085:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_336019:
	movq $0x25BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_516294
L_336020:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_516293
L_336021:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movl 0x1C(%rbp),%r14d
	movl %r14d,0x14(%rbp)
	jmp L_336017
.p2align 0x4
L_516293:
L_336022:
	movl 0x1C(%rbp),%ecx
	jmp L_336023
.p2align 0x4
L_516294:
L_336081:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_516295
L_336082:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movl $0x1,0x14(%rbp)
	jmp L_336017
.p2align 0x4
L_516295:
L_336083:
	movl $0x1,%ecx
	jmp L_336023
.p2align 0x4
.long 0x4945
L_336027:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x10(%rbp)
L_336028:
	movq 0x38(%rbp),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_516297
L_336029:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_336030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elimBlocks_1
.p2align 0x4
L_516297:
L_336036:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x4951
L_336059:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x10(%rbp)
	leaq L_336068(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xA8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elimComplexGoto_1
.p2align 0x4
.long 0x495B
L_336093:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_336094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x473
L_336104:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x59F0)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_336105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x651
L_336030:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x40(%rbp),%ecx
	movl %ecx,0x14(%rbp)
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_516299
L_336031:
L_336032:
	movl 0x10(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_516298
L_336033:
	movq %r15,0x0(%rbp)
	movl %ecx,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516298:
L_336034:
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516299:
L_336035:
	movq %r15,0x0(%rbp)
	movl $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4946
L_336037:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x38(%rbp)
	leaq L_336048(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elimBlocks_1
.p2align 0x4
.long 0x4952
L_336060:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x473
L_336068:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5A30)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_336069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x186F
L_336094:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,0xD0(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_336095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x494D
L_336105:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336106
L_336108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_336109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336109
.p2align 0x4
.long 0x494E
L_336109:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_336106:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movb $0x0,0x48(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_336107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4947
L_336038:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x473
L_336048:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5A38)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_336049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4953
L_336061:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x494D
L_336069:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336070
L_336072:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_336073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336073
.p2align 0x4
.long 0x494E
L_336073:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_336070:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movb $0x0,0x48(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_336071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x495C
L_336095:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336096
L_336112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_336113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336113
.p2align 0x4
.long 0x4961
L_336113:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_336096:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xC0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_336097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x69B
L_336107:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4948
L_336039:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x494D
L_336049:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336050
L_336052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_336053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336053
.p2align 0x4
.long 0x494E
L_336053:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_336050:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movb $0x0,0x48(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_336051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4954
L_336062:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336063
L_336076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336077
.p2align 0x4
.long 0x4959
L_336077:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336063:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_336064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x69B
L_336071:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x495D
L_336097:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC8,%rbp
	leaq (L_336098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4949
L_336040:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336041
L_336056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336057
.p2align 0x4
.long 0x4950
L_336057:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336041:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_336042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x69B
L_336051:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4955
L_336064:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x495E
L_336098:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336099
L_336110:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_336111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336111
.p2align 0x4
.long 0x4960
L_336111:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_336099:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_336100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x494A
L_336042:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4956
L_336065:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336066
L_336074:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336075
.p2align 0x4
.long 0x4958
L_336075:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336066:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_336067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x6E3
L_336100:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336101
L_336102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_336103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336103
.p2align 0x4
.long 0x495F
L_336103:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_336101:
	movq 0x60(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r15
	movl 0x1C(%rbp),%r14d
	movl %r14d,0x10(%rbp)
	jmp L_336011
.p2align 0x4
.long 0x494B
L_336043:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336044
L_336054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336055
.p2align 0x4
.long 0x494F
L_336055:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336044:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_336045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4957
L_336067:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	jmp L_336028
.p2align 0x4
.long 0x494C
L_336045:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x98(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_516310
L_336046:
	movq 0x48(%rbp),%r15
	movl 0x14(%rbp),%ecx
	jmp L_336032
.p2align 0x4
L_516310:
L_336047:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%rbp)
	movl $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl elimSimpleGoto_1
.hidden elimSimpleGoto_1
elimSimpleGoto_1:
L_336116:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_336395
L_336117:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516363
L_336118:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	cmpq $0x1,%r13
	je L_516362
L_336119:
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq $0x1,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_336120:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x10(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x18(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1133,%r15
	jne L_516360
L_336333:
	movq 0x0(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x113B,%r15
	jne L_516358
L_336337:
	movq 0x0(%r14),%r11
	movq %r11,0x50(%rbp)
	cmpq $0x1,%r13
	je L_516356
L_336338:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_336339:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x112E,%r13
	jne L_516326
L_336343:
	cmpq $0x1,%r14
	je L_516311
L_336344:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_336339
.p2align 0x4
L_516311:
L_336345:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336347
L_336388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_336389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336389
.p2align 0x4
.long 0x61D
L_336389:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_336347:
	movq 0x40(%rbp),%r11
	cmpq $0x1,%r11
	je L_336365
L_336348:
	movq 0x8(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r9
	movq %r9,0x60(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_516323
L_336350:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_516322
L_336351:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_336353:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_516321
L_336378:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCAE,%r11
	jne L_516320
L_336379:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_516317
L_336354:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_516316
L_336356:
	cmpq $0x1,%r15
	je L_516312
L_336357:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_336353
.p2align 0x4
L_516312:
L_336358:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336359
L_336376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_336377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336377
.p2align 0x4
.long 0x4968
L_336377:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_336359:
	movl 0x40(%rbp),%ecx
L_336360:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_516314
L_336362:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_336364
L_336375:
	movl %ecx,0x0(%r15)
L_336364:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x195D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_336365:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq %r14,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_336366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516314:
L_336361:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516316:
L_336355:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516317:
L_336381:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_336361
L_336382:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_516318
L_336385:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_336384:
	movl $0xFFFFFFFF,0x0(%r15)
	jmp L_336365
.p2align 0x4
L_516318:
L_336383:
	movq %r11,%r15
	jmp L_336384
.p2align 0x4
L_516320:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_336354
.p2align 0x4
L_516321:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_336354
.p2align 0x4
L_516322:
L_336386:
	xorl %ecx,%ecx
	jmp L_336360
.p2align 0x4
L_516323:
L_336349:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516326:
L_336340:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516327
L_336341:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_336120
.p2align 0x4
L_516327:
L_336342:
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%rbp)
	movq 0x38(%rbp),%r15
L_336124:
	cmpq $0x1,%r15
	je L_516355
L_336125:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_336126:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516354
.p2align 0x4,,0x7
L_336127:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516328
L_336128:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_336126
.p2align 0x4
L_516328:
L_336129:
	movq %r15,0x10(%rbp)
loop_3626:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516329
L_336130:
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r15
	movl $0x0,0x38(%rbp)
L_336131:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq %r14,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_336132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516329:
L_336329:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_336146:
	testl %ecx,%ecx
	jz L_516331
L_336298:
	cmpq $0x1,0x10(%rbp)
	jne L_516330
L_336300:
	xorl %ecx,%ecx
	jmp L_336146
.p2align 0x4
L_516330:
L_336299:
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r15
	movl $0x0,0x38(%rbp)
	jmp L_336131
.p2align 0x4
L_516331:
L_336147:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336148
L_336296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_336297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336297
.p2align 0x4
.long 0x45A
L_336297:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_336148:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_516352
L_336149:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movl $0x0,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x30(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_336150:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1139,%r15
	je L_516347
	cmpq $0x113A,%r15
	je L_516346
	cmpq $0x113B,%r15
	je L_516345
L_336151:
	movq %r14,0x50(%rbp)
.p2align 0x4,,0x7
L_336152:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516344
.p2align 0x4,,0x7
L_336153:
	movq $0x1165,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x25BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_516332
L_336154:
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	jmp L_336150
.p2align 0x4
L_516332:
L_336155:
	movl 0x10(%rbp),%r11d
	movl %r11d,0x8(%rbp)
	movq 0x20(%rbp),%r11
	movq %r11,0x10(%rbp)
	movq %r14,%r15
L_336156:
	cmpq $0x1,%r15
	je L_516339
L_336157:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_336158:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516338
.p2align 0x4,,0x7
L_336159:
	movq $0x25BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516333
L_336160:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_336158
.p2align 0x4
L_516333:
L_336161:
	movl 0x8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x30(%rbp)
L_336162:
	movq 0x10(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1130,%r15
	je L_516337
	cmpq $0x1131,%r15
	je L_516336
	cmpq $0x1132,%r15
	je L_516335
	cmpq $0x1133,%r15
	je L_516334
L_336163:
	movq 0x18(%r13),%r13
	movq %r13,%r15
L_336164:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq %r14,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_336165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516334:
L_336204:
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_336164
.p2align 0x4
L_516335:
L_336203:
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_336164
.p2align 0x4
L_516336:
L_336202:
	movq 0x8(%r13),%r13
	movq %r13,%r15
	jmp L_336164
.p2align 0x4
L_516337:
L_336201:
	movq 0x8(%r13),%r13
	movq %r13,%r15
	jmp L_336164
.p2align 0x4
L_516338:
L_336205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336206
.p2align 0x4
.long 0x1EE2
L_336206:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336159
.p2align 0x4
L_516339:
L_336207:
	movl 0x8(%rbp),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,%r15
L_336173:
	cmpq $0x1,%r15
	je L_516343
L_336174:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_336175:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516342
.p2align 0x4,,0x7
L_336176:
	movq $0x25BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_516340
L_336177:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_336175
.p2align 0x4
L_516340:
L_336178:
	movq %r15,0x38(%rbp)
L_336179:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_516341
L_336180:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x40(%rbp)
L_336181:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x3DB7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_336182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_516341:
L_336186:
	movq $0x18E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516342:
L_336190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336191
.p2align 0x4
.long 0x706
L_336191:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_336176
.p2align 0x4
L_516343:
L_336192:
	movq $0x1,0x38(%rbp)
	jmp L_336179
.p2align 0x4
L_516344:
L_336208:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_336209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336209
.p2align 0x4
.long 0x566
L_336209:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_336153
.p2align 0x4
L_516345:
L_336280:
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_336281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516346:
L_336254:
	movq 0x10(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movb 0x0(%r14),%r13b
	movb %r13b,0x14(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_336255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516347:
L_336210:
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_516348
L_336211:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r13
	movq 0x20(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
	movl 0x10(%rbp),%r14d
	movl %r14d,0x20(%rbp)
	movq %r15,0x10(%rbp)
	movq %r13,%r15
L_336212:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_336213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516348:
L_336253:
	movq $0x1,%r15
L_336223:
	cmpq $0x1,%r15
	je L_516351
L_336224:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_336225:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516350
.p2align 0x4,,0x7
L_336226:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_516349
L_336227:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_336225
.p2align 0x4
L_516349:
L_336228:
	movq %r15,0x60(%rbp)
L_336229:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq %r14,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_336230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516350:
L_336244:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_336245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336245
.p2align 0x4
.long 0x9FC
L_336245:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_336226
.p2align 0x4
L_516351:
L_336246:
	movq $0x1,0x60(%rbp)
	jmp L_336229
.p2align 0x4
L_516352:
L_336295:
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,%r14
	movl $0x0,0x8(%rbp)
	xchgq %r14,%r15
	jmp L_336156
.p2align 0x4
L_516354:
L_336330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336331
.p2align 0x4
.long 0x657
L_336331:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336127
.p2align 0x4
L_516355:
L_336332:
	movq $0x1,0x10(%rbp)
	jmp loop_3626
.p2align 0x4
L_516356:
L_336390:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336347
L_336392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_336393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336393
.p2align 0x4
.long 0x61D
L_336393:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_336347
.p2align 0x4
L_516358:
L_336334:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516359
L_336335:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_336120
.p2align 0x4
L_516359:
L_336336:
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%rbp)
	movq 0x38(%rbp),%r15
	jmp L_336124
.p2align 0x4
L_516360:
L_336121:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516361
L_336122:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_336120
.p2align 0x4
L_516361:
L_336123:
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%rbp)
	movq 0x38(%rbp),%r15
	jmp L_336124
.p2align 0x4
L_516362:
L_336394:
	movq $0x1,0x8(%rbp)
	movq $0x1,%r15
	jmp L_336124
.p2align 0x4
L_516363:
L_336395:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_336396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336396
.p2align 0x4
.long 0x45B
L_336396:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_336118
.p2align 0x4
.long 0x7F0
L_336366:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336367
L_336373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_336374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336374
.p2align 0x4
.long 0x809
L_336374:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_336367:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_516366
L_336368:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r15
L_336369:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_516365
L_336370:
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	jmp L_336120
.p2align 0x4
L_516365:
L_336371:
	movq %r15,0x8(%rbp)
	movq %r14,%r15
	jmp L_336124
.p2align 0x4
L_516366:
L_336372:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x50(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x1957,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r10)
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	jmp L_336369
.p2align 0x4
.long 0x1F56
L_336132:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336133
L_336327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336328
.p2align 0x4
.long 0x21CF
L_336328:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_336133:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_516370
L_336134:
x_1054:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_516368
L_336135:
	movq 0x10(%r14),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_336136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516368:
L_336323:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_516369
L_336324:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_336131
.p2align 0x4
L_516369:
L_336325:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x38(%rbp),%ecx
	jmp L_336146
.p2align 0x4
L_516370:
L_336326:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1957,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	xchgq %r14,%r15
	jmp x_1054
.p2align 0x4
.long 0x102A
L_336165:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336166
L_336199:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336200
.p2align 0x4
.long 0x3CCF
L_336200:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_336166:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_516374
L_336167:
x_1056:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_516372
L_336168:
	movq %r14,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_336169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516372:
L_336195:
	movq $0x25BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_336173
L_336196:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_336162
.p2align 0x4
L_516374:
L_336198:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1957,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	xchgq %r14,%r15
	jmp x_1056
.p2align 0x4
.long 0x4A9
L_336182:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336183
L_336187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336188
.p2align 0x4
.long 0x706
L_336188:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_336183:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_336186
L_336184:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_336181
.p2align 0x4
.long 0x549
L_336281:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336282
L_336293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_336294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336294
.p2align 0x4
.long 0x53D
L_336294:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_336282:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_516379
L_336283:
x_1061:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	cmpq $0x1,%r14
	je L_516378
L_336284:
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_336285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516378:
L_336291:
	movl 0x10(%rbp),%ecx
	movq 0x50(%rbp),%r15
L_336288:
	movl %ecx,0x10(%rbp)
	movq $0x2277,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	jmp L_336152
.p2align 0x4
L_516379:
L_336292:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1957,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	xchgq %r14,%r15
	jmp x_1061
.p2align 0x4
.long 0x9F9
L_336255:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336256
L_336278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_336279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336279
.p2align 0x4
.long 0x9FE
L_336279:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_336256:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_516382
L_336257:
x_1059:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	cmpq $0x1,%r14
	je L_516381
L_336258:
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_336259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516381:
L_336261:
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_336262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516382:
L_336277:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1957,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	xchgq %r14,%r15
	jmp x_1059
.p2align 0x4
.long 0x4962
L_336213:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336214
L_336251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_336252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336252
.p2align 0x4
.long 0x4965
L_336252:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_336214:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_516386
L_336215:
x_1057:
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	cmpq $0x1,%r14
	je L_516384
L_336216:
	movq 0x70(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_336217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516384:
L_336249:
	movl 0x20(%rbp),%ecx
	movq 0x70(%rbp),%r15
L_336220:
	movq $0xBB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516385
L_336221:
	movl %ecx,0x20(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_336212
.p2align 0x4
L_516385:
L_336222:
	movl %ecx,0x10(%rbp)
	movq 0x60(%rbp),%r13
	movq %r13,0x20(%rbp)
	jmp L_336223
.p2align 0x4
L_516386:
L_336250:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x60(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x60(%rbp)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1957,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	xchgq %r14,%r15
	jmp x_1057
.p2align 0x4
.long 0x9FB
L_336230:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336231
L_336242:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_336243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336243
.p2align 0x4
.long 0x9FC
L_336243:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_336231:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_516389
L_336232:
x_1058:
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	cmpq $0x1,%r14
	je L_516388
L_336233:
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_336234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516388:
L_336240:
	movl 0x10(%rbp),%ecx
	movq 0x58(%rbp),%r15
L_336237:
	movl %ecx,0x10(%rbp)
	movq $0x2273,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x50(%rbp)
	jmp L_336152
.p2align 0x4
L_516389:
L_336241:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1957,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	xchgq %r14,%r15
	jmp x_1058
.p2align 0x4
.long 0x1F5E
L_336136:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336137
L_336321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_336322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336322
.p2align 0x4
.long 0x1F5F
L_336322:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_336137:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_516394
L_336138:
x_1055:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq $0x1,%r14
	je L_516392
L_336139:
	movq 0x40(%rbp),%r15
	cmpq %r15,0x10(%r14)
	je L_516391
L_336140:
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_336141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516391:
L_336306:
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_336307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
L_516392:
L_336317:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_516393
L_336318:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	jmp L_336131
.p2align 0x4
L_516393:
L_336319:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x38(%rbp),%ecx
	jmp L_336146
.p2align 0x4
L_516394:
L_336320:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1957,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	xchgq %r14,%r15
	jmp x_1055
.p2align 0x4
.long 0x57F
L_336169:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336170
L_336193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336194
.p2align 0x4
.long 0x5C3
L_336194:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_336170:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_516396
L_336171:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	movl $0x1,0x20(%rbp)
	jmp L_336162
.p2align 0x4
L_516396:
L_336172:
	movl $0x1,0x20(%rbp)
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_336173
.p2align 0x4
.long 0x4967
L_336285:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_336286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
.long 0x4966
L_336259:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_336260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
.long 0x9F9
L_336262:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336263
L_336274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_336275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336275
.p2align 0x4
.long 0x9FE
L_336275:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_336263:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_516399
L_336264:
x_1060:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	cmpq $0x1,%r14
	je L_516398
L_336265:
	movq 0x58(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_336266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516398:
L_336272:
	movl 0x10(%rbp),%ecx
	movq 0x58(%rbp),%r15
L_336269:
	movl %ecx,0x10(%rbp)
	movq $0x2275,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movzbl 0x14(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x50(%rbp)
	jmp L_336152
.p2align 0x4
L_516399:
L_336273:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r14,0x20(%rbp)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1957,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	xchgq %r14,%r15
	jmp x_1060
.p2align 0x4
.long 0x4963
L_336217:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_336218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
.long 0xF1E
L_336234:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_336235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
.long 0x1F5E
L_336141:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336142
L_336304:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336305
.p2align 0x4
.long 0x80A
L_336305:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_336142:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_516402
L_336143:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_516401
L_336144:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movl $0x1,0x38(%rbp)
	jmp L_336131
.p2align 0x4
L_516401:
L_336145:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl $0x1,%ecx
	jmp L_336146
.p2align 0x4
L_516402:
L_336301:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x48(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x1957,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r10)
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_516403
L_336302:
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movl $0x1,0x38(%rbp)
	jmp L_336131
.p2align 0x4
L_516403:
L_336303:
	movq %r15,0x8(%rbp)
	movl $0x1,%ecx
	jmp L_336146
.p2align 0x4
.long 0x1F56
L_336307:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336308
L_336315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336316
.p2align 0x4
.long 0x21CF
L_336316:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_336308:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_516406
L_336309:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_516405
L_336310:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_336131
.p2align 0x4
L_516405:
L_336311:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x38(%rbp),%ecx
	jmp L_336146
.p2align 0x4
L_516406:
L_336312:
	movq $0x28DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x1957,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r10)
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r13)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_516407
L_336313:
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	jmp L_336131
.p2align 0x4
L_516407:
L_336314:
	movq %r15,0x8(%rbp)
	movl 0x38(%rbp),%ecx
	jmp L_336146
.p2align 0x4
.long 0x4967
L_336286:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336287
L_336289:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_336290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336290
.p2align 0x4
.long 0x1DA9
L_336290:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_336287:
	movl $0x1,%ecx
	movq 0x58(%rbp),%r15
	jmp L_336288
.p2align 0x4
.long 0x4966
L_336260:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl $0x1,0x10(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_336261
.p2align 0x4
.long 0xFFA
L_336266:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_336267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
.long 0x4963
L_336218:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336219
L_336247:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_336248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336248
.p2align 0x4
.long 0x4964
L_336248:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_336219:
	movl $0x1,%ecx
	movq 0x80(%rbp),%r15
	jmp L_336220
.p2align 0x4
.long 0xF1E
L_336235:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336236
L_336238:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_336239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336239
.p2align 0x4
.long 0xFFC
L_336239:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_336236:
	movl $0x1,%ecx
	movq 0x68(%rbp),%r15
	jmp L_336237
.p2align 0x4
.long 0xFFA
L_336267:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336268
L_336270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_336271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336271
.p2align 0x4
.long 0x553
L_336271:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_336268:
	movl $0x1,%ecx
	movq 0x60(%rbp),%r15
	jmp L_336269
.text
.p2align 0x4
.globl decNear_1
.hidden decNear_1
decNear_1:
L_336397:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_336431
L_336398:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516427
L_336399:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_516426
L_336401:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_516425
L_336402:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_336404:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_336405
L_336423:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCBA,%r13
	jne L_336405
L_336424:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x8(%rbp)
	je L_516420
L_336405:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_336406
L_336407:
	cmpq $0x1,%r15
	je L_516413
L_336408:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_336404
.p2align 0x4
L_516413:
L_336409:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336410
L_336421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_336422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336422
.p2align 0x4
.long 0x49B
L_336422:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_336410:
	movl 0x18(%rbp),%ecx
L_336411:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_516417
L_336413:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_336415
L_336420:
	movl %ecx,0x0(%r15)
L_336415:
	movq $0x140D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalWord64+0x1078)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1975,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_336416:
	movq 0x0(%r15),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_516415
L_336418:
	shrq $0x1,%r14
	movl %r14d,%r13d
	decl %r13d
	jo L_516414
L_336419:
	movl %r13d,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516414:
L_336406:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516415:
L_336417:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516417:
L_336412:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516420:
L_336426:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_336412
L_336427:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_516421
L_336429:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_336416
.p2align 0x4
L_516421:
L_336428:
	movq %r13,%r15
	jmp L_336416
.p2align 0x4
L_516425:
L_336430:
	xorl %ecx,%ecx
	jmp L_336411
.p2align 0x4
L_516426:
L_336400:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516427:
L_336431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_336432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336432
.p2align 0x4
.long 0x45F
L_336432:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_336399
.text
.p2align 0x4
.globl peepholeBlockP_1
.hidden peepholeBlockP_1
peepholeBlockP_1:
L_336433:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_336434
L_338669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_338670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338670
.p2align 0x4
.long 0x45F
L_338670:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_336434:
	cmpq $0x1,0x0(%rbp)
	je L_517164
L_336435:
	movq 0x8(%rbp),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_336436:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x18(%r15),%r10
L_336437:
	movq 0x0(%rbp),%r15
	movq %r15,%r9
	andq $0x3,%r9
	jnz L_517163
L_336439:
	movq %r14,0x18(%rbp)
	movq %r11,0x28(%rbp)
	movq %r13,0x30(%rbp)
	movq %r10,0x38(%rbp)
	movl %ecx,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x20(%rbp)
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
L_336440:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movb 0x1(%r14),%r13b
	movb %r13b,0x4C(%rbp)
	movb 0x2(%r14),%r13b
	movb %r13b,0x4D(%rbp)
	movzbq 0x0(%r14),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_516429
	leaq jumpTable_845(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_845:
.quad L_517162,L_336465,L_517158,L_336465,L_336465,L_336465,L_336465,L_517151,L_336465,L_517145
.text
.p2align 0x4
L_516429:
L_336441:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x113A,%r14
	jne loop_3627
L_336462:
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_516437
.p2align 0x4,,0x7
loop_3627:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_516430
L_336442:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516430:
L_336444:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516436
.p2align 0x4,,0x7
L_336445:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_516432
L_336446:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
L_336447:
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_516431
L_336449:
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq %r13,0x40(%rbp)
	jmp L_336440
.p2align 0x4
L_516431:
L_336448:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_516432:
L_336450:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516435
L_336451:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x40(%rbp)
	movq %r13,0x30(%rbp)
.p2align 0x4,,0x7
L_336452:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516434
.p2align 0x4,,0x7
L_336453:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516433
L_336454:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_336452
.p2align 0x4
L_516433:
L_336455:
	movq 0x28(%rbp),%r13
	movq 0x38(%rbp),%r10
	movl 0x48(%rbp),%ecx
	movq 0x18(%rbp),%r9
	xchgq %r10,%r14
	movq %r15,%r11
	movq %r9,%r15
L_336456:
	movl %ecx,0x0(%rbp)
	movq $0x1165,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	movq %r13,0x10(%r10)
	movq %r14,0x18(%r10)
	movq %r10,0x8(%rbp)
	addq $0x28,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516434:
L_336457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336458
.p2align 0x4
.long 0xC4D
L_336458:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_336453
.p2align 0x4
L_516435:
L_336459:
	movq 0x18(%rbp),%r10
	movq 0x28(%rbp),%r13
	movq 0x38(%rbp),%r9
	movl 0x48(%rbp),%ecx
	xchgq %r9,%r14
	movq %r15,%r11
	movq %r10,%r15
	jmp L_336456
.p2align 0x4
L_516436:
L_336460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336461
.p2align 0x4
.long 0x4969
L_336461:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_336445
.p2align 0x4
L_516437:
.p2align 0x4,,0x7
L_336465:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517144
.p2align 0x4,,0x7
L_336466:
	cmpb $0x1,0x4C(%rbp)
	jne L_336468
L_338626:
	cmpq $0x1,0x20(%rbp)
	je L_516439
L_338627:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336444
L_338628:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516439:
L_336468:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_517142
L_336469:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	movq 0x30(%rbp),%r14
L_336470:
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movl 0x8(%r13),%ecx
L_336471:
	movq %r14,%r15
	andq $0x3,%r15
	jz L_516766
L_336472:
	movq %r14,0x70(%rbp)
	movq $0x1,0x68(%rbp)
	movq %r11,%r15
L_336473:
	cmpl $0x0,%ecx
	je L_516441
	cmpl $0x1,%ecx
	je L_516440
	jmp loop_3627
.p2align 0x4
L_516440:
L_337842:
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne loop_3627
L_337843:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl $0x1,%r14d
	jne loop_3627
L_337844:
	cmpq $0x1,0x70(%rbp)
	je loop_3627
L_337845:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_516441:
L_336474:
	movq %r15,%r14
	andq $0x1,%r14
	jz L_516765
L_337811:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je x_2212
	cmpl $0x1,%r14d
	je L_516757
L_337812:
	cmpq $0x1,0x70(%rbp)
	jne L_516756
L_337814:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_516755
L_337815:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x78(%rbp)
L_337816:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516754
.p2align 0x4,,0x7
L_337817:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_516442
L_337818:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_337816
.p2align 0x4
L_516442:
L_337819:
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
.p2align 0x4,,0x7
L_336482:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516753
.p2align 0x4,,0x7
L_336483:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_516443
L_336484:
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x50(%rbp)
	movq 0x68(%rbp),%r14
	jmp L_336470
.p2align 0x4
L_516443:
L_336485:
	movq 0x68(%rbp),%r14
	movq %r14,0x50(%rbp)
L_336486:
	cmpq $0x1,%r15
	je L_516752
L_336487:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
L_336488:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516751
.p2align 0x4,,0x7
L_336489:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_516444
L_336490:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_336488
.p2align 0x4
L_516444:
L_336491:
	movq %r15,0x58(%rbp)
L_336492:
	cmpb $0x1,0x4D(%rbp)
	jne L_336494
L_337798:
	cmpq $0x1,0x50(%rbp)
	je L_516446
L_337799:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336444
L_337800:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516446:
L_336494:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x8(%rbp)
	cmpq $0x1,%r14
	je L_516729
	cmpq $0x2,%r14
	je L_516709
	cmpq $0x3,%r14
	je L_516694
	cmpq $0x5,%r14
	je L_516673
	cmpq $0x6,%r14
	je L_516645
	cmpq $0x7,%r14
	je L_516624
L_336495:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x221E,%r15
	je L_516608
	cmpq $0x221F,%r15
	je L_516538
	cmpq $0x2220,%r15
	je L_516464
	cmpq $0x2221,%r15
	je L_516450
L_336496:
	movq 0x0(%r14),%r15
	cmpq $0x1,0x50(%rbp)
	jne L_336497
L_336498:
	cmpq $0x1,0x58(%rbp)
	jne L_336497
L_336499:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x113A,%r13
	jne L_516447
L_336500:
	movq %r15,0x50(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_336501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516447:
L_336497:
	movq (globalObjptr+0x5778)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516450:
L_337324:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,0x50(%rbp)
	jne L_337325
L_337326:
	cmpq $0x1,0x20(%rbp)
	jne L_337325
L_337328:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337325
L_337329:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x1,0x8(%r15)
	jne L_337325
L_337330:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1139,%r14
	jne L_337325
L_337331:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
L_337332:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337325
L_337333:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10EB,%r15
	jne L_516457
L_337334:
	movq 0x0(%r14),%r15
	movq 0x10(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x10E4,%r15
	jne L_516456
L_337338:
	movq 0x0(%r11),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	jne L_516455
.p2align 0x4,,0x7
L_337362:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516454
.p2align 0x4,,0x7
L_337363:
	movq $0x2277,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_336509:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516453
.p2align 0x4,,0x7
L_336510:
	movq $0x1165,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movl 0x0(%r11),%r14d
	incl %r14d
	jo L_336511
L_336512:
	movl %r14d,0x0(%r11)
	movl 0x0(%r13),%r14d
	incl %r14d
	jo L_516451
L_336513:
	movl %r14d,0x0(%r13)
	movl $0x1,%ecx
	jmp L_336436
.p2align 0x4
L_516451:
L_336511:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516453:
L_336514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_336515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336515
.p2align 0x4
.long 0x4DE
L_336515:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_336510
.p2align 0x4
L_516454:
L_337364:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337365
.p2align 0x4
.long 0xF85
L_337365:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337363
.p2align 0x4
L_516455:
L_337339:
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
L_337340:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_337341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516456:
L_337336:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516457:
L_337325:
	movq (globalObjptr+0x5800)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516464:
L_336740:
	movq 0x30(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	cmpq $0x1,0x50(%rbp)
	je L_516500
L_336742:
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_336743
L_336744:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_336745:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_336743
L_336746:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x112A,%r11
	jne L_336743
L_336747:
	movq 0x0(%r10),%r11
L_336748:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_336743
L_336749:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0x1111,%r10
	je L_516490
	cmpq $0x1113,%r10
	je L_516465
L_336743:
	movq (globalObjptr+0x57C0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516465:
L_336842:
	movq 0x10(%r11),%r10
	movb 0x1(%r11),%r9b
	movq 0x8(%r11),%r8
	movb 0x0(%r11),%spl
	cmpb $0x2,%spl
	je L_516484
	cmpb $0x3,%spl
	je L_516478
	cmpb $0x4,%spl
	je L_516472
	cmpb $0x5,%spl
	je L_516466
	jmp L_336743
.p2align 0x4
L_516466:
L_337095:
L_337096:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336743
L_337097:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336743
L_337098:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336743
L_337100:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336743
L_337101:
	movq 0x0(%r13),%r14
	cmpq $0x1,0x8(%r13)
	jne L_336743
L_337102:
	movq %r8,0x30(%rbp)
	movb %r9b,0x4C(%rbp)
	movq %r14,0x60(%rbp)
	movq %r11,%r14
x_1066:
	movq %r15,0x78(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_337103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getImmediateLog2_1
.p2align 0x4
L_516472:
L_337031:
L_337032:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336743
L_337033:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336743
L_337034:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336743
L_337036:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336743
L_337037:
	movq 0x0(%r13),%r14
	cmpq $0x1,0x8(%r13)
	jne L_336743
L_337038:
	movq %r8,0x30(%rbp)
	movb %r9b,0x4C(%rbp)
	movq %r14,0x60(%rbp)
	movq %r11,%r14
x_1065:
	movq %r15,0x78(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_337039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getImmediateLog2_1
.p2align 0x4
L_516478:
L_336907:
L_336908:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336743
L_336909:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336743
L_336910:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336743
L_336912:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336743
L_336913:
	movq 0x0(%r13),%r14
	cmpq $0x1,0x8(%r13)
	jne L_336743
L_336914:
	movq %r8,0x80(%rbp)
	movb %r9b,0x4C(%rbp)
	movq %r14,0x88(%rbp)
	movq %r11,%r14
x_1064:
	movq %r15,0xA0(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_336915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getImmediateLog2_1
.p2align 0x4
L_516484:
L_336843:
L_336844:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336743
L_336845:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336743
L_336846:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336743
L_336848:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336743
L_336849:
	movq 0x0(%r13),%r14
	cmpq $0x1,0x8(%r13)
	jne L_336743
L_336850:
	movq %r8,0x30(%rbp)
	movb %r9b,0x4C(%rbp)
	movq %r14,0x60(%rbp)
	movq %r11,%r14
x_1063:
	movq %r15,0x78(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_336851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getImmediateLog2_1
.p2align 0x4
L_516490:
L_336750:
	movq 0x10(%r11),%r10
	movb 0x0(%r11),%r9b
	movq 0x8(%r11),%r8
L_336751:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336743
L_336752:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336743
L_336753:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336743
L_336755:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336743
L_336756:
	movq 0x0(%r13),%r14
	cmpq $0x1,0x8(%r13)
	jne L_336743
L_336757:
	movq %r8,0x30(%rbp)
	movb %r9b,0x4C(%rbp)
	movq %r14,0x60(%rbp)
	movq %r11,%r14
x_1062:
	movq %r15,0x78(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_336758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getImmediateLog2_1
.p2align 0x4
L_516500:
L_337187:
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_336743
L_337188:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_337189:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_336743
L_337190:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x112A,%r11
	jne L_336743
L_337191:
	movq 0x0(%r10),%r11
L_337192:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_336743
L_337193:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0x1111,%r10
	je L_516527
	cmpq $0x1113,%r10
	je L_516501
	jmp L_336743
.p2align 0x4
L_516501:
L_337247:
	movq 0x10(%r11),%r10
	movb 0x1(%r11),%r9b
	movb %r9b,0x4C(%rbp)
	movq 0x8(%r11),%r9
	movq %r9,0x80(%rbp)
	movb 0x0(%r11),%r9b
	cmpb $0x2,%r9b
	je L_516521
	cmpb $0x3,%r9b
	je L_516515
	cmpb $0x4,%r9b
	je L_516509
	cmpb $0x5,%r9b
	je L_516502
	jmp L_336743
.p2align 0x4
L_516502:
L_337272:
L_337273:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336743
L_337274:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336743
L_337275:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336743
L_337277:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336743
L_337278:
	movq 0x0(%r13),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,0x8(%r13)
	jne L_336743
L_337279:
	movq 0x18(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x113A,%r10
	je L_516503
L_337280:
	movq %r14,0x60(%rbp)
	movq 0x80(%rbp),%r13
	movq %r13,0x30(%rbp)
	movq %r11,%r14
	jmp x_1066
.p2align 0x4
L_516503:
L_337281:
	movq %r15,0x98(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x4D(%rbp)
	movq 0x10(%r11),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_337282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getImmediateLog2_1
.p2align 0x4
L_516509:
L_337264:
L_337265:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336743
L_337266:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336743
L_337267:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336743
L_337269:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336743
L_337270:
	movq 0x0(%r13),%r14
	cmpq $0x1,0x8(%r13)
	jne L_336743
L_337271:
	movq %r14,0x60(%rbp)
	movq 0x80(%rbp),%r13
	movq %r13,0x30(%rbp)
	movq %r11,%r14
	jmp x_1065
.p2align 0x4
L_516515:
L_337256:
L_337257:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336743
L_337258:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336743
L_337259:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336743
L_337261:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336743
L_337262:
	movq 0x0(%r13),%r14
	cmpq $0x1,0x8(%r13)
	jne L_336743
L_337263:
	movq %r14,0x88(%rbp)
	movq %r11,%r14
	jmp x_1064
.p2align 0x4
L_516521:
L_337248:
L_337249:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336743
L_337250:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336743
L_337251:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336743
L_337253:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336743
L_337254:
	movq 0x0(%r13),%r14
	cmpq $0x1,0x8(%r13)
	jne L_336743
L_337255:
	movq %r14,0x60(%rbp)
	movq 0x80(%rbp),%r13
	movq %r13,0x30(%rbp)
	movq %r11,%r14
	jmp x_1063
.p2align 0x4
L_516527:
L_337194:
	movq 0x10(%r11),%r10
	movb 0x0(%r11),%r9b
	movb %r9b,0x30(%rbp)
	movq 0x8(%r11),%r8
	movq %r8,0x60(%rbp)
L_337195:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_336743
L_337196:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_336743
L_337197:
	movq 0x0(%r10),%r11
	cmpq $0x1,%r14
	jne L_336743
L_337199:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_336743
L_337200:
	movq 0x0(%r13),%r10
	movq %r10,0x68(%rbp)
	cmpq $0x1,0x8(%r13)
	jne L_336743
L_337201:
	movq 0x18(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x113A,%r14
	je L_516528
L_337202:
	movb %r9b,0x4C(%rbp)
	movq %r8,0x30(%rbp)
	movq %r10,0x60(%rbp)
	movq %r11,%r14
	jmp x_1062
.p2align 0x4
L_516528:
L_337203:
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x31(%rbp)
	movq 0x10(%r11),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_337204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getImmediateLog2_1
.p2align 0x4
L_516538:
L_336581:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x107,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
L_336582:
	movq 0x58(%rbp),%r9
	movq %r9,%r15
	andq $0x3,%r15
	jnz L_336583
L_336584:
	movq 0x8(%r9),%r15
	movq 0x0(%r9),%r14
L_336585:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_336583
L_336586:
	movq 0x8(%r14),%r9
	movq %r9,%r13
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r9
	movq %r9,%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_336583
L_336587:
	movq 0x0(%r11),%r14
L_336588:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_336583
L_336589:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x1114,%r11
	jne L_336583
L_336590:
	movq 0x10(%r14),%r11
	movb 0x1(%r14),%r9b
	movb %r9b,0x10(%rbp)
	movb 0x0(%r14),%r9b
	movb %r9b,0x11(%rbp)
	movq 0x8(%r14),%r9
	movq %r9,0x30(%rbp)
L_336591:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_336583
L_336592:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_336583
L_336593:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_336583
L_336594:
	cmpq $0x1,%r15
	jne L_516599
L_336595:
	movq 0x50(%rbp),%r9
	cmpq $0x1,%r9
	je L_516598
L_336596:
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	xorl %ebx,%ebx
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_336597:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x112A,%r10
	je L_516575
	cmpq $0x112E,%r10
	je L_516573
L_336598:
	cmpq $0x1,%r11
	je L_516539
L_336599:
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r11
	movl $0x1,%ecx
	movq %r10,%r13
	jmp L_336597
.p2align 0x4
L_516539:
L_336600:
	movl $0x1,%ecx
L_336601:
	testl %ecx,%ecx
	jz L_516571
L_336602:
	cmpl $0x1,%ebx
	je callback_145
L_336603:
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10E4,%r14
	jne L_336604
L_336605:
	movq 0x0(%r13),%r14
	cmpq $0x3,0x0(%r14)
	jne L_516546
L_336624:
	movb 0x11(%rbp),%r13b
	cmpb $0x4,%r13b
	je L_516545
	cmpb $0x6,%r13b
	je L_516540
L_336604:
	movq (globalObjptr+0x57B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516540:
L_336626:
	movb $0x3,0x11(%rbp)
.p2align 0x4,,0x7
L_336611:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516544
.p2align 0x4,,0x7
L_336612:
	movq $0x2221,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x11(%rbp),%r14d
	movzbl 0x10(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516543
L_336613:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
L_336614:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516542
.p2align 0x4,,0x7
L_336615:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516541
L_336616:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336614
.p2align 0x4
L_516541:
L_336617:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_516542:
L_336618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336619
.p2align 0x4
.long 0x657
L_336619:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336615
.p2align 0x4
L_516543:
L_336620:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_516544:
L_336621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_336622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336622
.p2align 0x4
.long 0x564
L_336622:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_336612
.p2align 0x4
L_516545:
L_336625:
	movb $0x2,0x11(%rbp)
	jmp L_336611
.p2align 0x4
L_516546:
L_336606:
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_336607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
callback_145:
.p2align 0x4,,0x7
callback_2:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516570
.p2align 0x4,,0x7
L_336628:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_336511
L_336629:
	movl %r15d,0x0(%r14)
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_516568
L_336630:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x30(%rbp)
L_336631:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516567
.p2align 0x4,,0x7
L_336632:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_516548
L_336633:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_336631
.p2align 0x4
L_516548:
L_336634:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_336635:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_516564
L_336636:
	cmpq $0x1,0x10(%rbp)
	jne L_516559
L_336676:
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_336646:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_516549
L_336647:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x10(%rbp)
	jmp L_336635
.p2align 0x4
L_516549:
L_336648:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516558
.p2align 0x4,,0x7
L_336649:
	movq 0x10(%rbp),%r15
L_336650:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_516556
L_336651:
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_516550
L_336652:
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq %r13,0x40(%rbp)
	jmp L_336440
.p2align 0x4
L_516550:
L_336653:
	cmpq $0x1,%r15
	je L_516552
L_336654:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
L_336655:
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_516551
L_336657:
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq %r13,0x40(%rbp)
	jmp L_336440
.p2align 0x4
L_516551:
L_336656:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_516552:
L_336658:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516555
L_336659:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_336660:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516554
.p2align 0x4,,0x7
L_336661:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516553
L_336662:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_336660
.p2align 0x4
L_516553:
L_336663:
	movq 0x28(%rbp),%r13
	movq 0x38(%rbp),%r10
	movl 0x48(%rbp),%ecx
	movq 0x18(%rbp),%r9
	xchgq %r10,%r14
	movq %r15,%r11
	movq %r9,%r15
	jmp L_336456
.p2align 0x4
L_516554:
L_336664:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336665
.p2align 0x4
.long 0xC4D
L_336665:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_336661
.p2align 0x4
L_516555:
L_336666:
	movq 0x28(%rbp),%r13
	movq 0x38(%rbp),%r10
	movl 0x48(%rbp),%ecx
	movq 0x18(%rbp),%r9
	xchgq %r10,%r14
	movq %r15,%r11
	movq %r9,%r15
	jmp L_336456
.p2align 0x4
L_516556:
L_336667:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_516557
L_336668:
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_336660
.p2align 0x4
L_516557:
L_336669:
	movq 0x28(%rbp),%r10
	movq 0x38(%rbp),%r9
	movl 0x48(%rbp),%ecx
	movq 0x18(%rbp),%r8
	xchgq %r9,%r14
	xchgq %r10,%r13
	movq %r15,%r11
	movq %r8,%r15
	jmp L_336456
.p2align 0x4
L_516558:
L_336670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336671
.p2align 0x4
.long 0x496F
L_336671:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_336649
.p2align 0x4
L_516559:
L_336637:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r13,0x50(%rbp)
	movq $0x1,0x58(%rbp)
L_336638:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516563
.p2align 0x4,,0x7
L_336639:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516560
L_336640:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_336638
.p2align 0x4
L_516560:
L_336641:
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x50(%rbp)
L_336642:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516562
.p2align 0x4,,0x7
L_336643:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516561
L_336644:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_336642
.p2align 0x4
L_516561:
L_336645:
	movq %r15,0x10(%rbp)
	jmp L_336646
.p2align 0x4
L_516562:
L_336672:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_336673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336673
.p2align 0x4
.long 0x136B
L_336673:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_336643
.p2align 0x4
L_516563:
L_336674:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_336675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336675
.p2align 0x4
.long 0x21C3
L_336675:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_336639
.p2align 0x4
L_516564:
L_336677:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_516565
L_336678:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
	jmp L_336635
.p2align 0x4
L_516565:
L_336679:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516566
.p2align 0x4,,0x7
L_336680:
	movq 0x10(%rbp),%r15
	jmp L_336650
.p2align 0x4
L_516566:
L_336681:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r13d
	movl %r13d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r13
	movq %r13,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336682
.p2align 0x4
.long 0x496F
L_336682:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_336680
.p2align 0x4
L_516567:
L_336683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_336684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336684
.p2align 0x4
.long 0x136B
L_336684:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_336632
.p2align 0x4
L_516568:
L_336685:
	movq 0x50(%rbp),%r14
	xchgq %r14,%r15
	jmp L_336650
.p2align 0x4
L_516570:
L_336686:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_336687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336687
.p2align 0x4
.long 0x4970
L_336687:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_336628
.p2align 0x4
L_516571:
L_336688:
	cmpl $0x1,%ebx
	je callback_2
L_336689:
	movq 0x18(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x113A,%r11
	jne L_336603
L_336690:
	movb 0x0(%r13),%r11b
	cmpb $0xA,%r11b
	je callback_2
	cmpb $0xB,%r11b
	je callback_2
	jmp L_336603
.p2align 0x4
L_516573:
L_336736:
	cmpq $0x1,%r11
	je L_336601
L_336737:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	jmp L_336597
.p2align 0x4
L_516575:
L_336694:
	movq 0x0(%r13),%r10
L_336695:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_516597
L_336699:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0x110C,%r13
	je L_516587
	cmpq $0x1114,%r13
	je L_516577
	movq %r14,(localObjptr+0x8)(%rip)
	movl %ebx,(localWord32+0x0)(%rip)
	movq %r15,(localObjptr+0x20)(%rip)
L_336696:
	cmpq $0x1,%r11
	je L_516576
L_336697:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ecx
	movq (localObjptr+0x20)(%rip),%r15
	movq (localObjptr+0x8)(%rip),%r14
	movl (localWord32+0x0)(%rip),%ebx
	jmp L_336597
.p2align 0x4
L_516576:
L_336698:
	movl $0x1,%ecx
	movq (localObjptr+0x20)(%rip),%r15
	movq (localObjptr+0x8)(%rip),%r14
	movl (localWord32+0x0)(%rip),%ebx
	jmp L_336601
.p2align 0x4
L_516577:
L_336718:
	movb 0x0(%r10),%r9b
	cmpb $0x3,%r9b
	je L_516583
	cmpb $0x5,%r9b
	je L_516579
L_336719:
	cmpq $0x1,%r11
	je L_516578
L_336720:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ecx
	jmp L_336597
.p2align 0x4
L_516578:
L_336721:
	movl $0x1,%ecx
	jmp L_336601
.p2align 0x4
L_516579:
L_336729:
	testl %ecx,%ecx
	jz L_516581
L_336733:
	cmpq $0x1,%r11
	je L_516580
L_336734:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ecx
	jmp L_336597
.p2align 0x4
L_516580:
L_336735:
	movl $0x1,%ecx
	jmp L_336601
.p2align 0x4
L_516581:
L_336730:
	cmpq $0x1,%r11
	je L_516582
L_336731:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ebx
	movl $0x1,%ecx
	jmp L_336597
.p2align 0x4
L_516582:
L_336732:
	movl $0x1,%ebx
	movl $0x1,%ecx
	jmp L_336601
.p2align 0x4
L_516583:
L_336722:
	testl %ecx,%ecx
	jz L_516585
L_336726:
	cmpq $0x1,%r11
	je L_516584
L_336727:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ecx
	jmp L_336597
.p2align 0x4
L_516584:
L_336728:
	movl $0x1,%ecx
	jmp L_336601
.p2align 0x4
L_516585:
L_336723:
	cmpq $0x1,%r11
	je L_516586
L_336724:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ebx
	movl $0x1,%ecx
	jmp L_336597
.p2align 0x4
L_516586:
L_336725:
	movl $0x1,%ebx
	movl $0x1,%ecx
	jmp L_336601
.p2align 0x4
L_516587:
L_336700:
	movb 0x0(%r10),%r9b
	cmpb $0xA,%r9b
	je L_516593
	cmpb $0xB,%r9b
	je L_516589
L_336701:
	cmpq $0x1,%r11
	je L_516588
L_336702:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ecx
	jmp L_336597
.p2align 0x4
L_516588:
L_336703:
	movl $0x1,%ecx
	jmp L_336601
.p2align 0x4
L_516589:
L_336711:
	testl %ecx,%ecx
	jz L_516591
L_336715:
	cmpq $0x1,%r11
	je L_516590
L_336716:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ecx
	jmp L_336597
.p2align 0x4
L_516590:
L_336717:
	movl $0x1,%ecx
	jmp L_336601
.p2align 0x4
L_516591:
L_336712:
	cmpq $0x1,%r11
	je L_516592
L_336713:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ebx
	movl $0x1,%ecx
	jmp L_336597
.p2align 0x4
L_516592:
L_336714:
	movl $0x1,%ebx
	movl $0x1,%ecx
	jmp L_336601
.p2align 0x4
L_516593:
L_336704:
	testl %ecx,%ecx
	jz L_516595
L_336708:
	cmpq $0x1,%r11
	je L_516594
L_336709:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ecx
	jmp L_336597
.p2align 0x4
L_516594:
L_336710:
	movl $0x1,%ecx
	jmp L_336601
.p2align 0x4
L_516595:
L_336705:
	cmpq $0x1,%r11
	je L_516596
L_336706:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x1,%ebx
	movl $0x1,%ecx
	jmp L_336597
.p2align 0x4
L_516596:
L_336707:
	movl $0x1,%ebx
	movl $0x1,%ecx
	jmp L_336601
.p2align 0x4
L_516597:
	movq %r15,(localObjptr+0x20)(%rip)
	movl %ebx,(localWord32+0x0)(%rip)
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_336696
.p2align 0x4
L_516598:
L_336739:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
	movq %r10,%r15
	jmp L_336601
.p2align 0x4
L_516599:
L_336583:
	movq (globalObjptr+0x57A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516608:
L_336521:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,0x50(%rbp)
	jne L_336522
L_336523:
	cmpq $0x1,0x20(%rbp)
	jne L_336522
L_336525:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_336522
L_336526:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x1,0x8(%r15)
	jne L_336522
L_336527:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1139,%r14
	jne L_516619
L_336528:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_516618
L_336529:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_336530:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516617
.p2align 0x4,,0x7
L_336531:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x48(%rbp),%r13
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	je L_516616
L_336532:
	movq $0x256B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_516609
L_336533:
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_336530
.p2align 0x4
L_516609:
L_336534:
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_336535:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516615
.p2align 0x4,,0x7
L_336536:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_516610
L_336537:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336535
.p2align 0x4
L_516610:
L_336538:
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_336539:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516614
.p2align 0x4,,0x7
L_336540:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_516613
L_336541:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	je L_516611
L_336542:
	movq $0x2273,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_516611:
L_336543:
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r13),%r15
	cmpq $0x1,%r14
	jne L_516612
L_336545:
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_336546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
L_516612:
L_336544:
	movq (globalObjptr+0x5788)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516613:
L_336567:
	movq $0x2277,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_516614:
L_336568:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336569
.p2align 0x4
.long 0x10B8
L_336569:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_336540
.p2align 0x4
L_516615:
L_336570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_336571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336571
.p2align 0x4
.long 0x61D
L_336571:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_336536
.p2align 0x4
L_516616:
L_336572:
	movq %r14,0x68(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_336573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_516617:
L_336578:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_336579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336579
.p2align 0x4
.long 0x809
L_336579:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_336531
.p2align 0x4
L_516618:
L_336580:
	movq $0x1,0x10(%rbp)
	jmp L_336539
.p2align 0x4
L_516619:
L_336522:
	movq (globalObjptr+0x5780)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516624:
L_337710:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337711
L_337712:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_337713:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337711
L_337714:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	movq %r13,%r10
	shrq $0x1,%r10
	cmpq $0x112A,%r10
	jne L_337711
L_337715:
	movq 0x0(%r15),%r13
L_337716:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337711
L_337717:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne L_337711
L_337718:
	movq 0x10(%r13),%r15
	movq %r15,0x10(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r11
	jne L_337711
L_337720:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337711
L_337721:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
L_337722:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337711
L_337723:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_337724:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337711
L_337725:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne L_337711
L_337726:
	movq 0x0(%r11),%r13
L_337727:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_337711
L_337728:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1111,%r11
	je L_516631
	cmpq $0x1113,%r11
	je L_516628
	cmpq $0x1114,%r11
	je L_516625
L_337711:
	movq (globalObjptr+0x57F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516625:
L_337775:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x1(%r13),%r11b
	movb 0x0(%r13),%r10b
	movb %r10b,0x31(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337711
L_337776:
	cmpq $0x1,%r14
	jne L_337711
L_337777:
	cmpb 0x30(%rbp),%r11b
	jne callback_2
L_337779:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516628:
L_337752:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x1(%r13),%r11b
	movb 0x0(%r13),%r10b
	movb %r10b,0x31(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337711
L_337753:
	cmpq $0x1,%r14
	jne L_337711
L_337754:
	cmpb 0x30(%rbp),%r11b
	jne callback_2
L_337756:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516631:
L_337729:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x0(%r13),%r11b
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337711
L_337730:
	cmpq $0x1,%r14
	jne L_337711
L_337731:
	cmpb %r11b,0x30(%rbp)
	jne callback_2
L_337733:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516645:
L_337654:
	cmpq $0x1,0x50(%rbp)
	jne L_337655
L_337657:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337655
L_337658:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_337659:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337655
L_337660:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne L_337655
L_337661:
	movq 0x0(%r15),%r13
L_337662:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337655
L_337663:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x110E,%r15
	jne L_337655
L_337664:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r10
	movb 0x0(%r13),%r9b
	cmpq $0x1,%r11
	jne L_337655
L_337666:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_337655
L_337667:
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r14)
	jne L_337655
L_337668:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x113A,%r11
	jne L_516663
L_337669:
	movq 0x10(%r14),%r11
	movq %r11,0x10(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x30(%rbp)
	movb 0x0(%r14),%r11b
	cmpb $0x8,%r11b
	je L_516660
	cmpb $0x9,%r11b
	je L_516646
L_337670:
	movq (globalObjptr+0x57E8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516646:
L_337704:
L_337705:
	movq %r10,%r14
	andq $0x3,%r14
	jnz L_516659
L_337707:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_516656
L_337708:
	movq 0x0(%r10),%r11
	movb $0x7,%cl
	movq %r13,%r14
	movq %r15,%r13
	movq %r10,%r15
	movb %r9b,%dl
L_337699:
L_337700:
	movq %r13,%r10
	andq $0x3,%r10
	jnz L_337701
L_337702:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x10EB,%r10
	jne L_516654
L_337679:
	cmpq $0x1,%r11
	je L_516653
L_337680:
	movq 0x10(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0x10E3,%r11
	je L_516652
	cmpq $0x10E4,%r11
	je L_516650
L_337681:
	movb %cl,0x18(%rbp)
L_337682:
	movq $0x221B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movzbl %dl,%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_516649
L_337683:
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x40(%rbp)
L_337684:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516648
.p2align 0x4,,0x7
L_337685:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_516647
L_337686:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_337684
.p2align 0x4
L_516647:
L_337688:
	movq $0x2275,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movzbl 0x18(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq %r15,0x18(%rbp)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_516648:
L_337689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_337690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337690
.p2align 0x4
.long 0x10B8
L_337690:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_337685
.p2align 0x4
L_516649:
L_337691:
	xchgq %r13,%r15
	jmp L_337688
.p2align 0x4
L_516650:
L_337693:
	movq 0x0(%r10),%r11
	cmpq $0x1,0x0(%r11)
	je L_516651
L_337694:
	movb %cl,0x18(%rbp)
	jmp L_337682
.p2align 0x4
L_516651:
L_337695:
	movb %cl,0x18(%rbp)
	movq %r13,%r15
	jmp L_337682
.p2align 0x4
L_516652:
L_337692:
	movb %cl,0x18(%rbp)
	jmp L_337682
.p2align 0x4
L_516653:
L_337696:
	movb %cl,0x18(%rbp)
	jmp L_337682
.p2align 0x4
L_516654:
L_337701:
	movb %cl,0x18(%rbp)
	movq %r13,%r15
	jmp L_337682
.p2align 0x4
L_516656:
	movq %r13,%r14
	movq %r15,%r13
	movq %r10,%r15
	movb %r9b,%dl
L_337706:
	movb $0x7,%cl
L_337674:
L_337675:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_337676
L_337677:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x10EB,%r11
	jne L_516657
L_337678:
	movq $0x1,%r11
	jmp L_337679
.p2align 0x4
L_516657:
L_337676:
	movq (globalObjptr+0x57F0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516659:
	movq %r13,%r14
	movq %r15,%r13
	movq %r10,%r15
	movb %r9b,%dl
	jmp L_337706
.p2align 0x4
L_516660:
L_337671:
L_337672:
	movq %r10,%r8
	andq $0x3,%r8
	jnz L_516662
L_337697:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r8
	shrq $0x1,%r8
	cmpq $0x10EB,%r8
	jne L_516661
L_337698:
	movq 0x0(%r10),%r8
	movb $0x6,%cl
	xchgq %r13,%r14
	xchgq %r15,%r13
	xchgq %r10,%r15
	movq %r8,%r11
	movb %r9b,%dl
	jmp L_337699
.p2align 0x4
L_516661:
	xchgq %r13,%r14
	xchgq %r15,%r13
	xchgq %r10,%r15
	movb %r9b,%dl
L_337673:
	movb $0x6,%cl
	jmp L_337674
.p2align 0x4
L_516662:
	xchgq %r13,%r14
	xchgq %r15,%r13
	xchgq %r10,%r15
	movb %r9b,%dl
	jmp L_337673
.p2align 0x4
L_516663:
L_337655:
	movq (globalObjptr+0x57E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516673:
L_337554:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337555
L_337556:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_337557:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337555
L_337558:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	movq %r13,%r10
	shrq $0x1,%r10
	cmpq $0x112A,%r10
	jne L_337555
L_337559:
	movq 0x0(%r15),%r13
L_337560:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337555
L_337561:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne L_337555
L_337562:
	movq 0x10(%r13),%r15
	movq %r15,0x10(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r11
	jne L_337555
L_337564:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337555
L_337565:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
L_337566:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337555
L_337567:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_337568:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337555
L_337569:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne L_337555
L_337570:
	movq 0x0(%r11),%r13
L_337571:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_337555
L_337572:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1111,%r11
	je L_516680
	cmpq $0x1113,%r11
	je L_516677
	cmpq $0x1114,%r11
	je L_516674
L_337555:
	movq (globalObjptr+0x57D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516674:
L_337627:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x1(%r13),%r11b
	movb %r11b,0x31(%rbp)
	movb 0x0(%r13),%r10b
	movb %r10b,0x32(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337555
L_337628:
	cmpq $0x1,%r14
	jne L_337555
L_337629:
	cmpb 0x30(%rbp),%r11b
	jne callback_2
L_337631:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516677:
L_337600:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x1(%r13),%r11b
	movb %r11b,0x31(%rbp)
	movb 0x0(%r13),%r10b
	movb %r10b,0x32(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337555
L_337601:
	cmpq $0x1,%r14
	jne L_337555
L_337602:
	cmpb 0x30(%rbp),%r11b
	jne callback_2
L_337604:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516680:
L_337573:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x0(%r13),%r11b
	movb %r11b,0x31(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337555
L_337574:
	cmpq $0x1,%r14
	jne L_337555
L_337575:
	cmpb 0x30(%rbp),%r11b
	jne callback_2
L_337577:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516694:
L_337515:
	movq 0x58(%rbp),%r13
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337516
L_337517:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
L_337518:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_337516
L_337519:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0x112A,%r10
	jne L_337516
L_337520:
	cmpq $0x1,%r13
	jne L_337516
L_337522:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337516
L_337523:
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	cmpq $0x1,0x8(%r15)
	jne L_516703
L_337524:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_337546
L_337525:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_337526:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	je L_516698
	cmpq $0x112E,%r13
	je L_516695
	jmp callback_2
.p2align 0x4
L_516695:
L_337549:
	cmpq $0x1,%r14
	je L_516696
L_337550:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_337526
.p2align 0x4
L_516696:
L_337546:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x113A,%r14
	je callback_2
L_337529:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337530
L_337540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_337541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337541
.p2align 0x4
.long 0x4998
L_337541:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_337530:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_516698:
L_337527:
	movq 0x0(%r15),%r13
L_337528:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337529
L_337542:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	je L_516699
	cmpq $0x110C,%r15
	je callback_2
	jmp L_337529
.p2align 0x4
L_516699:
L_337543:
	cmpq $0x1,%r14
	je L_337546
L_337544:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_337526
.p2align 0x4
L_516703:
L_337516:
	movq (globalObjptr+0x57B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516709:
L_337465:
	cmpq $0x1,0x50(%rbp)
	jne L_337466
L_337468:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337466
L_337469:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_337470:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337466
L_337471:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	movq %r13,%r10
	shrq $0x1,%r10
	cmpq $0x112A,%r10
	jne L_337466
L_337472:
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	cmpq $0x1,%r11
	jne L_337466
L_337474:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337466
L_337475:
	movq 0x8(%r14),%r15
	movq %r15,%r11
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
L_337476:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_337466
L_337477:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
L_337478:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_337466
L_337479:
	movq 0x8(%r14),%r11
	movq %r11,%r10
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337466
L_337480:
	movq 0x0(%r11),%r14
L_337481:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_337466
L_337482:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x110D,%r11
	jne L_337466
L_337483:
	movq 0x8(%r14),%r11
	cmpq $0x1,%r10
	jne L_337466
L_337485:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337466
L_337486:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	cmpq $0x1,0x8(%r15)
	jne L_337466
L_337487:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x113A,%r14
	jne L_516714
L_337488:
L_337489:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337490
L_337491:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x110F,%r15
	je L_516712
	cmpq $0x1110,%r15
	je L_516711
	cmpq $0x1114,%r15
	je L_516710
L_337490:
	movq (globalObjptr+0x57A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516710:
L_337513:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r14
	movq %r11,%r15
L_337493:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_337494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516711:
L_337512:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r14
	movq %r11,%r15
	jmp L_337493
.p2align 0x4
L_516712:
L_337492:
	movq 0x10(%rbp),%r13
	movq 0x10(%r13),%r14
	movq %r11,%r15
	jmp L_337493
.p2align 0x4
L_516714:
L_337466:
	movq (globalObjptr+0x5798)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516729:
L_337377:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337378
L_337379:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_337380:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337378
L_337381:
	movq 0x8(%r13),%r15
	movq %r15,%r11
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	movq %r13,%r10
	shrq $0x1,%r10
	cmpq $0x112A,%r10
	jne L_337378
L_337382:
	movq 0x0(%r15),%r13
L_337383:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337378
L_337384:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1101,%r15
	jne L_337378
L_337385:
	movq 0x10(%r13),%r15
	movq %r15,0x10(%rbp)
	movb 0x0(%r13),%r15b
	movb %r15b,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r11
	jne L_337378
L_337387:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337378
L_337388:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
L_337389:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337378
L_337390:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_337391:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_337378
L_337392:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne L_337378
L_337393:
	movq 0x0(%r11),%r13
L_337394:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_337378
L_337395:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x10F5,%r11
	je L_516736
	cmpq $0x10F6,%r11
	je L_516733
	cmpq $0x10F9,%r11
	je L_516730
L_337378:
	movq (globalObjptr+0x5790)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_516730:
L_337442:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x1(%r13),%r11b
	movb 0x0(%r13),%r10b
	movb %r10b,0x31(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337378
L_337443:
	cmpq $0x1,%r14
	jne L_337378
L_337444:
	cmpb %r11b,0x30(%rbp)
	jne callback_2
L_337446:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516733:
L_337419:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x0(%r13),%r11b
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337378
L_337420:
	cmpq $0x1,%r14
	jne L_337378
L_337421:
	cmpb %r11b,0x30(%rbp)
	jne callback_2
L_337423:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516736:
L_337396:
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movb 0x1(%r13),%r11b
	movb 0x0(%r13),%r10b
	movb %r10b,0x31(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r15
	jne L_337378
L_337397:
	cmpq $0x1,%r14
	jne L_337378
L_337398:
	cmpb %r11b,0x30(%rbp)
	jne callback_2
L_337400:
	movq %r10,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516751:
L_337803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_337804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337804
.p2align 0x4
.long 0x4978
L_337804:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_336489
.p2align 0x4
L_516752:
L_337805:
	movq $0x1,0x58(%rbp)
	jmp L_336492
.p2align 0x4
L_516753:
L_337806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_337807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337807
.p2align 0x4
.long 0x4978
L_337807:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_336483
.p2align 0x4
L_516754:
L_337820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337821
.p2align 0x4
.long 0xF73
L_337821:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_337817
.p2align 0x4
L_516755:
L_337822:
	movq $0x1,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp L_336482
.p2align 0x4
L_516756:
L_337813:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_516757:
L_337831:
	cmpq $0x1,0x70(%rbp)
	jne L_516761
L_337833:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_516760
L_337834:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x78(%rbp)
L_337835:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516759
.p2align 0x4,,0x7
L_337836:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_516758
L_337837:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_337835
.p2align 0x4
L_516758:
L_337838:
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp L_336482
.p2align 0x4
L_516759:
L_337839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337840
.p2align 0x4
.long 0xF73
L_337840:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_337836
.p2align 0x4
L_516760:
L_337841:
	movq $0x1,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp L_336482
.p2align 0x4
L_516761:
L_337832:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
x_2212:
x_1067:
	movq 0x68(%rbp),%r15
	movq 0x70(%rbp),%r14
	movq %r14,0x60(%rbp)
x_1068:
	cmpq $0x1,%r15
	je L_516764
L_337823:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
L_337824:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516763
.p2align 0x4,,0x7
L_337825:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_516762
L_337826:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_337824
.p2align 0x4
L_516762:
L_337827:
	movq 0x60(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_336482
.p2align 0x4
L_516763:
L_337828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337829
.p2align 0x4
.long 0xF73
L_337829:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_337825
.p2align 0x4
L_516764:
L_337830:
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x60(%rbp)
	jmp L_336482
.p2align 0x4
L_516765:
L_336475:
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_336476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_5
.p2align 0x4
L_516766:
L_337847:
	movl %ecx,0x78(%rbp)
	movq %r11,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x90(%rbp)
	movq $0x1,0x88(%rbp)
L_337848:
	movl 0x78(%rbp),%r15d
	cmpl $0x0,%r15d
	je L_516970
	cmpl $0x1,%r15d
	je L_516820
L_337849:
	movq 0x60(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_516767
	leaq jumpTable_846(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_846:
.quad L_337856,L_516815,L_516802,L_337850,L_516799,L_516797,L_516795,L_337850,L_516791,L_516789,L_516785,L_337850,L_516782,L_516781,L_337856
.text
.p2align 0x4
L_516767:
L_337850:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2223,%r14
	je L_516779
	cmpq $0x2224,%r14
	je L_516768
L_337851:
	movq 0x18(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_337852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionMULorDIV_srcImmediatePow2_1
.p2align 0x4
L_516768:
L_337874:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne loop_3627
L_337875:
	movq 0x0(%r14),%r13
L_337876:
	movq %r13,%r14
	andq $0x3,%r14
	jnz loop_3627
L_337877:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1114,%r14
	jne loop_3627
L_337878:
	movq 0x10(%r13),%r14
	movb 0x0(%r13),%r11b
L_337879:
	movq %r14,%r13
	andq $0x3,%r13
	jnz loop_3627
L_337880:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10EB,%r13
	jne loop_3627
L_337881:
	movq 0x0(%r14),%r13
	cmpb $0x4,%r11b
	je L_516778
	cmpb $0x6,%r11b
	je L_516769
	jmp loop_3627
.p2align 0x4
L_516769:
	movq %r13,%r14
L_337883:
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10E4,%r14
	jne loop_3627
L_337884:
	movq 0x0(%r13),%r14
	cmpq $0x3,0x0(%r14)
	jne L_516777
.p2align 0x4,,0x7
L_337856:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516776
.p2align 0x4,,0x7
L_337857:
	movl 0x78(%rbp),%ecx
	decl %ecx
	jo L_336511
L_337858:
	cmpl $0x0,%ecx
	jl L_516773
L_337859:
	movq 0x80(%rbp),%r15
	andq $0x1,%r15
	jnz L_516771
L_337860:
	xorq %r15,%r15
L_337861:
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x88(%rbp),%r13
	movq %r13,0x8(%r14)
L_337862:
	movq 0x68(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jz L_516770
L_337863:
	movq %r13,0x70(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_336473
.p2align 0x4
L_516770:
L_337864:
	movl %ecx,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x70(%rbp)
	movq %r13,0x90(%rbp)
	movq 0x8(%r13),%r13
	movq %r13,0x68(%rbp)
	jmp L_337848
.p2align 0x4
L_516771:
L_337865:
	movq 0x80(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %ecx,%ebx
	movl %r14d,%ecx
L_337866:
	decl %ecx
	jo L_336511
L_337867:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movl %ebx,%ecx
	jmp L_337861
.p2align 0x4
L_516773:
L_337868:
	movq 0x80(%rbp),%r15
	andq $0x1,%r15
	jnz L_516774
L_337869:
	xorq %r15,%r15
	xorl %ecx,%ecx
	jmp L_337861
.p2align 0x4
L_516774:
L_337870:
	movq 0x80(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
	xorl %ebx,%ebx
	jmp L_337866
.p2align 0x4
L_516776:
L_337871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_337872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337872
.p2align 0x4
.long 0x499A
L_337872:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_337857
.p2align 0x4
L_516777:
L_337885:
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_337886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_516778:
	movq %r13,%r14
	jmp L_337883
.p2align 0x4
L_516779:
L_337873:
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_337852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionBinALMD_operCommute_1
.p2align 0x4
L_516781:
L_337972:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337973:
	movq 0x0(%r15),%r14
L_337974:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337975:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	jne loop_3627
L_337976:
	movq 0x10(%r14),%r15
	movq %r15,0x98(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_337977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516782:
L_337966:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337967:
	movq 0x0(%r15),%r14
L_337968:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337969:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	je L_337856
	cmpq $0x110E,%r15
	je L_337856
	jmp loop_3627
.p2align 0x4
L_516785:
L_337959:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337960:
	movq 0x0(%r15),%r14
L_337961:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337962:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10F5,%r15
	je L_337856
	cmpq $0x10F6,%r15
	je L_337856
	cmpq $0x10F9,%r15
	je L_337856
	jmp loop_3627
.p2align 0x4
L_516789:
L_337957:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112E,%r14
	je L_337856
	jmp loop_3627
.p2align 0x4
L_516791:
L_337950:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337951:
	movq 0x0(%r15),%r14
L_337952:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337953:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1111,%r15
	je L_337856
	cmpq $0x1113,%r15
	je L_337856
	cmpq $0x1114,%r15
	je L_337856
	jmp loop_3627
.p2align 0x4
L_516795:
L_337945:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337946:
	movq 0x0(%r15),%r14
L_337947:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337948:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	je L_337856
	jmp loop_3627
.p2align 0x4
L_516797:
L_337940:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337941:
	movq 0x0(%r15),%r14
L_337942:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337943:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1101,%r15
	je L_337856
	jmp loop_3627
.p2align 0x4
L_516799:
L_337932:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337933:
	movq 0x0(%r15),%r14
L_337934:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337935:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne loop_3627
L_337936:
	movq 0x10(%r14),%r15
L_337937:
	movq %r15,%r14
	andq $0x3,%r14
	jnz loop_3627
L_337938:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	je L_337856
	jmp loop_3627
.p2align 0x4
L_516802:
L_337902:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337903:
	movq 0x0(%r15),%r14
L_337904:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337905:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110E,%r15
	jne loop_3627
L_337906:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
L_337907:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_337908
L_337921:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_516808
L_337922:
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E3,%r14
	je L_516806
	cmpq $0x10E4,%r14
	je L_516804
L_337923:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_336444
L_337924:
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x40(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516804:
L_337929:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x0(%r14)
	je L_337856
	jmp loop_3627
.p2align 0x4
L_516806:
L_337926:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336444
L_337927:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516808:
L_337908:
L_337909:
	movq %r15,%r14
	andq $0x3,%r14
	jnz loop_3627
L_337910:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne loop_3627
L_337911:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10E3,%r15
	je L_516812
	cmpq $0x10E4,%r15
	je L_516810
L_337912:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336444
L_337913:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516810:
L_337918:
	movq 0x0(%r13),%r15
	cmpq $0x1,0x0(%r15)
	je L_337856
	jmp loop_3627
.p2align 0x4
L_516812:
L_337915:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336444
L_337916:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516815:
L_337892:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_337893:
	movq 0x0(%r15),%r14
L_337894:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_337895:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110F,%r15
	je L_516818
	cmpq $0x1110,%r15
	je L_516817
	cmpq $0x1114,%r15
	je L_337856
	jmp loop_3627
.p2align 0x4
L_516817:
L_337899:
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz loop_3627
	jmp L_337856
.p2align 0x4
L_516818:
L_337896:
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je loop_3627
	cmpb $0x1,%r15b
	je loop_3627
	jmp L_337856
.p2align 0x4
L_516820:
L_338250:
	movq 0x80(%rbp),%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_516873
L_338251:
	movq 0x60(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_516821
	leaq jumpTable_847(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_847:
.quad L_338258,L_516868,L_516855,L_338252,L_516852,L_516850,L_516848,L_338252,L_516844,L_516842,L_516838,L_338252,L_516835,L_516834,L_338258
.text
.p2align 0x4
L_516821:
L_338252:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2223,%r14
	je L_516832
	cmpq $0x2224,%r14
	je L_516822
L_338253:
	movq 0x18(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_338254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionMULorDIV_srcImmediatePow2_1
.p2align 0x4
L_516822:
L_338274:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne loop_3627
L_338275:
	movq 0x0(%r14),%r13
L_338276:
	movq %r13,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338277:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1114,%r14
	jne loop_3627
L_338278:
	movq 0x10(%r13),%r14
	movb 0x0(%r13),%r11b
L_338279:
	movq %r14,%r13
	andq $0x3,%r13
	jnz loop_3627
L_338280:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10EB,%r13
	jne loop_3627
L_338281:
	movq 0x0(%r14),%r13
	cmpb $0x4,%r11b
	je L_516831
	cmpb $0x6,%r11b
	je L_516823
	jmp loop_3627
.p2align 0x4
L_516823:
	movq %r13,%r14
L_338283:
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10E4,%r14
	jne loop_3627
L_338284:
	movq 0x0(%r13),%r14
	cmpq $0x3,0x0(%r14)
	jne L_516830
.p2align 0x4,,0x7
L_338258:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516829
.p2align 0x4,,0x7
L_338259:
	movl 0x78(%rbp),%ecx
	decl %ecx
	jo L_336511
L_338260:
	cmpl $0x0,%ecx
	jl L_516826
L_338261:
	movq 0x80(%rbp),%r15
	andq $0x1,%r15
	jnz L_516825
L_338264:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
L_338265:
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jz L_516824
L_338266:
	xorq %r13,%r13
	movq %r14,0x70(%rbp)
	movq %r15,0x68(%rbp)
	movq %r13,%r15
	jmp L_336473
.p2align 0x4
L_516824:
L_338267:
	movl %ecx,0x78(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq $0x0,0x80(%rbp)
	movq %r14,0x90(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_337848
.p2align 0x4
L_516825:
L_338262:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_516826:
L_338268:
	movq 0x80(%rbp),%r15
	andq $0x1,%r15
	jnz L_516827
L_338270:
	xorl %ecx,%ecx
	jmp L_338264
.p2align 0x4
L_516827:
L_338269:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_516829:
L_338271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_338272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338272
.p2align 0x4
.long 0x499A
L_338272:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_338259
.p2align 0x4
L_516830:
L_338285:
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_338286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_516831:
	movq %r13,%r14
	jmp L_338283
.p2align 0x4
L_516832:
L_338273:
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_338254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionBinALMD_operCommute_1
.p2align 0x4
L_516834:
L_338372:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338373:
	movq 0x0(%r15),%r14
L_338374:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338375:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	jne loop_3627
L_338376:
	movq 0x10(%r14),%r15
	movq %r15,0x98(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_338377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516835:
L_338366:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338367:
	movq 0x0(%r15),%r14
L_338368:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338369:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	je L_338258
	cmpq $0x110E,%r15
	je L_338258
	jmp loop_3627
.p2align 0x4
L_516838:
L_338359:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338360:
	movq 0x0(%r15),%r14
L_338361:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338362:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10F5,%r15
	je L_338258
	cmpq $0x10F6,%r15
	je L_338258
	cmpq $0x10F9,%r15
	je L_338258
	jmp loop_3627
.p2align 0x4
L_516842:
L_338357:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112E,%r14
	je L_338258
	jmp loop_3627
.p2align 0x4
L_516844:
L_338350:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338351:
	movq 0x0(%r15),%r14
L_338352:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338353:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1111,%r15
	je L_338258
	cmpq $0x1113,%r15
	je L_338258
	cmpq $0x1114,%r15
	je L_338258
	jmp loop_3627
.p2align 0x4
L_516848:
L_338345:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338346:
	movq 0x0(%r15),%r14
L_338347:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338348:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	je L_338258
	jmp loop_3627
.p2align 0x4
L_516850:
L_338340:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338341:
	movq 0x0(%r15),%r14
L_338342:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338343:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1101,%r15
	je L_338258
	jmp loop_3627
.p2align 0x4
L_516852:
L_338332:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338333:
	movq 0x0(%r15),%r14
L_338334:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338335:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne loop_3627
L_338336:
	movq 0x10(%r14),%r15
L_338337:
	movq %r15,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338338:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	je L_338258
	jmp loop_3627
.p2align 0x4
L_516855:
L_338302:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338303:
	movq 0x0(%r15),%r14
L_338304:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338305:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110E,%r15
	jne loop_3627
L_338306:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
L_338307:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_338308
L_338321:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_516861
L_338322:
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E3,%r14
	je L_516859
	cmpq $0x10E4,%r14
	je L_516857
L_338323:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_336444
L_338324:
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x40(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516857:
L_338329:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x0(%r14)
	je L_338258
	jmp loop_3627
.p2align 0x4
L_516859:
L_338326:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336444
L_338327:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516861:
L_338308:
L_338309:
	movq %r15,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338310:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne loop_3627
L_338311:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10E3,%r15
	je L_516865
	cmpq $0x10E4,%r15
	je L_516863
L_338312:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336444
L_338313:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516863:
L_338318:
	movq 0x0(%r13),%r15
	cmpq $0x1,0x0(%r15)
	je L_338258
	jmp loop_3627
.p2align 0x4
L_516865:
L_338315:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336444
L_338316:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516868:
L_338292:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338293:
	movq 0x0(%r15),%r14
L_338294:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338295:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110F,%r15
	je L_516871
	cmpq $0x1110,%r15
	je L_516870
	cmpq $0x1114,%r15
	je L_338258
	jmp loop_3627
.p2align 0x4
L_516870:
L_338299:
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz loop_3627
	jmp L_338258
.p2align 0x4
L_516871:
L_338296:
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je loop_3627
	cmpb $0x1,%r15b
	je loop_3627
	jmp L_338258
.p2align 0x4
L_516873:
L_338379:
	movq 0x80(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x7C(%rbp)
	cmpl $0x1,%r14d
	je L_516925
L_338380:
	movq 0x60(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_516874
	leaq jumpTable_848(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_848:
.quad L_338387,L_516920,L_516907,L_338381,L_516904,L_516902,L_516900,L_338381,L_516896,L_516894,L_516890,L_338381,L_516887,L_516886,L_338387
.text
.p2align 0x4
L_516874:
L_338381:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2223,%r14
	je L_516884
	cmpq $0x2224,%r14
	je L_516875
L_338382:
	movq 0x18(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_338383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionMULorDIV_srcImmediatePow2_1
.p2align 0x4
L_516875:
L_338400:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne loop_3627
L_338401:
	movq 0x0(%r14),%r13
L_338402:
	movq %r13,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338403:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1114,%r14
	jne loop_3627
L_338404:
	movq 0x10(%r13),%r14
	movb 0x0(%r13),%r11b
L_338405:
	movq %r14,%r13
	andq $0x3,%r13
	jnz loop_3627
L_338406:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10EB,%r13
	jne loop_3627
L_338407:
	movq 0x0(%r14),%r13
	cmpb $0x4,%r11b
	je L_516883
	cmpb $0x6,%r11b
	je L_516876
	jmp loop_3627
.p2align 0x4
L_516876:
	movq %r13,%r14
L_338409:
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10E4,%r14
	jne loop_3627
L_338410:
	movq 0x0(%r13),%r14
	cmpq $0x3,0x0(%r14)
	jne L_516882
.p2align 0x4,,0x7
L_338387:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516881
.p2align 0x4,,0x7
L_338388:
	movl 0x78(%rbp),%ebx
	decl %ebx
	jo L_336511
L_338389:
	cmpl $0x0,%ebx
	jl L_516879
L_338390:
	movl 0x7C(%rbp),%ecx
L_338391:
	decl %ecx
	jo L_336511
L_338392:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x88(%rbp),%r13
	movq %r13,0x8(%r14)
L_338393:
	movq 0x68(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jz L_516877
L_338394:
	movq %r13,0x70(%rbp)
	movq %r14,0x68(%rbp)
	movl %ebx,%ecx
	jmp L_336473
.p2align 0x4
L_516877:
L_338395:
	movl %ebx,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x70(%rbp)
	movq %r13,0x90(%rbp)
	movq 0x8(%r13),%r13
	movq %r13,0x68(%rbp)
	jmp L_337848
.p2align 0x4
L_516879:
L_338396:
	movl 0x7C(%rbp),%ecx
	xorl %ebx,%ebx
	jmp L_338391
.p2align 0x4
L_516881:
L_338397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_338398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338398
.p2align 0x4
.long 0x499A
L_338398:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_338388
.p2align 0x4
L_516882:
L_338411:
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_338412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_516883:
	movq %r13,%r14
	jmp L_338409
.p2align 0x4
L_516884:
L_338399:
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_338383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionBinALMD_operCommute_1
.p2align 0x4
L_516886:
L_338498:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338499:
	movq 0x0(%r15),%r14
L_338500:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338501:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	jne loop_3627
L_338502:
	movq 0x10(%r14),%r15
	movq %r15,0x98(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_338503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516887:
L_338492:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338493:
	movq 0x0(%r15),%r14
L_338494:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338495:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	je L_338387
	cmpq $0x110E,%r15
	je L_338387
	jmp loop_3627
.p2align 0x4
L_516890:
L_338485:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338486:
	movq 0x0(%r15),%r14
L_338487:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338488:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10F5,%r15
	je L_338387
	cmpq $0x10F6,%r15
	je L_338387
	cmpq $0x10F9,%r15
	je L_338387
	jmp loop_3627
.p2align 0x4
L_516894:
L_338483:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112E,%r14
	je L_338387
	jmp loop_3627
.p2align 0x4
L_516896:
L_338476:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338477:
	movq 0x0(%r15),%r14
L_338478:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338479:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1111,%r15
	je L_338387
	cmpq $0x1113,%r15
	je L_338387
	cmpq $0x1114,%r15
	je L_338387
	jmp loop_3627
.p2align 0x4
L_516900:
L_338471:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338472:
	movq 0x0(%r15),%r14
L_338473:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338474:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	je L_338387
	jmp loop_3627
.p2align 0x4
L_516902:
L_338466:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338467:
	movq 0x0(%r15),%r14
L_338468:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338469:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1101,%r15
	je L_338387
	jmp loop_3627
.p2align 0x4
L_516904:
L_338458:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338459:
	movq 0x0(%r15),%r14
L_338460:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338461:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne loop_3627
L_338462:
	movq 0x10(%r14),%r15
L_338463:
	movq %r15,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338464:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	je L_338387
	jmp loop_3627
.p2align 0x4
L_516907:
L_338428:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338429:
	movq 0x0(%r15),%r14
L_338430:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338431:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110E,%r15
	jne loop_3627
L_338432:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
L_338433:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_338434
L_338447:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_516913
L_338448:
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E3,%r14
	je L_516911
	cmpq $0x10E4,%r14
	je L_516909
L_338449:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_336444
L_338450:
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x40(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516909:
L_338455:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x0(%r14)
	je L_338387
	jmp loop_3627
.p2align 0x4
L_516911:
L_338452:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336444
L_338453:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516913:
L_338434:
L_338435:
	movq %r15,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338436:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne loop_3627
L_338437:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10E3,%r15
	je L_516917
	cmpq $0x10E4,%r15
	je L_516915
L_338438:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336444
L_338439:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516915:
L_338444:
	movq 0x0(%r13),%r15
	cmpq $0x1,0x0(%r15)
	je L_338387
	jmp loop_3627
.p2align 0x4
L_516917:
L_338441:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336444
L_338442:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516920:
L_338418:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338419:
	movq 0x0(%r15),%r14
L_338420:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338421:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110F,%r15
	je L_516923
	cmpq $0x1110,%r15
	je L_516922
	cmpq $0x1114,%r15
	je L_338387
	jmp loop_3627
.p2align 0x4
L_516922:
L_338425:
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz loop_3627
	jmp L_338387
.p2align 0x4
L_516923:
L_338422:
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je loop_3627
	cmpb $0x1,%r15b
	je loop_3627
	jmp L_338387
.p2align 0x4
L_516925:
L_338505:
	movq 0x60(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_516926
	leaq jumpTable_849(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_849:
.quad L_338512,L_516965,L_516952,L_338506,L_516950,L_516949,L_516948,L_338506,L_516944,L_516943,L_516939,L_338506,L_516936,L_516935,L_338512
.text
.p2align 0x4
L_516926:
L_338506:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2223,%r14
	je L_516933
	cmpq $0x2224,%r14
	je L_516927
L_338507:
	movq 0x18(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_338508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionMULorDIV_srcImmediatePow2_1
.p2align 0x4
L_516927:
L_338520:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne loop_3627
L_338521:
	movq 0x0(%r14),%r13
L_338522:
	movq %r13,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338523:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1114,%r14
	jne loop_3627
L_338524:
	movq 0x10(%r13),%r14
	movb 0x0(%r13),%r11b
L_338525:
	movq %r14,%r13
	andq $0x3,%r13
	jnz loop_3627
L_338526:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10EB,%r13
	jne loop_3627
L_338527:
	movq 0x0(%r14),%r13
	cmpb $0x4,%r11b
	je L_516932
	cmpb $0x6,%r11b
	je L_516928
	jmp loop_3627
.p2align 0x4
L_516928:
	movq %r13,%r14
L_338529:
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10E4,%r14
	jne loop_3627
L_338530:
	movq 0x0(%r13),%r14
	cmpq $0x3,0x0(%r14)
	jne L_516931
.p2align 0x4,,0x7
L_338512:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
L_338513:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516930
.p2align 0x4,,0x7
L_338514:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_516929
L_338515:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_338513
.p2align 0x4
L_516929:
L_338516:
	movq %r15,0x60(%rbp)
	jmp L_336482
.p2align 0x4
L_516930:
L_338517:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_338518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338518
.p2align 0x4
.long 0xF73
L_338518:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_338514
.p2align 0x4
L_516931:
L_338531:
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_338532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_516932:
	movq %r13,%r14
	jmp L_338529
.p2align 0x4
L_516933:
L_338519:
	movq 0x10(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_338508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionBinALMD_operCommute_1
.p2align 0x4
L_516935:
L_338618:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338619:
	movq 0x0(%r15),%r14
L_338620:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338621:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	jne loop_3627
L_338622:
	movq 0x10(%r14),%r15
	movq %r15,0x98(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_338623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516936:
L_338612:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338613:
	movq 0x0(%r15),%r14
L_338614:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338615:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	je L_516938
	cmpq $0x110E,%r15
	je L_516937
	jmp loop_3627
.p2align 0x4
L_516937:
L_338617:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338513
.p2align 0x4
L_516938:
L_338616:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338513
.p2align 0x4
L_516939:
L_338605:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338606:
	movq 0x0(%r15),%r14
L_338607:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338608:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10F5,%r15
	je L_516942
	cmpq $0x10F6,%r15
	je L_516941
	cmpq $0x10F9,%r15
	je L_516940
	jmp loop_3627
.p2align 0x4
L_516940:
L_338611:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338513
.p2align 0x4
L_516941:
L_338610:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338513
.p2align 0x4
L_516942:
L_338609:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338513
.p2align 0x4
L_516943:
L_338603:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112E,%r14
	jne loop_3627
L_338604:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338513
.p2align 0x4
L_516944:
L_338596:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338597:
	movq 0x0(%r15),%r14
L_338598:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338599:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1111,%r15
	je L_516947
	cmpq $0x1113,%r15
	je L_516946
	cmpq $0x1114,%r15
	je L_516945
	jmp loop_3627
.p2align 0x4
L_516945:
L_338602:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338513
.p2align 0x4
L_516946:
L_338601:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338513
.p2align 0x4
L_516947:
L_338600:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338513
.p2align 0x4
L_516948:
L_338591:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338592:
	movq 0x0(%r15),%r14
L_338593:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338594:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne loop_3627
L_338595:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338513
.p2align 0x4
L_516949:
L_338586:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338587:
	movq 0x0(%r15),%r14
L_338588:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338589:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1101,%r15
	jne loop_3627
L_338590:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338513
.p2align 0x4
L_516950:
L_338578:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338579:
	movq 0x0(%r15),%r14
L_338580:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338581:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne loop_3627
L_338582:
	movq 0x10(%r14),%r15
L_338583:
	movq %r15,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338584:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne loop_3627
L_338585:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338513
.p2align 0x4
L_516952:
L_338548:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338549:
	movq 0x0(%r15),%r14
L_338550:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338551:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110E,%r15
	jne loop_3627
L_338552:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
L_338553:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_338554
L_338567:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_516958
L_338568:
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E3,%r14
	je L_516956
	cmpq $0x10E4,%r14
	je L_516954
L_338569:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_336444
L_338570:
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x40(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516954:
L_338575:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x0(%r14)
	je L_338512
	jmp loop_3627
.p2align 0x4
L_516956:
L_338572:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336444
L_338573:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516958:
L_338554:
L_338555:
	movq %r15,%r14
	andq $0x3,%r14
	jnz loop_3627
L_338556:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne loop_3627
L_338557:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10E3,%r15
	je L_516962
	cmpq $0x10E4,%r15
	je L_516960
L_338558:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336444
L_338559:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516960:
L_338564:
	movq 0x0(%r13),%r15
	cmpq $0x1,0x0(%r15)
	je L_338512
	jmp loop_3627
.p2align 0x4
L_516962:
L_338561:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336444
L_338562:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_516965:
L_338538:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne loop_3627
L_338539:
	movq 0x0(%r15),%r14
L_338540:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338541:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110F,%r15
	je L_516968
	cmpq $0x1110,%r15
	je L_516967
	cmpq $0x1114,%r15
	je L_516966
	jmp loop_3627
.p2align 0x4
L_516966:
L_338547:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338513
.p2align 0x4
L_516967:
L_338545:
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz loop_3627
	jmp L_338512
.p2align 0x4
L_516968:
L_338542:
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je loop_3627
	cmpb $0x1,%r15b
	je loop_3627
	jmp L_338512
.p2align 0x4
L_516970:
L_337979:
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_517141
L_337990:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movl %r15d,0x78(%rbp)
	cmpl $0x0,%r15d
	je x_2213
	cmpl $0x1,%r15d
	je L_517056
L_337991:
	movq 0x60(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_516971
	leaq jumpTable_850(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_850:
.quad L_338007,L_517046,L_517028,L_337992,L_517021,L_517017,L_517013,L_337992,L_517007,L_517005,L_516999,L_337992,L_516994,L_516990,L_338007
.text
.p2align 0x4
L_516971:
L_337992:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2223,%r14
	je L_516988
	cmpq $0x2224,%r14
	je L_516972
L_337993:
	movq 0x18(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_337994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionMULorDIV_srcImmediatePow2_1
.p2align 0x4
L_516972:
L_338016:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne L_337997
L_338017:
	movq 0x0(%r14),%r13
L_338018:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_337997
L_338019:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1114,%r14
	jne L_337997
L_338020:
	movq 0x10(%r13),%r14
	movb 0x0(%r13),%r11b
L_338021:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_337997
L_338022:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10EB,%r13
	jne L_337997
L_338023:
	movq 0x0(%r14),%r13
	cmpb $0x4,%r11b
	je L_516982
	cmpb $0x6,%r11b
	je L_516976
.p2align 0x4,,0x7
L_337997:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_516975
L_337998:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
L_337999:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516974
.p2align 0x4,,0x7
L_338000:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_516973
L_338001:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_337999
.p2align 0x4
L_516973:
L_338002:
	movq %r15,0x60(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp L_336482
.p2align 0x4
L_516974:
L_338003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_338004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338004
.p2align 0x4
.long 0x499D
L_338004:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_338000
.p2align 0x4
L_516975:
L_338005:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x68(%rbp)
	jmp L_336482
.p2align 0x4
L_516976:
	movq %r13,%r14
L_338025:
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10E4,%r14
	jne L_337997
L_338026:
	movq 0x0(%r13),%r14
	cmpq $0x3,0x0(%r14)
	jne L_516980
.p2align 0x4,,0x7
L_338007:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_516979
.p2align 0x4,,0x7
L_338008:
	movl 0x78(%rbp),%ecx
	decl %ecx
	jo L_336511
L_338009:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x88(%rbp),%r13
	movq %r13,0x8(%r14)
L_338010:
	movq 0x68(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jz L_516977
L_338011:
	xorl %ecx,%ecx
	movq %r13,0x70(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_336473
.p2align 0x4
L_516977:
L_338012:
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	movq %r13,0x90(%rbp)
	movq 0x8(%r13),%r13
	movq %r13,0x68(%rbp)
	jmp L_337848
.p2align 0x4
L_516979:
L_338013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_338014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338014
.p2align 0x4
.long 0x499A
L_338014:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_338008
.p2align 0x4
L_516980:
L_338027:
	movq %r14,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_338028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_516982:
	movq %r13,%r14
	jmp L_338025
.p2align 0x4
L_516988:
L_338015:
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_337994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionBinALMD_operCommute_1
.p2align 0x4
L_516990:
L_338114:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337997
L_338115:
	movq 0x0(%r15),%r14
L_338116:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337997
L_338117:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	jne L_337997
L_338118:
	movq 0x10(%r14),%r15
	movq %r15,0xA0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_338119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_516994:
L_338108:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337997
L_338109:
	movq 0x0(%r15),%r14
L_338110:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337997
L_338111:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	je L_338007
	cmpq $0x110E,%r15
	je L_338007
	jmp L_337997
.p2align 0x4
L_516999:
L_338101:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337997
L_338102:
	movq 0x0(%r15),%r14
L_338103:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337997
L_338104:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10F5,%r15
	je L_338007
	cmpq $0x10F6,%r15
	je L_338007
	cmpq $0x10F9,%r15
	je L_338007
	jmp L_337997
.p2align 0x4
L_517005:
L_338099:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112E,%r14
	je L_338007
	jmp L_337997
.p2align 0x4
L_517007:
L_338092:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337997
L_338093:
	movq 0x0(%r15),%r14
L_338094:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337997
L_338095:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1111,%r15
	je L_338007
	cmpq $0x1113,%r15
	je L_338007
	cmpq $0x1114,%r15
	je L_338007
	jmp L_337997
.p2align 0x4
L_517013:
L_338087:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337997
L_338088:
	movq 0x0(%r15),%r14
L_338089:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337997
L_338090:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	je L_338007
	jmp L_337997
.p2align 0x4
L_517017:
L_338082:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337997
L_338083:
	movq 0x0(%r15),%r14
L_338084:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337997
L_338085:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1101,%r15
	je L_338007
	jmp L_337997
.p2align 0x4
L_517021:
L_338074:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337997
L_338075:
	movq 0x0(%r15),%r14
L_338076:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337997
L_338077:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne L_337997
L_338078:
	movq 0x10(%r14),%r15
L_338079:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337997
L_338080:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	je L_338007
	jmp L_337997
.p2align 0x4
L_517028:
L_338044:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337997
L_338045:
	movq 0x0(%r15),%r14
L_338046:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337997
L_338047:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110E,%r15
	jne L_337997
L_338048:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
L_338049:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_338050
L_338063:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_517034
L_338064:
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E3,%r14
	je L_517032
	cmpq $0x10E4,%r14
	je L_517030
L_338065:
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_517029
L_338066:
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_337999
.p2align 0x4
L_517029:
L_338067:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp L_336482
.p2align 0x4
L_517030:
L_338071:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x0(%r14)
	je L_338007
	jmp L_337997
.p2align 0x4
L_517032:
L_338068:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_517033
L_338069:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_337999
.p2align 0x4
L_517033:
L_338070:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x68(%rbp)
	jmp L_336482
.p2align 0x4
L_517034:
L_338050:
L_338051:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337997
L_338052:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_337997
L_338053:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10E3,%r15
	je L_517038
	cmpq $0x10E4,%r15
	je L_517036
L_338054:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_517035
L_338055:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_337999
.p2align 0x4
L_517035:
L_338056:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x68(%rbp)
	jmp L_336482
.p2align 0x4
L_517036:
L_338060:
	movq 0x0(%r13),%r15
	cmpq $0x1,0x0(%r15)
	je L_338007
	jmp L_337997
.p2align 0x4
L_517038:
L_338057:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_517039
L_338058:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_337999
.p2align 0x4
L_517039:
L_338059:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x68(%rbp)
	jmp L_336482
.p2align 0x4
L_517046:
L_338034:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_337997
L_338035:
	movq 0x0(%r15),%r14
L_338036:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_337997
L_338037:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110F,%r15
	je L_517050
	cmpq $0x1110,%r15
	je L_517048
	cmpq $0x1114,%r15
	je L_338007
	jmp L_337997
.p2align 0x4
L_517048:
L_338041:
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_337997
	jmp L_338007
.p2align 0x4
L_517050:
L_338038:
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je L_337997
	cmpb $0x1,%r15b
	je L_337997
	jmp L_338007
.p2align 0x4
L_517056:
L_338121:
	movq 0x60(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_517057
	leaq jumpTable_851(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_851:
.quad L_338137,L_517131,L_517113,L_338122,L_517106,L_517102,L_517098,L_338122,L_517092,L_517090,L_517084,L_338122,L_517079,L_517075,L_338137
.text
.p2align 0x4
L_517057:
L_338122:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2223,%r14
	je L_517073
	cmpq $0x2224,%r14
	je L_517058
L_338123:
	movq 0x18(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_338124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionMULorDIV_srcImmediatePow2_1
.p2align 0x4
L_517058:
L_338145:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x112A,%r13
	jne L_338127
L_338146:
	movq 0x0(%r14),%r13
L_338147:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_338127
L_338148:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1114,%r14
	jne L_338127
L_338149:
	movq 0x10(%r13),%r14
	movb 0x0(%r13),%r11b
L_338150:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_338127
L_338151:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x10EB,%r13
	jne L_338127
L_338152:
	movq 0x0(%r14),%r13
	cmpb $0x4,%r11b
	je L_517067
	cmpb $0x6,%r11b
	je L_517062
.p2align 0x4,,0x7
L_338127:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_517061
L_338128:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
L_338129:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517060
.p2align 0x4,,0x7
L_338130:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_517059
L_338131:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_338129
.p2align 0x4
L_517059:
L_338132:
	movq %r15,0x60(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp L_336482
.p2align 0x4
L_517060:
L_338133:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_338134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338134
.p2align 0x4
.long 0x499D
L_338134:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_338130
.p2align 0x4
L_517061:
L_338135:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x68(%rbp)
	jmp L_336482
.p2align 0x4
L_517062:
	movq %r13,%r14
L_338154:
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10E4,%r14
	jne L_338127
L_338155:
	movq 0x0(%r13),%r14
	cmpq $0x3,0x0(%r14)
	jne L_517065
.p2align 0x4,,0x7
L_338137:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
L_338138:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517064
.p2align 0x4,,0x7
L_338139:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_517063
L_338140:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_338138
.p2align 0x4
L_517063:
L_338141:
	movq %r15,0x60(%rbp)
	jmp L_336482
.p2align 0x4
L_517064:
L_338142:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_338143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338143
.p2align 0x4
.long 0xF73
L_338143:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_338139
.p2align 0x4
L_517065:
L_338156:
	movq %r14,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_338157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_517067:
	movq %r13,%r14
	jmp L_338154
.p2align 0x4
L_517073:
L_338144:
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_338124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInstructionBinALMD_operCommute_1
.p2align 0x4
L_517075:
L_338243:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338127
L_338244:
	movq 0x0(%r15),%r14
L_338245:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338127
L_338246:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	jne L_338127
L_338247:
	movq 0x10(%r14),%r15
	movq %r15,0xA0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_338248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
L_517079:
L_338237:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338127
L_338238:
	movq 0x0(%r15),%r14
L_338239:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338127
L_338240:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110D,%r15
	je L_517081
	cmpq $0x110E,%r15
	je L_517080
	jmp L_338127
.p2align 0x4
L_517080:
L_338242:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338138
.p2align 0x4
L_517081:
L_338241:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338138
.p2align 0x4
L_517084:
L_338230:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338127
L_338231:
	movq 0x0(%r15),%r14
L_338232:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338127
L_338233:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10F5,%r15
	je L_517087
	cmpq $0x10F6,%r15
	je L_517086
	cmpq $0x10F9,%r15
	je L_517085
	jmp L_338127
.p2align 0x4
L_517085:
L_338236:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338138
.p2align 0x4
L_517086:
L_338235:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338138
.p2align 0x4
L_517087:
L_338234:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338138
.p2align 0x4
L_517090:
L_338228:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112E,%r14
	jne L_338127
L_338229:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338138
.p2align 0x4
L_517092:
L_338221:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338127
L_338222:
	movq 0x0(%r15),%r14
L_338223:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338127
L_338224:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1111,%r15
	je L_517095
	cmpq $0x1113,%r15
	je L_517094
	cmpq $0x1114,%r15
	je L_517093
	jmp L_338127
.p2align 0x4
L_517093:
L_338227:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338138
.p2align 0x4
L_517094:
L_338226:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338138
.p2align 0x4
L_517095:
L_338225:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338138
.p2align 0x4
L_517098:
L_338216:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338127
L_338217:
	movq 0x0(%r15),%r14
L_338218:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338127
L_338219:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne L_338127
L_338220:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338138
.p2align 0x4
L_517102:
L_338211:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338127
L_338212:
	movq 0x0(%r15),%r14
L_338213:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338127
L_338214:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1101,%r15
	jne L_338127
L_338215:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338138
.p2align 0x4
L_517106:
L_338203:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338127
L_338204:
	movq 0x0(%r15),%r14
L_338205:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338127
L_338206:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1108,%r15
	jne L_338127
L_338207:
	movq 0x10(%r14),%r15
L_338208:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_338127
L_338209:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_338127
L_338210:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338138
.p2align 0x4
L_517113:
L_338173:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338127
L_338174:
	movq 0x0(%r15),%r14
L_338175:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338127
L_338176:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110E,%r15
	jne L_338127
L_338177:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
L_338178:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_338179
L_338192:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_517119
L_338193:
	movq 0x0(%r13),%r14
	movq 0x10(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E3,%r14
	je L_517117
	cmpq $0x10E4,%r14
	je L_517115
L_338194:
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_517114
L_338195:
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_338129
.p2align 0x4
L_517114:
L_338196:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp L_336482
.p2align 0x4
L_517115:
L_338200:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x0(%r14)
	je L_338137
	jmp L_338127
.p2align 0x4
L_517117:
L_338197:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_517118
L_338198:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_338129
.p2align 0x4
L_517118:
L_338199:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x68(%rbp)
	jmp L_336482
.p2align 0x4
L_517119:
L_338179:
L_338180:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_338127
L_338181:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne L_338127
L_338182:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x10E3,%r15
	je L_517123
	cmpq $0x10E4,%r15
	je L_517121
L_338183:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_517120
L_338184:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_338129
.p2align 0x4
L_517120:
L_338185:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x68(%rbp)
	jmp L_336482
.p2align 0x4
L_517121:
L_338189:
	movq 0x0(%r13),%r15
	cmpq $0x1,0x0(%r15)
	je L_338137
	jmp L_338127
.p2align 0x4
L_517123:
L_338186:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_517124
L_338187:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_338129
.p2align 0x4
L_517124:
L_338188:
	movq $0x1,0x60(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x68(%rbp)
	jmp L_336482
.p2align 0x4
L_517131:
L_338163:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x112A,%r14
	jne L_338127
L_338164:
	movq 0x0(%r15),%r14
L_338165:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_338127
L_338166:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x110F,%r15
	je L_517135
	cmpq $0x1110,%r15
	je L_517133
	cmpq $0x1114,%r15
	je L_517132
	jmp L_338127
.p2align 0x4
L_517132:
L_338172:
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
	jmp L_338138
.p2align 0x4
L_517133:
L_338170:
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_338127
	jmp L_338137
.p2align 0x4
L_517135:
L_338167:
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je L_338127
	cmpb $0x1,%r15b
	je L_338127
	jmp L_338137
.p2align 0x4
x_2213:
x_1069:
	movq 0x88(%rbp),%r14
	movq 0x90(%rbp),%r13
	movq %r13,0x60(%rbp)
	movq %r14,%r15
	jmp x_1068
.p2align 0x4
L_517141:
L_337980:
	movq 0x60(%rbp),%r13
	movq %r13,0x98(%rbp)
	movq 0x90(%rbp),%r13
	movq %r13,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_337981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_6
.p2align 0x4
L_517142:
L_338625:
	movq $0x1,%r15
	movq 0x30(%rbp),%r14
	movq %r14,0x50(%rbp)
	jmp L_336486
.p2align 0x4
L_517144:
L_338631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_338632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_338632
.p2align 0x4
.long 0x136B
L_338632:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_336466
.p2align 0x4
L_517145:
L_338656:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1139,%r14
	jne loop_3627
L_338657:
	movq 0x10(%r15),%r14
L_338658:
	movq %r14,%r15
	andq $0x3,%r15
	jnz loop_3627
L_338659:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10EB,%r15
	jne loop_3627
L_338660:
	movq 0x0(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x10E3,%r11
	je L_517148
	cmpq $0x10E4,%r11
	je L_336465
L_338661:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336444
L_338662:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_517148:
L_338664:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_336444
L_338665:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_336440
.p2align 0x4
L_517151:
L_338649:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x113A,%r14
	jne loop_3627
L_338650:
	movb 0x0(%r15),%r14b
	cmpb $0x9,%r14b
	je L_336465
L_338651:
	cmpb $0x8,%r14b
	je L_336465
	jmp loop_3627
.p2align 0x4
L_517158:
L_338639:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x113A,%r14
	jne loop_3627
L_338640:
	movb 0x0(%r15),%r14b
	cmpb $0x7,%r14b
	je L_336465
L_338641:
	cmpb $0x6,%r14b
	je L_336465
	jmp loop_3627
.p2align 0x4
L_517162:
L_338633:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1139,%r14
	jne loop_3627
L_338634:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_338635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doit_94
.p2align 0x4
L_517163:
L_336438:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_517164:
L_338668:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1029
L_336501:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336502
L_336519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336520
.p2align 0x4
.long 0x2C9E
L_336520:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_336502:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_517168
L_336503:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_336504:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517167
.p2align 0x4,,0x7
L_336505:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_517166
L_336506:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336504
.p2align 0x4
L_517166:
L_336508:
	movq %r15,0x18(%rbp)
	movq $0x2277,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517167:
L_336516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336517
.p2align 0x4
.long 0x657
L_336517:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336505
.p2align 0x4
L_517168:
L_336518:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_336508
.p2align 0x4
.long 0x7F1
L_337341:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_337342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x1F58
L_337103:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337104
L_337184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_337185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337185
.p2align 0x4
.long 0x4978
L_337185:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_337104:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_517179
L_337105:
	movl 0x4(%r15),%r14d
	movl %r14d,0x70(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x74(%rbp)
	cmpl $0x0,%r14d
	je L_517177
	cmpl $0x1,%r14d
	je L_517176
L_337106:
	movb 0x4C(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_337135
	cmpb $0x2,%r15b
	je L_517174
	cmpb $0x3,%r15b
	je L_517173
	cmpb $0x6,%r15b
	je L_517172
	cmpb $0x7,%r15b
	je L_517171
L_337108:
	movl $0x4,%ecx
L_337109:
	imull $0x8,%ecx
	jo L_336511
L_337110:
	cmpl %ecx,0x74(%rbp)
	jnl callback_2
L_337112:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_337113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517171:
L_337141:
	movl $0x1,%ecx
	jmp L_337109
.p2align 0x4
L_517172:
L_337135:
	movl $0x2,%ecx
	jmp L_337109
.p2align 0x4
L_517173:
L_337137:
	movl $0x8,%ecx
	jmp L_337109
.p2align 0x4
L_517174:
L_337136:
	movl $0xA,%ecx
	jmp L_337109
.p2align 0x4
L_517176:
L_337166:
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x6,%r14b
	movzbl %r14b,%r13d
	movzbl 0x4C(%rbp),%r14d
	shll $0x8,%r14d
	orl %r14d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_337167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517177:
L_337142:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_517178
L_337143:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517178:
L_337153:
	movq $0x2221,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517179:
L_336839:
	movq (globalObjptr+0x57C8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1F58
L_337039:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337040
L_337093:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_337094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337094
.p2align 0x4
.long 0x4978
L_337094:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_337040:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_336839
L_337041:
	movl 0x4(%r15),%ecx
	movl 0x0(%r15),%ebx
	testl %ebx,%ebx
	jz L_517187
L_337042:
	testl %ecx,%ecx
	jnz callback_2
L_337043:
	movb 0x4C(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_337072
	cmpb $0x2,%r15b
	je L_517185
	cmpb $0x3,%r15b
	je L_517184
	cmpb $0x6,%r15b
	je L_517183
	cmpb $0x7,%r15b
	je L_517182
L_337045:
	movl $0x4,%ecx
L_337046:
	imull $0x8,%ecx
	jo L_336511
L_337047:
	cmpl %ecx,%ebx
	jnl callback_2
L_337049:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movslq %ebx,%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x70(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x78(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_337050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_517182:
L_337078:
	movl $0x1,%ecx
	jmp L_337046
.p2align 0x4
L_517183:
L_337072:
	movl $0x2,%ecx
	jmp L_337046
.p2align 0x4
L_517184:
L_337074:
	movl $0x8,%ecx
	jmp L_337046
.p2align 0x4
L_517185:
L_337073:
	movl $0xA,%ecx
	jmp L_337046
.p2align 0x4
L_517187:
L_337080:
	testl %ecx,%ecx
	jnz callback_2
L_337081:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x497D
L_336915:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336916
L_337029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_337030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337030
.p2align 0x4
.long 0x4990
L_337030:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_336916:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_336839
L_336917:
	movl 0x4(%r15),%r14d
	movl %r14d,0x98(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x9C(%rbp)
	testl %r14d,%r14d
	jz L_517196
L_336918:
	movb 0x4C(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_336997
	cmpb $0x2,%r15b
	je L_517194
	cmpb $0x3,%r15b
	je L_517193
	cmpb $0x6,%r15b
	je L_517192
	cmpb $0x7,%r15b
	je L_517191
L_336920:
	movl $0x4,%ecx
L_336921:
	imull $0x8,%ecx
	jo L_336511
L_336922:
	cmpl %ecx,0x9C(%rbp)
	jnl callback_2
L_336924:
	movq 0x78(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_517191:
L_337003:
	movl $0x1,%ecx
	jmp L_336921
.p2align 0x4
L_517192:
L_336997:
	movl $0x2,%ecx
	jmp L_336921
.p2align 0x4
L_517193:
L_336999:
	movl $0x8,%ecx
	jmp L_336921
.p2align 0x4
L_517194:
L_336998:
	movl $0xA,%ecx
	jmp L_336921
.p2align 0x4
L_517196:
L_337004:
	movl 0x98(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_517197
L_337005:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517197:
L_337015:
	movq $0x2221,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movzbl 0x4C(%rbp),%r14d
	shll $0x8,%r14d
	orl %r14d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x1F58
L_336851:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336852
L_336905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_336906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336906
.p2align 0x4
.long 0x4978
L_336906:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_336852:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_336839
L_336853:
	movl 0x4(%r15),%ecx
	movl 0x0(%r15),%ebx
	testl %ebx,%ebx
	jz L_517206
L_336854:
	testl %ecx,%ecx
	jnz callback_2
L_336855:
	movb 0x4C(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_336884
	cmpb $0x2,%r15b
	je L_517204
	cmpb $0x3,%r15b
	je L_517203
	cmpb $0x6,%r15b
	je L_517202
	cmpb $0x7,%r15b
	je L_517201
L_336857:
	movl $0x4,%ecx
L_336858:
	imull $0x8,%ecx
	jo L_336511
L_336859:
	cmpl %ecx,%ebx
	jnl callback_2
L_336861:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movslq %ebx,%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x70(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x78(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_336862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_517201:
L_336890:
	movl $0x1,%ecx
	jmp L_336858
.p2align 0x4
L_517202:
L_336884:
	movl $0x2,%ecx
	jmp L_336858
.p2align 0x4
L_517203:
L_336886:
	movl $0x8,%ecx
	jmp L_336858
.p2align 0x4
L_517204:
L_336885:
	movl $0xA,%ecx
	jmp L_336858
.p2align 0x4
L_517206:
L_336892:
	testl %ecx,%ecx
	jnz callback_2
L_336893:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_336894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x1F58
L_336758:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336759
L_336840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_336841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336841
.p2align 0x4
.long 0x4978
L_336841:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_336759:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_336839
L_336760:
	movl 0x4(%r15),%r14d
	movl %r14d,0x70(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x74(%rbp)
	cmpl $0x0,%r14d
	je L_517216
	cmpl $0x1,%r14d
	je L_517215
L_336761:
	movb 0x4C(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_336790
	cmpb $0x2,%r15b
	je L_517213
	cmpb $0x3,%r15b
	je L_517212
	cmpb $0x6,%r15b
	je L_517211
	cmpb $0x7,%r15b
	je L_517210
L_336763:
	movl $0x4,%ecx
L_336764:
	imull $0x8,%ecx
	jo L_336511
L_336765:
	cmpl %ecx,0x74(%rbp)
	jnl callback_2
L_336767:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_336768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517210:
L_336796:
	movl $0x1,%ecx
	jmp L_336764
.p2align 0x4
L_517211:
L_336790:
	movl $0x2,%ecx
	jmp L_336764
.p2align 0x4
L_517212:
L_336792:
	movl $0x8,%ecx
	jmp L_336764
.p2align 0x4
L_517213:
L_336791:
	movl $0xA,%ecx
	jmp L_336764
.p2align 0x4
L_517215:
L_336821:
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x6,%r14b
	movzbl %r14b,%r13d
	movzbl 0x4C(%rbp),%r14d
	shll $0x8,%r14d
	orl %r14d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_336822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517216:
L_336797:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_517217
L_336798:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_336799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517217:
L_336808:
	movq $0x2221,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_336809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4993
L_337282:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337283
L_337322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_337323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337323
.p2align 0x4
.long 0x4994
L_337323:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_337283:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_336839
L_337284:
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	cmpl $0x0,%r13d
	je L_517226
	cmpl $0x1,%r13d
	je L_517220
	jmp callback_2
.p2align 0x4
L_517220:
L_337308:
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x6,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	testl %r14d,%r14d
	jnz L_517224
L_337309:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517223
L_337310:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_337311:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517222
.p2align 0x4,,0x7
L_337312:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517221
L_337313:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337311
.p2align 0x4
L_517221:
L_337314:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517222:
L_337315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337316
.p2align 0x4
.long 0x657
L_337316:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337312
.p2align 0x4
L_517223:
L_337317:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517224:
L_337318:
	movq $0x2221,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_517225
L_337319:
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	jmp L_337311
.p2align 0x4
L_517225:
L_337320:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517226:
L_337285:
	testl %r14d,%r14d
	jnz L_517233
L_337286:
	movb 0x4D(%rbp),%r14b
	cmpb $0xE,%r14b
	je L_517231
	cmpb $0xF,%r14b
	je L_517227
L_337209:
	movq (globalObjptr+0x57D0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_517227:
L_337296:
	movq $0x2277,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_517230
L_337297:
	movq 0x8(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_337289:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517229
.p2align 0x4,,0x7
L_337290:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517228
L_337291:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_337289
.p2align 0x4
L_517228:
L_337292:
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517229:
L_337293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337294
.p2align 0x4
.long 0x657
L_337294:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337290
.p2align 0x4
L_517230:
L_337298:
	movq %r14,0x10(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517231:
L_337287:
	movq $0x2277,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x10(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x20(%rbp),%r10
	cmpq $0x1,%r10
	je L_517232
L_337288:
	movq 0x8(%r10),%r9
	movq %r9,0x10(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x18(%rbp)
	movq %r11,0x20(%rbp)
	jmp L_337289
.p2align 0x4
L_517232:
L_337295:
	movq %r11,0x10(%rbp)
	movq 0x30(%rbp),%r11
	movq %r11,0x18(%rbp)
	movq 0x28(%rbp),%r11
	movq %r11,0x20(%rbp)
	movq 0x38(%rbp),%r11
	movq %r11,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517233:
L_337299:
	movq $0x2221,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r10d
	movzbl 0x4C(%rbp),%r11d
	shll $0x8,%r11d
	orl %r11d,%r10d
	movl %r10d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x80(%rbp),%r11
	movq %r11,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_517236
L_337300:
	movq %r14,0x30(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r11),%r11
	movq %r11,0x20(%rbp)
.p2align 0x4,,0x7
L_337301:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517235
.p2align 0x4,,0x7
L_337302:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517234
L_337303:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337301
.p2align 0x4
L_517234:
L_337304:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517235:
L_337305:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337306
.p2align 0x4
.long 0x657
L_337306:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337302
.p2align 0x4
L_517236:
L_337307:
	movq 0x18(%rbp),%r10
	movq %r10,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_336509
.p2align 0x4
.long 0x4991
L_337204:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337205
L_337245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337246
.p2align 0x4
.long 0x4992
L_337246:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337205:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_336839
L_337206:
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	cmpl $0x0,%r13d
	je L_517245
	cmpl $0x1,%r13d
	je L_517239
	jmp callback_2
.p2align 0x4
L_517239:
L_337231:
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x6,%r13b
	movzbl %r13b,%r11d
	movzbl 0x30(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r15)
	testl %r14d,%r14d
	jnz L_517243
L_337232:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517242
L_337233:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_337234:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517241
.p2align 0x4,,0x7
L_337235:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517240
L_337236:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337234
.p2align 0x4
L_517240:
L_337237:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517241:
L_337238:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337239
.p2align 0x4
.long 0x657
L_337239:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337235
.p2align 0x4
L_517242:
L_337240:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517243:
L_337241:
	movq $0x2221,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movzbl 0x30(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_517244
L_337242:
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	jmp L_337234
.p2align 0x4
L_517244:
L_337243:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517245:
L_337207:
	testl %r14d,%r14d
	jnz L_517252
L_337208:
	movb 0x31(%rbp),%r14b
	cmpb $0xE,%r14b
	je L_517250
	cmpb $0xF,%r14b
	je L_517246
	jmp L_337209
.p2align 0x4
L_517246:
L_337219:
	movq $0x2277,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x70(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_517249
L_337220:
	movq 0x8(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x30(%rbp)
.p2align 0x4,,0x7
L_337212:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517248
.p2align 0x4,,0x7
L_337213:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517247
L_337214:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_337212
.p2align 0x4
L_517247:
L_337215:
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517248:
L_337216:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337217
.p2align 0x4
.long 0x657
L_337217:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337213
.p2align 0x4
L_517249:
L_337221:
	movq %r14,0x10(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517250:
L_337210:
	movq $0x2277,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x10(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x20(%rbp),%r10
	cmpq $0x1,%r10
	je L_517251
L_337211:
	movq 0x8(%r10),%r9
	movq %r9,0x10(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x18(%rbp)
	movq %r11,0x20(%rbp)
	movq 0x68(%rbp),%r11
	movq %r11,0x30(%rbp)
	jmp L_337212
.p2align 0x4
L_517251:
L_337218:
	movq %r11,0x10(%rbp)
	movq 0x68(%rbp),%r11
	movq %r11,0x18(%rbp)
	movq 0x28(%rbp),%r11
	movq %r11,0x20(%rbp)
	movq 0x38(%rbp),%r11
	movq %r11,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517252:
L_337222:
	movq $0x2221,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r10d
	movzbl 0x30(%rbp),%r11d
	shll $0x8,%r11d
	orl %r11d,%r10d
	movl %r10d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x60(%rbp),%r11
	movq %r11,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_517255
L_337223:
	movq %r14,0x30(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r11),%r11
	movq %r11,0x20(%rbp)
.p2align 0x4,,0x7
L_337224:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517254
.p2align 0x4,,0x7
L_337225:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517253
L_337226:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337224
.p2align 0x4
L_517253:
L_337227:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517254:
L_337228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337229
.p2align 0x4
.long 0x657
L_337229:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337225
.p2align 0x4
L_517255:
L_337230:
	movq 0x18(%rbp),%r10
	movq %r10,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_336509
.p2align 0x4
.long 0x496E
L_336607:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	jne L_336604
L_336609:
	movb 0x11(%rbp),%r15b
	cmpb $0x4,%r15b
	je L_517259
	cmpb $0x6,%r15b
	je L_517258
	jmp L_336604
.p2align 0x4
L_517258:
L_336623:
	movb $0x2,0x11(%rbp)
	jmp L_336611
.p2align 0x4
L_517259:
L_336610:
	movb $0x3,0x11(%rbp)
	jmp L_336611
.p2align 0x4
.long 0x496B
L_336546:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336547
L_336565:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336566
.p2align 0x4
.long 0x496D
L_336566:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_336547:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_517265
	cmpq $0x2,%r14
	je L_517264
L_336548:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10E9,%r14
	je L_517263
	cmpq $0x10EA,%r14
	je L_517262
	cmpq $0x10EB,%r14
	je L_517261
L_336549:
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%dl
L_336550:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x221D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movzbl %dl,%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_336551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517261:
L_336557:
	movb $0x5,%dl
	jmp L_336550
.p2align 0x4
L_517262:
L_336556:
	movb $0x5,%dl
	jmp L_336550
.p2align 0x4
L_517263:
L_336555:
	movb $0x5,%dl
	jmp L_336550
.p2align 0x4
L_517264:
L_336564:
	movb $0x2,%dl
	jmp L_336550
.p2align 0x4
L_517265:
L_336558:
	shrq $0x2,%r15
	movw %r15w,%r14w
	shrw $0x8,%r14w
	movb %r14b,%dl
	cmpb $0x2,%dl
	je L_517267
	cmpb $0x3,%dl
	je L_517266
L_336560:
	movb $0x7,%dl
	jmp L_336550
.p2align 0x4
L_517266:
L_336563:
	movb $0x5,%dl
	jmp L_336550
.p2align 0x4
L_517267:
L_336562:
	movb $0x6,%dl
	jmp L_336550
.p2align 0x4
.long 0x1CE8
L_336573:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_517269
L_336574:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_336530
.p2align 0x4
L_517269:
L_336575:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_517270
L_336576:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x50(%rbp)
	jmp L_336535
.p2align 0x4
L_517270:
L_336577:
	movq $0x1,0x10(%rbp)
	jmp L_336539
.p2align 0x4
.long 0x4995
L_337780:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	testl %r15d,%r15d
	jz callback_2
L_337782:
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
.long 0x4995
L_337757:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	testl %r15d,%r15d
	jz callback_2
L_337759:
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
.long 0x4995
L_337734:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	testl %r15d,%r15d
	jz callback_2
L_337736:
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
.long 0x4995
L_337632:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337633
L_337652:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337653
.p2align 0x4
.long 0x4992
L_337653:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337633:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337635:
L_337636:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz callback_2
L_337637:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne callback_2
L_337638:
L_337639:
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337640
L_337650:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	je callback_2
L_337640:
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x32(%rbp),%r13d
	movzbl 0x31(%rbp),%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4995
L_337605:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337606
L_337625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337626
.p2align 0x4
.long 0x4992
L_337626:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337606:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337608:
L_337609:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz callback_2
L_337610:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne callback_2
L_337611:
L_337612:
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337613
L_337623:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	je callback_2
L_337613:
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2227,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x32(%rbp),%r13d
	movzbl 0x31(%rbp),%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4995
L_337578:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337579
L_337598:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337599
.p2align 0x4
.long 0x4992
L_337599:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337579:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337581:
L_337582:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz callback_2
L_337583:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	jne callback_2
L_337584:
L_337585:
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_337586
L_337596:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10EB,%r14
	je callback_2
L_337586:
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2223,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x31(%rbp),%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0xF2C
L_337531:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517279
L_337532:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337533:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517278
.p2align 0x4,,0x7
L_337534:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517277
L_337535:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337533
.p2align 0x4
L_517277:
L_337536:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517278:
L_337537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337538
.p2align 0x4
.long 0x657
L_337538:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337534
.p2align 0x4
L_517279:
L_337539:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336509
.p2align 0x4
.long 0x1F58
L_337494:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337495
L_337510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_337511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337511
.p2align 0x4
.long 0x1241
L_337511:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_337495:
	movl 0x4C(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337497:
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_337498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4995
L_337447:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	testl %r15d,%r15d
	jz callback_2
L_337449:
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
.long 0x4995
L_337424:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	testl %r15d,%r15d
	jz callback_2
L_337426:
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
.long 0x4995
L_337401:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	testl %r15d,%r15d
	jz callback_2
L_337403:
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_337404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_1
.p2align 0x4
.long 0x496A
L_336476:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_517283
L_336477:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x78(%rbp)
	movq %r13,0x70(%rbp)
.p2align 0x4,,0x7
L_336478:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517282
.p2align 0x4,,0x7
L_336479:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_517281
L_336480:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_336478
.p2align 0x4
L_517281:
L_336481:
	movq 0x60(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_336482
.p2align 0x4
L_517282:
L_337808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337809
.p2align 0x4
.long 0xF73
L_337809:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_336479
.p2align 0x4
L_517283:
L_337810:
	movq 0x60(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_336482
.p2align 0x4
.long 0x4999
L_337852:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%ecx
	movl %ecx,0x7C(%rbp)
L_337853:
	testl %ecx,%ecx
	jnz L_337856
	jmp loop_3627
.p2align 0x4
.long 0x4999
L_337886:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_337856
	jmp loop_3627
.p2align 0x4
.long 0x4999
L_337977:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%ecx
	movl %ecx,0x7C(%rbp)
	jmp L_337853
.p2align 0x4
.long 0x4999
L_338254:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%ecx
	movl %ecx,0x7C(%rbp)
L_338255:
	testl %ecx,%ecx
	jnz L_338258
	jmp loop_3627
.p2align 0x4
.long 0x4999
L_338286:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_338258
	jmp loop_3627
.p2align 0x4
.long 0x4999
L_338377:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%ecx
	movl %ecx,0x7C(%rbp)
	jmp L_338255
.p2align 0x4
.long 0x4999
L_338383:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%ecx
	movl %ecx,0x80(%rbp)
L_338384:
	testl %ecx,%ecx
	jnz L_338387
	jmp loop_3627
.p2align 0x4
.long 0x4999
L_338412:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_338387
	jmp loop_3627
.p2align 0x4
.long 0x4999
L_338503:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%ecx
	movl %ecx,0x80(%rbp)
	jmp L_338384
.p2align 0x4
.long 0x499F
L_338508:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%ecx
	movl %ecx,0x60(%rbp)
L_338509:
	testl %ecx,%ecx
	jnz L_338512
	jmp loop_3627
.p2align 0x4
.long 0x499F
L_338532:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_338512
	jmp loop_3627
.p2align 0x4
.long 0x499F
L_338623:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%ecx
	movl %ecx,0x60(%rbp)
	jmp L_338509
.p2align 0x4
.long 0x499C
L_337994:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%ecx
	movl %ecx,0x7C(%rbp)
L_337995:
	testl %ecx,%ecx
	jnz L_338007
	jmp L_337997
.p2align 0x4
.long 0x499C
L_338028:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_338007
	jmp L_337997
.p2align 0x4
.long 0x499C
L_338119:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%ecx
	movl %ecx,0x7C(%rbp)
	jmp L_337995
.p2align 0x4
.long 0x499E
L_338124:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%ecx
	movl %ecx,0x60(%rbp)
L_338125:
	testl %ecx,%ecx
	jnz L_338137
	jmp L_338127
.p2align 0x4
.long 0x499E
L_338157:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_338137
	jmp L_338127
.p2align 0x4
.long 0x499E
L_338248:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%ecx
	movl %ecx,0x60(%rbp)
	jmp L_338125
.p2align 0x4
.long 0x499B
L_337981:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_517298
L_337982:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x68(%rbp)
.p2align 0x4,,0x7
L_337983:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517297
.p2align 0x4,,0x7
L_337984:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_517296
L_337985:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_337983
.p2align 0x4
L_517296:
L_337986:
	movq 0x60(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_336482
.p2align 0x4
L_517297:
L_337987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337988
.p2align 0x4
.long 0xF73
L_337988:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_337984
.p2align 0x4
L_517298:
L_337989:
	movq 0x60(%rbp),%r13
	movq %r13,0x68(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_336482
.p2align 0x4
.long 0x2675
L_338635:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpl $0x0,%r15d
	jg L_336465
	jmp loop_3627
.p2align 0x4
.long 0x7F1
L_337342:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x60(%rbp)
	jz L_337344
L_337366:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337367
L_337373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_337374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337374
.p2align 0x4
.long 0x809
L_337374:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_337367:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_337368:
	testl %eax,%eax
	jz L_517304
L_337370:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_517300
L_337371:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_337340
.p2align 0x4
L_517300:
L_337372:
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_337348:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517303
.p2align 0x4,,0x7
L_337349:
	movq $0x256B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_517301
L_337350:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_337348
.p2align 0x4
L_517301:
L_337351:
	cmpq $0x1,0x48(%rbp)
	je L_517302
bug_674:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalObjptr+0x11530)(%rip),%r13
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_517302:
L_337352:
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_337353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp decNear_1
.p2align 0x4
L_517303:
L_337359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_337360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337360
.p2align 0x4
.long 0x80A
L_337360:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_337349
.p2align 0x4
L_517304:
L_337344:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_517305
L_337345:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_337340
.p2align 0x4
L_517305:
L_337346:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_337362
L_337347:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
	jmp L_337348
.p2align 0x4
.long 0x4971
L_337113:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movslq 0x74(%rbp),%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x78(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_337114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4971
L_337167:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337168
L_337181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_337182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337182
.p2align 0x4
.long 0x4976
L_337182:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_337168:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x70(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_517312
L_337169:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517311
L_337170:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_337171:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517310
.p2align 0x4,,0x7
L_337172:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517309
L_337173:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337171
.p2align 0x4
L_517309:
L_337174:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517310:
L_337175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337176
.p2align 0x4
.long 0x657
L_337176:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337172
.p2align 0x4
L_517311:
L_337177:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517312:
L_337178:
	movq $0x2221,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_517313
L_337179:
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	jmp L_337171
.p2align 0x4
L_517313:
L_337180:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
.long 0xF2C
L_337144:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517317
L_337145:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337146:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517316
.p2align 0x4,,0x7
L_337147:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517315
L_337148:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337146
.p2align 0x4
L_517315:
L_337149:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517316:
L_337150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337151
.p2align 0x4
.long 0x657
L_337151:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337147
.p2align 0x4
L_517317:
L_337152:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336509
.p2align 0x4
.long 0x11C5
L_337154:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337155
L_337164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337165
.p2align 0x4
.long 0x657
L_337165:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_337155:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517320
L_337156:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_337157:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517319
.p2align 0x4,,0x7
L_337158:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517318
L_337159:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337157
.p2align 0x4
L_517318:
L_337160:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517319:
L_337161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337162
.p2align 0x4
.long 0x657
L_337162:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337158
.p2align 0x4
L_517320:
L_337163:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
.long 0x4979
L_337050:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_337051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xF2C
L_337082:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517324
L_337083:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337084:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517323
.p2align 0x4,,0x7
L_337085:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517322
L_337086:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337084
.p2align 0x4
L_517322:
L_337087:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517323:
L_337088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337089
.p2align 0x4
.long 0x657
L_337089:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337085
.p2align 0x4
L_517324:
L_337090:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336509
.p2align 0x4
.long 0x497E
L_336925:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336926
L_336994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336995
.p2align 0x4
.long 0x498F
L_336995:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336926:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalObjptr+0x11068)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x40(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x21C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0xA8(%rbp)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_336927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0xF2C
L_337006:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517328
L_337007:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337008:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517327
.p2align 0x4,,0x7
L_337009:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517326
L_337010:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337008
.p2align 0x4
L_517326:
L_337011:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517327:
L_337012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337013
.p2align 0x4
.long 0x657
L_337013:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337009
.p2align 0x4
L_517328:
L_337014:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336509
.p2align 0x4
.long 0x11C5
L_337016:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337017
L_337026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337027
.p2align 0x4
.long 0x657
L_337027:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_337017:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517331
L_337018:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_337019:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517330
.p2align 0x4,,0x7
L_337020:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517329
L_337021:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337019
.p2align 0x4
L_517329:
L_337022:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517330:
L_337023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337024
.p2align 0x4
.long 0x657
L_337024:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337020
.p2align 0x4
L_517331:
L_337025:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
.long 0x4979
L_336862:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_336863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xF2C
L_336894:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517335
L_336895:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_336896:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517334
.p2align 0x4,,0x7
L_336897:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517333
L_336898:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336896
.p2align 0x4
L_517333:
L_336899:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517334:
L_336900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336901
.p2align 0x4
.long 0x657
L_336901:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336897
.p2align 0x4
L_517335:
L_336902:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336509
.p2align 0x4
.long 0x4971
L_336768:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movslq 0x74(%rbp),%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x78(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_336769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4971
L_336822:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336823
L_336836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_336837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336837
.p2align 0x4
.long 0x4976
L_336837:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_336823:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x70(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_517339
L_336824:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517338
L_336825:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_336826:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517337
.p2align 0x4,,0x7
L_336827:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517336
L_336828:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336826
.p2align 0x4
L_517336:
L_336829:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517337:
L_336830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336831
.p2align 0x4
.long 0x657
L_336831:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336827
.p2align 0x4
L_517338:
L_336832:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517339:
L_336833:
	movq $0x2221,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_517340
L_336834:
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	jmp L_336826
.p2align 0x4
L_517340:
L_336835:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
.long 0xF2C
L_336799:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517344
L_336800:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_336801:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517343
.p2align 0x4,,0x7
L_336802:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517342
L_336803:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336801
.p2align 0x4
L_517342:
L_336804:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517343:
L_336805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336806
.p2align 0x4
.long 0x657
L_336806:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336802
.p2align 0x4
L_517344:
L_336807:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336509
.p2align 0x4
.long 0x11C5
L_336809:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336810
L_336819:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336820
.p2align 0x4
.long 0x657
L_336820:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_336810:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517347
L_336811:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_336812:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517346
.p2align 0x4,,0x7
L_336813:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517345
L_336814:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336812
.p2align 0x4
L_517345:
L_336815:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517346:
L_336816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336817
.p2align 0x4
.long 0x657
L_336817:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336813
.p2align 0x4
L_517347:
L_336818:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
.long 0x112E
L_336551:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336552
L_336553:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_336554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336554
.p2align 0x4
.long 0x496C
L_336554:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_336552:
	movq $0x2275,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x9,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
.long 0x4996
L_337783:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337784
L_337796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337797
.p2align 0x4
.long 0x4997
L_337797:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337784:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337786:
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb 0x30(%rbp),%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x31(%rbp),%r10d
	movzbl %r14b,%r9d
	shll $0x8,%r9d
	orl %r9d,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4996
L_337760:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337761
L_337773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337774
.p2align 0x4
.long 0x4997
L_337774:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337761:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337763:
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb 0x30(%rbp),%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x2227,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x31(%rbp),%r10d
	movzbl %r14b,%r9d
	shll $0x8,%r9d
	orl %r9d,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4996
L_337737:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337738
L_337750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337751
.p2align 0x4
.long 0x4997
L_337751:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337738:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337740:
	movq $0x2211,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb 0x30(%rbp),%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x2223,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl %r14b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0xF2C
L_337641:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517355
L_337642:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337643:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517354
.p2align 0x4,,0x7
L_337644:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517353
L_337645:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337643
.p2align 0x4
L_517353:
L_337646:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517354:
L_337647:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337648
.p2align 0x4
.long 0x657
L_337648:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337644
.p2align 0x4
L_517355:
L_337649:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336509
.p2align 0x4
.long 0xF2C
L_337614:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517358
L_337615:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337616:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517357
.p2align 0x4,,0x7
L_337617:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517356
L_337618:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337616
.p2align 0x4
L_517356:
L_337619:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517357:
L_337620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337621
.p2align 0x4
.long 0x657
L_337621:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337617
.p2align 0x4
L_517358:
L_337622:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336509
.p2align 0x4
.long 0xF2C
L_337587:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517361
L_337588:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337589:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517360
.p2align 0x4,,0x7
L_337590:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517359
L_337591:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337589
.p2align 0x4
L_517359:
L_337592:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517360:
L_337593:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337594
.p2align 0x4
.long 0x657
L_337594:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337590
.p2align 0x4
L_517361:
L_337595:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336509
.p2align 0x4
.long 0x585
L_337498:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337499
L_337508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_337509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337509
.p2align 0x4
.long 0x11CC
L_337509:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_337499:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517364
L_337500:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_337501:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517363
.p2align 0x4,,0x7
L_337502:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517362
L_337503:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337501
.p2align 0x4
L_517362:
L_337504:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517363:
L_337505:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337506
.p2align 0x4
.long 0x657
L_337506:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337502
.p2align 0x4
L_517364:
L_337507:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
.long 0x4996
L_337450:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337451
L_337463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337464
.p2align 0x4
.long 0x4997
L_337464:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337451:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337453:
	movq $0x2203,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb 0x30(%rbp),%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x21F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x31(%rbp),%r10d
	movzbl %r14b,%r9d
	shll $0x8,%r9d
	orl %r9d,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4996
L_337427:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337428
L_337440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337441
.p2align 0x4
.long 0x4997
L_337441:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337428:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337430:
	movq $0x2203,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb 0x30(%rbp),%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x21ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl %r14b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4996
L_337404:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337405
L_337417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_337418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337418
.p2align 0x4
.long 0x4997
L_337418:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_337405:
	movl 0x34(%rbp),%r15d
	testl %r15d,%r15d
	jz callback_2
L_337407:
	movq $0x2203,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb 0x30(%rbp),%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x21EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x31(%rbp),%r10d
	movzbl %r14b,%r9d
	shll $0x8,%r9d
	orl %r9d,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_337408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x496B
L_337353:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	cmpq $0x1,0x48(%rbp)
	jne L_336544
L_337354:
	movq %r14,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_337355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incNear_1
.p2align 0x4
.long 0x4972
L_337114:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_337115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x497A
L_337051:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_337052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x497F
L_336927:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movb $0x1,0xA8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_336928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_0
.p2align 0x4
.long 0x497A
L_336863:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_336864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4972
L_336769:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_336770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xF2C
L_337787:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517372
L_337788:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337789:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517371
.p2align 0x4,,0x7
L_337790:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517370
L_337791:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337789
.p2align 0x4
L_517370:
L_337792:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517371:
L_337793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337794
.p2align 0x4
.long 0x657
L_337794:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337790
.p2align 0x4
L_517372:
L_337795:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336509
.p2align 0x4
.long 0xF2C
L_337764:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517375
L_337765:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337766:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517374
.p2align 0x4,,0x7
L_337767:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517373
L_337768:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337766
.p2align 0x4
L_517373:
L_337769:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517374:
L_337770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337771
.p2align 0x4
.long 0x657
L_337771:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337767
.p2align 0x4
L_517375:
L_337772:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336509
.p2align 0x4
.long 0xF2C
L_337741:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517378
L_337742:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337743:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517377
.p2align 0x4,,0x7
L_337744:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517376
L_337745:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337743
.p2align 0x4
L_517376:
L_337746:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517377:
L_337747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337748
.p2align 0x4
.long 0x657
L_337748:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337744
.p2align 0x4
L_517378:
L_337749:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336509
.p2align 0x4
.long 0xF2C
L_337454:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517381
L_337455:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337456:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517380
.p2align 0x4,,0x7
L_337457:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517379
L_337458:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337456
.p2align 0x4
L_517379:
L_337459:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517380:
L_337460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337461
.p2align 0x4
.long 0x657
L_337461:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337457
.p2align 0x4
L_517381:
L_337462:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336509
.p2align 0x4
.long 0xF2C
L_337431:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517384
L_337432:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337433:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517383
.p2align 0x4,,0x7
L_337434:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517382
L_337435:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337433
.p2align 0x4
L_517382:
L_337436:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517383:
L_337437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337438
.p2align 0x4
.long 0x657
L_337438:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337434
.p2align 0x4
L_517384:
L_337439:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336509
.p2align 0x4
.long 0xF2C
L_337408:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517387
L_337409:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_337410:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517386
.p2align 0x4,,0x7
L_337411:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517385
L_337412:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337410
.p2align 0x4
L_517385:
L_337413:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517386:
L_337414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337415
.p2align 0x4
.long 0x657
L_337415:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337411
.p2align 0x4
L_517387:
L_337416:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_336509
.p2align 0x4
.long 0xF2C
L_337355:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337356
L_337357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337358
.p2align 0x4
.long 0x53F
L_337358:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_337356:
	movq $0x2277,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
.long 0x4973
L_337115:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_337116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xFC4
L_337052:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337053
L_337069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_337070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337070
.p2align 0x4
.long 0x1241
L_337070:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_337053:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (immediate_96+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4980
L_336928:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movb 0x4C(%rbp),%r14b
	movb %r14b,0xA8(%rbp)
	movb $0x1,0xA9(%rbp)
	movq $0x1,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_1
.p2align 0x4
.long 0xFC4
L_336864:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336865
L_336881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_336882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336882
.p2align 0x4
.long 0x1241
L_336882:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_336865:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (immediate_92+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4973
L_336770:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_336771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4974
L_337116:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337117
L_337132:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_337133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337133
.p2align 0x4
.long 0x4977
L_337133:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_337117:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (immediate_97+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x497B
immediate_96:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337054
L_337067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_337068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337068
.p2align 0x4
.long 0x497C
L_337068:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_337054:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x221F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movb $0x5,%r15b
	movzbl %r15b,%r13d
	movzbl 0x4C(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_337055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4981
L_336929:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336930
L_336992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336993
.p2align 0x4
.long 0x498E
L_336993:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336930:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movb 0x4C(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_336985
	cmpb $0x2,%r15b
	je L_517397
	cmpb $0x3,%r15b
	je L_517396
	cmpb $0x6,%r15b
	je L_517395
	cmpb $0x7,%r15b
	je L_517394
L_336932:
	movl $0x4,%ecx
L_336933:
	imull $0x8,%ecx
	movl %ecx,0x30(%rbp)
	jo L_336511
L_336934:
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
L_517394:
L_336991:
	movl $0x1,%ecx
	jmp L_336933
.p2align 0x4
L_517395:
L_336985:
	movl $0x2,%ecx
	jmp L_336933
.p2align 0x4
L_517396:
L_336987:
	movl $0x8,%ecx
	jmp L_336933
.p2align 0x4
L_517397:
L_336986:
	movl $0xA,%ecx
	jmp L_336933
.p2align 0x4
.long 0x497B
immediate_92:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336866
L_336879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_336880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336880
.p2align 0x4
.long 0x497C
L_336880:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_336866:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x221F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movb $0x2,%r15b
	movzbl %r15b,%r13d
	movzbl 0x4C(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x227F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_336867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_11
.p2align 0x4
.long 0x4974
L_336771:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336772
L_336787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_336788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336788
.p2align 0x4
.long 0x4977
L_336788:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_336772:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (immediate_91+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4975
immediate_97:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337118
L_337130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_337131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337131
.p2align 0x4
.long 0x4976
L_337131:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_337118:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x221F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movb $0x5,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movl 0x70(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_517405
L_337119:
	movq 0x40(%rbp),%r14
L_337120:
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_517404
L_337121:
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_337122:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517403
.p2align 0x4,,0x7
L_337123:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517402
L_337124:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337122
.p2align 0x4
L_517402:
L_337125:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517403:
L_337126:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337127
.p2align 0x4
.long 0x657
L_337127:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337123
.p2align 0x4
L_517404:
L_337128:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r13,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517405:
L_337129:
	movq $0x2221,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	jmp L_337120
.p2align 0x4
.long 0x585
L_337055:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_337056
L_337065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_337066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337066
.p2align 0x4
.long 0x11CC
L_337066:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_337056:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517409
L_337057:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_337058:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517408
.p2align 0x4,,0x7
L_337059:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517407
L_337060:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_337058
.p2align 0x4
L_517407:
L_337061:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517408:
L_337062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_337063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_337063
.p2align 0x4
.long 0x657
L_337063:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_337059
.p2align 0x4
L_517409:
L_337064:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
.long 0x4982
L_336935:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336936
L_336982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336983
.p2align 0x4
.long 0x498D
L_336983:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336936:
	movl 0x98(%rbp),%r15d
	testl %r15d,%r15d
	jz L_336938
L_336981:
	movq $0x2221,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movzbl 0x4C(%rbp),%r14d
	shll $0x8,%r14d
	orl %r14d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
L_336938:
	movq $0x2229,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x6,%r14b
	movzbl %r14b,%r13d
	movzbl 0x4C(%rbp),%r14d
	shll $0x8,%r14d
	orl %r14d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2255,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movslq 0x9C(%rbp),%r11
	shlq $0x1,%r11
	orq $0x1,%r11
	movq %r11,0x70(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x78(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x88(%rbp)
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x585
L_336867:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336868
L_336877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_336878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336878
.p2align 0x4
.long 0x11CC
L_336878:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_336868:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_517415
L_336869:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_336870:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517414
.p2align 0x4,,0x7
L_336871:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517413
L_336872:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336870
.p2align 0x4
L_517413:
L_336873:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517414:
L_336874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336875
.p2align 0x4
.long 0x657
L_336875:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336871
.p2align 0x4
L_517415:
L_336876:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
.long 0x4975
immediate_91:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336773
L_336785:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_336786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336786
.p2align 0x4
.long 0x4976
L_336786:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_336773:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x221F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movb $0x5,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movl 0x70(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_517420
L_336774:
	movq 0x40(%rbp),%r14
L_336775:
	movq $0x227B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_517419
L_336776:
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_336777:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517418
.p2align 0x4,,0x7
L_336778:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517417
L_336779:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336777
.p2align 0x4
L_517417:
L_336780:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517418:
L_336781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336782
.p2align 0x4
.long 0x657
L_336782:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336778
.p2align 0x4
L_517419:
L_336783:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r13,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517420:
L_336784:
	movq $0x2221,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	jmp L_336775
.p2align 0x4
.long 0x4983
L_336939:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0xA8(%rbp)
	movq $0x3,0xB0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4983
L_336940:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4983
L_336941:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336942
L_336979:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336980
.p2align 0x4
.long 0x498C
L_336980:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336942:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xA8(%rbp)
	addq $0x10,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (immediate_93+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4983
immediate_93:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336943
L_336977:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336978
.p2align 0x4
.long 0x498C
L_336978:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336943:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x221F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movb $0x3,%r15b
	movzbl %r15b,%r13d
	movzbl 0x4C(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x30(%rbp),%r14d
	cmpl %r14d,0x9C(%rbp)
	jl L_517427
L_336944:
	movq %r15,0x10(%rbp)
L_336945:
	cmpl $0x1,0x9C(%rbp)
	jg L_517426
L_336946:
	movq 0x10(%rbp),%r15
L_336947:
	movq $0x2211,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movzbl 0x4C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_517425
L_336948:
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_336949:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_517424
.p2align 0x4,,0x7
L_336950:
	movq $0x227B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_517423
L_336951:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_336949
.p2align 0x4
L_517423:
L_336952:
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517424:
L_336953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_336954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336954
.p2align 0x4
.long 0x657
L_336954:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_336950
.p2align 0x4
L_517425:
L_336955:
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_336509
.p2align 0x4
L_517426:
L_336956:
	movl 0x9C(%rbp),%r15d
	decl %r15d
	movslq %r15d,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x30(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_336957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_517427:
L_336966:
	movl 0x30(%rbp),%r14d
	subl 0x9C(%rbp),%r14d
	jo L_336511
L_336967:
	movslq %r14d,%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0x10(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4984
L_336957:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x98(%rbp)
	movq $0x3,0xA0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_336958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x498A
L_336968:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0xA8(%rbp)
	movq $0x3,0xB0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4985
L_336958:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_336959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x498A
L_336969:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_336970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4986
L_336959:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336960
L_336964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_336965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336965
.p2align 0x4
.long 0x4989
L_336965:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_336960:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x90(%rbp)
	addq $0x10,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (immediate_94+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x498A
L_336970:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336971
L_336975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336976
.p2align 0x4
.long 0x498B
L_336976:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336971:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xA8(%rbp)
	addq $0x10,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (immediate_95+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x4987
immediate_94:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336961
L_336962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_336963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336963
.p2align 0x4
.long 0x4988
L_336963:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_336961:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x221F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movb $0x3,%r13b
	movzbl %r13b,%r11d
	movzbl 0x4C(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_336947
.p2align 0x4
.long 0x498A
immediate_95:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_336972
L_336973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_336974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_336974
.p2align 0x4
.long 0x498B
L_336974:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_336972:
	movq $0x21D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x221F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movb $0x2,%r15b
	movzbl %r15b,%r13d
	movzbl 0x4C(%rbp),%r15d
	shll $0x8,%r15d
	orl %r15d,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x2255,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x227B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x10(%rbp)
	jmp L_336945
