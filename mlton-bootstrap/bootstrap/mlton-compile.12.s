/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:08:48 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl layout_25
.hidden layout_25
layout_25:
L_40156:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_40293
L_40157:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_389211
L_40158:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,%r11
	andq $0x3,%r11
	cmpq $0x1,%r11
	je L_389194
	cmpq $0x2,%r11
	je L_389193
L_40159:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0x115F,%r11
	je L_389185
	cmpq $0x1160,%r11
	je L_389183
	cmpq $0x1161,%r11
	je L_389182
L_40160:
	movq %r13,0x8(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp layout_35
.p2align 0x4
L_389182:
L_40261:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xE720)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_40262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389183:
L_40253:
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_389184
L_40254:
	movq %r13,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_40255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_389184:
L_40256:
	movq %r13,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_40257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_389185:
L_40161:
	movq 0x0(%r15),%r14
	movw 0x8(%r14),%r13w
	movw %r13w,0x8(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0xC(%rbp)
	movq 0x10(%r14),%r13
	movl 0x4(%r14),%r11d
	movl %r11d,0x18(%rbp)
	cmpq $0x1,%r13
	je L_389186
L_40162:
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_40163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_36
.p2align 0x4
L_389186:
L_40250:
	movl 0x18(%rbp),%r14d
	andl $0x1,%r14d
	jnz L_389192
L_40251:
	movq (globalObjptr+0x9D0)(%rip),%r15
L_40166:
	movl 0xC(%rbp),%ecx
	andl $0x1,%ecx
	jnz L_389191
L_40167:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
L_40168:
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x0(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40169:
	addl 0x0(%r14),%ecx
	movl %ecx,0x8(%rbp)
	jo L_389190
L_40171:
	cmpq $0x1,%r15
	je L_389187
L_40172:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_40169
.p2align 0x4
L_389187:
L_40173:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40174
L_40177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_40178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40178
.p2align 0x4
.long 0x457
L_40178:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_40174:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jz L_389188
L_40175:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389188:
L_40176:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389190:
L_40170:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389191:
L_40179:
	movq %r15,0x10(%rbp)
	movl 0xC(%rbp),%r15d
	shrl $0x1,%r15d
	movw %r15w,%r14w
	movw %r14w,0xA(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x18(%rbp)
L_40180:
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_40181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389192:
L_40252:
	movl 0x18(%rbp),%r14d
	shrl $0x1,%r14d
	movw %r14w,%r15w
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x10(%rbp)
L_40241:
	movw %r15w,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_40242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_37
.p2align 0x4
L_389193:
L_40292:
	shrq $0x2,%r15
	movw %r15w,%r14w
	movw %r14w,0x0(%rbp)
	jmp layout_37
.p2align 0x4
L_389194:
L_40275:
	shrq $0x2,%r15
	movw %r15w,%r14w
	movb %r14b,%r15b
	movzbq %r15b,%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_389195
	leaq jumpTable_59(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_59:
.quad L_389210,L_389209,L_389208,L_389207,L_389206,L_389205,L_389204,L_389203,L_389202,L_389201,L_389200,L_389199,L_389198,L_389197,L_389196
.text
.p2align 0x4
L_389195:
L_40276:
	movq (globalObjptr+0xE728)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389196:
L_40291:
	movq (globalObjptr+0xE7A0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389197:
L_40290:
	movq (globalObjptr+0xE798)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389198:
L_40289:
	movq (globalObjptr+0xE790)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389199:
L_40288:
	movq (globalObjptr+0xE788)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389200:
L_40287:
	movq (globalObjptr+0xE780)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389201:
L_40286:
	movq (globalObjptr+0xE778)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389202:
L_40285:
	movq (globalObjptr+0xE770)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389203:
L_40284:
	movq (globalObjptr+0xE768)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389204:
L_40283:
	movq (globalObjptr+0xE760)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389205:
L_40282:
	movq (globalObjptr+0xE758)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389206:
L_40281:
	movq (globalObjptr+0xE750)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389207:
L_40280:
	movq (globalObjptr+0xE748)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389208:
L_40279:
	movq (globalObjptr+0xE740)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389209:
L_40278:
	movq (globalObjptr+0xE738)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389210:
L_40277:
	movq (globalObjptr+0xE730)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389211:
L_40293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_40294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40294
.p2align 0x4
.long 0x45F
L_40294:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_40158
.p2align 0x4
.long 0x4E5
L_40262:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_40263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_36
.p2align 0x4
.long 0x1
L_40255:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_40257:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40258
L_40259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_40260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40260
.p2align 0x4
.long 0x451
L_40260:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_40258:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_40255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x473
L_40163:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40164
L_40248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_40249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40249
.p2align 0x4
.long 0x4A4
L_40249:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_40164:
	movl 0x18(%rbp),%r14d
	andl $0x1,%r14d
	jnz L_389214
L_40165:
	movq 0x10(%rbp),%r15
	jmp L_40166
.p2align 0x4
L_389214:
L_40240:
	movl 0x18(%rbp),%r14d
	shrl $0x1,%r14d
	movw %r14w,%r15w
	jmp L_40241
.p2align 0x4
.long 0x490
L_40181:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_40182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_37
.p2align 0x4
.long 0x2B
L_40242:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40243
L_40246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_40247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40247
.p2align 0x4
.long 0x2C
L_40247:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_40243:
	movl 0xC(%rbp),%ecx
	andl $0x1,%ecx
	jnz L_389221
L_40244:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_40190:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movw 0x8(%rbp),%r14w
	andw $0x1,%r14w
	jnz L_389220
L_40191:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_40192:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_40193:
	addl 0x0(%r14),%ecx
	movl %ecx,0x18(%rbp)
	jo L_40170
L_40194:
	cmpq $0x1,%r15
	je L_389216
L_40195:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_40193
.p2align 0x4
L_389216:
L_40196:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40197
L_40214:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_40215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40215
.p2align 0x4
.long 0x8B1
L_40215:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_40197:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_389217
L_40198:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
paren_16:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_40199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389217:
L_40213:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp paren_16
.p2align 0x4
L_389220:
L_40216:
	movw 0x8(%rbp),%r15w
	shrw $0x1,%r15w
	movb %r15b,0xA(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_40217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389221:
L_40245:
	movl 0xC(%rbp),%r15d
	shrl $0x1,%r15d
	movw %r15w,%r14w
	movw %r14w,0xA(%rbp)
	jmp L_40180
.p2align 0x4
.long 0x48F
L_40263:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40264
L_40273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_40274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40274
.p2align 0x4
.long 0x5E5
L_40274:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_40264:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40265:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_40170
L_40266:
	cmpq $0x1,%r14
	je L_389223
L_40267:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40265
.p2align 0x4
L_389223:
L_40268:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40269
L_40271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_40272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40272
.p2align 0x4
.long 0x5E4
L_40272:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_40269:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_40176
L_40270:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8A9
L_40182:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40183
L_40238:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_40239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40239
.p2align 0x4
.long 0x51F
L_40239:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_40183:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40184:
	addl 0x0(%r15),%ecx
	movl %ecx,0xC(%rbp)
	jo L_40170
L_40185:
	cmpq $0x1,%r14
	je L_389228
L_40186:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40184
.p2align 0x4
L_389228:
L_40187:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40188
L_40236:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_40237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40237
.p2align 0x4
.long 0x65D
L_40237:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_40188:
	movl 0xC(%rbp),%ecx
	testl %ecx,%ecx
	jz L_389229
L_40189:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_40190
.p2align 0x4
L_389229:
L_40235:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_40190
.p2align 0x4
.long 0x490
L_40199:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_40200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8A9
L_40217:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb 0xA(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_389235
	cmpb $0x2,%r15b
	je L_389234
	cmpb $0x3,%r15b
	je L_389233
L_40218:
	movq (globalObjptr+0xD660)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_40219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389233:
L_40234:
	movq (globalObjptr+0xD7F0)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_40219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389234:
L_40233:
	movq (globalObjptr+0xD800)(%rip),%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_40219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389235:
L_40232:
	movq (globalObjptr+0xD668)(%rip),%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_40219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8A9
L_40200:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40201
L_40211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_40212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40212
.p2align 0x4
.long 0x51F
L_40212:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_40201:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40202:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_40170
L_40203:
	cmpq $0x1,%r14
	je L_389236
L_40204:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40202
.p2align 0x4
L_389236:
L_40205:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40206
L_40209:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_40210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40210
.p2align 0x4
.long 0xA2D
L_40210:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_40206:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_389237
L_40207:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	jmp L_40168
.p2align 0x4
L_389237:
L_40208:
	movq $0x1,%r15
	xorl %r13d,%r13d
	movq 0x10(%rbp),%r14
	xchgl %r13d,%ecx
	jmp L_40168
.p2align 0x4
.long 0x4A6
L_40219:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40220
L_40230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_40231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40231
.p2align 0x4
.long 0x720
L_40231:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_40220:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40221:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_40170
L_40222:
	cmpq $0x1,%r14
	je L_389241
L_40223:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40221
.p2align 0x4
L_389241:
L_40224:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40225
L_40228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_40229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40229
.p2align 0x4
.long 0x64C
L_40229:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_40225:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_389242
L_40226:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_40192
.p2align 0x4
L_389242:
L_40227:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_40192
.text
.p2align 0x4
.globl layout_35
.hidden layout_35
layout_35:
L_40295:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_40296
L_40394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_40395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40395
.p2align 0x4
.long 0x45F
L_40395:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_40296:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	movb %r15b,0x10(%rbp)
	movb 0x1(%r13),%r15b
	movb %r15b,0x11(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%r13),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xE7A8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_40297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x836
L_40297:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb 0x10(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_389251
	cmpb $0x2,%r15b
	je L_389250
	cmpb $0x3,%r15b
	je L_389249
	cmpb $0x4,%r15b
	je L_389248
	cmpb $0x5,%r15b
	je L_389247
L_40298:
	movq (globalObjptr+0xE7B0)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_40299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389247:
L_40393:
	movq (globalObjptr+0xE808)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_40299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389248:
L_40392:
	movq (globalObjptr+0xE800)(%rip),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_40299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389249:
L_40391:
	movq (globalObjptr+0xE7F8)(%rip),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_40299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389250:
L_40390:
	movq (globalObjptr+0xE7F0)(%rip),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_40299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389251:
L_40389:
	movq (globalObjptr+0xE7E8)(%rip),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_40299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA2E
L_40299:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xE7B8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_40300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA2F
L_40300:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_40301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA30
L_40301:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xE7C0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_40302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA31
L_40302:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_389253
L_40303:
	cmpq $0x1,0x20(%rbp)
	je L_389252
L_40304:
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_40305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_36
.p2align 0x4
L_389252:
L_40384:
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_40385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_36
.p2align 0x4
L_389253:
L_40386:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_389254
L_40387:
	movq %r14,0x68(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_40385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
L_389254:
L_40388:
	movq (globalObjptr+0xD808)(%rip),%r13
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA32
L_40305:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE7C8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA41
L_40385:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
L_40316:
	movq (globalObjptr+0xE7D0)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA33
L_40306:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_40307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
.long 0xA32
L_40317:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_389256
L_40318:
	cmpq $0x1,0x18(%rbp)
	je L_389255
L_40319:
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_40320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_36
.p2align 0x4
L_389255:
L_40356:
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_40357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_36
.p2align 0x4
L_389256:
L_40358:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_389257
L_40359:
	movq %r14,0x68(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_40360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
L_389257:
L_40378:
	movq (globalObjptr+0xD808)(%rip),%r13
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA34
L_40307:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40308
L_40382:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_40383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40383
.p2align 0x4
.long 0xA40
L_40383:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_40308:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40309:
	addl 0x0(%r15),%ecx
	movl %ecx,0x14(%rbp)
	jo L_389261
L_40311:
	cmpq $0x1,%r14
	je L_389258
L_40312:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40309
.p2align 0x4
L_389258:
L_40313:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40314
L_40380:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_40381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40381
.p2align 0x4
.long 0xA3F
L_40381:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_40314:
	movl 0x14(%rbp),%r15d
	testl %r15d,%r15d
	jz L_389259
L_40315:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x20(%rbp)
	jmp L_40316
.p2align 0x4
L_389259:
L_40379:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp L_40316
.p2align 0x4
L_389261:
L_40310:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA35
L_40320:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xE7D8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA3C
L_40357:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
L_40334:
	movq (globalObjptr+0xE7E0)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA3C
L_40360:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xCD38)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA33
L_40321:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_40322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
.long 0x913
L_40335:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40336
L_40346:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_40347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40347
.p2align 0x4
.long 0x802
L_40347:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_40336:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40337:
	addl 0x0(%r15),%ecx
	movl %ecx,0x70(%rbp)
	jo L_40310
L_40338:
	cmpq $0x1,%r14
	je L_389263
L_40339:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40337
.p2align 0x4
L_389263:
L_40340:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40341
L_40344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_40345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40345
.p2align 0x4
.long 0xA39
L_40345:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_40341:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jz L_389264
L_40342:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389264:
L_40343:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA3D
L_40361:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb 0x11(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_389270
	cmpb $0x2,%r15b
	je L_389269
	cmpb $0x3,%r15b
	je L_389268
L_40362:
	movq (globalObjptr+0xD660)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389268:
L_40377:
	movq (globalObjptr+0xD7F0)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389269:
L_40376:
	movq (globalObjptr+0xD800)(%rip),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389270:
L_40375:
	movq (globalObjptr+0xD668)(%rip),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA36
L_40322:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xCD38)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_40323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x912
L_40363:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40364
L_40373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_40374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40374
.p2align 0x4
.long 0x91D
L_40374:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_40364:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40365:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_40310
L_40366:
	cmpq $0x1,%r14
	je L_389271
L_40367:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40365
.p2align 0x4
L_389271:
L_40368:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40369
L_40371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_40372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40372
.p2align 0x4
.long 0xA3E
L_40372:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_40369:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_389272
L_40370:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x28(%rbp)
	jmp L_40334
.p2align 0x4
L_389272:
L_40348:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_40334
.p2align 0x4
.long 0x998
L_40323:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movb 0x11(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_389278
	cmpb $0x2,%r15b
	je L_389277
	cmpb $0x3,%r15b
	je L_389276
L_40324:
	movq (globalObjptr+0xD660)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_40325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389276:
L_40355:
	movq (globalObjptr+0xD7F0)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_40325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389277:
L_40354:
	movq (globalObjptr+0xD800)(%rip),%r14
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_40325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389278:
L_40353:
	movq (globalObjptr+0xD668)(%rip),%r14
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_40325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA37
L_40325:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_40326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA38
L_40326:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40327
L_40351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_40352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40352
.p2align 0x4
.long 0xA3B
L_40352:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_40327:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_40328:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_40310
L_40329:
	cmpq $0x1,%r14
	je L_389279
L_40330:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40328
.p2align 0x4
L_389279:
L_40331:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40332
L_40349:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_40350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40350
.p2align 0x4
.long 0xA3A
L_40350:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_40332:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_40348
L_40333:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x28(%rbp)
	jmp L_40334
.text
.p2align 0x4
.globl layout_36
.hidden layout_36
layout_36:
L_40396:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_40397
L_40455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_40456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40456
.p2align 0x4
.long 0x45F
L_40456:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_40397:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1159,%r15
	je L_389286
	cmpq $0x115A,%r15
	je L_389285
L_40398:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_389284
L_40399:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_40400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_389284:
L_40436:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_40437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_389285:
L_40449:
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_40450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_389286:
L_40441:
	movq 0x0(%r13),%r15
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_389287
L_40442:
	movq %r15,0x8(%rbp)
	movq %r13,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_40443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_389287:
L_40444:
	movq %r15,0x8(%rbp)
	movq %r13,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_40445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x490
L_40400:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_40401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x490
L_40437:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40438
L_40439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_40440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40440
.p2align 0x4
.long 0x4B1
L_40440:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_40438:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_40400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_40450:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40451
L_40453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_40454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40454
.p2align 0x4
.long 0x451
L_40454:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_40451:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDEA0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_40452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_40443:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_40445:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40446
L_40447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_40448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40448
.p2align 0x4
.long 0x451
L_40448:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_40446:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_40443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x490
L_40401:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xE7C8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_40402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_40452:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8A9
L_40402:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_40403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x5ED
L_40403:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40404
L_40434:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_40435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40435
.p2align 0x4
.long 0x4FC
L_40435:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_40404:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDEA0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_40405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x5ED
L_40405:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_40406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5ED
L_40406:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40407
L_40432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_40433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40433
.p2align 0x4
.long 0x4FC
L_40433:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_40407:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40408:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_389296
L_40410:
	cmpq $0x1,%r14
	je L_389293
L_40411:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40408
.p2align 0x4
L_389293:
L_40412:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40413
L_40430:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_40431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40431
.p2align 0x4
.long 0x51B
L_40431:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_40413:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_389294
L_40414:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
paren_17:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x0(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_40415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389294:
L_40429:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp paren_17
.p2align 0x4
L_389296:
L_40409:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_40415:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_40416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_40416:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40417
L_40427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_40428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40428
.p2align 0x4
.long 0x45B
L_40428:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_40417:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40418:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_40409
L_40419:
	cmpq $0x1,%r14
	je L_389298
L_40420:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40418
.p2align 0x4
L_389298:
L_40421:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40422
L_40425:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_40426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40426
.p2align 0x4
.long 0x49C
L_40426:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_40422:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_389299
L_40423:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389299:
L_40424:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_37
.hidden layout_37
layout_37:
L_40457:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_40551
L_40458:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_389371
L_40459:
	movw 0x0(%rbp),%r15w
	movb %r15b,%r14b
	shrw $0x8,%r15w
	movb %r15b,%r13b
	movzbq %r14b,%rax
	subq $0x1,%rax
	cmpq $0xF,%rax
	ja L_389303
	leaq jumpTable_60(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_60:
.quad L_389367,L_389363,L_389359,L_389355,L_389351,L_389347,L_389343,L_389339,L_389335,L_389331,L_389327,L_389323,L_389319,L_389315,L_389311,L_389307
.text
.p2align 0x4
L_389303:
L_40460:
	cmpb $0x1,%r13b
	je L_389306
	cmpb $0x2,%r13b
	je L_389305
	cmpb $0x3,%r13b
	je L_389304
L_40461:
	movq (globalObjptr+0xE808)(%rip),%r15
	movq (globalObjptr+0xE810)(%rip),%r14
L_40462:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE818)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_40463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_389304:
L_40466:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE810)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389305:
L_40465:
	movq (globalObjptr+0xE7B0)(%rip),%r15
	movq (globalObjptr+0xE810)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389306:
L_40464:
	movq (globalObjptr+0xE800)(%rip),%r15
	movq (globalObjptr+0xE810)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389307:
L_40546:
	cmpb $0x1,%r13b
	je L_389310
	cmpb $0x2,%r13b
	je L_389309
	cmpb $0x3,%r13b
	je L_389308
L_40547:
	movq (globalObjptr+0xE7F8)(%rip),%r15
	movq (globalObjptr+0xE818)(%rip),%r13
	movq (globalObjptr+0xDD38)(%rip),%r14
L_40531:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	addq $0x8,%rbp
	leaq (L_40532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_389308:
L_40550:
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq (globalObjptr+0xE870)(%rip),%r13
	movq (globalObjptr+0xDD38)(%rip),%r14
	jmp L_40531
.p2align 0x4
L_389309:
L_40549:
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq (globalObjptr+0xE868)(%rip),%r13
	movq (globalObjptr+0xDD38)(%rip),%r14
	jmp L_40531
.p2align 0x4
L_389310:
L_40548:
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq (globalObjptr+0xE818)(%rip),%r13
	movq (globalObjptr+0xDD38)(%rip),%r14
	jmp L_40531
.p2align 0x4
L_389311:
L_40541:
	cmpb $0x1,%r13b
	je L_389314
	cmpb $0x2,%r13b
	je L_389313
	cmpb $0x3,%r13b
	je L_389312
L_40542:
	movq (globalObjptr+0xE7F8)(%rip),%r15
	movq (globalObjptr+0xE818)(%rip),%r13
	movq (globalObjptr+0xE808)(%rip),%r14
	jmp L_40531
.p2align 0x4
L_389312:
L_40545:
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq (globalObjptr+0xE870)(%rip),%r13
	movq (globalObjptr+0xE808)(%rip),%r14
	jmp L_40531
.p2align 0x4
L_389313:
L_40544:
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq (globalObjptr+0xE868)(%rip),%r13
	movq (globalObjptr+0xE808)(%rip),%r14
	jmp L_40531
.p2align 0x4
L_389314:
L_40543:
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq (globalObjptr+0xE818)(%rip),%r13
	movq (globalObjptr+0xE808)(%rip),%r14
	jmp L_40531
.p2align 0x4
L_389315:
L_40536:
	cmpb $0x1,%r13b
	je L_389318
	cmpb $0x2,%r13b
	je L_389317
	cmpb $0x3,%r13b
	je L_389316
L_40537:
	movq (globalObjptr+0xE7F8)(%rip),%r15
	movq (globalObjptr+0xE818)(%rip),%r13
	movq (globalObjptr+0xD540)(%rip),%r14
	jmp L_40531
.p2align 0x4
L_389316:
L_40540:
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq (globalObjptr+0xE870)(%rip),%r13
	movq (globalObjptr+0xD540)(%rip),%r14
	jmp L_40531
.p2align 0x4
L_389317:
L_40539:
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq (globalObjptr+0xE868)(%rip),%r13
	movq (globalObjptr+0xD540)(%rip),%r14
	jmp L_40531
.p2align 0x4
L_389318:
L_40538:
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq (globalObjptr+0xE818)(%rip),%r13
	movq (globalObjptr+0xD540)(%rip),%r14
	jmp L_40531
.p2align 0x4
L_389319:
L_40529:
	cmpb $0x1,%r13b
	je L_389322
	cmpb $0x2,%r13b
	je L_389321
	cmpb $0x3,%r13b
	je L_389320
L_40530:
	movq (globalObjptr+0xE7F8)(%rip),%r15
	movq (globalObjptr+0xE818)(%rip),%r13
	movq (globalObjptr+0xE7B0)(%rip),%r14
	jmp L_40531
.p2align 0x4
L_389320:
L_40535:
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq (globalObjptr+0xE870)(%rip),%r13
	movq (globalObjptr+0xE7B0)(%rip),%r14
	jmp L_40531
.p2align 0x4
L_389321:
L_40534:
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq (globalObjptr+0xE868)(%rip),%r13
	movq (globalObjptr+0xE7B0)(%rip),%r14
	jmp L_40531
.p2align 0x4
L_389322:
L_40533:
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq (globalObjptr+0xE818)(%rip),%r13
	movq (globalObjptr+0xE7B0)(%rip),%r14
	jmp L_40531
.p2align 0x4
L_389323:
L_40524:
	cmpb $0x1,%r13b
	je L_389326
	cmpb $0x2,%r13b
	je L_389325
	cmpb $0x3,%r13b
	je L_389324
L_40525:
	movq (globalObjptr+0xE7F8)(%rip),%r15
	movq (globalObjptr+0xE818)(%rip),%r13
	movq (globalObjptr+0xE888)(%rip),%r14
L_40509:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq $0x1,0x8(%r11)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	addq $0x8,%rbp
	leaq (L_40510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_389324:
L_40528:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE870)(%rip),%r13
	movq (globalObjptr+0xE888)(%rip),%r14
	jmp L_40509
.p2align 0x4
L_389325:
L_40527:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE868)(%rip),%r13
	movq (globalObjptr+0xE888)(%rip),%r14
	jmp L_40509
.p2align 0x4
L_389326:
L_40526:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE818)(%rip),%r13
	movq (globalObjptr+0xE888)(%rip),%r14
	jmp L_40509
.p2align 0x4
L_389327:
L_40519:
	cmpb $0x1,%r13b
	je L_389330
	cmpb $0x2,%r13b
	je L_389329
	cmpb $0x3,%r13b
	je L_389328
L_40520:
	movq (globalObjptr+0xE7F8)(%rip),%r15
	movq (globalObjptr+0xE818)(%rip),%r13
	movq (globalObjptr+0xE880)(%rip),%r14
	jmp L_40509
.p2align 0x4
L_389328:
L_40523:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE870)(%rip),%r13
	movq (globalObjptr+0xE880)(%rip),%r14
	jmp L_40509
.p2align 0x4
L_389329:
L_40522:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE868)(%rip),%r13
	movq (globalObjptr+0xE880)(%rip),%r14
	jmp L_40509
.p2align 0x4
L_389330:
L_40521:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE818)(%rip),%r13
	movq (globalObjptr+0xE880)(%rip),%r14
	jmp L_40509
.p2align 0x4
L_389331:
L_40514:
	cmpb $0x1,%r13b
	je L_389334
	cmpb $0x2,%r13b
	je L_389333
	cmpb $0x3,%r13b
	je L_389332
L_40515:
	movq (globalObjptr+0xE7F8)(%rip),%r15
	movq (globalObjptr+0xE818)(%rip),%r13
	movq (globalObjptr+0xE878)(%rip),%r14
	jmp L_40509
.p2align 0x4
L_389332:
L_40518:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE870)(%rip),%r13
	movq (globalObjptr+0xE878)(%rip),%r14
	jmp L_40509
.p2align 0x4
L_389333:
L_40517:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE868)(%rip),%r13
	movq (globalObjptr+0xE878)(%rip),%r14
	jmp L_40509
.p2align 0x4
L_389334:
L_40516:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE818)(%rip),%r13
	movq (globalObjptr+0xE878)(%rip),%r14
	jmp L_40509
.p2align 0x4
L_389335:
L_40507:
	cmpb $0x1,%r13b
	je L_389338
	cmpb $0x2,%r13b
	je L_389337
	cmpb $0x3,%r13b
	je L_389336
L_40508:
	movq (globalObjptr+0xE7F8)(%rip),%r15
	movq (globalObjptr+0xE818)(%rip),%r13
	movq (globalObjptr+0xE860)(%rip),%r14
	jmp L_40509
.p2align 0x4
L_389336:
L_40513:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE870)(%rip),%r13
	movq (globalObjptr+0xE860)(%rip),%r14
	jmp L_40509
.p2align 0x4
L_389337:
L_40512:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE868)(%rip),%r13
	movq (globalObjptr+0xE860)(%rip),%r14
	jmp L_40509
.p2align 0x4
L_389338:
L_40511:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE818)(%rip),%r13
	movq (globalObjptr+0xE860)(%rip),%r14
	jmp L_40509
.p2align 0x4
L_389339:
L_40502:
	cmpb $0x1,%r13b
	je L_389342
	cmpb $0x2,%r13b
	je L_389341
	cmpb $0x3,%r13b
	je L_389340
L_40503:
	movq (globalObjptr+0xE808)(%rip),%r15
	movq (globalObjptr+0xE858)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389340:
L_40506:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE858)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389341:
L_40505:
	movq (globalObjptr+0xE7B0)(%rip),%r15
	movq (globalObjptr+0xE858)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389342:
L_40504:
	movq (globalObjptr+0xE800)(%rip),%r15
	movq (globalObjptr+0xE858)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389343:
L_40497:
	cmpb $0x1,%r13b
	je L_389346
	cmpb $0x2,%r13b
	je L_389345
	cmpb $0x3,%r13b
	je L_389344
L_40498:
	movq (globalObjptr+0xE808)(%rip),%r15
	movq (globalObjptr+0xE850)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389344:
L_40501:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE850)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389345:
L_40500:
	movq (globalObjptr+0xE7B0)(%rip),%r15
	movq (globalObjptr+0xE850)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389346:
L_40499:
	movq (globalObjptr+0xE800)(%rip),%r15
	movq (globalObjptr+0xE850)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389347:
L_40492:
	cmpb $0x1,%r13b
	je L_389350
	cmpb $0x2,%r13b
	je L_389349
	cmpb $0x3,%r13b
	je L_389348
L_40493:
	movq (globalObjptr+0xE808)(%rip),%r15
	movq (globalObjptr+0xE848)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389348:
L_40496:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE848)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389349:
L_40495:
	movq (globalObjptr+0xE7B0)(%rip),%r15
	movq (globalObjptr+0xE848)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389350:
L_40494:
	movq (globalObjptr+0xE800)(%rip),%r15
	movq (globalObjptr+0xE848)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389351:
L_40487:
	cmpb $0x1,%r13b
	je L_389354
	cmpb $0x2,%r13b
	je L_389353
	cmpb $0x3,%r13b
	je L_389352
L_40488:
	movq (globalObjptr+0xE808)(%rip),%r15
	movq (globalObjptr+0xE840)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389352:
L_40491:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE840)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389353:
L_40490:
	movq (globalObjptr+0xE7B0)(%rip),%r15
	movq (globalObjptr+0xE840)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389354:
L_40489:
	movq (globalObjptr+0xE800)(%rip),%r15
	movq (globalObjptr+0xE840)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389355:
L_40482:
	cmpb $0x1,%r13b
	je L_389358
	cmpb $0x2,%r13b
	je L_389357
	cmpb $0x3,%r13b
	je L_389356
L_40483:
	movq (globalObjptr+0xE808)(%rip),%r15
	movq (globalObjptr+0xE838)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389356:
L_40486:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE838)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389357:
L_40485:
	movq (globalObjptr+0xE7B0)(%rip),%r15
	movq (globalObjptr+0xE838)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389358:
L_40484:
	movq (globalObjptr+0xE800)(%rip),%r15
	movq (globalObjptr+0xE838)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389359:
L_40477:
	cmpb $0x1,%r13b
	je L_389362
	cmpb $0x2,%r13b
	je L_389361
	cmpb $0x3,%r13b
	je L_389360
L_40478:
	movq (globalObjptr+0xE808)(%rip),%r15
	movq (globalObjptr+0xE830)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389360:
L_40481:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE830)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389361:
L_40480:
	movq (globalObjptr+0xE7B0)(%rip),%r15
	movq (globalObjptr+0xE830)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389362:
L_40479:
	movq (globalObjptr+0xE800)(%rip),%r15
	movq (globalObjptr+0xE830)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389363:
L_40472:
	cmpb $0x1,%r13b
	je L_389366
	cmpb $0x2,%r13b
	je L_389365
	cmpb $0x3,%r13b
	je L_389364
L_40473:
	movq (globalObjptr+0xE808)(%rip),%r15
	movq (globalObjptr+0xE828)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389364:
L_40476:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE828)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389365:
L_40475:
	movq (globalObjptr+0xE7B0)(%rip),%r15
	movq (globalObjptr+0xE828)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389366:
L_40474:
	movq (globalObjptr+0xE800)(%rip),%r15
	movq (globalObjptr+0xE828)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389367:
L_40467:
	cmpb $0x1,%r13b
	je L_389370
	cmpb $0x2,%r13b
	je L_389369
	cmpb $0x3,%r13b
	je L_389368
L_40468:
	movq (globalObjptr+0xE808)(%rip),%r15
	movq (globalObjptr+0xE820)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389368:
L_40471:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq (globalObjptr+0xE820)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389369:
L_40470:
	movq (globalObjptr+0xE7B0)(%rip),%r15
	movq (globalObjptr+0xE820)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389370:
L_40469:
	movq (globalObjptr+0xE800)(%rip),%r15
	movq (globalObjptr+0xE820)(%rip),%r14
	jmp L_40462
.p2align 0x4
L_389371:
L_40551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_40552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40552
.p2align 0x4
.long 0x453
L_40552:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_40459
.p2align 0x4
.long 0x1
L_40463:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_40532:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_40510:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.text
.p2align 0x4
.globl layout_7
.hidden layout_7
layout_7:
L_40553:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_40649
L_40554:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_389382
L_40555:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xF65,%r10
	je L_389381
	cmpq $0xF66,%r10
	je L_389380
L_40556:
	movq 0x10(%r13),%r10
	movq %r10,0x8(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r13),%r9
	movq %r9,0x28(%rbp)
	movq 0x8(%r10),%r11
	movq %r11,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_40613
	cmpq $0x5,%r15
	je L_389378
	cmpq $0x6,%r15
	je L_389376
L_40557:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_40558
L_40609:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_389374
	cmpq $0xF54,%r15
	je L_389373
L_40558:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_40559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_389373:
L_40611:
	movq (globalObjptr+0xDDD8)(%rip),%r15
L_40570:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE890)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_40571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_389374:
L_40610:
	movq (globalObjptr+0xDDD0)(%rip),%r15
	jmp L_40570
.p2align 0x4
L_389376:
L_40615:
	shrq $0x3,%r11
	movb %r11b,%r14b
	testb %r14b,%r14b
	jnz L_389377
L_40616:
	movq (globalObjptr+0xDDE0)(%rip),%r15
	jmp L_40570
.p2align 0x4
L_389377:
L_40617:
	movq (globalObjptr+0xDDE8)(%rip),%r15
	jmp L_40570
.p2align 0x4
L_389378:
L_40613:
	movq (globalObjptr+0xDDD8)(%rip),%r15
	jmp L_40570
.p2align 0x4
L_389380:
L_40619:
	movq 0x8(%r11),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r11),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x20(%rbp)
	movl 0x4(%r14),%r13d
	movl %r13d,0x24(%rbp)
	movq (globalObjptr+0xE898)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_40620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389381:
L_40618:
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x11F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp layout_1
.p2align 0x4
L_389382:
L_40649:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_40650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40650
.p2align 0x4
.long 0x45F
L_40650:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_40555
.p2align 0x4
.long 0x4EC
L_40559:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40560
L_40607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_40608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40608
.p2align 0x4
.long 0x73D
L_40608:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_40560:
	movl 0x38(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_389387
	cmpl $0x10,%r15d
	je L_389386
	cmpl $0x20,%r15d
	je L_389385
	cmpl $0x40,%r15d
	je L_389384
L_40561:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_40562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_389384:
L_40606:
	movq (globalObjptr+0xDDC8)(%rip),%r15
	jmp L_40570
.p2align 0x4
L_389385:
L_40605:
	movq (globalObjptr+0xDDC0)(%rip),%r14
	movq %r14,%r15
	jmp L_40570
.p2align 0x4
L_389386:
L_40604:
	movq (globalObjptr+0xDDB8)(%rip),%r14
	movq %r14,%r15
	jmp L_40570
.p2align 0x4
L_389387:
L_40569:
	movq (globalObjptr+0xDDA0)(%rip),%r14
	movq %r14,%r15
	jmp L_40570
.p2align 0x4
.long 0x4A6
L_40571:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_40572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5EC
L_40620:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_40621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1
L_40562:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40563
L_40567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_40568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40568
.p2align 0x4
.long 0x451
L_40568:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_40563:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_37+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4A6
L_40572:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_40573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x4E2
L_40621:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_40622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
bug_37:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40564
L_40565:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_40566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40566
.p2align 0x4
.long 0x451
L_40566:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_40564:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x80C
L_40573:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (paren_18+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E2
L_40622:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40623
L_40647:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_40648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40648
.p2align 0x4
.long 0x80D
L_40648:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_40623:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xDEE8)(%rip),%r13
	movq %r13,0x8(%r14)
	movl 0x20(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_389391
L_40624:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_40625:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_40626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389391:
L_40646:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_40625
.p2align 0x4
.long 0x80C
paren_18:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_40574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA43
L_40626:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40627
L_40644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_40645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40645
.p2align 0x4
.long 0xA44
L_40645:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_40627:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE8A0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_40628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x510
L_40574:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_40575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x7B4
L_40628:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40629
L_40642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_40643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40643
.p2align 0x4
.long 0x5F4
L_40643:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_40629:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_40630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x5F0
L_40575:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40576
L_40602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_40603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40603
.p2align 0x4
.long 0x5EB
L_40603:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_40576:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40577:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_389398
L_40579:
	cmpq $0x1,%r14
	je L_389395
L_40580:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40577
.p2align 0x4
L_389395:
L_40581:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40582
L_40600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_40601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40601
.p2align 0x4
.long 0xA42
L_40601:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_40582:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_389396
L_40583:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_40584:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_40585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389396:
L_40599:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_40584
.p2align 0x4
L_389398:
L_40578:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_40630:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40631
L_40640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_40641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40641
.p2align 0x4
.long 0x488
L_40641:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_40631:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40632:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_40578
L_40633:
	cmpq $0x1,%r14
	je L_389400
L_40634:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40632
.p2align 0x4
L_389400:
L_40635:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40636
L_40638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_40639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40639
.p2align 0x4
.long 0x51B
L_40639:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_40636:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_389401
L_40637:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389401:
L_40594:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x510
L_40585:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_40586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x7B4
L_40586:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40587
L_40597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_40598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40598
.p2align 0x4
.long 0x5F4
L_40598:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_40587:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_40588:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_40578
L_40589:
	cmpq $0x1,%r14
	je L_389405
L_40590:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40588
.p2align 0x4
L_389405:
L_40591:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40592
L_40595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_40596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40596
.p2align 0x4
.long 0xA25
L_40596:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_40592:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_40594
L_40593:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_23
.hidden layout_23
layout_23:
L_40651:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_40652
L_40774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_40775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40775
.p2align 0x4
.long 0x45F
L_40775:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_40652:
	movq 0x8(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_40653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xA45
L_40653:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA45
L_40654:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_40655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA46
L_40655:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40656
L_40772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_40773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40773
.p2align 0x4
.long 0xA59
L_40773:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_40656:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_389411
L_40659:
	movl %r13d,0x80(%rbp)
	movq $0x3CA5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_40660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_389411:
L_40658:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA47
L_40660:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_40661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xA47
L_40661:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_40662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA48
L_40662:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40663
L_40770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_40771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40771
.p2align 0x4
.long 0xA58
L_40771:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_40663:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_389415
	cmpq $0x2,%r15
	je L_389414
L_40664:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1097,%r14
	je L_389413
L_40730:
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq (globalObjptr+0xE8B0)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_40731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389413:
L_40665:
	movl 0x1C(%r15),%r14d
	movq 0x40(%r15),%r13
	movb 0x21(%r15),%r11b
	movq 0x38(%r15),%r10
	movl 0x18(%r15),%r9d
	movq 0x30(%r15),%r8
	movl 0x14(%r15),%esp
	movl 0x10(%r15),%esi
	movl 0xC(%r15),%edi
	movl 0x8(%r15),%edx
	movb 0x20(%r15),%cl
	movq 0x0(%r15),%rbx
	movq 0x28(%r15),%rax
	movq $0x1243,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	movq %rbx,0x0(%r15)
	movl %r14d,0x8(%r15)
	movl %r9d,0xC(%r15)
	movl %esp,0x10(%r15)
	movl %esi,0x14(%r15)
	movl %edi,0x18(%r15)
	movl %edx,0x1C(%r15)
	movq %r13,0x28(%r15)
	movq %r10,0x30(%r15)
	movq %r8,0x38(%r15)
	movq %rax,0x40(%r15)
	addq $0x50,%r12
	movzbl %r11b,%r14d
	movzbl %cl,%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x20(%r15)
	movl $0x0,0x24(%r15)
	movq (globalObjptr+0xE8A8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_40666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389414:
L_40769:
	movq (globalObjptr+0xE8D0)(%rip),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_40768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389415:
L_40767:
	movq (globalObjptr+0xE8C8)(%rip),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_40768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA52
L_40731:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_389418
	cmpq $0x2,%r15
	je L_389417
L_40732:
	movq (globalObjptr+0xE8B8)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_40733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389417:
L_40766:
	movq (globalObjptr+0xDE38)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_40762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389418:
L_40761:
	movq (globalObjptr+0xE8C0)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_40762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA49
L_40666:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_40667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_38
.p2align 0x4
.long 0xA57
L_40768:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
L_40678:
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_40679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA53
L_40733:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_40734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xA4A
L_40762:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40763
L_40764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_40765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40765
.p2align 0x4
.long 0xA50
L_40765:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_40763:
	movq 0x78(%rbp),%r15
L_40743:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE20)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_40744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xA4A
L_40667:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40668
L_40728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_40729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40729
.p2align 0x4
.long 0xA50
L_40729:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_40668:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xD648)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_40669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xA4A
L_40679:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40680
L_40721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_40722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40722
.p2align 0x4
.long 0xA50
L_40722:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_40680:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_40681:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_389425
L_40682:
	cmpq $0x1,%r14
	je L_389421
L_40683:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40681
.p2align 0x4
L_389421:
L_40684:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40685
L_40719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_40720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40720
.p2align 0x4
.long 0xA4F
L_40720:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_40685:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_389423
L_40686:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
L_40687:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_40658
L_40689:
	movl %r13d,0x68(%rbp)
	movq $0x3B33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_40690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_389423:
L_40718:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_40687
.p2align 0x4
L_389425:
L_40672:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA54
L_40734:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_40735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA4A
L_40744:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40745
L_40754:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_40755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40755
.p2align 0x4
.long 0xA50
L_40755:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_40745:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40746:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_40672
L_40747:
	cmpq $0x1,%r14
	je L_389427
L_40748:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40746
.p2align 0x4
L_389427:
L_40749:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40750
L_40752:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_40753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40753
.p2align 0x4
.long 0xA51
L_40753:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_40750:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_389428
L_40751:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x50(%rbp)
	jmp L_40678
.p2align 0x4
L_389428:
L_40723:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_40678
.p2align 0x4
.long 0xA4A
L_40669:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40670
L_40726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_40727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40727
.p2align 0x4
.long 0xA50
L_40727:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_40670:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40671:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_40672
L_40673:
	cmpq $0x1,%r14
	je L_389432
L_40674:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40671
.p2align 0x4
L_389432:
L_40675:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40676
L_40724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_40725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40725
.p2align 0x4
.long 0xA51
L_40725:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_40676:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_40723
L_40677:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x50(%rbp)
	jmp L_40678
.p2align 0x4
.long 0xA4B
L_40690:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_40691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0xA54
L_40735:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40736
L_40759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_40760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40760
.p2align 0x4
.long 0xA56
L_40760:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_40736:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40737:
	addl 0x0(%r15),%ecx
	movl %ecx,0x78(%rbp)
	jo L_40672
L_40738:
	cmpq $0x1,%r14
	je L_389437
L_40739:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40737
.p2align 0x4
L_389437:
L_40740:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40741
L_40757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_40758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40758
.p2align 0x4
.long 0xA55
L_40758:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_40741:
	movl 0x78(%rbp),%r15d
	testl %r15d,%r15d
	jz L_389438
L_40742:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_40743
.p2align 0x4
L_389438:
L_40756:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_40743
.p2align 0x4
.long 0xA4B
L_40691:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40692
L_40716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_40717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40717
.p2align 0x4
.long 0xA4E
L_40717:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_40692:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_389443
L_40693:
	decl %ecx
	jo L_40672
L_40694:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
L_40695:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_40696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_39
.p2align 0x4
L_389443:
L_40715:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_40695
.p2align 0x4
.long 0x8F3
L_40696:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40697
L_40713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_40714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40714
.p2align 0x4
.long 0xA4D
L_40714:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_40697:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_40698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x61B
L_40698:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40699
L_40711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_40712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40712
.p2align 0x4
.long 0xA4C
L_40712:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_40699:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_389447
L_40700:
	decl %ecx
	jo L_40672
L_40701:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
L_40702:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1B65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x2,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_40703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_389447:
L_40710:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_40702
.p2align 0x4
.long 0x1
L_40703:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40704
L_40708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_40709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40709
.p2align 0x4
.long 0x494
L_40709:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_40704:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_389450
L_40705:
	decl %r15d
	jo L_40672
L_40706:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389450:
L_40707:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_38
.hidden layout_38
layout_38:
L_40776:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_40923
L_40777:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_389453
L_40778:
	movq 0x8(%rbp),%r15
	movl 0x8(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x20(%rbp)
	movb 0x20(%r15),%r14b
	movb %r14b,0x1C(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0xC(%r15),%r14d
	movl %r14d,0x30(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x38(%rbp)
	movl 0x10(%r15),%r14d
	movl %r14d,0x34(%rbp)
	movl 0x14(%r15),%r14d
	movl %r14d,0x40(%rbp)
	movl 0x18(%r15),%r14d
	movl %r14d,0x44(%rbp)
	movl 0x1C(%r15),%r14d
	movl %r14d,0x48(%rbp)
	movb 0x21(%r15),%r14b
	movb %r14b,0x1D(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_389452
L_40781:
	movl %r13d,0x68(%rbp)
	movq $0x3BC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_40782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_389452:
L_40780:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389453:
L_40923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_40924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40924
.p2align 0x4
.long 0x45B
L_40924:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_40778
.p2align 0x4
.long 0xA5A
L_40782:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_40783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xA5A
L_40783:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40784
L_40921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_40922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40922
.p2align 0x4
.long 0xA7A
L_40922:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_40784:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDF28)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r15
	andq $0x1,%r15
	jnz L_389455
L_40785:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389455:
L_40905:
	movq 0x50(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,0x8(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA5B
L_40786:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40787
L_40903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_40904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40904
.p2align 0x4
.long 0xA75
L_40904:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_40787:
	movq 0x8(%rbp),%r15
L_40788:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE8D8)(%rip),%r13
	movq %r13,0x8(%r14)
	movb 0x1D(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_389457
L_40789:
	movq (globalObjptr+0xE8E0)(%rip),%r15
L_40790:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389457:
L_40902:
	movq (globalObjptr+0xE950)(%rip),%r15
	jmp L_40790
.p2align 0x4
.long 0xA76
L_40906:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl 0x8(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_40907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0xA5C
L_40791:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40792
L_40900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_40901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40901
.p2align 0x4
.long 0xA74
L_40901:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_40792:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xE8E8)(%rip),%r13
	movq %r13,0x8(%r14)
	movl 0x48(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_389459
L_40793:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_40794:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389459:
L_40899:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_40794
.p2align 0x4
.long 0xA77
L_40907:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA5D
L_40795:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40796
L_40897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_40898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40898
.p2align 0x4
.long 0xA73
L_40898:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_40796:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xE8F0)(%rip),%r13
	movq %r13,0x8(%r14)
	movl 0x44(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_389461
L_40797:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_40798:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_40799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389461:
L_40896:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_40798
.p2align 0x4
.long 0xA77
L_40908:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40909
L_40919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_40920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40920
.p2align 0x4
.long 0xA79
L_40920:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_40909:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40910:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_389466
L_40911:
	cmpq $0x1,%r14
	je L_389463
L_40912:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40910
.p2align 0x4
L_389463:
L_40913:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40914
L_40917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_40918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40918
.p2align 0x4
.long 0xA78
L_40918:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_40914:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jz L_389464
L_40915:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_40788
.p2align 0x4
L_389464:
L_40916:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_40788
.p2align 0x4
L_389466:
L_40864:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA5E
L_40799:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40800
L_40894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_40895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40895
.p2align 0x4
.long 0xA72
L_40895:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_40800:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xE8F8)(%rip),%r13
	movq %r13,0x8(%r14)
	movl 0x40(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_389468
L_40801:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_40802:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_40803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389468:
L_40893:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_40802
.p2align 0x4
.long 0xA5F
L_40803:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40804
L_40891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_40892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40892
.p2align 0x4
.long 0xA71
L_40892:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_40804:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xE900)(%rip),%r13
	movq %r13,0x8(%r14)
	movl 0x34(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_389470
L_40805:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_40806:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_40807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389470:
L_40890:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_40806
.p2align 0x4
.long 0xA60
L_40807:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40808
L_40888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_40889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40889
.p2align 0x4
.long 0xA70
L_40889:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_40808:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE908)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r15
	movw 0x0(%r15),%r14w
	movw %r14w,0x1E(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_40780
L_40810:
	movl %r13d,0x80(%rbp)
	movq $0x3C0D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	addq $0x78,%rbp
	leaq (L_40811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0xA61
L_40811:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_40812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xA61
L_40812:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40813
L_40886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_40887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40887
.p2align 0x4
.long 0xA6C
L_40887:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_40813:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDF28)(%rip),%r14
	movq %r14,0x8(%r15)
	movw 0x1E(%rbp),%r15w
	andw $0x1,%r15w
	jnz L_389474
L_40814:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_40815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389474:
L_40857:
	movw 0x1E(%rbp),%r15w
	shrw $0x1,%r15w
	movb %r15b,0x10(%rbp)
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_40858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA62
L_40815:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40816
L_40855:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_40856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40856
.p2align 0x4
.long 0xA6B
L_40856:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_40816:
	movq 0x10(%rbp),%r15
L_40817:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE910)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_40818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xA62
L_40858:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movzbq 0x10(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_389477
	leaq jumpTable_61(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_61:
.quad L_389488,L_389487,L_389486,L_389485,L_389484,L_389483,L_389482,L_389481,L_389480,L_389479,L_389478
.text
.p2align 0x4
L_389477:
L_40859:
	movq (globalObjptr+0xDFA8)(%rip),%r15
L_40860:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_40861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389478:
L_40885:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	jmp L_40860
.p2align 0x4
L_389479:
L_40884:
	movq (globalObjptr+0xDFD0)(%rip),%r15
	jmp L_40860
.p2align 0x4
L_389480:
L_40883:
	movq (globalObjptr+0xDFC8)(%rip),%r15
	jmp L_40860
.p2align 0x4
L_389481:
L_40882:
	movq (globalObjptr+0xDFC0)(%rip),%r15
	jmp L_40860
.p2align 0x4
L_389482:
L_40881:
	movq (globalObjptr+0xDFB8)(%rip),%r15
	jmp L_40860
.p2align 0x4
L_389483:
L_40880:
	movq (globalObjptr+0xAC88)(%rip),%r15
	jmp L_40860
.p2align 0x4
L_389484:
L_40879:
	movq (globalObjptr+0xD080)(%rip),%r15
	jmp L_40860
.p2align 0x4
L_389485:
L_40878:
	movq (globalObjptr+0xD088)(%rip),%r15
	jmp L_40860
.p2align 0x4
L_389486:
L_40877:
	movq (globalObjptr+0xCE30)(%rip),%r15
	jmp L_40860
.p2align 0x4
L_389487:
L_40876:
	movq (globalObjptr+0xDFB0)(%rip),%r15
	jmp L_40860
.p2align 0x4
L_389488:
L_40875:
	movq (globalObjptr+0xD0F0)(%rip),%r15
	jmp L_40860
.p2align 0x4
.long 0xA61
L_40818:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40819
L_40853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_40854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40854
.p2align 0x4
.long 0xA6C
L_40854:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_40819:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0x9EE8)(%rip),%r13
	movq %r13,0x8(%r14)
	movl 0x30(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_389489
L_40820:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_40821:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_40822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389489:
L_40852:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_40821
.p2align 0x4
.long 0xA6D
L_40861:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40862
L_40873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_40874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40874
.p2align 0x4
.long 0xA6F
L_40874:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_40862:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40863:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_40864
L_40865:
	cmpq $0x1,%r14
	je L_389491
L_40866:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40863
.p2align 0x4
L_389491:
L_40867:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40868
L_40871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_40872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40872
.p2align 0x4
.long 0xA6E
L_40872:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_40868:
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jz L_389492
L_40869:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_40817
.p2align 0x4
L_389492:
L_40870:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_40817
.p2align 0x4
.long 0xA62
L_40822:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40823
L_40850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_40851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40851
.p2align 0x4
.long 0xA6B
L_40851:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_40823:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE918)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_40824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0xA63
L_40824:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40825
L_40848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_40849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40849
.p2align 0x4
.long 0xA6A
L_40849:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_40825:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xE920)(%rip),%r13
	movq %r13,0x8(%r14)
	movb 0x1C(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_389498
	cmpb $0x2,%r14b
	je L_389497
L_40826:
	movq (globalObjptr+0xE928)(%rip),%r15
L_40827:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_40828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389497:
L_40847:
	movq (globalObjptr+0xE948)(%rip),%r15
	jmp L_40827
.p2align 0x4
L_389498:
L_40846:
	movq (globalObjptr+0xE940)(%rip),%r15
	jmp L_40827
.p2align 0x4
.long 0xA64
L_40828:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40829
L_40844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_40845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40845
.p2align 0x4
.long 0xA69
L_40845:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_40829:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xE930)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_389500
L_40830:
L_40831:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_40832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389500:
L_40843:
	movq (globalObjptr+0xE368)(%rip),%r14
	xchgq %r14,%r15
	jmp L_40831
.p2align 0x4
.long 0xA65
L_40832:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40833
L_40841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_40842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40842
.p2align 0x4
.long 0xA68
L_40842:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_40833:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xCCC0)(%rip),%r13
	movq %r13,0x8(%r14)
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_389502
L_40834:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_40835:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_40836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389502:
L_40840:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_40835
.p2align 0x4
.long 0xA66
L_40836:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40837
L_40838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_40839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40839
.p2align 0x4
.long 0xA67
L_40839:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_40837:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE938)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp record_3
.text
.p2align 0x4
.globl layout_39
.hidden layout_39
layout_39:
L_40925:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_40926
L_41207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_41208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41208
.p2align 0x4
.long 0x45F
L_41208:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_40926:
	movq 0x8(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x109A,%r14
	je L_389510
	cmpq $0x109B,%r14
	je L_389509
	cmpq $0x109C,%r14
	je L_389508
	cmpq $0x109D,%r14
	je L_389507
	cmpq $0x109E,%r14
	je L_389506
	cmpq $0x109F,%r14
	je L_389505
L_40927:
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq (globalObjptr+0xE958)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_40928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389505:
L_41159:
	movq 0x28(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xE998)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_41160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389506:
L_41109:
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xE990)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_41110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389507:
L_41039:
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_41040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_389508:
L_41017:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_41018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_389509:
L_40997:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xE360)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_40998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389510:
L_40977:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xE970)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_40978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8A4
L_40928:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_40929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_6
.p2align 0x4
.long 0x8A6
L_41160:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41161
L_41205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_41206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41206
.p2align 0x4
.long 0x9E0
L_41206:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_41161:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_389512
L_41163:
	movl %r13d,0x70(%rbp)
	movq $0x3B3B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_41164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_389512:
L_40945:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x67C
L_41110:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41111
L_41157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_41158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41158
.p2align 0x4
.long 0x4EF
L_41158:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_41111:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_40945
L_41113:
	movl %r13d,0x58(%rbp)
	movq $0x3B35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_41114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0xA81
L_41040:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_41041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E5
L_41018:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_41019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E5
L_40998:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40999
L_41015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_41016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41016
.p2align 0x4
.long 0x4E7
L_41016:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_40999:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_40945
L_41001:
	movl %r13d,0x30(%rbp)
	movq $0x3B39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_41002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x4E5
L_40978:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40979
L_40995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_40996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40996
.p2align 0x4
.long 0x4E7
L_40996:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_40979:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_40945
L_40981:
	movl %r13d,0x30(%rbp)
	movq $0x3B37,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_40982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x5F0
L_40929:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40930
L_40975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_40976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40976
.p2align 0x4
.long 0x5EB
L_40976:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_40930:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE960)(%rip),%r14
	movq %r14,0x8(%r15)
	cmpq $0x1,0x20(%rbp)
	je L_389520
L_40931:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_40932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389520:
L_40970:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_40971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA90
L_41164:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_41165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xA8C
L_41114:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_41115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xA81
L_41041:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_41042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E5
L_41019:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_41020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x48F
L_41002:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x28,%rbp
	leaq (L_41003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x48F
L_40982:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x28,%rbp
	leaq (L_40983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xA7B
L_40932:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_40933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xA7F
L_40971:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40972
L_40973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_40974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40974
.p2align 0x4
.long 0xA80
L_40974:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_40972:
	movq 0x20(%rbp),%r15
L_40943:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCAD0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_40945
L_40946:
	movl %r13d,0x60(%rbp)
	movq $0x3CA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_40947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0xA90
L_41165:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41166
L_41203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_41204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41204
.p2align 0x4
.long 0xA9C
L_41204:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_41166:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDF28)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_41167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xA8C
L_41115:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41116
L_41155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_41156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41156
.p2align 0x4
.long 0x8A5
L_41156:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_41116:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDF28)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_41117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_38
.p2align 0x4
.long 0x811
L_41042:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41043
L_41107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_41108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41108
.p2align 0x4
.long 0x4F0
L_41108:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_41043:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_40945
L_41045:
	movl %r13d,0x48(%rbp)
	movq $0x3C9F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_41046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x5EF
L_41020:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41021
L_41037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_41038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41038
.p2align 0x4
.long 0x4E9
L_41038:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_41021:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_40945
L_41023:
	movl %r13d,0x38(%rbp)
	movq $0x3CA3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_41024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x48F
L_41003:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41004
L_41013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_41014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41014
.p2align 0x4
.long 0x5E5
L_41014:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_41004:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_41005:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_389533
L_41006:
	cmpq $0x1,%r14
	je L_389530
L_41007:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_41005
.p2align 0x4
L_389530:
L_41008:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41009
L_41011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_41012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41012
.p2align 0x4
.long 0x5E4
L_41012:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_41009:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_389531
L_41010:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389531:
L_40958:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389533:
L_40937:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_40983:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40984
L_40993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_40994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40994
.p2align 0x4
.long 0x5E5
L_40994:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_40984:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40985:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_40937
L_40986:
	cmpq $0x1,%r14
	je L_389535
L_40987:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40985
.p2align 0x4
L_389535:
L_40988:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40989
L_40991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_40992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40992
.p2align 0x4
.long 0x5E4
L_40992:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_40989:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_40958
L_40990:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA7C
L_40933:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_40934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA7D
L_40947:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_40948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xA91
L_41167:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_41168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA8D
L_41117:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41118
L_41153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_41154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41154
.p2align 0x4
.long 0x731
L_41154:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_41118:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xD648)(%rip),%r14
	movq %r14,0x8(%r15)
	cmpq $0x1,0x8(%rbp)
	je L_389540
L_41119:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_41120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389540:
L_41148:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_41149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA82
L_41046:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_41047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x519
L_41024:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_41025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xA7C
L_40934:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40935
L_40968:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_40969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40969
.p2align 0x4
.long 0x4AD
L_40969:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_40935:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40936:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_40937
L_40938:
	cmpq $0x1,%r14
	je L_389542
L_40939:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40936
.p2align 0x4
L_389542:
L_40940:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40941
L_40966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_40967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40967
.p2align 0x4
.long 0xA7E
L_40967:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_40941:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_389543
L_40942:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_40943
.p2align 0x4
L_389543:
L_40965:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_40943
.p2align 0x4
.long 0xA7D
L_40948:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40949
L_40963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_40964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40964
.p2align 0x4
.long 0x701
L_40964:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_40949:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE968)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_40950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xA91
L_41168:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41169
L_41201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_41202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41202
.p2align 0x4
.long 0x85D
L_41202:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_41169:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE9A0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_41170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x9C3
L_41120:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_41121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x75D
L_41149:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41150
L_41151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_41152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41152
.p2align 0x4
.long 0x5EE
L_41152:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_41150:
	movq 0x28(%rbp),%r15
L_41130:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE920)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_41131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xA82
L_41047:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_41048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x519
L_41025:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41026
L_41035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_41036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41036
.p2align 0x4
.long 0x51C
L_41036:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_41026:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_41027:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_40937
L_41028:
	cmpq $0x1,%r14
	je L_389550
L_41029:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_41027
.p2align 0x4
L_389550:
L_41030:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41031
L_41033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_41034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41034
.p2align 0x4
.long 0x51D
L_41034:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_41031:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_40958
L_41032:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x69B
L_40950:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40951
L_40961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_40962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40962
.p2align 0x4
.long 0x6AE
L_40962:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_40951:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_40952:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_40937
L_40953:
	cmpq $0x1,%r14
	je L_389555
L_40954:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_40952
.p2align 0x4
L_389555:
L_40955:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_40956
L_40959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_40960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_40960
.p2align 0x4
.long 0x5F2
L_40960:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_40956:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_40958
L_40957:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA92
L_41170:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_41171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA8E
L_41121:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_41122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x78B
L_41131:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41132
L_41141:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_41142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41142
.p2align 0x4
.long 0x78C
L_41142:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_41132:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_41133:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_40937
L_41134:
	cmpq $0x1,%r14
	je L_389560
L_41135:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_41133
.p2align 0x4
L_389560:
L_41136:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41137
L_41139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_41140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41140
.p2align 0x4
.long 0xA25
L_41140:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_41137:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_40958
L_41138:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F5
L_41048:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_389566
	cmpq $0x2,%r15
	je L_389565
L_41049:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0xE978)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_41050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389565:
L_41106:
	movq (globalObjptr+0xE8C0)(%rip),%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_41102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389566:
L_41101:
	movq (globalObjptr+0xE988)(%rip),%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_41102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA92
L_41171:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41172
L_41199:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_41200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41200
.p2align 0x4
.long 0xA9B
L_41200:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_41172:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x9EC8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_41173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_542
.p2align 0x4
.long 0xA8E
L_41122:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41123
L_41146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_41147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41147
.p2align 0x4
.long 0xA8F
L_41147:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_41123:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_41124:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_40937
L_41125:
	cmpq $0x1,%r14
	je L_389568
L_41126:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_41124
.p2align 0x4
L_389568:
L_41127:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41128
L_41144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_41145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41145
.p2align 0x4
.long 0x700
L_41145:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_41128:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_389569
L_41129:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_41130
.p2align 0x4
L_389569:
L_41143:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_41130
.p2align 0x4
.long 0x98A
L_41050:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_41051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x4A6
L_41102:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41103
L_41104:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_41105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41105
.p2align 0x4
.long 0x720
L_41105:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_41103:
	movq 0x30(%rbp),%r15
L_41074:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_41075:
	addl 0x0(%r14),%ecx
	movl %ecx,0x38(%rbp)
	jo L_40937
L_41076:
	cmpq $0x1,%r15
	je L_389573
L_41077:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_41075
.p2align 0x4
L_389573:
L_41078:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41079
L_41081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_41082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41082
.p2align 0x4
.long 0x51D
L_41082:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_41079:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_40958
L_41080:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA93
L_41173:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_41174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA83
L_41051:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_41052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA93
L_41174:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41175
L_41197:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_41198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41198
.p2align 0x4
.long 0xA9A
L_41198:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_41175:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE9A8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_41176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0xA83
L_41052:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41053
L_41099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_41100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41100
.p2align 0x4
.long 0xA8B
L_41100:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_41053:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE980)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_389580
	cmpq $0x2,%r15
	je L_389579
L_41054:
	movq (globalObjptr+0xE8B8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_41055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389579:
L_41098:
	movq (globalObjptr+0xDE38)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_41094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389580:
L_41093:
	movq (globalObjptr+0xE8C0)(%rip),%r14
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_41094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA94
L_41176:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_41177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA84
L_41055:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_41056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x8F0
L_41094:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41095
L_41096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_41097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41097
.p2align 0x4
.long 0xA8A
L_41097:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_41095:
	movq 0x30(%rbp),%r15
L_41065:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE20)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_41066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xA94
L_41177:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41178
L_41195:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_41196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41196
.p2align 0x4
.long 0xA99
L_41196:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_41178:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE9B0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_41179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0xA85
L_41056:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_41057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA86
L_41066:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41067
L_41086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_41087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41087
.p2align 0x4
.long 0xA87
L_41087:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_41067:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_41068:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_40937
L_41069:
	cmpq $0x1,%r14
	je L_389584
L_41070:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_41068
.p2align 0x4
L_389584:
L_41071:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41072
L_41084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_41085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41085
.p2align 0x4
.long 0xA44
L_41085:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_41072:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_389585
L_41073:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_41074
.p2align 0x4
L_389585:
L_41083:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_41074
.p2align 0x4
.long 0xA95
L_41179:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41180
L_41193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_41194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41194
.p2align 0x4
.long 0xA98
L_41194:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_41180:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_41181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xA85
L_41057:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41058
L_41091:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_41092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41092
.p2align 0x4
.long 0xA89
L_41092:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_41058:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_41059:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_40937
L_41060:
	cmpq $0x1,%r14
	je L_389590
L_41061:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_41059
.p2align 0x4
L_389590:
L_41062:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41063
L_41089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_41090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41090
.p2align 0x4
.long 0xA88
L_41090:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_41063:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_389591
L_41064:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_41065
.p2align 0x4
L_389591:
L_41088:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_41065
.p2align 0x4
.long 0xA96
L_41181:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41182
L_41191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_41192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41192
.p2align 0x4
.long 0xA97
L_41192:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_41182:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_41183:
	addl 0x0(%r15),%ecx
	movl %ecx,0x70(%rbp)
	jo L_40937
L_41184:
	cmpq $0x1,%r14
	je L_389595
L_41185:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_41183
.p2align 0x4
L_389595:
L_41186:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41187
L_41189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_41190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41190
.p2align 0x4
.long 0xA39
L_41190:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_41187:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jz L_40958
L_41188:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_6
.hidden layout_6
layout_6:
L_41209:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_41410
L_41210:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_389633
L_41211:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,%r10
	andq $0x3,%r10
	cmpq $0x1,%r10
	je L_389632
	cmpq $0x2,%r10
	je L_389631
	cmpq $0x3,%r10
	je L_389619
L_41212:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0x108B,%r10
	je L_389618
	cmpq $0x108C,%r10
	je L_389610
	cmpq $0x108D,%r10
	je L_389609
	cmpq $0x108E,%r10
	je L_389608
	cmpq $0x108F,%r10
	je L_389600
L_41213:
	movq %r11,0x10(%rbp)
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_389600:
L_41339:
	movq 0x20(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x20(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_41390
	cmpq $0x5,%r13
	je L_389606
	cmpq $0x6,%r13
	je L_389604
L_41340:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_41341
L_41386:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_389602
	cmpq $0xF54,%r13
	je L_389601
L_41341:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_41342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_389601:
L_41388:
	movq (globalObjptr+0xDDD8)(%rip),%r15
L_41353:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x13C8)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE9C8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_41354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_389602:
L_41387:
	movq (globalObjptr+0xDDD0)(%rip),%r15
	jmp L_41353
.p2align 0x4
L_389604:
L_41392:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_389605
L_41393:
	movq (globalObjptr+0xDDE0)(%rip),%r15
	jmp L_41353
.p2align 0x4
L_389605:
L_41394:
	movq (globalObjptr+0xDDE8)(%rip),%r15
	jmp L_41353
.p2align 0x4
L_389606:
L_41390:
	movq (globalObjptr+0xDDD8)(%rip),%r15
	jmp L_41353
.p2align 0x4
L_389608:
L_41320:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq (globalObjptr+0xE9C0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_41321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389609:
L_41289:
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_41290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_32
.p2align 0x4
L_389610:
L_41221:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,%r14
	andq $0x7,%r14
	cmpq $0x2,%r14
	je L_41284
	cmpq $0x5,%r14
	je L_389616
	cmpq $0x6,%r14
	je L_389614
L_41222:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_41223
L_41280:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF53,%r14
	je L_389612
	cmpq $0xF54,%r14
	je L_389611
L_41223:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_41224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_389611:
L_41282:
	movq (globalObjptr+0xDDD8)(%rip),%r15
L_41235:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x13C8)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE9B8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_41236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_389612:
L_41281:
	movq (globalObjptr+0xDDD0)(%rip),%r15
	jmp L_41235
.p2align 0x4
L_389614:
L_41286:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_389615
L_41287:
	movq (globalObjptr+0xDDE0)(%rip),%r15
	jmp L_41235
.p2align 0x4
L_389615:
L_41288:
	movq (globalObjptr+0xDDE8)(%rip),%r15
	jmp L_41235
.p2align 0x4
L_389616:
L_41284:
	movq (globalObjptr+0xDDD8)(%rip),%r15
	jmp L_41235
.p2align 0x4
L_389618:
L_41215:
	movq %r13,0x10(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_389619:
L_41397:
	shrq $0x2,%r15
	movb %r15b,%r14b
	movzbq %r14b,%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_389620
	leaq jumpTable_62(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_62:
.quad L_389630,L_389629,L_389628,L_389627,L_389626,L_389625,L_389624,L_389623,L_389622,L_389621
.text
.p2align 0x4
L_389620:
L_41398:
	movq (globalObjptr+0xE9E0)(%rip),%r15
L_41399:
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389621:
L_41409:
	movq (globalObjptr+0xEA20)(%rip),%r15
	jmp L_41399
.p2align 0x4
L_389622:
L_41408:
	movq (globalObjptr+0xEA18)(%rip),%r15
	jmp L_41399
.p2align 0x4
L_389623:
L_41407:
	movq (globalObjptr+0xEA10)(%rip),%r15
	jmp L_41399
.p2align 0x4
L_389624:
L_41406:
	movq (globalObjptr+0xDE08)(%rip),%r15
	jmp L_41399
.p2align 0x4
L_389625:
L_41405:
	movq (globalObjptr+0xEA08)(%rip),%r15
	jmp L_41399
.p2align 0x4
L_389626:
L_41404:
	movq (globalObjptr+0xE558)(%rip),%r15
	jmp L_41399
.p2align 0x4
L_389627:
L_41403:
	movq (globalObjptr+0xEA00)(%rip),%r15
	jmp L_41399
.p2align 0x4
L_389628:
L_41402:
	movq (globalObjptr+0xE9F8)(%rip),%r15
	jmp L_41399
.p2align 0x4
L_389629:
L_41401:
	movq (globalObjptr+0xE9F0)(%rip),%r15
	jmp L_41399
.p2align 0x4
L_389630:
L_41400:
	movq (globalObjptr+0xE9E8)(%rip),%r15
	jmp L_41399
.p2align 0x4
L_389631:
L_41396:
	movq (globalObjptr+0xE9D8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389632:
L_41395:
	movq (globalObjptr+0xE9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_389633:
L_41410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_41411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41411
.p2align 0x4
.long 0x45F
L_41411:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_41211
.p2align 0x4
.long 0x1
L_41214:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA9F
L_41342:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41343
L_41384:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_41385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41385
.p2align 0x4
.long 0xAA2
L_41385:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_41343:
	movl 0x24(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_389638
	cmpl $0x10,%r15d
	je L_389637
	cmpl $0x20,%r15d
	je L_389636
	cmpl $0x40,%r15d
	je L_389635
L_41344:
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_389635:
L_41383:
	movq (globalObjptr+0xDDC8)(%rip),%r15
	jmp L_41353
.p2align 0x4
L_389636:
L_41382:
	movq (globalObjptr+0xDDC0)(%rip),%r14
	movq %r14,%r15
	jmp L_41353
.p2align 0x4
L_389637:
L_41381:
	movq (globalObjptr+0xDDB8)(%rip),%r14
	movq %r14,%r15
	jmp L_41353
.p2align 0x4
L_389638:
L_41352:
	movq (globalObjptr+0xDDA0)(%rip),%r14
	movq %r14,%r15
	jmp L_41353
.p2align 0x4
.long 0xAA0
L_41354:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_41355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x742
L_41321:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_41322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_6
.p2align 0x4
.long 0x466
L_41290:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_41291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
.long 0x67A
L_41224:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41225
L_41278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_41279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41279
.p2align 0x4
.long 0xA9D
L_41279:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_41225:
	movl 0x48(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_389643
	cmpl $0x10,%r15d
	je L_389642
	cmpl $0x20,%r15d
	je L_389641
	cmpl $0x40,%r15d
	je L_389640
L_41226:
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_389640:
L_41277:
	movq (globalObjptr+0xDDC8)(%rip),%r15
	jmp L_41235
.p2align 0x4
L_389641:
L_41276:
	movq (globalObjptr+0xDDC0)(%rip),%r14
	movq %r14,%r15
	jmp L_41235
.p2align 0x4
L_389642:
L_41275:
	movq (globalObjptr+0xDDB8)(%rip),%r14
	movq %r14,%r15
	jmp L_41235
.p2align 0x4
L_389643:
L_41234:
	movq (globalObjptr+0xDDA0)(%rip),%r14
	movq %r14,%r15
	jmp L_41235
.p2align 0x4
.long 0x836
L_41236:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_41237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_41216:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41217
L_41219:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41220
.p2align 0x4
.long 0x451
L_41220:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41217:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE70)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_41345:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41346
L_41350:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41351
.p2align 0x4
.long 0x451
L_41351:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41346:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_39+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xAA0
L_41355:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_41356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_6
.p2align 0x4
.long 0xA9E
L_41322:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_41323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x462
L_41291:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41292
L_41318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_41319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41319
.p2align 0x4
.long 0x463
L_41319:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_41292:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_389651
L_41293:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_41294:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_41295:
	addl 0x0(%r14),%ecx
	movl %ecx,0x18(%rbp)
	jo L_389650
L_41296:
	cmpq $0x1,%r15
	je L_389647
L_41297:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_41295
.p2align 0x4
L_389647:
L_41298:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41299
L_41301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_41302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41302
.p2align 0x4
.long 0x4A4
L_41302:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_41299:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_389648
L_41300:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389648:
L_41253:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389650:
L_41247:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389651:
L_41303:
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_41304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_41227:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41228
L_41232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41233
.p2align 0x4
.long 0x451
L_41233:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41228:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_38+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x836
L_41237:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_41238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_6
.p2align 0x4
.long 0x1
L_41218:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
bug_39:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41347
L_41348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41349
.p2align 0x4
.long 0x451
L_41349:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41347:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F5
L_41356:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_41357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_6
.p2align 0x4
.long 0x519
L_41323:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41324
L_41337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_41338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41338
.p2align 0x4
.long 0x51C
L_41338:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_41324:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_41325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x5EF
L_41304:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_41305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x1
bug_38:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41229
L_41230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41231
.p2align 0x4
.long 0x451
L_41231:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41229:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A7
L_41238:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_41239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0xA43
L_41357:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x30(%rbp)
	movb 0x20(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_389659
	cmpb $0x2,%r14b
	je L_389658
	cmpb $0x3,%r14b
	je L_389657
L_41358:
	movq (globalObjptr+0xD660)(%rip),%r15
L_41359:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_41360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389657:
L_41380:
	movq (globalObjptr+0xD7F0)(%rip),%r15
	jmp L_41359
.p2align 0x4
L_389658:
L_41379:
	movq (globalObjptr+0xD800)(%rip),%r15
	jmp L_41359
.p2align 0x4
L_389659:
L_41378:
	movq (globalObjptr+0xD668)(%rip),%r15
	jmp L_41359
.p2align 0x4
.long 0x459
L_41325:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41326
L_41335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_41336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41336
.p2align 0x4
.long 0x508
L_41336:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_41326:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_41327:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_41247
L_41328:
	cmpq $0x1,%r14
	je L_389660
L_41329:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_41327
.p2align 0x4
L_389660:
L_41330:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41331
L_41333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_41334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41334
.p2align 0x4
.long 0x51D
L_41334:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_41331:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_41253
L_41332:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x496
L_41305:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41306
L_41316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_41317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41317
.p2align 0x4
.long 0x63A
L_41317:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_41306:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_41307:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_41247
L_41308:
	cmpq $0x1,%r14
	je L_389665
L_41309:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_41307
.p2align 0x4
L_389665:
L_41310:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41311
L_41314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_41315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41315
.p2align 0x4
.long 0x522
L_41315:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_41311:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_389666
L_41312:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_41294
.p2align 0x4
L_389666:
L_41313:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_41294
.p2align 0x4
.long 0x791
L_41239:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_41240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xAA1
L_41360:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_41361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x791
L_41240:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41241
L_41273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_41274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41274
.p2align 0x4
.long 0xA44
L_41274:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_41241:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_41242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xA8E
L_41361:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_41362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x796
L_41242:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41243
L_41271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_41272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41272
.p2align 0x4
.long 0x51F
L_41272:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_41243:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_389675
L_41244:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_41245:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_41246:
	addl 0x0(%r14),%ecx
	movl %ecx,0x28(%rbp)
	jo L_41247
L_41248:
	cmpq $0x1,%r15
	je L_389671
L_41249:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_41246
.p2align 0x4
L_389671:
L_41250:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41251
L_41254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_41255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41255
.p2align 0x4
.long 0x4E6
L_41255:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_41251:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_41253
L_41252:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389675:
L_41256:
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_41257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA8E
L_41362:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41363
L_41376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_41377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41377
.p2align 0x4
.long 0xA8F
L_41377:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_41363:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x20,%rbp
	leaq (L_41364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x80B
L_41257:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_41258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_2
.p2align 0x4
.long 0x2B
L_41364:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41365
L_41374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_41375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41375
.p2align 0x4
.long 0x2C
L_41375:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_41365:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_41366:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_41247
L_41367:
	cmpq $0x1,%r14
	je L_389678
L_41368:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_41366
.p2align 0x4
L_389678:
L_41369:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41370
L_41372:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_41373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41373
.p2align 0x4
.long 0x4E6
L_41373:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_41370:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_41253
L_41371:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E2
L_41258:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41259
L_41269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_41270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41270
.p2align 0x4
.long 0x51F
L_41270:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_41259:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_41260:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_41247
L_41261:
	cmpq $0x1,%r14
	je L_389683
L_41262:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_41260
.p2align 0x4
L_389683:
L_41263:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41264
L_41267:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_41268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41268
.p2align 0x4
.long 0x65D
L_41268:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_41264:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_389684
L_41265:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_41245
.p2align 0x4
L_389684:
L_41266:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_41245
.text
.p2align 0x4
.globl ty_0
.hidden ty_0
ty_0:
L_41412:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_41590
L_41413:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_389725
L_41414:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq 0x30(%r15),%r13
	movq 0x28(%r15),%r11
	movq 0x20(%r15),%r10
	movq 0x18(%r15),%r9
	movq 0x10(%r15),%r8
	movq 0x8(%r15),%rsp
	movq 0x0(%r15),%rsi
	movq 0x0(%rbp),%r15
	movq %r15,%rdi
	andq $0x3,%rdi
	cmpq $0x1,%rdi
	je L_389723
	cmpq $0x2,%rdi
	je L_389721
	cmpq $0x3,%rdi
	je L_389701
L_41415:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rdi
	shrq $0x1,%rdi
	cmpq $0x108B,%rdi
	je L_389699
	cmpq $0x108C,%rdi
	je L_389698
	cmpq $0x108D,%rdi
	je L_389690
	cmpq $0x108E,%rdi
	je L_389689
	cmpq $0x108F,%rdi
	je L_389688
L_41416:
	movq 0x0(%r15),%rdi
	movq 0x8(%rdi),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389688:
L_41476:
	movq 0x20(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389689:
L_41475:
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389690:
L_41428:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_389696
L_41429:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_389695
	cmpq $0xE4B,%r15
	je L_389692
	cmpq $0xE4C,%r15
	je L_389691
L_41430:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r8),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r8),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_41431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_389691:
L_41463:
	movq %rsi,0x0(%rbp)
	jmp intInf_20
.p2align 0x4
L_389692:
L_41454:
	movq 0x0(%r14),%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_389694
L_41455:
	xorb %dl,%dl
	movq %rsp,%r10
real_2:
	movzbq %dl,%r15
	shlq $0x3,%r15
	orq $0x6,%r15
	movq %r15,0x0(%rbp)
	testb %dl,%dl
	jnz L_389693
L_41456:
	movq $0x11,%r15
toBits_10:
	movq %r15,0x18(%rbp)
	movq %r10,0x20(%rbp)
	movq $0x11,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_41457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_389693:
L_41461:
	movq $0x9,%r15
	jmp toBits_10
.p2align 0x4
L_389694:
L_41462:
	movb $0x1,%dl
	movq %rsp,%r10
	jmp real_2
.p2align 0x4
L_389695:
L_41453:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389696:
L_41464:
	movq 0x0(%r9),%r15
	movq 0x8(%r9),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_389697
L_41465:
	movq %r15,0x10(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389697:
L_41470:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389698:
L_41427:
	movq 0x10(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389699:
L_41417:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r13
	movq 0x0(%r13),%r10
	movq 0x8(%r13),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_389700
L_41418:
	movq %r14,0x10(%rbp)
	movq 0x0(%r8),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (word_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389700:
L_41422:
	movq %r10,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r14
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389701:
L_41498:
	shrq $0x2,%r15
	movb %r15b,%r14b
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movzbq %r14b,%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_389702
	leaq jumpTable_63(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_63:
.quad L_389719,L_389717,L_389716,L_389714,L_389712,L_389710,L_389708,L_389707,L_389705,L_389704
.text
.p2align 0x4
L_389702:
L_41499:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r9
	cmpq $0x1,%r9
	je L_389703
L_41500:
	movq %r15,0x10(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389703:
L_41505:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389704:
L_41589:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389705:
L_41578:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r9
	cmpq $0x1,%r9
	je L_389706
L_41579:
	movq %r15,0x10(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389706:
L_41584:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389707:
L_41577:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389708:
L_41566:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_389709
L_41567:
	movq %r15,0x10(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389709:
L_41572:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389710:
L_41555:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r9
	cmpq $0x1,%r9
	je L_389711
L_41556:
	movq %r15,0x10(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389711:
L_41561:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389712:
L_41544:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r9
	cmpq $0x1,%r9
	je L_389713
L_41545:
	movq %r15,0x10(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389713:
L_41550:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389714:
L_41533:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r9
	cmpq $0x1,%r9
	je L_389715
L_41534:
	movq %r15,0x10(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389715:
L_41539:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389716:
L_41532:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389717:
L_41521:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r9
	cmpq $0x1,%r9
	je L_389718
L_41522:
	movq %r15,0x10(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389718:
L_41527:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389719:
L_41510:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r9
	cmpq $0x1,%r9
	je L_389720
L_41511:
	movq %r15,0x10(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389720:
L_41516:
	movq %r13,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389721:
L_41487:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_389722
L_41488:
	movq %r14,0x10(%rbp)
	movq 0x0(%r8),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389722:
L_41493:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r14
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389723:
L_41477:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_389724
L_41478:
	movq %r13,0x10(%rbp)
	movq 0x0(%r8),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (word_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389724:
L_41482:
	movq %r10,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r14
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389725:
L_41590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_41591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41591
.p2align 0x4
.long 0x45F
L_41591:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_41414
.p2align 0x4
.long 0x4DD
L_41431:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpl $0x8,%r15d
	je objptr_0
	cmpl $0x10,%r15d
	je L_389732
	cmpl $0x20,%r15d
	je L_389731
	cmpl $0x40,%r15d
	je L_389727
L_41432:
	movq (globalObjptr+0x2440)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389727:
L_41452:
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
objptr_0:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_41434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41434
.p2align 0x4
.long 0x45F
L_41434:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,0x10(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_540:
	cmpq $0x1,%r15
	jnl L_389728
L_41449:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_540
.p2align 0x4
L_389728:
L_41435:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41436
L_41447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_41448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41448
.p2align 0x4
.long 0x65A
L_41448:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_41436:
	movq 0x10(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_389729
L_41437:
	movq %r14,0x20(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_41438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389729:
L_41442:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389731:
L_41451:
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp objptr_0
.p2align 0x4
L_389732:
L_41450:
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp objptr_0
.p2align 0x4
.long 0x72E
L_41457:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41458
L_41459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_41460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41460
.p2align 0x4
.long 0x494
L_41460:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_41458:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41466:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41467
L_41468:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41469
.p2align 0x4
.long 0x451
L_41469:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41467:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41471:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_42+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
word_2:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41419
L_41420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41421
.p2align 0x4
.long 0x451
L_41421:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41419:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41423:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_40+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_41501:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41502
L_41503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41504
.p2align 0x4
.long 0x451
L_41504:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41502:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41506:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_45+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_41580:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41581
L_41582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41583
.p2align 0x4
.long 0x451
L_41583:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41581:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41585:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_41568:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41569
L_41570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41571
.p2align 0x4
.long 0x451
L_41571:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41569:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41573:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_51+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_41557:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41558
L_41559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41560
.p2align 0x4
.long 0x451
L_41560:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41558:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41562:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_50+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_41546:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41547
L_41548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41549
.p2align 0x4
.long 0x451
L_41549:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41547:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41551:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_49+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_41535:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41536
L_41537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41538
.p2align 0x4
.long 0x451
L_41538:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41536:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41540:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_48+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_41523:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41524
L_41525:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41526
.p2align 0x4
.long 0x451
L_41526:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41524:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41528:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_47+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_41512:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41513
L_41514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41515
.p2align 0x4
.long 0x451
L_41515:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41513:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41517:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_46+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_41489:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41490
L_41491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41492
.p2align 0x4
.long 0x451
L_41492:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41490:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41494:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_44+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
word_3:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41479
L_41480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41481
.p2align 0x4
.long 0x451
L_41481:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41479:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41483:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_43+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x521
L_41438:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41439
L_41440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_41441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41441
.p2align 0x4
.long 0x4E8
L_41441:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_41439:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41443:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_41+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_42:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41472
L_41473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41474
.p2align 0x4
.long 0x451
L_41474:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41472:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_40:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41424
L_41425:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41426
.p2align 0x4
.long 0x451
L_41426:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41424:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_45:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41507
L_41508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41509
.p2align 0x4
.long 0x451
L_41509:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41507:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_52:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41586
L_41587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41588
.p2align 0x4
.long 0x451
L_41588:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41586:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_51:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41574
L_41575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41576
.p2align 0x4
.long 0x451
L_41576:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41574:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_50:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41563
L_41564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41565
.p2align 0x4
.long 0x451
L_41565:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41563:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_49:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41552
L_41553:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41554
.p2align 0x4
.long 0x451
L_41554:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41552:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_48:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41541
L_41542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41543
.p2align 0x4
.long 0x451
L_41543:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41541:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_47:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41529
L_41530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41531
.p2align 0x4
.long 0x451
L_41531:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41529:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_46:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41518
L_41519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41520
.p2align 0x4
.long 0x451
L_41520:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41518:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_44:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41495
L_41496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41497
.p2align 0x4
.long 0x451
L_41497:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41495:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_43:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41484
L_41485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41486
.p2align 0x4
.long 0x451
L_41486:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41484:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_41:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41444
L_41445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41446
.p2align 0x4
.long 0x451
L_41446:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41444:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl intInf_20
.hidden intInf_20
intInf_20:
L_41592:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_41593
L_41640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41641
.p2align 0x4
.long 0x451
L_41641:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41593:
	movq 0x0(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_389760
L_41594:
	movq %r13,0x48(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_41595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389760:
L_41635:
	movq %r10,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4EC
L_41595:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_41596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_41636:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_55+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xAA3
L_41596:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpl $0x8,%r15d
	je L_389768
	cmpl $0x10,%r15d
	je L_389767
	cmpl $0x20,%r15d
	je L_389766
	cmpl $0x40,%r15d
	je L_389762
L_41597:
	movq (globalObjptr+0x2440)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389762:
L_41634:
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
objptr_1:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_41599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41599
.p2align 0x4
.long 0xAA4
L_41599:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_541:
	cmpq $0x1,%r15
	jnl L_389763
L_41631:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_541
.p2align 0x4
L_389763:
L_41600:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41601
L_41629:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_41630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41630
.p2align 0x4
.long 0x8A5
L_41630:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_41601:
	movq 0x38(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_389764
L_41602:
	movq %r14,0x48(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_41603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389764:
L_41624:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389766:
L_41633:
	movq 0x50(%rbp),%r14
	movq %r14,0x30(%rbp)
	jmp objptr_1
.p2align 0x4
L_389767:
L_41632:
	movq 0x60(%rbp),%r14
	movq %r14,0x30(%rbp)
	jmp objptr_1
.p2align 0x4
L_389768:
L_41598:
	movq 0x48(%rbp),%r14
	movq %r14,0x30(%rbp)
	jmp objptr_1
.p2align 0x4
.long 0x1
bug_55:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41637
L_41638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41639
.p2align 0x4
.long 0x451
L_41639:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41637:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4EC
L_41603:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41604
L_41622:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_41623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41623
.p2align 0x4
.long 0x4EB
L_41623:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_41604:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_389770
L_41605:
	movq %r14,0x58(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_41606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389770:
L_41617:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_41625:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_54+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x870
L_41606:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x3,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_41607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1
L_41618:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_53+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_54:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41626
L_41627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41628
.p2align 0x4
.long 0x451
L_41628:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41626:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xAA5
L_41607:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (word_4+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x1
bug_53:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41619
L_41620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41621
.p2align 0x4
.long 0x451
L_41621:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41619:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xAA6
word_4:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41608
L_41615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_41616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41616
.p2align 0x4
.long 0xAA9
L_41616:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_41608:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x37D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x24D0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movl $0x2,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_41609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0xAA6
L_41609:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_41610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0xAA7
L_41610:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41611
L_41613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_41614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41614
.p2align 0x4
.long 0xAA8
L_41614:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_41611:
	movq $0x37D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl $0x2,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_41612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x521
L_41612:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp x_1285
.text
.p2align 0x4
.globl tabulate_16
.hidden tabulate_16
tabulate_16:
L_41642:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_41643
L_41710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_41711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41711
.p2align 0x4
.long 0x457
L_41711:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_41643:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_389817
L_41644:
	cmpq $0x7FFFFFFF,%rdx
	ja L_389816
L_41645:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x147F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_41646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41646
.p2align 0x4
.long 0x452
L_41646:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_41647:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_542:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_389815
.p2align 0x4,,0x7
L_41648:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_389814
L_41650:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_389813
L_41651:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1BDE,%rax
	cmpq $0x14,%rax
	ja L_389776
	leaq jumpTable_64(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_64:
.quad L_389812,L_389808,L_389807,L_389806,L_389804,L_389803,L_389802,L_389800,L_389796,L_389795,L_389794,L_389791,L_389786,L_389784,L_389783,L_389782,L_389781,L_389780,L_389779,L_389778,L_389777
.text
.p2align 0x4
L_389776:
L_41652:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_41653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_1
.p2align 0x4
L_389777:
L_41704:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r9,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
.p2align 0x4,,0x7
L_41654:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_542
.p2align 0x4
L_389778:
L_41703:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_41653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_1
.p2align 0x4
L_389779:
L_41697:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	addq $0x30,%rbp
	leaq (x_80+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_389780:
L_41696:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	imulq $0x30,%r15
	movq 0x8(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_41654
.p2align 0x4
L_389781:
L_41695:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_41654
.p2align 0x4
L_389782:
L_41694:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_41653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
L_389783:
L_41693:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_41653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
L_389784:
L_41690:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_389785
L_41692:
	movq 0x0(%r11,%r15,8),%r11
	movq %r11,%r15
	jmp L_41654
.p2align 0x4
L_389785:
L_41691:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389786:
L_41684:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movq 0x0(%r15),%r9
	cmpl $0x0,%r14d
	je L_389790
	cmpl $0x1,%r14d
	je L_389789
	cmpl $0x2,%r14d
	je L_389788
	cmpl $0x3,%r14d
	je L_389787
L_41685:
	movq (globalObjptr+0x590)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389787:
L_41689:
	movq %r10,%r15
	jmp L_41654
.p2align 0x4
L_389788:
L_41688:
	movq %r11,%r15
	jmp L_41654
.p2align 0x4
L_389789:
L_41687:
	movq %r9,%r15
	jmp L_41654
.p2align 0x4
L_389790:
	movq %r13,%r15
	jmp L_41654
.p2align 0x4
L_389791:
L_41680:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpl $0x0,%r14d
	je L_389793
	cmpl $0x1,%r14d
	je L_389792
L_41681:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389792:
L_41683:
	movq %r11,%r15
	jmp L_41654
.p2align 0x4
L_389793:
	movq %r13,%r15
	jmp L_41654
.p2align 0x4
L_389794:
L_41679:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	jmp L_41654
.p2align 0x4
L_389795:
L_41678:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	jmp L_41654
.p2align 0x4
L_389796:
L_41673:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	cmpl $0x0,%r14d
	je L_389799
	cmpl $0x1,%r14d
	je L_389798
	cmpl $0x2,%r14d
	je L_389797
L_41674:
	movq (globalObjptr+0x4C0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389797:
L_41677:
	movq %r11,%r15
	jmp L_41654
.p2align 0x4
L_389798:
L_41676:
	movq %r10,%r15
	jmp L_41654
.p2align 0x4
L_389799:
	movq %r13,%r15
	jmp L_41654
.p2align 0x4
L_389800:
L_41670:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_389801
L_41671:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq %r11,%r15
	jmp L_41654
.p2align 0x4
L_389801:
L_41672:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389802:
L_41669:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_41653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_0
.p2align 0x4
L_389803:
L_41668:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r9,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r9,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
	jmp L_41654
.p2align 0x4
L_389804:
L_41664:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x8(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_389805
L_41667:
	movq 0x8(%r10),%r15
L_41666:
	movq 0x8(%r15),%r15
	jmp L_41654
.p2align 0x4
L_389805:
L_41665:
	movq 0x8(%r10),%r15
	jmp L_41666
.p2align 0x4
L_389806:
L_41663:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_41654
.p2align 0x4
L_389807:
L_41662:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,%r15
	jmp L_41654
.p2align 0x4
L_389808:
L_41656:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_543:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_389810
L_41660:
	incl %ecx
	jo L_389809
L_41661:
	jmp loop_543
.p2align 0x4
L_389809:
L_41658:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389810:
L_41657:
	incl %ecx
	jo L_41658
L_41659:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_41654
.p2align 0x4
L_389812:
L_41655:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_41653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_1
.p2align 0x4
L_389813:
L_41705:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389814:
L_41649:
	movq 0x8(%rbp),%r14
	movq $0xAE9,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389815:
L_41706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_41707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41707
.p2align 0x4
.long 0x45C
L_41707:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_41648
.p2align 0x4
L_389816:
L_41708:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389817:
L_41709:
	movq (globalObjptr+0xC60)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_41647
.p2align 0x4
.long 0x5F8
L_41653:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_41654
.p2align 0x4
.long 0x456
x_80:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	je L_389820
L_41702:
	movq 0x8(%r14),%r15
L_41699:
	cmpq $0x1,0x0(%r15)
	je L_389819
L_41700:
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_41653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_389819:
L_41701:
	movq (globalObjptr+0xC68)(%rip),%r15
	jmp L_41654
.p2align 0x4
L_389820:
L_41698:
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_41699
.text
.p2align 0x4
.globl ty_1
.hidden ty_1
ty_1:
L_41712:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_41779
L_41713:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_389839
L_41714:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_389837
	cmpq $0x2,%r15
	je L_389835
	cmpq $0x3,%r15
	je L_389833
	cmpq $0x5,%r15
	je L_389831
L_41715:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xF59,%rax
	cmpq $0x7,%rax
	ja L_389821
	leaq jumpTable_65(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_65:
.quad L_389830,L_389829,L_389828,L_389826,L_389825,L_389824,L_389823,L_389822
.text
.p2align 0x4
L_389821:
L_41716:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389822:
L_41734:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389823:
L_41733:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389824:
L_41732:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389825:
L_41731:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389826:
L_41720:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1EA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_389827
L_41721:
	movq %r15,0x20(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_41722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389827:
L_41726:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389828:
L_41719:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389829:
L_41718:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389830:
L_41717:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389831:
L_41768:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_389832
L_41769:
	movq %r13,0x10(%rbp)
	movq 0x0(%r8),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389832:
L_41774:
	movq %r10,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r14
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389833:
L_41757:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r13
	movq 0x0(%r13),%r10
	movq 0x8(%r13),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_389834
L_41758:
	movq %r14,0x10(%rbp)
	movq 0x0(%r8),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389834:
L_41763:
	movq %r10,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r14
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389835:
L_41746:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_389836
L_41747:
	movq %r13,0x10(%rbp)
	movq 0x0(%r8),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389836:
L_41752:
	movq %r10,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r14
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389837:
L_41735:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_389838
L_41736:
	movq %r13,0x10(%rbp)
	movq 0x0(%r8),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_41737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389838:
L_41741:
	movq %r10,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r14
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389839:
L_41779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_41780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41780
.p2align 0x4
.long 0x45F
L_41780:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_41714
.p2align 0x4
.long 0x521
L_41722:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41723
L_41724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_41725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41725
.p2align 0x4
.long 0x4E8
L_41725:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_41723:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41727:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_56+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_41770:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41771
L_41772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41773
.p2align 0x4
.long 0x451
L_41773:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41771:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41775:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_60+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_41759:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41760
L_41761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41762
.p2align 0x4
.long 0x451
L_41762:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41760:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41764:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_59+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_41748:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41749
L_41750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41751
.p2align 0x4
.long 0x451
L_41751:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41749:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41753:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_58+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_41737:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41738
L_41739:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41740
.p2align 0x4
.long 0x451
L_41740:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41738:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_41742:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_57+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_56:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41728
L_41729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41730
.p2align 0x4
.long 0x451
L_41730:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41728:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_60:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41776
L_41777:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41778
.p2align 0x4
.long 0x451
L_41778:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41776:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_59:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41765
L_41766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41767
.p2align 0x4
.long 0x451
L_41767:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41765:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_58:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41754
L_41755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41756
.p2align 0x4
.long 0x451
L_41756:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41754:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_57:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41743
L_41744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41745
.p2align 0x4
.long 0x451
L_41745:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41743:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_30
.hidden get_30
get_30:
L_41781:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_42142
L_41782:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_389938
L_41783:
	movq 0x8(%rbp),%r13
	movq 0xD0(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0xC8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0xC0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0xB8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0xB0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0xA0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x98(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x90(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x88(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x80(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x78(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x70(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x68(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x60(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x58(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x50(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x48(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x40(%r13),%r11
	movq %r11,0x98(%rbp)
	movq 0x38(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq 0x30(%r13),%r11
	movq %r11,0xA8(%rbp)
	movq 0x28(%r13),%r11
	movq %r11,0xB0(%rbp)
	movq 0x20(%r13),%r11
	movq %r11,0xB8(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0xC0(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0xC8(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0xD0(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_41784
L_41785:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_389936
L_41786:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_41788:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_41789
L_42134:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD9A,%r13
	jne L_41789
L_42135:
	movq 0x8(%r14),%r13
	movq 0x10(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_389931
L_41789:
	incl %ecx
	movl %ecx,0xD8(%rbp)
	jo L_41790
L_41791:
	cmpq $0x1,%r15
	je L_389851
L_41792:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_41788
.p2align 0x4
L_389851:
L_41793:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41794
L_42132:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_42133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42133
.p2align 0x4
.long 0xACC
L_42133:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_41794:
	movl 0xD8(%rbp),%ecx
L_41795:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_41796
L_41797:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_41799
L_42131:
	movl %ecx,0x0(%r15)
L_41799:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_389925
	cmpq $0x2,%r15
	je L_389924
	cmpq $0x3,%r15
	je L_389920
	cmpq $0x5,%r15
	je L_389918
L_41800:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF24,%r15
	je L_389912
	cmpq $0xF25,%r15
	je L_389866
	cmpq $0xF26,%r15
	je L_389852
L_41801:
	movq 0x0(%r14),%r15
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x25FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x0,0x0(%r15)
L_41802:
	movq $0x1B35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389852:
L_42030:
	movq 0x0(%r14),%r11
	movq 0xC8(%rbp),%r9
	movq 0x8(%r9),%r10
	movq 0x0(%r9),%r13
	movq 0x10(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r14
	incq %r14
	jo L_389865
L_42031:
	movq %r14,0x0(%r9)
	movq 0x0(%r15),%r9
	cmpq $0x1,%r9
	je L_389864
L_42032:
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r9
	movl $0x0,0x18(%rbp)
	movq %r9,%r15
.p2align 0x4,,0x7
L_42034:
	movq %r14,%r9
	andq $0x3,%r9
	jnz L_389863
L_42076:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r9
	shrq $0x1,%r9
	cmpq $0xD99,%r9
	jne L_389862
L_42077:
	movq 0x8(%r14),%r9
	movq %r9,0x20(%rbp)
	cmpq 0x0(%r14),%r10
	movq %r10,(localObjptr+0x10)(%rip)
	je L_389857
L_42035:
	movl 0x18(%rbp),%r9d
	incl %r9d
	jo L_389856
L_42036:
	cmpq $0x1,%r15
	je L_389853
L_42037:
	movl %r9d,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r10
	jmp L_42034
.p2align 0x4
L_389853:
	movl %r9d,%ecx
L_42039:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_389855
L_42040:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_82
L_42075:
	movl %ecx,0x0(%r15)
x_82:
	movq 0x0(%r13),%r15
	movq 0x8(%r11),%r14
	movq %r14,0x0(%rbp)
	movq 0x18(%r11),%r13
	movq 0x0(%r14),%r11
	cmpq $0x1,%r11
	jne L_389854
L_42073:
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_42074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_389854:
L_42042:
	movq %r11,%r15
L_42043:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_42044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_389855:
L_41796:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389856:
L_41790:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389857:
L_42079:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42080
L_42088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_42089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42089
.p2align 0x4
.long 0xAC7
L_42089:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_42080:
	movl 0x18(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_41796
L_42081:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_389859
L_42082:
	movq 0x20(%rbp),%r15
L_42083:
	movq $0x4C5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq (globalObjptr+0x5290)(%rip),%r14
	movq %r14,0x0(%r13)
	movq $0x48F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x444B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	movq $0x4C7,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x8(%r9)
	movq %r14,0x10(%r9)
	addq $0x20,%r12
	movq %r11,0x0(%r9)
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_389858
L_42084:
	movq 0x38(%rbp),%r10
	movq 0x0(%r10),%r14
	movq $0x21B5,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x8(%r8)
	addq $0x18,%r12
	movq %r9,0x0(%r8)
	movq %r10,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r8,0x0(%r10)
	movl $0x1,0x0(%r11)
	movq %r9,%r14
L_42085:
	movq $0x25FD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r15
	movq 0x0(%r15),%r13
	movq $0x21B5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r10,0x0(%r15)
	movq %r11,%r15
	jmp L_41802
.p2align 0x4
L_389858:
	movq %r9,%r14
	jmp L_42085
.p2align 0x4
L_389859:
L_42087:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x18(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x20(%rbp),%r15
	jmp L_42083
.p2align 0x4
L_389862:
	movq %r10,(localObjptr+0x10)(%rip)
	jmp L_42035
.p2align 0x4
L_389863:
	movq %r10,(localObjptr+0x10)(%rip)
	jmp L_42035
.p2align 0x4
L_389864:
L_42090:
	xorl %ecx,%ecx
	jmp L_42039
.p2align 0x4
L_389865:
L_41784:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389866:
L_41834:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	cmpq $0x1,%r15
	je L_389899
	cmpq $0x2,%r15
	je L_389867
L_41835:
	movq %r15,0xE0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_41836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_16
.p2align 0x4
L_389867:
L_41955:
	movq (globalObjptr+0x7340)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_41790
L_41956:
	movl %r14d,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x10,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r13
	movq %r13,0x48(%rbp)
	movl %r15d,0x30(%rbp)
	cmpq %r13,%r14
	movq %r14,0x28(%rbp)
	jne L_41845
L_41958:
	testq %r13,%r13
	jz L_389896
L_41959:
	cmpq $0x7FFFFFFF,%r13
	ja L_389895
L_41960:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41961
L_42026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_42027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42027
.p2align 0x4
.long 0xAC1
L_42027:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_41961:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1687,%rcx
	movq 0x48(%rbp),%rdx
	movq $0xB0,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41962
.p2align 0x4
.long 0xAC1
L_41962:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq %rax,0x50(%rbp)
L_41963:
	movq $0x0,0x60(%rbp)
loop_548:
	movq 0x48(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_389893
L_41964:
	movq 0x50(%rbp),%r15
	movq $0x4E5,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x48F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x444D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x30,%r12
	movq 0x58(%rbp),%r9
	movq %r9,0x0(%r10)
	movq 0x20(%rbp),%r9
	movq %r9,0x8(%r10)
	movq %r15,0x10(%r10)
	movq 0x18(%rbp),%r9
	movq %r9,0x18(%r10)
	movq %r14,0x20(%r10)
	movq $0x4C7,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x60(%rbp)
	movq %r10,0x8(%r9)
	addq $0x20,%r12
	movq %r11,0x0(%r9)
	movq %r13,0x10(%r9)
	movl 0x0(%r11),%r13d
	testl %r13d,%r13d
	jnz L_389892
L_41965:
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x21B5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq %r9,0x0(%r10)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq %r10,0x0(%r13)
	movl $0x1,0x0(%r11)
	movq %r14,%r15
L_41966:
	movq $0x4CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x34(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_389891
L_41968:
	cmpl $0x0,%r13d
	jl L_389890
L_41969:
	movl $0x0,0x68(%rbp)
.p2align 0x4,,0x7
loop_549:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_389889
.p2align 0x4,,0x7
L_41970:
	movl 0x68(%rbp),%r15d
	cmpl 0x34(%rbp),%r15d
	jnl L_389869
L_42013:
	movslq %r15d,%r14
	movq 0x50(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x12FE,%r15
	jne L_42015
L_42014:
	movq 0x0(%r13),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x21B5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
L_42015:
	incl 0x68(%rbp)
	jmp loop_549
.p2align 0x4
L_389869:
L_41971:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_550:
	cmpl %ecx,0x30(%rbp)
	je L_389887
L_41972:
	movslq %ecx,%r15
	cmpq 0x28(%rbp),%r15
	jnb L_389886
L_41974:
	salq $0x4,%r15
	movq 0x18(%rbp),%r14
	movl 0x0(%r14,%r15,1),%r13d
	testl %r13d,%r13d
	jnz L_389871
L_41975:
	incl %ecx
	jo L_41790
L_41976:
	jmp loop_550
.p2align 0x4
L_389871:
L_41977:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41978
L_42007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_42008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42008
.p2align 0x4
.long 0xAC3
L_42008:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_41978:
	movl $0x1,%ecx
L_41979:
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r15
	movq $0x435B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	addq $0x20,%r12
	movl $0x0,0x4(%r14)
	movq 0x20(%rbp),%r10
	movq %r10,0x8(%r14)
	movq 0x58(%rbp),%r10
	movq %r10,0x10(%r14)
	movq $0x2601,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq 0xC0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r10),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_41784
L_41980:
	movq %r15,0x0(%r11)
	movq 0xD0(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_389883
L_41981:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_41983:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_389882
L_41999:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD98,%r11
	jne L_389881
L_42000:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x20)(%rip)
	je L_389878
L_41984:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_41790
L_41985:
	cmpq $0x1,%r15
	je L_389872
L_41986:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x20)(%rip),%r14
	jmp L_41983
.p2align 0x4
L_389872:
L_41987:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41988
L_41997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41998
.p2align 0x4
.long 0xAC2
L_41998:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_41988:
	movl 0x20(%rbp),%ecx
L_41989:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_41796
L_41990:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_41992
L_41996:
	movl %ecx,0x0(%r15)
L_41992:
	movq $0x1B31,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0xD0(%rbp),%r11
	movq 0x0(%r11),%r14
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq %r10,0x0(%r11)
	movq $0x4C5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq (globalObjptr+0x5290)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x48F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x4457,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r14,0x8(%r10)
	movq $0x4C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq %r11,0x0(%r13)
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_389873
L_41993:
	movq 0x38(%rbp),%r10
	movq 0x0(%r10),%r15
	movq $0x21B5,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x8(%r8)
	addq $0x18,%r12
	movq %r13,0x0(%r8)
	movq %r10,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r9,%r15,1)
	movq %r8,0x0(%r10)
	movl $0x1,0x0(%r11)
	movq %r13,%r15
L_41994:
	movq $0x25FD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x21B5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq %r13,%r15
	jmp L_41802
.p2align 0x4
L_389873:
	movq %r13,%r15
	jmp L_41994
.p2align 0x4
L_389878:
L_42002:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_41796
L_42003:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_41924
L_42005:
	movl %ecx,0x0(%r15)
L_41924:
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389881:
	movq %r14,(localObjptr+0x20)(%rip)
	jmp L_41984
.p2align 0x4
L_389882:
	movq %r14,(localObjptr+0x20)(%rip)
	jmp L_41984
.p2align 0x4
L_389883:
L_42006:
	xorl %ecx,%ecx
	jmp L_41989
.p2align 0x4
L_389886:
L_41849:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389887:
L_42009:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42010
L_42011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_42012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42012
.p2align 0x4
.long 0xAC3
L_42012:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_42010:
	xorl %ecx,%ecx
	jmp L_41979
.p2align 0x4
L_389889:
L_42017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_42018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42018
.p2align 0x4
.long 0xAC4
L_42018:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_41970
.p2align 0x4
L_389890:
L_42019:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389891:
L_41845:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389892:
	movq %r14,%r15
	jmp L_41966
.p2align 0x4
L_389893:
L_42021:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x18(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0xE0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_42022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_389895:
L_41938:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389896:
L_42029:
	movq (globalObjptr+0x7348)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_41963
.p2align 0x4
L_389899:
L_41843:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x20(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x28(%rbp)
	movslq %r15d,%r13
	movq %r13,0x38(%rbp)
	cmpq %r14,%r13
	jne L_41845
L_41846:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_545:
	cmpl %ecx,0x28(%rbp)
	je L_389909
L_41847:
	movslq %ecx,%r15
	cmpq 0x20(%rbp),%r15
	jnb L_41849
L_41850:
	salq $0x4,%r15
	movq 0x18(%rbp),%r14
	movl 0x0(%r14,%r15,1),%r13d
	testl %r13d,%r13d
	jnz L_389901
L_41851:
	incl %ecx
	jo L_41790
L_41852:
	jmp loop_545
.p2align 0x4
L_389901:
L_41853:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41854
L_41949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41950
.p2align 0x4
.long 0xAC0
L_41950:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_41854:
	movl $0x1,0x2C(%rbp)
L_41855:
	cmpl $0x1,0x28(%rbp)
	jne delay_0
L_41874:
	cmpq $0x0,0x20(%rbp)
	jna L_41849
L_41876:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jnz delay_0
L_41877:
	movq 0x8(%r14),%r15
L_41878:
	movq %r15,%r14
	andq $0x3,%r14
	jnz delay_0
L_41879:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF23,%r14
	jne delay_1
L_41880:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r14,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_41881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
delay_1:
delay_0:
	movq $0x5C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x88,%r12
	movq $0x7FFFFFFF,0x0(%r15)
	movl $0x0,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x48(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x50(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x58(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x60(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x68(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x70(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x78(%r15)
	movq (globalObjptr+0x7340)(%rip),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,%r11d
	incl %r13d
	jo L_41790
L_41857:
	movl %r13d,0x0(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	addq $0x10,%r12
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x435F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	movq %r15,0x10(%r10)
	movq %r14,0x18(%rbp)
	addq $0x20,%r12
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x2601,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13)
objptr_2:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41858
.p2align 0x4
.long 0xAB3
L_41858:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_546:
	cmpq $0x1,%r15
	jnl L_389902
L_41873:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_546
.p2align 0x4
L_389902:
L_41859:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41860
L_41871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41872
.p2align 0x4
.long 0xAB6
L_41872:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_41860:
	movq 0x20(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_389903
L_41861:
	movq %r14,0xE8(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_41862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389903:
L_41866:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389909:
L_41951:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41952
L_41953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41954
.p2align 0x4
.long 0xAC0
L_41954:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_41952:
	movl $0x0,0x2C(%rbp)
	jmp L_41855
.p2align 0x4
L_389912:
L_41803:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0x7340)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	incl %r14d
	movl %r14d,0x24(%rbp)
	jo L_41790
L_41804:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41805
L_41832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41833
.p2align 0x4
.long 0xAB0
L_41833:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_41805:
	movq (globalObjptr+0x7340)(%rip),%r15
	movl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x28(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41806
.p2align 0x4
.long 0xAAA
L_41806:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_544:
	cmpq $0x1,%r15
	jnl L_389913
L_41831:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_544
.p2align 0x4
L_389913:
L_41807:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41808
L_41829:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41830
.p2align 0x4
.long 0xAAF
L_41830:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_41808:
	movq 0x20(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_389914
L_41809:
	movq %r14,0xE8(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_41810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389914:
L_41824:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_41825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389918:
L_42124:
	shrq $0x3,%r14
	movb %r14b,%r13b
	movzbq %r13b,%r15
	shlq $0x3,%r15
	orq $0x6,%r15
	movq %r15,0x18(%rbp)
	testb %r13b,%r13b
	jnz L_389919
L_42125:
	movq $0x11,%r15
toBits_11:
	movq %r15,0xE8(%rbp)
	movq $0x11,0xE0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_42126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_389919:
L_42130:
	movq $0x9,%r15
	jmp toBits_11
.p2align 0x4
L_389920:
L_42107:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_42108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42108
.p2align 0x4
.long 0xAB5
L_42108:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_551:
	cmpq $0x1,%r15
	jnl L_389921
L_42123:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_551
.p2align 0x4
L_389921:
L_42109:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42110
L_42121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_42122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42122
.p2align 0x4
.long 0xACA
L_42122:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_42110:
	movq 0x28(%rbp),%r15
	movq $0xAFD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1EA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_389922
L_42111:
	movq %r14,0xE8(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_42112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389922:
L_42116:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_42117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389924:
L_42102:
	movq 0x20(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_42103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInf_20
.p2align 0x4
L_389925:
L_42091:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_389926
L_42092:
	movq %r14,0xE8(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_42093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_389926:
L_42097:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_42098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_389931:
L_42137:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_41796
L_42138:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_389932
L_42140:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389932:
L_42139:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389936:
L_42141:
	xorl %ecx,%ecx
	jmp L_41795
.p2align 0x4
L_389938:
L_42142:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_42143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42143
.p2align 0x4
.long 0x45F
L_42143:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_41783
.p2align 0x4
.long 0x4AF
L_42074:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_42043
.p2align 0x4
.long 0x1
L_42044:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_42045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xAB1
L_41836:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41837
L_41841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41842
.p2align 0x4
.long 0xAB2
L_41842:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_41837:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r14
	movq $0x4C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalObjptr+0x5290)(%rip),%r11
	movq %r11,0x0(%r15)
	movq $0x48F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x53,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x4455,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	addq $0x18,%r12
	movq %r15,0x8(%r9)
	movq $0x4C7,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x8(%r8)
	movq %r11,0x10(%r8)
	addq $0x20,%r12
	movq %r10,0x0(%r8)
	movl 0x0(%r10),%r11d
	testl %r11d,%r11d
	jnz L_389940
L_41838:
	movq 0x38(%rbp),%r11
	movq 0x0(%r11),%r14
	movq $0x21B5,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x8(%r9)
	addq $0x18,%r12
	movq %r8,0x0(%r9)
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r9,0x0(%r11)
	movl $0x1,0x0(%r10)
	movq %r15,%r14
	movq %r8,%r15
L_41839:
	movq $0x25FD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq 0x8(%r13),%r14
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r14
	movq $0x21B5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq %r10,0x0(%r13)
	movq %r11,%r15
	jmp L_41802
.p2align 0x4
L_389940:
	movq %r15,%r14
	movq %r8,%r15
	jmp L_41839
.p2align 0x4
.long 0xAC5
L_42022:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42023
L_42024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_42025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42025
.p2align 0x4
.long 0xAC6
L_42025:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_42023:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x60(%rbp),%r14
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x60(%rbp)
	jmp loop_548
.p2align 0x4
.long 0xAB7
L_41881:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41882
L_41946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41947
.p2align 0x4
.long 0xABF
L_41947:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_41882:
	movl 0x28(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_41888
L_41883:
	cmpl $0x10,%r15d
	je L_41888
L_41884:
	cmpl $0x20,%r15d
	je L_41888
L_41885:
	cmpl $0x40,%r15d
	jne delay_0
L_41888:
	movq 0xB0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_41889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0xAB4
L_41862:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41863
L_41864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41865
.p2align 0x4
.long 0xAB5
L_41865:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_41863:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x25FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalWord64+0xFF0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_41802
.p2align 0x4
.long 0x1
L_41867:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_62+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xAAB
L_41810:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41811
L_41822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41823
.p2align 0x4
.long 0xAAE
L_41823:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_41811:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x4BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalWord64+0xFF0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_41812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
.long 0x1
L_41825:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_61+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xAC8
L_42126:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42127
L_42128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_42129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42129
.p2align 0x4
.long 0xACB
L_42129:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_42127:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x25FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x0,0x0(%r14)
	movq %r14,%r15
	jmp L_41802
.p2align 0x4
.long 0xAB4
L_42112:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42113
L_42114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_42115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42115
.p2align 0x4
.long 0xAB5
L_42115:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_42113:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x25FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalWord64+0xFF0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_41802
.p2align 0x4
.long 0x1
L_42117:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_64+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xAC8
L_42103:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42104
L_42105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_42106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42106
.p2align 0x4
.long 0xAC9
L_42106:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_42104:
	movq $0x25FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalWord64+0x1000)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_41802
.p2align 0x4
.long 0xAC8
L_42093:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42094
L_42095:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_42096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42096
.p2align 0x4
.long 0xAC9
L_42096:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_42094:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq $0x25FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x0,0x0(%r14)
	movq %r14,%r15
	jmp L_41802
.p2align 0x4
.long 0x1
L_42098:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_63+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4AF
L_42045:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEA28)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_42046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xAB8
L_41889:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x8,%r15d
	je L_389959
	cmpl $0x10,%r15d
	je L_389958
	cmpl $0x20,%r15d
	je L_389957
	cmpl $0x40,%r15d
	je L_389953
L_41890:
	movq (globalObjptr+0x2440)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389953:
L_41942:
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
L_41892:
	movq 0x38(%rbp),%rdx
	testq %rdx,%rdx
	jz L_389956
L_41893:
	cmpq $0x7FFFFFFF,%rdx
	ja L_41938
L_41894:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1685,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41895
.p2align 0x4
.long 0xAB9
L_41895:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq %rax,0x28(%rbp)
L_41896:
	movq $0x0,0x40(%rbp)
loop_547:
	movq 0x38(%rbp),%r15
	cmpq %r15,0x40(%rbp)
	jl L_389954
L_41897:
	movq 0x28(%rbp),%r15
	movq $0x171F,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0x5F18)(%rip),%r14
	movq %r14,0xE0(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xE0,%rbp
	leaq (L_41898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1288
.p2align 0x4
L_389954:
L_41930:
	movq 0x40(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x18(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	movl %r11d,0x48(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x50(%rbp)
	movq %r14,0xE0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (x_81+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_30
.p2align 0x4
L_389956:
L_41939:
	movq (globalObjptr+0x7338)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_41896
.p2align 0x4
L_389957:
L_41941:
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_41892
.p2align 0x4
L_389958:
L_41940:
	movq 0x50(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_41892
.p2align 0x4
L_389959:
L_41891:
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_41892
.p2align 0x4
.long 0x1
bug_62:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41868
L_41869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41870
.p2align 0x4
.long 0x451
L_41870:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41868:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xAAC
L_41812:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41813
L_41820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41821
.p2align 0x4
.long 0xAAD
L_41821:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_41813:
	movq $0x4C5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq (globalObjptr+0x5290)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x48F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x444F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x20,%r12
	movq 0x30(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x18(%rbp),%r10
	movq %r10,0x8(%r11)
	movq %r14,0x10(%r11)
	movq $0x4C7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	movq %r15,0x10(%r10)
	addq $0x20,%r12
	movq %r13,0x0(%r10)
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_389962
L_41814:
	movq 0x38(%rbp),%r11
	movq 0x0(%r11),%r15
	movq $0x21B5,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x8(%r9)
	addq $0x18,%r12
	movq %r10,0x0(%r9)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r15,1)
	movq %r9,0x0(%r11)
	movl $0x1,0x0(%r13)
	movq %r10,%r15
L_41815:
	movq $0x25FD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x12FE,%r11
	jne L_389961
L_41816:
	movq 0x0(%r14),%r11
	movq 0x10(%r11),%r10
	movq 0x0(%r10),%r14
	movq $0x21B5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq %r11,0x0(%r10)
	movq %r13,%r15
L_41817:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x435D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq 0x28(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x18(%rbp),%r10
	movq %r10,0x8(%r11)
	movq $0x2601,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14)
	jmp L_41802
.p2align 0x4
L_389961:
	movq %r13,%r15
	jmp L_41817
.p2align 0x4
L_389962:
	movq %r10,%r15
	jmp L_41815
.p2align 0x4
.long 0x1
bug_61:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41826
L_41827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_41828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41828
.p2align 0x4
.long 0x451
L_41828:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_41826:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_64:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42118
L_42119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_42120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42120
.p2align 0x4
.long 0x451
L_42120:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_42118:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_63:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42099
L_42100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_42101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42101
.p2align 0x4
.long 0x451
L_42101:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_42099:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5AF
L_42046:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_42047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xABA
L_41898:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41899
L_41928:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41929
.p2align 0x4
.long 0xABC
L_41929:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_41899:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x4C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x48F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x53,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movl $0x0,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x4451,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq %r11,0x0(%r8)
	movq %r15,0x8(%r8)
	movq $0x4C7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r8,0x8(%r11)
	movq %r10,0x10(%r11)
	addq $0x20,%r12
	movq %r9,0x0(%r11)
	movl 0x0(%r9),%r10d
	testl %r10d,%r10d
	jnz L_389979
L_41900:
	movq 0x0(%r14),%r10
	movq $0x21B5,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r11,0x0(%r8)
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r10,1)
	movq %r8,0x0(%r14)
	movl $0x1,0x0(%r9)
	movq %r15,%r14
	movq %r11,%r15
L_41901:
	movq $0x4CB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x18(%rbp)
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x10(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_41784
L_41902:
	movq %r15,0x0(%r11)
	movq 0xD0(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_389977
L_41903:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_41905:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_389976
L_41918:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD98,%r11
	jne L_389975
L_41919:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x18)(%rip)
	je L_389972
L_41906:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_41790
L_41907:
	cmpq $0x1,%r15
	je L_389967
L_41908:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_41905
.p2align 0x4
L_389967:
L_41909:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41910
L_41916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41917
.p2align 0x4
.long 0xABB
L_41917:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_41910:
	movl 0x38(%rbp),%ecx
L_41911:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_41796
L_41912:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_41914
L_41915:
	movl %ecx,0x0(%r15)
L_41914:
	movq $0x1B31,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp objptr_2
.p2align 0x4
L_389972:
L_41921:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_41796
L_41922:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_41924
L_41925:
	movl %ecx,0x0(%r15)
	jmp L_41924
.p2align 0x4
L_389975:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_41906
.p2align 0x4
L_389976:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_41906
.p2align 0x4
L_389977:
L_41926:
	xorl %ecx,%ecx
	jmp L_41911
.p2align 0x4
L_389979:
	movq %r15,%r14
	movq %r11,%r15
	jmp L_41901
.p2align 0x4
.long 0xABD
x_81:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_41931
L_41935:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_41936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_41936
.p2align 0x4
.long 0xABE
L_41936:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_41931:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x12FE,%r14
	je L_389981
L_41934:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
L_41933:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,%r10
	imulq $0x18,%r10
	movq 0x50(%rbp),%r9
	movq %r9,0x8(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	imulq $0x18,%r11
	movq %r15,0x10(%r14,%r11,1)
	movq %r13,%r15
	imulq $0x18,%r15
	movl 0x48(%rbp),%r11d
	movl %r11d,0x0(%r14,%r15,1)
	incq %r13
	movq %r13,0x40(%rbp)
	jmp loop_547
.p2align 0x4
L_389981:
L_41932:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r14
	movq %r14,%r15
	jmp L_41933
.p2align 0x4
.long 0x51E
L_42047:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42048
L_42071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_42072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42072
.p2align 0x4
.long 0x4AE
L_42072:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_42048:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_42049:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_41790
L_42050:
	cmpq $0x1,%r14
	je L_389983
L_42051:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_42049
.p2align 0x4
L_389983:
L_42052:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42053
L_42069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_42070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42070
.p2align 0x4
.long 0x4E6
L_42070:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_42053:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_389984
L_42054:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_33:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_34+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_389984:
L_42068:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_33
.p2align 0x4
.long 0x1
rev_34:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_389990
L_42055:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_42056:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_389989
.p2align 0x4,,0x7
L_42057:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_389988
L_42058:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_42056
.p2align 0x4
L_389988:
L_42060:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_42061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_389989:
L_42065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_42066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42066
.p2align 0x4
.long 0x45B
L_42066:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_42057
.p2align 0x4
L_389990:
L_42067:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_42060
.p2align 0x4
.long 0x1
L_42061:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42062
L_42063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_42064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42064
.p2align 0x4
.long 0x451
L_42064:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_42062:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1288
.hidden x_1288
x_1288:
L_42144:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_42818
L_42145:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_389992
L_42146:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0xD8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0xD0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xC0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xB8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0xB0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0xA8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0xA0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x98(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x90(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x88(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x80(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x70(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0xA0(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0xA4(%rbp)
	movq $0x1721,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1721,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1721,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x41,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (fromIntForLength_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_389992:
L_42818:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_42819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42819
.p2align 0x4
.long 0x4AE
L_42819:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_42146
.p2align 0x4
.long 0xACD
fromIntForLength_0:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movslq %r15d,%rdx
	movq %rdx,0xD8(%rbp)
	movl %r15d,0x18(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_42363
L_42147:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1723,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_42148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42148
.p2align 0x4
.long 0xACE
L_42148:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_552:
	cmpq 0xD8(%rbp),%r15
	jnl L_389994
L_42816:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_552
.p2align 0x4
L_389994:
L_42149:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movl %r14d,%r15d
	movl %r15d,0xE8(%rbp)
	movslq %r15d,%r13
	movq %r13,0xF0(%rbp)
	cmpq %r14,%r13
	jne L_42151
L_42152:
	cmpl $0x0,%r15d
	jl L_390079
L_42153:
	movl $0x0,0xEC(%rbp)
	movl $0x0,0xF8(%rbp)
	movl $0x0,0xFC(%rbp)
.p2align 0x4,,0x7
loop_553:
	movl 0xFC(%rbp),%r15d
	cmpl 0xE8(%rbp),%r15d
	jnl L_389998
L_42788:
	movslq %r15d,%r14
	imulq $0x18,%r14
	movq 0x8(%rbp),%r15
	movq 0x10(%r15,%r14,1),%r13
	movq %r13,0x100(%rbp)
	movq 0x0(%r13),%r15
	andq $0x1,%r15
	jz L_389997
L_42814:
	movq 0xB0(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x110(%rbp)
.p2align 0x4,,0x7
addDirect_0:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_389996
.p2align 0x4,,0x7
L_42807:
	movq $0x218F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0xFC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x100(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1153,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x110(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x260F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x108(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_389995
L_42808:
	movl %r14d,0x0(%r15)
.p2align 0x4,,0x7
L_42797:
	movl 0xEC(%rbp),%ebx
	movl 0xF8(%rbp),%ecx
.p2align 0x4,,0x7
L_42796:
	movl %ebx,0xEC(%rbp)
	movl %ecx,0xF8(%rbp)
	incl 0xFC(%rbp)
	jmp loop_553
.p2align 0x4
L_389995:
L_42159:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_389996:
L_42809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_42810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42810
.p2align 0x4
.long 0xB1A
L_42810:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	jmp L_42807
.p2align 0x4
L_389997:
L_42789:
	movq 0x100(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_42790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_389998:
L_42154:
	movq 0xF0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_42363
L_42155:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1725,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_42156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42156
.p2align 0x4
.long 0xACF
L_42156:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq %rax,0x100(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_554:
	cmpq 0xF0(%rbp),%r15
	jnl L_389999
L_42786:
	movq 0x100(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_554
.p2align 0x4
L_389999:
L_42157:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42158
L_42784:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42785
.p2align 0x4
.long 0xB18
L_42785:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42158:
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0xC0(%rbp),%r15
	addl 0x0(%r15),%r14d
	jo L_42159
L_42160:
	movq 0xD0(%rbp),%r15
	addl 0x0(%r15),%r14d
	jo L_42159
L_42161:
	movl 0xF8(%rbp),%ecx
	movl %ecx,%r15d
	movl %r15d,%r13d
	sarl $0x4,%r13d
	shrl $0x1B,%r13d
	addl %r13d,%r15d
	sarl $0x5,%r15d
	movl %ecx,%eax
	movl $0x20,%ebx
	cltd
	idivl %ebx
	cmpl $0x1,%edx
	jng L_390074
L_42783:
	movl $0x1,%edx
	movl %r15d,%ecx
	movl %edx,%ebx
	movl %r14d,(localWord32+0x4)(%rip)
L_42163:
	addl %ecx,%ebx
	jo L_42159
L_42164:
	addl (localWord32+0x4)(%rip),%ebx
	movl %ebx,0xB0(%rbp)
	jo L_42159
L_42165:
	movl 0xA4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_42175
L_42166:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_555:
	cmpl %ecx,0xE8(%rbp)
	je L_390068
L_42167:
	movslq %ecx,%r15
	cmpq 0xE0(%rbp),%r15
	jnb L_42169
L_42170:
	imulq $0x18,%r15
	movq 0x8(%rbp),%r14
	movl 0x0(%r14,%r15,1),%r13d
	testl %r13d,%r13d
	jnz L_390001
L_42171:
	incl %ecx
	jo L_42159
L_42172:
	jmp loop_555
.p2align 0x4
L_390001:
L_42173:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42175
L_42774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42775
.p2align 0x4
.long 0xB17
L_42775:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42175:
	movl 0xA0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_390065
L_42176:
	movl $0x0,0xA4(%rbp)
	movl $0x1,0xB4(%rbp)
L_42177:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_390064
L_42183:
	shrq $0x1,%r15
	movl %r15d,0x20(%rbp)
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_390002
L_42184:
	movq 0x8(%r13),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0xC0(%rbp)
	movq $0x1,0xD0(%rbp)
	movq %r13,%r15
L_42185:
	movl 0x0(%r15),%r14d
	movl %r14d,0x24(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x11,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_390002:
L_42771:
	movq $0x1,%r14
	movq $0x1,%r15
L_42196:
	movq 0xC8(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_390003
L_42197:
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0xB8(%rbp)
	movq 0x0(%r11),%r14
L_42198:
	movl 0x0(%r14),%r15d
	movl %r15d,0x24(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xD0(%rbp)
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x9,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_390003:
L_42209:
	movl 0xEC(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_42212
L_42210:
	movl 0xB4(%rbp),%r13d
	testl %r13d,%r13d
	jz L_390037
L_42454:
	movq 0xD8(%rbp),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_42151
L_42456:
	decl %r11d
	jo L_42159
L_42457:
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	movl %r11d,0x24(%rbp)
.p2align 0x4,,0x7
loop_564:
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jz L_390034
L_42458:
	movslq %r15d,%r14
	cmpq 0xD8(%rbp),%r14
	jnb L_42169
L_42460:
	movq 0x18(%rbp),%r13
	cmpq $0x1,0x0(%r13,%r14,8)
	jne L_390005
L_42758:
	decl %r15d
	jo L_42159
L_42759:
	movl %r15d,0x24(%rbp)
	jmp loop_564
.p2align 0x4
L_390005:
L_42461:
	movq $0x1,0x60(%rbp)
	movq $0x41,%r14
	movl %r15d,%ecx
	movq %r14,%r15
.p2align 0x4,,0x7
loop_565:
	testl %ecx,%ecx
	jz L_390009
L_42462:
	movslq %ecx,%r14
	cmpq 0xD8(%rbp),%r14
	jnb L_390008
L_42464:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_390007
L_42471:
	decl %ecx
	jo L_42159
L_42472:
	jmp loop_565
.p2align 0x4
L_390007:
L_42465:
	movq %r15,0x118(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r13),%r11
	movq 0x18(%rbp),%r13
	movq %r13,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r15,0x0(%r13,%r14,8)
	movq 0x8(%r11),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x110,%rbp
	leaq (L_42466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390008:
L_42169:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390009:
L_42473:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_390032
L_42474:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_42475:
	incl %ecx
	jo L_42159
L_42476:
	cmpq $0x1,%r15
	je L_390010
L_42477:
	movq 0x8(%r15),%r15
	jmp L_42475
.p2align 0x4
L_390010:
L_42478:
L_42479:
	movslq %ecx,%rdx
	movq %rdx,0x68(%rbp)
	testq %rdx,%rdx
	jz L_390030
L_42480:
	cmpq $0x7FFFFFFF,%rdx
	ja L_42363
L_42481:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42482
.p2align 0x4
.long 0xAF8
L_42482:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0xB8(%rbp)
L_42483:
	movq 0x60(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_566:
	cmpq 0x68(%rbp),%r15
	jnl L_390012
L_42752:
	cmpq $0x1,%r14
	je L_390011
L_42753:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x8(%r10),%r9
	movl 0x0(%r10),%r8d
	movq 0xB8(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x8(%r10,%r13,1)
	salq $0x4,%r11
	movl %r8d,0x0(%r10,%r11,1)
	incq %r15
	jmp loop_566
.p2align 0x4
L_390011:
L_42368:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390012:
L_42484:
	movq 0xB8(%rbp),%r15
	movq $0xB3F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x60(%rbp)
	cmpq %r14,%rdx
	jne L_42151
L_42486:
	decl %r13d
	movl %r13d,0x68(%rbp)
	jo L_42159
L_42487:
	testq %rdx,%rdx
	jz L_390026
L_42488:
	cmpq $0x7FFFFFFF,%rdx
	ja L_42363
L_42489:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42490
.p2align 0x4
.long 0xAF9
L_42490:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0xC0(%rbp)
L_42491:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_567:
	cmpq 0x60(%rbp),%r15
	jnl L_390014
L_42748:
	movl %r15d,%r14d
	movl 0x68(%rbp),%r13d
	subl %r14d,%r13d
	jo L_42159
L_42749:
	movq %r15,%r14
	movq %r15,%r11
	movslq %r13d,%r10
	movq %r10,%r13
	salq $0x4,%r13
	movq 0xB8(%rbp),%r9
	movq 0x8(%r9,%r13,1),%r8
	salq $0x4,%r10
	movl 0x0(%r9,%r10,1),%r13d
	movq 0xC0(%rbp),%r10
	movq %r10,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	salq $0x4,%r14
	movq %r8,0x8(%r10,%r14,1)
	salq $0x4,%r11
	movl %r13d,0x0(%r10,%r11,1)
	incq %r15
	jmp loop_567
.p2align 0x4
L_390014:
L_42492:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42493
L_42746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42747
.p2align 0x4
.long 0xB13
L_42747:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42493:
	movq 0xC0(%rbp),%r15
	movq $0xB3F,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x20(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_390016
L_42494:
	movq %r15,0x60(%rbp)
L_42495:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_390015
L_42497:
	movl %r13d,0x118(%rbp)
	movq $0x37C3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_42498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_390015:
L_42151:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390016:
L_42730:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x60(%rbp)
	cmpq %r14,%rdx
	jne L_42151
L_42732:
	decl %r13d
	movl %r13d,0x68(%rbp)
	jo L_42159
L_42733:
	testq %rdx,%rdx
	jz L_390021
L_42734:
	cmpq $0x7FFFFFFF,%rdx
	ja L_390020
L_42735:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42736
.p2align 0x4
.long 0xB13
L_42736:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0xB8(%rbp)
L_42737:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_574:
	cmpq 0x60(%rbp),%r15
	jnl L_390018
L_42742:
	movl %r15d,%r14d
	movl 0x68(%rbp),%r13d
	subl %r14d,%r13d
	jo L_42159
L_42743:
	movq %r15,%r14
	movq %r15,%r11
	movslq %r13d,%r10
	movq %r10,%r13
	salq $0x4,%r13
	movq 0xC0(%rbp),%r9
	movq 0x8(%r9,%r13,1),%r8
	salq $0x4,%r10
	movl 0x0(%r9,%r10,1),%r13d
	movq 0xB8(%rbp),%r10
	movq %r10,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	salq $0x4,%r14
	movq %r8,0x8(%r10,%r14,1)
	salq $0x4,%r11
	movl %r13d,0x0(%r10,%r11,1)
	incq %r15
	jmp loop_574
.p2align 0x4
L_390018:
L_42738:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42739
L_42740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42741
.p2align 0x4
.long 0xB14
L_42741:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42739:
	movq 0xB8(%rbp),%r15
	movq $0xB3F,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x60(%rbp)
	jmp L_42495
.p2align 0x4
L_390020:
L_42363:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390021:
L_42745:
	movq (globalObjptr+0xF88)(%rip),%r15
	movq %r15,0xB8(%rbp)
	jmp L_42737
.p2align 0x4
L_390026:
L_42751:
	movq (globalObjptr+0xF88)(%rip),%r15
	movq %r15,0xC0(%rbp)
	jmp L_42491
.p2align 0x4
L_390030:
L_42756:
	movq (globalObjptr+0x5268)(%rip),%r15
	movq %r15,0xB8(%rbp)
	jmp L_42483
.p2align 0x4
L_390032:
L_42757:
	xorl %ecx,%ecx
	jmp L_42479
.p2align 0x4
L_390034:
L_42760:
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x20(%rbp)
L_42375:
	movq 0xA8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_42376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1289
.p2align 0x4
L_390037:
L_42212:
	movq 0xD8(%rbp),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_42151
L_42214:
	decl %r11d
	jo L_42159
L_42215:
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movl %r11d,0x24(%rbp)
.p2align 0x4,,0x7
loop_556:
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jz L_390060
L_42216:
	movslq %r15d,%r14
	cmpq 0xD8(%rbp),%r14
	jnb L_42169
L_42218:
	movq 0x18(%rbp),%r13
	cmpq $0x1,0x0(%r13,%r14,8)
	jne L_390039
L_42372:
	decl %r15d
	jo L_42159
L_42373:
	movl %r15d,0x24(%rbp)
	jmp loop_556
.p2align 0x4
L_390039:
L_42219:
	movq $0x1,0xB8(%rbp)
	movq $0x41,%r14
	movl %r15d,%ecx
	movq %r14,%r15
.p2align 0x4,,0x7
loop_557:
	testl %ecx,%ecx
	jz L_390043
L_42220:
	movslq %ecx,%r14
	cmpq 0xD8(%rbp),%r14
	jnb L_42169
L_42222:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_390041
L_42229:
	decl %ecx
	jo L_42159
L_42230:
	jmp loop_557
.p2align 0x4
L_390041:
L_42223:
	movq %r15,0x118(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r13
	movq %r13,0xC0(%rbp)
	movq 0x8(%r13),%r11
	movq 0x18(%rbp),%r13
	movq %r13,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r15,0x0(%r13,%r14,8)
	movq 0x8(%r11),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x110,%rbp
	leaq (L_42224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390043:
L_42231:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_390058
L_42232:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_42233:
	incl %ecx
	jo L_42159
L_42234:
	cmpq $0x1,%r15
	je L_390044
L_42235:
	movq 0x8(%r15),%r15
	jmp L_42233
.p2align 0x4
L_390044:
L_42236:
L_42237:
	movslq %ecx,%rdx
	movq %rdx,0xC0(%rbp)
	testq %rdx,%rdx
	jz L_390056
L_42238:
	cmpq $0x7FFFFFFF,%rdx
	ja L_42363
L_42239:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42240
.p2align 0x4
.long 0xAD5
L_42240:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0xC8(%rbp)
L_42241:
	movq 0xB8(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_558:
	cmpq 0xC0(%rbp),%r15
	jnl L_390046
L_42365:
	cmpq $0x1,%r14
	je L_42368
L_42366:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x8(%r10),%r9
	movl 0x0(%r10),%r8d
	movq 0xC8(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x8(%r10,%r13,1)
	salq $0x4,%r11
	movl %r8d,0x0(%r10,%r11,1)
	incq %r15
	jmp loop_558
.p2align 0x4
L_390046:
L_42242:
	movq 0xC8(%rbp),%r15
	movq $0xB3F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0xB8(%rbp)
	cmpq %rdx,%r14
	jne L_42151
L_42244:
	decl %r13d
	movl %r13d,0xC0(%rbp)
	jo L_42159
L_42245:
	testq %rdx,%rdx
	jz L_390052
L_42246:
	cmpq $0x7FFFFFFF,%rdx
	ja L_42363
L_42247:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42248
.p2align 0x4
.long 0xAD6
L_42248:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0xD0(%rbp)
L_42249:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_559:
	cmpq 0xB8(%rbp),%r15
	jnl L_390048
L_42360:
	movl %r15d,%r14d
	movl 0xC0(%rbp),%r13d
	subl %r14d,%r13d
	jo L_42159
L_42361:
	movq %r15,%r14
	movq %r15,%r11
	movslq %r13d,%r10
	movq %r10,%r13
	salq $0x4,%r13
	movq 0xC8(%rbp),%r9
	movq 0x8(%r9,%r13,1),%r8
	salq $0x4,%r10
	movl 0x0(%r9,%r10,1),%r13d
	movq 0xD0(%rbp),%r10
	movq %r10,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	salq $0x4,%r14
	movq %r8,0x8(%r10,%r14,1)
	salq $0x4,%r11
	movl %r13d,0x0(%r10,%r11,1)
	incq %r15
	jmp loop_559
.p2align 0x4
L_390048:
L_42250:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42251
L_42358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42359
.p2align 0x4
.long 0xAED
L_42359:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42251:
	movq 0xD0(%rbp),%r15
	movq $0xB3F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xB8(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_42151
L_42253:
	movq $0x37DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x110(%rbp)
	movl %r13d,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
L_390052:
L_42364:
	movq (globalObjptr+0xF88)(%rip),%r15
	movq %r15,0xD0(%rbp)
	jmp L_42249
.p2align 0x4
L_390056:
L_42370:
	movq (globalObjptr+0x5268)(%rip),%r15
	movq %r15,0xC8(%rbp)
	jmp L_42241
.p2align 0x4
L_390058:
L_42371:
	xorl %ecx,%ecx
	jmp L_42237
.p2align 0x4
L_390060:
L_42374:
	movq 0x78(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_42375
.p2align 0x4
L_390064:
L_42178:
	movq (globalObjptr+0xE458)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_42179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390065:
L_42772:
	movl $0x1,%ecx
L_42773:
	movl %ecx,0xB4(%rbp)
	cmpl $0x1,0xB0(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0xA4(%rbp)
	jmp L_42177
.p2align 0x4
L_390068:
L_42776:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42777
L_42780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42781
.p2align 0x4
.long 0xB17
L_42781:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42777:
	cmpl $0x1,0xB0(%rbp)
	setg %al
	movzbl %al,%eax
	movl 0xA0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_390069
L_42778:
	movl %eax,0xB4(%rbp)
	movl $0x0,0xA4(%rbp)
	jmp L_42177
.p2align 0x4
L_390069:
	movl %eax,%ecx
	jmp L_42773
.p2align 0x4
L_390074:
	movl %r15d,%ecx
	movl %edx,%ebx
	movl %r14d,(localWord32+0x4)(%rip)
	jmp L_42163
.p2align 0x4
L_390079:
L_42317:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB19
L_42790:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movl 0x110(%rbp),%r15d
	movl %r15d,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42791
L_42812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_42813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42813
.p2align 0x4
.long 0xB1B
L_42813:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_42791:
	movl 0x108(%rbp),%r15d
	cmpl $0x0,%r15d
	je L_42797
	cmpl $0x8,%r15d
	je L_390089
	cmpl $0x10,%r15d
	je L_390086
	cmpl $0x20,%r15d
	je L_390085
	cmpl $0x40,%r15d
	je L_390084
L_42792:
	movq $0x1151,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl 0xFC(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x100(%rbp),%r13
	movq %r13,0x8(%r14)
	movslq %r15d,%r13
	cmpq 0xD8(%rbp),%r13
	jnb L_42169
L_42794:
	movq 0x18(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq $0x2611,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r11,%r13,8)
	movl 0xF8(%rbp),%ebx
	addl %r15d,%ebx
	jo L_42159
L_42795:
	movl $0x1,%r15d
	movl %ebx,%ecx
	movl %r15d,%ebx
	jmp L_42796
.p2align 0x4
L_390084:
L_42811:
	movq 0xC0(%rbp),%r14
	movq %r14,0x108(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,0x110(%rbp)
	jmp addDirect_0
.p2align 0x4
L_390085:
L_42806:
	movq 0xD0(%rbp),%r14
	movq %r14,0x108(%rbp)
	movq 0xC8(%rbp),%r14
	movq %r14,0x110(%rbp)
	jmp addDirect_0
.p2align 0x4
L_390086:
L_42802:
	movq $0x1151,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl 0xFC(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x100(%rbp),%r13
	movq %r13,0x8(%r14)
	movslq %r15d,%r13
	cmpq 0xD8(%rbp),%r13
	jnb L_42169
L_42804:
	movq 0x18(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq $0x2611,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r11,%r13,8)
	movl 0xF8(%rbp),%ecx
	addl %r15d,%ecx
	jo L_42159
L_42805:
	movl 0xEC(%rbp),%ebx
	jmp L_42796
.p2align 0x4
L_390089:
L_42798:
	movq $0x1151,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl 0xFC(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x100(%rbp),%r13
	movq %r13,0x8(%r14)
	movslq %r15d,%r13
	cmpq 0xD8(%rbp),%r13
	jnb L_42169
L_42800:
	movq 0x18(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq $0x2611,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r11,%r13,8)
	movl 0xF8(%rbp),%ecx
	addl %r15d,%ecx
	jo L_42159
L_42801:
	movl 0xEC(%rbp),%ebx
	jmp L_42796
.p2align 0x4
.long 0xAD0
L_42186:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42187
L_42769:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_42770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42770
.p2align 0x4
.long 0xB16
L_42770:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_42187:
	movq 0xF8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_390097
L_42768:
	movq 0x8(%r14),%r15
L_42189:
	movq 0x8(%r15),%r14
	movl 0xB4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_390096
L_42190:
	movq $0x2197,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
L_42191:
	movslq 0x24(%rbp),%r14
	cmpq 0xF0(%rbp),%r14
	jnb L_42169
L_42193:
	movq 0x100(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13,%r14,8)
	movq $0x114F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2613,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xB8(%rbp),%r13
	cmpq $0x1,%r13
	je L_390094
L_42194:
	movq %r14,0xC0(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0xB8(%rbp)
	movq 0x108(%rbp),%r14
	movq %r14,0xD0(%rbp)
	jmp L_42185
.p2align 0x4
L_390094:
L_42195:
	movq 0x108(%rbp),%r15
	jmp L_42196
.p2align 0x4
L_390096:
L_42767:
	movq $0x2195,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_42191
.p2align 0x4
L_390097:
L_42188:
	movq 0x8(%r14),%r15
	jmp L_42189
.p2align 0x4
.long 0xAD1
L_42199:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42200
L_42764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42765
.p2align 0x4
.long 0xB15
L_42765:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42200:
	movq 0xD0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_390102
L_42763:
	movq 0x8(%r14),%r15
L_42202:
	movq 0x8(%r15),%r14
	movl 0xB4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_390101
L_42203:
	movq $0x2197,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
L_42204:
	movslq 0x24(%rbp),%r14
	cmpq 0xF0(%rbp),%r14
	jnb L_42169
L_42206:
	movq 0x100(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13,%r14,8)
	movq $0x114F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0xD0(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2613,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0xB8(%rbp),%r15
	cmpq $0x1,%r15
	je L_390099
L_42207:
	movq %r14,0xC0(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xB8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	jmp L_42198
.p2align 0x4
L_390099:
L_42208:
	movq 0xF8(%rbp),%r13
	xchgq %r13,%r15
	jmp L_42209
.p2align 0x4
L_390101:
L_42762:
	movq $0x2195,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_42204
.p2align 0x4
L_390102:
L_42201:
	movq 0x8(%r14),%r15
	jmp L_42202
.p2align 0x4
.long 0xAF6
L_42466:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_42467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0xAFA
L_42498:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x110(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0xAEE
L_42376:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42377
L_42452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42453
.p2align 0x4
.long 0xAF5
L_42453:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42377:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_390104
L_42378:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x18(%rbp)
	movq %r13,%r15
L_42379:
	movl 0x0(%r15),%r14d
	movl %r14d,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_390104:
L_42390:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_390127
L_42391:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_42392:
	incl %ecx
	jo L_42159
L_42393:
	cmpq $0x1,%r15
	je L_390105
L_42394:
	movq 0x8(%r15),%r15
	jmp L_42392
.p2align 0x4
L_390105:
L_42395:
L_42396:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_390125
L_42397:
	cmpq $0x7FFFFFFF,%rdx
	ja L_42363
L_42398:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42399
.p2align 0x4
.long 0xAF0
L_42399:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x28(%rbp)
L_42400:
	movq 0x18(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_561:
	cmpq 0x20(%rbp),%r15
	jnl L_390107
L_42441:
	cmpq $0x1,%r14
	je L_42368
L_42442:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x28(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_561
.p2align 0x4
L_390107:
L_42401:
	movq 0x28(%rbp),%r15
	movq $0xB41,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %r14,%rdx
	jne L_42151
L_42403:
	decl %r13d
	movl %r13d,0x20(%rbp)
	jo L_42159
L_42404:
	testq %rdx,%rdx
	jz L_390121
L_42405:
	cmpq $0x7FFFFFFF,%rdx
	ja L_42363
L_42406:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42407
.p2align 0x4
.long 0xAF1
L_42407:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x30(%rbp)
L_42408:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_562:
	cmpq 0x18(%rbp),%r15
	jnl L_390109
L_42437:
	movl %r15d,%r14d
	movl 0x20(%rbp),%r13d
	subl %r14d,%r13d
	jo L_42159
L_42438:
	movslq %r13d,%r14
	movq 0x28(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_562
.p2align 0x4
L_390109:
L_42409:
	movq 0x30(%rbp),%r15
	movq $0xB41,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xF0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,%r15
	jne L_42151
L_42411:
	testq %rdx,%rdx
	jz L_390118
L_42412:
	cmpq $0x7FFFFFFF,%rdx
	ja L_42363
L_42413:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15FD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42414
.p2align 0x4
.long 0xAF2
L_42414:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0x20(%rbp)
L_42415:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_563:
	cmpq 0x18(%rbp),%r15
	jnl L_390112
L_42430:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0xE0(%rbp),%r13
	jnb L_42169
L_42432:
	movq %r13,%r14
	imulq $0x18,%r14
	movq 0x8(%rbp),%r11
	movq 0x8(%r11,%r14,1),%r10
	cmpq 0xF0(%rbp),%r13
	jnb L_42169
L_42434:
	movq %r15,%r14
	movq %r15,%r11
	movq 0x100(%rbp),%r9
	movq 0x0(%r9,%r13,8),%r8
	movq 0x20(%rbp),%r13
	movq %r13,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	salq $0x4,%r14
	movq %r8,0x0(%r13,%r14,1)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	salq $0x4,%r11
	movq %r10,0x8(%r13,%r11,1)
	incq %r15
	jmp loop_563
.p2align 0x4
L_390112:
L_42416:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42417
L_42428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_42429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42429
.p2align 0x4
.long 0xAF3
L_42429:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_42417:
	movq 0x20(%rbp),%r15
	movq $0xAE7,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0xB4(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_390115
L_42418:
	movl 0xB0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_390114
L_42419:
	movq 0x30(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_42169
L_42421:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq $0x219F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390114:
L_42422:
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390115:
L_42423:
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x8,%rbp
	leaq (L_42424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1290
.p2align 0x4
L_390118:
L_42436:
	movq (globalObjptr+0x5280)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_42415
.p2align 0x4
L_390121:
L_42440:
	movq (globalObjptr+0x5278)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_42408
.p2align 0x4
L_390125:
L_42445:
	movq (globalObjptr+0x5270)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_42400
.p2align 0x4
L_390127:
L_42446:
	xorl %ecx,%ecx
	jmp L_42396
.p2align 0x4
.long 0xAD2
L_42224:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq %r15,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_42225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0xAD7
L_42254:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq %r15,0x110(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0x1
L_42179:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_65+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xAF7
L_42467:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movl 0x110(%rbp),%r15d
	movl %r15d,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42468
L_42469:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42470
.p2align 0x4
.long 0xAD5
L_42470:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42468:
	movq $0x2611,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	movq 0xB8(%rbp),%r15
	movl 0xC0(%rbp),%ecx
	jmp loop_565
.p2align 0x4
.long 0xAFA
L_42499:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42500
L_42728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42729
.p2align 0x4
.long 0xB12
L_42729:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42500:
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x18,%r12
	movq $0x0,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x218D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC8(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movl 0xA4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_390135
L_42501:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_390130
L_42502:
	movq $0x41,0x110(%rbp)
	movq %r14,0x118(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x110,%rbp
	leaq (L_42503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp padToWidth_0
.p2align 0x4
L_390130:
L_42528:
	movq $0x41,%r15
padToWidthLow_0:
	movq 0x80(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xC8(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xD0(%rbp)
	movq 0x10(%r13),%r11
	movq 0x48(%r11),%r14
	movq 0x68(%rbp),%r13
	movq 0x0(%r13),%rsi
	movq %rsi,0xE8(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq %rsi,%r13
	xchgq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_equal
L_42529:
	testl %eax,%eax
	jnz L_390134
L_42530:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0xB8(%rbp)
	movq %r15,%r14
	andq %r13,%r14
	andq $0x1,%r14
	jz L_390132
L_42531:
	cmpq %r15,%r13
	jnl L_390131
	movq %r15,%r14
	movq %r11,%r15
L_42534:
	movq %r14,0x118(%rbp)
	movq %r15,0x120(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x110,%rbp
	leaq (bits_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390131:
L_42327:
	movq (globalObjptr+0x51F0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390132:
L_42630:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	movq %r11,%rbx
	call IntInf_compare
L_42631:
	cmpl $0x0,%eax
	jnl L_42327
	movq %r15,%r14
	movq %rbx,%r15
	jmp L_42534
.p2align 0x4
L_390134:
L_42634:
	movq 0xB8(%rbp),%r15
	movq %r15,0x68(%rbp)
L_42539:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r13,0x118(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x110,%rbp
	leaq (bits_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390135:
L_42635:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_390136
L_42636:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x118(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_42637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
L_390136:
L_42644:
	movq 0x78(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq %r10,0xD0(%rbp)
	movq 0x68(%rbp),%r13
	movq 0x0(%r13),%r15
	movq %r15,%r13
	andq $0x1,%r13
	andq $0x1,%r13
	jz L_390155
L_42645:
	cmpq $0x1,%r15
	jl L_390154
	xchgq %r11,%r14
L_42647:
	cmpq $0x1,%r15
	je L_390153
L_42648:
	movq %r15,%r13
	andq $0x11,%r13
	andq $0x1,%r13
	jz L_390151
L_42649:
	cmpq $0x11,%r15
	jl L_390150
L_42651:
	cmpq $0x11,%r15
	je L_390149
L_42652:
	movq %r15,%r13
	andq $0x21,%r13
	andq $0x1,%r13
	jz L_390147
L_42653:
	cmpq $0x21,%r15
	jl L_390146
L_42655:
	cmpq $0x21,%r15
	je L_390145
L_42656:
	movq %r15,%r13
	andq $0x41,%r13
	andq $0x1,%r13
	jz L_390143
L_42657:
	cmpq $0x41,%r15
	jl L_390142
L_42659:
	cmpq $0x41,%r15
	je L_390141
L_42660:
	movq %r15,%r13
	andq $0x81,%r13
	andq $0x1,%r13
	jz L_390139
L_42661:
	cmpq $0x81,%r15
	jnl L_390137
L_42674:
	movq %r15,0x110(%rbp)
	movq %r14,0x120(%rbp)
	movq $0x81,0x118(%rbp)
	addq $0x110,%rbp
	leaq (bits_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390137:
L_42663:
	cmpq $0x81,%r15
	je L_390138
L_42664:
	movq (globalObjptr+0x51E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390138:
L_42665:
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
L_42666:
	movq 0xD0(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_390139:
L_42680:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x81,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_42681:
	cmpl $0x0,%eax
	jnl L_42663
	jmp L_42674
.p2align 0x4
L_390141:
L_42684:
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	jmp L_42666
.p2align 0x4
L_390142:
L_42686:
	movq %r15,0x110(%rbp)
	movq %r14,0x120(%rbp)
	movq $0x41,0x118(%rbp)
	addq $0x110,%rbp
	leaq (bits_4+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390143:
L_42691:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x41,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_42692:
	cmpl $0x0,%eax
	jl L_42686
	jmp L_42659
.p2align 0x4
L_390145:
L_42695:
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	jmp L_42666
.p2align 0x4
L_390146:
L_42697:
	movq %r15,0x110(%rbp)
	movq %r14,0x120(%rbp)
	movq $0x21,0x118(%rbp)
	addq $0x110,%rbp
	leaq (bits_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390147:
L_42702:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x21,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_42703:
	cmpl $0x0,%eax
	jl L_42697
	jmp L_42655
.p2align 0x4
L_390149:
L_42706:
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	jmp L_42666
.p2align 0x4
L_390150:
L_42708:
	movq %r15,0x110(%rbp)
	movq %r14,0x120(%rbp)
	movq $0x11,0x118(%rbp)
	addq $0x110,%rbp
	leaq (bits_6+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390151:
L_42713:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x11,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_42714:
	cmpl $0x0,%eax
	jl L_42708
	jmp L_42651
.p2align 0x4
L_390153:
L_42717:
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	jmp L_42666
.p2align 0x4
L_390154:
	xchgq %r11,%r14
L_42719:
	movq %r15,0x110(%rbp)
	movq %r14,0x120(%rbp)
	movq $0x1,0x118(%rbp)
	addq $0x110,%rbp
	leaq (bits_7+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390155:
L_42724:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	movq %r11,%rbx
	call IntInf_compare
L_42725:
	cmpl $0x0,%eax
	jl L_390156
	xchgq %rbx,%r14
	jmp L_42647
.p2align 0x4
L_390156:
	xchgq %rbx,%r14
	jmp L_42719
.p2align 0x4
.long 0xAEF
L_42380:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42381
L_42449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42450
.p2align 0x4
.long 0xAF4
L_42450:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42381:
	movq 0x48(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10C6,%r15
	je L_390161
L_42448:
	movq 0x8(%r14),%r15
L_42383:
	movq 0x8(%r15),%r14
	movl 0xB4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_390160
L_42384:
	movq $0x2197,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
L_42385:
	movslq 0x40(%rbp),%r14
	cmpq 0xF0(%rbp),%r14
	jnb L_42169
L_42387:
	movq 0x100(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13,%r14,8)
	movq $0x114F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2613,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_390158
L_42388:
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x30(%rbp)
	jmp L_42379
.p2align 0x4
L_390158:
L_42389:
	movq %r14,0x18(%rbp)
	jmp L_42390
.p2align 0x4
L_390160:
L_42447:
	movq $0x2195,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_42385
.p2align 0x4
L_390161:
L_42382:
	movq 0x8(%r14),%r15
	jmp L_42383
.p2align 0x4
.long 0x1
L_42424:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42425
L_42426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_42427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42427
.p2align 0x4
.long 0x451
L_42427:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_42425:
	movq $0x219D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xAD3
L_42225:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movl 0x110(%rbp),%r15d
	movl %r15d,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42226
L_42227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42228
.p2align 0x4
.long 0xAD4
L_42228:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42226:
	movq $0x2611,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0xC8(%rbp),%r15
	movl 0xD0(%rbp),%ecx
	jmp loop_557
.p2align 0x4
.long 0xAD7
L_42255:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42256
L_42356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42357
.p2align 0x4
.long 0xAEC
L_42357:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42256:
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x0,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x218D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC8(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r15
	movq %r15,0x0(%r14)
	movl 0xB4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_390169
L_42257:
L_42258:
	cmpl $0x0,0xB8(%rbp)
	jl L_42317
L_42259:
	movq $0x1,0xE8(%rbp)
	movl $0x0,0xBC(%rbp)
loop_560:
	movl 0xB8(%rbp),%r15d
	cmpl %r15d,0xBC(%rbp)
	jl L_390165
L_42260:
	movq $0x114F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2613,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB8(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x9,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_390165:
L_42262:
	movslq 0xBC(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	salq $0x4,%r15
	movq 0xD0(%rbp),%r13
	movl 0x0(%r13,%r15,1),%r11d
	movl %r11d,0xF8(%rbp)
	movq 0x8(%r13,%r14,1),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x108(%rbp)
	movq 0x0(%r10),%r14
	movq %r14,0x110(%rbp)
	movq $0x1147,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x118(%rbp)
	addq $0x18,%r12
	movq %r10,0x0(%r14)
	movq 0xE8(%rbp),%r13
	movq %r13,0x8(%r14)
	movl 0xB4(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_390167
L_42263:
	movq $0x2191,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r10,0x8(%r15)
L_42264:
	movslq 0xF8(%rbp),%r14
	cmpq 0xF0(%rbp),%r14
	jnb L_42169
L_42266:
	movq 0x100(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13,%r14,8)
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_390167:
L_42271:
	movq $0x11,0x128(%rbp)
	movq %r13,0x130(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_42272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_390169:
L_42318:
	movl 0xA4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_390170
L_42319:
	movq $0x41,0x110(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x110,%rbp
	leaq (L_42320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp padToWidth_0
.p2align 0x4
L_390170:
L_42345:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x110,%rbp
	leaq (L_42346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
.long 0x1
bug_65:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42180
L_42181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_42182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42182
.p2align 0x4
.long 0x451
L_42182:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_42180:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xAFB
L_42503:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42505
L_42526:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42527
.p2align 0x4
.long 0xB01
L_42527:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42505:
	movq 0xC0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x68(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_42151
L_42507:
	cmpl $0x0,%r13d
	jl L_42317
L_42508:
	movq 0x58(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movl $0x0,0x6C(%rbp)
loop_568:
	movl 0x68(%rbp),%r15d
	cmpl %r15d,0x6C(%rbp)
	jl L_390173
L_42509:
	movq $0x114F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2613,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x9,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_390173:
L_42511:
	movslq 0x6C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	salq $0x4,%r15
	movq 0xC0(%rbp),%r13
	movl 0x0(%r13,%r15,1),%r11d
	movq 0x8(%r13,%r14,1),%r15
	movq 0x8(%r15),%r10
	movq $0x2195,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r10,0x8(%r15)
	movslq %r11d,%r14
	cmpq 0xF0(%rbp),%r14
	jnb L_42169
L_42513:
	movq 0x100(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	movq %r15,0x0(%r13,%r14,8)
	movq 0x0(%r10),%r15
	movq %r15,0xC8(%rbp)
	movq 0x70(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x120(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq $0x11,0x110(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0xB02
bits_1:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42535
L_42628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42629
.p2align 0x4
.long 0xB0F
L_42629:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42535:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x37D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x110(%rbp)
	movl $0x2,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0xB05
bits_2:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42540
L_42624:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42625
.p2align 0x4
.long 0xB0A
L_42625:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42540:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x4BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x0,0x0(%r14)
	movq %r14,0xE8(%rbp)
	movq $0x2619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0xF8(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42541
.p2align 0x4
.long 0xB06
L_42541:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_569:
	cmpq $0x1,%r15
	jnl L_390179
L_42623:
	movq %r15,%r13
	movq %r15,%r11
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq 0xE8(%rbp),%r10
	movq %r10,0x8(%r14,%r13,1)
	salq $0x4,%r11
	movl $0xFFFFFFFF,0x0(%r14,%r11,1)
	incq %r15
	jmp loop_569
.p2align 0x4
L_390179:
L_42542:
	movq $0xB3F,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0xC8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0xE8(%rbp)
.p2align 0x4,,0x7
L_42543:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_390206
.p2align 0x4,,0x7
L_42544:
	movq 0xC8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF4F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x298D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_390180
L_42545:
	movq %r15,0xE8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0xC8(%rbp)
	jmp L_42543
.p2align 0x4
L_390180:
L_42546:
	movq %r13,0xC8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0xE8(%rbp)
.p2align 0x4,,0x7
L_42547:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_390205
.p2align 0x4,,0x7
L_42548:
	movq $0x298D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_390181
L_42549:
	movq %r15,0xE8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0xC8(%rbp)
	jmp L_42547
.p2align 0x4
L_390181:
L_42550:
	movq 0xE8(%rbp),%r13
	cmpq $0x1,%r13
	je L_390199
L_42551:
	movq 0xC8(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_42552:
	addq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r13
	je L_390182
L_42553:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_42552
.p2align 0x4
L_390182:
L_42554:
	testq %r15,%r15
	jz L_390198
L_42555:
	cmpq $0x7FFFFFFF,%r15
	ja L_42363
L_42556:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143F,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42557
.p2align 0x4
.long 0xB07
L_42557:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0xF8(%rbp)
L_42558:
	movq 0xE8(%rbp),%r11
	movq 0xC8(%rbp),%r13
	xorq %r14,%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_570:
	cmpq 0x60(%rbp),%r15
	jnl L_390185
.p2align 0x4,,0x7
loop_572:
	cmpq 0x0(%r13),%r14
	jl L_390184
L_42599:
	cmpq $0x1,%r11
	je L_390183
L_42600:
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r11
	xorq %r14,%r14
	movq %r10,%r13
	jmp loop_572
.p2align 0x4
L_390183:
L_42601:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390184:
L_42602:
	movq %r14,%r10
	movq %r14,%r9
	movq %r15,%r8
	movq %r15,%rsp
	salq $0x4,%r10
	movq 0x8(%r13),%rsi
	movq 0x8(%rsi,%r10,1),%rdi
	salq $0x4,%r9
	movl 0x0(%rsi,%r9,1),%r10d
	incq %r14
	movq 0xF8(%rbp),%r9
	movq %r9,%rsi
	shrq $0x8,%rsi
	movq (gcState+0x3C8)(%rip),%rdx
	movb $0x1,0x0(%rdx,%rsi,1)
	salq $0x4,%r8
	movq %rdi,0x8(%r9,%r8,1)
	salq $0x4,%rsp
	movq %rsp,%rax
	movl %r10d,0x0(%r9,%rax,1)
	incq %r15
	jmp loop_570
.p2align 0x4
L_390185:
L_42559:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42560
L_42596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42597
.p2align 0x4
.long 0xB0B
L_42597:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42560:
	movq 0xF8(%rbp),%r15
	movq $0xB3F,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x60(%rbp)
L_42561:
	movq 0xD0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_390195
L_42562:
	movq 0x0(%r9),%r15
	movq %r15,0xD0(%rbp)
	movq %r15,%r14
	movq 0xB8(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_390192
L_42563:
	cmpq %r13,%r15
	jl L_42573
L_42565:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xD0(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_42151
L_42567:
	cmpl $0x0,%r13d
	jl L_42317
L_42568:
	movq $0x1,0xE8(%rbp)
	movl $0x0,0xD4(%rbp)
loop_571:
	movl 0xD0(%rbp),%r15d
	cmpl %r15d,0xD4(%rbp)
	jl L_390188
L_42569:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42570
L_42575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42576
.p2align 0x4
.long 0xB08
L_42576:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42570:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xE8(%rbp),%rsi
	movq 0xB8(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_42571:
	testl %eax,%eax
	jz L_390186
L_42574:
	movq $0x218D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	jmp L_42505
.p2align 0x4
L_390186:
L_42573:
	movq (globalObjptr+0x5200)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_390188:
L_42577:
	movslq 0xD4(%rbp),%r15
	salq $0x4,%r15
	movq 0x60(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r10
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_390192:
L_42584:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42585
L_42589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42590
.p2align 0x4
.long 0xB0A
L_42590:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42585:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0xD0(%rbp),%rsi
	movq 0xB8(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_42586:
	cmpl $0x0,%eax
	jg L_42573
	jmp L_42565
.p2align 0x4
L_390195:
L_42591:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_42592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_390198:
L_42604:
	movq (globalObjptr+0x678)(%rip),%r14
	movq %r14,0xF8(%rbp)
	jmp L_42558
.p2align 0x4
L_390199:
L_42605:
	movq 0xC8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0xE8(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r14,0x60(%rbp)
	je L_42561
L_42606:
	testq %r13,%r13
	jz L_390203
L_42607:
	cmpq $0x7FFFFFFF,%r13
	ja L_42363
L_42608:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143F,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42609
.p2align 0x4
.long 0xB0C
L_42609:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq %rax,0xC8(%rbp)
L_42610:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_573:
	cmpq 0xE8(%rbp),%r15
	jnl L_390200
L_42615:
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	salq $0x4,%r14
	movq 0x60(%rbp),%r9
	movq 0x8(%r9,%r14,1),%r8
	salq $0x4,%r13
	movl 0x0(%r9,%r13,1),%r14d
	movq 0xC8(%rbp),%r13
	movq %r13,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	salq $0x4,%r11
	movq %r8,0x8(%r13,%r11,1)
	salq $0x4,%r10
	movl %r14d,0x0(%r13,%r10,1)
	incq %r15
	jmp loop_573
.p2align 0x4
L_390200:
L_42611:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42612
L_42613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42614
.p2align 0x4
.long 0xB0D
L_42614:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42612:
	movq 0xC8(%rbp),%r15
	movq $0xB3F,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x60(%rbp)
	jmp L_42561
.p2align 0x4
L_390203:
L_42617:
	movq (globalObjptr+0x680)(%rip),%r15
	movq %r15,0xC8(%rbp)
	jmp L_42610
.p2align 0x4
L_390205:
L_42619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42620
.p2align 0x4
.long 0xB0E
L_42620:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	jmp L_42548
.p2align 0x4
L_390206:
L_42621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42622
.p2align 0x4
.long 0xB0E
L_42622:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	jmp L_42544
.p2align 0x4
.long 0xB10
L_42637:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0x110(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0xAD1
bits_3:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42675
L_42678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42679
.p2align 0x4
.long 0xB0E
L_42679:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42675:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x37D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x110(%rbp)
	movl $0x2,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0xAD1
L_42667:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movl 0x110(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42668
L_42671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42672
.p2align 0x4
.long 0xB0A
L_42672:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42668:
	movl 0xE8(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_390209
L_42669:
	movq 0xD0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp padToWidthLow_0
.p2align 0x4
L_390209:
L_42670:
	movq 0xC8(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp L_42505
.p2align 0x4
.long 0xAD1
bits_4:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42687
L_42689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42690
.p2align 0x4
.long 0xB0E
L_42690:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42687:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x37D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x110(%rbp)
	movl $0x2,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0xAD1
bits_5:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42698
L_42700:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42701
.p2align 0x4
.long 0xB0E
L_42701:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42698:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x37D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x110(%rbp)
	movl $0x2,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0xAD1
bits_6:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42709
L_42711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42712
.p2align 0x4
.long 0xB0E
L_42712:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42709:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x37D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x110(%rbp)
	movl $0x2,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0xAD1
bits_7:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42720
L_42722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42723
.p2align 0x4
.long 0xB0E
L_42723:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42720:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x37D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x110(%rbp)
	movl $0x2,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0xAD8
L_42261:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x78(%rbp)
	jmp loop_556
.p2align 0x4
.long 0xAD9
L_42267:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42268
L_42269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42270
.p2align 0x4
.long 0xADA
L_42270:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42268:
	incl 0xBC(%rbp)
	jmp loop_560
.p2align 0x4
.long 0xADB
L_42272:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x120(%rbp)
	cmpq $0x1,%r15
	jne L_42274
L_42313:
	cmpq $0x11,0x110(%rbp)
	je L_390216
L_42274:
	movq $0x21,0x128(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_42275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_390216:
L_42282:
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x140(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x120(%rbp)
	movq $0x11,0x130(%rbp)
	movq %r14,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_42283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0xAE4
L_42320:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r14
	movq %r14,0xC8(%rbp)
	movq 0x58(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
	movq %r11,0xE8(%rbp)
	movq 0xC0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq %r13,%r14
	andq $0x41,%r14
	andq $0x1,%r14
	jz L_390221
L_42321:
	cmpq $0x41,%r13
	jnl L_390218
L_42332:
	movq %r15,0x120(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq $0x41,0x118(%rbp)
	addq $0x110,%rbp
	leaq (bits_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_390218:
L_42323:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42324
L_42329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42330
.p2align 0x4
.long 0xAE5
L_42330:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42324:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x41,%rsi
	movq 0xF8(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_42325:
	testl %eax,%eax
	jnz L_42258
	jmp L_42327
.p2align 0x4
L_390221:
L_42341:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x41,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_42342:
	cmpl $0x0,%eax
	jnl L_42323
	jmp L_42332
.p2align 0x4
.long 0xAE6
L_42346:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq %r15,0x110(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0xAFC
L_42510:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp loop_564
.p2align 0x4
.long 0xAFD
L_42514:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq $0x1,%r15
	jne L_390223
L_42516:
	movq $0x11,0x110(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x110,%rbp
	leaq (L_42517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_390223:
L_42285:
	movq (globalObjptr+0x1510)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB03
L_42536:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x110(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0xAD3
L_42578:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42579
L_42580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42581
.p2align 0x4
.long 0xB09
L_42581:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42579:
	incl 0xD4(%rbp)
	jmp loop_571
.p2align 0x4
.long 0x1
L_42592:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_66+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB11
L_42638:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movl 0x110(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42639
L_42642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42643
.p2align 0x4
.long 0xB00
L_42643:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42639:
	movl 0x68(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_390225
L_42640:
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x110,%rbp
	leaq (L_42503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp padToWidth_0
.p2align 0x4
L_390225:
L_42641:
	movq 0xC8(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp L_42505
.p2align 0x4
.long 0xAD1
L_42676:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r15,0x110(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0xAD1
L_42688:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r15,0x110(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0xAD1
L_42699:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r15,0x110(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0xAD1
L_42710:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r15,0x110(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0xAD1
L_42721:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r15,0x110(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0xADB
L_42275:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x120(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42276
L_42311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_42312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42312
.p2align 0x4
.long 0xAE3
L_42312:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_42276:
	cmpq $0x1,0x120(%rbp)
	jne L_42278
L_42279:
	cmpq $0x21,0x110(%rbp)
	je L_42282
L_42278:
	movq $0x2193,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x118(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_42264
.p2align 0x4
.long 0xADC
L_42283:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	cmpq $0x1,%r15
	movq %r15,0x128(%rbp)
	jne L_42285
L_42286:
	movq 0x118(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq $0x11,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_42287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xAE6
bits_0:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42333
L_42339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42340
.p2align 0x4
.long 0xAEA
L_42340:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42333:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x37D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x110(%rbp)
	movl $0x2,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0xAEB
L_42347:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movl 0x110(%rbp),%r15d
	movl %r15d,0xBC(%rbp)
	testl %r15d,%r15d
	jnz L_390232
L_42348:
	movq 0xF8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x110,%rbp
	leaq (L_42349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp padToWidth_0
.p2align 0x4
L_390232:
L_42355:
L_42350:
	movq 0xC0(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1286
.p2align 0x4
.long 0xAFE
L_42517:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42518
L_42523:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42524
.p2align 0x4
.long 0xB00
L_42524:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42518:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x110(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0xB04
L_42537:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42538
L_42626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42627
.p2align 0x4
.long 0xADA
L_42627:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42538:
	movq $0x4BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x0,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x68(%rbp)
	jmp L_42539
.p2align 0x4
.long 0x1
bug_66:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42593
L_42594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_42595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42595
.p2align 0x4
.long 0x451
L_42595:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_42593:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xAD3
L_42677:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xD0(%rbp)
	jmp L_42666
.p2align 0x4
.long 0xADD
L_42287:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x128(%rbp)
	movq $0x11,0x138(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq %r14,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_42288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0xAE7
L_42334:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq %r15,0x110(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0x110,%rbp
	leaq (L_42335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1284
.p2align 0x4
.long 0xAE4
L_42349:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xC8(%rbp)
	jmp L_42350
.p2align 0x4
.long 0xAE8
L_42351:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42258
L_42353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42354
.p2align 0x4
.long 0xAE9
L_42354:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	jmp L_42258
.p2align 0x4
.long 0xAFA
L_42519:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42520
L_42521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42522
.p2align 0x4
.long 0xAFF
L_42522:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
L_42520:
	incl 0x6C(%rbp)
	jmp loop_568
.p2align 0x4
.long 0xADE
L_42288:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq $0x1,%r15
	jne L_42285
L_42290:
	movq $0x11,0x138(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_42291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xAE8
L_42335:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	movq 0x110(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42258
L_42337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x110,%rbp
	leaq (L_42338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42338
.p2align 0x4
.long 0xAE9
L_42338:
	addq $0xFFFFFFFFFFFFFEF0,%rbp
	jmp L_42258
.p2align 0x4
.long 0xADE
L_42291:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq $0x11,0x140(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_42292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0xADF
L_42292:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x120(%rbp)
	cmpq $0x1,%r15
	jne L_42285
L_42294:
	movq $0x11,0x140(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_42295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0xAE0
L_42295:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x120(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42296
L_42309:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_42310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42310
.p2align 0x4
.long 0xAE2
L_42310:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_42296:
	movl 0x20(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_390241
L_42297:
	movq 0x120(%rbp),%r15
L_42298:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x120(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x128(%rbp)
	addq $0x120,%rbp
	leaq (L_42299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_390241:
L_42303:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x128(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_42304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0xADD
L_42299:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42300
L_42301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_42302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42302
.p2align 0x4
.long 0xAE1
L_42302:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_42300:
	movq $0x2195,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_42264
.p2align 0x4
.long 0xADB
L_42304:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x120,%rbp
	leaq (L_42305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0xADD
L_42305:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_42306
L_42307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_42308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_42308
.p2align 0x4
.long 0xAE1
L_42308:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_42306:
	movq 0x118(%rbp),%r15
	jmp L_42298
