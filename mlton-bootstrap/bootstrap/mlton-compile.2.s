/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:08:42 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl sextdFromInt64_0
.hidden sextdFromInt64_0
sextdFromInt64_0:
L_10188:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10189
L_10211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10212
.p2align 0x4
.long 0x453
L_10212:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_10189:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	sarq $0x3E,%r14
	jz L_10209
L_10190:
	cmpq $0xFFFFFFFFFFFFFFFF,%r14
	je L_376911
L_10191:
	cmpq $0x0,%r15
	jl L_376910
L_10192:
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x8)(%rip),%r15
	movq %r15,0x0(%rbp)
.p2align 0x4,,0x7
loop_173:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_376909
.p2align 0x4,,0x7
L_10193:
	movq 0x10(%rbp),%r15
	testq %r15,%r15
	jz L_376906
L_10194:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	incq %r13
	jo L_376905
L_10196:
	movq $0x5B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x8(%rbp)
	movq $0x29A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x0,0x10(%rbp)
	jmp loop_173
.p2align 0x4
L_376905:
L_10195:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376906:
L_10197:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16E7,%rcx
	movq 0x8(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10198
.p2align 0x4
.long 0x451
L_10198:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x0(%rbp),%r11
	cmpq $0x1,%r11
	je L_376908
L_10199:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq %rax,%r15
.p2align 0x4,,0x7
L_10200:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x0(%r15,%r11,8)
	cmpq $0x1,%r13
	je L_376907
L_10201:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_10200
.p2align 0x4
L_376907:
L_10203:
	movq $0xD,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376908:
	movq %rax,%r15
	jmp L_10203
.p2align 0x4
L_376909:
L_10205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10206
.p2align 0x4
.long 0x452
L_10206:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10193
.p2align 0x4
L_376910:
L_10207:
	negq %r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x18)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp loop_173
.p2align 0x4
L_376911:
L_10209:
	movq 0x0(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl div_0
.hidden div_0
div_0:
L_10213:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10214
L_10233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10234
.p2align 0x4
.long 0x453
L_10234:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_10214:
	movl 0x4(%rbp),%eax
	cmpl $0x0,%eax
	jl L_376917
L_10215:
	movl 0x0(%rbp),%r15d
	cmpl $0x0,%r15d
	jg L_376916
L_10216:
	cmpl $0x0,%r15d
	jnl L_376915
L_10219:
	testl %eax,%eax
	jz L_376914
L_10220:
	decl %eax
	cltd
	idivl %r15d
	decl %eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376914:
L_10221:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376915:
L_10218:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376916:
L_10222:
	cltd
	idivl %r15d
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376917:
L_10223:
	movl 0x0(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_376919
L_10224:
	cmpl $0x0,%r15d
	jng L_10218
L_10226:
	incl %eax
	cltd
	idivl %r15d
	decl %eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376919:
L_10227:
	cmpl $0x80000000,%eax
	jne L_10229
L_10230:
	cmpl $0xFFFFFFFF,%r15d
	jne L_376920
L_10232:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376920:
L_10229:
	movl 0x4(%rbp),%eax
	cltd
	idivl 0x0(%rbp)
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl unfoldi_0
.hidden unfoldi_0
unfoldi_0:
L_10235:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10236
L_10338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10339
.p2align 0x4
.long 0x457
L_10339:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_10236:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_376968
L_10237:
	cmpq $0x7FFFFFFF,%rdx
	ja L_376967
L_10238:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10239
.p2align 0x4
.long 0x452
L_10239:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_10240:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_174:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_376966
L_10242:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	movq %r15,%r13
	andq $0xF,%r13
	cmpq $0x1,%r13
	je L_10328
	cmpq $0x2,%r13
	je L_376964
	cmpq $0x3,%r13
	je L_376963
	cmpq $0x5,%r13
	je L_10332
	cmpq $0x6,%r13
	je L_376961
	cmpq $0x7,%r13
	je L_376960
	cmpq $0x9,%r13
	je L_376959
L_10243:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1F89,%r13
	je L_376954
	cmpq $0x1F8A,%r13
	je L_376945
	cmpq $0x1F8B,%r13
	je L_376943
	cmpq $0x1F8C,%r13
	je L_376940
	cmpq $0x1F8D,%r13
	je L_376937
	cmpq $0x1F8E,%r13
	je L_376932
	cmpq $0x1F8F,%r13
	je L_376927
L_10244:
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	cmpl 0x0(%r15),%r11d
	je L_376926
L_10245:
	incl %r11d
	jo L_10246
L_10247:
	movl %r11d,0x0(%r13)
x_16:
	movq (globalObjptr+0x548)(%rip),%r15
	movl 0x0(%r15),%eax
	movl %eax,%r14d
	xchgl %r14d,%eax
	movl $0x3E,%ebx
	xorl %edx,%edx
	divl %ebx
	cmpl $0x0,%edx
	jl L_376924
L_10248:
	movslq %edx,%r13
	cmpq $0x3E,%r13
	jnb L_376923
L_10251:
	movq (globalObjptr+0xDBF8)(%rip),%r11
	movb 0x0(%r11,%r13,1),%r10b
	movl %r14d,%eax
	movl $0x3E,%ebx
	xorl %edx,%edx
	divl %ebx
	movl %eax,0x0(%r15)
	movb %r10b,%dl
L_10252:
	movq 0x8(%rbp),%r15
	movq 0x18(%rbp),%r14
	movb %dl,0x0(%r15,%r14,1)
	incq %r14
	movq %r14,0x18(%rbp)
	jmp loop_174
.p2align 0x4
L_376923:
L_10250:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376924:
L_10246:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376926:
L_10254:
	movq (globalObjptr+0x550)(%rip),%r15
	movl 0x0(%r15),%r14d
	imull $0x19660D,%r14d
	addl $0x3C6EF35F,%r14d
	movl %r14d,0x0(%r15)
	movq (globalObjptr+0x548)(%rip),%r15
	movl %r14d,0x0(%r15)
	movl $0x1,0x0(%r13)
	jmp x_16
.p2align 0x4
L_376927:
L_10318:
	movq 0x0(%r15),%r13
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_10250
L_10320:
	movb 0x0(%r13,%r15,1),%r11b
	testl %r14d,%r14d
	jnz L_376930
L_10322:
	cmpb $0x61,%r11b
	jb L_376929
L_10323:
	cmpb $0x7A,%r11b
	ja L_376928
L_10324:
	movzbl %r11b,%r15d
	addl $0xFFFFFFE0,%r15d
	movb %r15b,%dl
	jmp L_10252
.p2align 0x4
L_376928:
	movb %r11b,%dl
	jmp L_10252
.p2align 0x4
L_376929:
	movb %r11b,%dl
	jmp L_10252
.p2align 0x4
L_376930:
	movb %r11b,%dl
	jmp L_10252
.p2align 0x4
L_376932:
L_10309:
	movq 0x0(%r15),%r13
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_10250
L_10311:
	movb 0x0(%r13,%r15,1),%r11b
	testl %r14d,%r14d
	jnz L_376935
L_10313:
	cmpb $0x61,%r11b
	jb L_376934
L_10314:
	cmpb $0x7A,%r11b
	ja L_376933
L_10315:
	movzbl %r11b,%r15d
	addl $0xFFFFFFE0,%r15d
	movb %r15b,%dl
	jmp L_10252
.p2align 0x4
L_376933:
	movb %r11b,%dl
	jmp L_10252
.p2align 0x4
L_376934:
	movb %r11b,%dl
	jmp L_10252
.p2align 0x4
L_376935:
	movb %r11b,%dl
	jmp L_10252
.p2align 0x4
L_376937:
L_10305:
	movl 0x0(%r15),%r13d
	movq 0x8(%r15),%r11
	subl %r14d,%r13d
	jo L_10246
L_10306:
	movslq %r13d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_10250
L_10308:
	movb 0x0(%r11,%r15,1),%dl
	jmp L_10252
.p2align 0x4
L_376940:
L_10301:
	movl 0xC(%r15),%r13d
	movl 0x8(%r15),%r11d
	movq 0x0(%r15),%r10
	addl %r14d,%r13d
	jo L_10246
L_10302:
	cmpl %r11d,%r13d
	jnl L_376941
L_10304:
	movslq %r13d,%r15
	movb 0x0(%r10,%r15,1),%dl
	jmp L_10252
.p2align 0x4
L_376941:
L_10299:
	movb $0x30,%dl
	jmp L_10252
.p2align 0x4
L_376943:
L_10297:
	movq 0x0(%r15),%r13
	cmpl 0x8(%r15),%r14d
	jnl L_10299
L_10300:
	movslq %r14d,%r15
	movb 0x0(%r13,%r15,1),%dl
	jmp L_10252
.p2align 0x4
L_376945:
L_10264:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_10250
L_10266:
	movq 0x0(%r13,%r15,8),%r14
	movq 0x18(%r11),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r11),%r13
	movq %r14,%r15
	andq $0x1,%r15
	andq $0x1,%r15
	jz L_376951
L_10267:
	cmpq $0x1,%r14
	jl L_376950
	movq %r14,%r15
L_10269:
	movb $0x0,0x28(%rbp)
.p2align 0x4,,0x7
L_10270:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,%r15
	jne L_376949
L_10287:
	movb 0x28(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_376947
L_10288:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
x_17:
	cmpl $0xFF,%ecx
	ja L_376946
L_10281:
	movb %cl,%dl
	jmp L_10252
.p2align 0x4
L_376946:
L_10282:
	movq $0x7,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376947:
L_10289:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_10284:
	negl %ecx
	jo L_10246
L_10285:
	jmp x_17
.p2align 0x4
L_376949:
L_10271:
	movq %r15,0x20(%rbp)
	movl $0x1,0x2C(%rbp)
	movl $0x0,0x38(%rbp)
next_8:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x5,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_10272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
L_376950:
	movq %r14,%r15
	movq %r13,%r14
L_10291:
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_10292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
L_376951:
L_10293:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10294:
	cmpl $0x0,%eax
	jl L_376952
	movq %r14,%r15
	jmp L_10269
.p2align 0x4
L_376952:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_10291
.p2align 0x4
L_376954:
L_10255:
	movq 0x0(%r15),%r13
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_10250
L_10257:
	movb 0x0(%r13,%r15,1),%r11b
	testl %r14d,%r14d
	jnz L_376957
L_10259:
	cmpb $0x61,%r11b
	jb L_376956
L_10260:
	cmpb $0x7A,%r11b
	ja L_376955
L_10261:
	movzbl %r11b,%r15d
	addl $0xFFFFFFE0,%r15d
	movb %r15b,%dl
	jmp L_10252
.p2align 0x4
L_376955:
	movb %r11b,%dl
	jmp L_10252
.p2align 0x4
L_376956:
	movb %r11b,%dl
	jmp L_10252
.p2align 0x4
L_376957:
	movb %r11b,%dl
	jmp L_10252
.p2align 0x4
L_376959:
L_10335:
	shrq $0x4,%r15
	movb %r15b,%dl
	jmp L_10252
.p2align 0x4
L_376960:
L_10334:
	shrq $0x4,%r15
	movb %r15b,%dl
	jmp L_10252
.p2align 0x4
L_376961:
L_10332:
	xorb %dl,%dl
	jmp L_10252
.p2align 0x4
L_376963:
L_10330:
	movq (globalObjptr+0x498)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376964:
L_10328:
	movb $0xA,%dl
	jmp L_10252
.p2align 0x4
L_376966:
L_10241:
	movq 0x8(%rbp),%r14
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376967:
L_10336:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376968:
L_10337:
	movq (globalObjptr+0x540)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_10240
.p2align 0x4
.long 0x454
L_10272:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x5,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_10273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x456
L_10292:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	movq %r15,0x28(%rbp)
	movb $0x1,0x28(%rbp)
	movq %r14,%r15
	jmp L_10270
.p2align 0x4
.long 0x455
L_10273:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_376974
L_10274:
	movl 0x38(%rbp),%ecx
	addl 0x2C(%rbp),%ecx
	jo L_10246
L_10276:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_376971
L_10277:
	movl 0x2C(%rbp),%r14d
	addl %r14d,%r14d
	jo L_10246
L_10278:
	movl %r14d,0x2C(%rbp)
	movl %ecx,0x38(%rbp)
	movq %r15,0x20(%rbp)
	jmp next_8
.p2align 0x4
L_376971:
L_10279:
	movb 0x28(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_10284
	jmp x_17
.p2align 0x4
L_376974:
L_10286:
	movl 0x38(%rbp),%ecx
	jmp L_10276
.text
.p2align 0x4
.globl bigDiv_0
.hidden bigDiv_0
bigDiv_0:
L_10340:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_10402
L_10341:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_376994
L_10342:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	andq $0x1,%r14
	jz L_376991
L_10343:
	cmpq $0x1,%r15
	jl L_376982
L_10345:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	andq $0x1,%r14
	cmpq $0x0,%r14
	sete %cl
	movzbl %cl,%ecx
	je L_376980
L_10346:
	cmpq $0x1,%r15
	jg L_376979
L_10348:
	testl %ecx,%ecx
	jnz L_376977
L_10349:
	cmpq $0x1,0x0(%rbp)
	jl L_376975
L_10351:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376975:
L_10353:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_376976
L_10354:
	movq $0x3,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_10355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_376976:
L_10357:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376977:
L_10358:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10359:
	cmpl $0x0,%eax
	jl L_10353
	jmp L_10351
.p2align 0x4
L_376979:
L_10363:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_376980:
L_10364:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	movl %ecx,%ebx
	call IntInf_compare
L_10365:
	cmpl $0x0,%eax
	jg L_10363
	movl %ebx,%ecx
	jmp L_10348
.p2align 0x4
L_376982:
L_10369:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	andq $0x1,%r14
	cmpq $0x0,%r14
	sete %al
	movzbl %al,%eax
	movl %eax,0x10(%rbp)
	je L_376988
L_10370:
	cmpq $0x1,%r15
	jl L_376987
L_10372:
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_376984
L_10373:
	cmpq $0x1,0x0(%rbp)
	jng L_10351
L_10376:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x3,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_10377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_376984:
L_10379:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10380
L_10384:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10385
.p2align 0x4
.long 0x45A
L_10385:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10380:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10381:
	cmpl $0x0,%eax
	jg L_10376
	jmp L_10351
.p2align 0x4
L_376987:
L_10387:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_376988:
L_10388:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10389
L_10393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10394
.p2align 0x4
.long 0x45A
L_10394:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10389:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10390:
	cmpl $0x0,%eax
	jl L_10387
	jmp L_10372
.p2align 0x4
L_376991:
L_10395:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10396
L_10400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10401
.p2align 0x4
.long 0x45A
L_10401:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10396:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10397:
	cmpl $0x0,%eax
	jl L_10369
	jmp L_10345
.p2align 0x4
L_376994:
L_10402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10403
.p2align 0x4
.long 0x45B
L_10403:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10342
.p2align 0x4
.long 0x458
L_10355:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_10356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x458
L_10377:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_10378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x459
L_10356:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x3,0x0(%rbp)
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x459
L_10378:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x3,0x0(%rbp)
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp x_1186
.text
.p2align 0x4
.globl x_1186
.hidden x_1186
x_1186:
L_10404:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10405
L_10429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10430
.p2align 0x4
.long 0x45B
L_10430:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_10405:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	movq 0x8(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz numLimbs_0
L_10406:
	sarq $0x1,%r13
	sarq $0x1,%r15
	subq %r15,%r13
	jo numLimbs_0
L_10425:
	movq %r13,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	xorq %r15,%r13
	cmpq $0x0,%r13
	jl numLimbs_3
L_10426:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
numLimbs_3:
numLimbs_0:
	movq 0x8(%rbp),%r15
	andq $0x1,%r15
	jz L_377001
L_10407:
	movq $0x1,%r15
L_10408:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_376999
L_10409:
	movq $0x1,%r14
L_10410:
	cmpq %r14,%r15
	jnl L_10412
L_10419:
	movq %r14,%r15
L_10412:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%rsi
	movq 0x8(%r14),%r13
	imulq %r13,%r15
	addq $0x7,%rsi
	addq %r13,%rsi
	addq %r13,%rsi
	addq %r15,%rsi
	movq %rsi,%r15
	movq %rsi,0x18(%rbp)
	addq $0x0,%r15
	jc L_376997
L_10414:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_10415
L_10417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_10418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10418
.p2align 0x4
.long 0x45C
L_10418:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_10415:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x18(%rbp),%rdx
	movq 0x0(%rbp),%rsi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_sub
L_10416:
	movq %rax,0x0(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_376997:
L_10413:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_376999:
L_10420:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_377000
L_10422:
	jmp L_10410
.p2align 0x4
L_377000:
L_10421:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377001:
L_10423:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_10421
L_10424:
	jmp L_10408
.text
.p2align 0x4
.globl bigQuot_0
.hidden bigQuot_0
bigQuot_0:
L_10431:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10432
L_10468:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10469
.p2align 0x4
.long 0x45B
L_10469:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_10432:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%rbp),%r15
	movq %r15,%r11
	movq 0x8(%rbp),%r10
	andq %r10,%r11
	andq $0x1,%r11
	jz L_377009
L_10433:
	sarq $0x1,%r10
	sarq $0x1,%r15
	movq $0xC000000000000000,%r11
	cmpq %r11,%r10
	jne L_377008
L_10445:
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	jne L_377004
L_10447:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377004:
	movq %r10,%r14
L_10435:
	testq %r15,%r15
	jz L_377007
L_10436:
	movq $0x8000000000000000,%r13
	cmpq %r13,%r14
	jne L_10438
L_10439:
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_377005
L_10438:
	movq %r14,%rax
	cqto
	idivq %r15
	shlq $0x1,%rax
	orq $0x1,%rax
	movq %rax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377005:
L_10442:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377007:
L_10444:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377008:
	movq %r10,%r14
	jmp L_10435
.p2align 0x4
L_377009:
L_10448:
	andq $0x1,%r10
	jz L_377017
L_10449:
	movq $0x1,%r14
	xchgq %r13,%r15
L_10450:
	movq 0x0(%rbp),%r13
	andq $0x1,%r13
	jz L_377015
L_10451:
	movq $0x1,%r13
L_10452:
	cmpq %r13,%r14
	jl L_377014
L_10453:
	cmpq $0x1,0x0(%rbp)
	je L_10444
L_10454:
	subq %r13,%r14
	jo L_10442
L_10455:
	movq 0x8(%r15),%rsi
	movq %rsi,%r13
	movq %rsi,%r11
	movq 0x0(%r15),%r10
	imulq %r14,%r13
	addq %r11,%r11
	addq $0x7,%r10
	addq %r10,%rsi
	addq %r11,%rsi
	addq %rsi,%r13
	movq %r13,%rsi
	movq %r13,0x10(%rbp)
	addq $0x0,%rsi
	jc L_377011
L_10457:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq %rsi,%r15
	jnb L_10458
L_10460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10461
.p2align 0x4
.long 0x45D
L_10461:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_10458:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x10(%rbp),%rdx
	movq 0x0(%rbp),%rsi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_quot
L_10459:
	movq %rax,0x0(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377011:
L_10456:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_377014:
L_10463:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377015:
L_10464:
	movq 0x0(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	decq %r13
	jo L_10442
L_10465:
	jmp L_10452
.p2align 0x4
L_377017:
L_10466:
	movq 0x8(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	decq %r14
	jo L_10442
L_10467:
	xchgq %r13,%r15
	jmp L_10450
.text
.p2align 0x4
.globl x_1183
.hidden x_1183
x_1183:
L_10470:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10471
L_10495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10496
.p2align 0x4
.long 0x45F
L_10496:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_10471:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq %r14,%r15
	andq %r13,%r15
	andq $0x1,%r15
	jz numLimbs_1
L_10472:
	sarq $0x1,%r13
	sarq $0x1,%r14
	addq %r13,%r14
	jo numLimbs_1
L_10491:
	movq %r14,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	xorq %r15,%r14
	cmpq $0x0,%r14
	jl numLimbs_6
L_10492:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
numLimbs_6:
numLimbs_1:
	movq 0x18(%rbp),%r15
	andq $0x1,%r15
	jz L_377025
L_10473:
	movq $0x1,%r15
L_10474:
	movq 0x10(%rbp),%r14
	andq $0x1,%r14
	jz L_377023
L_10475:
	movq $0x1,%r14
L_10476:
	cmpq %r14,%r15
	jnl L_10478
L_10485:
	movq %r14,%r15
L_10478:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%rsi
	movq 0x8(%r14),%r13
	imulq %r13,%r15
	addq $0x7,%rsi
	addq %r13,%rsi
	addq %r13,%rsi
	addq %r15,%rsi
	movq %rsi,%r15
	movq %rsi,0x20(%rbp)
	addq $0x0,%r15
	jc L_377021
L_10480:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_10481
L_10483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_10484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10484
.p2align 0x4
.long 0x45E
L_10484:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_10481:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x20(%rbp),%rdx
	movq 0x18(%rbp),%rsi
	movq 0x10(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_add
L_10482:
	movq %rax,0x0(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377021:
L_10479:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_377023:
L_10486:
	movq 0x10(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_377024
L_10488:
	jmp L_10476
.p2align 0x4
L_377024:
L_10487:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377025:
L_10489:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_10487
L_10490:
	jmp L_10474
.text
.p2align 0x4
.globl bigMod_0
.hidden bigMod_0
bigMod_0:
L_10497:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_10570
L_10498:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_377047
L_10499:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	andq $0x1,%r14
	jz L_377044
L_10500:
	cmpq $0x1,%r15
	jl L_377035
L_10502:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	andq $0x1,%r14
	cmpq $0x0,%r14
	sete %cl
	movzbl %cl,%ecx
	je L_377033
L_10503:
	cmpq $0x1,%r15
	jg L_377032
L_10505:
	testl %ecx,%ecx
	jnz L_377030
L_10506:
	cmpq $0x1,0x0(%rbp)
	jl L_377028
L_10508:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377028:
L_10510:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_377029
L_10511:
	movq $0x3,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_10512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_377029:
L_10521:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377030:
L_10522:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10523:
	cmpl $0x0,%eax
	jl L_10510
	jmp L_10508
.p2align 0x4
L_377032:
L_10527:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp bigRem_0
.p2align 0x4
L_377033:
L_10528:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	movl %ecx,%ebx
	call IntInf_compare
L_10529:
	cmpl $0x0,%eax
	jg L_10527
	movl %ebx,%ecx
	jmp L_10505
.p2align 0x4
L_377035:
L_10533:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	andq $0x1,%r14
	cmpq $0x0,%r14
	sete %al
	movzbl %al,%eax
	movl %eax,0x10(%rbp)
	je L_377041
L_10534:
	cmpq $0x1,%r15
	jl L_377040
L_10536:
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_377037
L_10537:
	cmpq $0x1,0x0(%rbp)
	jng L_10508
L_10540:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x3,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_10541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_377037:
L_10547:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10548
L_10552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10553
.p2align 0x4
.long 0x45A
L_10553:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10548:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10549:
	cmpl $0x0,%eax
	jg L_10540
	jmp L_10508
.p2align 0x4
L_377040:
L_10555:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp bigRem_0
.p2align 0x4
L_377041:
L_10556:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10557
L_10561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10562
.p2align 0x4
.long 0x45A
L_10562:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10557:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10558:
	cmpl $0x0,%eax
	jl L_10555
	jmp L_10536
.p2align 0x4
L_377044:
L_10563:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10564
L_10568:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10569
.p2align 0x4
.long 0x45A
L_10569:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10564:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_10565:
	cmpl $0x0,%eax
	jl L_10533
	jmp L_10502
.p2align 0x4
L_377047:
L_10570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10571
.p2align 0x4
.long 0x45B
L_10571:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10499
.p2align 0x4
.long 0x460
L_10512:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_10513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x465
L_10541:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_10542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x461
L_10513:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10514
L_10519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10520
.p2align 0x4
.long 0x464
L_10520:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10514:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_10515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x466
L_10542:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x3,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_10543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x462
L_10515:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10516
L_10517:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10518
.p2align 0x4
.long 0x463
L_10518:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10516:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x462
L_10543:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10544
L_10545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10546
.p2align 0x4
.long 0x463
L_10546:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_10544:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp x_1183
.text
.p2align 0x4
.globl bigRem_0
.hidden bigRem_0
bigRem_0:
L_10572:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10573
L_10603:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10604
.p2align 0x4
.long 0x45B
L_10604:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_10573:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	movq 0x0(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_377055
L_10574:
	sarq $0x1,%r15
	sarq $0x1,%r13
	jz L_377054
L_10575:
	movq $0x8000000000000000,%r14
	cmpq %r14,%r15
	jne L_377053
L_10578:
	cmpq $0xFFFFFFFFFFFFFFFF,%r13
	jne L_377052
L_10580:
	xorq %r15,%r15
addTag_0:
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377052:
	movq %r13,%r14
L_10577:
	movq %r15,%rax
	cqto
	idivq %r14
	movq %rdx,%r15
	jmp addTag_0
.p2align 0x4
L_377053:
	movq %r13,%r14
	jmp L_10577
.p2align 0x4
L_377054:
L_10582:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377055:
L_10583:
	andq $0x1,%r15
	jz L_377062
L_10584:
	movq $0x1,%r15
L_10585:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_377060
L_10586:
	movq $0x1,%r14
L_10587:
	cmpq %r14,%r15
	jl L_377059
L_10588:
	cmpq $0x1,0x0(%rbp)
	je L_10582
L_10589:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%rsi
	imulq %rsi,%r14
	addq $0x7,%r13
	addq %rsi,%r13
	addq %r13,%rsi
	addq %r14,%rsi
	movq %rsi,%r15
	movq %rsi,0x18(%rbp)
	addq $0x0,%r15
	jc L_377057
L_10591:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_10592
L_10594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_10595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10595
.p2align 0x4
.long 0x45C
L_10595:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_10592:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x18(%rbp),%rdx
	movq 0x0(%rbp),%rsi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_rem
L_10593:
	movq %rax,0x0(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377057:
L_10590:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_377059:
L_10597:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377060:
L_10598:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_377061
L_10600:
	jmp L_10587
.p2align 0x4
L_377061:
L_10599:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377062:
L_10601:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_10599
L_10602:
	jmp L_10585
.text
.p2align 0x4
.globl bigNeg_0
.hidden bigNeg_0
bigNeg_0:
L_10605:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10606
L_10619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10620
.p2align 0x4
.long 0x45F
L_10620:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_10606:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%rbp),%r15
	movq %r15,%r11
	andq $0x1,%r11
	jz L_377066
L_10607:
	movq $0x8000000000000001,%r11
	cmpq %r11,%r15
	jne L_377065
L_10609:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377065:
L_10608:
	movq $0x2,%r15
	subq 0x0(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377066:
L_10610:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%rsi
	decq %rsi
	jo L_377069
L_10612:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	imulq %r14,%rsi
	addq $0x7,%r15
	addq %r14,%r15
	addq %r14,%r15
	addq %r15,%rsi
	movq %rsi,%r15
	movq %rsi,0x8(%rbp)
	addq $0x0,%r15
	jc L_377068
L_10614:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_10615
L_10617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10618
.p2align 0x4
.long 0x457
L_10618:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_10615:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x8(%rbp),%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_neg
L_10616:
	movq %rax,0x0(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377068:
L_10613:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_377069:
L_10611:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1182
.hidden x_1182
x_1182:
L_10621:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10622
L_10644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10645
.p2align 0x4
.long 0x45B
L_10645:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_10622:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	movq 0x8(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz numLimbs_2
L_10623:
	sarq $0x1,%r13
	sarq $0x1,%r15
	imulq %r13,%r15
	jo numLimbs_2
L_10640:
	movq %r15,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	xorq %r14,%r15
	cmpq $0x0,%r15
	jl numLimbs_9
L_10641:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
numLimbs_9:
numLimbs_2:
	movq 0x8(%rbp),%r15
	andq $0x1,%r15
	jz L_377076
L_10624:
	movq $0x1,%r15
L_10625:
	movq 0x0(%rbp),%r14
	andq $0x1,%r14
	jz L_377074
L_10626:
	movq $0x1,%r14
L_10627:
	addq %r15,%r14
	jo L_377073
L_10629:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%rsi
	imulq %rsi,%r14
	addq $0x7,%r13
	addq %r13,%rsi
	addq %r14,%rsi
	movq %rsi,%r15
	movq %rsi,0x18(%rbp)
	addq $0x0,%r15
	jc L_377072
L_10631:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_10632
L_10634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_10635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10635
.p2align 0x4
.long 0x45C
L_10635:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_10632:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x18(%rbp),%rdx
	movq 0x8(%rbp),%rsi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_mul
L_10633:
	movq %rax,0x0(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377072:
L_10630:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_377073:
L_10628:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377074:
L_10636:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_10628
L_10637:
	jmp L_10627
.p2align 0x4
L_377076:
L_10638:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_10628
L_10639:
	jmp L_10625
.text
.p2align 0x4
.globl newOut_0
.hidden newOut_0
newOut_0:
L_10646:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_10741
L_10647:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_377089
L_10648:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x8(%rbp),%edi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call Posix_FileSys_Stat_fstat
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10649
.p2align 0x4
.long 0x467
L_10649:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpl $0xFFFFFFFF,%eax
	je L_377081
L_10650:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getDev
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10651
.p2align 0x4
.long 0x467
L_10651:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getINo
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10652
.p2align 0x4
.long 0x467
L_10652:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10653+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10653
.p2align 0x4
.long 0x467
L_10653:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl %eax,0x18(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getNLink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10654
.p2align 0x4
.long 0x467
L_10654:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpl $0x0,%eax
	jl L_377079
L_10655:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getUId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10656
.p2align 0x4
.long 0x467
L_10656:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getGId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10657
.p2align 0x4
.long 0x467
L_10657:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getSize
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10658
.p2align 0x4
.long 0x467
L_10658:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10659+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getATime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10659
.p2align 0x4
.long 0x467
L_10659:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x50(%rbp)
	leaq L_10718(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_10660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
L_377079:
L_10714:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_377080
L_10715:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377080:
L_10712:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x740)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377081:
L_10720:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10721
.p2align 0x4
.long 0x474
L_10721:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl %eax,%r15d
	movl %r15d,0x30(%rbp)
	movl %eax,(cReturnTemp+0x0)(%rip)
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_10712
L_10722:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r15d,%edi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_10723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10723
.p2align 0x4
.long 0x475
L_10723:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10724
L_10738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10739
.p2align 0x4
.long 0x478
L_10739:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_10724:
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	testq %r15,%r15
	jz L_377086
L_10725:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_177:
	movslq %ecx,%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_377082
L_10726:
	incl %ecx
	jmp loop_177
.p2align 0x4
L_377082:
L_10727:
	movq 0x38(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_377085
L_10728:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10729
.p2align 0x4
.long 0x476
L_10729:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_178:
	cmpq 0x38(%rbp),%r15
	jnl L_377083
L_10735:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x48(%rbp),%r14
	movq 0x40(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_178
.p2align 0x4
L_377083:
L_10730:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10731
L_10733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_10734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10734
.p2align 0x4
.long 0x477
L_10734:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_10731:
	movq 0x48(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_10732:
	movl 0x30(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377085:
L_10736:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377086:
L_10737:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_10732
.p2align 0x4
L_377089:
L_10741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10742
.p2align 0x4
.long 0x479
L_10742:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_10648
.p2align 0x4
.long 0x468
L_10660:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x58(%rbp)
	movq %r11,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq %r13,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_10661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x473
L_10718:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_10714
.p2align 0x4
.long 0x469
L_10661:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_10662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10662
.p2align 0x4
.long 0x46A
L_10662:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x68(%rbp)
	leaq L_10717(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x68,%rbp
	leaq (L_10663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x469
L_10663:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_10664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x473
L_10717:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_10714
.p2align 0x4
.long 0x469
L_10664:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_10665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getCTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10665
.p2align 0x4
.long 0x46A
L_10665:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x68(%rbp)
	leaq L_10713(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x68,%rbp
	leaq (L_10666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x469
L_10666:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_10667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x473
L_10713:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_10714
.p2align 0x4
.long 0x46B
L_10667:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_10712
L_10668:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x18(%rbp),%edi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_ST_isReg
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10669
.p2align 0x4
.long 0x46C
L_10669:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl %eax,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10670
L_10709:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10710
.p2align 0x4
.long 0x46C
L_10710:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_10670:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_377091
L_10671:
	movq $0xB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movl 0x8(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_10672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1213
.p2align 0x4
L_377091:
L_10708:
	movq $0xB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq %r15,0x18(%rbp)
L_10674:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movl 0x14(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_377100
L_10675:
	xorl %ecx,%ecx
L_10676:
	movq $0xB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movl %r14d,%r11d
	shlq $0x1,%r11
	orq $0x1,%r11
	movq $0x4967,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x20,%r12
	movl %r14d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x18(%rbp),%r9
	movq %r9,0x8(%r10)
	movq %r13,0x10(%r10)
	movq $0xB7,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movl %ecx,0x0(%r8)
	addq $0x28,%r12
	movl %r14d,0x4(%r8)
	movq %r13,0x8(%r8)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r8)
	movq %r9,0x18(%r8)
	movq $0xB9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r8,0x10(%r14)
	movq %r10,0x18(%r14)
	movq %r15,0x28(%r14)
	addq $0x38,%r12
	movl $0x1000,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%r14)
	movq %r14,0x48(%rbp)
	movq $0xBD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x50(%rbp)
	movb 0x10(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_377096
	cmpb $0x2,%r15b
	je L_377095
L_10677:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10678
L_10686:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10687
.p2align 0x4
.long 0x470
L_10687:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_10678:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x10(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq $0x1000,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10679
.p2align 0x4
.long 0x46E
L_10679:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_175:
	cmpq $0x1000,%r15
	jnl L_377092
L_10685:
	movq 0x18(%rbp),%r14
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_175
.p2align 0x4
L_377092:
L_10680:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10681
L_10683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10684
.p2align 0x4
.long 0x46F
L_10684:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_10681:
	movq $0x295D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
L_10682:
	movq $0xBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xBF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x28,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,0x18(%r15)
	movq $0x12FD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl 0xC(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1B5B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq $0xC1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377095:
L_10698:
	movq $0x1,%r15
	jmp L_10682
.p2align 0x4
L_377096:
L_10688:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10689
L_10696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10697
.p2align 0x4
.long 0x470
L_10697:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_10689:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x10(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq $0x1000,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10690
.p2align 0x4
.long 0x46E
L_10690:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_176:
	cmpq $0x1000,%r15
	jnl L_377097
L_10695:
	movq 0x18(%rbp),%r14
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_176
.p2align 0x4
L_377097:
L_10691:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10692
L_10693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10694
.p2align 0x4
.long 0x46F
L_10694:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_10692:
	movq $0x295F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_10682
.p2align 0x4
L_377100:
L_10699:
	movq $0x1,%r15
	movl $0x8,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_10700:
	orl %ecx,%ebx
	movl %ebx,0x14(%rbp)
	cmpq $0x1,%r15
	je L_377101
L_10701:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r15
	movl %ebx,%ecx
	movl %r14d,%ebx
	jmp L_10700
.p2align 0x4
L_377101:
L_10702:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10703
L_10704:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10705
.p2align 0x4
.long 0x471
L_10705:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_10703:
	movl 0x14(%rbp),%ecx
	jmp L_10676
.p2align 0x4
.long 0x46D
L_10672:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10673
L_10706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10707
.p2align 0x4
.long 0x472
L_10707:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_10673:
	movq 0x18(%rbp),%r15
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_10674
.text
.p2align 0x4
.globl x_1213
.hidden x_1213
x_1213:
L_10743:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10744
L_10849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10850
.p2align 0x4
.long 0x457
L_10850:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_10744:
	incl (gcState+0x44)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_377144
L_10745:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rcx
	shrq $0x1,%rcx
	cmpq $0x1F20,%rcx
	je L_377143
	cmpq $0x1F21,%rcx
	je L_377142
	cmpq $0x1F22,%rcx
	je L_377141
	cmpq $0x1F23,%rcx
	je L_377140
L_10746:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readWord8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10747
.p2align 0x4
.long 0x457
L_10747:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,%r15
x_18:
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_377107
L_10748:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_377106
L_10749:
	movq %r15,0x0(%rbp)
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377106:
L_10751:
	movq (globalObjptr+0x740)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377107:
L_10752:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10753
.p2align 0x4
.long 0x457
L_10753:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_10751
L_10754:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_377114
L_10755:
	movl %eax,0x0(%rbp)
L_10756:
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x0(%rbp),%edi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10757
.p2align 0x4
.long 0x453
L_10757:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq %rax,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10758
L_10773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10774
.p2align 0x4
.long 0x26
L_10774:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_10758:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	testq %r15,%r15
	jz L_377112
L_10759:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_179:
	movslq %ecx,%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_377108
L_10760:
	incl %ecx
	jmp loop_179
.p2align 0x4
L_377108:
L_10761:
	movq 0x8(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_377111
L_10762:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10763
.p2align 0x4
.long 0x47A
L_10763:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_180:
	cmpq 0x8(%rbp),%r15
	jnl L_377109
L_10769:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x18(%rbp),%r14
	movq 0x10(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_180
.p2align 0x4
L_377109:
L_10764:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10765
L_10767:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_10768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10768
.p2align 0x4
.long 0x27
L_10768:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_10765:
	movq 0x18(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_10766:
	movl 0x0(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377111:
L_10771:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377112:
L_10772:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_10766
.p2align 0x4
L_377114:
	movl %eax,%ecx
L_10776:
	cmpl $0x4,%ecx
	je L_377115
L_10777:
	movl %ecx,0x0(%rbp)
	jmp L_10756
.p2align 0x4
L_377115:
L_10778:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_377130
L_10779:
	incl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_377129
L_10780:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rcx
	shrq $0x1,%rcx
	cmpq $0x1F20,%rcx
	je L_377128
	cmpq $0x1F21,%rcx
	je L_377127
	cmpq $0x1F22,%rcx
	je L_377126
	cmpq $0x1F23,%rcx
	je L_377125
L_10781:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_10782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readWord8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10782
.p2align 0x4
.long 0x0
L_10782:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq %rax,%r15
x_19:
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_377117
L_10783:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_10751
L_10784:
	movq %r15,0x0(%rbp)
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377117:
L_10786:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_10787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10787
.p2align 0x4
.long 0x0
L_10787:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl %eax,%r15d
	movl %r15d,0x0(%rbp)
	movl %eax,(cReturnTemp+0x0)(%rip)
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_10751
L_10788:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r15d,%edi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10789
.p2align 0x4
.long 0x453
L_10789:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq %rax,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10790
L_10804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10805
.p2align 0x4
.long 0x26
L_10805:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_10790:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	testq %r15,%r15
	jz L_377122
L_10791:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_181:
	movslq %ecx,%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_377118
L_10792:
	incl %ecx
	jmp loop_181
.p2align 0x4
L_377118:
L_10793:
	movq 0x8(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_10771
L_10794:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10795
.p2align 0x4
.long 0x47A
L_10795:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_182:
	cmpq 0x8(%rbp),%r15
	jnl L_377119
L_10801:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x18(%rbp),%r14
	movq 0x10(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_182
.p2align 0x4
L_377119:
L_10796:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10797
L_10799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_10800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10800
.p2align 0x4
.long 0x27
L_10800:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_10797:
	movq 0x18(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_10798:
	movl 0x0(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377122:
L_10803:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_10798
.p2align 0x4
L_377125:
L_10813:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_10814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readChar8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10814
.p2align 0x4
.long 0x0
L_10814:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq %rax,%r15
	jmp x_19
.p2align 0x4
L_377126:
L_10811:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_10812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_writeChar8Arr
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10812
.p2align 0x4
.long 0x0
L_10812:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq %rax,%r15
	jmp x_19
.p2align 0x4
L_377127:
L_10809:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_10810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_writeChar8Vec
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10810
.p2align 0x4
.long 0x0
L_10810:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq %rax,%r15
	jmp x_19
.p2align 0x4
L_377128:
L_10807:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq 0x8(%r15),%rsi
	movl 0x4(%r15),%edi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_10808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readChar8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10808
.p2align 0x4
.long 0x0
L_10808:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq %rax,%r15
	jmp x_19
.p2align 0x4
L_377129:
L_10815:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x1,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_10816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_lseek
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10816
.p2align 0x4
.long 0x0
L_10816:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq %rax,%r15
	jmp x_19
.p2align 0x4
L_377130:
L_10817:
	incl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_377138
L_10818:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rcx
	shrq $0x1,%rcx
	cmpq $0x1F20,%rcx
	je L_377137
	cmpq $0x1F21,%rcx
	je L_377136
	cmpq $0x1F22,%rcx
	je L_377135
	cmpq $0x1F23,%rcx
	je L_377134
L_10819:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readWord8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10820
.p2align 0x4
.long 0x451
L_10820:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq %rax,%r15
x_20:
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_377132
L_10821:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_10751
L_10822:
	movq %r15,0x0(%rbp)
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377132:
L_10824:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10825
.p2align 0x4
.long 0x451
L_10825:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_10751
L_10826:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movl %eax,%ecx
	jmp L_10776
.p2align 0x4
L_377134:
L_10834:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readChar8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10835
.p2align 0x4
.long 0x451
L_10835:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq %rax,%r15
	jmp x_20
.p2align 0x4
L_377135:
L_10832:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_writeChar8Arr
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10833
.p2align 0x4
.long 0x451
L_10833:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq %rax,%r15
	jmp x_20
.p2align 0x4
L_377136:
L_10830:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_writeChar8Vec
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10831
.p2align 0x4
.long 0x451
L_10831:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq %rax,%r15
	jmp x_20
.p2align 0x4
L_377137:
L_10828:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq 0x8(%r15),%rsi
	movl 0x4(%r15),%edi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readChar8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10829
.p2align 0x4
.long 0x451
L_10829:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq %rax,%r15
	jmp x_20
.p2align 0x4
L_377138:
L_10836:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x1,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_10837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_lseek
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10837
.p2align 0x4
.long 0x451
L_10837:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq %rax,%r15
	jmp x_20
.p2align 0x4
L_377140:
L_10845:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readChar8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10846
.p2align 0x4
.long 0x457
L_10846:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,%r15
	jmp x_18
.p2align 0x4
L_377141:
L_10843:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_writeChar8Arr
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10844
.p2align 0x4
.long 0x457
L_10844:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,%r15
	jmp x_18
.p2align 0x4
L_377142:
L_10841:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4(%r15),%edx
	movq 0x10(%r15),%rsi
	movl 0x8(%r15),%edi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_writeChar8Vec
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10842
.p2align 0x4
.long 0x457
L_10842:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,%r15
	jmp x_18
.p2align 0x4
L_377143:
L_10839:
	movslq 0x0(%r15),%rcx
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq 0x8(%r15),%rsi
	movl 0x4(%r15),%edi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_readChar8
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10840
.p2align 0x4
.long 0x457
L_10840:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,%r15
	jmp x_18
.p2align 0x4
L_377144:
L_10847:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x1,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_10848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_lseek
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10848
.p2align 0x4
.long 0x457
L_10848:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,%r15
	jmp x_18
.text
.p2align 0x4
.globl newIn_0
.hidden newIn_0
newIn_0:
L_10851:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_10975
L_10852:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_377156
L_10853:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x8(%rbp),%edi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call Posix_FileSys_Stat_fstat
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10854
.p2align 0x4
.long 0x47B
L_10854:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpl $0xFFFFFFFF,%eax
	je L_377148
L_10855:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getDev
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10856
.p2align 0x4
.long 0x47B
L_10856:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getINo
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10857
.p2align 0x4
.long 0x47B
L_10857:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10858+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10858
.p2align 0x4
.long 0x47B
L_10858:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl %eax,0xC(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getNLink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10859
.p2align 0x4
.long 0x47B
L_10859:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpl $0x0,%eax
	jl L_377146
L_10860:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getUId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10861
.p2align 0x4
.long 0x47B
L_10861:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getGId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10862
.p2align 0x4
.long 0x47B
L_10862:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getSize
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10863
.p2align 0x4
.long 0x47B
L_10863:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10864+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getATime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10864
.p2align 0x4
.long 0x47B
L_10864:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x50(%rbp)
	leaq L_10952(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_10865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
L_377146:
L_10948:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_377147
L_10949:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377147:
L_10911:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x740)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377148:
L_10954:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_10955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10955
.p2align 0x4
.long 0x48B
L_10955:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl %eax,%r15d
	movl %r15d,0x28(%rbp)
	movl %eax,(cReturnTemp+0x0)(%rip)
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_10911
L_10956:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r15d,%edi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10957
.p2align 0x4
.long 0x474
L_10957:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10958
L_10972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_10973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10973
.p2align 0x4
.long 0x475
L_10973:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_10958:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	testq %r15,%r15
	jz L_377153
L_10959:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_186:
	movslq %ecx,%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_377149
L_10960:
	incl %ecx
	jmp loop_186
.p2align 0x4
L_377149:
L_10961:
	movq 0x30(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_377152
L_10962:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10963
.p2align 0x4
.long 0x478
L_10963:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_187:
	cmpq 0x30(%rbp),%r15
	jnl L_377150
L_10969:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x40(%rbp),%r14
	movq 0x38(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_187
.p2align 0x4
L_377150:
L_10964:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10965
L_10967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10968
.p2align 0x4
.long 0x48C
L_10968:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_10965:
	movq 0x40(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_10966:
	movl 0x28(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377152:
L_10936:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377153:
L_10971:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_10966
.p2align 0x4
L_377156:
L_10975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_10976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10976
.p2align 0x4
.long 0x48E
L_10976:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_10853
.p2align 0x4
.long 0x47C
L_10865:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x50(%rbp)
	movq %r11,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_10866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x48A
L_10952:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10948
.p2align 0x4
.long 0x47D
L_10866:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10867
.p2align 0x4
.long 0x47E
L_10867:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x60(%rbp)
	leaq L_10951(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x60,%rbp
	leaq (L_10868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x47D
L_10868:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_10869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x48A
L_10951:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10948
.p2align 0x4
.long 0x47D
L_10869:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getCTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10870
.p2align 0x4
.long 0x47E
L_10870:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x60(%rbp)
	leaq L_10947(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x60,%rbp
	leaq (L_10871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x47D
L_10871:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_10872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x48A
L_10947:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10948
.p2align 0x4
.long 0x47F
L_10872:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_10911
L_10873:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0xC(%rbp),%edi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_ST_isReg
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10874
.p2align 0x4
.long 0x480
L_10874:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl %eax,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10875
L_10944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10945
.p2align 0x4
.long 0x480
L_10945:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_10875:
	movl 0xC(%rbp),%r15d
	testl %r15d,%r15d
	jz L_377158
L_10876:
	movq $0xB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movl 0x8(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_10877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1213
.p2align 0x4
L_377158:
L_10943:
	movq $0xB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
L_10879:
	movq $0x1F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r15d,%edi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call Posix_FileSys_Stat_fstat
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10880
.p2align 0x4
.long 0x482
L_10880:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpl $0xFFFFFFFF,%eax
	je L_377161
L_10881:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getDev
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10882
.p2align 0x4
.long 0x482
L_10882:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getINo
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10883
.p2align 0x4
.long 0x482
L_10883:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10884+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10884
.p2align 0x4
.long 0x482
L_10884:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl %eax,0xC(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getNLink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10885
.p2align 0x4
.long 0x482
L_10885:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpl $0x0,%eax
	jl L_377159
L_10886:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getUId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10887
.p2align 0x4
.long 0x482
L_10887:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getGId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10888
.p2align 0x4
.long 0x482
L_10888:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getSize
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10889
.p2align 0x4
.long 0x482
L_10889:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x50,%rbp
	leaq (L_10890+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getATime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10890
.p2align 0x4
.long 0x482
L_10890:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x50(%rbp)
	leaq L_10917(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_10891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
L_377159:
L_10913:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_10911
L_10914:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377161:
L_10919:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_10920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10920
.p2align 0x4
.long 0x48B
L_10920:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl %eax,%r15d
	movl %r15d,0x28(%rbp)
	movl %eax,(cReturnTemp+0x0)(%rip)
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_10911
L_10921:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r15d,%edi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_10922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10922
.p2align 0x4
.long 0x474
L_10922:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10923
L_10938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_10939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10939
.p2align 0x4
.long 0x475
L_10939:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_10923:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	testq %r15,%r15
	jz L_377166
L_10924:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_184:
	movslq %ecx,%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_377162
L_10925:
	incl %ecx
	jmp loop_184
.p2align 0x4
L_377162:
L_10926:
	movq 0x30(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_10936
L_10927:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10928
.p2align 0x4
.long 0x478
L_10928:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_185:
	cmpq 0x30(%rbp),%r15
	jnl L_377163
L_10934:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x40(%rbp),%r14
	movq 0x38(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_185
.p2align 0x4
L_377163:
L_10929:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10930
L_10932:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10933
.p2align 0x4
.long 0x48C
L_10933:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_10930:
	movq 0x40(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_10931:
	movl 0x28(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377166:
L_10937:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_10931
.p2align 0x4
.long 0x481
L_10877:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10878
L_10941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_10942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10942
.p2align 0x4
.long 0x48D
L_10942:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_10878:
	movq 0x10(%rbp),%r15
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_10879
.p2align 0x4
.long 0x483
L_10891:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x50(%rbp)
	movq %r11,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_10892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x48A
L_10917:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10913
.p2align 0x4
.long 0x484
L_10892:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10893
.p2align 0x4
.long 0x485
L_10893:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x60(%rbp)
	leaq L_10916(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x60,%rbp
	leaq (L_10894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x484
L_10894:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_10895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x48A
L_10916:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10913
.p2align 0x4
.long 0x484
L_10895:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_10896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getCTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10896
.p2align 0x4
.long 0x485
L_10896:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x60(%rbp)
	leaq L_10912(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x60,%rbp
	leaq (L_10897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x484
L_10897:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_10898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x48A
L_10912:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10913
.p2align 0x4
.long 0x486
L_10898:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_10911
L_10899:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0xC(%rbp),%edi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_ST_isReg
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10900
.p2align 0x4
.long 0x487
L_10900:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10901
L_10908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x48,%rbp
	leaq (L_10909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10909
.p2align 0x4
.long 0x487
L_10909:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_10901:
	movl 0x8(%rbp),%r15d
	movl %r15d,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x4969,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x38(%rbp),%r10
	movq %r10,0x8(%r13)
	movq $0x496D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x18,%r12
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	movq $0x4963,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r10,0x8(%r11)
	movq $0x10E3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r9,0x10(%r15)
	movq %r13,0x18(%r15)
	movq %r11,0x28(%r15)
	addq $0x38,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl $0x1000,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq $0x1000,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_10902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10902
.p2align 0x4
.long 0x488
L_10902:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_183:
	cmpq $0x1000,%r15
	jnl L_377172
L_10907:
	movq 0x38(%rbp),%r14
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_183
.p2align 0x4
L_377172:
L_10903:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_10904
L_10905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_10906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10906
.p2align 0x4
.long 0x489
L_10906:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_10904:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x10E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq (globalWord64+0x30)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x10E7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x10(%r11)
	movq %r15,0x18(%r11)
	movq %r14,0x0(%rbp)
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%rbp)
	addq $0x38,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x38(%rbp),%r14
	movq %r14,0x20(%r11)
	movq %r15,0x28(%r11)
	movq $0x12FB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x1B5D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r11)
	movq 0x20(%rbp),%r13
	movq %r13,(gcState+0x20)(%rip)
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl pow_0
.hidden pow_0
pow_0:
L_10977:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_10985
L_10978:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_377178
L_10979:
	movq $0x5B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	cmpl $0x0,0x0(%rbp)
	jg L_377176
L_10980:
	movq $0x3,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377176:
L_10981:
	movl 0x0(%rbp),%r15d
	movl %r15d,%r14d
	andl $0x1,%r14d
	jz evenPow_0
L_10982:
	decl %r15d
	movl %r15d,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_10983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp evenPow_0
.p2align 0x4
L_377178:
L_10985:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10986
.p2align 0x4
.long 0x47A
L_10986:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10979
.p2align 0x4
.long 0x48F
L_10983:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x0(%rbp)
	movq $0x5,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp x_1182
.text
.p2align 0x4
.globl evenPow_0
.hidden evenPow_0
evenPow_0:
L_10987:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_10992
L_10988:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_377180
L_10989:
	movq $0x5B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movl $0x2,0x28(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_10990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_377180:
L_10992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_10993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_10993
.p2align 0x4
.long 0x47A
L_10993:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_10989
.p2align 0x4
.long 0x48F
L_10990:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl %r15d,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_10991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp pow_0
.p2align 0x4
.long 0x48F
L_10991:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp x_1182
.text
.p2align 0x4
.globl name_0
.hidden name_0
name_0:
L_10994:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_10995
L_11298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_11299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11299
.p2align 0x4
.long 0x451
L_11299:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_10995:
	movq 0x0(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x1E,%rax
	ja L_377182
	leaq jumpTable_11(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_11:
.quad L_377478,L_377477,L_377476,L_10996,L_377474,L_377473,L_377472,L_10996,L_377471,L_377470,L_377469,L_10996,L_377468,L_377467,L_377466,L_10996,L_377465,L_377464,L_11286,L_10996,L_11286,L_11002,L_377460,L_10996,L_11002,L_11292,L_377457,L_10996,L_11295,L_377455,L_377454
.text
.p2align 0x4
L_377182:
L_10996:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xC97,%rax
	cmpq $0x10D,%rax
	ja L_377183
	leaq jumpTable_12(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_12:
.quad
.text
.p2align 0x4
L_377183:
L_10997:
	movq (globalObjptr+0xDC00)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377184:
L_11270:
	movq (globalObjptr+0xDC48)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377185:
L_11002:
	movq (globalObjptr+0xDC20)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377189:
L_11256:
	movq (globalObjptr+0xDC40)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377256:
L_11197:
	movq (globalObjptr+0xDC38)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377287:
L_11085:
	movq (globalObjptr+0xDC28)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377363:
L_11090:
	movq (globalObjptr+0xDC30)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377451:
L_11000:
	movq (globalObjptr+0xDC18)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377452:
L_10999:
	movq (globalObjptr+0xDC10)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377453:
L_10998:
	movq (globalObjptr+0xDC08)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377454:
L_11297:
	movq (globalObjptr+0xDCD0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377455:
L_11295:
	movq (globalObjptr+0xDCC8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377457:
L_11292:
	movq (globalObjptr+0xDCC0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377460:
L_11286:
	movq (globalObjptr+0xDCB8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377464:
L_11284:
	movq (globalObjptr+0xDCB0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377465:
L_11283:
	movq (globalObjptr+0xDCA8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377466:
L_11282:
	movq (globalObjptr+0xDCA0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377467:
L_11281:
	movq (globalObjptr+0xDC98)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377468:
L_11280:
	movq (globalObjptr+0xDC90)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377469:
L_11279:
	movq (globalObjptr+0xDC88)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377470:
L_11278:
	movq (globalObjptr+0xDC80)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377471:
L_11277:
	movq (globalObjptr+0xDC78)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377472:
L_11276:
	movq (globalObjptr+0xDC70)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377473:
L_11275:
	movq (globalObjptr+0xDC68)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377474:
L_11274:
	movq (globalObjptr+0xDC60)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377476:
L_11273:
	movq (globalObjptr+0xCDD8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377477:
L_11272:
	movq (globalObjptr+0xDC58)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377478:
L_11271:
	movq (globalObjptr+0xDC50)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl fromIntInf_0
.hidden fromIntInf_0
fromIntInf_0:
L_11300:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_11301
L_11329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_11330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11330
.p2align 0x4
.long 0x45F
L_11330:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_11301:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	andq $0x1,%r13
	jz L_377481
L_11302:
	cmpq $0x1,%r14
	jnl L_377480
L_11322:
	movq %r15,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_11323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
L_377480:
L_11304:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_11305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_377481:
L_11325:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_11326:
	cmpl $0x0,%eax
	jnl L_11304
	jmp L_11322
.p2align 0x4
.long 0x490
L_11323:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_11324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x2B
L_11305:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (fromString_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2B
L_11324:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_11305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
fromString_1:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	jo L_377489
L_11307:
	movb 0x0(%r15,%r14,1),%r13b
	testb %r13b,%r13b
	jz L_377484
L_11308:
	movq (globalObjptr+0x750)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377484:
L_11309:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_11310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11310
.p2align 0x4
.long 0x451
L_11310:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	testl %eax,%eax
	jz L_377488
L_11311:
	cmpl $0x1,%eax
	je L_377487
L_11312:
	cmpl $0x2,%eax
	je L_377486
L_11313:
	cmpl $0x3,%eax
	je L_377485
L_11314:
	movq (globalObjptr+0x778)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377485:
L_11315:
	xorl %ecx,%ecx
L_11316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %ecx,%esi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	addq $0x8,%rbp
	leaq (L_11317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Real64_strtor
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	movsd %xmm0,(cReturnTemp+0x0)(%rip)
	jmp L_11317
.p2align 0x4
.long 0x0
L_11317:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movsd (cReturnTemp+0x0)(%rip),%xmm15
	movsd %xmm15,%xmm14
	movsd %xmm14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377486:
L_11318:
	movl $0x2,%ecx
	jmp L_11316
.p2align 0x4
L_377487:
L_11319:
	movl $0x3,%ecx
	jmp L_11316
.p2align 0x4
L_377488:
L_11320:
	movl $0x1,%ecx
	jmp L_11316
.p2align 0x4
L_377489:
L_11306:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1197
.hidden x_1197
x_1197:
L_11331:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_11332
L_11357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_11358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11358
.p2align 0x4
.long 0x45F
L_11358:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_11332:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r14),%r11d
	movl %r11d,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_377490
L_11333:
	movq %r13,0x8(%rbp)
	sarq $0x1,%r15
	movq %r15,0x0(%rbp)
	jmp x_1214
.p2align 0x4
L_377490:
L_11334:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_377494
L_11335:
	movl $0x0,(localWord32+0x0)(%rip)
	movl $0x10,%ebx
.p2align 0x4,,0x7
loop_188:
	cmpl $0x1,%ecx
	je L_377492
L_11336:
	movl $0x1,%r15d
	xchgl %ebx,%ecx
	shll %cl,%r15d
	cmpl %r15d,%ebx
	jb L_377491
L_11337:
	movl (localWord32+0x0)(%rip),%r15d
	shrl %cl,%ebx
	addl %ecx,%r15d
	movl %r15d,(localWord32+0x0)(%rip)
	xchgl %ebx,%ecx
L_11338:
	shrl $0x1,%ebx
	jmp loop_188
.p2align 0x4
L_377491:
	xchgl %ebx,%ecx
	jmp L_11338
.p2align 0x4
L_377492:
L_11340:
	movl (localWord32+0x0)(%rip),%r15d
	testl %r15d,%r15d
	jz L_377493
L_11341:
	movl $0x40,%eax
	cltd
	idivl %r15d
	movl %eax,0x8(%rbp)
	movl %r15d,0x28(%rbp)
	movl $0x40,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_11342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
L_377493:
L_11355:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377494:
L_11356:
	movq $0x2,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x491
L_11342:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	testl %r15d,%r15d
	jz L_377500
L_11343:
	movl $0x1,%ecx
L_11344:
	addl 0x8(%rbp),%ecx
	jo L_11345
L_11346:
	movq 0x10(%rbp),%rsi
	addq $0x8,%rsi
	movl %ecx,%r15d
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	decq %r13
	jo L_377498
L_11347:
	imulq %r13,%r15
	addq %r15,%rsi
	movq %rsi,%r15
	movq %rsi,0x8(%rbp)
	addq $0x0,%r15
	jc L_377497
L_11349:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_11350
L_11352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_11353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11353
.p2align 0x4
.long 0x492
L_11353:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_11350:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x8(%rbp),%rdx
	movl 0x18(%rbp),%esi
	movq 0x0(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_toString
L_11351:
	movq %rax,0x0(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377497:
L_11348:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_377498:
L_11345:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377500:
L_11354:
	xorl %ecx,%ecx
	jmp L_11344
.text
.p2align 0x4
.globl x_1214
.hidden x_1214
x_1214:
L_11359:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_11360
L_11432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_11433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11433
.p2align 0x4
.long 0x494
L_11433:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_11360:
	movq 0x8(%rbp),%r15
	movb 0xC(%r15),%r14b
	movb %r14b,0x10(%rbp)
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movl (gcState+0x44)(%rip),%r15d
	incl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movl 0x0(%r11),%r10d
	movl %r10d,0x14(%rbp)
	testl %r10d,%r10d
	jnz L_377528
L_11361:
	movl $0x1,0x0(%r11)
	testl %r15d,%r15d
	jz L_377527
L_11362:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	cmpb $0x1,%r14b
	je L_377526
	cmpb $0x2,%r14b
	je L_377525
	cmpb $0x3,%r14b
	je L_377524
L_11363:
	movq %r13,0x8(%rbp)
	movl $0x10,%ecx
sextdFromInt32ToInt64_0:
	movslq %ecx,%r15
	movq 0x0(%rbp),%r14
	cmpq $0x0,%r14
	setl %cl
	movzbl %cl,%ecx
	jl L_377523
L_11364:
	negq %r14
	movl $0x40,%ebx
.p2align 0x4,,0x7
loop_189:
	testq %r15,%r15
	jz L_377521
L_11365:
	movq $0x8000000000000000,%r11
	cmpq %r11,%r14
	sete %al
	movzbl %al,%eax
	jne L_377520
L_11410:
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	jne L_377519
L_11412:
	xorq %r13,%r13
	xchgl %eax,%ecx
	movl %eax,(localWord32+0x4)(%rip)
TildeQues_0:
	negq %r13
	movl %r13d,%r10d
	movslq %r10d,%r11
	cmpq %r13,%r11
	jne L_11369
L_11373:
	cmpq $0x10,%r11
	jnb L_11375
L_11378:
	movq (globalObjptr+0xDCD8)(%rip),%r13
	movb 0x0(%r13,%r11,1),%r10b
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movslq %ebx,%r9
	cmpq %r11,%r9
	jnb L_11375
L_11380:
	movb %r10b,0x0(%r13,%r9,1)
	testl %ecx,%ecx
	jz L_11382
L_11407:
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_11369
L_11382:
	movq %r14,%rax
	cqto
	idivq %r15
	testq %rax,%rax
	jz L_377503
L_11383:
	decl %ebx
	jo L_377501
L_11384:
	movq %rax,%r14
	movl (localWord32+0x4)(%rip),%ecx
	jmp loop_189
.p2align 0x4
L_377501:
L_11369:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_377502
L_11370:
	movq $0x3,%r15
L_11371:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movl $0x0,0x0(%r15)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377502:
L_11372:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377503:
L_11385:
	movl (localWord32+0x4)(%rip),%r15d
	testl %r15d,%r15d
	jz L_11387
L_11403:
	decl %ebx
	jo L_11369
L_11404:
	movslq %ebx,%r15
	cmpq %r11,%r15
	jnb L_11375
L_11406:
	movq 0x8(%rbp),%r14
	movb $0x7E,0x0(%r14,%r15,1)
L_11387:
	movslq %ebx,%r15
	movq %r15,0x20(%rbp)
	cmpq %r15,%r11
	jb L_377509
L_11388:
	subq %r15,%r11
	movq %r11,0x28(%rbp)
	jz L_377508
L_11389:
	cmpq $0x7FFFFFFF,%r11
	ja L_377506
L_11390:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq %r11,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_11391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11391
.p2align 0x4
.long 0x493
L_11391:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,%r15
L_11392:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_190:
	cmpq 0x28(%rbp),%r14
	jnl L_377504
L_11397:
	movq %r14,%r13
	addq 0x20(%rbp),%r13
	movq 0x8(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_190
.p2align 0x4
L_377504:
L_11393:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_11395
L_11394:
	movq 0x18(%rbp),%r14
	movl $0x0,0x0(%r14)
L_11395:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377506:
L_11398:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_377507
L_11399:
	movq $0x5,%r15
	jmp L_11371
.p2align 0x4
L_377507:
L_11400:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377508:
L_11401:
	movq (globalObjptr+0x6F8)(%rip),%r15
	jmp L_11392
.p2align 0x4
L_377509:
L_11375:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_377510
L_11376:
	movq $0x6,%r15
	jmp L_11371
.p2align 0x4
L_377510:
L_11377:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377519:
	xchgl %eax,%ecx
	movl %eax,(localWord32+0x4)(%rip)
L_11367:
	movq %r14,%rax
	cqto
	idivq %r15
	movq %rdx,%r13
	jmp TildeQues_0
.p2align 0x4
L_377520:
	xchgl %eax,%ecx
	movl %eax,(localWord32+0x4)(%rip)
	jmp L_11367
.p2align 0x4
L_377521:
L_11413:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_377522
L_11414:
	movq $0x1,%r15
	jmp L_11371
.p2align 0x4
L_377522:
L_11415:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377523:
L_11416:
	movl $0x40,%ebx
	jmp loop_189
.p2align 0x4
L_377524:
L_11419:
	movq %r13,0x8(%rbp)
	movl $0x2,%ecx
	jmp sextdFromInt32ToInt64_0
.p2align 0x4
L_377525:
L_11418:
	movq %r13,0x8(%rbp)
	movl $0x8,%ecx
	jmp sextdFromInt32ToInt64_0
.p2align 0x4
L_377526:
L_11417:
	movq %r13,0x8(%rbp)
	movl $0xA,%ecx
	jmp sextdFromInt32ToInt64_0
.p2align 0x4
L_377527:
L_11421:
	movq (globalObjptr+0x740)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377528:
L_11422:
	testl %r15d,%r15d
	jz L_11421
L_11423:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq $0x41,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_11424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11424
.p2align 0x4
.long 0x27
L_11424:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_191:
	cmpq $0x41,%r15
	jnl L_377529
L_11430:
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_191
.p2align 0x4
L_377529:
L_11425:
	movb 0x10(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_377532
	cmpb $0x2,%r15b
	je L_377531
	cmpb $0x3,%r15b
	je L_377530
L_11426:
	movq %r14,0x8(%rbp)
	movl $0x10,%ecx
	jmp sextdFromInt32ToInt64_0
.p2align 0x4
L_377530:
L_11429:
	movq %r14,0x8(%rbp)
	movl $0x2,%ecx
	jmp sextdFromInt32ToInt64_0
.p2align 0x4
L_377531:
L_11428:
	movq %r14,0x8(%rbp)
	movl $0x8,%ecx
	jmp sextdFromInt32ToInt64_0
.p2align 0x4
L_377532:
L_11427:
	movq %r14,0x8(%rbp)
	movl $0xA,%ecx
	jmp sextdFromInt32ToInt64_0
.text
.p2align 0x4
.globl mod_0
.hidden mod_0
mod_0:
L_11434:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_11435
L_11455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_11456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11456
.p2align 0x4
.long 0x453
L_11456:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_11435:
	movl 0x4(%rbp),%eax
	cmpl $0x0,%eax
	jl L_377538
L_11436:
	movl 0x0(%rbp),%r15d
	cmpl $0x0,%r15d
	jg L_377537
L_11437:
	cmpl $0x0,%r15d
	jnl L_377536
L_11440:
	testl %eax,%eax
	jz L_377535
L_11441:
	decl %eax
	cltd
	idivl %r15d
	incl %r15d
	addl %edx,%r15d
	movl %r15d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377535:
L_11443:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377536:
L_11439:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377537:
L_11444:
	cltd
	idivl %r15d
	movl %edx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377538:
L_11445:
	movl 0x0(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_377540
L_11446:
	cmpl $0x0,%r15d
	jng L_11439
L_11448:
	incl %eax
	cltd
	idivl %r15d
	decl %r15d
	addl %edx,%r15d
	movl %r15d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377540:
L_11449:
	cmpl $0x80000000,%eax
	jne L_11451
L_11452:
	cmpl $0xFFFFFFFF,%r15d
	je L_11443
L_11451:
	movl 0x4(%rbp),%eax
	cltd
	idivl 0x0(%rbp)
	movl %edx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl append_0
.hidden append_0
append_0:
L_11457:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_11458
L_11474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_11475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11475
.p2align 0x4
.long 0x45F
L_11475:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_11458:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%rdx
	movq %rdx,0x18(%rbp)
	testq %r14,%r14
	jz L_377549
L_11459:
	testq %rdx,%rdx
	jz L_377548
L_11460:
	addq %r14,%rdx
	movq %rdx,0x20(%rbp)
	jz L_377547
L_11461:
	cmpq $0x7FFFFFFF,%rdx
	ja L_377546
L_11462:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_11463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11463
.p2align 0x4
.long 0x495
L_11463:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,%r15
L_11464:
	movq 0x8(%rbp),%r10
	movq 0x10(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_192:
	cmpq 0x20(%rbp),%r14
	jnl L_377545
L_11466:
	cmpq %r11,%r13
	jnl L_377544
L_11469:
	movb 0x0(%r10,%r13,1),%dl
	movq %r10,(localObjptr+0x8)(%rip)
	incq %r13
L_11468:
	movb %dl,0x0(%r15,%r14,1)
	incq %r14
	movq (localObjptr+0x8)(%rip),%r10
	jmp loop_192
.p2align 0x4
L_377544:
L_11467:
	movq 0x0(%rbp),%r10
	movb 0x0(%r10),%dl
	movq %r10,(localObjptr+0x8)(%rip)
	movq 0x18(%rbp),%r11
	movq $0x1,%r13
	jmp L_11468
.p2align 0x4
L_377545:
L_11465:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377546:
L_11470:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377547:
L_11471:
	movq (globalObjptr+0x5C0)(%rip),%r15
	jmp L_11464
.p2align 0x4
L_377548:
L_11472:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377549:
L_11473:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl exnMessage_0
.hidden exnMessage_0
exnMessage_0:
L_11476:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_11477
L_11538:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_11539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11539
.p2align 0x4
.long 0x45C
L_11539:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_11477:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je name_0
L_11478:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_11479:
	cmpq $0x1,%r14
	je L_377564
	cmpq $0x2,%r14
	je L_377554
L_11481:
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_11482
L_11486:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xC99,%r11
	je L_377552
L_11482:
	cmpq $0x1,%r15
	je name_0
L_11483:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_11479
.p2align 0x4
L_377552:
L_11487:
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_11488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp exnMessage_0
.p2align 0x4
L_377554:
L_11507:
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_11508
L_11511:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xC98,%r13
	je L_377556
L_11508:
	cmpq $0x1,%r15
	je name_0
L_11509:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_11479
.p2align 0x4
L_377556:
L_11512:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11513
L_11535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_11536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11536
.p2align 0x4
.long 0x492
L_11536:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_11513:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r11
	movq %r11,0x8(%rbp)
	movq %r15,%r14
	andq $0x1,%r14
	jz L_377561
L_11518:
	shrq $0x1,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0x480)(%rip),%r15
	movq (globalObjptr+0x20)(%rip),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_11519:
	movq 0x20(%rbp),%r14
	cmpl %ecx,0x0(%r14)
	je L_377559
L_11520:
	cmpq $0x1,%r15
	je L_377557
L_11521:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x20(%rbp)
	jmp L_11519
.p2align 0x4
L_377557:
L_11522:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11523
L_11529:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_11530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11530
.p2align 0x4
.long 0x49A
L_11530:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_11523:
	movq (globalObjptr+0xDD08)(%rip),%r15
L_11524:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x488)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA308)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	leaq L_11517(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_377559:
L_11531:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11532
L_11533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_11534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11534
.p2align 0x4
.long 0x499
L_11534:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_11532:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp L_11524
.p2align 0x4
L_377561:
L_11514:
	movq (globalObjptr+0xA058)(%rip),%r15
L_11515:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD00)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	leaq L_11517(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_377564:
L_11495:
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_11496
L_11499:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xC97,%r13
	je L_377566
L_11496:
	cmpq $0x1,%r15
	je name_0
L_11497:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_11479
.p2align 0x4
L_377566:
L_11500:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11501
L_11504:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_11505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11505
.p2align 0x4
.long 0x492
L_11505:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_11501:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDCF8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	leaq L_11503(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x496
L_11488:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11489
L_11492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_11493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11493
.p2align 0x4
.long 0x497
L_11493:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_11489:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDCE0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDCE8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDCF0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	leaq L_11491(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x498
L_11525:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11526
L_11527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_11528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11528
.p2align 0x4
.long 0x499
L_11528:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_11526:
	movq 0x20(%rbp),%r15
	jmp L_11515
.p2align 0x4
.long 0x25
L_11517:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x473
L_11516:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x473
L_11502:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_11503:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x473
L_11490:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_11491:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl concat_0
.hidden concat_0
concat_0:
L_11540:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_11541
L_11587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_11588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11588
.p2align 0x4
.long 0x451
L_11588:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_11541:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_377589
L_11542:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_11543:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_377588
.p2align 0x4,,0x7
L_11544:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0x225,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movq $0x0,0x0(%r13)
	movq %r15,0x10(%r13)
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_377573
L_11545:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_11543
.p2align 0x4
L_377573:
L_11546:
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_11547:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_377587
.p2align 0x4,,0x7
L_11548:
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_377574
L_11549:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_11547
.p2align 0x4
L_377574:
L_11550:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_377581
L_11551:
	movq 0x8(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_11552:
	addq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	je L_377575
L_11553:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_11552
.p2align 0x4
L_377575:
L_11554:
	testq %r15,%r15
	jz L_377580
L_11555:
	cmpq $0x7FFFFFFF,%r15
	ja L_377579
L_11556:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_11557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11557
.p2align 0x4
.long 0x49B
L_11557:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_11558:
	movq 0x10(%rbp),%r10
	movq 0x8(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_193:
	cmpq 0x18(%rbp),%r14
	jnl L_377578
.p2align 0x4,,0x7
loop_194:
	cmpq 0x8(%r11),%r13
	jl L_377577
L_11561:
	cmpq $0x1,%r10
	je L_377576
L_11562:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_194
.p2align 0x4
L_377576:
L_11563:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377577:
L_11564:
	movq 0x0(%r11),%r9
	addq %r13,%r9
	movq 0x10(%r11),%rsp
	movb 0x0(%rsp,%r9,1),%r8b
	movb %r8b,0x0(%r15,%r14,1)
	incq %r13
	incq %r14
	jmp loop_193
.p2align 0x4
L_377578:
L_11559:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377579:
L_11566:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377580:
L_11567:
	movq (globalObjptr+0x5B0)(%rip),%r14
	xchgq %r14,%r15
	jmp L_11558
.p2align 0x4
L_377581:
L_11568:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x20(%rbp)
	testq %r13,%r13
	jnz L_11570
L_11579:
	cmpq %r10,0xFFFFFFFFFFFFFFF0(%r11)
	jne L_377582
L_11581:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377582:
L_11570:
	movq 0x20(%rbp),%rdx
	testq %rdx,%rdx
	jz L_377585
L_11571:
	cmpq $0x7FFFFFFF,%rdx
	ja L_11566
L_11572:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_11573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11573
.p2align 0x4
.long 0x49C
L_11573:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,%r15
L_11574:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_195:
	cmpq 0x20(%rbp),%r14
	jnl L_377583
L_11576:
	movq %r14,%r13
	addq 0x10(%rbp),%r13
	movq 0x18(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_195
.p2align 0x4
L_377583:
L_11575:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377585:
L_11578:
	movq (globalObjptr+0x5A8)(%rip),%r15
	jmp L_11574
.p2align 0x4
L_377587:
L_11582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_11583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11583
.p2align 0x4
.long 0x45B
L_11583:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_11548
.p2align 0x4
L_377588:
L_11584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_11585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11585
.p2align 0x4
.long 0x45B
L_11585:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_11544
.p2align 0x4
L_377589:
L_11586:
	movq $0x3,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp unfoldi_0
.text
.p2align 0x4
.globl exit_0
.hidden exit_0
exit_0:
L_11589:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_11590
L_12271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_12272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12272
.p2align 0x4
.long 0x49A
L_12272:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_11590:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_377966
L_11591:
	movl $0x1,0x0(%r15)
	movl 0x0(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_377965
L_11592:
	cmpl $0x100,%r14d
	jnl L_377964
L_11603:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_11610
L_11604:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
L_11605:
	movq %r15,%rax
	subq $0x1,%rax
	cmpq $0xC,%rax
	ja L_377591
	leaq jumpTable_13(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_13:
.quad L_377961,L_377959,L_377957,L_11606,L_377954,L_377952,L_377950,L_11606,L_377948,L_377946,L_377944,L_11606,L_377942
.text
.p2align 0x4
L_377591:
L_11606:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x24B8,%rax
	cmpq $0x8A,%rax
	ja L_377592
	leaq jumpTable_14(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_14:
.quad L_377940,L_377938,L_377936,L_377930,L_377924,L_377918,L_377917,L_377916,L_377915,L_377913,L_377911,L_377909,L_377907,L_377901,L_377895,L_377889,L_377888,L_377887,L_377886,L_377885,L_377881,L_377877,L_377873,L_377869,L_377865,L_377861,L_377857,L_377853,L_377852,L_377851,L_377849,L_377847,L_377845,L_377843,L_377841,L_377839,L_377837,L_377835,L_377833,L_377831,L_377829,L_377827,L_377825,L_377823,L_377821,L_377819,L_377817,L_377815,L_377813,L_377811,L_377809,L_377807,L_377805,L_377803,L_377801,L_377799,L_377797,L_377795,L_377793,L_377791,L_377789,L_377787,L_377785,L_377783,L_377781,L_377779,L_377777,L_377775,L_377773,L_377771,L_377770,L_377769,L_377767,L_377765,L_377763,L_377761,L_377759,L_377757,L_377755,L_377753,L_377751,L_377749,L_377747,L_377745,L_377743,L_377741,L_377739,L_377737,L_377735,L_377733,L_377731,L_377729,L_377727,L_377725,L_377723,L_377721,L_377719,L_377717,L_377715,L_377713,L_377711,L_377709,L_377707,L_377705,L_377703,L_377701,L_377699,L_377697,L_377695,L_377693,L_377691,L_377689,L_377685,L_377683,L_377679,L_377675,L_377671,L_377667,L_377663,L_377659,L_377658,L_377657,L_377656,L_377650,L_377644,L_377638,L_377632,L_377630,L_377628,L_377626,L_377625,L_377624,L_377618,L_377612,L_377606,L_377600,L_377598,L_377596,L_377594
.text
.p2align 0x4
L_377592:
L_11607:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_377593
L_11608:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377593:
L_11610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x0(%rbp),%esi
	movq %rbp,(gcState+0x10)(%rip)
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call MLton_halt
.p2align 0x4
L_377594:
L_12237:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12238:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377596:
L_12234:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12235:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377598:
L_12231:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12232:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377600:
L_12218:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377605
L_12219:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_12220:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377603
L_12221:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377601
L_12222:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_12220
.p2align 0x4
L_377601:
	movq %r14,%r15
	movq %r13,%r14
L_12224:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12225:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377603:
L_12227:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12228:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377605:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_12224
.p2align 0x4
L_377606:
L_12205:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377611
L_12206:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_12207:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377609
L_12208:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377607
L_12209:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_12207
.p2align 0x4
L_377607:
	movq %r14,%r15
	movq %r13,%r14
L_12211:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12212:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377609:
L_12214:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12215:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377611:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_12211
.p2align 0x4
L_377612:
L_12192:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377617
L_12193:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_12194:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377615
L_12195:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377613
L_12196:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_12194
.p2align 0x4
L_377613:
	movq %r14,%r15
	movq %r13,%r14
L_12198:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12199:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377615:
L_12201:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12202:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377617:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_12198
.p2align 0x4
L_377618:
L_12179:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377623
L_12180:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_12181:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377621
L_12182:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377619
L_12183:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_12181
.p2align 0x4
L_377619:
	movq %r14,%r15
	movq %r13,%r14
L_12185:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12186:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377621:
L_12188:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12189:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377623:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_12185
.p2align 0x4
L_377624:
L_12178:
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	leaq L_11664(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1187
.p2align 0x4
L_377625:
L_12177:
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	leaq L_11664(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1188
.p2align 0x4
L_377626:
L_12174:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12175:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377628:
L_12171:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12172:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377630:
L_12168:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12169:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377632:
L_12155:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377637
L_12156:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_12157:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377635
L_12158:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377633
L_12159:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_12157
.p2align 0x4
L_377633:
	movq %r14,%r15
	movq %r13,%r14
L_12161:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12162:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377635:
L_12164:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12165:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377637:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_12161
.p2align 0x4
L_377638:
L_12142:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377643
L_12143:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_12144:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377641
L_12145:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377639
L_12146:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_12144
.p2align 0x4
L_377639:
	movq %r14,%r15
	movq %r13,%r14
L_12148:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12149:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377641:
L_12151:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12152:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377643:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_12148
.p2align 0x4
L_377644:
L_12129:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377649
L_12130:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_12131:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377647
L_12132:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377645
L_12133:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_12131
.p2align 0x4
L_377645:
	movq %r14,%r15
	movq %r13,%r14
L_12135:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12136:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377647:
L_12138:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12139:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377649:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_12135
.p2align 0x4
L_377650:
L_12116:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377655
L_12117:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_12118:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377653
L_12119:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377651
L_12120:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_12118
.p2align 0x4
L_377651:
	movq %r14,%r15
	movq %r13,%r14
L_12122:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12123:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377653:
L_12125:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12126:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377655:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_12122
.p2align 0x4
L_377656:
L_12106:
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x48(%rbp)
	leaq L_11664(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_12107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_377657:
L_12096:
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x48(%rbp)
	leaq L_11664(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_12097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_377658:
L_12095:
	movq 0x38(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movb 0x2(%r15),%r14b
	movb %r14b,0x50(%rbp)
	movb 0x1(%r15),%r14b
	movb %r14b,0x51(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x68(%rbp)
	leaq L_11664(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp diagnoseNonexhaustiveMatch_0
.p2align 0x4
L_377659:
L_12088:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377661
L_12089:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12090:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377661:
L_12092:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12093:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377663:
L_12081:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377665
L_12082:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12083:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377665:
L_12085:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12086:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377667:
L_12074:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377669
L_12075:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12076:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377669:
L_12078:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12079:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377671:
L_12067:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377673
L_12068:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12069:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377673:
L_12071:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12072:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377675:
L_12060:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_377677
L_12061:
	movq 0x8(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12062:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377677:
L_12064:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12065:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377679:
L_12053:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377681
L_12054:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12055:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377681:
L_12057:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12058:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377683:
L_12050:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movl $0x0,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12051:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377685:
L_12043:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377687
L_12044:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12045:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377687:
L_12047:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12048:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377689:
L_12040:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12041:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377691:
L_12037:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12038:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377693:
L_12034:
	movq 0x0(%r15),%r14
	movb $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12035:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377695:
L_12031:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12032:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377697:
L_12028:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12029:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377699:
L_12025:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12026:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377701:
L_12022:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12023:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377703:
L_12019:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12020:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377705:
L_12016:
	movq 0x0(%r15),%r14
	movb $0x7,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12017:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377707:
L_12013:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12014:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377709:
L_12010:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12011:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377711:
L_12007:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12008:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377713:
L_12004:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12005:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377715:
L_12001:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12002:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377717:
L_11998:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11999:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377719:
L_11995:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11996:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377721:
L_11992:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCBC0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11993:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377723:
L_11989:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11990:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377725:
L_11986:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11987:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377727:
L_11983:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11984:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377729:
L_11980:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11981:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377731:
L_11977:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11978:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377733:
L_11974:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11975:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377735:
L_11971:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x90)(%rip),%r13
	movq %r13,0x0(%r14)
	movl $0x1,0x8(%r14)
	movl $0x1,0xC(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11972:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377737:
L_11968:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11969:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377739:
L_11965:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11966:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377741:
L_11962:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11963:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377743:
L_11959:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11960:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377745:
L_11956:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11957:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377747:
L_11953:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11954:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377749:
L_11950:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11951:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377751:
L_11947:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11948:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377753:
L_11944:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11945:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377755:
L_11941:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11942:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377757:
L_11938:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA98)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11939:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377759:
L_11935:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA78)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11936:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377761:
L_11932:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11933:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377763:
L_11929:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11930:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377765:
L_11926:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11927:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377767:
L_11923:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11924:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377769:
L_11922:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	leaq L_11664(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1190
.p2align 0x4
L_377770:
L_11921:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	leaq L_11664(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1191
.p2align 0x4
L_377771:
L_11918:
	movq 0x0(%r15),%r14
	movb $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11919:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377773:
L_11915:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x80)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11916:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377775:
L_11912:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11913:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377777:
L_11909:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11910:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377779:
L_11906:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA68)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11907:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377781:
L_11903:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCA88)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11904:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377783:
L_11900:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCAA8)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11901:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377785:
L_11897:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11898:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377787:
L_11894:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11895:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377789:
L_11891:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11892:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377791:
L_11888:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11889:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377793:
L_11885:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11886:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377795:
L_11882:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11883:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377797:
L_11879:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11880:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377799:
L_11876:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11877:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377801:
L_11873:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11874:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377803:
L_11870:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11871:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377805:
L_11867:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11868:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377807:
L_11864:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x70)(%rip),%r13
	movq %r13,0x0(%r14)
	movl $0x1,0x8(%r14)
	movl $0x1,0xC(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11865:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377809:
L_11861:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xBDB0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11862:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377811:
L_11858:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11859:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377813:
L_11855:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11856:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377815:
L_11852:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11853:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377817:
L_11849:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11850:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377819:
L_11846:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11847:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377821:
L_11843:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0xCBB0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11844:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377823:
L_11840:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11841:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377825:
L_11837:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11838:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377827:
L_11834:
	movq 0x0(%r15),%r14
	movq (globalWord64+0x60)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11835:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377829:
L_11831:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq (globalObjptr+0x7F0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11832:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377831:
L_11828:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11829:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377833:
L_11825:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11826:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377835:
L_11822:
	movq 0x0(%r15),%r14
	movb $0x2,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11823:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377837:
L_11819:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11820:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377839:
L_11816:
	movq 0x0(%r15),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11817:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377841:
L_11813:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11814:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377843:
L_11810:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11811:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377845:
L_11807:
	movq 0x0(%r15),%r14
	movb $0x4,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11808:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377847:
L_11804:
	movq 0x0(%r15),%r14
	movb $0x3,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11805:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377849:
L_11801:
	movq 0x0(%r15),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11802:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377851:
L_11800:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x30(%rbp)
	leaq L_11664(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1192
.p2align 0x4
L_377852:
L_11799:
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	leaq L_11664(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1193
.p2align 0x4
L_377853:
L_11792:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377855
L_11793:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11794:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377855:
L_11796:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11797:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377857:
L_11785:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r14d
	decl %r14d
	jo L_377859
L_11789:
	movl %r14d,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11790:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377859:
L_11786:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11787:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377861:
L_11777:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
L_11778:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_377863
L_11782:
	movq 0x0(%r11),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11783:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377863:
L_11779:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11780:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377865:
L_11770:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377867
L_11771:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11772:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377867:
L_11774:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11775:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377869:
L_11763:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377871
L_11764:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11765:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377871:
L_11767:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11768:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377873:
L_11756:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377875
L_11757:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11758:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377875:
L_11760:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11761:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377877:
L_11749:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_377879
L_11750:
	movq 0x8(%r15),%r14
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11751:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377879:
L_11753:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11754:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377881:
L_11742:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r14d
	decl %r14d
	jo L_377883
L_11746:
	movl %r14d,0x0(%r13)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11747:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377883:
L_11743:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11744:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377885:
L_11741:
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	leaq L_11664(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp diagnoseRedundantMatch_0
.p2align 0x4
L_377886:
L_11740:
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	leaq L_11664(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp resolve_0
.p2align 0x4
L_377887:
L_11730:
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x48(%rbp)
	leaq L_11664(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_11731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_377888:
L_11720:
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x48(%rbp)
	leaq L_11664(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_11721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_377889:
L_11707:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377894
L_11708:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_11709:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377892
L_11710:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377890
L_11711:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_11709
.p2align 0x4
L_377890:
	movq %r14,%r15
	movq %r13,%r14
L_11713:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11714:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377892:
L_11716:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11717:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377894:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_11713
.p2align 0x4
L_377895:
L_11694:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377900
L_11695:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_11696:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377898
L_11697:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377896
L_11698:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_11696
.p2align 0x4
L_377896:
	movq %r14,%r15
	movq %r13,%r14
L_11700:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11701:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377898:
L_11703:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11704:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377900:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_11700
.p2align 0x4
L_377901:
L_11681:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377906
L_11682:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_11683:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377904
L_11684:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377902
L_11685:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_11683
.p2align 0x4
L_377902:
	movq %r14,%r15
	movq %r13,%r14
L_11687:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11688:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377904:
L_11690:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11691:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377906:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_11687
.p2align 0x4
L_377907:
L_11678:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11679:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377909:
L_11675:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11676:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377911:
L_11672:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11673:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377913:
L_11669:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11670:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377915:
L_11668:
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	leaq L_11664(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1194
.p2align 0x4
L_377916:
L_11667:
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	leaq L_11664(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1195
.p2align 0x4
L_377917:
L_11659:
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	leaq L_11664(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_11660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1196
.p2align 0x4
L_377918:
L_11646:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377923
L_11647:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_11648:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377921
L_11649:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377919
L_11650:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_11648
.p2align 0x4
L_377919:
	movq %r14,%r15
	movq %r13,%r14
L_11652:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11653:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377921:
L_11655:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11656:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377923:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_11652
.p2align 0x4
L_377924:
L_11633:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377929
L_11634:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_11635:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377927
L_11636:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377925
L_11637:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_11635
.p2align 0x4
L_377925:
	movq %r14,%r15
	movq %r13,%r14
L_11639:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11640:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377927:
L_11642:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11643:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377929:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_11639
.p2align 0x4
L_377930:
L_11620:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r10
	cmpq $0x1,%r10
	je L_377935
L_11621:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_11622:
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_377933
L_11623:
	movq 0x8(%r10),%r9
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r15)
	cmpq $0x1,%r11
	je L_377931
L_11624:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_11622
.p2align 0x4
L_377931:
	movq %r14,%r15
	movq %r13,%r14
L_11626:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11627:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377933:
L_11629:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11630:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377935:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_11626
.p2align 0x4
L_377936:
L_11617:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11618:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377938:
L_11614:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11615:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377940:
L_11611:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11612:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377942:
L_12265:
	movq (globalObjptr+0x838)(%rip),%r14
	movl $0x64,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12266:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377944:
L_12262:
	movq (globalObjptr+0x830)(%rip),%r14
	movl $0x8,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12263:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377946:
.p2align 0x4,,0x7
L_11661:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11662:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377948:
L_12258:
	movq (globalObjptr+0x828)(%rip),%r14
	movl $0x3C,0x0(%r14)
	movl $0x140,0x4(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12259:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377950:
L_12255:
	movq (globalObjptr+0x820)(%rip),%r14
	movl $0x3,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12256:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377952:
L_12252:
	movq (globalObjptr+0x818)(%rip),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12253:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377954:
L_12249:
	movq (globalObjptr+0x810)(%rip),%r14
	movl $0x2710,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12250:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377957:
L_12246:
	movq (globalObjptr+0x808)(%rip),%r14
	movl $0x0,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12247:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377959:
L_12243:
	movq (globalObjptr+0x800)(%rip),%r14
	movl $0x1,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12244:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377961:
L_12240:
	movq (globalObjptr+0x7F8)(%rip),%r14
	movl $0x64,0x0(%r14)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_12241:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
L_377964:
	movq %r11,%r14
L_11594:
	movq %r14,0x30(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_11595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_377965:
	movq %r11,%r14
	jmp L_11594
.p2align 0x4
L_377966:
L_12270:
	movq (globalObjptr+0x840)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x498
L_11660:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_11661
.p2align 0x4
.long 0x25
L_11664:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_11610
L_11665:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_11605
.p2align 0x4
.long 0x49E
L_12107:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_12108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x49E
L_12097:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_12098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x49E
L_11731:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_11732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x49E
L_11721:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_11722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x473
L_11595:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11596
L_11601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_11602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11602
.p2align 0x4
.long 0x49D
L_11602:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_11596:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x850)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD10)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_11597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x49F
L_12108:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12109
L_12114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_12115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12115
.p2align 0x4
.long 0x4A2
L_12115:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_12109:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_12110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x49F
L_12098:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12099
L_12104:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_12105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12105
.p2align 0x4
.long 0x4A2
L_12105:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_12099:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_12100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x49F
L_11732:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11733
L_11738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_11739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11739
.p2align 0x4
.long 0x4A2
L_11739:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_11733:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_11734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x49F
L_11722:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11723
L_11728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_11729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11729
.p2align 0x4
.long 0x4A2
L_11729:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_11723:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBD8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_11724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x473
L_11597:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11598
L_11599:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_11600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11600
.p2align 0x4
.long 0x49D
L_11600:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_11598:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A0
L_12110:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12111
L_12112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_12113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12113
.p2align 0x4
.long 0x4A1
L_12113:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_12111:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	movb $0x0,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_11660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4A0
L_12100:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12101
L_12102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_12103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12103
.p2align 0x4
.long 0x4A1
L_12103:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_12101:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	movb $0x0,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_11660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4A0
L_11734:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11735
L_11736:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_11737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11737
.p2align 0x4
.long 0x4A1
L_11737:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_11735:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	movb $0x0,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_11660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4A0
L_11724:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_11725
L_11726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_11727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_11727
.p2align 0x4
.long 0x4A1
L_11727:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_11725:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	movb $0x0,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_11660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.text
.p2align 0x4
.globl x_1189
.hidden x_1189
x_1189:
L_12273:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_12274
L_12344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_12345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12345
.p2align 0x4
.long 0x494
L_12345:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_12274:
	movq 0x8(%rbp),%r15
	movb 0x8(%r15),%r14b
	movb %r14b,0x4(%rbp)
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq %r11,0x10(%rbp)
	movl (gcState+0x44)(%rip),%r15d
	incl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movl 0x0(%r11),%r10d
	movl %r10d,0x18(%rbp)
	testl %r10d,%r10d
	jnz L_378005
L_12275:
	movl $0x1,0x0(%r11)
	testl %r15d,%r15d
	jz L_378004
L_12276:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	cmpb $0x1,%r14b
	je L_378003
	cmpb $0x2,%r14b
	je L_378002
	cmpb $0x3,%r14b
	je L_378001
L_12277:
	movq %r13,0x8(%rbp)
	movl $0x10,%ecx
sextdFromInt32ToInt32_0:
	movl 0x0(%rbp),%ebx
	cmpl $0x0,%ebx
	setl %al
	movzbl %al,%eax
	jl L_378000
L_12278:
	negl %ebx
	movl $0x20,%r15d
	xchgl %r15d,%ecx
	movl %eax,(localWord32+0x4)(%rip)
	movl %r15d,(localWord32+0x0)(%rip)
.p2align 0x4,,0x7
loop_196:
	movl (localWord32+0x0)(%rip),%r15d
	testl %r15d,%r15d
	jz L_377998
L_12279:
	cmpl $0x80000000,%ebx
	sete %al
	movzbl %al,%eax
	jne L_377997
L_12322:
	cmpl $0xFFFFFFFF,%r15d
	jne L_377996
L_12324:
	xorl %r14d,%r14d
	xchgl %r15d,%ecx
	xchgl %r14d,%ebx
	movl %eax,(localWord32+0x10)(%rip)
	movl %r15d,(localWord32+0x8)(%rip)
	movl %r14d,(localWord32+0xC)(%rip)
TildeQues_1:
	negl %ebx
	movslq %ebx,%r15
	cmpq $0x10,%r15
	jnb L_12283
L_12287:
	movq (globalObjptr+0xDCD8)(%rip),%r13
	movb 0x0(%r13,%r15,1),%r11b
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl (localWord32+0x8)(%rip),%ebx
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_12283
L_12289:
	movb %r11b,0x0(%r15,%r13,1)
	movl (localWord32+0x10)(%rip),%r15d
	testl %r15d,%r15d
	jz L_12291
L_12319:
	cmpl $0xFFFFFFFF,%ecx
	je L_12293
L_12291:
	movl (localWord32+0xC)(%rip),%eax
	cltd
	idivl %ecx
	testl %eax,%eax
	jz L_377981
L_12292:
	decl %ebx
	jo L_377979
L_12296:
	movl %ebx,%ecx
	movl %eax,%ebx
	jmp loop_196
.p2align 0x4
L_377979:
L_12293:
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_377980
L_12294:
	movq $0x3,%r15
L_12285:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x10(%rbp),%r15
	movl $0x0,0x0(%r15)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377980:
L_12295:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377981:
L_12297:
	movl (localWord32+0x4)(%rip),%r15d
	testl %r15d,%r15d
	jnz L_377989
L_12298:
	movl %ebx,%ecx
L_12299:
	movslq %ecx,%r15
	movq %r15,0x20(%rbp)
	cmpq %r15,%r14
	jb L_377987
L_12300:
	subq %r15,%r14
	movq %r14,0x28(%rbp)
	jz L_377986
L_12301:
	cmpq $0x7FFFFFFF,%r14
	ja L_377984
L_12302:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq %r14,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_12303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12303
.p2align 0x4
.long 0x4A3
L_12303:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,%r15
L_12304:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_197:
	cmpq 0x28(%rbp),%r14
	jnl L_377982
L_12309:
	movq %r14,%r13
	addq 0x20(%rbp),%r13
	movq 0x8(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_197
.p2align 0x4
L_377982:
L_12305:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_12307
L_12306:
	movq 0x10(%rbp),%r14
	movl $0x0,0x0(%r14)
L_12307:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377984:
L_12310:
	movl 0x18(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_377985
L_12311:
	movq $0x5,%r15
	jmp L_12285
.p2align 0x4
L_377985:
L_12312:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377986:
L_12313:
	movq (globalObjptr+0x6F8)(%rip),%r15
	jmp L_12304
.p2align 0x4
L_377987:
L_12283:
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_377988
L_12284:
	movq $0x6,%r15
	jmp L_12285
.p2align 0x4
L_377988:
L_12286:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_377989:
L_12315:
	decl %ebx
	jo L_12293
L_12316:
	movslq %ebx,%r15
	cmpq %r14,%r15
	jnb L_12283
L_12318:
	movq 0x8(%rbp),%r13
	movb $0x7E,0x0(%r13,%r15,1)
	movl %ebx,%ecx
	jmp L_12299
.p2align 0x4
L_377996:
	xchgl %r15d,%ecx
	movl %eax,(localWord32+0x10)(%rip)
	movl %r15d,(localWord32+0x8)(%rip)
L_12281:
	movl %ebx,%eax
	movl %ebx,(localWord32+0xC)(%rip)
	cltd
	idivl %ecx
	movl %edx,%ebx
	jmp TildeQues_1
.p2align 0x4
L_377997:
	xchgl %r15d,%ecx
	movl %eax,(localWord32+0x10)(%rip)
	movl %r15d,(localWord32+0x8)(%rip)
	jmp L_12281
.p2align 0x4
L_377998:
L_12325:
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_377999
L_12326:
	movq $0x1,%r15
	jmp L_12285
.p2align 0x4
L_377999:
L_12327:
	movq $0x1,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378000:
L_12328:
	movl $0x20,%r15d
	xchgl %r15d,%ecx
	movl %eax,(localWord32+0x4)(%rip)
	movl %r15d,(localWord32+0x0)(%rip)
	jmp loop_196
.p2align 0x4
L_378001:
L_12331:
	movq %r13,0x8(%rbp)
	movl $0x2,%ecx
	jmp sextdFromInt32ToInt32_0
.p2align 0x4
L_378002:
L_12330:
	movq %r13,0x8(%rbp)
	movl $0x8,%ecx
	jmp sextdFromInt32ToInt32_0
.p2align 0x4
L_378003:
L_12329:
	movq %r13,0x8(%rbp)
	movl $0xA,%ecx
	jmp sextdFromInt32ToInt32_0
.p2align 0x4
L_378004:
L_12333:
	movq (globalObjptr+0x740)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378005:
L_12334:
	testl %r15d,%r15d
	jz L_12333
L_12335:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq $0x21,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_12336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12336
.p2align 0x4
.long 0x4A4
L_12336:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_198:
	cmpq $0x21,%r15
	jnl L_378006
L_12342:
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_198
.p2align 0x4
L_378006:
L_12337:
	movb 0x4(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_378009
	cmpb $0x2,%r15b
	je L_378008
	cmpb $0x3,%r15b
	je L_378007
L_12338:
	movq %r14,0x8(%rbp)
	movl $0x10,%ecx
	jmp sextdFromInt32ToInt32_0
.p2align 0x4
L_378007:
L_12341:
	movq %r14,0x8(%rbp)
	movl $0x2,%ecx
	jmp sextdFromInt32ToInt32_0
.p2align 0x4
L_378008:
L_12340:
	movq %r14,0x8(%rbp)
	movl $0x8,%ecx
	jmp sextdFromInt32ToInt32_0
.p2align 0x4
L_378009:
L_12339:
	movq %r14,0x8(%rbp)
	movl $0xA,%ecx
	jmp sextdFromInt32ToInt32_0
.text
.p2align 0x4
.globl x_1196
.hidden x_1196
x_1196:
L_12346:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_12347
L_12390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_12391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12391
.p2align 0x4
.long 0x4AE
L_12391:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_12347:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_12348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x4A5
L_12348:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	movq %r15,%r13
	shrq $0x1,%r13
	cmpq $0x1448,%r13
	jne L_378018
L_12350:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_12351:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_12352
L_12382:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE78,%r15
	jne L_12352
L_12383:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_12352
L_12385:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_378014
L_12387:
	testl %r11d,%r11d
	jnz L_378013
L_12389:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378013:
L_12352:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq (globalObjptr+0xDD18)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_12353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378014:
L_12386:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378018:
L_12349:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A6
L_12353:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xDD20)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_12354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A7
L_12354:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_12355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A8
L_12355:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_12356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x4A9
L_12356:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_12357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AA
L_12357:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12358
L_12380:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_12381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12381
.p2align 0x4
.long 0x4AD
L_12381:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_12358:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_12359:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_12360
L_12361:
	cmpq $0x1,%r14
	je L_378019
L_12362:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_12359
.p2align 0x4
L_378019:
L_12363:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12364
L_12378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_12379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12379
.p2align 0x4
.long 0x4AC
L_12379:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_12364:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_378024
L_12365:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_12366:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_12367:
	addl 0x0(%r14),%ecx
	movl %ecx,0x38(%rbp)
	jo L_378023
L_12368:
	cmpq $0x1,%r15
	je L_378020
L_12369:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_12367
.p2align 0x4
L_378020:
L_12370:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12371
L_12375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_12376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12376
.p2align 0x4
.long 0x4AB
L_12376:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_12371:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_378021
L_12372:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_12373:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDD30)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp msg_0
.p2align 0x4
L_378021:
L_12374:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_12373
.p2align 0x4
L_378023:
L_12360:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378024:
L_12377:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_12366
.text
.p2align 0x4
.globl root_0
.hidden root_0
root_0:
L_12392:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_12393
L_12402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_12403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12403
.p2align 0x4
.long 0x451
L_12403:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_12393:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1448,%r13
	je L_378029
L_12394:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1449,%r15
	jne L_378028
L_12396:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_12397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_378028:
L_12395:
	movq (globalObjptr+0x14F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378029:
L_12401:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_12397:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12398
L_12399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_12400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12400
.p2align 0x4
.long 0x45F
L_12400:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_12398:
	movq $0x2893,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl str_3
.hidden str_3
str_3:
L_12404:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_12422
L_12405:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378038
L_12406:
	movq 0x0(%rbp),%r14
	cmpq (globalObjptr+0xA058)(%rip),%r14
	je L_12420
L_12407:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x8(%rbp)
	testq %r13,%r13
	jnz L_12409
L_12412:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_92:
	cmpq 0x8(%rbp),%r15
	je L_378035
L_12413:
	movq (globalObjptr+0xA058)(%rip),%r14
	movq 0x0(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_378032
L_12418:
	incq %r15
	jmp vectorEqualLoop_92
.p2align 0x4
L_378032:
L_12414:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12409
L_12416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_12417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12417
.p2align 0x4
.long 0x457
L_12417:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_12409:
	movq 0x8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_378033
L_12411:
	movq $0x1B6B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378033:
L_12410:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378035:
L_12420:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378038:
L_12422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_12423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12423
.p2align 0x4
.long 0x451
L_12423:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_12406
.text
.p2align 0x4
.globl layoutPretty_0
.hidden layoutPretty_0
layoutPretty_0:
L_12424:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_12441
L_12425:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378040
L_12426:
	movq 0x8(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x61,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x10(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r8)
	movq $0x71,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x18(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%rsp)
	movl $0x0,0x4(%rsp)
	movq $0x3CD1,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r15,0x10(%rsi)
	movq %r14,0x18(%rsi)
	addq $0x30,%r12
	movq %rsp,0x0(%rsi)
	movq %r8,0x8(%rsi)
	movq %rsp,0x20(%rsi)
	movq $0xAF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	movq %rsi,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r11,0x20(%r15)
	movq %r13,0x28(%r15)
	addq $0x38,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_12427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_0
.p2align 0x4
L_378040:
L_12441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_12442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12442
.p2align 0x4
.long 0x45F
L_12442:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_12426
.p2align 0x4
.long 0x490
L_12427:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12428
L_12439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_12440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12440
.p2align 0x4
.long 0x4B1
L_12440:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_12428:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_378042
L_12429:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
L_12430:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x3DBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_12431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_378042:
L_12435:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A7
L_12431:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12432
L_12436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_12437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12437
.p2align 0x4
.long 0x4B0
L_12437:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_12432:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_12435
L_12433:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_12430
.text
.p2align 0x4
.globl lay_0
.hidden lay_0
lay_0:
L_12443:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_12494
L_12444:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378046
L_12445:
	movq 0x8(%rbp),%r15
	movq 0x28(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4123,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	addq $0x18,%r12
	movq $0x9,0x0(%rsp)
	movq %r15,0x8(%rsp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x607,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %rsp,0x0(%rsi)
	addq $0x18,%r12
	movq %r15,0x8(%rsi)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%rsp)
	movl $0x0,0x4(%rsp)
	movq $0xC63,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movl %r13d,0x0(%rdi)
	movq %r8,0x10(%rdi)
	movq %r9,0x18(%rdi)
	movq %r10,0x20(%rdi)
	movq %r11,0x28(%rdi)
	movq %r14,0x30(%rdi)
	movq %rsi,0x38(%rdi)
	addq $0x58,%r12
	movl $0x0,0x4(%rdi)
	movq %rsp,0x8(%rdi)
	movq %r15,0x40(%rdi)
	movq %rsp,0x48(%rdi)
	movq %rdi,0x50(%rbp)
	leaq L_12470(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_12446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_11
.p2align 0x4
L_378046:
L_12494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_12495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12495
.p2align 0x4
.long 0x45C
L_12495:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_12445
.p2align 0x4
.long 0x4B2
L_12446:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12447
L_12468:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_12469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12469
.p2align 0x4
.long 0x4B7
L_12469:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_12447:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_378048
L_12448:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
L_12449:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_12450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_378048:
L_12454:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_378049
L_12455:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
L_12456:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x3DBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_12457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_378049:
L_12461:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_12470:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12471
L_12492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_12493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12493
.p2align 0x4
.long 0x4B7
L_12493:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_12471:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_378051
L_12472:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
L_12473:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_12474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_378051:
L_12478:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_378052
L_12479:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
L_12480:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x3DBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_12481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_378052:
L_12485:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B3
L_12450:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12451
L_12465:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_12466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12466
.p2align 0x4
.long 0x4B6
L_12466:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_12451:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_12454
L_12452:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_12449
.p2align 0x4
.long 0x4B4
L_12457:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12458
L_12462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_12463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12463
.p2align 0x4
.long 0x4B5
L_12463:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_12458:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_12461
L_12459:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_12456
.p2align 0x4
.long 0x4B3
L_12474:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12475
L_12489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_12490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12490
.p2align 0x4
.long 0x4B6
L_12490:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_12475:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_12478
L_12476:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_12473
.p2align 0x4
.long 0x4B4
L_12481:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12482
L_12486:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_12487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12487
.p2align 0x4
.long 0x4B5
L_12487:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_12482:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_12485
L_12483:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_12480
.text
.p2align 0x4
.globl get_11
.hidden get_11
get_11:
L_12496:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_12497
L_12759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_12760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12760
.p2align 0x4
.long 0x45F
L_12760:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_12497:
	movq 0x8(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x30(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_12498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x4B8
L_12498:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r13
	movq 0x0(%r13),%r15
	movq %r13,0x60(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1448,%r14
	jne L_378073
L_12500:
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x60(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_378072
L_12502:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_378071
L_12503:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_12505:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_12506
L_12751:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCA5,%r13
	jne L_12506
L_12752:
	movq 0x8(%r14),%r13
	movq 0x10(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_378066
L_12506:
	incl %ecx
	jo L_378065
L_12508:
	cmpq $0x1,%r15
	je L_378063
L_12509:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_12505
.p2align 0x4
L_378063:
L_12510:
L_12511:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_378064
L_12513:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_21
L_12750:
	movl %ecx,0x0(%r15)
x_21:
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_378064:
L_12512:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378065:
L_12507:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378066:
L_12754:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_12512
L_12755:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_378067
L_12757:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378067:
L_12756:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378071:
L_12758:
	xorl %ecx,%ecx
	jmp L_12511
.p2align 0x4
L_378072:
L_12501:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378073:
L_12499:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B9
L_12515:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12516
L_12748:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12749
.p2align 0x4
.long 0x4DB
L_12749:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12516:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_12499
L_12517:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_12
.p2align 0x4
.long 0x4BA
L_12518:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	movb 0x0(%r15),%r14b
	cmpb $0x1,%r14b
	je L_378077
	cmpb $0x2,%r14b
	je L_378076
L_12519:
	movb $0x2,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_378076:
L_12744:
	movq (globalObjptr+0xDD58)(%rip),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (simple_6+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378077:
L_12743:
	movq (globalObjptr+0x1AE0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4BB
L_12520:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12521
L_12741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12742
.p2align 0x4
.long 0x4D8
L_12742:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12521:
	movq 0x18(%rbp),%r11
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1448,%r14
	jne L_12499
L_12522:
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_378128
L_12523:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE77,%r15
	je L_378127
	cmpq $0xE78,%r15
	je L_378116
	cmpq $0xE79,%r15
	je L_378114
	cmpq $0xE7A,%r15
	je L_378112
	cmpq $0xE7B,%r15
	je L_378096
L_12524:
	movq 0x0(%r14),%r15
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je L_378095
L_12525:
	movq 0x20(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq 0x8(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_12501
L_12526:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_378093
L_12527:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x48(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_12529:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_378092
L_12565:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCA5,%r11
	jne L_378091
L_12566:
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_378087
L_12530:
	movl 0x48(%rbp),%r11d
	incl %r11d
	movl %r11d,0x4C(%rbp)
	jo L_12507
L_12531:
	cmpq $0x1,%r15
	je L_378078
L_12532:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x48(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_12529
.p2align 0x4
L_378078:
L_12533:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12534
L_12563:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12564
.p2align 0x4
.long 0x4C0
L_12564:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12534:
	movl 0x4C(%rbp),%ecx
L_12535:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_12512
L_12536:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_12538
L_12562:
	movl %ecx,0x0(%r15)
L_12538:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movl 0x4(%r15),%r14d
	testl %r14d,%r14d
	jnz L_378082
L_12539:
	movq (globalObjptr+0xD338)(%rip),%r15
	movq %r15,0x30(%rbp)
L_12540:
	movl 0x48(%rbp),%r15d
	cmpl $0x7A,%r15d
	jg L_378080
L_12541:
	cmpl $0xFF,%r15d
	ja L_378079
L_12542:
	movb %r15b,%r14b
	movzbq %r14b,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x70(%rbp)
	movl $0x1,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_378079:
L_12554:
	movq $0x7,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378080:
L_12555:
	subl $0x7A,%r15d
	jo L_12507
L_12556:
	movl %r15d,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_378082:
L_12561:
	movq (globalObjptr+0xDD40)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_12540
.p2align 0x4
L_378087:
L_12568:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12569
L_12573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12574
.p2align 0x4
.long 0x4C1
L_12574:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12569:
	movl 0x48(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_12512
L_12570:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_378088
L_12571:
	movq 0x50(%rbp),%r15
L_12548:
	movq 0x10(%rbp),%r14
	movb $0x1,0x0(%r14)
L_12549:
	movq $0x194B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378088:
L_12572:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x48(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x50(%rbp),%r15
	jmp L_12548
.p2align 0x4
L_378091:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_12530
.p2align 0x4
L_378092:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_12530
.p2align 0x4
L_378093:
L_12575:
	xorl %ecx,%ecx
	jmp L_12535
.p2align 0x4
L_378095:
L_12576:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x70(%rbp)
	addq $0x70,%rbp
	leaq (simple_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378096:
L_12698:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movl 0x30(%rbp),%r14d
	testl %r14d,%r14d
	jz no_0
L_12703:
	movq 0x10(%r13),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_12501
L_12704:
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_378110
L_12705:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x38(%rbp)
	movl $0x0,0x40(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_12707:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_12708
L_12729:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCD0,%r13
	je L_378105
L_12708:
	movl 0x40(%rbp),%r14d
	incl %r14d
	movl %r14d,0x38(%rbp)
	jo L_12507
L_12709:
	cmpq $0x1,%r15
	je L_378097
L_12710:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r14d,0x40(%rbp)
	movq %r13,0x38(%rbp)
	jmp L_12707
.p2align 0x4
L_378097:
L_12711:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12712
L_12727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12728
.p2align 0x4
.long 0x4D4
L_12728:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12712:
	movl 0x38(%rbp),%ecx
L_12713:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_12512
L_12714:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_12716
L_12726:
	movl %ecx,0x0(%r15)
L_12716:
	movq $0x13F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_12717:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je no_3
L_12718:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1051,%r15
	je L_378099
	cmpq $0x1052,%r15
	je L_378098
L_12719:
	movq %r13,0x80(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
L_378098:
L_12724:
	movq %r13,0x80(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
L_378099:
L_12722:
	movq %r11,0x80(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x78(%rbp)
	movq $0x3EE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
no_3:
no_0:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_378100
L_12701:
	movl %r13d,0x78(%rbp)
	movq $0x3757,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_378100:
L_12587:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378105:
L_12730:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12731
L_12735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12736
.p2align 0x4
.long 0x4D5
L_12736:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12731:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	movl 0x40(%rbp),%r14d
	movslq %r14d,%r13
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r13
	jo L_12512
L_12732:
	movq %r13,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jnl L_12717
L_12734:
	movl %r14d,0x0(%r13)
	jmp L_12717
.p2align 0x4
L_378110:
L_12737:
	xorl %ecx,%ecx
	jmp L_12713
.p2align 0x4
L_378112:
L_12646:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_378113
L_12647:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x28(%rbp)
	movq %r13,%r15
L_12648:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_11
.p2align 0x4
L_378113:
L_12697:
	movq $0x1,0x20(%rbp)
L_12653:
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_378114:
L_12614:
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x20(%rbp)
	cmpq $0x1,%r13
	je L_378115
L_12615:
	movq 0x8(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x30(%rbp)
	movq %r13,%r15
L_12616:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_11
.p2align 0x4
L_378115:
L_12645:
	movq $0x1,0x28(%rbp)
L_12621:
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extra_0
.p2align 0x4
L_378116:
L_12584:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_378118
L_12610:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_12587
L_12612:
	movl %r13d,0x78(%rbp)
	movq $0x3759,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_378118:
L_12585:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x18(%rbp)
	jne L_12587
L_12588:
	testq %rdx,%rdx
	jz L_378125
L_12589:
	cmpq $0x7FFFFFFF,%rdx
	ja L_378124
L_12590:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14FF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12591
.p2align 0x4
.long 0x4C4
L_12591:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x28(%rbp)
L_12592:
	movq $0x0,0x30(%rbp)
loop_199:
	movq 0x20(%rbp),%r15
	cmpq %r15,0x30(%rbp)
	jl L_378123
L_12593:
	movq 0x28(%rbp),%r15
	movq $0x16E9,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_12587
L_12595:
	decl %r13d
	jo L_12507
L_12596:
	movl %r13d,0x20(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
loop_200:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378120
.p2align 0x4,,0x7
L_12597:
	movl 0x20(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_378119
L_12598:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movq %r13,%r15
	movl %r14d,0x20(%rbp)
	salq $0x4,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r11
	salq $0x4,%r13
	movq 0x8(%r14,%r13,1),%r15
	movq $0x1033,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2843,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	jmp loop_200
.p2align 0x4
L_378119:
L_12599:
	movl $0x0,0x70(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_12600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutRecord_0
.p2align 0x4
L_378120:
L_12604:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12605
.p2align 0x4
.long 0x4C5
L_12605:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_12597
.p2align 0x4
L_378123:
L_12606:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_11
.p2align 0x4
L_378124:
L_12608:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378125:
L_12609:
	movq (globalObjptr+0x1AD8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_12592
.p2align 0x4
L_378127:
L_12580:
	movq (globalObjptr+0xDD48)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (simple_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378128:
L_12738:
	shrq $0x1,%r14
	movb %r14b,%r15b
	movb %r15b,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultTycon_0
.p2align 0x4
.long 0x4D9
simple_6:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12745
L_12746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_12747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12747
.p2align 0x4
.long 0x4DA
L_12747:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_12745:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_12549
.p2align 0x4
.long 0x4BC
L_12543:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12544
L_12552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12553
.p2align 0x4
.long 0x4BF
L_12553:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12544:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4BC
L_12557:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12558
L_12559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12560
.p2align 0x4
.long 0x4BF
L_12560:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12558:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD38)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4C2
simple_2:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12577
L_12578:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12579
.p2align 0x4
.long 0x4C3
L_12579:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12577:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_12548
.p2align 0x4
.long 0x4D3
L_12720:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
L_12721:
	movq %r15,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_11
.p2align 0x4
.long 0x4D3
L_12723:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_12721
.p2align 0x4
.long 0x4D2
L_12702:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_12600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x4CF
L_12649:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12650
L_12695:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12696
.p2align 0x4
.long 0x4D1
L_12696:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12650:
	movq $0x1031,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2845,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_378135
L_12651:
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_12648
.p2align 0x4
L_378135:
L_12652:
	movq %r14,0x20(%rbp)
	jmp L_12653
.p2align 0x4
.long 0x4D0
L_12654:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_12499
L_12655:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_378148
L_12656:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_12657:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_12665
L_12658:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_12659:
	movq 0x8(%r15),%r13
	movq 0x30(%rbp),%r15
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_378144
L_12660:
L_12661:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_12662
L_12683:
	movq 0x8(%r15),%r11
	cmpq %r11,0x8(%r13)
	je L_378138
L_12662:
	cmpq $0x1,%r14
	je L_378137
L_12663:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_12659
.p2align 0x4
L_378137:
L_12665:
	movq (globalObjptr+0xDD50)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (simple_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378138:
L_12686:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_378139
L_12687:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_12657
.p2align 0x4
L_378139:
L_12688:
	movq 0x40(%rbp),%r14
	xchgq %r14,%r15
L_12669:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_378142
L_12670:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_12671:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378141
.p2align 0x4,,0x7
L_12672:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x1033,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2843,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_378140
L_12673:
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_12671
.p2align 0x4
L_378140:
L_12674:
	movq %r14,0x20(%rbp)
L_12675:
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_378141:
L_12678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12679
.p2align 0x4
.long 0x4CC
L_12679:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_12672
.p2align 0x4
L_378142:
L_12680:
	movq %r15,0x20(%rbp)
	jmp L_12675
.p2align 0x4
L_378144:
L_12689:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_12662
L_12690:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r11d,%r15d
	je L_12686
	jmp L_12662
.p2align 0x4
L_378148:
L_12694:
	movq $0x1,%r15
	jmp L_12669
.p2align 0x4
.long 0x4C8
L_12617:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12618
L_12643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12644
.p2align 0x4
.long 0x4CE
L_12644:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12618:
	movq $0x1031,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2845,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_378150
L_12619:
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	jmp L_12616
.p2align 0x4
L_378150:
L_12620:
	movq %r14,0x28(%rbp)
	jmp L_12621
.p2align 0x4
.long 0x4C9
L_12622:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x1,%r14
	je L_378152
L_12623:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
L_12624:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	addq $0x70,%rbp
	leaq (simple_4+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378152:
L_12642:
	movq $0x1,%r15
L_12628:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_378155
L_12629:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x28(%rbp)
.p2align 0x4,,0x7
L_12630:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378154
.p2align 0x4,,0x7
L_12631:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x1033,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2843,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_378153
L_12632:
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_12630
.p2align 0x4
L_378153:
L_12633:
	movq %r14,0x20(%rbp)
L_12634:
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_12635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_378154:
L_12637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12638
.p2align 0x4
.long 0x4CC
L_12638:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_12631
.p2align 0x4
L_378155:
L_12639:
	movq %r15,0x20(%rbp)
	jmp L_12634
.p2align 0x4
.long 0x4C7
L_12613:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_12600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x4C2
L_12600:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12601
L_12602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12603
.p2align 0x4
.long 0x4C3
L_12603:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12601:
	movq 0x18(%rbp),%r15
	jmp L_12548
.p2align 0x4
.long 0x4C6
L_12607:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x4,%r15
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r14,%r15,1)
	incq %r13
	movq %r13,0x30(%rbp)
	jmp loop_199
.p2align 0x4
.long 0x4C2
simple_3:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12581
L_12582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12583
.p2align 0x4
.long 0x4C3
L_12583:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12581:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_12548
.p2align 0x4
.long 0x4D6
L_12739:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_12740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
.long 0x4BD
L_12545:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (simple_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4CA
simple_5:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12666
L_12681:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12682
.p2align 0x4
.long 0x4CD
L_12682:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12666:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1033,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x2843,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_12669
L_12667:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_12657
.p2align 0x4
.long 0x4CB
L_12676:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_12499
L_12677:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_12600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutRecord_0
.p2align 0x4
.long 0x4CA
simple_4:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12625
L_12640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12641
.p2align 0x4
.long 0x4CD
L_12641:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12625:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1033,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x2843,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_12628
L_12626:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_12624
.p2align 0x4
.long 0x4CB
L_12635:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_12499
L_12636:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_12600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutRecord_0
.p2align 0x4
.long 0x4D7
L_12740:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_12600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x4BD
simple_1:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12546
L_12550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_12551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12551
.p2align 0x4
.long 0x4BE
L_12551:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_12546:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x48(%rbp),%r14d
	incl %r14d
	jo L_12507
L_12547:
	movq 0x28(%rbp),%r13
	movl %r14d,0x0(%r13)
	movq $0x194B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	jmp L_12548
.text
.p2align 0x4
.globl get_12
.hidden get_12
get_12:
L_12761:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_12762
L_12852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_12853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12853
.p2align 0x4
.long 0x45F
L_12853:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_12762:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_12763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x4DC
L_12763:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12764
L_12850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_12851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12851
.p2align 0x4
.long 0x4AE
L_12851:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_12764:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1448,%r14
	jne L_378207
L_12766:
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_378206
L_12768:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_378205
L_12769:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_12771:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_12772
L_12842:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCBC,%r13
	jne L_12772
L_12843:
	movq 0x8(%r14),%r13
	movq 0x10(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_378200
L_12772:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_378199
L_12774:
	cmpq $0x1,%r15
	je L_378167
L_12775:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_12771
.p2align 0x4
L_378167:
L_12776:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12777
L_12840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_12841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12841
.p2align 0x4
.long 0x4DF
L_12841:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_12777:
	movl 0x20(%rbp),%ecx
L_12778:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_378197
L_12780:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_378182
L_12826:
	movl %ecx,0x0(%r15)
	movq 0x18(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_378168
	leaq jumpTable_15(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_15:
.quad L_378181,L_378180,L_378179,L_12827,L_378177,L_378176,L_378175,L_12827,L_378174,L_378173,L_378172,L_12827,L_378171,L_378170,L_378169
.text
.p2align 0x4
L_378168:
L_12827:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
loop_201:
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_12783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_378169:
L_12825:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
L_12788:
	movq $0x1979,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378170:
L_12823:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378171:
L_12821:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378172:
L_12819:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378173:
L_12817:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378174:
L_12815:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378175:
L_12813:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378176:
L_12811:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378177:
L_12809:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378179:
L_12807:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378180:
L_12805:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378181:
L_12803:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378182:
L_12781:
	movq 0x18(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_378183
	leaq jumpTable_16(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_16:
.quad L_12803,L_12805,L_12807,L_12782,L_12809,L_12811,L_12813,L_12782,L_12815,L_12817,L_12819,L_12782,L_12821,L_12823,L_12825
.text
.p2align 0x4
L_378183:
L_12782:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp loop_201
.p2align 0x4
L_378197:
L_12779:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378199:
L_12773:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378200:
L_12845:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_12779
L_12846:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_378201
L_12848:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378201:
L_12847:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378205:
L_12849:
	xorl %ecx,%ecx
	jmp L_12778
.p2align 0x4
L_378206:
L_12767:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378207:
L_12765:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4DD
L_12783:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12784
L_12800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_12801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12801
.p2align 0x4
.long 0x4DE
L_12801:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_12784:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_12765
L_12785:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x20(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_378209
	leaq jumpTable_17(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_17:
.quad L_378222,L_378221,L_378220,L_12786,L_378218,L_378217,L_378216,L_12786,L_378215,L_378214,L_378213,L_12786,L_378212,L_378211,L_378210
.text
.p2align 0x4
L_378209:
L_12786:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	jmp loop_201
.p2align 0x4
L_378210:
L_12799:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378211:
L_12798:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378212:
L_12797:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378213:
L_12796:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378214:
L_12795:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378215:
L_12794:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378216:
L_12793:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378217:
L_12792:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378218:
L_12791:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378220:
L_12790:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378221:
L_12789:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.p2align 0x4
L_378222:
L_12787:
	movq $0x140B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	jmp L_12788
.text
.p2align 0x4
.globl layoutRecord_0
.hidden layoutRecord_0
layoutRecord_0:
L_12854:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_12855
L_13000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_13001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13001
.p2align 0x4
.long 0x4E8
L_13001:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_12855:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	cmpq $0x1,0x8(%rbp)
	je L_378225
L_12856:
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_12857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378225:
L_12994:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_378226
L_12995:
	movq (globalObjptr+0xDD70)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (simple_8+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378226:
L_12999:
	movq (globalObjptr+0xDD78)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (simple_8+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E0
L_12857:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
L_12858:
	movq 0x8(%rbp),%r15
	andq $0x3,%r15
	jz L_378228
L_12859:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_378228:
L_12860:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_12861:
	incl %ecx
	jo L_12862
L_12863:
	cmpq $0x1,%r15
	je L_378229
L_12864:
	movq 0x8(%r15),%r15
	jmp L_12861
.p2align 0x4
L_378229:
L_12865:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_378251
L_12866:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAA3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_12867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12867
.p2align 0x4
.long 0x4E1
L_12867:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
	movq 0x8(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_202:
	cmpq 0x20(%rbp),%r15
	jnl L_378231
L_12990:
	cmpq $0x1,%r14
	je L_378230
L_12991:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x28(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_202
.p2align 0x4
L_378230:
L_12992:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378231:
L_12868:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12869
L_12988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_12989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12989
.p2align 0x4
.long 0x4F2
L_12989:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_12869:
	movq 0x20(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x4(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	je L_378232
L_12870:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378232:
L_12871:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jz L_378243
L_12872:
	movq $0x1717,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	cmpq $0x0,0x20(%rbp)
	jna L_12874
L_12875:
	movq 0x0(%r13),%r14
	cmpl $0x0,%r15d
	jl L_378241
L_12876:
	movq %r14,0x30(%rbp)
	movl $0x0,0x38(%rbp)
	movl $0x0,0x3C(%rbp)
.p2align 0x4,,0x7
loop_203:
	movl 0x3C(%rbp),%ecx
	cmpl 0x4(%rbp),%ecx
	jnl L_378237
L_12972:
	movslq %ecx,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r13),%r14
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_378234
L_12973:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_378233
L_12980:
	movq %r13,%r15
.p2align 0x4,,0x7
L_12978:
	movq %r15,0x30(%rbp)
	movl %ecx,0x38(%rbp)
	incl 0x3C(%rbp)
	jmp loop_203
.p2align 0x4
L_378233:
L_12974:
	movq %r10,0x50(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_12975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378234:
L_12981:
	shrq $0x1,%r14
	movl %r14d,%r11d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_378236
L_12983:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r11d,%r14d
	jl L_378235
L_12984:
	movq 0x30(%rbp),%r15
	movl 0x38(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_12978
.p2align 0x4
L_378235:
.p2align 0x4,,0x7
L_12977:
	movq 0x40(%rbp),%r15
	movl 0x3C(%rbp),%ecx
	jmp L_12978
.p2align 0x4
L_378236:
L_12982:
	movq 0x30(%rbp),%r15
	movl 0x38(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_12978
.p2align 0x4
L_378237:
L_12877:
	movl 0x4(%rbp),%r15d
	decl %r15d
	movslq 0x38(%rbp),%r14
	movq 0x20(%rbp),%r13
	cmpq %r13,%r14
	jnb L_12874
L_12879:
	movq 0x28(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_378239
L_12881:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_378238
L_12882:
	movl %r15d,0x38(%rbp)
	movl $0x0,0x3C(%rbp)
	movq %r11,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_12883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_0
.p2align 0x4
L_378238:
L_12862:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378239:
L_12874:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378241:
L_12986:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378243:
L_12886:
	movl 0x4(%rbp),%r15d
	decl %r15d
	jo L_12862
L_12887:
	movl %r15d,0x4(%rbp)
	movq $0x1,0x8(%rbp)
.p2align 0x4,,0x7
loop_204:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378248
.p2align 0x4,,0x7
L_12888:
	movl 0x4(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_378244
L_12889:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x4(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x2843,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	jmp loop_204
.p2align 0x4
L_378244:
L_12890:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_378247
L_12891:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x20(%rbp)
	movq %r13,%r15
L_12892:
	movl 0x0(%r15),%r14d
	movl %r14d,0x4(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_378245
L_12893:
	movq 0x10(%r14),%r15
L_12894:
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_12895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378245:
L_12964:
	shrq $0x1,%r14
	movl %r14d,%r15d
	incl %r15d
	jo L_12862
L_12965:
	movl %r15d,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_12966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_378247:
L_12967:
	movq $0x1,%r13
	movq %r13,%r15
L_12914:
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_12915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp separateRight_0
.p2align 0x4
L_378248:
L_12968:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_12969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12969
.p2align 0x4
.long 0x4F1
L_12969:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_12888
.p2align 0x4
L_378251:
L_12993:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
simple_8:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12996
L_12997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_12998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12998
.p2align 0x4
.long 0x451
L_12998:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_12996:
	movq 0x0(%rbp),%r15
simple_7:
	movq $0x619,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F3
L_12975:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r14d
	movl %r14d,0x48(%rbp)
	testl %r14d,%r14d
	jz L_12977
L_12979:
	movq 0x30(%rbp),%r15
	movl 0x38(%rbp),%ecx
	jmp L_12978
.p2align 0x4
.long 0x4E2
L_12883:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12884
L_12970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_12971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12971
.p2align 0x4
.long 0x4F2
L_12971:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_12884:
	movq $0x3D19,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl $0x1,0x44(%rbp)
	addq $0x38,%rbp
	leaq (L_12885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x4E3
L_12895:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12896
L_12962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_12963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12963
.p2align 0x4
.long 0x4F0
L_12963:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_12896:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jz L_378256
L_12947:
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_12948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378256:
L_12898:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_12899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E3
L_12966:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_12894
.p2align 0x4
.long 0x2B
L_12915:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_12916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x4E2
L_12885:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_12886
.p2align 0x4
.long 0x4EC
L_12948:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_12949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E4
L_12899:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12900
L_12945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_12946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12946
.p2align 0x4
.long 0x4EB
L_12946:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_12900:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_12901:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_12862
L_12902:
	cmpq $0x1,%r14
	je L_378258
L_12903:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_12901
.p2align 0x4
L_378258:
L_12904:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12905
L_12943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_12944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12944
.p2align 0x4
.long 0x4EA
L_12944:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_12905:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_378262
L_12906:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_12907:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_378259
L_12908:
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movq %r14,%r15
	jmp L_12892
.p2align 0x4
L_378259:
L_12909:
	movq %r14,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_12910:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378261
.p2align 0x4,,0x7
L_12911:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_12914
L_12912:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_12910
.p2align 0x4
L_378261:
L_12940:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_12941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12941
.p2align 0x4
.long 0x4E9
L_12941:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_12911
.p2align 0x4
L_378262:
L_12942:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_12907
.p2align 0x4
.long 0x2B
L_12916:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12917
L_12938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_12939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12939
.p2align 0x4
.long 0x4E8
L_12939:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_12917:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_378268
L_12918:
	decl %ecx
	jo L_12862
L_12919:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
L_12920:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movl 0x0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_378266
L_12921:
	movq (globalObjptr+0xA2F0)(%rip),%r15
L_12922:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_12923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_378266:
L_12936:
	movq (globalObjptr+0xDD68)(%rip),%r15
	jmp L_12922
.p2align 0x4
L_378268:
L_12937:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_12920
.p2align 0x4
.long 0x4ED
L_12949:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12950
L_12960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_12961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12961
.p2align 0x4
.long 0x4EF
L_12961:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_12950:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_12951:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_12862
L_12952:
	cmpq $0x1,%r14
	je L_378270
L_12953:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_12951
.p2align 0x4
L_378270:
L_12954:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12955
L_12958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_12959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12959
.p2align 0x4
.long 0x4EE
L_12959:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_12955:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jz L_378271
L_12956:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x30(%rbp)
	jmp L_12898
.p2align 0x4
L_378271:
L_12957:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_12898
.p2align 0x4
.long 0x4E5
L_12923:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12924
L_12934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_12935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12935
.p2align 0x4
.long 0x4E7
L_12935:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_12924:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_12925:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_12862
L_12926:
	cmpq $0x1,%r14
	je L_378275
L_12927:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_12925
.p2align 0x4
L_378275:
L_12928:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_12929
L_12932:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_12933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_12933
.p2align 0x4
.long 0x4E6
L_12933:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_12929:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_378276
L_12930:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp simple_7
.p2align 0x4
L_378276:
L_12931:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp simple_7
.text
.p2align 0x4
.globl qsort_0
.hidden qsort_0
qsort_0:
L_13002:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_205
L_13069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_13070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13070
.p2align 0x4
.long 0x4E8
L_13070:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_205:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_13004
L_13005:
	cmpl $0x14,%r15d
	jng L_378281
L_13007:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_378280
L_13008:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_13009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_378280:
L_13004:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378281:
L_13006:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_13009:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_13010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E5
L_13010:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_13004
L_13011:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_13013
L_13014:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_13013
L_13016:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_13013
L_13018:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_13013
L_13020:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_13013
L_13022:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_13004
L_13023:
	movl %r15d,0x50(%rbp)
.p2align 0x4,,0x7
loop_207:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_13004
L_13024:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_13013
L_13026:
	movq 0x48(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq 0x10(%r11),%r10
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_378284
L_13027:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_378283
L_13063:
	jmp loop_207
.p2align 0x4
L_378283:
L_13028:
	movq %r10,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_13029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378284:
L_13064:
	movq 0x60(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_378300
L_13066:
	shrq $0x1,%r10
	movl %r10d,%r15d
	cmpl %r14d,%r15d
	jl loop_207
L_13067:
	movl 0x50(%rbp),%r15d
	xchgl %r15d,%ecx
.p2align 0x4,,0x7
loop_208:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_13004
L_13032:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_13013
L_13034:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_378286
L_13035:
	movq 0x60(%rbp),%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_378285
L_13057:
	jmp loop_208
.p2align 0x4
L_378285:
L_13036:
	movq %r11,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_13037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378286:
L_13058:
	shrq $0x1,%r11
	movl %r11d,%r15d
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_13040
L_13060:
	shrq $0x1,%r14
	movl %r14d,%r13d
	cmpl %r15d,%r13d
	jnl L_378287
L_13062:
	jmp loop_208
.p2align 0x4
L_378287:
.p2align 0x4,,0x7
L_13040:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_378292
L_13041:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_13013
L_13043:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_13013
L_13045:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_13013
L_13047:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_378288
L_13049:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_207
.p2align 0x4
L_378288:
L_13013:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378292:
L_13050:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_13013
L_13052:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_13013
L_13054:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_13004
L_13055:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_13056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_0
.p2align 0x4
L_378300:
L_13065:
	movl 0x50(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_208
.p2align 0x4
.long 0x4F5
L_13029:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_378310
L_13030:
	movl 0x54(%rbp),%ecx
	jmp loop_207
.p2align 0x4
L_378310:
L_13031:
	movl 0x50(%rbp),%ecx
	jmp loop_208
.p2align 0x4
.long 0x4F6
L_13037:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_13040
L_13038:
	movl 0x50(%rbp),%ecx
	jmp loop_208
.p2align 0x4
.long 0x4F7
L_13056:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_205
.text
.p2align 0x4
.globl x_1216
.hidden x_1216
x_1216:
L_13071:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_13072
L_13088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_13089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13089
.p2align 0x4
.long 0x45F
L_13089:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_13072:
	movq 0x8(%rbp),%r8
	movq 0x10(%r8),%r9
	movq 0x0(%rbp),%r8
	movq 0x10(%r8),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r11
	xorq %r14,%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_209:
	cmpq %r13,%r15
	jl L_378317
L_13073:
	movl $0x1,%ecx
L_13074:
	cmpq %r11,%r14
	jnl L_378315
L_13080:
	testl %ecx,%ecx
	jnz L_13079
L_13081:
	movb 0x0(%r9,%r15,1),%r8b
	movb 0x0(%r10,%r14,1),%spl
	cmpb %spl,%r8b
	jb L_378313
L_13082:
	cmpb %r8b,%spl
	jb L_378312
L_13083:
	incq %r15
	incq %r14
	jmp loop_209
.p2align 0x4
L_378312:
L_13077:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378313:
L_13079:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378315:
L_13075:
	testl %ecx,%ecx
	jnz L_13079
	jmp L_13077
.p2align 0x4
L_378317:
L_13087:
	xorl %ecx,%ecx
	jmp L_13074
.text
.p2align 0x4
.globl fold_0
.hidden fold_0
fold_0:
L_13090:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_210
L_14205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_14206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_14206
.p2align 0x4
.long 0x492
L_14206:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
.p2align 0x4,,0x7
loop_210:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378741
.p2align 0x4,,0x7
L_13092:
	movl 0xC(%rbp),%r15d
	cmpl 0x8(%rbp),%r15d
	jnl L_378740
L_13094:
	incl %r15d
	movl %r15d,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1E6A,%rax
	cmpq $0x32,%rax
	ja L_378319
	leaq jumpTable_18(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_18:
.quad L_378735,L_378732,L_378723,L_378713,L_378708,L_378703,L_378698,L_378690,L_378682,L_378674,L_378669,L_378664,L_378654,L_378644,L_378637,L_378627,L_378621,L_378610,L_378605,L_378603,L_378598,L_378590,L_378581,L_378566,L_378547,L_378531,L_378511,L_378496,L_378487,L_378479,L_378456,L_378451,L_378442,L_378439,L_378429,L_378426,L_378416,L_378406,L_378396,L_378391,L_378386,L_378378,L_378370,L_378362,L_378357,L_378352,L_378347,L_378338,L_378331,L_378326,L_378321
.text
.p2align 0x4
L_378319:
L_13095:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x126F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movslq 0xC(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	jnb L_378320
L_13098:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r14,%r13,8)
.p2align 0x4,,0x7
L_13099:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378320:
L_13097:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378321:
L_14184:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_14186:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_250:
	cmpl $0x0,0xC(%rbp)
	jg L_378323
.p2align 0x4,,0x7
L_14188:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14190:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378323:
L_14191:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_14193:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_14194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
L_378326:
L_14169:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_14171:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_249:
	cmpl $0x0,0xC(%rbp)
	jg L_378328
.p2align 0x4,,0x7
L_14173:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14175:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378328:
L_14176:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_14178:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_14179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp LtEq_0
.p2align 0x4
L_378331:
L_14155:
	movq 0x0(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl 0xC(%rbp),%ecx
	movslq %ecx,%r15
	cmpq %r13,%r15
	jnb L_13097
L_14157:
	movq 0x0(%r14,%r15,8),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
loop_248:
	cmpl $0x0,%ecx
	jng L_14159
L_14162:
	movl %ecx,%r10d
	decl %r10d
	movslq %r10d,%r9
	cmpq %r13,%r9
	jnb L_13097
L_14164:
	movq 0x0(%r14,%r9,8),%r8
	movl 0x0(%r8),%r9d
	cmpl %r9d,0x0(%r15)
	jnl L_378333
L_14166:
	movslq %ecx,%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r9
	jnb L_13097
L_14168:
	movq %r11,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	movq %r8,0x0(%r11,%r9,8)
	movl %r10d,%ecx
	jmp loop_248
.p2align 0x4
L_378333:
L_14159:
	movslq %ecx,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jnb L_13097
L_14161:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,0x0(%r11,%r14,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378338:
L_14135:
	movq 0x0(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl 0xC(%rbp),%ecx
	movslq %ecx,%r15
	cmpq %r13,%r15
	jnb L_13097
L_14137:
	movq 0x0(%r14,%r15,8),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
loop_247:
	cmpl $0x0,%ecx
	jng L_14139
L_14142:
	movl %ecx,%ebx
	decl %ebx
	movslq %ebx,%r10
	cmpq %r13,%r10
	jnb L_13097
L_14144:
	movq 0x0(%r14,%r10,8),%r8
	movq 0x8(%r8),%r10
	movq 0x8(%r15),%r9
	movq %r9,%rsp
	andq %r10,%rsp
	andq $0x1,%rsp
	jz L_378342
L_14145:
	cmpq %r10,%r9
	jnl L_378340
L_14148:
	movslq %ecx,%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	jnb L_13097
L_14150:
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r11,%r10,8)
	movl %ebx,%ecx
	jmp loop_247
.p2align 0x4
L_378340:
L_14139:
	movslq %ecx,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jnb L_13097
L_14141:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,0x0(%r11,%r14,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378342:
L_14151:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r9,%rsi
	movq %r10,%rdi
	xorq %rax,%rax
	xchgq %r11,%r14
	movq %r13,(localWord64+0x0)(%rip)
	movl %ecx,%r13d
	movl %ebx,(localWord32+0x4)(%rip)
	movq %r8,%rbx
	movq %r11,(localObjptr+0x0)(%rip)
	call IntInf_compare
L_14152:
	cmpl $0x0,%eax
	jng L_378343
	movq %r14,%r11
	movq %rbx,%r8
	movl %r13d,%ecx
	movq (localObjptr+0x0)(%rip),%r14
	movq (localWord64+0x0)(%rip),%r13
	movl (localWord32+0x4)(%rip),%ebx
	jmp L_14148
.p2align 0x4
L_378343:
	movq %r14,%r11
	movl %r13d,%ecx
	jmp L_14139
.p2align 0x4
L_378347:
L_14120:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_14122:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_246:
	cmpl $0x0,0xC(%rbp)
	jg L_378349
.p2align 0x4,,0x7
L_14124:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14126:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378349:
L_14127:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_14129:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_14130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378352:
L_14105:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_14107:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_245:
	cmpl $0x0,0xC(%rbp)
	jg L_378354
.p2align 0x4,,0x7
L_14109:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14111:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378354:
L_14112:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_14114:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_14115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378357:
L_14090:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_14092:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_244:
	cmpl $0x0,0xC(%rbp)
	jg L_378359
.p2align 0x4,,0x7
L_14094:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14096:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378359:
L_14097:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_14099:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_14100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378362:
L_14070:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_14072:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_243:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_14074
L_14077:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_14079:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r13),%r15d
	movq 0x40(%rbp),%r14
	movl 0x0(%r14),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movq 0x20(%r14),%r13
	movq 0x8(%r13),%r10
	movb 0x24(%rbp),%r14b
	testb %r14b,%r14b
	jz L_378366
L_14087:
	cmpl %r11d,%r15d
	jl L_378364
.p2align 0x4,,0x7
L_14074:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14076:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378364:
.p2align 0x4,,0x7
L_14083:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14085:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_243
.p2align 0x4
L_378366:
L_14080:
	movq %r10,0x60(%rbp)
	movq %r9,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_14081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378370:
L_14050:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_14052:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_242:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_14054
L_14057:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_14059:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r13),%r15d
	movq 0x40(%rbp),%r14
	movl 0x0(%r14),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movq 0x20(%r14),%r13
	movq 0x8(%r13),%r10
	movb 0x24(%rbp),%r14b
	testb %r14b,%r14b
	jz L_378374
L_14067:
	cmpl %r11d,%r15d
	jl L_378372
.p2align 0x4,,0x7
L_14054:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14056:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378372:
.p2align 0x4,,0x7
L_14063:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14065:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_242
.p2align 0x4
L_378374:
L_14060:
	movq %r10,0x60(%rbp)
	movq %r9,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_14061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378378:
L_14030:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_14032:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_241:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_14034
L_14037:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_14039:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r13),%r15d
	movq 0x40(%rbp),%r14
	movl 0x0(%r14),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movq 0x20(%r14),%r13
	movq 0x8(%r13),%r10
	movb 0x24(%rbp),%r14b
	testb %r14b,%r14b
	jz L_378382
L_14047:
	cmpl %r11d,%r15d
	jl L_378380
.p2align 0x4,,0x7
L_14034:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14036:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378380:
.p2align 0x4,,0x7
L_14043:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14045:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_241
.p2align 0x4
L_378382:
L_14040:
	movq %r10,0x60(%rbp)
	movq %r9,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_14041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378386:
L_14015:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_14017:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_240:
	cmpl $0x0,0xC(%rbp)
	jg L_378388
.p2align 0x4,,0x7
L_14019:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14021:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378388:
L_14022:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_14024:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_14025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378391:
L_14000:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_14002:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_239:
	cmpl $0x0,0xC(%rbp)
	jg L_378393
.p2align 0x4,,0x7
L_14004:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14006:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378393:
L_14007:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_14009:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_14010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378396:
L_13976:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13978:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_238:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13980
L_13983:
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13985:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378399
L_13986:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378398
.p2align 0x4,,0x7
L_13990:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13992:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_238
.p2align 0x4
L_378398:
L_13987:
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378399:
L_13995:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13980
L_13997:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13990
.p2align 0x4,,0x7
L_13980:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13982:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378406:
L_13952:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13954:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_237:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13956
L_13959:
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13961:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_378409
L_13962:
	movq 0x40(%rbp),%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_378408
.p2align 0x4,,0x7
L_13966:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13968:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_237
.p2align 0x4
L_378408:
L_13963:
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378409:
L_13971:
	movq 0x48(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq 0x40(%rbp),%r15
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_13956
L_13973:
	shrq $0x1,%r15
	movl %r15d,%r13d
	cmpl %r14d,%r13d
	jl L_13966
.p2align 0x4,,0x7
L_13956:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13958:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378416:
L_13928:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13930:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_236:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13932
L_13935:
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13937:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378419
L_13938:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378418
.p2align 0x4,,0x7
L_13942:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13944:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_236
.p2align 0x4
L_378418:
L_13939:
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378419:
L_13947:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13932
L_13949:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13942
.p2align 0x4,,0x7
L_13932:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13934:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378426:
L_13923:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movslq 0xC(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13925:
	movl 0x0(%r14,%r15,4),%r11d
	testl %r11d,%r11d
	jnz L_378427
L_13926:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378427:
L_13927:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378429:
L_13899:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13901:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_235:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13903
L_13906:
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13908:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378432
L_13909:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378431
.p2align 0x4,,0x7
L_13913:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13915:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_235
.p2align 0x4
L_378431:
L_13910:
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378432:
L_13918:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13903
L_13920:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13913
.p2align 0x4,,0x7
L_13903:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13905:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378439:
L_13894:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movl 0x0(%r15),%r10d
	movslq 0xC(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13896:
	movl 0x0(%r14,%r15,4),%r9d
	testl %r9d,%r9d
	jz L_378440
L_13898:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378440:
L_13897:
	movl %r10d,0x38(%rbp)
	movq $0x3CF7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movl 0xC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x3C(%rbp)
	addq $0x30,%rbp
	leaq (L_13121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_378442:
L_13874:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movslq 0x0(%r15),%r14
	movslq 0xC(%rbp),%r13
	movq 0x10(%r15),%r11
	movq 0x10(%r11),%r10
	movq 0x8(%r11),%r9
	cmpq 0x0(%r11),%r14
	jnb L_13097
L_13876:
	cmpq %r9,%r13
	jnb L_13097
L_13878:
	imulq %r9,%r14
	addq %r14,%r13
	movq 0x0(%r10,%r13,8),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xC(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_378448
L_13880:
	cmpl $0x0,%r13d
	jl L_378447
L_13881:
	movl $0x0,0x24(%rbp)
loop_234:
	movl 0xC(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_378443
L_13882:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378443:
L_13883:
	movslq 0x24(%rbp),%r15
	salq $0x4,%r15
	movq 0x30(%rbp),%r14
	movl 0x0(%r14,%r15,1),%r13d
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r11
	movl 0x0(%r15),%r10d
	movslq %r13d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13885:
	movl 0x0(%r14,%r15,4),%r9d
	testl %r9d,%r9d
	jz L_378445
.p2align 0x4,,0x7
L_13888:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378444
.p2align 0x4,,0x7
L_13889:
	incl 0x24(%rbp)
	jmp loop_234
.p2align 0x4
L_378444:
L_13890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_13891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13891
.p2align 0x4
.long 0x4FE
L_13891:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_13889
.p2align 0x4
L_378445:
L_13886:
	movl %r10d,0x48(%rbp)
	movl $0x1,0x0(%r14,%r15,4)
	movq $0x3D15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x4C(%rbp)
	addq $0x40,%rbp
	leaq (L_13887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_378447:
L_13464:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4F8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378448:
L_13436:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378451:
L_13865:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movslq 0xC(%rbp),%r11
	movslq 0x4(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x10(%r9),%r8
	movq 0x8(%r9),%rsp
	cmpq 0x0(%r9),%r11
	jnb L_13097
L_13867:
	cmpq %rsp,%r10
	jnb L_13097
L_13869:
	imulq %r11,%rsp
	addq %r10,%rsp
	movq %rsp,%rax
	movq 0x0(%r8,%rax,8),%r15
	movslq %r13d,%r10
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r9
	cmpq 0x0(%r14),%r11
	jnb L_13097
L_13871:
	cmpq %r9,%r10
	jnb L_13097
L_13873:
	imulq %r9,%r11
	addq %r11,%r10
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13,%r10,8)
	jmp L_13099
.p2align 0x4
L_378456:
L_13821:
	movq 0x0(%rbp),%r11
	movl 0x0(%r11),%ebx
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movslq 0xC(%rbp),%r15
	movslq 0x4(%r11),%r14
	movq 0x10(%r11),%r10
	movq 0x10(%r10),%r13
	movq 0x8(%r10),%r9
	cmpq 0x0(%r10),%r15
	jnb L_13097
L_13823:
	cmpq %r9,%r14
	jnb L_13097
L_13825:
	imulq %r9,%r15
	addq %r15,%r14
	movq 0x0(%r13,%r14,8),%r11
	movslq %ebx,%r14
	cmpq %r9,%r14
	jnb L_13097
L_13827:
	addq %r15,%r14
	movq 0x0(%r13,%r14,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_13436
L_13829:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r10
	movl %r10d,%ebx
	movslq %ebx,%r13
	cmpq %r10,%r13
	jne L_13436
L_13831:
	cmpl %ecx,%ebx
	jne L_13833
L_13837:
	xorl %ebx,%ebx
	movq %r11,%r13
.p2align 0x4,,0x7
loop_232:
	cmpl %ecx,%ebx
	movl %ecx,(localWord32+0x0)(%rip)
	je L_378472
L_13838:
	movslq %ebx,%r11
	movl %ebx,(localWord32+0x4)(%rip)
	cmpq %r14,%r11
	jnb L_13097
L_13840:
	movq %r11,%r10
	movq %r11,%r9
	movq %r11,%r8
	salq $0x4,%r10
	movq 0x8(%r13,%r10,1),%rsp
	salq $0x4,%r9
	salq $0x4,%r8
	movq 0x8(%r15,%r8,1),%r10
	salq $0x4,%r11
	movl 0x0(%r13,%r9,1),%r8d
	cmpl %r8d,0x0(%r15,%r11,1)
	jne L_13833
L_13842:
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r9
	movl %r9d,%ecx
	movslq %ecx,%r11
	cmpq %r9,%r11
	jne L_13436
L_13844:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r8
	movl %r8d,%ebx
	movslq %ebx,%r11
	cmpq %r8,%r11
	jne L_13436
L_13846:
	cmpl %ecx,%ebx
	jne L_13833
L_13848:
	xorl %ebx,%ebx
	movq %rsp,%r11
.p2align 0x4,,0x7
loop_233:
	cmpl %ebx,%ecx
	je L_378465
L_13849:
	movslq %ebx,%r8
	cmpq %r9,%r8
	jnb L_13097
L_13851:
	movq 0x0(%r11,%r8,8),%rsp
	movq 0x0(%r10,%r8,8),%rsi
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r8
	shrq $0x1,%r8
	cmpq $0xDC5,%r8
	je L_378461
L_13858:
	movq 0x0(%rsp),%r8
	movq 0xFFFFFFFFFFFFFFF8(%rsi),%rsp
	shrq $0x1,%rsp
	cmpq $0xDC6,%rsp
	jne L_13833
L_13859:
	cmpq 0x0(%rsi),%r8
	jne L_378458
	movq %r14,(localWord64+0x8)(%rip)
	movq %r13,(localObjptr+0x0)(%rip)
	movq %r15,(localObjptr+0x10)(%rip)
L_13856:
	incl %ebx
	jo L_378457
L_13857:
	movq (localObjptr+0x10)(%rip),%r15
	movq (localWord64+0x8)(%rip),%r14
	movq (localObjptr+0x0)(%rip),%r13
	jmp loop_233
.p2align 0x4
L_378457:
L_13126:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378458:
L_13833:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13834
L_13835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_13836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13836
.p2align 0x4
.long 0x504
L_13836:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_13834:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378461:
L_13852:
	movq 0x0(%rsp),%r8
	movq 0xFFFFFFFFFFFFFFF8(%rsi),%rsp
	shrq $0x1,%rsp
	cmpq $0xDC5,%rsp
	jne L_13833
L_13853:
	cmpq %r8,0x0(%rsi)
	jne L_13833
	movq %r15,(localObjptr+0x10)(%rip)
	movq %r13,(localObjptr+0x0)(%rip)
	movq %r14,(localWord64+0x8)(%rip)
	jmp L_13856
.p2align 0x4
L_378465:
L_13862:
	movl (localWord32+0x4)(%rip),%ebx
	incl %ebx
	jo L_13126
L_13863:
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_232
.p2align 0x4
L_378472:
L_13864:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378479:
L_13806:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movslq 0x4(%r15),%r10
	movslq 0xC(%rbp),%r9
	movq 0x18(%r15),%r8
	movq 0x10(%r8),%rsp
	movq 0x8(%r8),%rsi
	cmpq 0x0(%r8),%r10
	jnb L_13097
L_13808:
	cmpq %rsi,%r9
	jnb L_13097
L_13810:
	imulq %rsi,%r10
	addq %r9,%r10
	movq 0x0(%rsp,%r10,8),%r15
	cmpq $0x1,%r15
	je L_378484
L_13811:
	movslq %r14d,%r10
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r8
	cmpq 0x0(%r13),%r9
	jnb L_13097
L_13813:
	cmpq %r8,%r10
	jnb L_13097
L_13815:
	imulq %r9,%r8
	addq %r10,%r8
	movl 0x0(%r14,%r8,4),%r13d
	testl %r13d,%r13d
	jz L_378481
L_13817:
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r9
	jnb L_13097
L_13819:
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r15,0x0(%r11,%r9,8)
	jmp L_13099
.p2align 0x4
L_378481:
L_13816:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378484:
L_13820:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378487:
L_13779:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x24(%rbp)
	movl 0xC(%rbp),%r15d
	cmpl $0xFF,%r15d
	ja L_378495
L_13780:
	movb %r15b,%r13b
	movb %r13b,0x30(%rbp)
	movq %r14,%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_13788
	cmpq $0x2,%r15
	je L_378490
L_13781:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x24A9,%r15
	je L_378489
	cmpq $0x24AA,%r15
	je L_378488
L_13782:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb %r13b,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_13783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contains_0
.p2align 0x4
L_378488:
L_13799:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movb %r13b,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_13800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cp_0
.p2align 0x4
L_378489:
L_13793:
	movq 0x8(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movb %r13b,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_13794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cp_0
.p2align 0x4
L_378490:
L_13802:
	shrq $0x2,%r14
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	je L_378491
.p2align 0x4,,0x7
L_13786:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378491:
.p2align 0x4,,0x7
L_13788:
	movslq 0x24(%rbp),%r15
	movslq 0xC(%rbp),%r14
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	cmpq 0x0(%r13),%r15
	jnb L_13097
L_13790:
	cmpq %r10,%r14
	jnb L_13097
L_13792:
	imulq %r10,%r15
	addq %r14,%r15
	movl $0x1,0x0(%r11,%r15,4)
	jmp L_13099
.p2align 0x4
L_378495:
L_13805:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x7,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378496:
L_13745:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13747:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_231:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13749
L_13752:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13754:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movb 0x24(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_378503
L_13755:
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378499
L_13756:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378498
.p2align 0x4,,0x7
L_13760:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13762:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_231
.p2align 0x4
L_378498:
L_13757:
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378499:
L_13765:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13749
L_13767:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13760
.p2align 0x4,,0x7
L_13749:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13751:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378503:
L_13770:
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378505
L_13771:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_13760
L_13772:
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378505:
L_13774:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13749
L_13776:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13760
	jmp L_13749
.p2align 0x4
L_378511:
L_13702:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13704:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_230:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13706
L_13709:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13711:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movb 0x24(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_378523
	cmpb $0x2,%r15b
	je L_378518
L_13712:
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378514
L_13713:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378513
.p2align 0x4,,0x7
L_13717:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13719:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_230
.p2align 0x4
L_378513:
L_13714:
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378514:
L_13722:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13706
L_13724:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13717
.p2align 0x4,,0x7
L_13706:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13708:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378518:
L_13736:
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378520
L_13737:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_13717
L_13738:
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378520:
L_13740:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13706
L_13742:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13717
	jmp L_13706
.p2align 0x4
L_378523:
L_13727:
	movq 0x8(%r13),%r14
	movq 0x40(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_378525
L_13728:
	movq %r11,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_13717
L_13729:
	movq %r11,0x60(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378525:
L_13731:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_13706
L_13733:
	shrq $0x1,%r11
	movl %r11d,%r14d
	cmpl %r13d,%r14d
	jl L_13717
	jmp L_13706
.p2align 0x4
L_378531:
L_13671:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r15
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movslq 0xC(%rbp),%r10
	cmpq %r11,%r10
	jnb L_13097
L_13673:
	movq 0x0(%r15,%r10,8),%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r10
	jnb L_13097
L_13675:
	movslq 0x0(%r14,%r10,4),%r8
	cmpq %r11,%r8
	jnb L_13097
L_13677:
	movq 0x0(%r15,%r8,8),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r9),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_378543
L_13678:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_378542
L_13679:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_13681:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_378541
L_13694:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCC9,%r11
	jne L_378540
L_13695:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_378537
L_13682:
	incl %ecx
	movl %ecx,0xC(%rbp)
	jo L_13126
L_13683:
	cmpq $0x1,%r15
	je L_378532
L_13684:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_13681
.p2align 0x4
L_378532:
L_13685:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378535
.p2align 0x4,,0x7
L_13686:
	movl 0xC(%rbp),%ecx
L_13687:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_378534
L_13688:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_13690
L_13691:
	movl %ecx,0x0(%r15)
L_13690:
	movq $0x1993,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_13099
.p2align 0x4
L_378534:
L_13645:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1080)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378535:
L_13692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_13693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13693
.p2align 0x4
.long 0x480
L_13693:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_13686
.p2align 0x4
L_378537:
L_13697:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_13645
L_13698:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_378538
L_13700:
	movl %ecx,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378538:
L_13699:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (globalObjptr+0x578)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378540:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_13682
.p2align 0x4
L_378541:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_13682
.p2align 0x4
L_378542:
L_13701:
	xorl %ecx,%ecx
	jmp L_13687
.p2align 0x4
L_378543:
L_13634:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1088)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378547:
L_13628:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq 0xC(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13630:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_13653
L_13631:
	movq 0x8(%r10),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x40(%rbp)
L_13632:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378563
.p2align 0x4,,0x7
L_13633:
	movq 0x28(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x0(%r11),%r14
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_13634
L_13635:
	movq %r15,0x0(%r11)
	movq 0x0(%r9),%r11
	cmpq $0x1,%r11
	je L_378561
L_13636:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x24(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_13638:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_378560
L_13657:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCAE,%r11
	jne L_378559
L_13658:
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_378555
L_13639:
	movl 0x24(%rbp),%r11d
	incl %r11d
	movl %r11d,0x40(%rbp)
	jo L_13126
L_13640:
	cmpq $0x1,%r15
	je L_378548
L_13641:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x24(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_13638
.p2align 0x4
L_378548:
L_13642:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378553
.p2align 0x4,,0x7
L_13643:
	movl 0x40(%rbp),%ecx
L_13644:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_13645
L_13646:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_13648
L_13654:
	movl %ecx,0x0(%r15)
L_13648:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0xFFFFFFFE,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x195D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_22:
	movslq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_13097
L_13650:
	movq 0x0(%r15,%r14,8),%r13
	movq $0x1B59,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movl 0xC(%rbp),%r13d
	movl %r13d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_378549
L_13651:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_13632
.p2align 0x4
L_378549:
L_13653:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378553:
L_13655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_13656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13656
.p2align 0x4
.long 0x47E
L_13656:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_13643
.p2align 0x4
L_378555:
L_13660:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378558
.p2align 0x4,,0x7
L_13661:
	movl 0x24(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_13645
L_13662:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_378556
L_13663:
	movq 0x40(%rbp),%r15
	jmp x_22
.p2align 0x4
L_378556:
L_13664:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x24(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x40(%rbp),%r15
	jmp x_22
.p2align 0x4
L_378558:
L_13665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_13666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13666
.p2align 0x4
.long 0x47B
L_13666:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_13661
.p2align 0x4
L_378559:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_13639
.p2align 0x4
L_378560:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_13639
.p2align 0x4
L_378561:
L_13667:
	xorl %ecx,%ecx
	jmp L_13644
.p2align 0x4
L_378563:
L_13668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_13669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13669
.p2align 0x4
.long 0x47B
L_13669:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_13633
.p2align 0x4
L_378566:
L_13594:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13596:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_229:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13598
L_13601:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13603:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movb 0x24(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_378573
L_13604:
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378569
L_13605:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378568
.p2align 0x4,,0x7
L_13609:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13611:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_229
.p2align 0x4
L_378568:
L_13606:
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378569:
L_13614:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13598
L_13616:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13609
.p2align 0x4,,0x7
L_13598:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13600:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378573:
L_13619:
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378575
L_13620:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_13609
L_13621:
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378575:
L_13623:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13598
L_13625:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13609
	jmp L_13598
.p2align 0x4
L_378581:
L_13574:
	movq 0x0(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl 0xC(%rbp),%ecx
	movslq %ecx,%r15
	cmpq %r13,%r15
	jnb L_13097
L_13576:
	movq 0x0(%r14,%r15,8),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
loop_228:
	cmpl $0x0,%ecx
	jng L_13578
L_13581:
	movl %ecx,%ebx
	decl %ebx
	movslq %ebx,%r10
	cmpq %r13,%r10
	jnb L_13097
L_13583:
	movq 0x0(%r14,%r10,8),%r9
	movq %r9,%r10
	andq %r15,%r10
	andq $0x1,%r10
	jz L_378585
L_13584:
	cmpq %r9,%r15
	jnl L_378583
	movq %r9,%r10
L_13587:
	movslq %ecx,%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r9
	jnb L_13097
L_13589:
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r10,0x0(%r11,%r9,8)
	movl %ebx,%ecx
	jmp loop_228
.p2align 0x4
L_378583:
L_13578:
	movslq %ecx,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jnb L_13097
L_13580:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,0x0(%r11,%r14,8)
	jmp L_13099
.p2align 0x4
L_378585:
L_13590:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r9,%rdi
	xorq %rax,%rax
	movq %r14,(localObjptr+0x0)(%rip)
	movl %ecx,%r14d
	xchgq %r11,%r13
	movl %ebx,(localWord32+0x4)(%rip)
	movq %r9,%rbx
	movq %r11,(localWord64+0x0)(%rip)
	call IntInf_compare
L_13591:
	cmpl $0x0,%eax
	jng L_378586
	movq %r13,%r11
	movq %rbx,%r10
	movl %r14d,%ecx
	movq (localObjptr+0x0)(%rip),%r14
	movq (localWord64+0x0)(%rip),%r13
	movl (localWord32+0x4)(%rip),%ebx
	jmp L_13587
.p2align 0x4
L_378586:
	movq %r13,%r11
	movl %r14d,%ecx
	jmp L_13578
.p2align 0x4
L_378590:
L_13505:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13507:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_227:
	cmpl $0x0,0xC(%rbp)
	jg L_378592
.p2align 0x4,,0x7
L_13509:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13511:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378592:
L_13512:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13514:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movb 0x24(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_378595
	cmpb $0x2,%r15b
	je L_378594
	cmpb $0x3,%r15b
	je L_378593
L_13515:
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_13516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_378593:
L_13560:
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_13561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_378594:
L_13546:
	movq 0x8(%r13),%r14
	movq %r14,0x58(%rbp)
	movq 0x40(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_13547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_378595:
L_13532:
	movq 0x8(%r13),%r14
	movq %r14,0x58(%rbp)
	movq 0x40(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_13533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_378598:
L_13496:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movslq 0xC(%rbp),%r13
	movslq 0x0(%r15),%r11
	movq 0x10(%r15),%r10
	movq 0x10(%r10),%r9
	movq 0x8(%r10),%r8
	cmpq 0x0(%r10),%r13
	jnb L_13097
L_13498:
	cmpq %r8,%r11
	jnb L_13097
L_13500:
	imulq %r13,%r8
	addq %r11,%r8
	movq 0x0(%r9,%r8,8),%r15
	cmpq $0x1,%r15
	je L_378600
L_13501:
	movq $0x28C3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movl $0x1,0x0(%r11)
	movl $0x0,0x4(%r11)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	jnb L_13097
L_13503:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14,%r13,8)
	jmp L_13099
.p2align 0x4
L_378600:
L_13504:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378603:
L_13493:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movslq 0xC(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13495:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378605:
L_13465:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x30(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x24(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_378609
.p2align 0x4,,0x7
L_13484:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378608
.p2align 0x4,,0x7
L_13485:
	movq 0x38(%rbp),%r15
	movl 0x0(%r15),%ecx
	incl %ecx
	jo L_13126
L_13486:
	movl %ecx,0x0(%r15)
	movq $0x343,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ecx,0x0(%r15)
	addq $0x10,%r12
	movl 0xC(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B6F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
.p2align 0x4,,0x7
L_13470:
	movslq 0xC(%rbp),%r15
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13472:
	movl %ecx,0x0(%r14,%r15,4)
	jmp L_13099
.p2align 0x4
L_378608:
L_13487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_13488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13488
.p2align 0x4
.long 0x500
L_13488:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_13485
.p2align 0x4
L_378609:
L_13466:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
L_13467:
	movq 0x50(%rbp),%r15
	movl 0x4(%r15),%r14d
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x3D11,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	addq $0x20,%r12
	movl 0xC(%rbp),%r14d
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r13,0x68(%rbp)
	leaq L_13473(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movl $0x0,0x74(%rbp)
	addq $0x68,%rbp
	leaq (L_13468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_378610:
L_13440:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movslq 0x0(%r15),%r14
	movslq 0xC(%rbp),%r13
	movq 0x10(%r15),%r11
	movq 0x10(%r11),%r10
	movq 0x8(%r11),%r9
	cmpq 0x0(%r11),%r14
	jnb L_13097
L_13442:
	cmpq %r9,%r13
	jnb L_13097
L_13444:
	imulq %r14,%r9
	addq %r13,%r9
	movq 0x0(%r10,%r9,8),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xC(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_13436
L_13446:
	cmpl $0x0,%r13d
	jl L_13464
L_13447:
	movl $0x0,0x24(%rbp)
loop_226:
	movl 0xC(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_378611
L_13448:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378611:
L_13449:
	movslq 0x24(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	salq $0x4,%r15
	movq 0x30(%rbp),%r13
	movl 0x0(%r13,%r15,1),%r11d
	movq 0x8(%r13,%r14,1),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_13436
L_13451:
	testl %r9d,%r9d
	jz L_13457
L_13452:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r15),%r10d
	movslq %r11d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13454:
	movl 0x0(%r14,%r15,4),%r9d
	testl %r9d,%r9d
	jz L_378613
.p2align 0x4,,0x7
L_13457:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378612
.p2align 0x4,,0x7
L_13458:
	incl 0x24(%rbp)
	jmp loop_226
.p2align 0x4
L_378612:
L_13459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_13460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13460
.p2align 0x4
.long 0x4FE
L_13460:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_13458
.p2align 0x4
L_378613:
L_13455:
	movl %r10d,0x48(%rbp)
	movl $0x1,0x0(%r14,%r15,4)
	movq $0x3D15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x4C(%rbp)
	addq $0x40,%rbp
	leaq (L_13456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_378621:
L_13427:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movslq %r14d,%r11
	movslq 0xC(%rbp),%r10
	movq 0x10(%r15),%r9
	movq 0x10(%r9),%r8
	movq 0x8(%r9),%rsp
	cmpq 0x0(%r9),%r11
	jnb L_13097
L_13429:
	cmpq %rsp,%r10
	jnb L_13097
L_13431:
	imulq %rsp,%r11
	addq %r10,%r11
	movq %r11,%r15
	salq $0x4,%r15
	movq 0x8(%r8,%r15,1),%r10
	salq $0x4,%r11
	cmpl 0x0(%r8,%r11,1),%r14d
	jne L_378624
L_13434:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_13436
L_13437:
	testl %r14d,%r14d
	jnz L_378622
L_13439:
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_210
.p2align 0x4
L_378622:
	movq %r13,%r10
L_13433:
	movq $0x193B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378624:
	movq %r13,%r10
	jmp L_13433
.p2align 0x4
L_378627:
L_13403:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13405:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_225:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13407
L_13410:
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13412:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378630
L_13413:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378629
.p2align 0x4,,0x7
L_13417:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13419:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_225
.p2align 0x4
L_378629:
L_13414:
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378630:
L_13422:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13407
L_13424:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13417
.p2align 0x4,,0x7
L_13407:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13409:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378637:
L_13389:
	movq 0x0(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl 0xC(%rbp),%ecx
	movslq %ecx,%r15
	cmpq %r13,%r15
	jnb L_13097
L_13391:
	movq 0x0(%r14,%r15,8),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
loop_224:
	cmpl $0x0,%ecx
	jng L_13393
L_13396:
	movl %ecx,%r10d
	decl %r10d
	movslq %r10d,%r9
	cmpq %r13,%r9
	jnb L_13097
L_13398:
	movq 0x0(%r14,%r9,8),%r8
	movl 0x0(%r8),%r9d
	cmpl %r9d,0x0(%r15)
	jnl L_378639
L_13400:
	movslq %ecx,%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r9
	jnb L_13097
L_13402:
	movq %r11,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	movq %r8,0x0(%r11,%r9,8)
	movl %r10d,%ecx
	jmp loop_224
.p2align 0x4
L_378639:
L_13393:
	movslq %ecx,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jnb L_13097
L_13395:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,0x0(%r11,%r14,8)
	jmp L_13099
.p2align 0x4
L_378644:
L_13365:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13367:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_223:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13369
L_13372:
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13374:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378647
L_13375:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378646
.p2align 0x4,,0x7
L_13379:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13381:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_223
.p2align 0x4
L_378646:
L_13376:
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378647:
L_13384:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13369
L_13386:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13379
.p2align 0x4,,0x7
L_13369:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13371:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378654:
L_13341:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13343:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_222:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13345
L_13348:
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13350:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378657
L_13351:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378656
.p2align 0x4,,0x7
L_13355:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13357:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_222
.p2align 0x4
L_378656:
L_13352:
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378657:
L_13360:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13345
L_13362:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13355
.p2align 0x4,,0x7
L_13345:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13347:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378664:
L_13326:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13328:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_221:
	cmpl $0x0,0xC(%rbp)
	jg L_378666
.p2align 0x4,,0x7
L_13330:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13332:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378666:
L_13333:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13335:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_13336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378669:
L_13311:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13313:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_220:
	cmpl $0x0,0xC(%rbp)
	jg L_378671
.p2align 0x4,,0x7
L_13315:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13317:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378671:
L_13318:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13320:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_13321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378674:
L_13291:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13293:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_219:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13295
L_13298:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13300:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r13),%r15d
	movq 0x40(%rbp),%r14
	movl 0x0(%r14),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movq 0x20(%r14),%r13
	movq 0x8(%r13),%r10
	movb 0x24(%rbp),%r14b
	testb %r14b,%r14b
	jz L_378678
L_13308:
	cmpl %r11d,%r15d
	jl L_378676
.p2align 0x4,,0x7
L_13295:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13297:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378676:
.p2align 0x4,,0x7
L_13304:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13306:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_219
.p2align 0x4
L_378678:
L_13301:
	movq %r10,0x60(%rbp)
	movq %r9,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378682:
L_13271:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13273:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_218:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13275
L_13278:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13280:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r13),%r15d
	movq 0x40(%rbp),%r14
	movl 0x0(%r14),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movq 0x20(%r14),%r13
	movq 0x8(%r13),%r10
	movb 0x24(%rbp),%r14b
	testb %r14b,%r14b
	jz L_378686
L_13288:
	cmpl %r11d,%r15d
	jl L_378684
.p2align 0x4,,0x7
L_13275:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13277:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378684:
.p2align 0x4,,0x7
L_13284:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13286:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_218
.p2align 0x4
L_378686:
L_13281:
	movq %r10,0x60(%rbp)
	movq %r9,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378690:
L_13251:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x24(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13253:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_217:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13255
L_13258:
	decl %r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13260:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r13),%r15d
	movq 0x40(%rbp),%r14
	movl 0x0(%r14),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movq 0x20(%r14),%r13
	movq 0x8(%r13),%r10
	movb 0x24(%rbp),%r14b
	testb %r14b,%r14b
	jz L_378694
L_13268:
	cmpl %r11d,%r15d
	jl L_378692
.p2align 0x4,,0x7
L_13255:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13257:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378692:
.p2align 0x4,,0x7
L_13264:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13266:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_217
.p2align 0x4
L_378694:
L_13261:
	movq %r10,0x60(%rbp)
	movq %r9,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_13262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378698:
L_13236:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13238:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_216:
	cmpl $0x0,0xC(%rbp)
	jg L_378700
.p2align 0x4,,0x7
L_13240:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13242:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378700:
L_13243:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13245:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_13246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378703:
L_13221:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13223:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_215:
	cmpl $0x0,0xC(%rbp)
	jg L_378705
.p2align 0x4,,0x7
L_13225:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13227:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378705:
L_13228:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13230:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_13231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378708:
L_13206:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13208:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_214:
	cmpl $0x0,0xC(%rbp)
	jg L_378710
.p2align 0x4,,0x7
L_13210:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13212:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378710:
L_13213:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13215:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_13216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378713:
L_13182:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13184:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
loop_213:
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_13186
L_13189:
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13191:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_378716
L_13192:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_378715
.p2align 0x4,,0x7
L_13196:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13198:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_213
.p2align 0x4
L_378715:
L_13193:
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_378716:
L_13201:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_13186
L_13203:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_13196
.p2align 0x4,,0x7
L_13186:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13188:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378723:
L_13132:
	movq 0x0(%rbp),%r9
	movq 0x10(%r9),%r14
	movq 0x8(%r9),%r10
	movq 0x0(%r9),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl 0xC(%rbp),%ecx
	movslq %ecx,%r15
	cmpq %r11,%r15
	jnb L_13097
L_13134:
	movq 0x0(%r14,%r15,8),%r9
	movq %r9,%r15
.p2align 0x4,,0x7
loop_212:
	cmpl $0x0,%ecx
	jng L_13136
L_13139:
	movl %ecx,%r9d
	decl %r9d
	movslq %r9d,%r8
	cmpq %r11,%r8
	jnb L_13097
L_13141:
	movq 0x0(%r14,%r8,8),%rsp
	movq 0x8(%rsp),%r8
	movq 0x0(%r8),%rsi
	movq %rsi,%r8
	andq $0x1,%r8
	jz L_378728
L_13159:
	shrq $0x1,%rsi
	movl %esi,%r8d
	movq 0x8(%r15),%rsi
	movq 0x0(%rsi),%rdi
	movq %rdi,%rsi
	andq $0x1,%rsi
	jz L_378727
L_13177:
	shrq $0x1,%rdi
	movl %edi,%esi
	cmpl %r8d,%esi
	jnl L_378725
L_13179:
	movslq %ecx,%r8
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r8
	jnb L_13097
L_13181:
	movq %r13,%rsi
	shrq $0x8,%rsi
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%rsi,1)
	movq %rsp,0x0(%r13,%r8,8)
	movl %r9d,%ecx
	jmp loop_212
.p2align 0x4
L_378725:
L_13136:
	movslq %ecx,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_13097
L_13138:
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13,%r14,8)
	jmp L_13099
.p2align 0x4
L_378727:
L_13160:
	movq %r15,0x28(%rbp)
	movq %r10,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (toString_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_378728:
L_13142:
	movq %rsp,0x28(%rbp)
	movq %r10,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (toString_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_378732:
L_13115:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movl 0xC(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_378733
L_13116:
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_13117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_378733:
L_13125:
	negl %r15d
	jo L_13126
L_13127:
	movl %r15d,0x40(%rbp)
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_13128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_378735:
L_13100:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq 0xC(%rbp),%r13
	cmpq %r15,%r13
	jnb L_13097
L_13102:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
loop_211:
	cmpl $0x0,0xC(%rbp)
	jg L_378737
.p2align 0x4,,0x7
L_13104:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13106:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	jmp L_13099
.p2align 0x4
L_378737:
L_13107:
	movl 0xC(%rbp),%r15d
	decl %r15d
	movl %r15d,0x24(%rbp)
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_13097
L_13109:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_13110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp LtEq_0
.p2align 0x4
L_378740:
L_13093:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378741:
L_14203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_14204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_14204
.p2align 0x4
.long 0x492
L_14204:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_13092
.p2align 0x4
.long 0x4F8
L_14194:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1452,%r15
	jne L_378742
L_14196:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_14197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
L_378742:
L_14195:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F8
L_14179:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_14173
L_14180:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14182:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_249
.p2align 0x4
.long 0x4F8
L_14130:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_14124
L_14131:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14133:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_246
.p2align 0x4
.long 0x4F8
L_14115:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_14109
L_14116:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14118:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_245
.p2align 0x4
.long 0x4F8
L_14100:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_14094
L_14101:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14103:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_244
.p2align 0x4
.long 0x4FD
L_14081:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_14074
	jmp L_14083
.p2align 0x4
.long 0x4FD
L_14061:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_14054
	jmp L_14063
.p2align 0x4
.long 0x4FD
L_14041:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_14034
	jmp L_14043
.p2align 0x4
.long 0x4F8
L_14025:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_14019
L_14026:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14028:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_240
.p2align 0x4
.long 0x4F8
L_14010:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_14004
L_14011:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14013:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_239
.p2align 0x4
.long 0x4F8
L_13988:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13980
	jmp L_13990
.p2align 0x4
.long 0x4F8
L_13964:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13956
	jmp L_13966
.p2align 0x4
.long 0x4F8
L_13940:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13932
	jmp L_13942
.p2align 0x4
.long 0x4F8
L_13911:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13903
	jmp L_13913
.p2align 0x4
.long 0x4FB
L_13121:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_13099
.p2align 0x4
.long 0x4F9
L_13887:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_13888
.p2align 0x4
.long 0x461
L_13783:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%ecx
	movl %ecx,0x30(%rbp)
L_13784:
	testl %ecx,%ecx
	jnz L_13788
	jmp L_13786
.p2align 0x4
.long 0x461
L_13800:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%ecx
	movl %ecx,0x30(%rbp)
	jmp L_13784
.p2align 0x4
.long 0x503
L_13794:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	testl %r15d,%r15d
	jnz L_13786
L_13795:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb 0x30(%rbp),%r15b
	movb %r15b,0x38(%rbp)
	addq $0x38,%rbp
	leaq (not_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contains_0
.p2align 0x4
.long 0x4FD
L_13758:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_13749
	jmp L_13760
.p2align 0x4
.long 0x4FD
L_13715:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_13706
	jmp L_13717
.p2align 0x4
.long 0x4FD
L_13607:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_13598
	jmp L_13609
.p2align 0x4
.long 0x502
L_13516:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_378767
L_13517:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_23+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_378767:
L_13521:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq %r14,%r15
	andq $0x1,%r15
	jz L_378770
L_13522:
	cmpq %r14,%r13
	jnl L_13509
L_13525:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13527:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_227
.p2align 0x4
L_378770:
L_13528:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_13529:
	cmpl $0x0,%eax
	jg L_13525
	jmp L_13509
.p2align 0x4
.long 0x502
L_13561:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_378772
L_13562:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_26+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_378772:
L_13566:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq %r14,%r15
	andq $0x1,%r15
	jz L_378774
L_13567:
	cmpq %r14,%r13
	jl L_13525
	jmp L_13509
.p2align 0x4
L_378774:
L_13570:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_13571:
	cmpl $0x0,%eax
	jg L_13525
	jmp L_13509
.p2align 0x4
.long 0x502
L_13547:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_378776
L_13548:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_25+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_378776:
L_13552:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq %r14,%r15
	andq $0x1,%r15
	jz L_378778
L_13553:
	cmpq %r14,%r13
	jl L_13525
	jmp L_13509
.p2align 0x4
L_378778:
L_13556:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_13557:
	cmpl $0x0,%eax
	jg L_13525
	jmp L_13509
.p2align 0x4
.long 0x502
L_13533:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_378780
L_13534:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x19A8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_24+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_378780:
L_13538:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq %r14,%r15
	andq $0x1,%r15
	jz L_378782
L_13539:
	cmpq %r14,%r13
	jl L_13525
	jmp L_13509
.p2align 0x4
L_378782:
L_13542:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_13543:
	cmpl $0x0,%eax
	jg L_13525
	jmp L_13509
.p2align 0x4
.long 0x4FF
L_13468:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_13469:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%ecx
	jmp L_13470
.p2align 0x4
.long 0x25
L_13473:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13475
L_13490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_13491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13491
.p2align 0x4
.long 0x501
L_13491:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_13475:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_13476
L_13477:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xC9D,%r14
	jne L_378787
L_13478:
	movl 0x0(%r15),%r14d
	movq 0x58(%rbp),%r13
	cmpq %r13,0x8(%r15)
	jne L_378786
L_13480:
	testl %r14d,%r14d
	jnz L_13469
L_13481:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_13484
L_13482:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_13467
.p2align 0x4
L_378786:
L_13479:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_378787:
L_13476:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F9
L_13456:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_13457
.p2align 0x4
.long 0x4F8
L_13415:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13407
	jmp L_13417
.p2align 0x4
.long 0x4F8
L_13377:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13369
	jmp L_13379
.p2align 0x4
.long 0x4F8
L_13353:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13345
	jmp L_13355
.p2align 0x4
.long 0x4F8
L_13336:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13330
L_13337:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13339:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_221
.p2align 0x4
.long 0x4F8
L_13321:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13315
L_13322:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13324:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_220
.p2align 0x4
.long 0x4FD
L_13302:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_13295
	jmp L_13304
.p2align 0x4
.long 0x4FD
L_13282:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_13275
	jmp L_13284
.p2align 0x4
.long 0x4FD
L_13262:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	testl %r15d,%r15d
	jnz L_13255
	jmp L_13264
.p2align 0x4
.long 0x4F8
L_13246:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13240
L_13247:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13249:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_216
.p2align 0x4
.long 0x4F8
L_13231:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13225
L_13232:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13234:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_215
.p2align 0x4
.long 0x4F8
L_13216:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13210
L_13217:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13219:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_214
.p2align 0x4
.long 0x4F8
L_13194:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13186
	jmp L_13196
.p2align 0x4
.long 0x473
toString_1:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (rev_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x473
toString_0:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (rev_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4F9
L_13117:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13118
L_13123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_13124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13124
.p2align 0x4
.long 0x480
L_13124:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_13118:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB00)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_13119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4F9
L_13128:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13129
L_13130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_13131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13131
.p2align 0x4
.long 0x480
L_13131:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_13129:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_13117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4F8
L_13110:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_13104
L_13111:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_13113:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_211
.p2align 0x4
.long 0x505
L_14197:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1452,%r15
	jne L_14195
L_14198:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x50(%rbp)
	jnl L_14188
L_14200:
	movslq 0xC(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_13097
L_14202:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	movl 0x24(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	jmp loop_250
.p2align 0x4
.long 0x461
not_1:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	testl %r15d,%r15d
	jnz L_13786
	jmp L_13788
.p2align 0x4
.long 0x473
bug_23:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13518
L_13519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_13520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13520
.p2align 0x4
.long 0x49D
L_13520:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_13518:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x473
bug_26:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13563
L_13564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_13565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13565
.p2align 0x4
.long 0x49D
L_13565:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_13563:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x473
bug_25:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13549
L_13550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_13551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13551
.p2align 0x4
.long 0x49D
L_13551:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_13549:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x473
bug_24:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13535
L_13536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_13537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13537
.p2align 0x4
.long 0x49D
L_13537:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_13535:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x473
rev_1:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_378821
L_13161:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_13162:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378820
.p2align 0x4,,0x7
L_13163:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_378819
L_13164:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_13162
.p2align 0x4
L_378819:
L_13166:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_13167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_378820:
L_13174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_13175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13175
.p2align 0x4
.long 0x4FC
L_13175:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_13163
.p2align 0x4
L_378821:
L_13176:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_13166
.p2align 0x4
.long 0x473
rev_0:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_378824
L_13143:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_13144:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_378823
.p2align 0x4,,0x7
L_13145:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_378822
L_13146:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_13144
.p2align 0x4
L_378822:
L_13148:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_13149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_378823:
L_13156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_13157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13157
.p2align 0x4
.long 0x4FC
L_13157:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_13145
.p2align 0x4
L_378824:
L_13158:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_13148
.p2align 0x4
.long 0x4FA
L_13119:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB2,%r13
	je L_378825
L_13122:
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_13121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_378825:
L_13120:
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_13121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x473
L_13167:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13168
L_13172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_13173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13173
.p2align 0x4
.long 0x49D
L_13173:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_13168:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_22+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x473
L_13149:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13150
L_13154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_13155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13155
.p2align 0x4
.long 0x49D
L_13155:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_13150:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_21+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x473
bug_22:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13169
L_13170:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_13171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13171
.p2align 0x4
.long 0x49D
L_13171:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_13169:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x473
bug_21:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_13151
L_13152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_13153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_13153
.p2align 0x4
.long 0x49D
L_13153:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_13151:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
