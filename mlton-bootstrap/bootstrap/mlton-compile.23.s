/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:08:55 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_1369
.hidden x_1369
x_1369:
L_73186:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_73224
L_73187:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_404015
L_73188:
	movq 0x0(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xEB7,%r11
	je L_404014
	cmpq $0xEB8,%r11
	je L_404013
	cmpq $0xEB9,%r11
	je L_404012
	cmpq $0xEBA,%r11
	je L_404011
	cmpq $0xEBB,%r11
	je L_404010
	cmpq $0xEBC,%r11
	je L_404009
L_73189:
	movq %r13,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_73190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
L_404009:
L_73218:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_73219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_18
.p2align 0x4
L_404010:
L_73217:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404011:
L_73199:
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq $0x33B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movq %r13,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_73200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_404012:
L_73198:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404013:
L_73194:
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_73195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
L_404014:
L_73193:
	movq 0x0(%r15),%r15
	movq %r15,0x8(%rbp)
	movq $0x33B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp foreachi_5
.p2align 0x4
L_404015:
L_73224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_73225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73225
.p2align 0x4
.long 0x45F
L_73225:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_73188
.p2align 0x4
.long 0x1
L_73190:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_404017
L_73191:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x6,0x8(%rbp)
	jmp loop_3819
.p2align 0x4
L_404017:
L_73192:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x519
L_73219:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_404018
L_73220:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x11,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_73221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_404018:
L_73222:
	movq 0x28(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp flowVarInfoTysVars_1
.p2align 0x4
.long 0x4A8
L_73200:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x39,%r14
	je L_404024
	cmpq $0x3A,%r14
	je L_404022
	cmpq $0x3D,%r14
	je L_404020
L_73201:
	andq $0x3,%r15
	jnz L_73202
L_73203:
L_73202:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404020:
L_73213:
	movq 0x38(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_404021
L_73215:
	movq 0x0(%r14),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_73216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
L_404021:
L_73206:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404022:
L_73209:
	movq 0x38(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_73206
L_73211:
	movq 0x0(%r14),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_73212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
L_404024:
L_73204:
	movq 0x38(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_73206
L_73207:
	movq 0x0(%r14),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_73208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
.long 0x1
L_73195:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_404026
L_73196:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x6,0x8(%rbp)
	jmp loop_3819
.p2align 0x4
L_404026:
L_73197:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71D
L_73221:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_73222
.p2align 0x4
.long 0x796
L_73216:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp deconType_1
.p2align 0x4
.long 0x796
L_73212:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp deconType_1
.p2align 0x4
.long 0x796
L_73208:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp deconType_1
.text
.p2align 0x4
.globl deconType_1
.hidden deconType_1
deconType_1:
L_73226:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_73227
L_73300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_73301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73301
.p2align 0x4
.long 0x4AE
L_73301:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_73227:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
loop_881:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_404047
.p2align 0x4,,0x7
L_73228:
	movq 0x18(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_404046
L_73230:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_404045
L_73231:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_73233:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_73234
L_73290:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD27,%r13
	jne L_73234
L_73291:
	movq 0x8(%r14),%r13
	movq 0x28(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_404040
L_73234:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_404039
L_73236:
	cmpq $0x1,%r15
	je L_404027
L_73237:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_73233
.p2align 0x4
L_404027:
L_73238:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_404038
.p2align 0x4,,0x7
L_73239:
	movl 0x40(%rbp),%ecx
L_73240:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_404037
L_73242:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_73244
L_73287:
	movl %ecx,0x0(%r15)
L_73244:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x139B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq $0x1,0x8(%r13)
	movq $0x1A4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%r11),%r14
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r14,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x0(%r11)
	movq %r13,%r15
L_73245:
	movq 0x10(%r15),%r14
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_404035
L_73246:
	movl $0x1,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
L_73247:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73248
L_73249:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB1,%r15
	je L_404033
	cmpq $0xEB2,%r15
	je L_404029
	cmpq $0xEB4,%r15
	je L_404028
L_73248:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404028:
L_73262:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_73263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_75
.p2align 0x4
L_404029:
L_73251:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_404032
L_73254:
	cmpl $0x0,%r13d
	jl L_404031
L_73255:
	movl $0x0,0x2C(%rbp)
loop_882:
	movl 0x2C(%rbp),%r15d
	cmpl 0x28(%rbp),%r15d
	jnl L_404030
L_73258:
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_73259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deconType_1
.p2align 0x4
L_404030:
L_73257:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404031:
L_73261:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404032:
L_73253:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404033:
L_73250:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	jmp loop_881
.p2align 0x4
L_404035:
L_73286:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404037:
L_73241:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404038:
L_73288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_73289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73289
.p2align 0x4
.long 0x67D
L_73289:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_73239
.p2align 0x4
L_404039:
L_73235:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404040:
L_73293:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_73241
L_73294:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_404041
L_73296:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_73245
.p2align 0x4
L_404041:
L_73295:
	movq %r13,%r15
	jmp L_73245
.p2align 0x4
L_404045:
L_73297:
	xorl %ecx,%ecx
	jmp L_73240
.p2align 0x4
L_404046:
L_73229:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404047:
L_73298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_73299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73299
.p2align 0x4
.long 0x4E9
L_73299:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_73228
.p2align 0x4
.long 0x5EF
L_73263:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_73253
L_73265:
	cmpl $0x0,%r13d
	jl L_73261
L_73266:
	movl $0x0,0x20(%rbp)
loop_883:
	movl 0x20(%rbp),%r15d
	cmpl 0x30(%rbp),%r15d
	jnl L_73257
L_73268:
	movslq %r15d,%r14
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_73269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_18
.p2align 0x4
.long 0x1017
L_73259:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	incl 0x2C(%rbp)
	jmp loop_882
.p2align 0x4
.long 0x1018
L_73269:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_404052
L_73283:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x48(%rbp)
	movb $0x4,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_73284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_404052:
L_73271:
	movq 0x38(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_73253
L_73273:
	cmpl $0x0,%r13d
	jl L_73261
L_73274:
	movl $0x0,0x34(%rbp)
loop_884:
	movl 0x24(%rbp),%r15d
	cmpl %r15d,0x34(%rbp)
	jl L_404053
L_73275:
	incl 0x20(%rbp)
	jmp loop_883
.p2align 0x4
L_404053:
L_73276:
	movslq 0x34(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x38(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	cmpq $0x1,%r15
	je L_404054
L_73277:
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x8(%r11)
	movl $0x0,0x0(%r11)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movb $0x6,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_73278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_404054:
L_73279:
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_73280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deconType_1
.p2align 0x4
.long 0x101A
L_73284:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_73271
.p2align 0x4
.long 0x1019
L_73278:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_73279
.p2align 0x4
.long 0xC49
L_73280:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	incl 0x34(%rbp)
	jmp loop_884
.text
.p2align 0x4
.globl flowVarInfoTysVars_1
.hidden flowVarInfoTysVars_1
flowVarInfoTysVars_1:
L_73302:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_73303
L_73336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_73337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73337
.p2align 0x4
.long 0x45B
L_73337:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_73303:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_73305
L_73306:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r14
	jne L_404060
L_73308:
	cmpl %r13d,%ecx
	jne L_73310
L_73311:
	cmpl $0x0,%r13d
	jl L_404058
L_73312:
	xorl %ecx,%ecx
loop_885:
	cmpl 0x18(%rbp),%ecx
	jnl L_404057
L_73314:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x1C(%rbp)
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x0(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_73315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_52
.p2align 0x4
L_404057:
L_73313:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404058:
L_73310:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404060:
L_73305:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB9D
L_73315:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73316
L_73333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_73334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73334
.p2align 0x4
.long 0xFCF
L_73334:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_73316:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x20(%rbp),%r15
	cmpq %r15,%r14
	je L_73323
L_73317:
	movq 0x8(%r15),%r13
	movq 0x8(%r14),%r15
	cmpq $0x1,%r13
	je L_404065
L_73318:
	cmpq $0x1,%r15
	je L_73323
L_73319:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_404063
L_73320:
L_73321:
	movq $0x41E1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x2729,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
L_73322:
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13)
L_73323:
	movl 0x1C(%rbp),%ecx
	jmp loop_885
.p2align 0x4
L_404063:
L_73324:
	movq $0x41E1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2727,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_73322
.p2align 0x4
L_404065:
L_73326:
	cmpq $0x1,%r15
	je L_73323
L_73327:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_73323
L_73328:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0x6,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_73329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0xB9C
L_73329:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_73323
.text
.p2align 0x4
.globl x_1435
.hidden x_1435
x_1435:
L_73338:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_73339
L_73480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_73481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73481
.p2align 0x4
.long 0x451
L_73481:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_73339:
	movq 0x0(%rbp),%rax
	andq $0xFF,%rax
	subq $0x1,%rax
	cmpq $0x88,%rax
	ja L_404070
	leaq jumpTable_193(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_193:
.quad L_73377,L_73377,L_73342,L_73340,L_73346,L_73346,L_73344,L_73340,L_73342,L_73342,L_73342,L_73340,L_73342,L_73346,L_73346,L_73340,L_73342,L_73344,L_73344,L_73340,L_73342,L_73342,L_73342,L_73340,L_73342,L_73344,L_73344,L_73340,L_73342,L_73342,L_73342,L_73340,L_73342,L_73342,L_73342,L_73340,L_73342,L_73342,L_73342,L_73340,L_73342,L_73342,L_73342,L_73340,L_73342,L_73342,L_73342,L_73340,L_73342,L_73342,L_73342,L_73340,L_73342,L_73344,L_73377,L_73340,L_73342,L_73342,L_73344,L_73340,L_73342,L_73344,L_73346,L_73340,L_73344,L_73346,L_73344,L_73340,L_73344,L_73346,L_73377,L_73340,L_73342,L_73344,L_73344,L_73340,L_73346,L_73377,L_73344,L_73340,L_73344,L_73344,L_73346,L_73340,L_73346,L_73344,L_73344,L_73340,L_73342,L_73342,L_73346,L_73340,L_73346,L_404113,L_73342,L_73340,L_73342,L_73342,L_73344,L_73340,L_73346,L_73344,L_73346,L_73340,L_73346,L_73346,L_73346,L_73340,L_73346,L_73346,L_73346,L_73340,L_73346,L_73346,L_73346,L_73340,L_73346,L_73342,L_73346,L_73340,L_73346,L_73342,L_73346,L_73340,L_73342,L_73342,L_73346,L_73340,L_73346,L_73346,L_73342,L_73340,L_73342,L_73346,L_73346,L_73340,L_73346
.text
.p2align 0x4
L_404070:
L_73340:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEF5,%r14
	je L_73344
	cmpq $0xEF6,%r14
	je L_73346
	cmpq $0xEF8,%r14
	je L_73344
	cmpq $0xEFD,%r14
	je L_73346
	cmpq $0xF02,%r14
	je L_73344
	cmpq $0xF04,%r14
	je L_73344
	cmpq $0xF0C,%r14
	je L_73344
	cmpq $0xF11,%r14
	je L_73344
	cmpq $0xF12,%r14
	je L_404072
	cmpq $0xF13,%r14
	je L_404071
L_73342:
	movb $0x2,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404071:
L_73346:
	movb $0x3,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404072:
L_73344:
	movb $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404113:
L_73377:
	movb $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl toWord_0
.hidden toWord_0
toWord_0:
L_73482:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_73483
L_73522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_73523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73523
.p2align 0x4
.long 0x45F
L_73523:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_73483:
	movq 0x8(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x40(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_404186
L_73484:
	movq %r13,0x58(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_73485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_404186:
L_73517:
	movq %r10,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_73518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x910
L_73485:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x3,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_73486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1
L_73518:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x57E
L_73486:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_73487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x1
bug_153:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73519
L_73520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_73521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73521
.p2align 0x4
.long 0x451
L_73521:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_73519:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x528
L_73487:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl $0x1,0x50(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_73488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
.long 0x571
L_73488:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	testl %r15d,%r15d
	jnz L_404189
L_73489:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404189:
L_73490:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_73491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x101B
L_73491:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_73492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x101B
L_73492:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_73493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x101B
L_73493:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73494
L_73515:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_73516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73516
.p2align 0x4
.long 0x1020
L_73516:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_73494:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_73495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x101C
L_73495:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_73496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x101D
L_73496:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_73497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1019
L_73497:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73498
L_73513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_73514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73514
.p2align 0x4
.long 0x8A5
L_73514:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_73498:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_73499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0xA9F
L_73499:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_73500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x101E
L_73500:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_73501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x9F7
L_73501:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73502
L_73511:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_73512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73512
.p2align 0x4
.long 0x101F
L_73512:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_73502:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_73503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1437
.p2align 0x4
.long 0x6DA
L_73503:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73504
L_73509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_73510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73510
.p2align 0x4
.long 0x5F4
L_73510:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_73504:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x8,%rbp
	leaq (L_73505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1438
.p2align 0x4
.long 0x1
L_73505:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73506
L_73507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_73508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73508
.p2align 0x4
.long 0x45F
L_73508:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_73506:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1437
.hidden x_1437
x_1437:
L_73524:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_73525
L_73542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_73543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73543
.p2align 0x4
.long 0x45B
L_73543:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_73525:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r13,%r15
	andq %r11,%r15
	andq $0x1,%r15
	jz L_404196
L_73526:
	cmpq %r13,%r11
	jl L_404195
zero_0:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_73528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_404195:
	movq %r11,%r15
L_73532:
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x38,%rbp
	leaq (L_73533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_404196:
L_73538:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r11,%rdi
	xorq %rax,%rax
	movq %r11,%rbx
	call IntInf_compare
L_73539:
	cmpl $0x0,%eax
	jl L_404197
	jmp zero_0
.p2align 0x4
L_404197:
	movq %rbx,%r15
	jmp L_73532
.p2align 0x4
.long 0x7B4
L_73528:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_73529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4A6
L_73533:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_73534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x79B
L_73529:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_73530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x71E
L_73534:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_73535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x51A
L_73530:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B2
L_73535:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_73536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x511
L_73536:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_73537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x51A
L_73537:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1438
.hidden x_1438
x_1438:
L_73544:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_73545
L_73576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_73577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73577
.p2align 0x4
.long 0x45B
L_73577:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_73545:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_73546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x525
L_73546:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	testl %r15d,%r15d
	jnz L_404200
L_73547:
	movq (globalObjptr+0x1928)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_404200:
L_73551:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,%r15
	andq %r13,%r15
	andq $0x1,%r15
	jz L_404201
L_73552:
	orq %r13,%r14
	orq $0x1,%r14
	movq %r14,0x20(%rbp)
L_73553:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_73554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_404201:
L_73557:
	andq $0x1,%r14
	jz L_404207
L_73558:
	movq $0x1,%r15
L_73559:
	movq 0x30(%rbp),%r14
	andq $0x1,%r14
	jz L_404205
L_73560:
	movq $0x1,%r14
L_73561:
	cmpq %r14,%r15
	jnl L_73563
L_73570:
	movq %r14,%r15
L_73563:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%rsi
	movq 0x8(%r14),%r13
	imulq %r13,%r15
	addq $0x7,%rsi
	addq %r13,%rsi
	addq %r15,%rsi
	movq %rsi,%r15
	movq %rsi,0x38(%rbp)
	addq $0x0,%r15
	jc L_404203
L_73565:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_73566
L_73568:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_73569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73569
.p2align 0x4
.long 0x1021
L_73569:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_73566:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x38(%rbp),%rdx
	movq 0x10(%rbp),%rsi
	movq 0x30(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_orb
L_73567:
	movq %rax,0x20(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp L_73553
.p2align 0x4
L_404203:
L_73564:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_404205:
L_73571:
	movq 0x30(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	decq %r14
	jo L_404206
L_73573:
	jmp L_73561
.p2align 0x4
L_404206:
L_73572:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404207:
L_73574:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_73572
L_73575:
	jmp L_73559
.p2align 0x4
.long 0x1
bug_154:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73548
L_73549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_73550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73550
.p2align 0x4
.long 0x451
L_73550:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_73548:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B2
L_73554:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_73555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x511
L_73555:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_73556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x51A
L_73556:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_69
.hidden get_69
get_69:
L_73578:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_73579
L_73633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_73634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73634
.p2align 0x4
.long 0x45F
L_73634:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_73579:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_404219
L_73581:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_404218
L_73582:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_73584:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_404217
L_73625:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD17,%r10
	jne L_404216
L_73626:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_404213
L_73585:
	incl %ecx
	jo L_404212
L_73587:
	cmpq $0x1,%r14
	je L_404210
L_73588:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_73584
.p2align 0x4
L_404210:
L_73589:
L_73590:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_404211
L_73592:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_214
L_73624:
	movl %ecx,0x0(%r15)
x_214:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_73594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_404211:
L_73591:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404212:
L_73586:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404213:
L_73628:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_73591
L_73629:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_404214
L_73631:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404214:
L_73630:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404216:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_73585
.p2align 0x4
L_404217:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_73585
.p2align 0x4
L_404218:
L_73632:
	xorl %ecx,%ecx
	jmp L_73590
.p2align 0x4
L_404219:
L_73580:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_73594:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_73595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_73595:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_73596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_73596:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF040)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_73597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_73597:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_73598:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73599
L_73622:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_73623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73623
.p2align 0x4
.long 0x4AE
L_73623:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_73599:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_73600:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_73586
L_73601:
	cmpq $0x1,%r14
	je L_404221
L_73602:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_73600
.p2align 0x4
L_404221:
L_73603:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73604
L_73620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_73621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73621
.p2align 0x4
.long 0x4E6
L_73621:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_73604:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_404222
L_73605:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_82:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_82+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_404222:
L_73619:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_82
.p2align 0x4
.long 0x1
rev_82:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_404228
L_73606:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_73607:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_404227
.p2align 0x4,,0x7
L_73608:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_404226
L_73609:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_73607
.p2align 0x4
L_404226:
L_73611:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_73612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_404227:
L_73616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_73617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73617
.p2align 0x4
.long 0x45B
L_73617:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_73608
.p2align 0x4
L_404228:
L_73618:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_73611
.p2align 0x4
.long 0x1
L_73612:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73613
L_73614:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_73615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73615
.p2align 0x4
.long 0x451
L_73615:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_73613:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_77
.hidden get_77
get_77:
L_73635:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_73665
L_73636:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_404242
L_73637:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_404241
L_73639:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_404240
L_73640:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_73642:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_73643
L_73657:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD0D,%r13
	jne L_73643
L_73658:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x8(%rbp)
	je L_404235
L_73643:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_404234
L_73645:
	cmpq $0x1,%r15
	je L_404230
L_73646:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_73642
.p2align 0x4
L_404230:
L_73647:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73648
L_73655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_73656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73656
.p2align 0x4
.long 0x813
L_73656:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_73648:
	movl 0x18(%rbp),%ecx
L_73649:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_404232
L_73651:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_73653
L_73654:
	movl %ecx,0x0(%r15)
L_73653:
	movq $0x1093,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x19B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1A1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404232:
L_73650:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404234:
L_73644:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404235:
L_73660:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_73650
L_73661:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_404236
L_73663:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404236:
L_73662:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404240:
L_73664:
	xorl %ecx,%ecx
	jmp L_73649
.p2align 0x4
L_404241:
L_73638:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404242:
L_73665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_73666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73666
.p2align 0x4
.long 0x45F
L_73666:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_73637
.text
.p2align 0x4
.globl canon_0
.hidden canon_0
canon_0:
L_73667:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_73759
L_73668:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_404253
L_73669:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xEB6,%r11
	je L_404252
	cmpq $0xEB7,%r11
	je L_404250
	cmpq $0xEB8,%r11
	je L_404249
	cmpq $0xEBA,%r11
	je L_404247
	cmpq $0xEBB,%r11
	je L_404246
	cmpq $0xEBC,%r11
	je L_404244
L_73670:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404244:
L_73752:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r15
	jne L_404245
L_73754:
	movl %r11d,0x20(%rbp)
	movq $0x4021,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x18(%rbp)
	addq $0x18,%r12
	addq $0x18,%rbp
	leaq (L_73755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_404245:
L_73681:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404246:
L_73751:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404247:
L_73695:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r15
	jne L_73681
L_73697:
	movl %r11d,0x28(%rbp)
	movq $0x4021,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	addq $0x20,%rbp
	leaq (L_73698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_404249:
L_73687:
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x10(%rbp)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_404250:
L_73679:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_73681
L_73682:
	movl %r11d,0x10(%rbp)
	movq $0x4021,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	addq $0x8,%rbp
	leaq (L_73683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_404252:
L_73671:
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq %r14,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_73672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_404253:
L_73759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_73760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73760
.p2align 0x4
.long 0x45F
L_73760:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_73669
.p2align 0x4
.long 0x521
L_73755:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73756
L_73757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_73758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73758
.p2align 0x4
.long 0x4E8
L_73758:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_73756:
	movq $0x1D79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_73698:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73699
L_73749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_73750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73750
.p2align 0x4
.long 0x4E7
L_73750:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_73699:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1D,%r14
	je L_73723
	cmpq $0x1E,%r14
	je L_73723
	cmpq $0x22,%r14
	je canon2_0
	cmpq $0x23,%r14
	je L_73723
	cmpq $0x26,%r14
	je L_73723
	cmpq $0x2A,%r14
	je L_73723
	cmpq $0x33,%r14
	je L_404259
	cmpq $0x39,%r14
	je canon2_0
	cmpq $0x3A,%r14
	je canon2_0
	cmpq $0x77,%r14
	je canon2_0
	cmpq $0x7A,%r14
	je canon2_0
	cmpq $0x7F,%r14
	je canon2_0
	cmpq $0x85,%r14
	je canon2_0
L_73700:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_73701
L_73702:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEF7,%r14
	je canon2_0
	cmpq $0xF00,%r14
	je canon2_0
	cmpq $0xF04,%r14
	je canon2_0
	cmpq $0xF05,%r14
	je canon2_0
	cmpq $0xF09,%r14
	je canon2_0
	cmpq $0xF0B,%r14
	je canon2_0
	cmpq $0xF0C,%r14
	je canon2_0
	cmpq $0xF0D,%r14
	je canon2_1
L_73701:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
canon2_1:
canon2_0:
	movq 0x18(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	cmpq $0x0,%r15
	jna L_73705
L_73706:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r15
	jna L_404256
L_73708:
	movq 0x8(%r13),%r15
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jb new2_10
L_73709:
new2_0:
	movq $0x4007,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movl $0x2,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_73710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
new2_10:
	xchgq %r14,%r15
	jmp new2_0
.p2align 0x4
L_404256:
L_73705:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404259:
L_73723:
	movq 0x18(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	cmpq $0x0,%r15
	jna L_73705
L_73725:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r15
	jna L_73705
L_73727:
	movq 0x8(%r11),%r14
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	jb L_404261
L_73728:
L_73729:
	cmpq $0x2,%r15
	jna L_73705
L_73731:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r11
	movq $0x3FF3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r13,0x10(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%r12
	movl $0x3,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_73732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_404261:
	xchgq %r13,%r14
	jmp L_73729
.p2align 0x4
.long 0xB25
L_73688:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73689
L_73693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_73694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73694
.p2align 0x4
.long 0x522
L_73694:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_73689:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_404270
L_73690:
L_73691:
	movq $0x1D71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x10(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404270:
L_73692:
	movq 0x8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_73691
.p2align 0x4
.long 0x1
L_73683:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73684
L_73685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_73686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73686
.p2align 0x4
.long 0x451
L_73686:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_73684:
	movq $0x1D6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x521
L_73672:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73673
L_73677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_73678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73678
.p2align 0x4
.long 0x4E8
L_73678:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_73673:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_404273
L_73674:
L_73675:
	movq $0x1D6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404273:
L_73676:
	movq 0x8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_73675
.p2align 0x4
.long 0x4E5
L_73710:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73711
L_73712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_73713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73713
.p2align 0x4
.long 0x4E7
L_73713:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_73711:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_73732:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73733
L_73734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_73735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73735
.p2align 0x4
.long 0x4E7
L_73735:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_73733:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl lookup_3
.hidden lookup_3
lookup_3:
L_73761:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_73820
L_73762:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_404298
L_73763:
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq (globalObjptr+0xAE0)(%rip),%r14
	movq 0x0(%r14),%r11
	incq %r11
	jo L_404297
L_73765:
	movq %r11,0x0(%r14)
	movl 0x0(%r13),%r14d
	andl 0x0(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_73780
L_73766:
	movslq %r14d,%r13
	movq %r13,0x18(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_73768
L_73769:
	movq 0x0(%r15,%r13,8),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_404278
L_73770:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
L_73771:
	movq (globalObjptr+0xAE8)(%rip),%r15
	movq 0x0(%r15),%r14
	incq %r14
	jo L_404277
L_73773:
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_73774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_4
.p2align 0x4
L_404277:
L_73772:
	movq (globalObjptr+0xAF0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404278:
L_73779:
	movq $0x106D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x20,%r12
	movl 0x0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_73780
L_73781:
	movl %r13d,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x27D9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq 0x40(%rbp),%rdx
	movq %rdx,0x8(%r10)
	movq 0x18(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_73768
L_73783:
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r11,%r15,8)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_73785
L_73786:
	movl 0x0(%r14),%r15d
	imull $0x4,%r15d
	jo L_73780
L_73787:
	cmpl %r15d,%r10d
	jnl L_404290
L_73789:
	addl %r10d,%r10d
	jo L_73780
L_73790:
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x38(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x40(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_404288
L_73791:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xDA5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_73792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73792
.p2align 0x4
.long 0x1022
L_73792:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_886:
	cmpq 0x40(%rbp),%r15
	jnl L_404279
L_73813:
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_886
.p2align 0x4
L_404279:
L_73793:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x3C(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_404287
L_73795:
	cmpl $0x0,%r13d
	jl L_404286
L_73796:
	movl $0x0,0x58(%rbp)
.p2align 0x4,,0x7
loop_887:
	movl 0x58(%rbp),%r15d
	cmpl 0x3C(%rbp),%r15d
	jnl L_404285
L_73798:
	movslq %r15d,%r14
	movq 0x50(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_73807
L_73799:
	movq 0x8(%r13),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x68(%rbp)
L_73800:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_404283
.p2align 0x4,,0x7
L_73801:
	movq 0x68(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x38(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_404282
L_73802:
	movslq %r14d,%r13
	cmpq 0x40(%rbp),%r13
	jnb L_404281
L_73804:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x27D9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_404280
L_73805:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_73800
.p2align 0x4
L_404280:
L_73807:
	incl 0x58(%rbp)
	jmp loop_887
.p2align 0x4
L_404281:
L_73768:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404282:
L_73780:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404283:
L_73809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_73810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73810
.p2align 0x4
.long 0x1023
L_73810:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_73801
.p2align 0x4
L_404285:
L_73797:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r14
	movl 0x38(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404286:
L_73812:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404287:
L_73785:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404288:
L_73814:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404290:
L_73788:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404297:
L_73764:
	movq (globalObjptr+0xAF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404298:
L_73820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_73821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73821
.p2align 0x4
.long 0x4E7
L_73821:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_73763
.p2align 0x4
.long 0x9D2
L_73774:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_73775
L_73816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_73817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_73817
.p2align 0x4
.long 0x1024
L_73817:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_73775:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_404301
L_73776:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_73779
L_73777:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_73771
.p2align 0x4
L_404301:
L_73815:
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl equals_4
.hidden equals_4
equals_4:
L_73822:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_73823
L_74555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_74556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74556
.p2align 0x4
.long 0x45B
L_74556:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_73823:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB7,%r14
	je L_404775
	cmpq $0xEB8,%r14
	je L_404772
	cmpq $0xEB9,%r14
	je L_404767
	cmpq $0xEBA,%r14
	je L_404316
	cmpq $0xEBB,%r14
	je L_404314
	cmpq $0xEBC,%r14
	je L_404304
L_73824:
	movq 0x0(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEB6,%r13
	jne L_404303
L_73826:
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404303:
L_73825:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404304:
L_74551:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xEBC,%r15
	jne L_73825
L_74552:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r14)
	jne L_73825
L_74554:
	movq %r13,%r14
varsEquals_0:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%ecx
	movslq %ecx,%r11
	cmpq %r13,%r11
	jne L_73830
L_73831:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%ebx
	movslq %ebx,%r10
	cmpq %r10,%r11
	jne L_404310
L_73833:
	cmpl %ebx,%ecx
	jne L_73825
L_73835:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_888:
	cmpl %ebx,%ecx
	je L_404308
L_73836:
	movslq %ebx,%r11
	cmpq %r13,%r11
	jnb L_404307
L_73838:
	movq 0x0(%r14,%r11,8),%r10
	movq 0x0(%r15,%r11,8),%r9
	movq 0x10(%r9),%r8
	cmpq %r8,0x10(%r10)
	jne L_73825
L_73840:
	incl %ebx
	jo L_404305
L_73842:
	jmp loop_888
.p2align 0x4
L_404305:
L_73841:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404307:
L_73837:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404308:
L_73843:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404310:
L_73830:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404314:
L_74549:
	movq 0x0(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEBB,%r13
	jne L_73825
L_74550:
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp x_1405
.p2align 0x4
L_404316:
L_73854:
	movq 0x8(%r15),%rax
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBA,%r14
	jne L_73825
L_73855:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq %rax,%r15
	andq $0xFF,%r15
	subq $0x1,%r15
	xchgq %r15,%rax
	cmpq $0x88,%rax
	ja L_404317
	leaq jumpTable_194(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_194:
.quad L_404763,L_404760,L_404757,L_73856,L_404753,L_404750,L_404747,L_73856,L_404744,L_404741,L_404738,L_73856,L_404735,L_404732,L_404729,L_73856,L_404726,L_404723,L_404720,L_73856,L_404717,L_404714,L_404711,L_73856,L_404708,L_404705,L_404702,L_73856,L_404699,L_404696,L_404693,L_73856,L_404690,L_404687,L_404684,L_73856,L_404681,L_404678,L_404675,L_73856,L_404672,L_404669,L_404666,L_73856,L_404663,L_404660,L_404657,L_73856,L_404654,L_404651,L_404648,L_73856,L_404645,L_404642,L_404639,L_73856,L_404636,L_404633,L_404630,L_73856,L_404627,L_404624,L_404621,L_73856,L_404618,L_404615,L_404612,L_73856,L_404609,L_404606,L_404603,L_73856,L_404600,L_404597,L_404594,L_73856,L_404591,L_404588,L_404585,L_73856,L_404582,L_404579,L_404576,L_73856,L_404573,L_404570,L_404567,L_73856,L_404564,L_404561,L_404558,L_73856,L_404555,L_404552,L_404549,L_73856,L_404546,L_404543,L_404540,L_73856,L_404536,L_404532,L_404528,L_73856,L_404524,L_404520,L_404516,L_73856,L_404512,L_404508,L_404504,L_73856,L_404500,L_404496,L_404492,L_73856,L_404488,L_404484,L_404480,L_73856,L_404476,L_404472,L_404468,L_73856,L_404464,L_404460,L_404456,L_73856,L_404452,L_404448,L_404444,L_73856,L_404440,L_404436,L_404432,L_73856,L_404427
.text
.p2align 0x4
L_404317:
L_73856:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xEF5,%rax
	cmpq $0x1E,%rax
	ja L_404318
	leaq jumpTable_195(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_195:
.quad L_404424,L_404421,L_404418,L_404415,L_404412,L_404409,L_404406,L_404403,L_404400,L_404397,L_404394,L_404391,L_404388,L_404385,L_404382,L_404379,L_404376,L_404373,L_404370,L_404367,L_404364,L_404361,L_404358,L_404355,L_404352,L_404348,L_404344,L_404337,L_404327,L_404324,L_404321
.text
.p2align 0x4
L_404318:
L_73857:
	movq 0x0(%r15),%r13
L_73858:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73859:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEF4,%r15
	jne L_73825
L_73860:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404321:
L_74075:
	movq 0x0(%r15),%r13
L_74076:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_74077:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF13,%r15
	jne L_73825
L_74078:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404324:
L_74071:
	movq 0x0(%r15),%r13
L_74072:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_74073:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF12,%r15
	jne L_73825
L_74074:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404327:
L_74054:
	movq 0x20(%r15),%r10
L_74055:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_74056:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF11,%r15
	jne L_73825
L_74057:
	movq 0x20(%r14),%r9
	cmpq $0x1,%r10
	je L_404333
L_74059:
	movq %r9,%r15
	andq $0x3,%r15
	jnz L_73825
L_74060:
	cmpq %r10,%r9
	je L_73864
L_74061:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r9),%r13
	jne L_73825
L_74063:
	xorq %r11,%r11
	movq %r10,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
vectorEqualLoop_126:
	cmpq %r11,%r13
	je L_404329
L_74064:
	movb 0x0(%r14,%r11,1),%r10b
	cmpb %r10b,0x0(%r15,%r11,1)
	jne L_73825
L_74066:
	incq %r11
	jmp vectorEqualLoop_126
.p2align 0x4
L_404329:
L_73864:
	movq 0x8(%rbp),%r15
	movq 0x10(%rbp),%r14
	jmp varsEquals_0
.p2align 0x4
L_404333:
L_74069:
	cmpq $0x1,%r9
	je L_73864
	jmp L_73825
.p2align 0x4
L_404337:
L_74042:
	movq 0x8(%r15),%r10
L_74043:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_74044:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF10,%r15
	jne L_73825
L_74045:
	movq 0x8(%r14),%r9
	cmpq %r10,%r9
	je L_73864
L_74046:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r9),%r13
	jne L_73825
L_74048:
	xorq %r11,%r11
	movq %r10,%r15
	movq %r9,%r14
.p2align 0x4,,0x7
vectorEqualLoop_125:
	cmpq %r11,%r13
	je L_73864
L_74049:
	movb 0x0(%r15,%r11,1),%r10b
	cmpb %r10b,0x0(%r14,%r11,1)
	jne L_73825
L_74051:
	incq %r11
	jmp vectorEqualLoop_125
.p2align 0x4
L_404344:
L_74036:
	movq 0x8(%r15),%r13
	movb 0x0(%r15),%r11b
L_74037:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_74038:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF0F,%r15
	jne L_73825
L_74039:
	movq 0x8(%r14),%r15
	cmpb 0x0(%r14),%r11b
	jne L_73825
L_74041:
	movq %r15,0x20(%rbp)
	movq %r13,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404348:
L_74025:
	movl 0x0(%r15),%r13d
	movl %r13d,0x18(%rbp)
	movq 0x8(%r15),%r13
	movb 0x4(%r15),%r11b
L_74026:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_74027:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF0E,%r15
	jne L_73825
L_74028:
	movl 0x0(%r14),%r15d
	movl %r15d,0x1C(%rbp)
	movq 0x8(%r14),%r15
	cmpb 0x4(%r14),%r11b
	jne L_73825
L_74030:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_74031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404352:
L_74021:
	movq 0x0(%r15),%r13
L_74022:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_74023:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF0D,%r15
	jne L_73825
L_74024:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404355:
L_74012:
	movl 0x0(%r15),%r13d
	movl %r13d,0x18(%rbp)
	movq 0x8(%r15),%r13
L_74013:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_74014:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF0C,%r15
	jne L_73825
L_74015:
	movq %r13,0x30(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x1C(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_74016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404358:
L_74008:
	movq 0x0(%r15),%r13
L_74009:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_74010:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF0B,%r15
	jne L_73825
L_74011:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404361:
L_73999:
	movb 0x0(%r15),%r13b
	movb %r13b,0x18(%rbp)
	movq 0x8(%r15),%r13
L_74000:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_74001:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF0A,%r15
	jne L_73825
L_74002:
	movq %r13,0x30(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x19(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_74003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404364:
L_73995:
	movq 0x0(%r15),%r13
L_73996:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73997:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF09,%r15
	jne L_73825
L_73998:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404367:
L_73983:
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x18(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r13),%r11
L_73984:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73985:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF08,%r15
	jne L_73825
L_73986:
	movq %r11,0x40(%rbp)
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	movl %r13d,0x1C(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_73987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404370:
L_73979:
	movq 0x0(%r15),%r13
L_73980:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73981:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF07,%r15
	jne L_73825
L_73982:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404373:
L_73970:
	movl 0x0(%r15),%r13d
	movl %r13d,0x18(%rbp)
	movq 0x8(%r15),%r13
L_73971:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73972:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF06,%r15
	jne L_73825
L_73973:
	movq %r13,0x30(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x1C(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_73974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404376:
L_73961:
	movl 0x0(%r15),%r13d
	movl %r13d,0x18(%rbp)
	movq 0x8(%r15),%r13
L_73962:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73963:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF05,%r15
	jne L_73825
L_73964:
	movq %r13,0x30(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x1C(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_73965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404379:
L_73952:
	movl 0x0(%r15),%r13d
	movl %r13d,0x18(%rbp)
	movq 0x8(%r15),%r13
L_73953:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73954:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF04,%r15
	jne L_73825
L_73955:
	movq %r13,0x30(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x1C(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_73956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404382:
L_73948:
	movq 0x0(%r15),%r13
L_73949:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73950:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF03,%r15
	jne L_73825
L_73951:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404385:
L_73944:
	movq 0x0(%r15),%r13
L_73945:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73946:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF02,%r15
	jne L_73825
L_73947:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404388:
L_73940:
	movq 0x0(%r15),%r13
L_73941:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73942:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF01,%r15
	jne L_73825
L_73943:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404391:
L_73936:
	movq 0x0(%r15),%r13
L_73937:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73938:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF00,%r15
	jne L_73825
L_73939:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404394:
L_73927:
	movl 0x0(%r15),%r13d
	movl %r13d,0x18(%rbp)
	movq 0x8(%r15),%r13
L_73928:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73929:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEFF,%r15
	jne L_73825
L_73930:
	movq %r13,0x30(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x1C(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_73931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404397:
L_73918:
	movl 0x0(%r15),%r13d
	movl %r13d,0x18(%rbp)
	movq 0x8(%r15),%r13
L_73919:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73920:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEFE,%r15
	jne L_73825
L_73921:
	movq %r13,0x30(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x1C(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_73922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404400:
L_73907:
	movl 0x0(%r15),%r13d
	movl %r13d,0x18(%rbp)
	movb 0x4(%r15),%r13b
	movb %r13b,0x1C(%rbp)
	movq 0x8(%r15),%r13
L_73908:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73909:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEFD,%r15
	jne L_73825
L_73910:
	movq %r13,0x38(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x20(%rbp)
	movb 0x4(%r14),%r15b
	movb %r15b,0x1D(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_73911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404403:
L_73903:
	movq 0x0(%r15),%r13
L_73904:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73905:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEFC,%r15
	jne L_73825
L_73906:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404406:
L_73899:
	movq 0x0(%r15),%r13
L_73900:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73901:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEFB,%r15
	jne L_73825
L_73902:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404409:
L_73890:
	movl 0x0(%r15),%r13d
	movl %r13d,0x18(%rbp)
	movq 0x8(%r15),%r13
L_73891:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73892:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEFA,%r15
	jne L_73825
L_73893:
	movq %r13,0x30(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x1C(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_73894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404412:
L_73886:
	movq 0x0(%r15),%r13
L_73887:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73888:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEF9,%r15
	jne L_73825
L_73889:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404415:
L_73877:
	movl 0x0(%r15),%r13d
	movl %r13d,0x18(%rbp)
	movq 0x8(%r15),%r13
L_73878:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73879:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEF8,%r15
	jne L_73825
L_73880:
	movq %r13,0x30(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x1C(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_73881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404418:
L_73873:
	movq 0x0(%r15),%r13
L_73874:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73875:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEF7,%r15
	jne L_73825
L_73876:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404421:
L_73869:
	movq 0x0(%r15),%r13
L_73870:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73871:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEF6,%r15
	jne L_73825
L_73872:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404424:
L_73865:
	movq 0x0(%r15),%r13
L_73866:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_73825
L_73867:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEF5,%r15
	jne L_73825
L_73868:
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_73861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_404427:
L_74541:
	movq %r15,%r13
	shrq $0x10,%r13
	movb %r13b,%r11b
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x89,%r15
	jne L_404430
L_74544:
	movq %r14,%r15
	shrq $0x10,%r15
	movb %r15b,%r10b
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	jne L_73825
L_74546:
	cmpb %r10b,%r11b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404430:
L_74542:
	andq $0x3,%r14
	jnz L_73825
L_74543:
	jmp L_73825
.p2align 0x4
L_404432:
L_74535:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x87,%r15
	jne L_404434
L_74538:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404434:
L_74536:
	andq $0x3,%r14
	jnz L_73825
L_74537:
	jmp L_73825
.p2align 0x4
L_404436:
L_74529:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x86,%r15
	jne L_404438
L_74532:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404438:
L_74530:
	andq $0x3,%r14
	jnz L_73825
L_74531:
	jmp L_73825
.p2align 0x4
L_404440:
L_74523:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x85,%r15
	jne L_404442
L_74526:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404442:
L_74524:
	andq $0x3,%r14
	jnz L_73825
L_74525:
	jmp L_73825
.p2align 0x4
L_404444:
L_74517:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x83,%r15
	jne L_404446
L_74520:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404446:
L_74518:
	andq $0x3,%r14
	jnz L_73825
L_74519:
	jmp L_73825
.p2align 0x4
L_404448:
L_74511:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x82,%r15
	jne L_404450
L_74514:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404450:
L_74512:
	andq $0x3,%r14
	jnz L_73825
L_74513:
	jmp L_73825
.p2align 0x4
L_404452:
L_74505:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x81,%r15
	jne L_404454
L_74508:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404454:
L_74506:
	andq $0x3,%r14
	jnz L_73825
L_74507:
	jmp L_73825
.p2align 0x4
L_404456:
L_74499:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x7F,%r15
	jne L_404458
L_74502:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404458:
L_74500:
	andq $0x3,%r14
	jnz L_73825
L_74501:
	jmp L_73825
.p2align 0x4
L_404460:
L_74493:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x7E,%r15
	jne L_404462
L_74496:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404462:
L_74494:
	andq $0x3,%r14
	jnz L_73825
L_74495:
	jmp L_73825
.p2align 0x4
L_404464:
L_74487:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x7D,%r15
	jne L_404466
L_74490:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404466:
L_74488:
	andq $0x3,%r14
	jnz L_73825
L_74489:
	jmp L_73825
.p2align 0x4
L_404468:
L_74481:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x7B,%r15
	jne L_404470
L_74484:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404470:
L_74482:
	andq $0x3,%r14
	jnz L_73825
L_74483:
	jmp L_73825
.p2align 0x4
L_404472:
L_74475:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x7A,%r15
	jne L_404474
L_74478:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404474:
L_74476:
	andq $0x3,%r14
	jnz L_73825
L_74477:
	jmp L_73825
.p2align 0x4
L_404476:
L_74469:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x79,%r15
	jne L_404478
L_74472:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404478:
L_74470:
	andq $0x3,%r14
	jnz L_73825
L_74471:
	jmp L_73825
.p2align 0x4
L_404480:
L_74463:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x77,%r15
	jne L_404482
L_74466:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404482:
L_74464:
	andq $0x3,%r14
	jnz L_73825
L_74465:
	jmp L_73825
.p2align 0x4
L_404484:
L_74457:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x76,%r15
	jne L_404486
L_74460:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404486:
L_74458:
	andq $0x3,%r14
	jnz L_73825
L_74459:
	jmp L_73825
.p2align 0x4
L_404488:
L_74451:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x75,%r15
	jne L_404490
L_74454:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404490:
L_74452:
	andq $0x3,%r14
	jnz L_73825
L_74453:
	jmp L_73825
.p2align 0x4
L_404492:
L_74445:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x73,%r15
	jne L_404494
L_74448:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404494:
L_74446:
	andq $0x3,%r14
	jnz L_73825
L_74447:
	jmp L_73825
.p2align 0x4
L_404496:
L_74439:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x72,%r15
	jne L_404498
L_74442:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404498:
L_74440:
	andq $0x3,%r14
	jnz L_73825
L_74441:
	jmp L_73825
.p2align 0x4
L_404500:
L_74433:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x71,%r15
	jne L_404502
L_74436:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404502:
L_74434:
	andq $0x3,%r14
	jnz L_73825
L_74435:
	jmp L_73825
.p2align 0x4
L_404504:
L_74427:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x6F,%r15
	jne L_404506
L_74430:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404506:
L_74428:
	andq $0x3,%r14
	jnz L_73825
L_74429:
	jmp L_73825
.p2align 0x4
L_404508:
L_74421:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x6E,%r15
	jne L_404510
L_74424:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404510:
L_74422:
	andq $0x3,%r14
	jnz L_73825
L_74423:
	jmp L_73825
.p2align 0x4
L_404512:
L_74415:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x6D,%r15
	jne L_404514
L_74418:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404514:
L_74416:
	andq $0x3,%r14
	jnz L_73825
L_74417:
	jmp L_73825
.p2align 0x4
L_404516:
L_74409:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x6B,%r15
	jne L_404518
L_74412:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404518:
L_74410:
	andq $0x3,%r14
	jnz L_73825
L_74411:
	jmp L_73825
.p2align 0x4
L_404520:
L_74403:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x6A,%r15
	jne L_404522
L_74406:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404522:
L_74404:
	andq $0x3,%r14
	jnz L_73825
L_74405:
	jmp L_73825
.p2align 0x4
L_404524:
L_74397:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x69,%r15
	jne L_404526
L_74400:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404526:
L_74398:
	andq $0x3,%r14
	jnz L_73825
L_74399:
	jmp L_73825
.p2align 0x4
L_404528:
L_74391:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x67,%r15
	jne L_404530
L_74394:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404530:
L_74392:
	andq $0x3,%r14
	jnz L_73825
L_74393:
	jmp L_73825
.p2align 0x4
L_404532:
L_74385:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x66,%r15
	jne L_404534
L_74388:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404534:
L_74386:
	andq $0x3,%r14
	jnz L_73825
L_74387:
	jmp L_73825
.p2align 0x4
L_404536:
L_74379:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x65,%r15
	jne L_404538
L_74382:
	shrq $0x8,%r14
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	je L_73864
	jmp L_73825
.p2align 0x4
L_404538:
L_74380:
	andq $0x3,%r14
	jnz L_73825
L_74381:
	jmp L_73825
.p2align 0x4
L_404540:
L_74375:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x63,%r15
	je L_73864
L_74376:
	andq $0x3,%r14
	jnz L_73825
L_74377:
	jmp L_73825
.p2align 0x4
L_404543:
L_74371:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x62,%r15
	je L_73864
L_74372:
	andq $0x3,%r14
	jnz L_73825
L_74373:
	jmp L_73825
.p2align 0x4
L_404546:
L_74367:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x61,%r15
	je L_73864
L_74368:
	andq $0x3,%r14
	jnz L_73825
L_74369:
	jmp L_73825
.p2align 0x4
L_404549:
L_74363:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x5F,%r15
	je L_73864
L_74364:
	andq $0x3,%r14
	jnz L_73825
L_74365:
	jmp L_73825
.p2align 0x4
L_404552:
L_74359:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x5E,%r15
	je L_73864
L_74360:
	andq $0x3,%r14
	jnz L_73825
L_74361:
	jmp L_73825
.p2align 0x4
L_404555:
L_74355:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x5D,%r15
	je L_73864
L_74356:
	andq $0x3,%r14
	jnz L_73825
L_74357:
	jmp L_73825
.p2align 0x4
L_404558:
L_74351:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x5B,%r15
	je L_73864
L_74352:
	andq $0x3,%r14
	jnz L_73825
L_74353:
	jmp L_73825
.p2align 0x4
L_404561:
L_74347:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x5A,%r15
	je L_73864
L_74348:
	andq $0x3,%r14
	jnz L_73825
L_74349:
	jmp L_73825
.p2align 0x4
L_404564:
L_74343:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x59,%r15
	je L_73864
L_74344:
	andq $0x3,%r14
	jnz L_73825
L_74345:
	jmp L_73825
.p2align 0x4
L_404567:
L_74339:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x57,%r15
	je L_73864
L_74340:
	andq $0x3,%r14
	jnz L_73825
L_74341:
	jmp L_73825
.p2align 0x4
L_404570:
L_74335:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x56,%r15
	je L_73864
L_74336:
	andq $0x3,%r14
	jnz L_73825
L_74337:
	jmp L_73825
.p2align 0x4
L_404573:
L_74331:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x55,%r15
	je L_73864
L_74332:
	andq $0x3,%r14
	jnz L_73825
L_74333:
	jmp L_73825
.p2align 0x4
L_404576:
L_74327:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x53,%r15
	je L_73864
L_74328:
	andq $0x3,%r14
	jnz L_73825
L_74329:
	jmp L_73825
.p2align 0x4
L_404579:
L_74323:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x52,%r15
	je L_73864
L_74324:
	andq $0x3,%r14
	jnz L_73825
L_74325:
	jmp L_73825
.p2align 0x4
L_404582:
L_74319:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x51,%r15
	je L_73864
L_74320:
	andq $0x3,%r14
	jnz L_73825
L_74321:
	jmp L_73825
.p2align 0x4
L_404585:
L_74315:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x4F,%r15
	je L_73864
L_74316:
	andq $0x3,%r14
	jnz L_73825
L_74317:
	jmp L_73825
.p2align 0x4
L_404588:
L_74311:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x4E,%r15
	je L_73864
L_74312:
	andq $0x3,%r14
	jnz L_73825
L_74313:
	jmp L_73825
.p2align 0x4
L_404591:
L_74307:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x4D,%r15
	je L_73864
L_74308:
	andq $0x3,%r14
	jnz L_73825
L_74309:
	jmp L_73825
.p2align 0x4
L_404594:
L_74303:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x4B,%r15
	je L_73864
L_74304:
	andq $0x3,%r14
	jnz L_73825
L_74305:
	jmp L_73825
.p2align 0x4
L_404597:
L_74299:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x4A,%r15
	je L_73864
L_74300:
	andq $0x3,%r14
	jnz L_73825
L_74301:
	jmp L_73825
.p2align 0x4
L_404600:
L_74295:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x49,%r15
	je L_73864
L_74296:
	andq $0x3,%r14
	jnz L_73825
L_74297:
	jmp L_73825
.p2align 0x4
L_404603:
L_74291:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x47,%r15
	je L_73864
L_74292:
	andq $0x3,%r14
	jnz L_73825
L_74293:
	jmp L_73825
.p2align 0x4
L_404606:
L_74287:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x46,%r15
	je L_73864
L_74288:
	andq $0x3,%r14
	jnz L_73825
L_74289:
	jmp L_73825
.p2align 0x4
L_404609:
L_74283:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x45,%r15
	je L_73864
L_74284:
	andq $0x3,%r14
	jnz L_73825
L_74285:
	jmp L_73825
.p2align 0x4
L_404612:
L_74279:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x43,%r15
	je L_73864
L_74280:
	andq $0x3,%r14
	jnz L_73825
L_74281:
	jmp L_73825
.p2align 0x4
L_404615:
L_74275:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x42,%r15
	je L_73864
L_74276:
	andq $0x3,%r14
	jnz L_73825
L_74277:
	jmp L_73825
.p2align 0x4
L_404618:
L_74271:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x41,%r15
	je L_73864
L_74272:
	andq $0x3,%r14
	jnz L_73825
L_74273:
	jmp L_73825
.p2align 0x4
L_404621:
L_74267:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x3F,%r15
	je L_73864
L_74268:
	andq $0x3,%r14
	jnz L_73825
L_74269:
	jmp L_73825
.p2align 0x4
L_404624:
L_74263:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x3E,%r15
	je L_73864
L_74264:
	andq $0x3,%r14
	jnz L_73825
L_74265:
	jmp L_73825
.p2align 0x4
L_404627:
L_74259:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x3D,%r15
	je L_73864
L_74260:
	andq $0x3,%r14
	jnz L_73825
L_74261:
	jmp L_73825
.p2align 0x4
L_404630:
L_74255:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x3B,%r15
	je L_73864
L_74256:
	andq $0x3,%r14
	jnz L_73825
L_74257:
	jmp L_73825
.p2align 0x4
L_404633:
L_74251:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x3A,%r15
	je L_73864
L_74252:
	andq $0x3,%r14
	jnz L_73825
L_74253:
	jmp L_73825
.p2align 0x4
L_404636:
L_74247:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x39,%r15
	je L_73864
L_74248:
	andq $0x3,%r14
	jnz L_73825
L_74249:
	jmp L_73825
.p2align 0x4
L_404639:
L_74243:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x37,%r15
	je L_73864
L_74244:
	andq $0x3,%r14
	jnz L_73825
L_74245:
	jmp L_73825
.p2align 0x4
L_404642:
L_74239:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x36,%r15
	je L_73864
L_74240:
	andq $0x3,%r14
	jnz L_73825
L_74241:
	jmp L_73825
.p2align 0x4
L_404645:
L_74235:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x35,%r15
	je L_73864
L_74236:
	andq $0x3,%r14
	jnz L_73825
L_74237:
	jmp L_73825
.p2align 0x4
L_404648:
L_74231:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x33,%r15
	je L_73864
L_74232:
	andq $0x3,%r14
	jnz L_73825
L_74233:
	jmp L_73825
.p2align 0x4
L_404651:
L_74227:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x32,%r15
	je L_73864
L_74228:
	andq $0x3,%r14
	jnz L_73825
L_74229:
	jmp L_73825
.p2align 0x4
L_404654:
L_74223:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x31,%r15
	je L_73864
L_74224:
	andq $0x3,%r14
	jnz L_73825
L_74225:
	jmp L_73825
.p2align 0x4
L_404657:
L_74219:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x2F,%r15
	je L_73864
L_74220:
	andq $0x3,%r14
	jnz L_73825
L_74221:
	jmp L_73825
.p2align 0x4
L_404660:
L_74215:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x2E,%r15
	je L_73864
L_74216:
	andq $0x3,%r14
	jnz L_73825
L_74217:
	jmp L_73825
.p2align 0x4
L_404663:
L_74211:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x2D,%r15
	je L_73864
L_74212:
	andq $0x3,%r14
	jnz L_73825
L_74213:
	jmp L_73825
.p2align 0x4
L_404666:
L_74207:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x2B,%r15
	je L_73864
L_74208:
	andq $0x3,%r14
	jnz L_73825
L_74209:
	jmp L_73825
.p2align 0x4
L_404669:
L_74203:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x2A,%r15
	je L_73864
L_74204:
	andq $0x3,%r14
	jnz L_73825
L_74205:
	jmp L_73825
.p2align 0x4
L_404672:
L_74199:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x29,%r15
	je L_73864
L_74200:
	andq $0x3,%r14
	jnz L_73825
L_74201:
	jmp L_73825
.p2align 0x4
L_404675:
L_74195:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x27,%r15
	je L_73864
L_74196:
	andq $0x3,%r14
	jnz L_73825
L_74197:
	jmp L_73825
.p2align 0x4
L_404678:
L_74191:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x26,%r15
	je L_73864
L_74192:
	andq $0x3,%r14
	jnz L_73825
L_74193:
	jmp L_73825
.p2align 0x4
L_404681:
L_74187:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x25,%r15
	je L_73864
L_74188:
	andq $0x3,%r14
	jnz L_73825
L_74189:
	jmp L_73825
.p2align 0x4
L_404684:
L_74183:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x23,%r15
	je L_73864
L_74184:
	andq $0x3,%r14
	jnz L_73825
L_74185:
	jmp L_73825
.p2align 0x4
L_404687:
L_74179:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x22,%r15
	je L_73864
L_74180:
	andq $0x3,%r14
	jnz L_73825
L_74181:
	jmp L_73825
.p2align 0x4
L_404690:
L_74175:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x21,%r15
	je L_73864
L_74176:
	andq $0x3,%r14
	jnz L_73825
L_74177:
	jmp L_73825
.p2align 0x4
L_404693:
L_74171:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x1F,%r15
	je L_73864
L_74172:
	andq $0x3,%r14
	jnz L_73825
L_74173:
	jmp L_73825
.p2align 0x4
L_404696:
L_74167:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x1E,%r15
	je L_73864
L_74168:
	andq $0x3,%r14
	jnz L_73825
L_74169:
	jmp L_73825
.p2align 0x4
L_404699:
L_74163:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x1D,%r15
	je L_73864
L_74164:
	andq $0x3,%r14
	jnz L_73825
L_74165:
	jmp L_73825
.p2align 0x4
L_404702:
L_74159:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x1B,%r15
	je L_73864
L_74160:
	andq $0x3,%r14
	jnz L_73825
L_74161:
	jmp L_73825
.p2align 0x4
L_404705:
L_74155:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x1A,%r15
	je L_73864
L_74156:
	andq $0x3,%r14
	jnz L_73825
L_74157:
	jmp L_73825
.p2align 0x4
L_404708:
L_74151:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x19,%r15
	je L_73864
L_74152:
	andq $0x3,%r14
	jnz L_73825
L_74153:
	jmp L_73825
.p2align 0x4
L_404711:
L_74147:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x17,%r15
	je L_73864
L_74148:
	andq $0x3,%r14
	jnz L_73825
L_74149:
	jmp L_73825
.p2align 0x4
L_404714:
L_74143:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x16,%r15
	je L_73864
L_74144:
	andq $0x3,%r14
	jnz L_73825
L_74145:
	jmp L_73825
.p2align 0x4
L_404717:
L_74139:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x15,%r15
	je L_73864
L_74140:
	andq $0x3,%r14
	jnz L_73825
L_74141:
	jmp L_73825
.p2align 0x4
L_404720:
L_74135:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x13,%r15
	je L_73864
L_74136:
	andq $0x3,%r14
	jnz L_73825
L_74137:
	jmp L_73825
.p2align 0x4
L_404723:
L_74131:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x12,%r15
	je L_73864
L_74132:
	andq $0x3,%r14
	jnz L_73825
L_74133:
	jmp L_73825
.p2align 0x4
L_404726:
L_74127:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x11,%r15
	je L_73864
L_74128:
	andq $0x3,%r14
	jnz L_73825
L_74129:
	jmp L_73825
.p2align 0x4
L_404729:
L_74123:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0xF,%r15
	je L_73864
L_74124:
	andq $0x3,%r14
	jnz L_73825
L_74125:
	jmp L_73825
.p2align 0x4
L_404732:
L_74119:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0xE,%r15
	je L_73864
L_74120:
	andq $0x3,%r14
	jnz L_73825
L_74121:
	jmp L_73825
.p2align 0x4
L_404735:
L_74115:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0xD,%r15
	je L_73864
L_74116:
	andq $0x3,%r14
	jnz L_73825
L_74117:
	jmp L_73825
.p2align 0x4
L_404738:
L_74111:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0xB,%r15
	je L_73864
L_74112:
	andq $0x3,%r14
	jnz L_73825
L_74113:
	jmp L_73825
.p2align 0x4
L_404741:
L_74107:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0xA,%r15
	je L_73864
L_74108:
	andq $0x3,%r14
	jnz L_73825
L_74109:
	jmp L_73825
.p2align 0x4
L_404744:
L_74103:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x9,%r15
	je L_73864
L_74104:
	andq $0x3,%r14
	jnz L_73825
L_74105:
	jmp L_73825
.p2align 0x4
L_404747:
L_74099:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x7,%r15
	je L_73864
L_74100:
	andq $0x3,%r14
	jnz L_73825
L_74101:
	jmp L_73825
.p2align 0x4
L_404750:
L_74095:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x6,%r15
	je L_73864
L_74096:
	andq $0x3,%r14
	jnz L_73825
L_74097:
	jmp L_73825
.p2align 0x4
L_404753:
L_74091:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x5,%r15
	je L_73864
L_74092:
	andq $0x3,%r14
	jnz L_73825
L_74093:
	jmp L_73825
.p2align 0x4
L_404757:
L_74087:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x3,%r15
	je L_73864
L_74088:
	andq $0x3,%r14
	jnz L_73825
L_74089:
	jmp L_73825
.p2align 0x4
L_404760:
L_74083:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x2,%r15
	je L_73864
L_74084:
	andq $0x3,%r14
	jnz L_73825
L_74085:
	jmp L_73825
.p2align 0x4
L_404763:
L_74079:
	movq %r14,%r15
	andq $0xFF,%r15
	cmpq $0x1,%r15
	je L_73864
L_74080:
	andq $0x3,%r14
	jnz L_73825
L_74081:
	jmp L_73825
.p2align 0x4
L_404767:
L_73848:
	movq 0x0(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEB9,%r13
	jne L_73825
L_73849:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE42,%r15
	je L_404769
L_73852:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xE43,%r14
	jne L_73825
L_73853:
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r11
	cmpq %r11,0x8(%r15)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404769:
L_73850:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xE42,%r14
	jne L_73825
L_73851:
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r11
	cmpq %r11,0x8(%r15)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404772:
L_73844:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xEB8,%r11
	jne L_73825
L_73845:
	movl 0x0(%r15),%r11d
	movq 0x8(%r15),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r14)
	jne L_73825
L_73847:
	cmpl %r13d,%r11d
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404775:
L_73827:
	movq 0x0(%r15),%r14
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEB7,%r15
	jne L_73825
L_73828:
	movq 0x0(%r13),%r15
	jmp varsEquals_0
.p2align 0x4
.long 0x4E5
L_73861:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	testl %r15d,%r15d
	jnz L_73864
	jmp L_73825
.p2align 0x4
.long 0x4F4
L_74031:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_73825
L_74033:
	movl 0x1C(%rbp),%r15d
	cmpl %r15d,0x18(%rbp)
	je L_73864
	jmp L_73825
.p2align 0x4
.long 0x4F4
L_74016:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_73825
L_74018:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	je L_73864
	jmp L_73825
.p2align 0x4
.long 0x4F4
L_74003:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	testl %r15d,%r15d
	jz L_73825
L_74005:
	movb 0x19(%rbp),%r15b
	cmpb %r15b,0x18(%rbp)
	je L_73864
	jmp L_73825
.p2align 0x4
.long 0x639
L_73987:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x30(%rbp)
	jz L_73825
L_73989:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_73990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x4F4
L_73974:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_73825
L_73976:
	movl 0x1C(%rbp),%r15d
	cmpl %r15d,0x18(%rbp)
	je L_73864
	jmp L_73825
.p2align 0x4
.long 0x4F4
L_73965:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_73825
L_73967:
	movl 0x1C(%rbp),%r15d
	cmpl %r15d,0x18(%rbp)
	je L_73864
	jmp L_73825
.p2align 0x4
.long 0x4F4
L_73956:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_73825
L_73958:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	je L_73864
	jmp L_73825
.p2align 0x4
.long 0x4F4
L_73931:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_73825
L_73933:
	movl 0x1C(%rbp),%r15d
	cmpl %r15d,0x18(%rbp)
	je L_73864
	jmp L_73825
.p2align 0x4
.long 0x4F4
L_73922:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_73825
L_73924:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	je L_73864
	jmp L_73825
.p2align 0x4
.long 0xB1C
L_73911:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	testl %r15d,%r15d
	jz L_73825
L_73913:
	movb 0x1D(%rbp),%r15b
	cmpb %r15b,0x1C(%rbp)
	jne L_73825
L_73915:
	movl 0x20(%rbp),%r15d
	cmpl %r15d,0x18(%rbp)
	je L_73864
	jmp L_73825
.p2align 0x4
.long 0x4F4
L_73894:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_73825
L_73896:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	je L_73864
	jmp L_73825
.p2align 0x4
.long 0x4F4
L_73881:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_73825
L_73883:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	je L_73864
	jmp L_73825
.p2align 0x4
.long 0x4F4
L_73990:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_73825
L_73992:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	je L_73864
	jmp L_73825
.text
.p2align 0x4
.globl loop_3835
.hidden loop_3835
loop_3835:
L_74557:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_74794
L_74558:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_404817
L_74559:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
L_74560:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_74561
L_74600:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB0,%r15
	je L_404815
	cmpq $0xEB1,%r15
	je L_404813
	cmpq $0xEB2,%r15
	je L_404807
	cmpq $0xEB3,%r15
	je L_404806
	cmpq $0xEB5,%r15
	je L_404805
L_74561:
	movq $0x2783,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x709,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_74562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_404805:
L_74723:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_74724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp slot_0
.p2align 0x4
L_404806:
L_74683:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%rbp
	leaq (L_74684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp slot_0
.p2align 0x4
L_404807:
L_74665:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x20(%rbp)
	cmpq %r11,%r14
	je L_404808
L_74666:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404808:
L_74667:
	movq 0x20(%rbp),%r15
	testq %r15,%r15
	jz L_404812
L_74668:
	cmpq $0x7FFFFFFF,%r15
	ja L_404811
L_74669:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74670
L_74679:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_74680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74680
.p2align 0x4
.long 0x4DF
L_74680:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_74670:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x154F,%rcx
	movq 0x20(%rbp),%rdx
	movq $0x68,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_74671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74671
.p2align 0x4
.long 0x4DF
L_74671:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_74672:
	movq $0x0,0x30(%rbp)
loop_889:
	movq 0x20(%rbp),%r14
	cmpq %r14,0x30(%rbp)
	jl L_404809
L_74673:
	movq 0x28(%rbp),%r14
	movq $0xB3B,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1E39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
L_74571:
	movq $0x1007,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1009,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x2885,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x707,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404809:
L_74674:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_74675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp slot_0
.p2align 0x4
L_404811:
L_74681:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404812:
L_74682:
	movq (globalObjptr+0x2138)(%rip),%r14
	movq %r14,0x28(%rbp)
	jmp L_74672
.p2align 0x4
L_404813:
L_74641:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_404814
L_74642:
	movq %r14,0x40(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_74643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_404814:
L_74660:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_74661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_404815:
L_74601:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%rbp
	leaq (L_74602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp slot_0
.p2align 0x4
L_404817:
L_74794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_74795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74795
.p2align 0x4
.long 0x45B
L_74795:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_74559
.p2align 0x4
.long 0x51E
L_74562:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74563
L_74598:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_74599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74599
.p2align 0x4
.long 0x4AE
L_74599:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_74563:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x145A,%r14
	jne L_404822
L_74565:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_404820
L_74566:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_404819
L_74567:
L_74568:
	movq $0x41C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
L_74569:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_74570:
	movq $0x1E3D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_74571
.p2align 0x4
L_404819:
L_74572:
	movq $0x41C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r14,%r15
	movq %r13,%r14
	jmp L_74569
.p2align 0x4
L_404820:
L_74573:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_74570
L_74574:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
L_74575:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_74576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_404822:
L_74564:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4DD
L_74724:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74725
L_74792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_74793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74793
.p2align 0x4
.long 0x646
L_74793:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_74725:
	movq $0x12B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_404824
L_74726:
	movq %r14,0x50(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_74727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_404824:
L_74787:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_74788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x5AF
L_74684:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74685
L_74721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_74722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74722
.p2align 0x4
.long 0x4AE
L_74722:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_74685:
	movq $0x12B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2783,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x709,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_74686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x1027
L_74675:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74676
L_74677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_74678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74678
.p2align 0x4
.long 0x1028
L_74678:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_74676:
	movq $0x12B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x30(%rbp)
	jmp loop_889
.p2align 0x4
.long 0xB9B
L_74643:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_74644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_74661:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x5AF
L_74602:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74603
L_74639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_74640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74640
.p2align 0x4
.long 0x4AE
L_74640:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_74603:
	movq $0x12B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2783,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x709,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_74604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x4A5
L_74576:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74577
L_74595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_74596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74596
.p2align 0x4
.long 0x637
L_74596:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_74577:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144C,%r15
	jne L_74564
L_74578:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_404829
L_74579:
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_74580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_404829:
L_74592:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_74570
L_74593:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_74575
.p2align 0x4
.long 0x1029
L_74727:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_74728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_74788:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x557
L_74686:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74687
L_74719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_74720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74720
.p2align 0x4
.long 0xFCF
L_74720:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_74687:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x145A,%r14
	jne L_74564
L_74688:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_404834
L_74689:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_404833
L_74690:
L_74691:
	movq $0x41C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
L_74692:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_74693:
	movq $0x1E3B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_74571
.p2align 0x4
L_404833:
L_74694:
	movq $0x41C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r14,%r15
	movq %r13,%r14
	jmp L_74692
.p2align 0x4
L_404834:
L_74695:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_74693
L_74696:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
L_74697:
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_74698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x1025
L_74644:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74645
L_74658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_74659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74659
.p2align 0x4
.long 0x1026
L_74659:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_74645:
	movslq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_404839
L_74648:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_404838
L_74649:
	movl 0x0(%r13),%r15d
	movl %r15d,0x40(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_74650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_404838:
L_74657:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404839:
L_74647:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_155:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74662
L_74663:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_74664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74664
.p2align 0x4
.long 0x451
L_74664:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_74662:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x557
L_74604:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74605
L_74637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_74638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74638
.p2align 0x4
.long 0xFCF
L_74638:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_74605:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x145A,%r14
	jne L_74564
L_74606:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_404843
L_74607:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_404842
L_74608:
L_74609:
	movq $0x41C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
L_74610:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_74611:
	movq $0x1E35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_74571
.p2align 0x4
L_404842:
L_74612:
	movq $0x41C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r14,%r15
	movq %r13,%r14
	jmp L_74610
.p2align 0x4
L_404843:
L_74613:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_74611
L_74614:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
L_74615:
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_74616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x97C
L_74580:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74581
L_74590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_74591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74591
.p2align 0x4
.long 0x637
L_74591:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_74581:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_404847
L_74583:
	movl 0x0(%r14),%r13d
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0x12,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_74584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_404847:
L_74582:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x102A
L_74728:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74729
L_74785:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_74786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74786
.p2align 0x4
.long 0x1030
L_74786:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_74729:
	movslq 0x20(%rbp),%r15
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_74647
L_74731:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_74657
L_74732:
	movl 0x0(%r13),%r15d
	movl %r15d,0x50(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_74733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1
bug_156:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74789
L_74790:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_74791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74791
.p2align 0x4
.long 0x451
L_74791:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_74789:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E3
L_74698:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74699
L_74716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_74717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74717
.p2align 0x4
.long 0x4F0
L_74717:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_74699:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144C,%r15
	jne L_74564
L_74700:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_404853
L_74701:
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_74702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_404853:
L_74713:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_74693
L_74714:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_74697
.p2align 0x4
.long 0x643
L_74650:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_74651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3837
.p2align 0x4
.long 0x4E3
L_74616:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74617
L_74634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_74635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74635
.p2align 0x4
.long 0x4F0
L_74635:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_74617:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144C,%r15
	jne L_74564
L_74618:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_404857
L_74619:
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_74620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_404857:
L_74631:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_74611
L_74632:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_74615
.p2align 0x4
.long 0x5EF
L_74584:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74585
L_74588:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_74589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74589
.p2align 0x4
.long 0x4E7
L_74589:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_74585:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_74570
L_74586:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_74575
.p2align 0x4
.long 0x102B
L_74733:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_74734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3837
.p2align 0x4
.long 0xBC0
L_74702:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74703
L_74711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_74712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74712
.p2align 0x4
.long 0x4F0
L_74712:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_74703:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_74582
L_74704:
	movl 0x0(%r14),%r13d
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x12,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_74705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x643
L_74651:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_74652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp slot_0
.p2align 0x4
.long 0xBC0
L_74620:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74621
L_74629:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_74630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74630
.p2align 0x4
.long 0x4F0
L_74630:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_74621:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_74582
L_74622:
	movl 0x0(%r14),%r13d
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x12,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_74623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0xC73
L_74734:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_74735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x639
L_74705:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74706
L_74709:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_74710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74710
.p2align 0x4
.long 0x518
L_74710:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_74706:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_74693
L_74707:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_74697
.p2align 0x4
.long 0x4E0
L_74652:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74653
L_74654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_74655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74655
.p2align 0x4
.long 0x4E9
L_74655:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_74653:
	movq $0x12B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1E37,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_74571
.p2align 0x4
.long 0x639
L_74623:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74624
L_74627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_74628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74628
.p2align 0x4
.long 0x518
L_74628:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_74624:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_74611
L_74625:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_74615
.p2align 0x4
.long 0x102C
L_74735:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74736
L_74782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_74783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74783
.p2align 0x4
.long 0x8E5
L_74783:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_74736:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144C,%r14
	jne L_74564
L_74737:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_404873
L_74738:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_404872
L_74739:
L_74740:
	movq $0x41EB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
L_74741:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
useful_0:
	movq $0x2783,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x709,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_74742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_404872:
L_74777:
	movq $0x41EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r14,%r15
	movq %r13,%r14
	jmp L_74741
.p2align 0x4
L_404873:
L_74778:
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (useful_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1368
.p2align 0x4
.long 0x102D
L_74742:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74743
L_74775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_74776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74776
.p2align 0x4
.long 0x102E
L_74776:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_74743:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x145A,%r14
	jne L_74564
L_74744:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_404877
L_74745:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_404876
L_74746:
L_74747:
	movq $0x41C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
L_74748:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
L_74749:
	movq $0x1E3F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_74571
.p2align 0x4
L_404876:
L_74750:
	movq $0x41C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r14,%r15
	movq %r13,%r14
	jmp L_74748
.p2align 0x4
L_404877:
L_74751:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_74749
L_74752:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
L_74753:
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_74754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x102C
useful_1:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb useful_0
L_74780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_74781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74781
.p2align 0x4
.long 0x102F
L_74781:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp useful_0
.p2align 0x4
.long 0x8A4
L_74754:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74755
L_74772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_74773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74773
.p2align 0x4
.long 0x4EB
L_74773:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_74755:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144C,%r15
	jne L_74564
L_74756:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_404881
L_74757:
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_74758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_404881:
L_74769:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_74749
L_74770:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_74753
.p2align 0x4
.long 0x4E4
L_74758:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74759
L_74767:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_74768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74768
.p2align 0x4
.long 0x4EB
L_74768:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_74759:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_74582
L_74760:
	movl 0x0(%r14),%r13d
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movb $0x12,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_74761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0xA24
L_74761:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74762
L_74765:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_74766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74766
.p2align 0x4
.long 0xBC4
L_74766:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_74762:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_74749
L_74763:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_74753
.text
.p2align 0x4
.globl slot_0
.hidden slot_0
slot_0:
L_74796:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_74800
L_74797:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_404889
L_74798:
	movq $0x2781,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xFF3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x277F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_74799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3835
.p2align 0x4
L_404889:
L_74800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_74801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74801
.p2align 0x4
.long 0x45B
L_74801:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_74798
.p2align 0x4
.long 0x48F
L_74799:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3837
.hidden loop_3837
loop_3837:
L_74802:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_74803
L_74804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_74805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74805
.p2align 0x4
.long 0x45B
L_74805:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_74803:
	movq 0x8(%rbp),%r15
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x0(%rbp)
	jmp loop_3835
.text
.p2align 0x4
.globl x_1368
.hidden x_1368
x_1368:
L_74806:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_74807
L_74823:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_74824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74824
.p2align 0x4
.long 0x451
L_74824:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_74807:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_74808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x1
L_74808:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_404894
L_74810:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1E,%r15
	jne L_404893
L_74812:
	movq 0x0(%r13),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_74813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_404893:
L_74811:
	movq (globalObjptr+0x2130)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404894:
L_74809:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_74813:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_74809
L_74814:
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r15
	je L_404895
L_74815:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_74816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_404895:
L_74822:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x521
L_74816:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74817
L_74820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_74821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74821
.p2align 0x4
.long 0x4E8
L_74821:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_74817:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145A,%r13
	jne L_404897
L_74819:
	movl 0x0(%r14),%r13d
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x3,0x8(%rbp)
	jmp loop_3819
.p2align 0x4
L_404897:
L_74818:
	movq (globalObjptr+0x1508)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl coerce_2
.hidden coerce_2
coerce_2:
L_74825:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_74826
L_75017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_75018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75018
.p2align 0x4
.long 0x45F
L_75018:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_74826:
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_74827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x5AF
L_74827:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_74828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x51E
L_74828:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	cmpq %r15,0x10(%rbp)
	movq %r15,0x18(%rbp)
	je L_404900
L_74829:
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_74830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_404900:
L_75016:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5AF
L_74830:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_404901
L_74832:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_74833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_404901:
L_74831:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51E
L_74833:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_74831
L_74834:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF1B,%r14
	je L_404916
	cmpq $0xF1C,%r14
	je L_404909
	cmpq $0xF1D,%r14
	je L_404907
	cmpq $0xF1E,%r14
	je L_404905
	cmpq $0xF1F,%r14
	je L_404903
L_74835:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1A,%r15
	jne L_404902
L_74837:
	jmp unify_5
.p2align 0x4
L_404902:
L_74836:
	movq (globalObjptr+0x2128)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404903:
L_75014:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1F,%r15
	jne L_74836
L_75015:
	jmp unify_5
.p2align 0x4
L_404905:
L_74982:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1E,%r15
	jne L_74836
L_74983:
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_74984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_404907:
L_74980:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1D,%r15
	jne L_74836
L_74981:
	jmp unify_5
.p2align 0x4
L_404909:
L_74904:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1C,%r15
	jne L_74836
L_74905:
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x28(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_74907
L_74908:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_404913
L_74910:
	cmpl %r11d,%ecx
	jne L_74912
L_74913:
	cmpl $0x0,%r11d
	jl L_404911
L_74914:
	xorl %ecx,%ecx
loop_890:
	cmpl 0x28(%rbp),%ecx
	jnl L_404910
L_74916:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x2C(%rbp)
	movslq %ecx,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_74917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_2
.p2align 0x4
L_404910:
L_74915:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404911:
L_74912:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404913:
L_74907:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404916:
L_74838:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1B,%r15
	jne L_74836
L_74839:
	movq %r14,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_74840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_2
.p2align 0x4
.long 0x519
L_74984:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_74985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0xB21
L_74917:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_74918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x519
L_74840:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_74841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_2
.p2align 0x4
.long 0x71D
L_74985:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r15,0x28(%rbp)
	je L_404919
L_74986:
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_74987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_404919:
L_75013:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB21
L_74918:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_74919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x5F1
L_74841:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_74842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x48F
L_74987:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_74831
L_74988:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_74989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x1031
L_74919:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	cmpq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	je L_404921
L_74920:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_74921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_404921:
L_74945:
	movl 0x2C(%rbp),%ecx
	jmp loop_890
.p2align 0x4
.long 0x5F1
L_74842:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_74843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x519
L_74989:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74990
L_75011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_75012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75012
.p2align 0x4
.long 0x51C
L_75012:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_74990:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_74831
L_74991:
	movq 0x8(%r14),%r15
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_404924
L_74992:
	cmpq $0x1,%r15
	je L_404923
L_74993:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_404922
L_74994:
L_74995:
	movq $0x41E9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_74996:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404922:
L_74997:
	movq $0x41E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_74996
.p2align 0x4
L_404923:
L_74998:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404924:
L_74999:
	cmpq $0x1,%r15
	je L_404925
L_75000:
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_404925:
L_75010:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB21
L_74921:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144C,%r15
	jne L_74831
L_74922:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_74923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x7B4
L_74843:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	cmpq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	je L_404929
L_74844:
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_74845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_404929:
L_74903:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_75001:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_74831
L_75002:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_404930
L_75003:
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_404930:
L_75009:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1031
L_74923:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144C,%r15
	jne L_74831
L_74924:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_74925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x5F1
L_74845:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144C,%r15
	jne L_74831
L_74846:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_74847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x459
L_75004:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75005
L_75007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_75008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75008
.p2align 0x4
.long 0x508
L_75008:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_75005:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145A,%r13
	jne L_404934
L_75006:
	movl 0x0(%r14),%r13d
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x3,0x8(%rbp)
	jmp loop_3819
.p2align 0x4
L_404934:
L_74869:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1032
L_74925:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_74926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x7B4
L_74847:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144C,%r15
	jne L_74831
L_74848:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_74849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x1033
L_74926:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74927
L_74976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_74977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74977
.p2align 0x4
.long 0x1038
L_74977:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_74927:
	movq 0x38(%rbp),%r15
	movq 0x50(%rbp),%r14
	cmpq %r14,%r15
	je L_74933
L_74928:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x144C,%r11
	jne L_74853
L_74929:
	movl 0x0(%r13),%r11d
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x144C,%r10
	jne L_74853
L_74930:
	movl 0x0(%r13),%r10d
	cmpl %r10d,%r11d
	jl L_404947
L_74931:
	movq $0x289B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r13,0x0(%r15)
	cmpl %r11d,%r10d
	jne L_404945
L_74966:
	movq 0x0(%r14),%r15
	movq %r15,%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x144C,%r10
	jne L_404944
L_74967:
	movl 0x0(%r13),%r11d
	incl %r11d
	jo L_404943
L_74968:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_74869
L_74969:
	movq 0x8(%r15),%r13
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_404940
L_74970:
	movq %r15,0x38(%rbp)
L_74935:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_404939
L_74936:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r15),%r14
	cmpq $0x1,%r13
	je L_404938
L_74937:
L_74938:
	cmpq $0x1,%r14
	je L_404937
L_74939:
L_74940:
	movq $0x272B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
L_74941:
	movq $0x2781,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_74942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_404937:
	movq %r13,%r15
	jmp L_74941
.p2align 0x4
L_404938:
L_74949:
	movq %r14,%r15
	jmp L_74941
.p2align 0x4
L_404939:
L_74950:
	movq 0x30(%rbp),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_74951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_404940:
L_74958:
	cmpq $0x1,0x48(%rbp)
	je L_74945
L_74959:
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_74960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_404943:
L_74892:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404944:
L_74853:
	movq (globalObjptr+0x1688)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404945:
L_74933:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_74958
L_74934:
	movq %r15,0x38(%rbp)
	jmp L_74935
.p2align 0x4
L_404947:
L_74972:
	movq $0x289B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_74958
L_74973:
	movq %r15,0x38(%rbp)
	jmp L_74935
.p2align 0x4
.long 0xDDE
L_74849:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_74850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x5E3
L_74942:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74943
L_74946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_74947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74947
.p2align 0x4
.long 0x8AB
L_74947:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_74943:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_74869
L_74944:
	movl 0x0(%r14),%r13d
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_74945
.p2align 0x4
.long 0x1034
L_74951:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74952
L_74955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_74956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74956
.p2align 0x4
.long 0x1035
L_74956:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_74952:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_74869
L_74953:
	movl 0x0(%r14),%r13d
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x12,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_74954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x1036
L_74960:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74961
L_74963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_74964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74964
.p2align 0x4
.long 0x1037
L_74964:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_74961:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_74869
L_74962:
	movl 0x0(%r14),%r13d
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x12,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_74954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x9B2
L_74850:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74851
L_74901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_74902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74902
.p2align 0x4
.long 0xDE1
L_74902:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_74851:
	movq 0x30(%rbp),%r15
	movq 0x48(%rbp),%r14
	cmpq %r14,%r15
	je L_74858
L_74852:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x144C,%r11
	jne L_74853
L_74854:
	movl 0x0(%r13),%r11d
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x144C,%r10
	jne L_74853
L_74855:
	movl 0x0(%r13),%r10d
	cmpl %r10d,%r11d
	jl L_404969
L_74856:
	movq $0x289B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r13,0x0(%r15)
	cmpl %r11d,%r10d
	jne L_404967
L_74890:
	movq 0x0(%r14),%r15
	movq %r15,%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x144C,%r10
	jne L_74853
L_74891:
	movl 0x0(%r13),%r11d
	incl %r11d
	jo L_74892
L_74893:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_74869
L_74894:
	movq 0x8(%r15),%r13
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_404962
L_74895:
	movq %r15,0x30(%rbp)
L_74860:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_404961
L_74861:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r15),%r14
	cmpq $0x1,%r13
	je L_404960
L_74862:
L_74863:
	cmpq $0x1,%r14
	je L_404959
L_74864:
L_74865:
	movq $0x272B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
L_74866:
	movq $0x2781,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_74867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_404959:
	movq %r13,%r15
	jmp L_74866
.p2align 0x4
L_404960:
L_74874:
	movq %r14,%r15
	jmp L_74866
.p2align 0x4
L_404961:
L_74875:
	movq 0x28(%rbp),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_74876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_404962:
L_74882:
	cmpq $0x1,0x40(%rbp)
	je L_404963
L_74883:
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_74884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_404963:
L_74889:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404967:
L_74858:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_74882
L_74859:
	movq %r15,0x30(%rbp)
	jmp L_74860
.p2align 0x4
L_404969:
L_74897:
	movq $0x289B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_74882
L_74898:
	movq %r15,0x30(%rbp)
	jmp L_74860
.p2align 0x4
.long 0x8AA
L_74954:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_74945
.p2align 0x4
.long 0x69B
L_74867:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74868
L_74871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_74872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74872
.p2align 0x4
.long 0x6AE
L_74872:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_74868:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_74869
L_74870:
	movl 0x0(%r14),%r13d
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x868
L_74876:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74877
L_74879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_74880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74880
.p2align 0x4
.long 0x86A
L_74880:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_74877:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_74869
L_74878:
	movl 0x0(%r14),%r13d
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x12,0x8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x78D
L_74884:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_74885
L_74887:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_74888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_74888
.p2align 0x4
.long 0x78E
L_74888:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_74885:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_74869
L_74886:
	movl 0x0(%r14),%r13d
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x12,0x8(%rbp)
	jmp loop_3819
.text
.p2align 0x4
.globl unify_5
.hidden unify_5
unify_5:
L_75019:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_75020
L_75098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_75099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75099
.p2align 0x4
.long 0x45F
L_75099:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_75020:
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_75021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x5AF
L_75021:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_75022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x51E
L_75022:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	je L_404982
L_75023:
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_75024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_404982:
L_75097:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5AF
L_75024:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_404983
L_75026:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_75027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_404983:
L_75025:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51E
L_75027:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_75025
L_75028:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x4DC
L_75029:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x5EF
L_75030:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75031
L_75095:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_75096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75096
.p2align 0x4
.long 0x4E9
L_75096:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_75031:
	movq 0x8(%rbp),%r14
	movq 0x20(%rbp),%r13
	cmpq %r13,%r14
	je L_75038
L_75032:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0x1442,%r11
	jne L_75033
L_75034:
	movl 0x0(%r15),%r11d
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0x1442,%r10
	jne L_75033
L_75035:
	movl 0x0(%r15),%r10d
	cmpl %r10d,%r11d
	jl L_405010
L_75036:
	movq $0x2887,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r13,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r15,0x0(%r13)
	cmpl %r10d,%r11d
	jne L_405004
L_75075:
	movq 0x0(%r14),%r13
	movq %r13,%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x1442,%r10
	jne L_405003
L_75076:
	movl 0x0(%r15),%r11d
	incl %r11d
	jo L_405002
L_75078:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_405001
L_75080:
	movq 0x8(%r13),%r15
	movq $0x2885,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r11d,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r8,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF1B,%r15
	je L_404999
	cmpq $0xF1C,%r15
	je L_404992
	cmpq $0xF1D,%r15
	je L_404990
	cmpq $0xF1E,%r15
	je L_404988
	cmpq $0xF1F,%r15
	je L_404986
L_75081:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
L_75040:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF1A,%r13
	jne L_404985
L_75042:
	movq %r15,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x38,%rbp
	leaq (L_75043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp EqEq_0
.p2align 0x4
L_404985:
L_75041:
	movq (globalObjptr+0x2120)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404986:
L_75086:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
L_75072:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF1F,%r13
	jne L_75041
L_75073:
	movq %r15,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x38,%rbp
	leaq (L_75074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_5
.p2align 0x4
L_404988:
L_75085:
	movq 0x0(%r14),%r15
L_75069:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF1E,%r13
	jne L_75041
L_75070:
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp EqEq_0
.p2align 0x4
L_404990:
L_75084:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
L_75065:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF1D,%r13
	jne L_75041
L_75066:
	movq %r15,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x38,%rbp
	leaq (L_75067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp EqEq_0
.p2align 0x4
L_404992:
L_75083:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
L_75049:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF1C,%r14
	jne L_75041
L_75050:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movl %r11d,0x30(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_75052
L_75053:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_404996
L_75055:
	cmpl %ecx,%r11d
	jne L_75057
L_75058:
	cmpl $0x0,%r11d
	jl L_404994
L_75059:
	xorl %ecx,%ecx
loop_891:
	cmpl 0x30(%rbp),%ecx
	jnl L_404993
L_75061:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x34(%rbp)
	movslq %ecx,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_75062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unifySlot_0
.p2align 0x4
L_404993:
L_75060:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404994:
L_75057:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404996:
L_75052:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_404999:
L_75082:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
L_75045:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF1B,%r13
	jne L_75041
L_75046:
	movq %r15,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x38,%rbp
	leaq (L_75047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_5
.p2align 0x4
L_405001:
L_75079:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405002:
L_75077:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405003:
L_75033:
	movq (globalObjptr+0x1688)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405004:
L_75038:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF1B,%r15
	je L_405009
	cmpq $0xF1C,%r15
	je L_405008
	cmpq $0xF1D,%r15
	je L_405007
	cmpq $0xF1E,%r15
	je L_405006
	cmpq $0xF1F,%r15
	je L_405005
L_75039:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	jmp L_75040
.p2align 0x4
L_405005:
L_75071:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	jmp L_75072
.p2align 0x4
L_405006:
L_75068:
	movq 0x0(%r14),%r15
	jmp L_75069
.p2align 0x4
L_405007:
L_75064:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	jmp L_75065
.p2align 0x4
L_405008:
L_75048:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	jmp L_75049
.p2align 0x4
L_405009:
L_75044:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	jmp L_75045
.p2align 0x4
L_405010:
L_75087:
	movq $0x2887,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF1B,%r15
	je L_405015
	cmpq $0xF1C,%r15
	je L_405014
	cmpq $0xF1D,%r15
	je L_405013
	cmpq $0xF1E,%r15
	je L_405012
	cmpq $0xF1F,%r15
	je L_405011
L_75088:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	jmp L_75040
.p2align 0x4
L_405011:
L_75093:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	jmp L_75072
.p2align 0x4
L_405012:
L_75092:
	movq 0x0(%r14),%r15
	jmp L_75069
.p2align 0x4
L_405013:
L_75091:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	jmp L_75065
.p2align 0x4
L_405014:
L_75090:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	jmp L_75049
.p2align 0x4
L_405015:
L_75089:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	jmp L_75045
.p2align 0x4
.long 0x5ED
L_75043:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp unifySlot_0
.p2align 0x4
.long 0x5ED
L_75074:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp unifySlot_0
.p2align 0x4
.long 0x5ED
L_75067:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp unifySlot_0
.p2align 0x4
.long 0x1039
L_75062:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x34(%rbp),%ecx
	jmp loop_891
.p2align 0x4
.long 0x5ED
L_75047:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp unifySlot_0
.text
.p2align 0x4
.globl EqEq_0
.hidden EqEq_0
EqEq_0:
L_75100:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_75101
L_75165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_75166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75166
.p2align 0x4
.long 0x45F
L_75166:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_75101:
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_75102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x5AF
L_75102:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_75103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x51E
L_75103:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	cmpq %r15,0x10(%rbp)
	movq %r15,0x18(%rbp)
	je L_405021
L_75104:
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_75105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405021:
L_75164:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5AF
L_75105:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_405022
L_75107:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_75108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405022:
L_75106:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51E
L_75108:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75106
L_75109:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x65B
L_75110:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x4A5
L_75111:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75112
L_75162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_75163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75163
.p2align 0x4
.long 0x637
L_75163:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_75112:
	movq 0x20(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	je L_75119
L_75113:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x145A,%r11
	jne L_75114
L_75115:
	movl 0x0(%r13),%r11d
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x145A,%r10
	jne L_75114
L_75116:
	movl 0x0(%r13),%r10d
	cmpl %r10d,%r11d
	jl L_405034
L_75117:
	movq $0x28B7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r13,0x0(%r14)
	cmpl %r11d,%r10d
	jne L_405032
L_75151:
	movq 0x0(%r15),%r14
	movq %r14,%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x145A,%r10
	jne L_405031
L_75152:
	movl 0x0(%r13),%r11d
	incl %r11d
	jo L_405030
L_75154:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145A,%r13
	jne L_405029
L_75155:
	movq 0x8(%r14),%r13
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r14,0x0(%r15)
	cmpq $0x1,0x10(%rbp)
	je L_405027
L_75121:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_405026
L_75122:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r15),%r14
	cmpq $0x1,%r13
	je L_405025
L_75123:
L_75124:
	cmpq $0x1,%r14
	je L_405024
L_75125:
L_75126:
	movq $0x272B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
L_75127:
	movq $0x2783,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_75128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405024:
	movq %r13,%r15
	jmp L_75127
.p2align 0x4
L_405025:
L_75135:
	movq %r14,%r15
	jmp L_75127
.p2align 0x4
L_405026:
L_75136:
	movq 0x8(%rbp),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405027:
L_75143:
	cmpq $0x1,0x18(%rbp)
	je L_405028
L_75144:
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405028:
L_75150:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405029:
L_75130:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405030:
L_75153:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405031:
L_75114:
	movq (globalObjptr+0x1688)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405032:
L_75119:
	cmpq $0x1,0x10(%rbp)
	je L_75143
	jmp L_75121
.p2align 0x4
L_405034:
L_75158:
	movq $0x28B7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	cmpq $0x1,0x10(%rbp)
	je L_75143
	jmp L_75121
.p2align 0x4
.long 0x2B
L_75128:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75129
L_75132:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_75133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75133
.p2align 0x4
.long 0x2C
L_75133:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_75129:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145A,%r13
	jne L_75130
L_75131:
	movl 0x0(%r14),%r13d
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_75137:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75138
L_75140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_75141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75141
.p2align 0x4
.long 0x4B1
L_75141:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_75138:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145A,%r13
	jne L_75130
L_75139:
	movl 0x0(%r14),%r13d
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x3,0x8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x490
L_75145:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75146
L_75148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_75149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75149
.p2align 0x4
.long 0x4B1
L_75149:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_75146:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145A,%r13
	jne L_75130
L_75147:
	movl 0x0(%r14),%r13d
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x3,0x8(%rbp)
	jmp loop_3819
.text
.p2align 0x4
.globl unifySlot_0
.hidden unifySlot_0
unifySlot_0:
L_75167:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_75168
L_75233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_75234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75234
.p2align 0x4
.long 0x45F
L_75234:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_75168:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_5
.p2align 0x4
.long 0x490
L_75169:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x490
L_75170:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x8A9
L_75171:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	cmpq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	je L_405047
L_75172:
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_405047:
L_75232:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_75173:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144C,%r15
	jne L_405048
L_75175:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_405048:
L_75174:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8A9
L_75176:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144C,%r15
	jne L_75174
L_75177:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_75178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x4A6
L_75178:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_75179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0xB9E
L_75179:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75180
L_75230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_75231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75231
.p2align 0x4
.long 0x720
L_75231:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_75180:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq %r14,%r15
	je L_75187
L_75181:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x144C,%r11
	jne L_75182
L_75183:
	movl 0x0(%r13),%r11d
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x144C,%r10
	jne L_75182
L_75184:
	movl 0x0(%r13),%r10d
	cmpl %r10d,%r11d
	jl L_405060
L_75185:
	movq $0x289B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r13,0x0(%r15)
	cmpl %r11d,%r10d
	jne L_405058
L_75219:
	movq 0x0(%r14),%r15
	movq %r15,%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x144C,%r10
	jne L_405057
L_75220:
	movl 0x0(%r13),%r11d
	incl %r11d
	jo L_405056
L_75222:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_405055
L_75223:
	movq 0x8(%r15),%r13
	movq $0x2899,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_405053
L_75224:
	movq %r15,0x18(%rbp)
L_75189:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_405052
L_75190:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r15),%r14
	cmpq $0x1,%r13
	je L_405051
L_75191:
L_75192:
	cmpq $0x1,%r14
	je L_405050
L_75193:
L_75194:
	movq $0x272B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
L_75195:
	movq $0x2781,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_405050:
	movq %r13,%r15
	jmp L_75195
.p2align 0x4
L_405051:
L_75203:
	movq %r14,%r15
	jmp L_75195
.p2align 0x4
L_405052:
L_75204:
	movq 0x10(%rbp),%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_75205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_405053:
L_75211:
	cmpq $0x1,0x28(%rbp)
	je L_405054
L_75212:
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_75213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_405054:
L_75218:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405055:
L_75198:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405056:
L_75221:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405057:
L_75182:
	movq (globalObjptr+0x1688)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405058:
L_75187:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_75211
L_75188:
	movq %r15,0x18(%rbp)
	jmp L_75189
.p2align 0x4
L_405060:
L_75226:
	movq $0x289B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_75211
L_75227:
	movq %r15,0x18(%rbp)
	jmp L_75189
.p2align 0x4
.long 0x48F
L_75196:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75197
L_75200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_75201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75201
.p2align 0x4
.long 0x5E5
L_75201:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_75197:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_75198
L_75199:
	movl 0x0(%r14),%r13d
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71E
L_75205:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75206
L_75208:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_75209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75209
.p2align 0x4
.long 0x51C
L_75209:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_75206:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_75198
L_75207:
	movl 0x0(%r14),%r13d
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x12,0x8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x5ED
L_75213:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75214
L_75216:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_75217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75217
.p2align 0x4
.long 0x4FC
L_75217:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_75214:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	jne L_75198
L_75215:
	movl 0x0(%r14),%r13d
	movq $0x2899,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x12,0x8(%rbp)
	jmp loop_3819
.text
.p2align 0x4
.globl tabulate_24
.hidden tabulate_24
tabulate_24:
L_75235:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_75236
L_75287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_75288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75288
.p2align 0x4
.long 0x457
L_75288:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_75236:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_405081
L_75237:
	cmpq $0x7FFFFFFF,%rdx
	ja L_405080
L_75238:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1457,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_75239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75239
.p2align 0x4
.long 0x452
L_75239:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_75240:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_892:
	movq 0x18(%rbp),%r14
	cmpq 0x10(%rbp),%r14
	jnl L_405079
L_75242:
	movl %r14d,%r13d
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_405078
L_75243:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1CD6,%r15
	je L_405077
	cmpq $0x1CD7,%r15
	je L_405076
	cmpq $0x1CD8,%r15
	je L_405075
	cmpq $0x1CD9,%r15
	je L_405074
	cmpq $0x1CDA,%r15
	je L_405073
	cmpq $0x1CDB,%r15
	je L_405072
L_75244:
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_75245:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_892
.p2align 0x4
L_405072:
L_75283:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq %r13d,%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3835
.p2align 0x4
L_405073:
L_75251:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movslq %r13d,%r15
	movq 0x10(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq $0x1,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_75252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3835
.p2align 0x4
L_405074:
L_75250:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq %r13d,%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3835
.p2align 0x4
L_405075:
L_75249:
	movq 0x0(%r14),%r11
	movslq %r13d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_75245
.p2align 0x4
L_405076:
L_75248:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movslq %r13d,%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1394
.p2align 0x4
L_405077:
L_75246:
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movslq %r13d,%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3835
.p2align 0x4
L_405078:
L_75284:
	movq (globalObjptr+0x4A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405079:
L_75241:
	movq 0x8(%rbp),%r15
	movq $0xB05,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405080:
L_75285:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405081:
L_75286:
	movq (globalObjptr+0xB78)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_75240
.p2align 0x4
.long 0x5F8
L_75247:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_75245
.p2align 0x4
.long 0x557
L_75252:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75253
L_75281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_75282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75282
.p2align 0x4
.long 0x575
L_75282:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_75253:
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r11),%r14
	movq 0x28(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_405094
L_75255:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_405093
L_75256:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_75258:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_405092
L_75273:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD32,%r11
	jne L_405091
L_75274:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_405088
L_75259:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_405087
L_75261:
	cmpq $0x1,%r15
	je L_405083
L_75262:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_75258
.p2align 0x4
L_405083:
L_75263:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75264
L_75271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_75272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75272
.p2align 0x4
.long 0x5B4
L_75272:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_75264:
	movl 0x20(%rbp),%ecx
L_75265:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_405085
L_75267:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_75269
L_75270:
	movl %ecx,0x0(%r15)
L_75269:
	movq $0x1A65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
	jmp L_75245
.p2align 0x4
L_405085:
L_75266:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405087:
L_75260:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405088:
L_75276:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_75266
L_75277:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_405089
L_75279:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405089:
L_75278:
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405091:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_75259
.p2align 0x4
L_405092:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_75259
.p2align 0x4
L_405093:
L_75280:
	xorl %ecx,%ecx
	jmp L_75265
.p2align 0x4
L_405094:
L_75254:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1436
.hidden x_1436
x_1436:
L_75289:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_75290
L_75494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_75495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75495
.p2align 0x4
.long 0x4AE
L_75495:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_75290:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x28(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq $0x1,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_75291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3835
.p2align 0x4
.long 0x517
L_75291:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1,%r14
	je L_405132
	cmpq $0x2,%r14
	je L_405131
	cmpq $0x3,%r14
	je L_405129
	cmpq $0x5,%r14
	je sub_0
	cmpq $0x6,%r14
	je L_405127
	cmpq $0x7,%r14
	je update_0
	cmpq $0x3A,%r14
	je L_405123
	cmpq $0x3D,%r14
	je L_405119
	cmpq $0x45,%r14
	je L_405116
	cmpq $0x46,%r14
	je L_405114
	cmpq $0x47,%r14
	je L_405112
	cmpq $0x59,%r14
	je L_405110
	cmpq $0x5A,%r14
	je L_405108
	cmpq $0x5D,%r14
	je L_405106
	cmpq $0x5E,%r14
	je L_405104
L_75292:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_75293
L_75358:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEF5,%r14
	je update_1
	cmpq $0xEF6,%r14
	je sub_2
	cmpq $0xF11,%r14
	je L_405097
L_75293:
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp someUseful_0
.p2align 0x4
L_405097:
L_75389:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_405100
L_75391:
	cmpl $0x0,%r13d
	jl L_405099
L_75392:
	movl $0x0,0x2C(%rbp)
loop_895:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x2C(%rbp)
	jl L_405098
L_75393:
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_75376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deepMakeUseful_0
.p2align 0x4
L_405098:
L_75394:
	movslq 0x2C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_75395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deepMakeUseful_0
.p2align 0x4
L_405099:
L_75348:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405100:
L_75301:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
sub_2:
sub_0:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x1,%r14
	jna L_405101
L_75379:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_405101:
L_75361:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
update_1:
update_0:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x0,%r14
	jna L_75361
L_75362:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_405104:
L_75488:
	movq 0x10(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_75361
L_75490:
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_405106:
L_75481:
	movq 0x10(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_75361
L_75483:
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_405108:
L_75468:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x20(%rbp)
	cmpq $0x1,%r13
	jna L_75361
L_75470:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_405110:
L_75461:
	movq 0x10(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_75361
L_75463:
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_405112:
L_75455:
	movq 0x10(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_75361
L_75457:
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_405114:
L_75449:
	movq 0x10(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_75361
L_75451:
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_405116:
L_75440:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	cmpq $0x1,%r13
	jna L_75361
L_75442:
	movq 0x8(%r14),%r11
	movq %r11,0x20(%rbp)
	cmpq $0x0,%r13
	jna L_75361
L_75444:
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_405119:
L_75432:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x28(%rbp)
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_75301
L_75434:
	cmpl $0x0,%r11d
	jl L_75348
L_75435:
	movl $0x0,0x2C(%rbp)
loop_897:
	movl 0x2C(%rbp),%r15d
	cmpl 0x28(%rbp),%r15d
	jnl L_405120
L_75437:
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_75438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deepMakeUseful_0
.p2align 0x4
L_405120:
L_75305:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405123:
L_75424:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x28(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_75301
L_75426:
	cmpl $0x0,%r11d
	jl L_75348
L_75427:
	movl $0x0,0x2C(%rbp)
loop_896:
	movl 0x2C(%rbp),%r15d
	cmpl 0x28(%rbp),%r15d
	jnl L_75305
L_75429:
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_75430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deepMakeUseful_0
.p2align 0x4
L_405127:
L_75412:
	movq 0x10(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_75361
L_75414:
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_405129:
L_75405:
	movq 0x10(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_75361
L_75407:
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_405131:
L_75404:
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405132:
L_75397:
	movq 0x10(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_75361
L_75399:
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x4A5
L_75294:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_405134
L_75295:
	movq 0x18(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_75296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3836
.p2align 0x4
L_405134:
L_75357:
	movq $0x1,0x28(%rbp)
L_75297:
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_75298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1435
.p2align 0x4
.long 0x48F
L_75376:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_75305
.p2align 0x4
.long 0x64E
L_75395:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	incl 0x2C(%rbp)
	jmp loop_895
.p2align 0x4
.long 0x609
L_75380:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_405136
L_75381:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1E,%r15
	jne L_405135
L_75382:
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3838
.p2align 0x4
L_405135:
L_75371:
	movq (globalObjptr+0x2130)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405136:
L_75317:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x609
L_75363:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_75317
L_75364:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1F,%r15
	jne L_405138
L_75366:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	cmpq $0x1,0x20(%rbp)
	jna L_75361
L_75368:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_75369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_405138:
L_75365:
	movq (globalObjptr+0x2148)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x519
L_75491:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_75317
L_75492:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1A,%r15
	jne L_405140
L_75493:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_75376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_2
.p2align 0x4
L_405140:
L_75486:
	movq (globalObjptr+0x2160)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_75484:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1442,%r14
	jne L_75317
L_75485:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1A,%r15
	jne L_75486
L_75487:
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r14
	movq %r14,%r15
return_0:
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_2
.p2align 0x4
.long 0x609
L_75471:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_75317
L_75472:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1E,%r15
	jne L_75371
L_75473:
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3838
.p2align 0x4
.long 0x48F
L_75464:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1442,%r14
	jne L_75317
L_75465:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1B,%r15
	jne L_405146
L_75467:
	movq 0x8(%r13),%r15
	jmp return_0
.p2align 0x4
L_405146:
L_75466:
	movq (globalObjptr+0x2178)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x519
L_75458:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_75317
L_75459:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1D,%r15
	jne L_405148
L_75460:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_75376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_2
.p2align 0x4
L_405148:
L_75447:
	movq (globalObjptr+0x2158)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_75452:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1442,%r14
	jne L_75317
L_75453:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1D,%r15
	jne L_75447
L_75454:
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r14
	movq %r14,%r15
	jmp return_0
.p2align 0x4
.long 0x519
L_75445:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_75317
L_75446:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1D,%r15
	jne L_75447
L_75448:
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_75376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_2
.p2align 0x4
.long 0x64E
L_75438:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	incl 0x2C(%rbp)
	jmp loop_897
.p2align 0x4
.long 0x64E
L_75430:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	incl 0x2C(%rbp)
	jmp loop_896
.p2align 0x4
.long 0x48F
L_75415:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_75317
L_75416:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x48F
L_75408:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1442,%r14
	jne L_75317
L_75409:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1F,%r15
	jne L_405155
L_75410:
	movq 0x8(%r13),%r15
	jmp return_0
.p2align 0x4
L_405155:
L_75402:
	movq (globalObjptr+0x2150)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x519
L_75400:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_75317
L_75401:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1F,%r15
	jne L_75402
L_75403:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_75376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_2
.p2align 0x4
.long 0x4E3
L_75296:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_75297
.p2align 0x4
.long 0x4A6
L_75298:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movb 0x38(%rbp),%r15b
	movb %r15b,0x30(%rbp)
	testb %r15b,%r15b
	jz L_405162
L_75299:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_75301
L_75302:
	cmpl $0x0,%r13d
	jl L_75348
L_75303:
	movl $0x0,0x24(%rbp)
loop_893:
	movl 0x24(%rbp),%r15d
	cmpl 0x20(%rbp),%r15d
	jnl L_75305
L_75306:
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x30(%rbp)
	movq %r13,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_75307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp someUseful_0
.p2align 0x4
L_405162:
L_75349:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_75301
L_75351:
	cmpl $0x0,%r13d
	jl L_75348
L_75352:
	movl $0x0,0x2C(%rbp)
loop_894:
	movl 0x2C(%rbp),%r15d
	cmpl 0x28(%rbp),%r15d
	jnl L_75305
L_75354:
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_75355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deepMakeUseful_0
.p2align 0x4
.long 0x609
L_75383:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq $0x0,0x20(%rbp)
	jna L_75361
L_75385:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x4E2
L_75369:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_75317
L_75370:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1E,%r15
	jne L_75371
L_75372:
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_75373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3838
.p2align 0x4
.long 0x609
L_75474:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq $0x0,0x20(%rbp)
	jna L_75361
L_75476:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x519
L_75417:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_75317
L_75418:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF1F,%r14
	jne L_75419
L_75420:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1B,%r15
	jne L_405170
L_75421:
	movq %r14,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x38,%rbp
	leaq (L_75422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_5
.p2align 0x4
L_405170:
L_75419:
	movq (globalObjptr+0x2180)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x786
L_75307:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_405173
L_75308:
	movq 0x30(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_75309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3836
.p2align 0x4
L_405173:
L_75311:
	incl 0x24(%rbp)
	jmp loop_893
.p2align 0x4
.long 0x64E
L_75355:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	incl 0x2C(%rbp)
	jmp loop_894
.p2align 0x4
.long 0x48F
L_75386:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1442,%r14
	jne L_75317
L_75387:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1F,%r15
	jne L_75365
L_75388:
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r14
	movq %r14,%r15
	jmp return_0
.p2align 0x4
.long 0x4E2
L_75373:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq $0x2,0x20(%rbp)
	jna L_75361
L_75375:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_75376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_2
.p2align 0x4
.long 0x48F
L_75477:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1442,%r14
	jne L_75317
L_75478:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1B,%r15
	jne L_405177
L_75480:
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r14
	movq %r14,%r15
	jmp return_0
.p2align 0x4
L_405177:
L_75479:
	movq (globalObjptr+0x2170)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71D
L_75422:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unifySlot_0
.p2align 0x4
.long 0xA43
L_75309:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_75310:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_75311
L_75312:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_75313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0xA43
L_75313:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_75314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0xAA1
L_75314:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r15,0x30(%rbp)
	je L_75311
L_75315:
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_75316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0xA43
L_75316:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75317
L_75318:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_75319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0xAA1
L_75319:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75320
L_75343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_75344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75344
.p2align 0x4
.long 0x70A
L_75344:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_75320:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75317
L_75321:
	movq 0x8(%r14),%r15
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_405184
L_75322:
	cmpq $0x1,%r15
	je L_75311
L_75323:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_405182
L_75324:
L_75325:
	movq $0x41E9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_75326:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_75311
.p2align 0x4
L_405182:
L_75327:
	movq $0x41E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_75326
.p2align 0x4
L_405184:
L_75329:
	cmpq $0x1,%r15
	je L_75311
L_75330:
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_75331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0xA43
L_75331:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75317
L_75332:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_75311
L_75333:
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_75334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x786
L_75334:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75335
L_75339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_75340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75340
.p2align 0x4
.long 0x9A9
L_75340:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_75335:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145A,%r13
	jne L_405190
L_75337:
	movl 0x0(%r14),%r13d
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x3,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_75338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_405190:
L_75336:
	movq (globalObjptr+0x1508)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E2
L_75338:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_75311
.text
.p2align 0x4
.globl someUseful_0
.hidden someUseful_0
someUseful_0:
L_75496:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_75497
L_75520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_75521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75521
.p2align 0x4
.long 0x451
L_75521:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_75497:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_75498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x1
L_75498:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_405201
L_75500:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1B,%r15
	je L_405200
	cmpq $0xF1C,%r15
	je L_405196
	cmpq $0xF1D,%r15
	je L_405195
	cmpq $0xF1E,%r15
	je L_405194
	cmpq $0xF1F,%r15
	je L_405193
L_75501:
	movq 0x8(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405193:
L_75519:
	movq 0x10(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405194:
L_75518:
	movq 0x0(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405195:
L_75517:
	movq 0x8(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405196:
L_75507:
	movq 0x0(%r13),%r15
	movq %r15,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x8(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_405197
L_75508:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405197:
L_75509:
	cmpl $0x0,0x8(%rbp)
	jl L_405199
L_75510:
	movl $0x0,0xC(%rbp)
loop_898:
	movl 0x8(%rbp),%r15d
	cmpl %r15d,0xC(%rbp)
	jl L_405198
L_75511:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405198:
L_75512:
	movslq 0xC(%rbp),%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_75513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp someUseful_0
.p2align 0x4
L_405199:
L_75516:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405200:
L_75502:
	movq 0x8(%r13),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_75503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_405201:
L_75499:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x9A7
L_75513:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_405202
L_75514:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405202:
L_75515:
	incl 0xC(%rbp)
	jmp loop_898
.p2align 0x4
.long 0x1
L_75503:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_75499
L_75504:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1E,%r15
	jne L_405203
L_75506:
	movq 0x0(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405203:
L_75505:
	movq (globalObjptr+0x2130)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3836
.hidden loop_3836
loop_3836:
loopS_5:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_75522
L_75544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_75545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75545
.p2align 0x4
.long 0x45F
L_75545:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_75522:
	movq 0x0(%rbp),%r15
loop_899:
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_75523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x521
L_75523:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_405214
L_75525:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1B,%r15
	je L_405213
	cmpq $0xF1C,%r15
	je L_405209
	cmpq $0xF1D,%r15
	je L_405208
	cmpq $0xF1E,%r15
	je L_405207
	cmpq $0xF1F,%r15
	je L_405206
L_75526:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_75527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp EqEq_0
.p2align 0x4
L_405206:
L_75541:
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_75542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp EqEq_0
.p2align 0x4
L_405207:
L_75540:
	movq 0x0(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp EqEq_0
.p2align 0x4
L_405208:
L_75538:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_75539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp EqEq_0
.p2align 0x4
L_405209:
L_75530:
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_405210
L_75531:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405210:
L_75532:
	cmpl $0x0,0x18(%rbp)
	jl L_405212
L_75533:
	movl $0x0,0x1C(%rbp)
loop_900:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_405211
L_75534:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405211:
L_75535:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_75536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3836
.p2align 0x4
L_405212:
L_75537:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405213:
L_75528:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_75529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3836
.p2align 0x4
L_405214:
L_75524:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_75527:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp loop_899
.p2align 0x4
.long 0x5EF
L_75542:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_75543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3836
.p2align 0x4
.long 0x4E5
L_75539:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp loop_899
.p2align 0x4
.long 0x4F4
L_75536:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_900
.p2align 0x4
.long 0x4E5
L_75529:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp loop_899
.p2align 0x4
.long 0x4E0
L_75543:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp loop_899
.text
.p2align 0x4
.globl deepMakeUseful_0
.hidden deepMakeUseful_0
deepMakeUseful_0:
loopS_6:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_75546
L_75691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_75692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75692
.p2align 0x4
.long 0x45F
L_75692:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_75546:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
loop_901:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_75547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x4E3
L_75547:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_405224
L_75549:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1B,%r15
	je L_405223
	cmpq $0xF1C,%r15
	je L_405219
	cmpq $0xF1D,%r15
	je L_405218
	cmpq $0xF1E,%r15
	je L_405217
	cmpq $0xF1F,%r15
	je L_405216
L_75550:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405216:
L_75678:
	movq 0x10(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405217:
L_75587:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_75588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405218:
L_75575:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405219:
L_75565:
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_405222
L_75568:
	cmpl $0x0,%r13d
	jl L_405221
L_75569:
	movl $0x0,0x1C(%rbp)
loop_902:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_405220
L_75570:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405220:
L_75571:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_75572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deepMakeUseful_0
.p2align 0x4
L_405221:
L_75574:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405222:
L_75567:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405223:
L_75563:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_75564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deepMakeUseful_0
.p2align 0x4
L_405224:
L_75548:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5EF
L_75551:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75548
L_75552:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_405225
L_75553:
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405225:
L_75559:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp loop_901
.p2align 0x4
.long 0x4A5
L_75679:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75548
L_75680:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_405227
L_75681:
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_75682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405227:
L_75686:
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_75687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deepMakeUseful_0
.p2align 0x4
.long 0x4EC
L_75588:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75548
L_75589:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_405229
L_75590:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_75591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405229:
L_75595:
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_75596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x5EF
L_75576:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75548
L_75577:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_405231
L_75578:
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405231:
L_75583:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp loop_901
.p2align 0x4
.long 0x4F4
L_75572:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_902
.p2align 0x4
.long 0x4E5
L_75564:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp loop_901
.p2align 0x4
.long 0x5FF
L_75554:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75555
L_75560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_75561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75561
.p2align 0x4
.long 0x4E9
L_75561:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_75555:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145A,%r13
	jne L_405233
L_75557:
	movl 0x0(%r14),%r13d
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0x3,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_75558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_405233:
L_75556:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x679
L_75682:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75683
L_75688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_75689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75689
.p2align 0x4
.long 0x637
L_75689:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_75683:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145A,%r13
	jne L_75556
L_75684:
	movl 0x0(%r14),%r13d
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movb $0x3,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_75685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x496
L_75687:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp loop_901
.p2align 0x4
.long 0x8A4
L_75591:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75592
L_75675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_75676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75676
.p2align 0x4
.long 0x4EB
L_75676:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_75592:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145A,%r13
	jne L_75556
L_75593:
	movl 0x0(%r14),%r13d
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movb $0x3,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_75594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x679
L_75596:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1442,%r14
	jne L_75548
L_75597:
	movq 0x8(%r15),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r14
L_75598:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_75599
L_75600:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB4,%r15
	jne L_405254
L_75601:
	movq 0x0(%r14),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_405253
L_75603:
	movq %r14,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_405252
L_75604:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_75606:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_75607
L_75650:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xD31,%r11
	jne L_75607
L_75651:
	movq 0x8(%r15),%r11
	movq 0x18(%rbp),%r10
	cmpq %r10,0x0(%r15)
	je L_405243
L_75607:
	incl %ecx
	jo L_405242
L_75609:
	cmpq $0x1,%r14
	je L_405239
L_75610:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_75606
.p2align 0x4
L_405239:
L_75611:
L_75612:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_405241
L_75614:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_215
L_75649:
	movl %ecx,0x0(%r15)
x_215:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%r13),%r11
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	jne L_405240
L_75647:
	movq %r11,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_75648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_405240:
L_75616:
	movq %r13,%r15
L_75617:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_75618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_405241:
L_75613:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405242:
L_75608:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405243:
L_75653:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_75613
L_75654:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_405248
L_75673:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_75656:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_405247
L_75657:
	movl $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x18(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_75567
L_75659:
	cmpl $0x0,%r14d
	jl L_75574
L_75660:
	movl $0x0,0x1C(%rbp)
loop_903:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_405244
L_75661:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405244:
L_75662:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_75663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_19
.p2align 0x4
L_405247:
L_75672:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405248:
L_75655:
	movq %r11,%r15
	jmp L_75656
.p2align 0x4
L_405252:
L_75674:
	xorl %ecx,%ecx
	jmp L_75612
.p2align 0x4
L_405253:
L_75602:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405254:
L_75599:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5FF
L_75579:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75580
L_75584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_75585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75585
.p2align 0x4
.long 0x4E9
L_75585:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_75580:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145A,%r13
	jne L_75556
L_75581:
	movl 0x0(%r14),%r13d
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0x3,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_75582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x4E0
L_75558:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_75559
.p2align 0x4
.long 0x5FF
L_75685:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_75686
.p2align 0x4
.long 0x4E3
L_75594:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_75595
.p2align 0x4
.long 0x51A
L_75648:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_75617
.p2align 0x4
.long 0x1
L_75618:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_75619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x785
L_75663:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_75567
L_75665:
	cmpl $0x0,%r13d
	jl L_75574
L_75666:
	movl $0x0,0x20(%rbp)
loop_904:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x20(%rbp)
	jl L_405259
L_75667:
	incl 0x1C(%rbp)
	jmp loop_903
.p2align 0x4
L_405259:
L_75668:
	movslq 0x20(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_75669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deepMakeUseful_0
.p2align 0x4
.long 0x4E0
L_75582:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_75583
.p2align 0x4
.long 0x4AF
L_75619:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF048)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_75620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x103A
L_75669:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	incl 0x20(%rbp)
	jmp loop_904
.p2align 0x4
.long 0x5AF
L_75620:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_75621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_75621:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75622
L_75645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_75646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75646
.p2align 0x4
.long 0x4AE
L_75646:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_75622:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_75623:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_75608
L_75624:
	cmpq $0x1,%r14
	je L_405262
L_75625:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_75623
.p2align 0x4
L_405262:
L_75626:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75627
L_75643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_75644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75644
.p2align 0x4
.long 0x4E6
L_75644:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_75627:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_405263
L_75628:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_83:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_83+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_405263:
L_75642:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_83
.p2align 0x4
.long 0x1
rev_83:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_405269
L_75629:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_75630:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405268
.p2align 0x4,,0x7
L_75631:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_405267
L_75632:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_75630
.p2align 0x4
L_405267:
L_75634:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_75635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_405268:
L_75639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_75640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75640
.p2align 0x4
.long 0x45B
L_75640:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_75631
.p2align 0x4
L_405269:
L_75641:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_75634
.p2align 0x4
.long 0x1
L_75635:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75636
L_75637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_75638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75638
.p2align 0x4
.long 0x451
L_75638:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_75636:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3838
.hidden loop_3838
loop_3838:
loopS_7:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_75693
L_75839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_75840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75840
.p2align 0x4
.long 0x45F
L_75840:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_75693:
	movq 0x0(%rbp),%r15
loop_905:
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_75694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x521
L_75694:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_405280
L_75696:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1B,%r15
	je L_405279
	cmpq $0xF1C,%r15
	je L_405275
	cmpq $0xF1D,%r15
	je L_405274
	cmpq $0xF1E,%r15
	je L_405273
	cmpq $0xF1F,%r15
	je L_405272
L_75697:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405272:
L_75805:
	movq 0x10(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405273:
L_75774:
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_75775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405274:
L_75741:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405275:
L_75733:
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_405276
L_75734:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405276:
L_75735:
	cmpl $0x0,0x18(%rbp)
	jl L_405278
L_75736:
	movl $0x0,0x1C(%rbp)
loop_906:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_405277
L_75737:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405277:
L_75738:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_75739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3838
.p2align 0x4
L_405278:
L_75740:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405279:
L_75731:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_75732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3838
.p2align 0x4
L_405280:
L_75695:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5EF
L_75698:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x4A5
L_75806:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_75807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x4E5
L_75775:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x5EF
L_75742:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x4F4
L_75739:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_906
.p2align 0x4
.long 0x4E5
L_75732:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp loop_905
.p2align 0x4
.long 0x4A5
L_75699:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	cmpq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	je L_405281
L_75700:
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405281:
L_75711:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp loop_905
.p2align 0x4
.long 0x4E3
L_75807:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	cmpq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	je L_405282
L_75808:
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405282:
L_75819:
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_75820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3838
.p2align 0x4
.long 0x5EF
L_75776:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r15,0x18(%rbp)
	je L_405283
L_75777:
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_75778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405283:
L_75804:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A5
L_75743:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	cmpq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	je L_405284
L_75744:
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405284:
L_75755:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp loop_905
.p2align 0x4
.long 0x4E0
L_75701:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75695
L_75702:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x5FF
L_75809:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75695
L_75810:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x496
L_75820:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp loop_905
.p2align 0x4
.long 0x521
L_75778:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75695
L_75779:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_75780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x4E0
L_75745:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75695
L_75746:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x5EF
L_75703:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75704
L_75728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_75729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75729
.p2align 0x4
.long 0x4E9
L_75729:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_75704:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75695
L_75705:
	movq 0x8(%r14),%r15
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_405291
L_75706:
	cmpq $0x1,%r15
	je L_75711
L_75707:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_405289
L_75708:
L_75709:
	movq $0x41E9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_75710:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_75711
.p2align 0x4
L_405289:
L_75712:
	movq $0x41E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_75710
.p2align 0x4
L_405291:
L_75714:
	cmpq $0x1,%r15
	je L_75711
L_75715:
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x4A5
L_75811:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75812
L_75836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_75837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75837
.p2align 0x4
.long 0x637
L_75837:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_75812:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75695
L_75813:
	movq 0x8(%r14),%r15
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_405297
L_75814:
	cmpq $0x1,%r15
	je L_75819
L_75815:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_405295
L_75816:
L_75817:
	movq $0x41E9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_75818:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_75819
.p2align 0x4
L_405295:
L_75821:
	movq $0x41E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_75818
.p2align 0x4
L_405297:
L_75823:
	cmpq $0x1,%r15
	je L_75819
L_75824:
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x4E5
L_75780:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75781
L_75802:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_75803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75803
.p2align 0x4
.long 0x4E7
L_75803:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_75781:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75695
L_75782:
	movq 0x8(%r14),%r15
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_405303
L_75783:
	cmpq $0x1,%r15
	je L_405302
L_75784:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_405301
L_75785:
L_75786:
	movq $0x41E9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_75787:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405301:
L_75788:
	movq $0x41E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_75787
.p2align 0x4
L_405302:
L_75789:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405303:
L_75790:
	cmpq $0x1,%r15
	je L_405304
L_75791:
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_75792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405304:
L_75801:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5EF
L_75747:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75748
L_75771:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_75772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75772
.p2align 0x4
.long 0x4E9
L_75772:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_75748:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75695
L_75749:
	movq 0x8(%r14),%r15
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_405309
L_75750:
	cmpq $0x1,%r15
	je L_75755
L_75751:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_405307
L_75752:
L_75753:
	movq $0x41E9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_75754:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_75755
.p2align 0x4
L_405307:
L_75756:
	movq $0x41E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_75754
.p2align 0x4
L_405309:
L_75758:
	cmpq $0x1,%r15
	je L_75755
L_75759:
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x4E0
L_75716:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75695
L_75717:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_75711
L_75718:
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x5FF
L_75825:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75695
L_75826:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_75819
L_75827:
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x521
L_75792:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75695
L_75793:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_405317
L_75794:
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_75795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_405317:
L_75800:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E0
L_75760:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_75695
L_75761:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_75755
L_75762:
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x5EF
L_75719:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75720
L_75724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_75725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75725
.p2align 0x4
.long 0x4E9
L_75725:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_75720:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145A,%r13
	jne L_405321
L_75722:
	movl 0x0(%r14),%r13d
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0x3,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_75723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_405321:
L_75721:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A5
L_75828:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75829
L_75832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_75833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75833
.p2align 0x4
.long 0x637
L_75833:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_75829:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145A,%r13
	jne L_75721
L_75830:
	movl 0x0(%r14),%r13d
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movb $0x3,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_75831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x2B
L_75795:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75796
L_75798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_75799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75799
.p2align 0x4
.long 0x2C
L_75799:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_75796:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145A,%r13
	jne L_75721
L_75797:
	movl 0x0(%r14),%r13d
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movb $0x3,0x8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x5EF
L_75763:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75764
L_75767:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_75768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75768
.p2align 0x4
.long 0x4E9
L_75768:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_75764:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145A,%r13
	jne L_75721
L_75765:
	movl 0x0(%r14),%r13d
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0x3,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_75766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x4E0
L_75723:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_75711
.p2align 0x4
.long 0x5FF
L_75831:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_75819
.p2align 0x4
.long 0x4E0
L_75766:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_75755
.text
.p2align 0x4
.globl ofConst_0
.hidden ofConst_0
ofConst_0:
L_75841:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_75842
L_75876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_75877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75877
.p2align 0x4
.long 0x45F
L_75877:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_75842:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%r15),%r10
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_405334
L_75843:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r9
	shrq $0x1,%r9
	cmpq $0xE4A,%r9
	je L_405333
	cmpq $0xE4B,%r9
	je L_405330
	cmpq $0xE4C,%r9
	je L_405329
L_75844:
	movq 0x0(%r15),%r9
	movq %r9,0x8(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x20(%rbp)
	movq %r9,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_405329:
L_75874:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405330:
L_75868:
	movq 0x0(%r15),%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_405332
L_75869:
	xorb %dl,%dl
real_10:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	testb %dl,%dl
	jnz L_405331
L_75870:
L_75871:
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x8(%rbp)
	movzbq %dl,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0x0(%rbp)
	jmp lookup_1
.p2align 0x4
L_405331:
L_75872:
	movq %r10,%r15
	jmp L_75871
.p2align 0x4
L_405332:
L_75873:
	movb $0x1,%dl
	jmp real_10
.p2align 0x4
L_405333:
L_75859:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x18(%rbp)
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_405334:
L_75875:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A5
L_75845:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75846
L_75857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_75858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75858
.p2align 0x4
.long 0x764
L_75858:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_75846:
	movslq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_405337
L_75849:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_405336
L_75850:
	movl 0x0(%r13),%r15d
	movl %r15d,0x28(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_75851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405336:
L_75856:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405337:
L_75848:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5EF
L_75860:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75861
L_75866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_75867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75867
.p2align 0x4
.long 0x4E1
L_75867:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_75861:
	movslq 0x20(%rbp),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_75848
L_75863:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_75856
L_75864:
	movl 0x0(%r13),%r15d
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x2B
L_75851:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75852
L_75853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_75854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75854
.p2align 0x4
.long 0x2C
L_75854:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_75852:
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x8(%rbp)
	movq $0x1D63,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp lookup_1
.text
.p2align 0x4
.globl tabulate_25
.hidden tabulate_25
tabulate_25:
L_75878:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_75879
L_75930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_75931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75931
.p2align 0x4
.long 0x457
L_75931:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_75879:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_405352
L_75880:
	cmpq $0x7FFFFFFF,%rdx
	ja L_405351
L_75881:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x146D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_75882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75882
.p2align 0x4
.long 0x452
L_75882:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_75883:
	movq $0x0,0x18(%rbp)
loop_907:
	movq 0x10(%rbp),%r15
	cmpq %r15,0x18(%rbp)
	jl L_405343
L_75884:
	movq 0x8(%rbp),%r15
	movq $0x9F9,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405343:
L_75885:
	movq 0x18(%rbp),%r15
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_405350
L_75886:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1C75,%r13
	je L_405349
	cmpq $0x1C76,%r13
	je L_405348
	cmpq $0x1C77,%r13
	je L_405347
	cmpq $0x1C78,%r13
	je L_405346
	cmpq $0x1C79,%r13
	je L_405345
	cmpq $0x1C7A,%r13
	je L_405344
L_75887:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3839
.p2align 0x4
L_405344:
L_75926:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3840
.p2align 0x4
L_405345:
L_75925:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3839
.p2align 0x4
L_405346:
L_75893:
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movslq %r14d,%r13
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	addq $0x38,%rbp
	leaq (L_75894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3839
.p2align 0x4
L_405347:
L_75892:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1396
.p2align 0x4
L_405348:
L_75891:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3839
.p2align 0x4
L_405349:
L_75890:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_75888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3839
.p2align 0x4
L_405350:
L_75927:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405351:
L_75928:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405352:
L_75929:
	movq (globalObjptr+0xBF8)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_75883
.p2align 0x4
.long 0x5F8
L_75888:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
L_75889:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_907
.p2align 0x4
.long 0x557
L_75894:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75895
L_75923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_75924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75924
.p2align 0x4
.long 0x575
L_75924:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_75895:
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r11),%r14
	movq 0x28(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_405365
L_75897:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_405364
L_75898:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_75900:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_405363
L_75915:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE5,%r11
	jne L_405362
L_75916:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_405359
L_75901:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_405358
L_75903:
	cmpq $0x1,%r15
	je L_405354
L_75904:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_75900
.p2align 0x4
L_405354:
L_75905:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75906
L_75913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_75914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75914
.p2align 0x4
.long 0x5B4
L_75914:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_75906:
	movl 0x20(%rbp),%ecx
L_75907:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_405356
L_75909:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_75911
L_75912:
	movl %ecx,0x0(%r15)
L_75911:
	movq $0x19CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
	jmp L_75889
.p2align 0x4
L_405356:
L_75908:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405358:
L_75902:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405359:
L_75918:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_75908
L_75919:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_405360
L_75921:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405360:
L_75920:
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405362:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_75901
.p2align 0x4
L_405363:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_75901
.p2align 0x4
L_405364:
L_75922:
	xorl %ecx,%ecx
	jmp L_75907
.p2align 0x4
L_405365:
L_75896:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3839
.hidden loop_3839
loop_3839:
L_75932:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_76003
L_75933:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405375
L_75934:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
L_75935:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_75936
L_75938:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB0,%r15
	je L_405373
	cmpq $0xEB1,%r15
	je L_405372
	cmpq $0xEB2,%r15
	je L_405370
	cmpq $0xEB3,%r15
	je L_405369
	cmpq $0xEB4,%r15
	je L_405368
	cmpq $0xEB5,%r15
	je L_405367
L_75936:
	movq $0x107F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x107D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1DD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_75937:
	movq $0x1003,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x2,0x0(%r14)
	movq $0x1005,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x2889,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405367:
L_75981:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x1079,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x1077,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x107B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_75982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3839
.p2align 0x4
L_405368:
L_75980:
	movq $0x1089,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x1085,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1087,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1DD1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq %r11,%r15
	jmp L_75937
.p2align 0x4
L_405369:
L_75975:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_75976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3839
.p2align 0x4
L_405370:
L_75968:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_405371
L_75970:
	movl %r13d,0x18(%rbp)
	movq $0x38EB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_75971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_405371:
L_75969:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405372:
L_75944:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_75945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3839
.p2align 0x4
L_405373:
L_75939:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_75940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3839
.p2align 0x4
L_405375:
L_76003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_76004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76004
.p2align 0x4
.long 0x45F
L_76004:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_75934
.p2align 0x4
.long 0x4DD
L_75982:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_405377
L_75983:
	movq %r14,0x40(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_75984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_405377:
L_75998:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_75999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4AF
L_75976:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75977
L_75978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_75979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75979
.p2align 0x4
.long 0x45F
L_75979:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_75977:
	movq $0x1073,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x1071,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1075,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x1DCF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_75937
.p2align 0x4
.long 0x4AF
L_75971:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75972
L_75973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_75974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75974
.p2align 0x4
.long 0x45F
L_75974:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_75972:
	movq $0x1DCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_75937
.p2align 0x4
.long 0x65B
L_75945:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_405380
L_75946:
	movq %r14,0x38(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_75947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_405380:
L_75963:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_75964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4AF
L_75940:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75941
L_75942:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_75943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75943
.p2align 0x4
.long 0x45F
L_75943:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_75941:
	movq $0x1DC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_75937
.p2align 0x4
.long 0x525
L_75984:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_75985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_75999:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x556
L_75947:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_75948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_75964:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xFB0
L_75985:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75986
L_75996:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_75997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75997
.p2align 0x4
.long 0xFB9
L_75997:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_75986:
	movslq 0x18(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_405383
L_75988:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_405382
L_75989:
	movl 0x0(%r13),%r15d
	movl %r15d,0x40(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_75990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405382:
L_75960:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405383:
L_75951:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_158:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76000
L_76001:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76002
.p2align 0x4
.long 0x451
L_76002:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76000:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x103B
L_75948:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75949
L_75961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_75962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75962
.p2align 0x4
.long 0x103C
L_75962:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_75949:
	movslq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_75951
L_75952:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_75960
L_75953:
	movl 0x0(%r13),%r15d
	movl %r15d,0x38(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_75954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1
bug_157:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75965
L_75966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_75967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75967
.p2align 0x4
.long 0x451
L_75967:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_75965:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x557
L_75990:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_75991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3839
.p2align 0x4
.long 0x456
L_75954:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_75955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3839
.p2align 0x4
.long 0x466
L_75991:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75992
L_75993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_75994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75994
.p2align 0x4
.long 0x579
L_75994:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_75992:
	movq $0x1DD5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_75937
.p2align 0x4
.long 0x966
L_75955:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_75956
L_75957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_75958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_75958
.p2align 0x4
.long 0x52C
L_75958:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_75956:
	movq $0x1DCB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_75937
.text
.p2align 0x4
.globl loop_3840
.hidden loop_3840
loop_3840:
L_76005:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_76076
L_76006:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405400
L_76007:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
L_76008:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_76009
L_76011:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB0,%r15
	je L_405398
	cmpq $0xEB1,%r15
	je L_405397
	cmpq $0xEB2,%r15
	je L_405395
	cmpq $0xEB3,%r15
	je L_405394
	cmpq $0xEB4,%r15
	je L_405393
	cmpq $0xEB5,%r15
	je L_405392
L_76009:
	movq $0x107F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x107D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1DD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_76010:
	movq $0x1003,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x2,0x0(%r14)
	movq $0x1005,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x2889,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405392:
L_76054:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x1079,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1077,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x107B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_76055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3840
.p2align 0x4
L_405393:
L_76053:
	movq $0x1089,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1085,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1087,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1DD1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq %r11,%r15
	jmp L_76010
.p2align 0x4
L_405394:
L_76048:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_76049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3840
.p2align 0x4
L_405395:
L_76041:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_405396
L_76043:
	movl %r13d,0x18(%rbp)
	movq $0x38F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_76044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
L_405396:
L_76042:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405397:
L_76017:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_76018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3840
.p2align 0x4
L_405398:
L_76012:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_76013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3840
.p2align 0x4
L_405400:
L_76076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_76077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76077
.p2align 0x4
.long 0x45F
L_76077:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_76007
.p2align 0x4
.long 0x4DD
L_76055:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_405402
L_76056:
	movq %r14,0x40(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_76057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_405402:
L_76071:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_76072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4AF
L_76049:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76050
L_76051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_76052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76052
.p2align 0x4
.long 0x45F
L_76052:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_76050:
	movq $0x1073,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1071,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1075,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x1DCF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_76010
.p2align 0x4
.long 0x4AF
L_76044:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76045
L_76046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_76047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76047
.p2align 0x4
.long 0x45F
L_76047:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_76045:
	movq $0x1DCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_76010
.p2align 0x4
.long 0x65B
L_76018:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_405405
L_76019:
	movq %r14,0x38(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_76020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_405405:
L_76036:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_76037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4AF
L_76013:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76014
L_76015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_76016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76016
.p2align 0x4
.long 0x45F
L_76016:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_76014:
	movq $0x1DC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_76010
.p2align 0x4
.long 0x525
L_76057:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_76058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_76072:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x556
L_76020:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_76021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_76037:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xFB0
L_76058:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76059
L_76069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_76070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76070
.p2align 0x4
.long 0xFB9
L_76070:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_76059:
	movslq 0x18(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_405408
L_76061:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_405407
L_76062:
	movl 0x0(%r13),%r15d
	movl %r15d,0x40(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_76063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405407:
L_76033:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405408:
L_76024:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_160:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76073
L_76074:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76075
.p2align 0x4
.long 0x451
L_76075:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76073:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x103B
L_76021:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76022
L_76034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76035
.p2align 0x4
.long 0x103C
L_76035:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76022:
	movslq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_76024
L_76025:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_76033
L_76026:
	movl 0x0(%r13),%r15d
	movl %r15d,0x38(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_76027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1
bug_159:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76038
L_76039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76040
.p2align 0x4
.long 0x451
L_76040:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76038:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x557
L_76063:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_76064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3840
.p2align 0x4
.long 0x456
L_76027:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_76028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3840
.p2align 0x4
.long 0x466
L_76064:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76065
L_76066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_76067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76067
.p2align 0x4
.long 0x579
L_76067:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_76065:
	movq $0x1DD5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_76010
.p2align 0x4
.long 0x966
L_76028:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76029
L_76030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_76031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76031
.p2align 0x4
.long 0x52C
L_76031:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_76029:
	movq $0x1DCB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_76010
.text
.p2align 0x4
.globl primApp_5
.hidden primApp_5
primApp_5:
L_76078:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_76339
L_76079:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405460
L_76080:
	movq 0x20(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	andq $0xFF,%r13
	cmpq $0x1,%r13
	je L_405443
	cmpq $0x2,%r13
	je L_405441
	cmpq $0x3,%r13
	je L_405439
	cmpq $0x5,%r13
	je L_405437
	cmpq $0x6,%r13
	je L_405435
	cmpq $0x7,%r13
	je L_405432
	cmpq $0x45,%r13
	je L_405429
	cmpq $0x46,%r13
	je L_405427
	cmpq $0x47,%r13
	je L_405425
	cmpq $0x59,%r13
	je L_405423
	cmpq $0x5A,%r13
	je L_405421
	cmpq $0x5D,%r13
	je L_405419
	cmpq $0x5E,%r13
	je L_405418
L_76081:
	andq $0x3,%r15
	jnz L_76082
L_76095:
L_76082:
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_76083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1435
.p2align 0x4
L_405418:
L_76331:
	movq 0x8(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_76332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3839
.p2align 0x4
L_405419:
L_76324:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_405420
L_76326:
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
L_405420:
L_76098:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405421:
L_76313:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_76098
L_76315:
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_76316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
L_405423:
L_76302:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_76098
L_76304:
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_76305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
L_405425:
L_76237:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_76098
L_76239:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_76240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3839
.p2align 0x4
L_405427:
L_76231:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_76098
L_76233:
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
L_405429:
L_76222:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	cmpq $0x1,%r13
	jna L_76098
L_76224:
	movq 0x8(%r14),%r11
	movq %r11,0x20(%rbp)
	cmpq $0x0,%r13
	jna L_76098
L_76226:
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_76227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
L_405432:
L_76203:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	cmpq $0x0,%r13
	jna L_76098
L_76205:
	movq 0x0(%r14),%r11
	cmpq $0x2,%r13
	jna L_76098
L_76207:
	movq %r11,0x60(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	addq $0x60,%rbp
	leaq (L_76208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
L_405435:
L_76193:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_76098
L_76195:
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
L_405437:
L_76186:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_76098
L_76188:
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
L_405439:
L_76180:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_76098
L_76182:
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
L_405441:
L_76164:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_405442
L_76165:
	movq %r13,0x78(%rbp)
	movq 0x0(%r8),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_76166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_405442:
L_76175:
	movq %r10,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_76176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_405443:
L_76096:
	movq 0x18(%rbp),%r13
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r13)
	jna L_76098
L_76099:
	movq 0x0(%r13),%r11
	movq %r11,0x10(%rbp)
L_76100:
	movq 0x0(%rbp),%r13
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_405458
L_76102:
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_405457
L_76104:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_405456
L_76105:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x20(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_76107:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_76108
L_76153:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCFD,%r13
	jne L_76108
L_76154:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x48(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_405450
L_76108:
	movl 0x20(%rbp),%r13d
	incl %r13d
	movl %r13d,0x24(%rbp)
	jo L_405449
L_76110:
	cmpq $0x1,%r15
	je L_405444
L_76111:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x20(%rbp)
	jmp L_76107
.p2align 0x4
L_405444:
L_76112:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76113
L_76151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_76152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76152
.p2align 0x4
.long 0x103E
L_76152:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_76113:
	movl 0x24(%rbp),%ecx
L_76114:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_405447
L_76116:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_76118
L_76150:
	movl %ecx,0x0(%r15)
L_76118:
	movq $0x27D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x19FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_76119:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x8(%r14)
	je L_405445
L_76120:
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_76121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isSmall_0
.p2align 0x4
L_405445:
L_76124:
	movq $0x1079,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1077,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x10(%rbp)
array_0:
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_76125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3839
.p2align 0x4
L_405447:
L_76115:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405449:
L_76109:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405450:
L_76156:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76157
L_76161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_76162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76162
.p2align 0x4
.long 0x103F
L_76162:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_76157:
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_76115
L_76158:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_405451
L_76159:
	movq 0x38(%rbp),%r15
	jmp L_76119
.p2align 0x4
L_405451:
L_76160:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp L_76119
.p2align 0x4
L_405456:
L_76163:
	xorl %ecx,%ecx
	jmp L_76114
.p2align 0x4
L_405457:
L_76103:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405458:
L_76101:
	movq (globalObjptr+0x1FA8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405460:
L_76339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_76340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76340
.p2align 0x4
.long 0x63C
L_76340:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_76080
.p2align 0x4
.long 0x103D
L_76083:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movb 0x50(%rbp),%r15b
	testb %r15b,%r15b
	movb %r15b,0x10(%rbp)
	jnz L_76085
L_76086:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_405464
L_76089:
	cmpl $0x0,%r13d
	jl L_405463
L_76090:
	movl $0x0,0x14(%rbp)
loop_908:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_405462
L_76092:
	movslq %r15d,%r14
	movq 0x18(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_76093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sideEffect_0
.p2align 0x4
L_405462:
L_76085:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp loop_3840
.p2align 0x4
L_405463:
L_76094:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405464:
L_76088:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1045
L_76332:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_76098
L_76334:
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_76335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
.long 0x1
L_76327:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_405468
L_76328:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE4,%r15
	jne L_405467
L_76330:
	movq 0x0(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405467:
L_76329:
	movq (globalObjptr+0x1F88)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405468:
L_76127:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA96
L_76316:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_76127
L_76317:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE5,%r15
	je L_405471
	cmpq $0xEE9,%r15
	je L_405469
L_76318:
	movq (globalObjptr+0x1FA0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405469:
L_76320:
	movq 0x8(%r13),%r15
	movq 0x0(%r15),%r14
L_76321:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_76318
L_76322:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA870)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x8,%rbp
	leaq (L_76323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp constToEltLength_0
.p2align 0x4
L_405471:
L_76319:
	movq 0x0(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA96
L_76305:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_76127
L_76306:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE5,%r15
	je L_405475
	cmpq $0xEE9,%r15
	je L_405473
L_76307:
	movq (globalObjptr+0x1F98)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405473:
L_76309:
	movq 0x8(%r13),%r15
	movq 0x0(%r15),%r14
L_76310:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_76307
L_76311:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA868)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x8,%rbp
	leaq (L_76312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp constToEltLength_0
.p2align 0x4
L_405475:
L_76308:
	movq 0x8(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1042
L_76240:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_76241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
.long 0x1
L_76234:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_76127
L_76235:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE7,%r15
	jne L_405477
L_76236:
	movq 0x0(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405477:
L_76229:
	movq (globalObjptr+0x1F80)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C9
L_76227:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_76127
L_76228:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE7,%r15
	jne L_76229
L_76230:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (unit_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
.long 0x7C9
L_76208:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_76127
L_76209:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEEA,%r15
	jne L_405481
L_76210:
	movq 0x8(%r13),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (unit_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
L_405481:
L_76191:
	movq (globalObjptr+0x1F70)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_76196:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76197
L_76201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76202
.p2align 0x4
.long 0x451
L_76202:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76197:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_76127
L_76198:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEEA,%r15
	jne L_405483
L_76200:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq $0x1DCB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1003,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x1005,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x2889,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405483:
L_76199:
	movq (globalObjptr+0x1FB8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_76189:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_76127
L_76190:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEEA,%r15
	jne L_76191
L_76192:
	movq 0x8(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_76183:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_76127
L_76184:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEEA,%r15
	jne L_405488
L_76185:
	movq 0x10(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405488:
L_76129:
	movq (globalObjptr+0x1F78)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1040
L_76166:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_76167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_76176:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x73A
L_76121:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76122
L_76147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76148
.p2align 0x4
.long 0xE88
L_76148:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76122:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_76124
L_76146:
	movq $0x6F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1079,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1077,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x10(%rbp)
	jmp array_0
.p2align 0x4
.long 0x80B
L_76125:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_76126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
.long 0x103D
L_76093:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	incl 0x14(%rbp)
	jmp loop_908
.p2align 0x4
.long 0x6FF
L_76335:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_76127
L_76336:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE4,%r15
	jne L_76329
L_76337:
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_76338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
.long 0x1
L_76323:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_76312:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1043
L_76241:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_76127
L_76242:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE7,%r15
	jne L_76229
L_76243:
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_76244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
.long 0x61B
unit_0:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq $0x1,0x60(%rbp)
	movl $0x0,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_76211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_25
.p2align 0x4
.long 0x1040
L_76167:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76168
L_76173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_76174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76174
.p2align 0x4
.long 0x1041
L_76174:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_76168:
	movslq 0x10(%rbp),%r15
	movq 0x60(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_76098
L_76170:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_405496
L_76171:
	movq %r13,0x20(%rbp)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1079,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movq $0x1077,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x18(%rbp)
	jmp array_0
.p2align 0x4
L_405496:
L_76172:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_161:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76177
L_76178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76179
.p2align 0x4
.long 0x451
L_76179:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76177:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A7
L_76126:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_76127
L_76128:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEEA,%r15
	jne L_76129
L_76130:
	movq 0x10(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_76131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
.long 0x459
L_76338:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8E3
L_76244:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76246
L_76300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_76301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76301
.p2align 0x4
.long 0x1044
L_76301:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_76246:
	movq 0x0(%rbp),%r13
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_76101
L_76247:
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_76103
L_76248:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_405514
L_76249:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x28(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_76251:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_76252
L_76289:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCFD,%r13
	jne L_76252
L_76290:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x48(%rbp)
	je L_405508
L_76252:
	movl 0x28(%rbp),%r13d
	incl %r13d
	movl %r13d,0x2C(%rbp)
	jo L_76109
L_76253:
	cmpq $0x1,%r15
	je L_405502
L_76254:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x28(%rbp)
	jmp L_76251
.p2align 0x4
L_405502:
L_76255:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76256
L_76287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_76288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76288
.p2align 0x4
.long 0x835
L_76288:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_76256:
	movl 0x2C(%rbp),%ecx
L_76257:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_76115
L_76258:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_76260
L_76286:
	movl %ecx,0x0(%r15)
L_76260:
	movq $0x27D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x13DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x19FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_76261:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x8(%r14)
	je L_405503
L_76262:
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_76263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isSmall_0
.p2align 0x4
L_405503:
L_76266:
	movq $0x1073,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x20(%rbp)
	movq $0x1071,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x28(%rbp)
L_76267:
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_76268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
L_405508:
L_76292:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76293
L_76297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76298
.p2align 0x4
.long 0x75B
L_76298:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76293:
	movl 0x28(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_76115
L_76294:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_405509
L_76295:
	movq 0x30(%rbp),%r15
	jmp L_76261
.p2align 0x4
L_405509:
L_76296:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r15
	jmp L_76261
.p2align 0x4
L_405514:
L_76299:
	xorl %ecx,%ecx
	jmp L_76257
.p2align 0x4
.long 0x61B
L_76211:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76212
L_76220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_76221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76221
.p2align 0x4
.long 0x61C
L_76221:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_76212:
	movq $0x1DCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_76088
L_76214:
	movl %r13d,0x78(%rbp)
	movq $0x388B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_76215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x4E2
L_76131:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_76132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
.long 0x490
L_76263:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76264
L_76283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_76284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76284
.p2align 0x4
.long 0x45E
L_76284:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_76264:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_76266
L_76282:
	movq $0x6F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x27D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1073,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1071,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x28(%rbp)
	jmp L_76267
.p2align 0x4
.long 0x71D
L_76268:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76269
L_76280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76281
.p2align 0x4
.long 0x71F
L_76281:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76269:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_76127
L_76270:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE7,%r15
	jne L_405525
L_76272:
	movq 0x8(%r13),%r15
	movq 0x20(%rbp),%r14
	cmpq %r14,0x0(%r15)
	je L_76276
L_76273:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_405523
	cmpq $0x2,%r13
	je L_405522
L_76274:
	movq 0x8(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x27CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_76275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3841
.p2align 0x4
L_405522:
L_76278:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x27CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_76276:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405523:
L_76277:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_76275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp makeUnknown_0
.p2align 0x4
L_405525:
L_76271:
	movq (globalObjptr+0x1FB0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F5
L_76215:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_76216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
.long 0x4E2
L_76132:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76133
L_76144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_76145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76145
.p2align 0x4
.long 0x51F
L_76145:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_76133:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_76127
L_76134:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEEA,%r15
	jne L_405531
L_76136:
	movq 0x0(%r13),%r15
	movq 0x10(%rbp),%r14
	cmpq 0x0(%r15),%r14
	je L_76140
L_76137:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_405529
	cmpq $0x2,%r13
	je L_405528
L_76138:
	movq %r13,0x40(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x27CD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	addq $0x38,%rbp
	leaq (L_76139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3842
.p2align 0x4
L_405528:
L_76142:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x27CD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_76140:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405529:
L_76141:
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_76139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp makeUnknown_1
.p2align 0x4
L_405531:
L_76135:
	movq (globalObjptr+0x1FC0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_76275:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_76276
.p2align 0x4
.long 0x79A
L_76216:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76217
L_76218:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_76219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76219
.p2align 0x4
.long 0xEA3
L_76219:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_76217:
	movq $0x1003,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x1005,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2889,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_76139:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_76140
